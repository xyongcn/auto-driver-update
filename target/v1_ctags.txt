_LINUX_MODULE_H  macro  include/linux/module.h  2  #define _LINUX_MODULE_H
MODULE_SIG_STRING  macro  include/linux/module.h  25  #define MODULE_SIG_STRING "~Module signature appended~\n"
MODULE_SUPPORTED_DEVICE  macro  include/linux/module.h  28  #define MODULE_SUPPORTED_DEVICE(name)
MODULE_NAME_LEN  macro  include/linux/module.h  30  #define MODULE_NAME_LEN MAX_PARAM_PREFIX_LEN
modversion_info  struct  include/linux/module.h  32  struct modversion_info
module_kobject  struct  include/linux/module.h  40  struct module_kobject {
module_attribute  struct  include/linux/module.h  47  struct module_attribute {
module_version_attribute  struct  include/linux/module.h  58  struct module_version_attribute {
__modver_version_show  prototype  include/linux/module.h  65  extern ssize_t __modver_version_show(struct module_attribute *,struct module_kobject *, char *);
init_module  prototype  include/linux/module.h  70  extern int init_module(void);
cleanup_module  prototype  include/linux/module.h  71  extern void cleanup_module(void);
search_extable  prototype  include/linux/module.h  79  search_extable(const struct exception_table_entry *first,const struct exception_table_entry *last,unsigned long value);
sort_extable  prototype  include/linux/module.h  81  void sort_extable(struct exception_table_entry *start,struct exception_table_entry *finish);
sort_main_extable  prototype  include/linux/module.h  82  void sort_main_extable(void);
trim_init_extable  prototype  include/linux/module.h  83  void trim_init_extable(struct module *m);
MODULE_GENERIC_TABLE  macro  include/linux/module.h  91  #define MODULE_GENERIC_TABLE(gtype,name)
MODULE_INFO  macro  include/linux/module.h  95  #define MODULE_INFO(tag,info) __MODULE_INFO(tag,tag,info)
MODULE_ALIAS  macro  include/linux/module.h  98  #define MODULE_ALIAS(_alias) MODULE_INFO(alias,_alias)
MODULE_LICENSE  macro  include/linux/module.h  128  #define MODULE_LICENSE(_license) MODULE_INFO(license,_license)
MODULE_AUTHOR  macro  include/linux/module.h  134  #define MODULE_AUTHOR(_author) MODULE_INFO(author,_author)
MODULE_DESCRIPTION  macro  include/linux/module.h  137  #define MODULE_DESCRIPTION(_description) MODULE_INFO(description,_description)
MODULE_DEVICE_TABLE  macro  include/linux/module.h  140  #define MODULE_DEVICE_TABLE(type,name) MODULE_GENERIC_TABLE(type##_device,name)
MODULE_VERSION  macro  include/linux/module.h  174  #define MODULE_VERSION(_version) static struct module_version_attribute ___modver_attr = { .mattr	= { .attr	= { .name	= "version", .mode	= S_IRUGO, }, .show	= __modver_version_show, }, .module_name	= KBUILD_MODNAME, .version	= _version, }; static const struct module_version_attribute __used __attribute__ ((__section__ ("__modver"))) * __moduleparam_const __modver_attr = &___modver_attr
MODULE_FIRMWARE  macro  include/linux/module.h  180  #define MODULE_FIRMWARE(_firmware) MODULE_INFO(firmware,_firmware)
search_exception_tables  prototype  include/linux/module.h  183  const struct exception_table_entry *search_exception_tables(unsigned long add);
__symbol_get  prototype  include/linux/module.h  191  void *__symbol_get(const char *symbol);
__symbol_get_gpl  prototype  include/linux/module.h  192  void *__symbol_get_gpl(const char *symbol);
symbol_get  macro  include/linux/module.h  547  #define symbol_get(x) ({ extern typeof(x) x __attribute__((weak)); &(x); })
module_use  struct  include/linux/module.h  196  struct module_use {
module_state  enum  include/linux/module.h  202  enum module_state {
module_ref  struct  include/linux/module.h  218  struct module_ref {
__attribute  prototype  include/linux/module.h  221  } __attribute((aligned(2 * sizeof(unsigned long))));
module  struct  include/linux/module.h  223  struct module
MODULE_ARCH_INIT  macro  include/linux/module.h  380  #define MODULE_ARCH_INIT {}
module_is_live  function  include/linux/module.h  388  static inline int module_is_live(struct module *mod)
__module_text_address  function  include/linux/module.h  526  static inline struct module *__module_text_address(unsigned long addr)
__module_address  function  include/linux/module.h  521  static inline struct module *__module_address(unsigned long addr)
is_module_address  function  include/linux/module.h  531  static inline bool is_module_address(unsigned long addr)
is_module_percpu_address  function  include/linux/module.h  536  static inline bool is_module_percpu_address(unsigned long addr)
is_module_text_address  function  include/linux/module.h  541  static inline bool is_module_text_address(unsigned long addr)
within_module_core  function  include/linux/module.h  399  static inline int within_module_core(unsigned long addr,struct module *mod)
within_module_init  function  include/linux/module.h  405  static inline int within_module_init(unsigned long addr,struct module *mod)
find_module  prototype  include/linux/module.h  412  struct module *find_module(const char *name);
symsearch  struct  include/linux/module.h  414  struct symsearch {
find_symbol  prototype  include/linux/module.h  430  const struct kernel_symbol *find_symbol(const char *name,struct module **owner,const unsigned long **crc,bool gplok,bool warn);
each_symbol_section  prototype  include/linux/module.h  435  bool each_symbol_section(bool (*fn)(const struct symsearch *arr,struct module *owner,void *data), void *data);
module_get_kallsym  function  include/linux/module.h  588  static inline int module_get_kallsym(unsigned int symnum,unsigned long *value,char *type, char *name,char *module_name, int *exported)
module_kallsyms_lookup_name  function  include/linux/module.h  593  static inline unsigned long module_kallsyms_lookup_name(const char *name)
module_kallsyms_on_each_symbol  function  include/linux/module.h  601  static inline int module_kallsyms_on_each_symbol(int (*fn)(void *,const char *,struct module *,unsigned long),void *data)
__module_put_and_exit  prototype  include/linux/module.h  449  extern void __module_put_and_exit(struct module *mod,long code)
module_put_and_exit  macro  include/linux/module.h  617  #define module_put_and_exit(code) do_exit(code)
module_refcount  prototype  include/linux/module.h  454  unsigned long module_refcount(struct module *mod);
__symbol_put  prototype  include/linux/module.h  455  void __symbol_put(const char *symbol);
symbol_put  macro  include/linux/module.h  548  #define symbol_put(x) do { } while(0)
symbol_put_addr  macro  include/linux/module.h  549  #define symbol_put_addr(x) do { } while(0)
__module_get  function  include/linux/module.h  551  static inline void __module_get(struct module *module)
try_module_get  function  include/linux/module.h  555  static inline int try_module_get(struct module *module)
module_put  function  include/linux/module.h  560  static inline void module_put(struct module *module)
ref_module  prototype  include/linux/module.h  484  int ref_module(struct module *a,struct module *b);
module_name  macro  include/linux/module.h  564  #define module_name(mod) "kernel"
module_address_lookup  function  include/linux/module.h  571  static inline const char *module_address_lookup(unsigned long addr,unsigned long *symbolsize,unsigned long *offset,char **modname,char *namebuf)
lookup_module_symbol_name  function  include/linux/module.h  576  static inline int lookup_module_symbol_name(unsigned long addr,char *symname)
lookup_module_symbol_attrs  function  include/linux/module.h  581  static inline int lookup_module_symbol_attrs(unsigned long addr,unsigned long *size,unsigned long *offset,char *modname,char *name)
search_module_extables  function  include/linux/module.h  516  search_module_extables(unsigned long addr)
register_module_notifier  function  include/linux/module.h  606  static inline int register_module_notifier(struct notifier_block * nb)
unregister_module_notifier  function  include/linux/module.h  612  static inline int unregister_module_notifier(struct notifier_block * nb)
print_modules  function  include/linux/module.h  619  static inline void print_modules(void)
symbol_request  macro  include/linux/module.h  630  #define symbol_request(x) try_then_request_module(symbol_get(x),"symbol:" #x)
__MODULE_STRING  macro  include/linux/module.h  634  #define __MODULE_STRING(x) __stringify(x)
set_all_modules_text_rw  function  include/linux/module.h  640  static inline void set_all_modules_text_rw(void) { }
set_all_modules_text_ro  function  include/linux/module.h  641  static inline void set_all_modules_text_ro(void) { }
module_bug_finalize  function  include/linux/module.h  653  static inline void module_bug_finalize(const Elf_Ehdr *hdr,const Elf_Shdr *sechdrs,struct module *mod)
module_bug_cleanup  function  include/linux/module.h  656  static inline void module_bug_cleanup(struct module *mod) {}
_LINUX_KERNEL_H  macro  include/linux/kernel.h  2  #define _LINUX_KERNEL_H
USHRT_MAX  macro  include/linux/kernel.h  18  #define USHRT_MAX ((u16)(~0U))
SHRT_MAX  macro  include/linux/kernel.h  19  #define SHRT_MAX ((s16)(USHRT_MAX>>1))
SHRT_MIN  macro  include/linux/kernel.h  20  #define SHRT_MIN ((s16)(-SHRT_MAX - 1))
INT_MAX  macro  include/linux/kernel.h  21  #define INT_MAX ((int)(~0U>>1))
INT_MIN  macro  include/linux/kernel.h  22  #define INT_MIN (-INT_MAX - 1)
UINT_MAX  macro  include/linux/kernel.h  23  #define UINT_MAX (~0U)
LONG_MAX  macro  include/linux/kernel.h  24  #define LONG_MAX ((long)(~0UL>>1))
LONG_MIN  macro  include/linux/kernel.h  25  #define LONG_MIN (-LONG_MAX - 1)
ULONG_MAX  macro  include/linux/kernel.h  26  #define ULONG_MAX (~0UL)
LLONG_MAX  macro  include/linux/kernel.h  27  #define LLONG_MAX ((long long)(~0ULL>>1))
LLONG_MIN  macro  include/linux/kernel.h  28  #define LLONG_MIN (-LLONG_MAX - 1)
ULLONG_MAX  macro  include/linux/kernel.h  29  #define ULLONG_MAX (~0ULL)
SIZE_MAX  macro  include/linux/kernel.h  30  #define SIZE_MAX (~(size_t)0)
STACK_MAGIC  macro  include/linux/kernel.h  32  #define STACK_MAGIC 0xdeadbeef
REPEAT_BYTE  macro  include/linux/kernel.h  34  #define REPEAT_BYTE(x) ((~0ul / 0xff) * (x))
ALIGN  macro  include/linux/linkage.h  57  #define ALIGN __ALIGN
__ALIGN_MASK  macro  include/linux/kernel.h  37  #define __ALIGN_MASK(x,mask) __ALIGN_KERNEL_MASK((x),(mask))
PTR_ALIGN  macro  include/linux/kernel.h  38  #define PTR_ALIGN(p,a) ((typeof(p))ALIGN((unsigned long)(p),(a)))
IS_ALIGNED  macro  include/linux/kernel.h  39  #define IS_ALIGNED(x,a) (((x) & ((typeof(x))(a) - 1)) == 0)
ARRAY_SIZE  macro  include/linux/kernel.h  41  #define ARRAY_SIZE(arr) (sizeof(arr) / sizeof((arr)[0]) + __must_be_array(arr))
__round_mask  macro  include/linux/kernel.h  49  #define __round_mask(x,y) ((__typeof__(x))((y)-1))
round_up  macro  include/linux/kernel.h  50  #define round_up(x,y) ((((x)-1) | __round_mask(x,y))+1)
round_down  macro  include/linux/kernel.h  51  #define round_down(x,y) ((x) & ~__round_mask(x,y))
FIELD_SIZEOF  macro  include/linux/kernel.h  53  #define FIELD_SIZEOF(t,f) (sizeof(((t*)0)->f))
DIV_ROUND_UP  macro  include/linux/kernel.h  54  #define DIV_ROUND_UP(n,d) (((n) + (d) - 1) / (d))
DIV_ROUND_UP_ULL  macro  include/linux/kernel.h  56  #define DIV_ROUND_UP_ULL(ll,d) ({ unsigned long long _tmp = (ll)+(d)-1; do_div(_tmp, d); _tmp; })
DIV_ROUND_UP_SECTOR_T  macro  include/linux/kernel.h  61  # define DIV_ROUND_UP_SECTOR_T(ll,d) DIV_ROUND_UP(ll,d)
roundup  macro  include/linux/kernel.h  70  #define roundup(x,y) ( { const typeof(y) __y = y; (((x) + (__y - 1)) / __y) * __y; } )
rounddown  macro  include/linux/kernel.h  76  #define rounddown(x,y) ( { typeof(x) __x = (x); __x - (__x % (y)); } )
DIV_ROUND_CLOSEST  macro  include/linux/kernel.h  92  #define DIV_ROUND_CLOSEST(x,divisor)( { typeof(x) __x = x; typeof(divisor) __d = divisor; (((typeof(x))-1) > 0 || ((typeof(divisor))-1) > 0 || (__x) > 0) ? (((__x) + ((__d) / 2)) / (__d)) : (((__x) - ((__d) / 2)) / (__d)); } )
mult_frac  macro  include/linux/kernel.h  104  #define mult_frac(x,numer,denom)( { typeof(x) quot = (x) / (denom); typeof(x) rem  = (x) % (denom); (quot * (numer)) + ((rem * (numer)) / (denom)); } )
_RET_IP_  macro  include/linux/kernel.h  107  #define _RET_IP_ (unsigned long)__builtin_return_address(0)
_THIS_IP_  macro  include/linux/kernel.h  108  #define _THIS_IP_ ({ __label__ __here; __here: (unsigned long)&&__here; })
sector_div  macro  include/linux/kernel.h  121  # define sector_div(n,b)( { int _res; _res = (n) % (b); (n) /= (b); _res; } )
upper_32_bits  macro  include/linux/kernel.h  132  #define upper_32_bits(n) ((u32)(((n) >> 16) >> 16))
lower_32_bits  macro  include/linux/kernel.h  138  #define lower_32_bits(n) ((u32)(n))
_cond_resched  prototype  include/linux/sched.h  2647  extern int _cond_resched(void);
might_resched  macro  include/linux/kernel.h  148  # define might_resched() do { } while (0)
__might_sleep  function  include/linux/kernel.h  167  static inline void __might_sleep(const char *file,int line,int preempt_offset) { }
might_sleep  macro  include/linux/kernel.h  168  # define might_sleep() do { might_resched(); } while (0)
might_sleep_if  macro  include/linux/kernel.h  171  #define might_sleep_if(cond) do { if (cond) might_sleep(); } while (0)
abs  macro  include/linux/kernel.h  189  #define abs(x) ({ long ret; if (sizeof(x) == sizeof(long)) { long __x = (x); ret = (__x < 0) ? -__x : __x; } else { int __x = (x); ret = (__x < 0) ? -__x : __x; } ret; })
abs64  macro  include/linux/kernel.h  194  #define abs64(x) ({ s64 __x = (x); (__x < 0) ? -__x : __x; })
might_fault  function  include/linux/kernel.h  199  static inline void might_fault(void)
oops_enter  prototype  include/linux/kernel.h  210  extern void oops_enter(void);
oops_exit  prototype  include/linux/kernel.h  211  extern void oops_exit(void);
print_oops_end_marker  prototype  include/linux/kernel.h  212  void print_oops_end_marker(void);
oops_may_print  prototype  include/linux/kernel.h  213  extern int oops_may_print(void);
_kstrtoul  prototype  include/linux/kernel.h  220  int __must_check _kstrtoul(const char *s,unsigned int base,unsigned long *res);
_kstrtol  prototype  include/linux/kernel.h  221  int __must_check _kstrtol(const char *s,unsigned int base,long *res);
kstrtoull  prototype  include/linux/kernel.h  223  int __must_check kstrtoull(const char *s,unsigned int base,unsigned long long *res);
kstrtoll  prototype  include/linux/kernel.h  224  int __must_check kstrtoll(const char *s,unsigned int base,long long *res);
kstrtoul  function  include/linux/kernel.h  242  static inline int __must_check kstrtoul(const char *s,unsigned int base,unsigned long *res)
kstrtol  function  include/linux/kernel.h  271  static inline int __must_check kstrtol(const char *s,unsigned int base,long *res)
kstrtouint  prototype  include/linux/kernel.h  284  int __must_check kstrtouint(const char *s,unsigned int base,unsigned int *res);
kstrtoint  prototype  include/linux/kernel.h  285  int __must_check kstrtoint(const char *s,unsigned int base,int *res);
kstrtou64  function  include/linux/kernel.h  287  static inline int __must_check kstrtou64(const char *s,unsigned int base,u64 *res)
kstrtos64  function  include/linux/kernel.h  292  static inline int __must_check kstrtos64(const char *s,unsigned int base,s64 *res)
kstrtou32  function  include/linux/kernel.h  297  static inline int __must_check kstrtou32(const char *s,unsigned int base,u32 *res)
kstrtos32  function  include/linux/kernel.h  302  static inline int __must_check kstrtos32(const char *s,unsigned int base,s32 *res)
kstrtou16  prototype  include/linux/kernel.h  307  int __must_check kstrtou16(const char *s,unsigned int base,u16 *res);
kstrtos16  prototype  include/linux/kernel.h  308  int __must_check kstrtos16(const char *s,unsigned int base,s16 *res);
kstrtou8  prototype  include/linux/kernel.h  309  int __must_check kstrtou8(const char *s,unsigned int base,u8 *res);
kstrtos8  prototype  include/linux/kernel.h  310  int __must_check kstrtos8(const char *s,unsigned int base,s8 *res);
kstrtoull_from_user  prototype  include/linux/kernel.h  312  int __must_check kstrtoull_from_user(const char __user *s,size_t count,unsigned int base,unsigned long long *res);
kstrtoll_from_user  prototype  include/linux/kernel.h  313  int __must_check kstrtoll_from_user(const char __user *s,size_t count,unsigned int base,long long *res);
kstrtoul_from_user  prototype  include/linux/kernel.h  314  int __must_check kstrtoul_from_user(const char __user *s,size_t count,unsigned int base,unsigned long *res);
kstrtol_from_user  prototype  include/linux/kernel.h  315  int __must_check kstrtol_from_user(const char __user *s,size_t count,unsigned int base,long *res);
kstrtouint_from_user  prototype  include/linux/kernel.h  316  int __must_check kstrtouint_from_user(const char __user *s,size_t count,unsigned int base,unsigned int *res);
kstrtoint_from_user  prototype  include/linux/kernel.h  317  int __must_check kstrtoint_from_user(const char __user *s,size_t count,unsigned int base,int *res);
kstrtou16_from_user  prototype  include/linux/kernel.h  318  int __must_check kstrtou16_from_user(const char __user *s,size_t count,unsigned int base,u16 *res);
kstrtos16_from_user  prototype  include/linux/kernel.h  319  int __must_check kstrtos16_from_user(const char __user *s,size_t count,unsigned int base,s16 *res);
kstrtou8_from_user  prototype  include/linux/kernel.h  320  int __must_check kstrtou8_from_user(const char __user *s,size_t count,unsigned int base,u8 *res);
kstrtos8_from_user  prototype  include/linux/kernel.h  321  int __must_check kstrtos8_from_user(const char __user *s,size_t count,unsigned int base,s8 *res);
kstrtou64_from_user  function  include/linux/kernel.h  323  static inline int __must_check kstrtou64_from_user(const char __user *s,size_t count,unsigned int base,u64 *res)
kstrtos64_from_user  function  include/linux/kernel.h  328  static inline int __must_check kstrtos64_from_user(const char __user *s,size_t count,unsigned int base,s64 *res)
kstrtou32_from_user  function  include/linux/kernel.h  333  static inline int __must_check kstrtou32_from_user(const char __user *s,size_t count,unsigned int base,u32 *res)
kstrtos32_from_user  function  include/linux/kernel.h  338  static inline int __must_check kstrtos32_from_user(const char __user *s,size_t count,unsigned int base,s32 *res)
simple_strtoul  prototype  include/linux/kernel.h  345  extern unsigned long simple_strtoul(const char *,char **,unsigned int);
simple_strtol  prototype  include/linux/kernel.h  346  extern long simple_strtol(const char *,char **,unsigned int);
simple_strtoull  prototype  include/linux/kernel.h  347  extern unsigned long long simple_strtoull(const char *,char **,unsigned int);
simple_strtoll  prototype  include/linux/kernel.h  348  extern long long simple_strtoll(const char *,char **,unsigned int);
strict_strtoul  macro  include/linux/kernel.h  349  #define strict_strtoul kstrtoul
strict_strtol  macro  include/linux/kernel.h  350  #define strict_strtol kstrtol
strict_strtoull  macro  include/linux/kernel.h  351  #define strict_strtoull kstrtoull
strict_strtoll  macro  include/linux/kernel.h  352  #define strict_strtoll kstrtoll
num_to_str  prototype  include/linux/kernel.h  354  extern int num_to_str(char *buf,int size,unsigned long long num);
sprintf  prototype  include/linux/kernel.h  358  extern __printf(2,3) int sprintf(char *buf,const char * fmt,...);
vsprintf  prototype  include/linux/kernel.h  359  extern __printf(2,0) int vsprintf(char *buf,const char *,va_list);
snprintf  prototype  include/linux/kernel.h  361  int snprintf(char *buf,size_t size,const char *fmt,...);
vsnprintf  prototype  include/linux/kernel.h  363  int vsnprintf(char *buf,size_t size,const char *fmt,va_list args);
scnprintf  prototype  include/linux/kernel.h  365  int scnprintf(char *buf,size_t size,const char *fmt,...);
vscnprintf  prototype  include/linux/kernel.h  367  int vscnprintf(char *buf,size_t size,const char *fmt,va_list args);
kasprintf  prototype  include/linux/kernel.h  369  char *kasprintf(gfp_t gfp,const char *fmt,...);
kvasprintf  prototype  include/linux/kernel.h  370  extern char *kvasprintf(gfp_t gfp,const char *fmt,va_list args);
sscanf  prototype  include/linux/kernel.h  373  int sscanf(const char *,const char *,...);
vsscanf  prototype  include/linux/kernel.h  375  int vsscanf(const char *,const char *,va_list);
get_option  prototype  include/linux/kernel.h  377  extern int get_option(char **str,int *pint);
get_options  prototype  include/linux/kernel.h  378  extern char *get_options(const char *str,int nints,int *ints);
memparse  prototype  include/linux/kernel.h  379  extern unsigned long long memparse(const char *ptr,char **retptr);
core_kernel_text  prototype  include/linux/kernel.h  381  extern int core_kernel_text(unsigned long addr);
core_kernel_data  prototype  include/linux/kernel.h  382  extern int core_kernel_data(unsigned long addr);
__kernel_text_address  prototype  include/linux/kernel.h  383  extern int __kernel_text_address(unsigned long addr);
kernel_text_address  prototype  include/linux/kernel.h  384  extern int kernel_text_address(unsigned long addr);
func_ptr_is_kernel_text  prototype  include/linux/kernel.h  385  extern int func_ptr_is_kernel_text(void *ptr);
session_of_pgrp  prototype  include/linux/kernel.h  388  extern struct pid *session_of_pgrp(struct pid *pgrp);
int_sqrt  prototype  include/linux/kernel.h  390  unsigned long int_sqrt(unsigned long);
bust_spinlocks  prototype  include/linux/kernel.h  392  extern void bust_spinlocks(int yes);
wake_up_klogd  prototype  include/linux/kernel.h  393  extern void wake_up_klogd(void);
print_tainted  prototype  include/linux/kernel.h  400  extern const char *print_tainted(void);
add_taint  prototype  include/linux/kernel.h  401  extern void add_taint(unsigned flag);
test_taint  prototype  include/linux/kernel.h  402  extern int test_taint(unsigned flag);
get_taint  prototype  include/linux/kernel.h  403  extern unsigned long get_taint(void);
system_states  enum  include/linux/kernel.h  409  extern enum system_states {
TAINT_PROPRIETARY_MODULE  macro  include/linux/kernel.h  417  #define TAINT_PROPRIETARY_MODULE 0
TAINT_FORCED_MODULE  macro  include/linux/kernel.h  418  #define TAINT_FORCED_MODULE 1
TAINT_UNSAFE_SMP  macro  include/linux/kernel.h  419  #define TAINT_UNSAFE_SMP 2
TAINT_FORCED_RMMOD  macro  include/linux/kernel.h  420  #define TAINT_FORCED_RMMOD 3
TAINT_MACHINE_CHECK  macro  include/linux/kernel.h  421  #define TAINT_MACHINE_CHECK 4
TAINT_BAD_PAGE  macro  include/linux/kernel.h  422  #define TAINT_BAD_PAGE 5
TAINT_USER  macro  include/linux/kernel.h  423  #define TAINT_USER 6
TAINT_DIE  macro  include/linux/kernel.h  424  #define TAINT_DIE 7
TAINT_OVERRIDDEN_ACPI_TABLE  macro  include/linux/kernel.h  425  #define TAINT_OVERRIDDEN_ACPI_TABLE 8
TAINT_WARN  macro  include/linux/kernel.h  426  #define TAINT_WARN 9
TAINT_CRAP  macro  include/linux/kernel.h  427  #define TAINT_CRAP 10
TAINT_FIRMWARE_WORKAROUND  macro  include/linux/kernel.h  428  #define TAINT_FIRMWARE_WORKAROUND 11
TAINT_OOT_MODULE  macro  include/linux/kernel.h  429  #define TAINT_OOT_MODULE 12
hex_asc_lo  macro  include/linux/kernel.h  432  #define hex_asc_lo(x) hex_asc[((x) & 0x0f)]
hex_asc_hi  macro  include/linux/kernel.h  433  #define hex_asc_hi(x) hex_asc[((x) & 0xf0) >> 4]
hex_byte_pack  function  include/linux/kernel.h  435  static inline char *hex_byte_pack(char *buf,u8 byte)
pack_hex_byte  function  include/linux/kernel.h  442  static inline char * __deprecated pack_hex_byte(char *buf,u8 byte)
hex_to_bin  prototype  include/linux/kernel.h  447  extern int hex_to_bin(char ch);
hex2bin  prototype  include/linux/kernel.h  448  extern int __must_check hex2bin(u8 *dst,const char *src,size_t count);
tracing_off_permanent  function  include/linux/kernel.h  473  static inline void tracing_off_permanent(void) { }
ftrace_dump_mode  enum  include/linux/kernel.h  476  enum ftrace_dump_mode {
tracing_on  function  include/linux/kernel.h  570  static inline void tracing_on(void) { }
tracing_off  function  include/linux/kernel.h  571  static inline void tracing_off(void) { }
tracing_is_on  function  include/linux/kernel.h  572  static inline int tracing_is_on(void) { return 0; }
tracing_start  function  include/linux/kernel.h  565  static inline void tracing_start(void) { }
tracing_stop  function  include/linux/kernel.h  566  static inline void tracing_stop(void) { }
ftrace_off_permanent  function  include/linux/kernel.h  567  static inline void ftrace_off_permanent(void) { }
____trace_printk_check_format  function  include/linux/kernel.h  492  void ____trace_printk_check_format(const char *fmt,...)
__trace_printk_check_format  macro  include/linux/kernel.h  499  #define __trace_printk_check_format(fmt,args...) do { if (0) ____trace_printk_check_format(fmt, ##args); } while (0)
trace_printk  function  include/linux/kernel.h  575  int trace_printk(const char *fmt,...)
__trace_bprintk  prototype  include/linux/kernel.h  533  int __trace_bprintk(unsigned long ip,const char *fmt,...);
__trace_printk  prototype  include/linux/kernel.h  536  int __trace_printk(unsigned long ip,const char *fmt,...);
trace_dump_stack  function  include/linux/kernel.h  568  static inline void trace_dump_stack(void) { }
ftrace_vprintk  function  include/linux/kernel.h  580  ftrace_vprintk(const char *fmt,va_list ap)
__ftrace_vbprintk  prototype  include/linux/kernel.h  558  __ftrace_vbprintk(unsigned long ip,const char *fmt,va_list ap);
__ftrace_vprintk  prototype  include/linux/kernel.h  561  __ftrace_vprintk(unsigned long ip,const char *fmt,va_list ap);
ftrace_dump  function  include/linux/kernel.h  584  static inline void ftrace_dump(enum ftrace_dump_mode oops_dump_mode) { }
min  macro  include/linux/kernel.h  596  #define min(x,y) ({ typeof(x) _min1 = (x); typeof(y) _min2 = (y); (void) (&_min1 == &_min2); _min1 < _min2 ? _min1 : _min2; })
max  macro  include/linux/kernel.h  602  #define max(x,y) ({ typeof(x) _max1 = (x); typeof(y) _max2 = (y); (void) (&_max1 == &_max2); _max1 > _max2 ? _max1 : _max2; })
min3  macro  include/linux/kernel.h  611  #define min3(x,y,z) ({ typeof(x) _min1 = (x); typeof(y) _min2 = (y); typeof(z) _min3 = (z); (void) (&_min1 == &_min2); (void) (&_min1 == &_min3); _min1 < _min2 ? (_min1 < _min3 ? _min1 : _min3) : (_min2 < _min3 ? _min2 : _min3); })
max3  macro  include/linux/kernel.h  620  #define max3(x,y,z) ({ typeof(x) _max1 = (x); typeof(y) _max2 = (y); typeof(z) _max3 = (z); (void) (&_max1 == &_max2); (void) (&_max1 == &_max3); _max1 > _max2 ? (_max1 > _max3 ? _max1 : _max3) : (_max2 > _max3 ? _max2 : _max3); })
min_not_zero  macro  include/linux/kernel.h  630  #define min_not_zero(x,y) ({ typeof(x) __x = (x); typeof(y) __y = (y); __x == 0 ? __y : ((__y == 0) ? __x : min(__x, __y)); })
clamp  macro  include/linux/kernel.h  648  #define clamp(val,min,max) ({ typeof(val) __val = (val); typeof(min) __min = (min); typeof(max) __max = (max); (void) (&__val == &__min); (void) (&__val == &__max); __val = __val < __min ? __min: __val; __val > __max ? __max: __val; })
min_t  macro  include/linux/kernel.h  659  #define min_t(type,x,y) ({ type __min1 = (x); type __min2 = (y); __min1 < __min2 ? __min1: __min2; })
max_t  macro  include/linux/kernel.h  664  #define max_t(type,x,y) ({ type __max1 = (x); type __max2 = (y); __max1 > __max2 ? __max1: __max2; })
clamp_t  macro  include/linux/kernel.h  681  #define clamp_t(type,val,min,max) ({ type __val = (val); type __min = (min); type __max = (max); __val = __val < __min ? __min: __val; __val > __max ? __max: __val; })
clamp_val  macro  include/linux/kernel.h  699  #define clamp_val(val,min,max) ({ typeof(val) __val = (val); typeof(val) __min = (min); typeof(val) __max = (max); __val = __val < __min ? __min: __val; __val > __max ? __max: __val; })
swap  macro  include/linux/kernel.h  706  #define swap(a,b) do { typeof(a) __tmp = (a); (a) = (b); (b) = __tmp; } while (0)
container_of  macro  include/linux/kernel.h  717  #define container_of(ptr,type,member) ({ const typeof( ((type *)0)->member ) *__mptr = (ptr); (type *)( (char *)__mptr - offsetof(type,member) );})
__FUNCTION__  macro  include/linux/kernel.h  720  #define __FUNCTION__ (__func__)
SYMBOL_PREFIX  macro  include/linux/kernel.h  726  #define SYMBOL_PREFIX ""
REBUILD_DUE_TO_FTRACE_MCOUNT_RECORD  macro  include/linux/kernel.h  731  # define REBUILD_DUE_TO_FTRACE_MCOUNT_RECORD
do_sysinfo  prototype  include/linux/kernel.h  734  extern int do_sysinfo(struct sysinfo *info);
_LINUX_SCHED_H  macro  include/linux/sched.h  2  #define _LINUX_SCHED_H
sched_param  struct  include/linux/sched.h  7  struct sched_param {
CLONE_KERNEL  macro  include/linux/sched.h  69  #define CLONE_KERNEL (CLONE_FS | CLONE_FILES | CLONE_SIGHAND)
get_avenrun  prototype  include/linux/sched.h  82  extern void get_avenrun(unsigned long *loads,unsigned long offset,int shift);
FSHIFT  macro  include/linux/sched.h  84  #define FSHIFT 11
FIXED_1  macro  include/linux/sched.h  85  #define FIXED_1 (1<<FSHIFT)
LOAD_FREQ  macro  include/linux/sched.h  86  #define LOAD_FREQ (5*HZ+1)
EXP_1  macro  include/linux/sched.h  87  #define EXP_1 1884
EXP_5  macro  include/linux/sched.h  88  #define EXP_5 2014
EXP_15  macro  include/linux/sched.h  89  #define EXP_15 2037
CALC_LOAD  macro  include/linux/sched.h  94  #define CALC_LOAD(load,exp,n) load *= exp; load += n*(FIXED_1-exp); load >>= FSHIFT;
nr_processes  prototype  include/linux/sched.h  99  extern int nr_processes(void);
nr_running  prototype  include/linux/sched.h  100  extern unsigned long nr_running(void);
nr_uninterruptible  prototype  include/linux/sched.h  101  extern unsigned long nr_uninterruptible(void);
nr_iowait  prototype  include/linux/sched.h  102  extern unsigned long nr_iowait(void);
nr_iowait_cpu  prototype  include/linux/sched.h  103  extern unsigned long nr_iowait_cpu(int cpu);
this_cpu_load  prototype  include/linux/sched.h  104  extern unsigned long this_cpu_load(void);
calc_global_load  prototype  include/linux/sched.h  107  extern void calc_global_load(unsigned long ticks);
update_cpu_load_nohz  prototype  include/linux/sched.h  108  extern void update_cpu_load_nohz(void);
task_migration_notifier  struct  include/linux/sched.h  111  struct task_migration_notifier {
register_task_migration_notifier  prototype  include/linux/sched.h  116  extern void register_task_migration_notifier(struct notifier_block *n);
get_parent_ip  prototype  include/linux/sched.h  118  extern unsigned long get_parent_ip(unsigned long addr);
dump_cpu_task  prototype  include/linux/sched.h  120  extern void dump_cpu_task(int cpu);
proc_sched_show_task  function  include/linux/sched.h  132  proc_sched_show_task(struct task_struct *p,struct seq_file *m)
proc_sched_set_task  function  include/linux/sched.h  135  static inline void proc_sched_set_task(struct task_struct *p)
print_cfs_rq  function  include/linux/sched.h  139  print_cfs_rq(struct seq_file *m,int cpu,struct cfs_rq *cfs_rq)
TASK_RUNNING  macro  include/linux/sched.h  154  #define TASK_RUNNING 0
TASK_INTERRUPTIBLE  macro  include/linux/sched.h  155  #define TASK_INTERRUPTIBLE 1
TASK_UNINTERRUPTIBLE  macro  include/linux/sched.h  156  #define TASK_UNINTERRUPTIBLE 2
__TASK_STOPPED  macro  include/linux/sched.h  157  #define __TASK_STOPPED 4
__TASK_TRACED  macro  include/linux/sched.h  158  #define __TASK_TRACED 8
EXIT_ZOMBIE  macro  include/linux/sched.h  160  #define EXIT_ZOMBIE 16
EXIT_DEAD  macro  include/linux/sched.h  161  #define EXIT_DEAD 32
TASK_DEAD  macro  include/linux/sched.h  163  #define TASK_DEAD 64
TASK_WAKEKILL  macro  include/linux/sched.h  164  #define TASK_WAKEKILL 128
TASK_WAKING  macro  include/linux/sched.h  165  #define TASK_WAKING 256
TASK_PARKED  macro  include/linux/sched.h  166  #define TASK_PARKED 512
TASK_STATE_MAX  macro  include/linux/sched.h  167  #define TASK_STATE_MAX 1024
TASK_STATE_TO_CHAR_STR  macro  include/linux/sched.h  169  #define TASK_STATE_TO_CHAR_STR "RSDTtZXxKWP"
TASK_KILLABLE  macro  include/linux/sched.h  175  #define TASK_KILLABLE (TASK_WAKEKILL | TASK_UNINTERRUPTIBLE)
TASK_STOPPED  macro  include/linux/sched.h  176  #define TASK_STOPPED (TASK_WAKEKILL | __TASK_STOPPED)
TASK_TRACED  macro  include/linux/sched.h  177  #define TASK_TRACED (TASK_WAKEKILL | __TASK_TRACED)
TASK_NORMAL  macro  include/linux/sched.h  180  #define TASK_NORMAL (TASK_INTERRUPTIBLE | TASK_UNINTERRUPTIBLE)
TASK_ALL  macro  include/linux/sched.h  181  #define TASK_ALL (TASK_NORMAL | __TASK_STOPPED | __TASK_TRACED)
TASK_REPORT  macro  include/linux/sched.h  186  #define TASK_REPORT (TASK_RUNNING | TASK_INTERRUPTIBLE | TASK_UNINTERRUPTIBLE | __TASK_STOPPED | __TASK_TRACED)
task_is_traced  macro  include/linux/sched.h  188  #define task_is_traced(task) ((task->state & __TASK_TRACED) != 0)
task_is_stopped  macro  include/linux/sched.h  189  #define task_is_stopped(task) ((task->state & __TASK_STOPPED) != 0)
task_is_dead  macro  include/linux/sched.h  190  #define task_is_dead(task) ((task)->exit_state != 0)
task_is_stopped_or_traced  macro  include/linux/sched.h  192  #define task_is_stopped_or_traced(task) ((task->state & (__TASK_STOPPED | __TASK_TRACED)) != 0)
task_contributes_to_load  macro  include/linux/sched.h  195  #define task_contributes_to_load(task) ((task->state & TASK_UNINTERRUPTIBLE) != 0 && (task->flags & PF_FROZEN) == 0)
__set_task_state  macro  include/linux/sched.h  198  #define __set_task_state(tsk,state_value) do { (tsk)->state = (state_value); } while (0)
set_task_state  macro  include/linux/sched.h  200  #define set_task_state(tsk,state_value) set_mb((tsk)->state, (state_value))
__set_current_state  macro  include/linux/sched.h  214  #define __set_current_state(state_value) do { current->state = (state_value); } while (0)
set_current_state  macro  include/linux/sched.h  216  #define set_current_state(state_value) set_mb(current->state, (state_value))
TASK_COMM_LEN  macro  include/linux/sched.h  219  #define TASK_COMM_LEN 16
lockdep_tasklist_lock_is_held  prototype  include/linux/sched.h  235  extern int lockdep_tasklist_lock_is_held(void);
sched_init  prototype  include/linux/sched.h  238  extern void sched_init(void);
sched_init_smp  prototype  include/linux/sched.h  239  extern void sched_init_smp(void);
schedule_tail  prototype  include/linux/sched.h  240  extern asmlinkage void schedule_tail(struct task_struct *prev);
init_idle  prototype  include/linux/sched.h  241  extern void init_idle(struct task_struct *idle,int cpu);
init_idle_bootup_task  prototype  include/linux/sched.h  242  extern void init_idle_bootup_task(struct task_struct *idle);
runqueue_is_locked  prototype  include/linux/sched.h  244  extern int runqueue_is_locked(int cpu);
nohz_balance_enter_idle  function  include/linux/sched.h  251  static inline void nohz_balance_enter_idle(int cpu) { }
set_cpu_sd_state_idle  function  include/linux/sched.h  252  static inline void set_cpu_sd_state_idle(void) { }
get_nohz_timer_target  prototype  include/linux/sched.h  249  extern int get_nohz_timer_target(void);
show_state_filter  prototype  include/linux/sched.h  258  extern void show_state_filter(unsigned long state_filter);
show_state  function  include/linux/sched.h  260  static inline void show_state(void)
show_regs  prototype  include/linux/sched.h  265  extern void show_regs(struct pt_regs *);
show_stack  prototype  include/linux/sched.h  272  extern void show_stack(struct task_struct *task,unsigned long *sp);
io_schedule  prototype  include/linux/sched.h  274  void io_schedule(void);
io_schedule_timeout  prototype  include/linux/sched.h  275  long io_schedule_timeout(long timeout);
cpu_init  prototype  arch/x86/include/asm/processor.h  741  extern void cpu_init(void);
trap_init  prototype  include/linux/sched.h  278  extern void trap_init(void);
update_process_times  prototype  include/linux/sched.h  279  extern void update_process_times(int user);
scheduler_tick  prototype  include/linux/sched.h  280  extern void scheduler_tick(void);
sched_show_task  prototype  include/linux/sched.h  282  extern void sched_show_task(struct task_struct *p);
touch_softlockup_watchdog  function  include/linux/sched.h  294  static inline void touch_softlockup_watchdog(void)
touch_softlockup_watchdog_sync  function  include/linux/sched.h  297  static inline void touch_softlockup_watchdog_sync(void)
touch_all_softlockup_watchdogs  function  include/linux/sched.h  300  static inline void touch_all_softlockup_watchdogs(void)
proc_dowatchdog_thresh  prototype  include/linux/sched.h  290  extern int proc_dowatchdog_thresh(struct ctl_table *table,int write,void __user *buffer,size_t *lenp, loff_t *ppos);
lockup_detector_init  function  include/linux/sched.h  303  static inline void lockup_detector_init(void)
proc_dohung_task_timeout_secs  prototype  include/linux/sched.h  315  extern int proc_dohung_task_timeout_secs(struct ctl_table *table,int write,void __user *buffer,size_t *lenp, loff_t *ppos);
__sched  macro  include/linux/sched.h  322  #define __sched __attribute__((__section__(".sched.text")))
in_sched_functions  prototype  include/linux/sched.h  328  extern int in_sched_functions(unsigned long addr);
MAX_SCHEDULE_TIMEOUT  macro  include/linux/sched.h  330  #define MAX_SCHEDULE_TIMEOUT LONG_MAX
schedule_timeout  prototype  include/linux/sched.h  331  extern signed long schedule_timeout(signed long timeout);
schedule_timeout_interruptible  prototype  include/linux/sched.h  332  extern signed long schedule_timeout_interruptible(signed long timeout);
schedule_timeout_killable  prototype  include/linux/sched.h  333  extern signed long schedule_timeout_killable(signed long timeout);
schedule_timeout_uninterruptible  prototype  include/linux/sched.h  334  extern signed long schedule_timeout_uninterruptible(signed long timeout);
schedule  prototype  include/linux/sched.h  335  asmlinkage void schedule(void);
schedule_preempt_disabled  prototype  include/linux/sched.h  336  extern void schedule_preempt_disabled(void);
mutex_spin_on_owner  prototype  include/linux/sched.h  337  extern int mutex_spin_on_owner(struct mutex *lock,struct task_struct *owner);
MAPCOUNT_ELF_CORE_MARGIN  macro  include/linux/sched.h  354  #define MAPCOUNT_ELF_CORE_MARGIN (5)
DEFAULT_MAX_MAP_COUNT  macro  include/linux/sched.h  355  #define DEFAULT_MAX_MAP_COUNT (USHRT_MAX - MAPCOUNT_ELF_CORE_MARGIN)
arch_pick_mmap_layout  function  include/linux/sched.h  373  static inline void arch_pick_mmap_layout(struct mm_struct *mm) {}
arch_get_unmapped_area  prototype  include/linux/sched.h  365  arch_get_unmapped_area(struct file *,unsigned long,unsigned long,unsigned long, unsigned long);
arch_get_unmapped_area_topdown  prototype  include/linux/sched.h  369  arch_get_unmapped_area_topdown(struct file *filp,unsigned long addr,unsigned long len, unsigned long pgoff,unsigned long flags);
arch_unmap_area  prototype  include/linux/sched.h  370  extern void arch_unmap_area(struct mm_struct *,unsigned long);
arch_unmap_area_topdown  prototype  include/linux/sched.h  371  extern void arch_unmap_area_topdown(struct mm_struct *,unsigned long);
set_dumpable  prototype  include/linux/sched.h  377  extern void set_dumpable(struct mm_struct *mm,int value);
get_dumpable  prototype  include/linux/sched.h  378  extern int get_dumpable(struct mm_struct *mm);
SUID_DUMPABLE_DISABLED  macro  include/linux/sched.h  381  #define SUID_DUMPABLE_DISABLED 0
SUID_DUMPABLE_ENABLED  macro  include/linux/sched.h  382  #define SUID_DUMPABLE_ENABLED 1
SUID_DUMPABLE_SAFE  macro  include/linux/sched.h  383  #define SUID_DUMPABLE_SAFE 2
MMF_DUMPABLE  macro  include/linux/sched.h  387  #define MMF_DUMPABLE 0
MMF_DUMP_SECURELY  macro  include/linux/sched.h  388  #define MMF_DUMP_SECURELY 1
MMF_DUMPABLE_BITS  macro  include/linux/sched.h  390  #define MMF_DUMPABLE_BITS 2
MMF_DUMPABLE_MASK  macro  include/linux/sched.h  391  #define MMF_DUMPABLE_MASK ((1 << MMF_DUMPABLE_BITS) - 1)
MMF_DUMP_ANON_PRIVATE  macro  include/linux/sched.h  394  #define MMF_DUMP_ANON_PRIVATE 2
MMF_DUMP_ANON_SHARED  macro  include/linux/sched.h  395  #define MMF_DUMP_ANON_SHARED 3
MMF_DUMP_MAPPED_PRIVATE  macro  include/linux/sched.h  396  #define MMF_DUMP_MAPPED_PRIVATE 4
MMF_DUMP_MAPPED_SHARED  macro  include/linux/sched.h  397  #define MMF_DUMP_MAPPED_SHARED 5
MMF_DUMP_ELF_HEADERS  macro  include/linux/sched.h  398  #define MMF_DUMP_ELF_HEADERS 6
MMF_DUMP_HUGETLB_PRIVATE  macro  include/linux/sched.h  399  #define MMF_DUMP_HUGETLB_PRIVATE 7
MMF_DUMP_HUGETLB_SHARED  macro  include/linux/sched.h  400  #define MMF_DUMP_HUGETLB_SHARED 8
MMF_DUMP_FILTER_SHIFT  macro  include/linux/sched.h  402  #define MMF_DUMP_FILTER_SHIFT MMF_DUMPABLE_BITS
MMF_DUMP_FILTER_BITS  macro  include/linux/sched.h  403  #define MMF_DUMP_FILTER_BITS 7
MMF_DUMP_FILTER_MASK  macro  include/linux/sched.h  405  #define MMF_DUMP_FILTER_MASK (((1 << MMF_DUMP_FILTER_BITS) - 1) << MMF_DUMP_FILTER_SHIFT)
MMF_DUMP_FILTER_DEFAULT  macro  include/linux/sched.h  408  #define MMF_DUMP_FILTER_DEFAULT ((1 << MMF_DUMP_ANON_PRIVATE) |	(1 << MMF_DUMP_ANON_SHARED) | (1 << MMF_DUMP_HUGETLB_PRIVATE) | MMF_DUMP_MASK_DEFAULT_ELF)
MMF_DUMP_MASK_DEFAULT_ELF  macro  include/linux/sched.h  413  # define MMF_DUMP_MASK_DEFAULT_ELF 0
MMF_VM_MERGEABLE  macro  include/linux/sched.h  416  #define MMF_VM_MERGEABLE 16
MMF_VM_HUGEPAGE  macro  include/linux/sched.h  417  #define MMF_VM_HUGEPAGE 17
MMF_EXE_FILE_CHANGED  macro  include/linux/sched.h  418  #define MMF_EXE_FILE_CHANGED 18
MMF_HAS_UPROBES  macro  include/linux/sched.h  420  #define MMF_HAS_UPROBES 19
MMF_RECALC_UPROBES  macro  include/linux/sched.h  421  #define MMF_RECALC_UPROBES 20
MMF_INIT_MASK  macro  include/linux/sched.h  423  #define MMF_INIT_MASK (MMF_DUMPABLE_MASK | MMF_DUMP_FILTER_MASK)
sighand_struct  struct  include/linux/sched.h  425  struct sighand_struct {
pacct_struct  struct  include/linux/sched.h  432  struct pacct_struct {
cpu_itimer  struct  include/linux/sched.h  440  struct cpu_itimer {
cputime  struct  include/linux/sched.h  454  struct cputime {
task_cputime  struct  include/linux/sched.h  473  struct task_cputime {
prof_exp  macro  include/linux/sched.h  479  #define prof_exp stime
virt_exp  macro  include/linux/sched.h  480  #define virt_exp utime
sched_exp  macro  include/linux/sched.h  481  #define sched_exp sum_exec_runtime
INIT_CPUTIME  macro  include/linux/sched.h  488  #define INIT_CPUTIME (struct task_cputime) { .utime = 0, .stime = 0, .sum_exec_runtime = 0, }
INIT_PREEMPT_COUNT  macro  include/linux/sched.h  497  #define INIT_PREEMPT_COUNT (1 + PREEMPT_ACTIVE)
thread_group_cputimer  prototype  include/linux/sched.h  2692  void thread_group_cputimer(struct task_struct *tsk,struct task_cputime *times);
signal_struct  struct  include/linux/sched.h  525  struct signal_struct {
SIGNAL_STOP_STOPPED  macro  include/linux/sched.h  673  #define SIGNAL_STOP_STOPPED 0x00000001
SIGNAL_STOP_CONTINUED  macro  include/linux/sched.h  674  #define SIGNAL_STOP_CONTINUED 0x00000002
SIGNAL_GROUP_EXIT  macro  include/linux/sched.h  675  #define SIGNAL_GROUP_EXIT 0x00000004
SIGNAL_CLD_STOPPED  macro  include/linux/sched.h  679  #define SIGNAL_CLD_STOPPED 0x00000010
SIGNAL_CLD_CONTINUED  macro  include/linux/sched.h  680  #define SIGNAL_CLD_CONTINUED 0x00000020
SIGNAL_CLD_MASK  macro  include/linux/sched.h  681  #define SIGNAL_CLD_MASK (SIGNAL_CLD_STOPPED|SIGNAL_CLD_CONTINUED)
SIGNAL_UNKILLABLE  macro  include/linux/sched.h  683  #define SIGNAL_UNKILLABLE 0x00000040
signal_group_exit  function  include/linux/sched.h  686  static inline int signal_group_exit(const struct signal_struct *sig)
user_struct  struct  include/linux/sched.h  695  struct user_struct {
uids_sysfs_init  prototype  include/linux/sched.h  730  extern int uids_sysfs_init(void);
find_user  prototype  include/linux/sched.h  732  extern struct user_struct *find_user(kuid_t);
INIT_USER  macro  include/linux/sched.h  735  #define INIT_USER (&root_user)
sched_info  struct  include/linux/sched.h  742  struct sched_info {
task_delay_info  struct  include/linux/sched.h  754  struct task_delay_info {
sched_info_on  function  include/linux/sched.h  787  static inline int sched_info_on(void)
cpu_idle_type  enum  include/linux/sched.h  799  enum cpu_idle_type {
SCHED_LOAD_RESOLUTION  macro  include/linux/sched.h  823  # define SCHED_LOAD_RESOLUTION 0
scale_load  macro  include/linux/sched.h  824  # define scale_load(w) (w)
scale_load_down  macro  include/linux/sched.h  825  # define scale_load_down(w) (w)
SCHED_LOAD_SHIFT  macro  include/linux/sched.h  828  #define SCHED_LOAD_SHIFT (10 + SCHED_LOAD_RESOLUTION)
SCHED_LOAD_SCALE  macro  include/linux/sched.h  829  #define SCHED_LOAD_SCALE (1L << SCHED_LOAD_SHIFT)
SCHED_POWER_SHIFT  macro  include/linux/sched.h  834  #define SCHED_POWER_SHIFT 10
SCHED_POWER_SCALE  macro  include/linux/sched.h  835  #define SCHED_POWER_SCALE (1L << SCHED_POWER_SHIFT)
SD_LOAD_BALANCE  macro  include/linux/sched.h  841  #define SD_LOAD_BALANCE 0x0001
SD_BALANCE_NEWIDLE  macro  include/linux/sched.h  842  #define SD_BALANCE_NEWIDLE 0x0002
SD_BALANCE_EXEC  macro  include/linux/sched.h  843  #define SD_BALANCE_EXEC 0x0004
SD_BALANCE_FORK  macro  include/linux/sched.h  844  #define SD_BALANCE_FORK 0x0008
SD_BALANCE_WAKE  macro  include/linux/sched.h  845  #define SD_BALANCE_WAKE 0x0010
SD_WAKE_AFFINE  macro  include/linux/sched.h  846  #define SD_WAKE_AFFINE 0x0020
SD_SHARE_CPUPOWER  macro  include/linux/sched.h  847  #define SD_SHARE_CPUPOWER 0x0080
SD_SHARE_PKG_RESOURCES  macro  include/linux/sched.h  848  #define SD_SHARE_PKG_RESOURCES 0x0200
SD_SERIALIZE  macro  include/linux/sched.h  849  #define SD_SERIALIZE 0x0400
SD_ASYM_PACKING  macro  include/linux/sched.h  850  #define SD_ASYM_PACKING 0x0800
SD_PREFER_SIBLING  macro  include/linux/sched.h  851  #define SD_PREFER_SIBLING 0x1000
SD_OVERLAP  macro  include/linux/sched.h  852  #define SD_OVERLAP 0x2000
arch_sd_sibiling_asym_packing  prototype  include/linux/sched.h  854  extern int __weak arch_sd_sibiling_asym_packing(void);
sched_group_power  struct  include/linux/sched.h  856  struct sched_group_power {
sched_group  struct  include/linux/sched.h  872  struct sched_group {
sched_group_cpus  function  include/linux/sched.h  889  static inline struct cpumask *sched_group_cpus(struct sched_group *sg)
sched_group_mask  function  include/linux/sched.h  898  static inline struct cpumask *sched_group_mask(struct sched_group *sg)
group_first_cpu  function  include/linux/sched.h  907  static inline unsigned int group_first_cpu(struct sched_group *group)
sched_domain_attr  struct  include/linux/sched.h  912  struct sched_domain_attr {
SD_ATTR_INIT  macro  include/linux/sched.h  918  #define SD_ATTR_INIT (struct sched_domain_attr) { .relax_domain_level = -1, }
sched_domain  struct  include/linux/sched.h  922  struct sched_domain {
sched_domain_span  function  include/linux/sched.h  998  static inline struct cpumask *sched_domain_span(struct sched_domain *sd)
partition_sched_domains  function  include/linux/sched.h  1030  partition_sched_domains(int ndoms_new,cpumask_var_t doms_new[],struct sched_domain_attr *dattr_new)
alloc_sched_domains  prototype  include/linux/sched.h  1007  cpumask_var_t *alloc_sched_domains(unsigned int ndoms);
free_sched_domains  prototype  include/linux/sched.h  1008  void free_sched_domains(cpumask_var_t doms[],unsigned int ndoms);
test_sd_parent  function  include/linux/sched.h  1011  static inline int test_sd_parent(struct sched_domain *sd,int flag)
default_scale_freq_power  prototype  include/linux/sched.h  1019  unsigned long default_scale_freq_power(struct sched_domain *sd,int cpu);
default_scale_smt_power  prototype  include/linux/sched.h  1020  unsigned long default_scale_smt_power(struct sched_domain *sd,int cpu);
cpus_share_cache  function  include/linux/sched.h  1034  static inline bool cpus_share_cache(int this_cpu,int that_cpu)
prefetch_stack  function  include/linux/sched.h  1048  static inline void prefetch_stack(struct task_struct *t) { }
WF_SYNC  macro  include/linux/sched.h  1062  #define WF_SYNC 0x01
WF_FORK  macro  include/linux/sched.h  1063  #define WF_FORK 0x02
WF_MIGRATED  macro  include/linux/sched.h  1064  #define WF_MIGRATED 0x04
ENQUEUE_WAKEUP  macro  include/linux/sched.h  1066  #define ENQUEUE_WAKEUP 1
ENQUEUE_HEAD  macro  include/linux/sched.h  1067  #define ENQUEUE_HEAD 2
ENQUEUE_WAKING  macro  include/linux/sched.h  1071  #define ENQUEUE_WAKING 0
DEQUEUE_SLEEP  macro  include/linux/sched.h  1074  #define DEQUEUE_SLEEP 1
sched_class  struct  include/linux/sched.h  1076  struct sched_class {
load_weight  struct  include/linux/sched.h  1122  struct load_weight {
sched_avg  struct  include/linux/sched.h  1126  struct sched_avg {
sched_statistics  struct  include/linux/sched.h  1139  struct sched_statistics {
sched_entity  struct  include/linux/sched.h  1174  struct sched_entity {
sched_rt_entity  struct  include/linux/sched.h  1209  struct sched_rt_entity {
RR_TIMESLICE  macro  include/linux/sched.h  1228  #define RR_TIMESLICE (100 * HZ / 1000)
perf_event_task_context  enum  include/linux/sched.h  1232  enum perf_event_task_context {
task_struct  struct  include/linux/sched.h  1239  struct task_struct {
MAX_LOCK_DEPTH  macro  include/linux/sched.h  1467  # define MAX_LOCK_DEPTH 48UL
memcg_batch_info  struct  include/linux/sched.h  1595  struct memcg_batch_info {
tsk_cpus_allowed  macro  include/linux/sched.h  1612  #define tsk_cpus_allowed(tsk) (&(tsk)->cpus_allowed)
task_numa_fault  function  include/linux/sched.h  1618  static inline void task_numa_fault(int node,int pages,bool migrated)
set_numabalancing_state  function  include/linux/sched.h  1621  static inline void set_numabalancing_state(bool enabled)
MAX_USER_RT_PRIO  macro  include/linux/sched.h  1639  #define MAX_USER_RT_PRIO 100
MAX_RT_PRIO  macro  include/linux/sched.h  1640  #define MAX_RT_PRIO MAX_USER_RT_PRIO
MAX_PRIO  macro  include/linux/sched.h  1642  #define MAX_PRIO (MAX_RT_PRIO + 40)
DEFAULT_PRIO  macro  include/linux/sched.h  1643  #define DEFAULT_PRIO (MAX_RT_PRIO + 20)
rt_prio  function  include/linux/sched.h  1645  static inline int rt_prio(int prio)
rt_task  function  include/linux/sched.h  1652  static inline int rt_task(struct task_struct *p)
task_pid  function  include/linux/sched.h  1657  static inline struct pid *task_pid(struct task_struct *task)
task_tgid  function  include/linux/sched.h  1662  static inline struct pid *task_tgid(struct task_struct *task)
task_pgrp  function  include/linux/sched.h  1672  static inline struct pid *task_pgrp(struct task_struct *task)
task_session  function  include/linux/sched.h  1677  static inline struct pid *task_session(struct task_struct *task)
__task_pid_nr_ns  prototype  include/linux/sched.h  1698  pid_t __task_pid_nr_ns(struct task_struct *task,enum pid_type type,struct pid_namespace *ns);
task_pid_nr  function  include/linux/sched.h  1700  static inline pid_t task_pid_nr(struct task_struct *tsk)
task_pid_nr_ns  function  include/linux/sched.h  1706  static inline pid_t task_pid_nr_ns(struct task_struct *tsk,struct pid_namespace *ns)
task_pid_vnr  function  include/linux/sched.h  1711  static inline pid_t task_pid_vnr(struct task_struct *tsk)
task_tgid_nr  function  include/linux/sched.h  1717  static inline pid_t task_tgid_nr(struct task_struct *tsk)
task_tgid_nr_ns  prototype  include/linux/sched.h  1722  pid_t task_tgid_nr_ns(struct task_struct *tsk,struct pid_namespace *ns);
task_tgid_vnr  function  include/linux/sched.h  1724  static inline pid_t task_tgid_vnr(struct task_struct *tsk)
task_pgrp_nr_ns  function  include/linux/sched.h  1731  static inline pid_t task_pgrp_nr_ns(struct task_struct *tsk,struct pid_namespace *ns)
task_pgrp_vnr  function  include/linux/sched.h  1736  static inline pid_t task_pgrp_vnr(struct task_struct *tsk)
task_session_nr_ns  function  include/linux/sched.h  1743  static inline pid_t task_session_nr_ns(struct task_struct *tsk,struct pid_namespace *ns)
task_session_vnr  function  include/linux/sched.h  1748  static inline pid_t task_session_vnr(struct task_struct *tsk)
task_pgrp_nr  function  include/linux/sched.h  1754  static inline pid_t task_pgrp_nr(struct task_struct *tsk)
pid_alive  function  include/linux/sched.h  1767  static inline int pid_alive(struct task_struct *p)
is_global_init  function  include/linux/sched.h  1778  static inline int is_global_init(struct task_struct *tsk)
free_task  prototype  include/linux/sched.h  1785  extern void free_task(struct task_struct *tsk);
get_task_struct  macro  include/linux/sched.h  1786  #define get_task_struct(tsk) do { atomic_inc(&(tsk)->usage); } while(0)
__put_task_struct  prototype  include/linux/sched.h  1788  extern void __put_task_struct(struct task_struct *t);
put_task_struct  function  include/linux/sched.h  1790  static inline void put_task_struct(struct task_struct *t)
task_cputime_adjusted  prototype  include/linux/sched.h  1796  extern void task_cputime_adjusted(struct task_struct *p,cputime_t *ut,cputime_t *st);
thread_group_cputime_adjusted  prototype  include/linux/sched.h  1797  extern void thread_group_cputime_adjusted(struct task_struct *p,cputime_t *ut,cputime_t *st);
PF_EXITING  macro  include/linux/sched.h  1802  #define PF_EXITING 0x00000004
PF_EXITPIDONE  macro  include/linux/sched.h  1803  #define PF_EXITPIDONE 0x00000008
PF_VCPU  macro  include/linux/sched.h  1804  #define PF_VCPU 0x00000010
PF_WQ_WORKER  macro  include/linux/sched.h  1805  #define PF_WQ_WORKER 0x00000020
PF_FORKNOEXEC  macro  include/linux/sched.h  1806  #define PF_FORKNOEXEC 0x00000040
PF_MCE_PROCESS  macro  include/linux/sched.h  1807  #define PF_MCE_PROCESS 0x00000080
PF_SUPERPRIV  macro  include/linux/sched.h  1808  #define PF_SUPERPRIV 0x00000100
PF_DUMPCORE  macro  include/linux/sched.h  1809  #define PF_DUMPCORE 0x00000200
PF_SIGNALED  macro  include/linux/sched.h  1810  #define PF_SIGNALED 0x00000400
PF_MEMALLOC  macro  include/linux/sched.h  1811  #define PF_MEMALLOC 0x00000800
PF_NPROC_EXCEEDED  macro  include/linux/sched.h  1812  #define PF_NPROC_EXCEEDED 0x00001000
PF_USED_MATH  macro  include/linux/sched.h  1813  #define PF_USED_MATH 0x00002000
PF_USED_ASYNC  macro  include/linux/sched.h  1814  #define PF_USED_ASYNC 0x00004000
PF_NOFREEZE  macro  include/linux/sched.h  1815  #define PF_NOFREEZE 0x00008000
PF_FROZEN  macro  include/linux/sched.h  1816  #define PF_FROZEN 0x00010000
PF_FSTRANS  macro  include/linux/sched.h  1817  #define PF_FSTRANS 0x00020000
PF_KSWAPD  macro  include/linux/sched.h  1818  #define PF_KSWAPD 0x00040000
PF_LESS_THROTTLE  macro  include/linux/sched.h  1819  #define PF_LESS_THROTTLE 0x00100000
PF_KTHREAD  macro  include/linux/sched.h  1820  #define PF_KTHREAD 0x00200000
PF_RANDOMIZE  macro  include/linux/sched.h  1821  #define PF_RANDOMIZE 0x00400000
PF_SWAPWRITE  macro  include/linux/sched.h  1822  #define PF_SWAPWRITE 0x00800000
PF_SPREAD_PAGE  macro  include/linux/sched.h  1823  #define PF_SPREAD_PAGE 0x01000000
PF_SPREAD_SLAB  macro  include/linux/sched.h  1824  #define PF_SPREAD_SLAB 0x02000000
PF_THREAD_BOUND  macro  include/linux/sched.h  1825  #define PF_THREAD_BOUND 0x04000000
PF_MCE_EARLY  macro  include/linux/sched.h  1826  #define PF_MCE_EARLY 0x08000000
PF_MEMPOLICY  macro  include/linux/sched.h  1827  #define PF_MEMPOLICY 0x10000000
PF_MUTEX_TESTER  macro  include/linux/sched.h  1828  #define PF_MUTEX_TESTER 0x20000000
PF_FREEZER_SKIP  macro  include/linux/sched.h  1829  #define PF_FREEZER_SKIP 0x40000000
clear_stopped_child_used_math  macro  include/linux/sched.h  1842  #define clear_stopped_child_used_math(child) do { (child)->flags &= ~PF_USED_MATH; } while (0)
set_stopped_child_used_math  macro  include/linux/sched.h  1843  #define set_stopped_child_used_math(child) do { (child)->flags |= PF_USED_MATH; } while (0)
clear_used_math  macro  include/linux/sched.h  1844  #define clear_used_math() clear_stopped_child_used_math(current)
set_used_math  macro  include/linux/sched.h  1845  #define set_used_math() set_stopped_child_used_math(current)
conditional_stopped_child_used_math  macro  include/linux/sched.h  1847  #define conditional_stopped_child_used_math(condition,child) do { (child)->flags &= ~PF_USED_MATH, (child)->flags |= (condition) ? PF_USED_MATH : 0; } while (0)
conditional_used_math  macro  include/linux/sched.h  1849  #define conditional_used_math(condition) conditional_stopped_child_used_math(condition, current)
copy_to_stopped_child_used_math  macro  include/linux/sched.h  1851  #define copy_to_stopped_child_used_math(child) do { (child)->flags &= ~PF_USED_MATH, (child)->flags |= current->flags & PF_USED_MATH; } while (0)
tsk_used_math  macro  include/linux/sched.h  1853  #define tsk_used_math(p) ((p)->flags & PF_USED_MATH)
used_math  macro  include/linux/sched.h  1854  #define used_math() tsk_used_math(current)
JOBCTL_STOP_SIGMASK  macro  include/linux/sched.h  1859  #define JOBCTL_STOP_SIGMASK 0xffff
JOBCTL_STOP_DEQUEUED_BIT  macro  include/linux/sched.h  1861  #define JOBCTL_STOP_DEQUEUED_BIT 16
JOBCTL_STOP_PENDING_BIT  macro  include/linux/sched.h  1862  #define JOBCTL_STOP_PENDING_BIT 17
JOBCTL_STOP_CONSUME_BIT  macro  include/linux/sched.h  1863  #define JOBCTL_STOP_CONSUME_BIT 18
JOBCTL_TRAP_STOP_BIT  macro  include/linux/sched.h  1864  #define JOBCTL_TRAP_STOP_BIT 19
JOBCTL_TRAP_NOTIFY_BIT  macro  include/linux/sched.h  1865  #define JOBCTL_TRAP_NOTIFY_BIT 20
JOBCTL_TRAPPING_BIT  macro  include/linux/sched.h  1866  #define JOBCTL_TRAPPING_BIT 21
JOBCTL_LISTENING_BIT  macro  include/linux/sched.h  1867  #define JOBCTL_LISTENING_BIT 22
JOBCTL_STOP_DEQUEUED  macro  include/linux/sched.h  1869  #define JOBCTL_STOP_DEQUEUED (1 << JOBCTL_STOP_DEQUEUED_BIT)
JOBCTL_STOP_PENDING  macro  include/linux/sched.h  1870  #define JOBCTL_STOP_PENDING (1 << JOBCTL_STOP_PENDING_BIT)
JOBCTL_STOP_CONSUME  macro  include/linux/sched.h  1871  #define JOBCTL_STOP_CONSUME (1 << JOBCTL_STOP_CONSUME_BIT)
JOBCTL_TRAP_STOP  macro  include/linux/sched.h  1872  #define JOBCTL_TRAP_STOP (1 << JOBCTL_TRAP_STOP_BIT)
JOBCTL_TRAP_NOTIFY  macro  include/linux/sched.h  1873  #define JOBCTL_TRAP_NOTIFY (1 << JOBCTL_TRAP_NOTIFY_BIT)
JOBCTL_TRAPPING  macro  include/linux/sched.h  1874  #define JOBCTL_TRAPPING (1 << JOBCTL_TRAPPING_BIT)
JOBCTL_LISTENING  macro  include/linux/sched.h  1875  #define JOBCTL_LISTENING (1 << JOBCTL_LISTENING_BIT)
JOBCTL_TRAP_MASK  macro  include/linux/sched.h  1877  #define JOBCTL_TRAP_MASK (JOBCTL_TRAP_STOP | JOBCTL_TRAP_NOTIFY)
JOBCTL_PENDING_MASK  macro  include/linux/sched.h  1878  #define JOBCTL_PENDING_MASK (JOBCTL_STOP_PENDING | JOBCTL_TRAP_MASK)
task_set_jobctl_pending  prototype  include/linux/sched.h  1881  extern bool task_set_jobctl_pending(struct task_struct *task,unsigned int mask);
task_clear_jobctl_trapping  prototype  include/linux/sched.h  1882  extern void task_clear_jobctl_trapping(struct task_struct *task);
task_clear_jobctl_pending  prototype  include/linux/sched.h  1884  extern void task_clear_jobctl_pending(struct task_struct *task,unsigned int mask);
RCU_READ_UNLOCK_BLOCKED  macro  include/linux/sched.h  1888  #define RCU_READ_UNLOCK_BLOCKED (1 << 0)
RCU_READ_UNLOCK_NEED_QS  macro  include/linux/sched.h  1889  #define RCU_READ_UNLOCK_NEED_QS (1 << 1)
rcu_copy_process  function  include/linux/sched.h  1906  static inline void rcu_copy_process(struct task_struct *p)
tsk_restore_flags  function  include/linux/sched.h  1913  static inline void tsk_restore_flags(struct task_struct *task,unsigned long orig_flags, unsigned long flags)
do_set_cpus_allowed  function  include/linux/sched.h  1927  static inline void do_set_cpus_allowed(struct task_struct *p,const struct cpumask *new_mask)
set_cpus_allowed_ptr  function  include/linux/sched.h  1931  static inline int set_cpus_allowed_ptr(struct task_struct *p,const struct cpumask *new_mask)
calc_load_enter_idle  function  include/linux/sched.h  1943  static inline void calc_load_enter_idle(void) { }
calc_load_exit_idle  function  include/linux/sched.h  1944  static inline void calc_load_exit_idle(void) { }
set_cpus_allowed  function  include/linux/sched.h  1948  static inline int set_cpus_allowed(struct task_struct *p,cpumask_t new_mask)
sched_clock  prototype  include/linux/sched.h  1962  extern unsigned long long notrace sched_clock(void);
cpu_clock  prototype  include/linux/sched.h  1966  extern u64 cpu_clock(int cpu);
local_clock  prototype  include/linux/sched.h  1967  extern u64 local_clock(void);
sched_clock_cpu  prototype  include/linux/sched.h  1968  extern u64 sched_clock_cpu(int cpu);
sched_clock_init  prototype  include/linux/sched.h  1971  extern void sched_clock_init(void);
sched_clock_tick  prototype  include/linux/sched.h  1994  extern void sched_clock_tick(void);
sched_clock_idle_sleep_event  prototype  include/linux/sched.h  2022  extern void sched_clock_idle_sleep_event(void);
sched_clock_idle_wakeup_event  prototype  include/linux/sched.h  2023  extern void sched_clock_idle_wakeup_event(u64 delta_ns);
enable_sched_clock_irqtime  function  include/linux/sched.h  2008  static inline void enable_sched_clock_irqtime(void) {}
disable_sched_clock_irqtime  function  include/linux/sched.h  2009  static inline void disable_sched_clock_irqtime(void) {}
task_sched_runtime  prototype  include/linux/sched.h  2013  task_sched_runtime(struct task_struct *task);
sched_exec  macro  include/linux/sched.h  2019  #define sched_exec() {}
idle_task_exit  function  include/linux/sched.h  2028  static inline void idle_task_exit(void) {}
wake_up_idle_cpu  function  include/linux/sched.h  2034  static inline void wake_up_idle_cpu(int cpu) { }
sched_tunable_scaling  enum  include/linux/sched.h  2042  enum sched_tunable_scaling {
sched_proc_update_handler  prototype  include/linux/sched.h  2066  int sched_proc_update_handler(struct ctl_table *table,int write,void __user *buffer, size_t *length,loff_t *ppos);
get_sysctl_timer_migration  function  include/linux/sched.h  2074  static inline unsigned int get_sysctl_timer_migration(void)
sched_rt_handler  prototype  include/linux/sched.h  2084  int sched_rt_handler(struct ctl_table *table,int write,void __user *buffer, size_t *lenp,loff_t *ppos);
sched_autogroup_create_attach  function  include/linux/sched.h  2098  static inline void sched_autogroup_create_attach(struct task_struct *p) { }
sched_autogroup_detach  function  include/linux/sched.h  2099  static inline void sched_autogroup_detach(struct task_struct *p) { }
sched_autogroup_fork  function  include/linux/sched.h  2100  static inline void sched_autogroup_fork(struct signal_struct *sig) { }
sched_autogroup_exit  function  include/linux/sched.h  2101  static inline void sched_autogroup_exit(struct signal_struct *sig) { }
proc_sched_autogroup_show_task  prototype  include/linux/sched.h  2094  extern void proc_sched_autogroup_show_task(struct task_struct *p,struct seq_file *m);
proc_sched_autogroup_set_nice  prototype  include/linux/sched.h  2095  extern int proc_sched_autogroup_set_nice(struct task_struct *p,int nice);
rt_mutex_getprio  function  include/linux/sched.h  2117  static inline int rt_mutex_getprio(struct task_struct *p)
rt_mutex_setprio  prototype  include/linux/sched.h  2110  extern void rt_mutex_setprio(struct task_struct *p,int prio);
rt_mutex_adjust_pi  macro  include/linux/sched.h  2121  # define rt_mutex_adjust_pi(p) do { } while (0)
tsk_is_pi_blocked  function  include/linux/sched.h  2122  static inline bool tsk_is_pi_blocked(struct task_struct *tsk)
yield_to  prototype  include/linux/sched.h  2128  extern bool yield_to(struct task_struct *p,bool preempt);
set_user_nice  prototype  include/linux/sched.h  2129  extern void set_user_nice(struct task_struct *p,long nice);
task_prio  prototype  include/linux/sched.h  2130  extern int task_prio(const struct task_struct *p);
task_nice  prototype  include/linux/sched.h  2131  extern int task_nice(const struct task_struct *p);
can_nice  prototype  include/linux/sched.h  2132  extern int can_nice(const struct task_struct *p,const int nice);
task_curr  prototype  include/linux/sched.h  2133  extern int task_curr(const struct task_struct *p);
idle_cpu  prototype  include/linux/sched.h  2134  extern int idle_cpu(int cpu);
sched_setscheduler  prototype  include/linux/sched.h  2136  extern int sched_setscheduler(struct task_struct *,int,const struct sched_param *);
sched_setscheduler_nocheck  prototype  include/linux/sched.h  2138  extern int sched_setscheduler_nocheck(struct task_struct *,int,const struct sched_param *);
idle_task  prototype  include/linux/sched.h  2139  extern struct task_struct *idle_task(int cpu);
is_idle_task  function  include/linux/sched.h  2144  static inline bool is_idle_task(const struct task_struct *p)
curr_task  prototype  include/linux/sched.h  2148  extern struct task_struct *curr_task(int cpu);
set_curr_task  prototype  include/linux/sched.h  2149  extern void set_curr_task(int cpu,struct task_struct *p);
yield  prototype  include/linux/sched.h  2151  void yield(void);
thread_union  union  include/linux/sched.h  2158  union thread_union {
kstack_end  function  include/linux/sched.h  2164  static inline int kstack_end(void *addr)
find_task_by_vpid  prototype  include/linux/sched.h  2191  extern struct task_struct *find_task_by_vpid(pid_t nr);
find_task_by_pid_ns  prototype  include/linux/sched.h  2193  extern struct task_struct *find_task_by_pid_ns(pid_t nr,struct pid_namespace *ns);
__set_special_pids  prototype  include/linux/sched.h  2195  extern void __set_special_pids(struct pid *pid);
alloc_uid  prototype  include/linux/sched.h  2198  extern struct user_struct * alloc_uid(kuid_t);
get_uid  function  include/linux/sched.h  2199  static inline struct user_struct *get_uid(struct user_struct *u)
free_uid  prototype  include/linux/sched.h  2204  extern void free_uid(struct user_struct *);
xtime_update  prototype  include/linux/sched.h  2208  extern void xtime_update(unsigned long ticks);
wake_up_state  prototype  include/linux/sched.h  2210  extern int wake_up_state(struct task_struct *tsk,unsigned int state);
wake_up_process  prototype  include/linux/sched.h  2211  extern int wake_up_process(struct task_struct *tsk);
wake_up_new_task  prototype  include/linux/sched.h  2212  extern void wake_up_new_task(struct task_struct *tsk);
kick_process  function  include/linux/sched.h  2216  static inline void kick_process(struct task_struct *tsk) { }
sched_fork  prototype  include/linux/sched.h  2218  extern void sched_fork(struct task_struct *p);
sched_dead  prototype  include/linux/sched.h  2219  extern void sched_dead(struct task_struct *p);
proc_caches_init  prototype  include/linux/sched.h  2221  extern void proc_caches_init(void);
flush_signals  prototype  include/linux/sched.h  2222  extern void flush_signals(struct task_struct *);
__flush_signals  prototype  include/linux/sched.h  2223  extern void __flush_signals(struct task_struct *);
ignore_signals  prototype  include/linux/sched.h  2224  extern void ignore_signals(struct task_struct *);
flush_signal_handlers  prototype  include/linux/sched.h  2225  extern void flush_signal_handlers(struct task_struct *,int force_default);
dequeue_signal  prototype  include/linux/sched.h  2226  extern int dequeue_signal(struct task_struct *tsk,sigset_t *mask,siginfo_t *info);
dequeue_signal_lock  function  include/linux/sched.h  2228  static inline int dequeue_signal_lock(struct task_struct *tsk,sigset_t *mask,siginfo_t *info)
block_all_signals  prototype  include/linux/sched.h  2241  extern void block_all_signals(int (*notifier)(void *priv),void *priv,sigset_t *mask);
unblock_all_signals  prototype  include/linux/sched.h  2242  extern void unblock_all_signals(void);
release_task  prototype  include/linux/sched.h  2243  extern void release_task(struct task_struct * p);
send_sig_info  prototype  include/linux/sched.h  2244  extern int send_sig_info(int,struct siginfo *,struct task_struct *);
force_sigsegv  prototype  include/linux/sched.h  2245  extern int force_sigsegv(int,struct task_struct *);
force_sig_info  prototype  include/linux/sched.h  2246  extern int force_sig_info(int,struct siginfo *,struct task_struct *);
__kill_pgrp_info  prototype  include/linux/sched.h  2247  extern int __kill_pgrp_info(int sig,struct siginfo *info,struct pid *pgrp);
kill_pid_info  prototype  include/linux/sched.h  2248  extern int kill_pid_info(int sig,struct siginfo *info,struct pid *pid);
kill_pid_info_as_cred  prototype  include/linux/sched.h  2250  extern int kill_pid_info_as_cred(int,struct siginfo *,struct pid *,const struct cred *, u32);
kill_pgrp  prototype  include/linux/sched.h  2251  extern int kill_pgrp(struct pid *pid,int sig,int priv);
kill_pid  prototype  include/linux/sched.h  2252  extern int kill_pid(struct pid *pid,int sig,int priv);
kill_proc_info  prototype  include/linux/sched.h  2253  extern int kill_proc_info(int,struct siginfo *,pid_t);
do_notify_parent  prototype  include/linux/sched.h  2254  extern __must_check bool do_notify_parent(struct task_struct *,int);
__wake_up_parent  prototype  include/linux/sched.h  2255  extern void __wake_up_parent(struct task_struct *p,struct task_struct *parent);
force_sig  prototype  include/linux/sched.h  2256  extern void force_sig(int,struct task_struct *);
send_sig  prototype  include/linux/sched.h  2257  extern int send_sig(int,struct task_struct *,int);
zap_other_threads  prototype  include/linux/sched.h  2258  extern int zap_other_threads(struct task_struct *p);
sigqueue_alloc  prototype  include/linux/sched.h  2259  extern struct sigqueue *sigqueue_alloc(void);
sigqueue_free  prototype  include/linux/sched.h  2260  extern void sigqueue_free(struct sigqueue *);
send_sigqueue  prototype  include/linux/sched.h  2261  extern int send_sigqueue(struct sigqueue *,struct task_struct *,int group);
do_sigaction  prototype  include/linux/sched.h  2262  extern int do_sigaction(int,struct k_sigaction *,struct k_sigaction *);
do_sigaltstack  prototype  include/linux/sched.h  2263  extern int do_sigaltstack(const stack_t __user *,stack_t __user *,unsigned long);
restore_saved_sigmask  function  include/linux/sched.h  2265  static inline void restore_saved_sigmask(void)
sigmask_to_save  function  include/linux/sched.h  2271  static inline sigset_t *sigmask_to_save(void)
kill_cad_pid  function  include/linux/sched.h  2279  static inline int kill_cad_pid(int sig,int priv)
SEND_SIG_NOINFO  macro  include/linux/sched.h  2285  #define SEND_SIG_NOINFO ((struct siginfo *) 0)
SEND_SIG_PRIV  macro  include/linux/sched.h  2286  #define SEND_SIG_PRIV ((struct siginfo *) 1)
SEND_SIG_FORCED  macro  include/linux/sched.h  2287  #define SEND_SIG_FORCED ((struct siginfo *) 2)
on_sig_stack  function  include/linux/sched.h  2292  static inline int on_sig_stack(unsigned long sp)
sas_ss_flags  function  include/linux/sched.h  2303  static inline int sas_ss_flags(unsigned long sp)
mm_alloc  prototype  include/linux/sched.h  2312  extern struct mm_struct * mm_alloc(void);
__mmdrop  prototype  include/linux/sched.h  2315  extern void __mmdrop(struct mm_struct *);
mmdrop  function  include/linux/sched.h  2316  static inline void mmdrop(struct mm_struct * mm)
mmput  prototype  include/linux/sched.h  2323  extern void mmput(struct mm_struct *);
get_task_mm  prototype  include/linux/sched.h  2325  extern struct mm_struct *get_task_mm(struct task_struct *task);
mm_access  prototype  include/linux/sched.h  2331  extern struct mm_struct *mm_access(struct task_struct *task,unsigned int mode);
mm_release  prototype  include/linux/sched.h  2333  extern void mm_release(struct task_struct *,struct mm_struct *);
dup_mm  prototype  include/linux/sched.h  2335  extern struct mm_struct *dup_mm(struct task_struct *tsk);
copy_thread  prototype  include/linux/sched.h  2338  extern int copy_thread(unsigned long,unsigned long,unsigned long,struct task_struct *);
flush_thread  prototype  include/linux/sched.h  2339  extern void flush_thread(void);
exit_thread  prototype  include/linux/sched.h  2340  extern void exit_thread(void);
exit_files  prototype  include/linux/sched.h  2342  extern void exit_files(struct task_struct *);
__cleanup_sighand  prototype  include/linux/sched.h  2343  extern void __cleanup_sighand(struct sighand_struct *);
exit_itimers  prototype  include/linux/sched.h  2345  extern void exit_itimers(struct signal_struct *);
flush_itimer_signals  prototype  include/linux/sched.h  2346  extern void flush_itimer_signals(void);
do_group_exit  prototype  include/linux/sched.h  2348  extern void do_group_exit(int);
allow_signal  prototype  include/linux/sched.h  2350  extern int allow_signal(int);
disallow_signal  prototype  include/linux/sched.h  2351  extern int disallow_signal(int);
do_execve  prototype  include/linux/sched.h  2355  extern int do_execve(const char *,const char __user * const __user *,const char __user * const __user *);
do_fork  prototype  include/linux/sched.h  2356  extern long do_fork(unsigned long,unsigned long,unsigned long,int __user *,int __user *);
fork_idle  prototype  include/linux/sched.h  2357  struct task_struct *fork_idle(int);
kernel_thread  prototype  include/linux/sched.h  2358  extern pid_t kernel_thread(int (*fn)(void *),void *arg,unsigned long flags);
set_task_comm  prototype  include/linux/sched.h  2360  extern void set_task_comm(struct task_struct *tsk,char *from);
get_task_comm  prototype  include/linux/sched.h  2361  extern char *get_task_comm(char *to,struct task_struct *tsk);
scheduler_ipi  function  include/linux/sched.h  2367  static inline void scheduler_ipi(void) { }
wait_task_inactive  function  include/linux/sched.h  2369  static inline unsigned long wait_task_inactive(struct task_struct *p,long match_state)
next_task  macro  include/linux/sched.h  2376  #define next_task(p) list_entry_rcu((p)->tasks.next, struct task_struct, tasks)
for_each_process  macro  include/linux/sched.h  2379  #define for_each_process(p) for (p = &init_task ; (p = next_task(p)) != &init_task ; )
current_is_single_threaded  prototype  include/linux/sched.h  2381  extern bool current_is_single_threaded(void);
do_each_thread  macro  include/linux/sched.h  2388  #define do_each_thread(g,t) for (g = t = &init_task ; (g = t = next_task(g)) != &init_task ; ) do
while_each_thread  macro  include/linux/sched.h  2391  #define while_each_thread(g,t) while ((t = next_thread(t)) != g)
get_nr_threads  function  include/linux/sched.h  2393  static inline int get_nr_threads(struct task_struct *tsk)
thread_group_leader  function  include/linux/sched.h  2398  static inline bool thread_group_leader(struct task_struct *p)
has_group_leader_pid  function  include/linux/sched.h  2409  static inline int has_group_leader_pid(struct task_struct *p)
same_thread_group  function  include/linux/sched.h  2415  int same_thread_group(struct task_struct *p1,struct task_struct *p2)
next_thread  function  include/linux/sched.h  2420  static inline struct task_struct *next_thread(const struct task_struct *p)
thread_group_empty  function  include/linux/sched.h  2426  static inline int thread_group_empty(struct task_struct *p)
delay_group_leader  macro  include/linux/sched.h  2432  #define delay_group_leader(p) (thread_group_leader(p) && !thread_group_empty(p))
task_lock  function  include/linux/sched.h  2444  static inline void task_lock(struct task_struct *p)
task_unlock  function  include/linux/sched.h  2449  static inline void task_unlock(struct task_struct *p)
__lock_task_sighand  prototype  include/linux/sched.h  2455  extern struct sighand_struct *__lock_task_sighand(struct task_struct *tsk,unsigned long *flags);
lock_task_sighand  function  include/linux/sched.h  2458  static inline struct sighand_struct *lock_task_sighand(struct task_struct *tsk,unsigned long *flags)
unlock_task_sighand  function  include/linux/sched.h  2468  static inline void unlock_task_sighand(struct task_struct *tsk,unsigned long *flags)
threadgroup_change_begin  function  include/linux/sched.h  2515  static inline void threadgroup_change_begin(struct task_struct *tsk) {}
threadgroup_change_end  function  include/linux/sched.h  2516  static inline void threadgroup_change_end(struct task_struct *tsk) {}
threadgroup_lock  function  include/linux/sched.h  2517  static inline void threadgroup_lock(struct task_struct *tsk) {}
threadgroup_unlock  function  include/linux/sched.h  2518  static inline void threadgroup_unlock(struct task_struct *tsk) {}
task_thread_info  macro  include/linux/sched.h  2523  #define task_thread_info(task) ((struct thread_info *)(task)->stack)
task_stack_page  macro  include/linux/sched.h  2524  #define task_stack_page(task) ((task)->stack)
setup_thread_stack  function  include/linux/sched.h  2526  static inline void setup_thread_stack(struct task_struct *p,struct task_struct *org)
end_of_stack  function  include/linux/sched.h  2532  static inline unsigned long *end_of_stack(struct task_struct *p)
object_is_on_stack  function  include/linux/sched.h  2539  static inline int object_is_on_stack(void *obj)
thread_info_cache_init  prototype  include/linux/sched.h  2546  extern void thread_info_cache_init(void);
stack_not_used  function  include/linux/sched.h  2549  static inline unsigned long stack_not_used(struct task_struct *p)
set_tsk_thread_flag  function  include/linux/sched.h  2564  static inline void set_tsk_thread_flag(struct task_struct *tsk,int flag)
clear_tsk_thread_flag  function  include/linux/sched.h  2569  static inline void clear_tsk_thread_flag(struct task_struct *tsk,int flag)
test_and_set_tsk_thread_flag  function  include/linux/sched.h  2574  static inline int test_and_set_tsk_thread_flag(struct task_struct *tsk,int flag)
test_and_clear_tsk_thread_flag  function  include/linux/sched.h  2579  static inline int test_and_clear_tsk_thread_flag(struct task_struct *tsk,int flag)
test_tsk_thread_flag  function  include/linux/sched.h  2584  static inline int test_tsk_thread_flag(struct task_struct *tsk,int flag)
set_tsk_need_resched  function  include/linux/sched.h  2589  static inline void set_tsk_need_resched(struct task_struct *tsk)
clear_tsk_need_resched  function  include/linux/sched.h  2594  static inline void clear_tsk_need_resched(struct task_struct *tsk)
test_tsk_need_resched  function  include/linux/sched.h  2599  static inline int test_tsk_need_resched(struct task_struct *tsk)
restart_syscall  function  include/linux/sched.h  2604  static inline int restart_syscall(void)
signal_pending  function  include/linux/sched.h  2610  static inline int signal_pending(struct task_struct *p)
__fatal_signal_pending  function  include/linux/sched.h  2615  static inline int __fatal_signal_pending(struct task_struct *p)
fatal_signal_pending  function  include/linux/sched.h  2620  static inline int fatal_signal_pending(struct task_struct *p)
signal_pending_state  function  include/linux/sched.h  2625  static inline int signal_pending_state(long state,struct task_struct *p)
need_resched  function  include/linux/sched.h  2635  static inline int need_resched(void)
cond_resched  macro  include/linux/sched.h  2652  #define cond_resched() ({ __might_sleep(__FILE__, __LINE__, 0); _cond_resched(); })
__cond_resched_lock  prototype  include/linux/sched.h  2654  extern int __cond_resched_lock(spinlock_t *lock);
PREEMPT_LOCK_OFFSET  macro  include/linux/sched.h  2659  #define PREEMPT_LOCK_OFFSET 0
cond_resched_lock  macro  include/linux/sched.h  2665  #define cond_resched_lock(lock) ({ __might_sleep(__FILE__, __LINE__, PREEMPT_LOCK_OFFSET); __cond_resched_lock(lock); })
__cond_resched_softirq  prototype  include/linux/sched.h  2667  extern int __cond_resched_softirq(void);
cond_resched_softirq  macro  include/linux/sched.h  2672  #define cond_resched_softirq() ({ __might_sleep(__FILE__, __LINE__, SOFTIRQ_DISABLE_OFFSET); __cond_resched_softirq(); })
spin_needbreak  function  include/linux/sched.h  2679  static inline int spin_needbreak(spinlock_t *lock)
thread_group_cputime  prototype  include/linux/sched.h  2691  void thread_group_cputime(struct task_struct *tsk,struct task_cputime *times);
thread_group_cputime_init  function  include/linux/sched.h  2694  static inline void thread_group_cputime_init(struct signal_struct *sig)
recalc_sigpending_and_wake  prototype  include/linux/sched.h  2705  extern void recalc_sigpending_and_wake(struct task_struct *t);
recalc_sigpending  prototype  include/linux/sched.h  2706  extern void recalc_sigpending(void);
signal_wake_up_state  prototype  include/linux/sched.h  2708  extern void signal_wake_up_state(struct task_struct *t,unsigned int state);
signal_wake_up  function  include/linux/sched.h  2710  static inline void signal_wake_up(struct task_struct *t,bool resume)
ptrace_signal_wake_up  function  include/linux/sched.h  2714  static inline void ptrace_signal_wake_up(struct task_struct *t,bool resume)
task_cpu  function  include/linux/sched.h  2733  static inline unsigned int task_cpu(const struct task_struct *p)
set_task_cpu  function  include/linux/sched.h  2738  static inline void set_task_cpu(struct task_struct *p,unsigned int cpu)
sched_setaffinity  prototype  include/linux/sched.h  2744  extern long sched_setaffinity(pid_t pid,const struct cpumask *new_mask);
sched_getaffinity  prototype  include/linux/sched.h  2745  extern long sched_getaffinity(pid_t pid,struct cpumask *mask);
normalize_rt_tasks  prototype  include/linux/sched.h  2747  extern void normalize_rt_tasks(void);
sched_create_group  prototype  include/linux/sched.h  2753  extern struct task_group *sched_create_group(struct task_group *parent);
sched_destroy_group  prototype  include/linux/sched.h  2754  extern void sched_destroy_group(struct task_group *tg);
sched_move_task  prototype  include/linux/sched.h  2755  extern void sched_move_task(struct task_struct *tsk);
sched_group_set_shares  prototype  include/linux/sched.h  2757  extern int sched_group_set_shares(struct task_group *tg,unsigned long shares);
sched_group_shares  prototype  include/linux/sched.h  2758  extern unsigned long sched_group_shares(struct task_group *tg);
sched_group_set_rt_runtime  prototype  include/linux/sched.h  2762  extern int sched_group_set_rt_runtime(struct task_group *tg,long rt_runtime_us);
sched_group_rt_runtime  prototype  include/linux/sched.h  2763  extern long sched_group_rt_runtime(struct task_group *tg);
sched_group_set_rt_period  prototype  include/linux/sched.h  2765  extern int sched_group_set_rt_period(struct task_group *tg,long rt_period_us);
sched_group_rt_period  prototype  include/linux/sched.h  2766  extern long sched_group_rt_period(struct task_group *tg);
sched_rt_can_attach  prototype  include/linux/sched.h  2767  extern int sched_rt_can_attach(struct task_group *tg,struct task_struct *tsk);
task_can_switch_user  prototype  include/linux/sched.h  2772  extern int task_can_switch_user(struct user_struct *up,struct task_struct *tsk);
add_rchar  function  include/linux/sched.h  2795  static inline void add_rchar(struct task_struct *tsk,ssize_t amt)
add_wchar  function  include/linux/sched.h  2799  static inline void add_wchar(struct task_struct *tsk,ssize_t amt)
inc_syscr  function  include/linux/sched.h  2803  static inline void inc_syscr(struct task_struct *tsk)
inc_syscw  function  include/linux/sched.h  2807  static inline void inc_syscw(struct task_struct *tsk)
TASK_SIZE_OF  macro  arch/x86/include/asm/processor.h  899  #define TASK_SIZE_OF(child) ((test_tsk_thread_flag(child,TIF_ADDR32)) ? IA32_PAGE_OFFSET : TASK_SIZE_MAX)
mm_update_next_owner  function  include/linux/sched.h  2820  static inline void mm_update_next_owner(struct mm_struct *mm)
mm_init_owner  function  include/linux/sched.h  2824  static inline void mm_init_owner(struct mm_struct *mm,struct task_struct *p)
task_rlimit  function  include/linux/sched.h  2830  static inline unsigned long task_rlimit(const struct task_struct *tsk,unsigned int limit)
task_rlimit_max  function  include/linux/sched.h  2836  static inline unsigned long task_rlimit_max(const struct task_struct *tsk,unsigned int limit)
rlimit  struct  include/uapi/linux/resource.h  42  struct rlimit {
rlimit_max  function  include/linux/sched.h  2846  static inline unsigned long rlimit_max(unsigned int limit)
_LINUX_STRING_H_  macro  include/linux/string.h  2  #define _LINUX_STRING_H_
strndup_user  prototype  include/linux/string.h  11  extern char *strndup_user(const char __user *,long);
memdup_user  prototype  include/linux/string.h  12  extern void *memdup_user(const void __user *,size_t);
strcpy  prototype  arch/x86/include/asm/string_64.h  62  char *strcpy(char *dest,const char *src);
strncpy  prototype  arch/x86/include/asm/string_32.h  12  extern char *strncpy(char *dest,const char *src,size_t count);
strlcpy  prototype  include/linux/string.h  26  size_t strlcpy(char *,const char *,size_t);
strcat  prototype  arch/x86/include/asm/string_64.h  63  char *strcat(char *dest,const char *src);
strncat  prototype  arch/x86/include/asm/string_32.h  18  extern char *strncat(char *dest,const char *src,size_t count);
strlcat  prototype  include/linux/string.h  35  extern size_t strlcat(char *,const char *,__kernel_size_t);
strcmp  prototype  arch/x86/include/asm/string_64.h  64  int strcmp(const char *cs,const char *ct);
strncmp  prototype  arch/x86/include/asm/string_32.h  24  extern int strncmp(const char *cs,const char *ct,size_t count);
strnicmp  prototype  include/linux/string.h  44  extern int strnicmp(const char *,const char *,__kernel_size_t);
strcasecmp  prototype  include/linux/string.h  47  extern int strcasecmp(const char *s1,const char *s2);
strncasecmp  prototype  include/linux/string.h  50  extern int strncasecmp(const char *s1,const char *s2,size_t n);
strchr  prototype  arch/x86/include/asm/string_32.h  27  extern char *strchr(const char *s,int c);
strnchr  prototype  include/linux/string.h  56  extern char * strnchr(const char *,size_t,int);
strrchr  prototype  include/linux/string.h  59  extern char * strrchr(const char *,int);
skip_spaces  prototype  include/linux/string.h  61  extern char * __must_check skip_spaces(const char *);
strim  prototype  include/linux/string.h  63  extern char *strim(char *);
strstrip  function  include/linux/string.h  65  static inline __must_check char *strstrip(char *str)
strstr  prototype  arch/x86/include/asm/string_32.h  250  extern char *strstr(const char *cs,const char *ct);
strnstr  prototype  include/linux/string.h  74  extern char * strnstr(const char *,const char *,size_t);
strlen  prototype  arch/x86/include/asm/string_64.h  61  size_t strlen(const char *s);
strnlen  prototype  arch/x86/include/asm/string_32.h  246  extern size_t strnlen(const char *s,size_t count);
strpbrk  prototype  include/linux/string.h  83  extern char * strpbrk(const char *,const char *);
strsep  prototype  include/linux/string.h  86  extern char * strsep(char **,const char *);
strspn  prototype  include/linux/string.h  89  extern __kernel_size_t strspn(const char *,const char *);
strcspn  prototype  include/linux/string.h  92  extern __kernel_size_t strcspn(const char *,const char *);
memset  prototype  arch/x86/include/asm/string_64.h  55  void *memset(void *s,int c,size_t n);
memcpy  macro  arch/x86/include/asm/string_64.h  51  #define memcpy(dst,src,len) __inline_memcpy((dst),(src),(len))
memmove  prototype  arch/x86/include/asm/string_64.h  58  void *memmove(void *dest,const void *src,size_t count);
memscan  prototype  arch/x86/include/asm/string_32.h  338  extern void *memscan(void *addr,int c,size_t size);
memcmp  prototype  arch/x86/include/asm/string_64.h  60  int memcmp(const void *cs,const void *ct,size_t count);
memchr  prototype  arch/x86/include/asm/string_32.h  205  extern void *memchr(const void *cs,int c,size_t count);
memchr_inv  prototype  include/linux/string.h  113  void *memchr_inv(const void *s,int c,size_t n);
kstrdup  prototype  include/linux/string.h  115  extern char *kstrdup(const char *s,gfp_t gfp);
kstrndup  prototype  include/linux/string.h  116  extern char *kstrndup(const char *s,size_t len,gfp_t gfp);
kmemdup  prototype  include/linux/string.h  117  extern void *kmemdup(const void *src,size_t len,gfp_t gfp);
argv_split  prototype  include/linux/string.h  119  extern char **argv_split(gfp_t gfp,const char *str,int *argcp);
argv_free  prototype  include/linux/string.h  120  extern void argv_free(char **argv);
sysfs_streq  prototype  include/linux/string.h  122  extern bool sysfs_streq(const char *s1,const char *s2);
strtobool  prototype  include/linux/string.h  123  extern int strtobool(const char *s,bool *res);
vbin_printf  prototype  include/linux/string.h  126  int vbin_printf(u32 *bin_buf,size_t size,const char *fmt,va_list args);
bstr_printf  prototype  include/linux/string.h  127  int bstr_printf(char *buf,size_t size,const char *fmt,const u32 *bin_buf);
memory_read_from_buffer  prototype  include/linux/string.h  132  extern ssize_t memory_read_from_buffer(void *to,size_t count,loff_t *ppos,const void *from, size_t available);
strstarts  function  include/linux/string.h  139  static inline bool strstarts(const char *str,const char *prefix)
memweight  prototype  include/linux/string.h  144  extern size_t memweight(const void *ptr,size_t bytes);
kbasename  function  include/linux/string.h  151  static inline const char *kbasename(const char *path)
_LINUX_ERRNO_H  macro  include/linux/errno.h  2  #define _LINUX_ERRNO_H
ERESTARTSYS  macro  include/linux/errno.h  13  #define ERESTARTSYS 512
ERESTARTNOINTR  macro  include/linux/errno.h  14  #define ERESTARTNOINTR 513
ERESTARTNOHAND  macro  include/linux/errno.h  15  #define ERESTARTNOHAND 514
ENOIOCTLCMD  macro  include/linux/errno.h  16  #define ENOIOCTLCMD 515
ERESTART_RESTARTBLOCK  macro  include/linux/errno.h  17  #define ERESTART_RESTARTBLOCK 516
EPROBE_DEFER  macro  include/linux/errno.h  18  #define EPROBE_DEFER 517
EOPENSTALE  macro  include/linux/errno.h  19  #define EOPENSTALE 518
EBADHANDLE  macro  include/linux/errno.h  22  #define EBADHANDLE 521
ENOTSYNC  macro  include/linux/errno.h  23  #define ENOTSYNC 522
EBADCOOKIE  macro  include/linux/errno.h  24  #define EBADCOOKIE 523
ENOTSUPP  macro  include/linux/errno.h  25  #define ENOTSUPP 524
ETOOSMALL  macro  include/linux/errno.h  26  #define ETOOSMALL 525
ESERVERFAULT  macro  include/linux/errno.h  27  #define ESERVERFAULT 526
EBADTYPE  macro  include/linux/errno.h  28  #define EBADTYPE 527
EJUKEBOX  macro  include/linux/errno.h  29  #define EJUKEBOX 528
EIOCBQUEUED  macro  include/linux/errno.h  30  #define EIOCBQUEUED 529
EIOCBRETRY  macro  include/linux/errno.h  31  #define EIOCBRETRY 530
_LINUX_IOPORT_H  macro  include/linux/ioport.h  9  #define _LINUX_IOPORT_H
resource  struct  include/linux/ioport.h  18  struct resource {
IORESOURCE_BITS  macro  include/linux/ioport.h  29  #define IORESOURCE_BITS 0x000000ff
IORESOURCE_TYPE_BITS  macro  include/linux/ioport.h  31  #define IORESOURCE_TYPE_BITS 0x00001f00
IORESOURCE_IO  macro  include/linux/ioport.h  32  #define IORESOURCE_IO 0x00000100
IORESOURCE_MEM  macro  include/linux/ioport.h  33  #define IORESOURCE_MEM 0x00000200
IORESOURCE_REG  macro  include/linux/ioport.h  34  #define IORESOURCE_REG 0x00000300
IORESOURCE_IRQ  macro  include/linux/ioport.h  35  #define IORESOURCE_IRQ 0x00000400
IORESOURCE_DMA  macro  include/linux/ioport.h  36  #define IORESOURCE_DMA 0x00000800
IORESOURCE_BUS  macro  include/linux/ioport.h  37  #define IORESOURCE_BUS 0x00001000
IORESOURCE_PREFETCH  macro  include/linux/ioport.h  39  #define IORESOURCE_PREFETCH 0x00002000
IORESOURCE_READONLY  macro  include/linux/ioport.h  40  #define IORESOURCE_READONLY 0x00004000
IORESOURCE_CACHEABLE  macro  include/linux/ioport.h  41  #define IORESOURCE_CACHEABLE 0x00008000
IORESOURCE_RANGELENGTH  macro  include/linux/ioport.h  42  #define IORESOURCE_RANGELENGTH 0x00010000
IORESOURCE_SHADOWABLE  macro  include/linux/ioport.h  43  #define IORESOURCE_SHADOWABLE 0x00020000
IORESOURCE_SIZEALIGN  macro  include/linux/ioport.h  45  #define IORESOURCE_SIZEALIGN 0x00040000
IORESOURCE_STARTALIGN  macro  include/linux/ioport.h  46  #define IORESOURCE_STARTALIGN 0x00080000
IORESOURCE_MEM_64  macro  include/linux/ioport.h  48  #define IORESOURCE_MEM_64 0x00100000
IORESOURCE_WINDOW  macro  include/linux/ioport.h  49  #define IORESOURCE_WINDOW 0x00200000
IORESOURCE_MUXED  macro  include/linux/ioport.h  50  #define IORESOURCE_MUXED 0x00400000
IORESOURCE_EXCLUSIVE  macro  include/linux/ioport.h  52  #define IORESOURCE_EXCLUSIVE 0x08000000
IORESOURCE_DISABLED  macro  include/linux/ioport.h  53  #define IORESOURCE_DISABLED 0x10000000
IORESOURCE_UNSET  macro  include/linux/ioport.h  54  #define IORESOURCE_UNSET 0x20000000
IORESOURCE_AUTO  macro  include/linux/ioport.h  55  #define IORESOURCE_AUTO 0x40000000
IORESOURCE_BUSY  macro  include/linux/ioport.h  56  #define IORESOURCE_BUSY 0x80000000
IORESOURCE_IRQ_HIGHEDGE  macro  include/linux/ioport.h  59  #define IORESOURCE_IRQ_HIGHEDGE (1<<0)
IORESOURCE_IRQ_LOWEDGE  macro  include/linux/ioport.h  60  #define IORESOURCE_IRQ_LOWEDGE (1<<1)
IORESOURCE_IRQ_HIGHLEVEL  macro  include/linux/ioport.h  61  #define IORESOURCE_IRQ_HIGHLEVEL (1<<2)
IORESOURCE_IRQ_LOWLEVEL  macro  include/linux/ioport.h  62  #define IORESOURCE_IRQ_LOWLEVEL (1<<3)
IORESOURCE_IRQ_SHAREABLE  macro  include/linux/ioport.h  63  #define IORESOURCE_IRQ_SHAREABLE (1<<4)
IORESOURCE_IRQ_OPTIONAL  macro  include/linux/ioport.h  64  #define IORESOURCE_IRQ_OPTIONAL (1<<5)
IORESOURCE_DMA_TYPE_MASK  macro  include/linux/ioport.h  67  #define IORESOURCE_DMA_TYPE_MASK (3<<0)
IORESOURCE_DMA_8BIT  macro  include/linux/ioport.h  68  #define IORESOURCE_DMA_8BIT (0<<0)
IORESOURCE_DMA_8AND16BIT  macro  include/linux/ioport.h  69  #define IORESOURCE_DMA_8AND16BIT (1<<0)
IORESOURCE_DMA_16BIT  macro  include/linux/ioport.h  70  #define IORESOURCE_DMA_16BIT (2<<0)
IORESOURCE_DMA_MASTER  macro  include/linux/ioport.h  72  #define IORESOURCE_DMA_MASTER (1<<2)
IORESOURCE_DMA_BYTE  macro  include/linux/ioport.h  73  #define IORESOURCE_DMA_BYTE (1<<3)
IORESOURCE_DMA_WORD  macro  include/linux/ioport.h  74  #define IORESOURCE_DMA_WORD (1<<4)
IORESOURCE_DMA_SPEED_MASK  macro  include/linux/ioport.h  76  #define IORESOURCE_DMA_SPEED_MASK (3<<6)
IORESOURCE_DMA_COMPATIBLE  macro  include/linux/ioport.h  77  #define IORESOURCE_DMA_COMPATIBLE (0<<6)
IORESOURCE_DMA_TYPEA  macro  include/linux/ioport.h  78  #define IORESOURCE_DMA_TYPEA (1<<6)
IORESOURCE_DMA_TYPEB  macro  include/linux/ioport.h  79  #define IORESOURCE_DMA_TYPEB (2<<6)
IORESOURCE_DMA_TYPEF  macro  include/linux/ioport.h  80  #define IORESOURCE_DMA_TYPEF (3<<6)
IORESOURCE_MEM_WRITEABLE  macro  include/linux/ioport.h  83  #define IORESOURCE_MEM_WRITEABLE (1<<0)
IORESOURCE_MEM_CACHEABLE  macro  include/linux/ioport.h  84  #define IORESOURCE_MEM_CACHEABLE (1<<1)
IORESOURCE_MEM_RANGELENGTH  macro  include/linux/ioport.h  85  #define IORESOURCE_MEM_RANGELENGTH (1<<2)
IORESOURCE_MEM_TYPE_MASK  macro  include/linux/ioport.h  86  #define IORESOURCE_MEM_TYPE_MASK (3<<3)
IORESOURCE_MEM_8BIT  macro  include/linux/ioport.h  87  #define IORESOURCE_MEM_8BIT (0<<3)
IORESOURCE_MEM_16BIT  macro  include/linux/ioport.h  88  #define IORESOURCE_MEM_16BIT (1<<3)
IORESOURCE_MEM_8AND16BIT  macro  include/linux/ioport.h  89  #define IORESOURCE_MEM_8AND16BIT (2<<3)
IORESOURCE_MEM_32BIT  macro  include/linux/ioport.h  90  #define IORESOURCE_MEM_32BIT (3<<3)
IORESOURCE_MEM_SHADOWABLE  macro  include/linux/ioport.h  91  #define IORESOURCE_MEM_SHADOWABLE (1<<5)
IORESOURCE_MEM_EXPANSIONROM  macro  include/linux/ioport.h  92  #define IORESOURCE_MEM_EXPANSIONROM (1<<6)
IORESOURCE_IO_16BIT_ADDR  macro  include/linux/ioport.h  95  #define IORESOURCE_IO_16BIT_ADDR (1<<0)
IORESOURCE_IO_FIXED  macro  include/linux/ioport.h  96  #define IORESOURCE_IO_FIXED (1<<1)
IORESOURCE_ROM_ENABLE  macro  include/linux/ioport.h  99  #define IORESOURCE_ROM_ENABLE (1<<0)
IORESOURCE_ROM_SHADOW  macro  include/linux/ioport.h  100  #define IORESOURCE_ROM_SHADOW (1<<1)
IORESOURCE_ROM_COPY  macro  include/linux/ioport.h  101  #define IORESOURCE_ROM_COPY (1<<2)
IORESOURCE_ROM_BIOS_COPY  macro  include/linux/ioport.h  102  #define IORESOURCE_ROM_BIOS_COPY (1<<3)
IORESOURCE_PCI_FIXED  macro  include/linux/ioport.h  105  #define IORESOURCE_PCI_FIXED (1<<4)
DEFINE_RES_NAMED  macro  include/linux/ioport.h  115  #define DEFINE_RES_NAMED(_start,_size,_name,_flags) { .start = (_start), .end = (_start) + (_size) - 1, .name = (_name), .flags = (_flags), }
DEFINE_RES_IO_NAMED  macro  include/linux/ioport.h  118  #define DEFINE_RES_IO_NAMED(_start,_size,_name) DEFINE_RES_NAMED((_start), (_size), (_name), IORESOURCE_IO)
DEFINE_RES_IO  macro  include/linux/ioport.h  120  #define DEFINE_RES_IO(_start,_size) DEFINE_RES_IO_NAMED((_start), (_size), NULL)
DEFINE_RES_MEM_NAMED  macro  include/linux/ioport.h  123  #define DEFINE_RES_MEM_NAMED(_start,_size,_name) DEFINE_RES_NAMED((_start), (_size), (_name), IORESOURCE_MEM)
DEFINE_RES_MEM  macro  include/linux/ioport.h  125  #define DEFINE_RES_MEM(_start,_size) DEFINE_RES_MEM_NAMED((_start), (_size), NULL)
DEFINE_RES_IRQ_NAMED  macro  include/linux/ioport.h  128  #define DEFINE_RES_IRQ_NAMED(_irq,_name) DEFINE_RES_NAMED((_irq), 1, (_name), IORESOURCE_IRQ)
DEFINE_RES_IRQ  macro  include/linux/ioport.h  130  #define DEFINE_RES_IRQ(_irq) DEFINE_RES_IRQ_NAMED((_irq), NULL)
DEFINE_RES_DMA_NAMED  macro  include/linux/ioport.h  133  #define DEFINE_RES_DMA_NAMED(_dma,_name) DEFINE_RES_NAMED((_dma), 1, (_name), IORESOURCE_DMA)
DEFINE_RES_DMA  macro  include/linux/ioport.h  135  #define DEFINE_RES_DMA(_dma) DEFINE_RES_DMA_NAMED((_dma), NULL)
request_resource_conflict  prototype  include/linux/ioport.h  141  extern struct resource *request_resource_conflict(struct resource *root,struct resource *new);
request_resource  prototype  include/linux/ioport.h  142  extern int request_resource(struct resource *root,struct resource *new);
release_resource  prototype  include/linux/ioport.h  143  extern int release_resource(struct resource *new);
release_child_resources  prototype  include/linux/ioport.h  144  void release_child_resources(struct resource *new);
reserve_region_with_split  prototype  include/linux/ioport.h  147  extern void reserve_region_with_split(struct resource *root,resource_size_t start, resource_size_t end,const char *name);
insert_resource_conflict  prototype  include/linux/ioport.h  148  extern struct resource *insert_resource_conflict(struct resource *parent,struct resource *new);
insert_resource  prototype  include/linux/ioport.h  149  extern int insert_resource(struct resource *parent,struct resource *new);
insert_resource_expand_to_fit  prototype  include/linux/ioport.h  150  extern void insert_resource_expand_to_fit(struct resource *root,struct resource *new);
arch_remove_reservations  prototype  include/linux/ioport.h  151  extern void arch_remove_reservations(struct resource *avail);
allocate_resource  prototype  include/linux/ioport.h  159  extern int allocate_resource(struct resource *root,struct resource *new,resource_size_t size, resource_size_t min,resource_size_t max, resource_size_t align,resource_size_t (*alignf)(void *,const struct resource *,resource_size_t,resource_size_t),void *alignf_data);
lookup_resource  prototype  include/linux/ioport.h  160  struct resource *lookup_resource(struct resource *root,resource_size_t start);
adjust_resource  prototype  include/linux/ioport.h  162  int adjust_resource(struct resource *res,resource_size_t start,resource_size_t size);
resource_alignment  prototype  include/linux/ioport.h  163  resource_size_t resource_alignment(struct resource *res);
resource_size  function  include/linux/ioport.h  164  static inline resource_size_t resource_size(const struct resource *res)
resource_type  function  include/linux/ioport.h  168  static inline unsigned long resource_type(const struct resource *res)
request_region  macro  include/linux/ioport.h  174  #define request_region(start,n,name) __request_region(&ioport_resource,(start),(n),(name),0)
request_muxed_region  macro  include/linux/ioport.h  175  #define request_muxed_region(start,n,name) __request_region(&ioport_resource,(start),(n),(name),IORESOURCE_MUXED)
__request_mem_region  macro  include/linux/ioport.h  176  #define __request_mem_region(start,n,name,excl) __request_region(&iomem_resource,(start),(n),(name),excl)
request_mem_region  macro  include/linux/ioport.h  177  #define request_mem_region(start,n,name) __request_region(&iomem_resource,(start),(n),(name),0)
request_mem_region_exclusive  macro  include/linux/ioport.h  179  #define request_mem_region_exclusive(start,n,name) __request_region(&iomem_resource, (start), (n), (name), IORESOURCE_EXCLUSIVE)
rename_region  macro  include/linux/ioport.h  180  #define rename_region(region,newname) do { (region)->name = (newname); } while (0)
__request_region  prototype  include/linux/ioport.h  185  extern struct resource * __request_region(struct resource *,resource_size_t start,resource_size_t n,const char *name, int flags);
release_region  macro  include/linux/ioport.h  188  #define release_region(start,n) __release_region(&ioport_resource,(start),(n))
check_mem_region  macro  include/linux/ioport.h  189  #define check_mem_region(start,n) __check_region(&iomem_resource,(start),(n))
release_mem_region  macro  include/linux/ioport.h  190  #define release_mem_region(start,n) __release_region(&iomem_resource,(start),(n))
__check_region  prototype  include/linux/ioport.h  192  extern int __check_region(struct resource *,resource_size_t,resource_size_t);
__release_region  prototype  include/linux/ioport.h  194  extern void __release_region(struct resource *,resource_size_t,resource_size_t);
check_region  function  include/linux/ioport.h  197  static inline int __deprecated check_region(resource_size_t s,resource_size_t n)
devm_request_region  macro  include/linux/ioport.h  205  #define devm_request_region(dev,start,n,name) __devm_request_region(dev, &ioport_resource, (start), (n), (name))
devm_request_mem_region  macro  include/linux/ioport.h  207  #define devm_request_mem_region(dev,start,n,name) __devm_request_region(dev, &iomem_resource, (start), (n), (name))
__devm_request_region  prototype  include/linux/ioport.h  211  extern struct resource * __devm_request_region(struct device *dev,struct resource *parent, resource_size_t start,resource_size_t n, const char *name);
devm_release_region  macro  include/linux/ioport.h  214  #define devm_release_region(dev,start,n) __devm_release_region(dev, &ioport_resource, (start), (n))
devm_release_mem_region  macro  include/linux/ioport.h  216  #define devm_release_mem_region(dev,start,n) __devm_release_region(dev, &iomem_resource, (start), (n))
__devm_release_region  prototype  include/linux/ioport.h  219  extern void __devm_release_region(struct device *dev,struct resource *parent,resource_size_t start, resource_size_t n);
iomem_map_sanity_check  prototype  include/linux/ioport.h  220  extern int iomem_map_sanity_check(resource_size_t addr,unsigned long size);
iomem_is_exclusive  prototype  include/linux/ioport.h  221  extern int iomem_is_exclusive(u64 addr);
walk_system_ram_range  prototype  include/linux/ioport.h  225  walk_system_ram_range(unsigned long start_pfn,unsigned long nr_pages,void *arg, int (*func)(unsigned long, unsigned long, void *));
resource_overlaps  function  include/linux/ioport.h  228  static inline bool resource_overlaps(struct resource *r1,struct resource *r2)
_LINUX_SLAB_H  macro  include/linux/slab.h  10  #define _LINUX_SLAB_H
SLAB_DEBUG_FREE  macro  include/linux/slab.h  21  #define SLAB_DEBUG_FREE 0x00000100UL
SLAB_RED_ZONE  macro  include/linux/slab.h  22  #define SLAB_RED_ZONE 0x00000400UL
SLAB_POISON  macro  include/linux/slab.h  23  #define SLAB_POISON 0x00000800UL
SLAB_HWCACHE_ALIGN  macro  include/linux/slab.h  24  #define SLAB_HWCACHE_ALIGN 0x00002000UL
SLAB_CACHE_DMA  macro  include/linux/slab.h  25  #define SLAB_CACHE_DMA 0x00004000UL
SLAB_STORE_USER  macro  include/linux/slab.h  26  #define SLAB_STORE_USER 0x00010000UL
SLAB_PANIC  macro  include/linux/slab.h  27  #define SLAB_PANIC 0x00040000UL
SLAB_DESTROY_BY_RCU  macro  include/linux/slab.h  56  #define SLAB_DESTROY_BY_RCU 0x00080000UL
SLAB_MEM_SPREAD  macro  include/linux/slab.h  57  #define SLAB_MEM_SPREAD 0x00100000UL
SLAB_TRACE  macro  include/linux/slab.h  58  #define SLAB_TRACE 0x00200000UL
SLAB_DEBUG_OBJECTS  macro  include/linux/slab.h  64  # define SLAB_DEBUG_OBJECTS 0x00000000UL
SLAB_NOLEAKTRACE  macro  include/linux/slab.h  67  #define SLAB_NOLEAKTRACE 0x00800000UL
SLAB_NOTRACK  macro  include/linux/slab.h  73  # define SLAB_NOTRACK 0x00000000UL
SLAB_FAILSLAB  macro  include/linux/slab.h  78  # define SLAB_FAILSLAB 0x00000000UL
SLAB_RECLAIM_ACCOUNT  macro  include/linux/slab.h  82  #define SLAB_RECLAIM_ACCOUNT 0x00020000UL
SLAB_TEMPORARY  macro  include/linux/slab.h  83  #define SLAB_TEMPORARY SLAB_RECLAIM_ACCOUNT
ZERO_SIZE_PTR  macro  include/linux/slab.h  92  #define ZERO_SIZE_PTR ((void *)16)
ZERO_OR_NULL_PTR  macro  include/linux/slab.h  95  #define ZERO_OR_NULL_PTR(x) ((unsigned long)(x) <= (unsigned long)ZERO_SIZE_PTR)
kmem_cache  struct  include/linux/slab_def.h  24  struct kmem_cache {
kmem_cache_init  prototype  include/linux/slab.h  125  void __init kmem_cache_init(void);
slab_is_available  prototype  include/linux/slab.h  126  int slab_is_available(void);
kmem_cache_create  prototype  include/linux/slab.h  130  struct kmem_cache *kmem_cache_create(const char *,size_t,size_t,unsigned long,void (*)(void *));
kmem_cache_create_memcg  prototype  include/linux/slab.h  133  kmem_cache_create_memcg(struct mem_cgroup *,const char *,size_t,size_t,unsigned long, void (*)(void *), struct kmem_cache *);
kmem_cache_destroy  prototype  include/linux/slab.h  134  void kmem_cache_destroy(struct kmem_cache *);
kmem_cache_shrink  prototype  include/linux/slab.h  135  int kmem_cache_shrink(struct kmem_cache *);
kmem_cache_free  prototype  include/linux/slab.h  136  void kmem_cache_free(struct kmem_cache *,void *);
KMEM_CACHE  macro  include/linux/slab.h  148  #define KMEM_CACHE(__struct,__flags) kmem_cache_create(#__struct, sizeof(struct __struct), __alignof__(struct __struct), (__flags), NULL)
KMALLOC_SHIFT_HIGH  macro  include/linux/slab.h  160  #define KMALLOC_SHIFT_HIGH ((MAX_ORDER + PAGE_SHIFT - 1) <= 25 ? (MAX_ORDER + PAGE_SHIFT - 1) : 25)
KMALLOC_MAX_SIZE  macro  include/linux/slab.h  162  #define KMALLOC_MAX_SIZE (1UL << KMALLOC_SHIFT_HIGH)
KMALLOC_MAX_ORDER  macro  include/linux/slab.h  163  #define KMALLOC_MAX_ORDER (KMALLOC_SHIFT_HIGH - PAGE_SHIFT)
ARCH_KMALLOC_MINALIGN  macro  include/linux/slab.h  173  #define ARCH_KMALLOC_MINALIGN __alignof__(unsigned long long)
ARCH_SLAB_MINALIGN  macro  include/linux/slab.h  182  #define ARCH_SLAB_MINALIGN __alignof__(unsigned long long)
memcg_cache_params  struct  include/linux/slab.h  206  struct memcg_cache_params {
memcg_update_all_caches  prototype  include/linux/slab.h  221  int memcg_update_all_caches(int num_memcgs);
cache_show  prototype  include/linux/slab.h  224  int cache_show(struct kmem_cache *s,struct seq_file *m);
print_slabinfo_header  prototype  include/linux/slab.h  225  void print_slabinfo_header(struct seq_file *m);
__krealloc  prototype  include/linux/slab.h  230  void * __must_check __krealloc(const void *,size_t,gfp_t);
krealloc  prototype  include/linux/slab.h  231  void * __must_check krealloc(const void *,size_t,gfp_t);
kfree  prototype  include/linux/slab.h  232  void kfree(const void *);
kzfree  prototype  include/linux/slab.h  233  void kzfree(const void *);
ksize  prototype  include/linux/slab.h  234  size_t ksize(const void *);
kmalloc_array  function  include/linux/slab.h  314  static inline void *kmalloc_array(size_t n,size_t size,gfp_t flags)
kcalloc  function  include/linux/slab.h  327  static inline void *kcalloc(size_t n,size_t size,gfp_t flags)
kmalloc_node  function  include/linux/slab_def.h  184  static __always_inline void *kmalloc_node(size_t size,gfp_t flags,int node)
__kmalloc_node  prototype  include/linux/slab_def.h  165  extern void *__kmalloc_node(size_t size,gfp_t flags,int node);
kmem_cache_alloc  prototype  include/linux/slab_def.h  117  void *kmem_cache_alloc(struct kmem_cache *,gfp_t);
kmem_cache_alloc_node  prototype  include/linux/slab_def.h  166  extern void *kmem_cache_alloc_node(struct kmem_cache *,gfp_t flags,int node);
__kmalloc_track_caller  prototype  include/linux/slab.h  373  extern void *__kmalloc_track_caller(size_t,gfp_t,unsigned long);
kmalloc_track_caller  macro  include/linux/slab.h  378  #define kmalloc_track_caller(size,flags) __kmalloc(size, flags)
__kmalloc_node_track_caller  prototype  include/linux/slab.h  393  extern void *__kmalloc_node_track_caller(size_t,gfp_t,int,unsigned long);
kmalloc_node_track_caller  macro  include/linux/slab.h  405  #define kmalloc_node_track_caller(size,flags,node) kmalloc_track_caller(size, flags)
kmem_cache_zalloc  function  include/linux/slab.h  412  static inline void *kmem_cache_zalloc(struct kmem_cache *k,gfp_t flags)
kzalloc  function  include/linux/slab.h  422  static inline void *kzalloc(size_t size,gfp_t flags)
kzalloc_node  function  include/linux/slab.h  433  static inline void *kzalloc_node(size_t size,gfp_t flags,int node)
kmem_cache_size  function  include/linux/slab.h  441  static inline unsigned int kmem_cache_size(struct kmem_cache *s)
kmem_cache_init_late  prototype  include/linux/slab.h  446  void __init kmem_cache_init_late(void);
_LINUX_INTERRUPT_H  macro  include/linux/interrupt.h  3  #define _LINUX_INTERRUPT_H
IRQF_TRIGGER_NONE  macro  include/linux/interrupt.h  30  #define IRQF_TRIGGER_NONE 0x00000000
IRQF_TRIGGER_RISING  macro  include/linux/interrupt.h  31  #define IRQF_TRIGGER_RISING 0x00000001
IRQF_TRIGGER_FALLING  macro  include/linux/interrupt.h  32  #define IRQF_TRIGGER_FALLING 0x00000002
IRQF_TRIGGER_HIGH  macro  include/linux/interrupt.h  33  #define IRQF_TRIGGER_HIGH 0x00000004
IRQF_TRIGGER_LOW  macro  include/linux/interrupt.h  34  #define IRQF_TRIGGER_LOW 0x00000008
IRQF_TRIGGER_MASK  macro  include/linux/interrupt.h  36  #define IRQF_TRIGGER_MASK (IRQF_TRIGGER_HIGH | IRQF_TRIGGER_LOW | IRQF_TRIGGER_RISING | IRQF_TRIGGER_FALLING)
IRQF_TRIGGER_PROBE  macro  include/linux/interrupt.h  37  #define IRQF_TRIGGER_PROBE 0x00000010
IRQF_DISABLED  macro  include/linux/interrupt.h  62  #define IRQF_DISABLED 0x00000020
IRQF_SHARED  macro  include/linux/interrupt.h  63  #define IRQF_SHARED 0x00000080
IRQF_PROBE_SHARED  macro  include/linux/interrupt.h  64  #define IRQF_PROBE_SHARED 0x00000100
__IRQF_TIMER  macro  include/linux/interrupt.h  65  #define __IRQF_TIMER 0x00000200
IRQF_PERCPU  macro  include/linux/interrupt.h  66  #define IRQF_PERCPU 0x00000400
IRQF_NOBALANCING  macro  include/linux/interrupt.h  67  #define IRQF_NOBALANCING 0x00000800
IRQF_IRQPOLL  macro  include/linux/interrupt.h  68  #define IRQF_IRQPOLL 0x00001000
IRQF_ONESHOT  macro  include/linux/interrupt.h  69  #define IRQF_ONESHOT 0x00002000
IRQF_NO_SUSPEND  macro  include/linux/interrupt.h  70  #define IRQF_NO_SUSPEND 0x00004000
IRQF_FORCE_RESUME  macro  include/linux/interrupt.h  71  #define IRQF_FORCE_RESUME 0x00008000
IRQF_NO_THREAD  macro  include/linux/interrupt.h  72  #define IRQF_NO_THREAD 0x00010000
IRQF_EARLY_RESUME  macro  include/linux/interrupt.h  73  #define IRQF_EARLY_RESUME 0x00020000
IRQF_TIMER  macro  include/linux/interrupt.h  75  #define IRQF_TIMER (__IRQF_TIMER | IRQF_NO_SUSPEND | IRQF_NO_THREAD)
irqaction  struct  include/linux/interrupt.h  106  struct irqaction {
no_action  prototype  include/linux/interrupt.h  121  extern irqreturn_t no_action(int cpl,void *dev_id);
request_threaded_irq  function  include/linux/interrupt.h  158  request_threaded_irq(unsigned int irq,irq_handler_t handler,irq_handler_t thread_fn,unsigned long flags, const char *name, void *dev)
request_irq  prototype  include/linux/interrupt.h  147  request_irq(unsigned int irq,irq_handler_t handler,unsigned long flags,const char *name, void *dev);
request_any_context_irq  function  include/linux/interrupt.h  165  request_any_context_irq(unsigned int irq,irq_handler_t handler,unsigned long flags, const char *name, void *dev_id)
request_percpu_irq  function  include/linux/interrupt.h  172  request_percpu_irq(unsigned int irq,irq_handler_t handler,const char *devname, void __percpu *percpu_dev_id)
free_irq  prototype  include/linux/interrupt.h  178  extern void free_irq(unsigned int,void *);
free_percpu_irq  prototype  include/linux/interrupt.h  179  extern void free_percpu_irq(unsigned int,void __percpu *);
devm_request_threaded_irq  prototype  include/linux/interrupt.h  187  devm_request_threaded_irq(struct device *dev,unsigned int irq,irq_handler_t handler, irq_handler_t thread_fn,unsigned long irqflags, const char *devname,void *dev_id);
devm_request_irq  function  include/linux/interrupt.h  191  devm_request_irq(struct device *dev,unsigned int irq,irq_handler_t handler,unsigned long irqflags, const char *devname, void *dev_id)
devm_free_irq  prototype  include/linux/interrupt.h  197  extern void devm_free_irq(struct device *dev,unsigned int irq,void *dev_id);
local_irq_enable_in_hardirq  macro  include/linux/interrupt.h  214  # define local_irq_enable_in_hardirq() local_irq_enable()
disable_irq_nosync  prototype  include/linux/interrupt.h  217  extern void disable_irq_nosync(unsigned int irq);
disable_irq  prototype  include/linux/interrupt.h  218  extern void disable_irq(unsigned int irq);
disable_percpu_irq  prototype  include/linux/interrupt.h  219  extern void disable_percpu_irq(unsigned int irq);
enable_irq  prototype  include/linux/interrupt.h  220  extern void enable_irq(unsigned int irq);
enable_percpu_irq  prototype  include/linux/interrupt.h  221  extern void enable_percpu_irq(unsigned int irq,unsigned int type);
suspend_device_irqs  function  include/linux/interrupt.h  233  static inline void suspend_device_irqs(void) { };
resume_device_irqs  function  include/linux/interrupt.h  234  static inline void resume_device_irqs(void) { };
check_wakeup_irqs  function  include/linux/interrupt.h  235  static inline int check_wakeup_irqs(void) { return 0; }
irq_set_affinity  function  include/linux/interrupt.h  273  static inline int irq_set_affinity(unsigned int irq,const struct cpumask *m)
irq_can_set_affinity  function  include/linux/interrupt.h  278  static inline int irq_can_set_affinity(unsigned int irq)
irq_select_affinity  function  include/linux/interrupt.h  283  static inline int irq_select_affinity(unsigned int irq) { return 0; }
irq_set_affinity_hint  function  include/linux/interrupt.h  286  static inline int irq_set_affinity_hint(unsigned int irq,const struct cpumask *m)
irq_affinity_notify  struct  include/linux/interrupt.h  260  struct irq_affinity_notify {
irq_set_affinity_notifier  prototype  include/linux/interrupt.h  269  irq_set_affinity_notifier(unsigned int irq,struct irq_affinity_notify *notify);
disable_irq_nosync_lockdep  macro  include/linux/interrupt.h  364  # define disable_irq_nosync_lockdep(irq) disable_irq_nosync(irq)
disable_irq_nosync_lockdep_irqsave  macro  include/linux/interrupt.h  366  # define disable_irq_nosync_lockdep_irqsave(irq,flags) disable_irq_nosync(irq)
disable_irq_lockdep  macro  include/linux/interrupt.h  367  # define disable_irq_lockdep(irq) disable_irq(irq)
enable_irq_lockdep  macro  include/linux/interrupt.h  368  # define enable_irq_lockdep(irq) enable_irq(irq)
enable_irq_lockdep_irqrestore  macro  include/linux/interrupt.h  370  # define enable_irq_lockdep_irqrestore(irq,flags) enable_irq(irq)
irq_set_irq_wake  prototype  include/linux/interrupt.h  345  extern int irq_set_irq_wake(unsigned int irq,unsigned int on);
enable_irq_wake  function  include/linux/interrupt.h  373  static inline int enable_irq_wake(unsigned int irq)
disable_irq_wake  function  include/linux/interrupt.h  378  static inline int disable_irq_wake(unsigned int irq)
force_irqthreads  macro  include/linux/interrupt.h  388  #define force_irqthreads (0)
set_softirq_pending  macro  arch/x86/include/asm/hardirq.h  49  #define set_softirq_pending(x) this_cpu_write(irq_stat.__softirq_pending, (x))
or_softirq_pending  macro  arch/x86/include/asm/hardirq.h  50  #define or_softirq_pending(x) this_cpu_or(irq_stat.__softirq_pending,(x))
hard_irq_disable  macro  include/linux/interrupt.h  403  #define hard_irq_disable() do { } while(0)
SOFTIRQ_STOP_IDLE_MASK  macro  include/linux/interrupt.h  428  #define SOFTIRQ_STOP_IDLE_MASK (~(1 << RCU_SOFTIRQ))
softirq_action  struct  include/linux/interrupt.h  439  struct softirq_action
do_softirq  prototype  include/linux/interrupt.h  444  asmlinkage void do_softirq(void);
__do_softirq  prototype  include/linux/interrupt.h  445  asmlinkage void __do_softirq(void);
open_softirq  prototype  include/linux/interrupt.h  446  extern void open_softirq(int nr,void (*action)(struct softirq_action *));
softirq_init  prototype  include/linux/interrupt.h  447  extern void softirq_init(void);
__raise_softirq_irqoff  prototype  include/linux/interrupt.h  448  extern void __raise_softirq_irqoff(unsigned int nr);
raise_softirq_irqoff  prototype  include/linux/interrupt.h  450  extern void raise_softirq_irqoff(unsigned int nr);
raise_softirq  prototype  include/linux/interrupt.h  451  extern void raise_softirq(unsigned int nr);
this_cpu_ksoftirqd  function  include/linux/interrupt.h  464  static inline struct task_struct *this_cpu_ksoftirqd(void)
send_remote_softirq  prototype  include/linux/interrupt.h  472  extern void send_remote_softirq(struct call_single_data *cp,int cpu,int softirq);
__send_remote_softirq  prototype  include/linux/interrupt.h  478  extern void __send_remote_softirq(struct call_single_data *cp,int cpu,int this_cpu, int softirq);
tasklet_struct  struct  include/linux/interrupt.h  500  struct tasklet_struct
DECLARE_TASKLET  macro  include/linux/interrupt.h  510  #define DECLARE_TASKLET(name,func,data) struct tasklet_struct name = { NULL, 0, ATOMIC_INIT(0), func, data }
DECLARE_TASKLET_DISABLED  macro  include/linux/interrupt.h  513  #define DECLARE_TASKLET_DISABLED(name,func,data) struct tasklet_struct name = { NULL, 0, ATOMIC_INIT(1), func, data }
tasklet_trylock  macro  include/linux/interrupt.h  539  #define tasklet_trylock(t) 1
tasklet_unlock  macro  include/linux/interrupt.h  541  #define tasklet_unlock(t) do { } while (0)
tasklet_unlock_wait  macro  include/linux/interrupt.h  540  #define tasklet_unlock_wait(t) do { } while (0)
__tasklet_schedule  prototype  include/linux/interrupt.h  544  extern void __tasklet_schedule(struct tasklet_struct *t);
tasklet_schedule  function  include/linux/interrupt.h  546  static inline void tasklet_schedule(struct tasklet_struct *t)
__tasklet_hi_schedule  prototype  include/linux/interrupt.h  552  extern void __tasklet_hi_schedule(struct tasklet_struct *t);
tasklet_hi_schedule  function  include/linux/interrupt.h  554  static inline void tasklet_hi_schedule(struct tasklet_struct *t)
__tasklet_hi_schedule_first  prototype  include/linux/interrupt.h  560  extern void __tasklet_hi_schedule_first(struct tasklet_struct *t);
tasklet_hi_schedule_first  function  include/linux/interrupt.h  568  static inline void tasklet_hi_schedule_first(struct tasklet_struct *t)
tasklet_disable_nosync  function  include/linux/interrupt.h  575  static inline void tasklet_disable_nosync(struct tasklet_struct *t)
tasklet_disable  function  include/linux/interrupt.h  581  static inline void tasklet_disable(struct tasklet_struct *t)
tasklet_enable  function  include/linux/interrupt.h  588  static inline void tasklet_enable(struct tasklet_struct *t)
tasklet_hi_enable  function  include/linux/interrupt.h  594  static inline void tasklet_hi_enable(struct tasklet_struct *t)
tasklet_kill  prototype  include/linux/interrupt.h  600  extern void tasklet_kill(struct tasklet_struct *t);
tasklet_kill_immediate  prototype  include/linux/interrupt.h  601  extern void tasklet_kill_immediate(struct tasklet_struct *t,unsigned int cpu);
tasklet_init  prototype  include/linux/interrupt.h  603  extern void tasklet_init(struct tasklet_struct *t,void (*func)(unsigned long), unsigned long data);
tasklet_hrtimer  struct  include/linux/interrupt.h  605  struct tasklet_hrtimer {
tasklet_hrtimer_init  prototype  include/linux/interrupt.h  614  tasklet_hrtimer_init(struct tasklet_hrtimer *ttimer,enum hrtimer_restart (*function)(struct hrtimer *),clockid_t which_clock, enum hrtimer_mode mode);
tasklet_hrtimer_start  function  include/linux/interrupt.h  618  int tasklet_hrtimer_start(struct tasklet_hrtimer *ttimer,ktime_t time,const enum hrtimer_mode mode)
tasklet_hrtimer_cancel  function  include/linux/interrupt.h  624  void tasklet_hrtimer_cancel(struct tasklet_hrtimer *ttimer)
probe_irq_on  prototype  include/linux/interrupt.h  672  extern unsigned long probe_irq_on(void);
probe_irq_off  prototype  include/linux/interrupt.h  673  extern int probe_irq_off(unsigned long);
probe_irq_mask  prototype  include/linux/interrupt.h  674  extern unsigned int probe_irq_mask(unsigned long);
init_irq_proc  function  include/linux/interrupt.h  681  static inline void init_irq_proc(void)
show_interrupts  prototype  include/linux/interrupt.h  687  int show_interrupts(struct seq_file *p,void *v);
arch_show_interrupts  prototype  include/linux/interrupt.h  688  int arch_show_interrupts(struct seq_file *p,int prec);
early_irq_init  prototype  include/linux/interrupt.h  690  extern int early_irq_init(void);
arch_probe_nr_irqs  prototype  include/linux/interrupt.h  691  extern int arch_probe_nr_irqs(void);
arch_early_irq_init  prototype  include/linux/interrupt.h  692  extern int arch_early_irq_init(void);
LINUX_PCI_H  macro  include/linux/pci.h  17  #define LINUX_PCI_H
pci_slot  struct  include/linux/pci.h  39  struct pci_slot {
pci_slot_name  function  include/linux/pci.h  47  static inline const char *pci_slot_name(const struct pci_slot *slot)
pci_mmap_state  enum  include/linux/pci.h  53  enum pci_mmap_state {
PCI_DMA_BIDIRECTIONAL  macro  include/linux/pci.h  59  #define PCI_DMA_BIDIRECTIONAL 0
PCI_DMA_TODEVICE  macro  include/linux/pci.h  60  #define PCI_DMA_TODEVICE 1
PCI_DMA_FROMDEVICE  macro  include/linux/pci.h  61  #define PCI_DMA_FROMDEVICE 2
PCI_DMA_NONE  macro  include/linux/pci.h  62  #define PCI_DMA_NONE 3
PCI_BRIDGE_RESOURCE_NUM  macro  include/linux/pci.h  82  #define PCI_BRIDGE_RESOURCE_NUM 4
PCI_D0  macro  include/linux/pci.h  97  #define PCI_D0 ((pci_power_t __force) 0)
PCI_D1  macro  include/linux/pci.h  98  #define PCI_D1 ((pci_power_t __force) 1)
PCI_D2  macro  include/linux/pci.h  99  #define PCI_D2 ((pci_power_t __force) 2)
PCI_D3hot  macro  include/linux/pci.h  100  #define PCI_D3hot ((pci_power_t __force) 3)
PCI_D3cold  macro  include/linux/pci.h  101  #define PCI_D3cold ((pci_power_t __force) 4)
PCI_UNKNOWN  macro  include/linux/pci.h  102  #define PCI_UNKNOWN ((pci_power_t __force) 5)
PCI_POWER_ERROR  macro  include/linux/pci.h  103  #define PCI_POWER_ERROR ((pci_power_t __force) -1)
pci_power_name  function  include/linux/pci.h  108  static inline const char *pci_power_name(pci_power_t state)
PCI_PM_D2_DELAY  macro  include/linux/pci.h  113  #define PCI_PM_D2_DELAY 200
PCI_PM_D3_WAIT  macro  include/linux/pci.h  114  #define PCI_PM_D3_WAIT 10
PCI_PM_D3COLD_WAIT  macro  include/linux/pci.h  115  #define PCI_PM_D3COLD_WAIT 100
PCI_PM_BUS_WAIT  macro  include/linux/pci.h  116  #define PCI_PM_BUS_WAIT 50
pci_channel_state  enum  include/linux/pci.h  124  enum pci_channel_state {
pcie_reset_state  enum  include/linux/pci.h  137  enum pcie_reset_state {
pci_dev_flags  enum  include/linux/pci.h  149  enum pci_dev_flags {
pci_irq_reroute_variant  enum  include/linux/pci.h  160  enum pci_irq_reroute_variant {
pci_bus_flags  enum  include/linux/pci.h  166  enum pci_bus_flags {
pci_bus_speed  enum  include/linux/pci.h  172  enum pci_bus_speed {
pci_cap_saved_data  struct  include/linux/pci.h  198  struct pci_cap_saved_data {
pci_cap_saved_state  struct  include/linux/pci.h  204  struct pci_cap_saved_state {
pci_dev  struct  include/linux/pci.h  217  struct pci_dev {
pci_physfn  function  include/linux/pci.h  340  static inline struct pci_dev *pci_physfn(struct pci_dev *dev)
alloc_pci_dev  prototype  include/linux/pci.h  350  extern struct pci_dev *alloc_pci_dev(void);
to_pci_dev  macro  include/linux/pci.h  352  #define to_pci_dev(n) container_of(n,struct pci_dev,dev)
for_each_pci_dev  macro  include/linux/pci.h  353  #define for_each_pci_dev(d) while ((d = pci_get_device(PCI_ANY_ID,PCI_ANY_ID,d)) != NULL)
pci_channel_offline  function  include/linux/pci.h  355  static inline int pci_channel_offline(struct pci_dev *pdev)
pci_host_bridge_window  struct  include/linux/pci.h  362  struct pci_host_bridge_window {
pci_host_bridge  struct  include/linux/pci.h  368  struct pci_host_bridge {
to_pci_host_bridge  macro  include/linux/pci.h  376  #define to_pci_host_bridge(n) container_of(n,struct pci_host_bridge,dev)
pci_set_host_bridge_release  prototype  include/linux/pci.h  379  void pci_set_host_bridge_release(struct pci_host_bridge *bridge,void (*release_fn)(struct pci_host_bridge *),void *release_data);
PCI_SUBTRACTIVE_DECODE  macro  include/linux/pci.h  394  #define PCI_SUBTRACTIVE_DECODE 0x1
pci_bus_resource  struct  include/linux/pci.h  396  struct pci_bus_resource {
PCI_REGION_FLAG_MASK  macro  include/linux/pci.h  402  #define PCI_REGION_FLAG_MASK 0x0fU
pci_bus  struct  include/linux/pci.h  404  struct pci_bus {
pci_bus_b  macro  include/linux/pci.h  435  #define pci_bus_b(n) list_entry(n,struct pci_bus,node)
to_pci_bus  macro  include/linux/pci.h  436  #define to_pci_bus(n) container_of(n,struct pci_bus,dev)
pci_is_root_bus  function  include/linux/pci.h  442  static inline bool pci_is_root_bus(struct pci_bus *pbus)
pci_dev_msi_enabled  function  include/linux/pci.h  453  static inline bool pci_dev_msi_enabled(struct pci_dev *pci_dev) { return false; }
PCIBIOS_SUCCESSFUL  macro  include/linux/pci.h  459  #define PCIBIOS_SUCCESSFUL 0x00
PCIBIOS_FUNC_NOT_SUPPORTED  macro  include/linux/pci.h  460  #define PCIBIOS_FUNC_NOT_SUPPORTED 0x81
PCIBIOS_BAD_VENDOR_ID  macro  include/linux/pci.h  461  #define PCIBIOS_BAD_VENDOR_ID 0x83
PCIBIOS_DEVICE_NOT_FOUND  macro  include/linux/pci.h  462  #define PCIBIOS_DEVICE_NOT_FOUND 0x86
PCIBIOS_BAD_REGISTER_NUMBER  macro  include/linux/pci.h  463  #define PCIBIOS_BAD_REGISTER_NUMBER 0x87
PCIBIOS_SET_FAILED  macro  include/linux/pci.h  464  #define PCIBIOS_SET_FAILED 0x88
PCIBIOS_BUFFER_TOO_SMALL  macro  include/linux/pci.h  465  #define PCIBIOS_BUFFER_TOO_SMALL 0x89
pcibios_err_to_errno  function  include/linux/pci.h  470  static inline int pcibios_err_to_errno(int err)
pci_ops  struct  include/linux/pci.h  495  struct pci_ops {
raw_pci_read  prototype  include/linux/pci.h  505  extern int raw_pci_read(unsigned int domain,unsigned int bus,unsigned int devfn, int reg, int len, u32 *val);
raw_pci_write  prototype  include/linux/pci.h  507  extern int raw_pci_write(unsigned int domain,unsigned int bus,unsigned int devfn, int reg, int len, u32 val);
pci_bus_region  struct  include/linux/pci.h  509  struct pci_bus_region {
pci_dynids  struct  include/linux/pci.h  514  struct pci_dynids {
pci_ers_result  enum  include/linux/pci.h  528  enum pci_ers_result {
pci_error_handlers  struct  include/linux/pci.h  549  struct pci_error_handlers {
pci_driver  struct  include/linux/pci.h  570  struct pci_driver {
to_pci_driver  macro  include/linux/pci.h  587  #define to_pci_driver(drv) container_of(drv,struct pci_driver,driver)
DEFINE_PCI_DEVICE_TABLE  macro  include/linux/pci.h  597  #define DEFINE_PCI_DEVICE_TABLE(_table) const struct pci_device_id _table[]
PCI_DEVICE  macro  include/linux/pci.h  610  #define PCI_DEVICE(vend,dev) .vendor = (vend), .device = (dev), .subvendor = PCI_ANY_ID, .subdevice = PCI_ANY_ID
PCI_DEVICE_SUB  macro  include/linux/pci.h  624  #define PCI_DEVICE_SUB(vend,dev,subvend,subdev) .vendor = (vend), .device = (dev), .subvendor = (subvend), .subdevice = (subdev)
PCI_DEVICE_CLASS  macro  include/linux/pci.h  638  #define PCI_DEVICE_CLASS(dev_class,dev_class_mask) .class = (dev_class), .class_mask = (dev_class_mask), .vendor = PCI_ANY_ID, .device = PCI_ANY_ID, .subvendor = PCI_ANY_ID, .subdevice = PCI_ANY_ID
PCI_VDEVICE  macro  include/linux/pci.h  653  #define PCI_VDEVICE(vendor,device) PCI_VENDOR_ID_##vendor, (device), PCI_ANY_ID, PCI_ANY_ID, 0, 0
pcie_bus_configure_settings  prototype  include/linux/pci.h  658  extern void pcie_bus_configure_settings(struct pci_bus *bus,u8 smpss);
pcie_bus_config_types  enum  include/linux/pci.h  660  enum pcie_bus_config_types {
no_pci_devices  macro  include/linux/pci.h  1260  #define no_pci_devices() (1)
pcibios_fixup_bus  prototype  include/linux/pci.h  677  void pcibios_fixup_bus(struct pci_bus *);
pcibios_enable_device  prototype  include/linux/pci.h  678  int __must_check pcibios_enable_device(struct pci_dev *,int mask);
pcibios_setup  prototype  include/linux/pci.h  680  char *pcibios_setup(char *str);
pcibios_align_resource  prototype  include/linux/pci.h  685  resource_size_t pcibios_align_resource(void *,const struct resource *,resource_size_t,resource_size_t);
pcibios_update_irq  prototype  include/linux/pci.h  686  void pcibios_update_irq(struct pci_dev *,int irq);
pci_fixup_cardbus  prototype  include/linux/pci.h  689  void pci_fixup_cardbus(struct pci_bus *);
pcibios_resource_to_bus  prototype  include/linux/pci.h  694  void pcibios_resource_to_bus(struct pci_dev *dev,struct pci_bus_region *region,struct resource *res);
pcibios_bus_to_resource  prototype  include/linux/pci.h  696  void pcibios_bus_to_resource(struct pci_dev *dev,struct resource *res,struct pci_bus_region *region);
pcibios_scan_specific_bus  prototype  include/linux/pci.h  697  void pcibios_scan_specific_bus(int busn);
pci_find_bus  prototype  include/linux/pci.h  698  extern struct pci_bus *pci_find_bus(int domain,int busnr);
pci_bus_add_devices  prototype  include/linux/pci.h  699  void pci_bus_add_devices(const struct pci_bus *bus);
pci_scan_bus_parented  prototype  include/linux/pci.h  701  struct pci_bus *pci_scan_bus_parented(struct device *parent,int bus,struct pci_ops *ops, void *sysdata);
pci_scan_bus  prototype  include/linux/pci.h  702  struct pci_bus *pci_scan_bus(int bus,struct pci_ops *ops,void *sysdata);
pci_create_root_bus  prototype  include/linux/pci.h  705  struct pci_bus *pci_create_root_bus(struct device *parent,int bus,struct pci_ops *ops, void *sysdata,struct list_head *resources);
pci_bus_insert_busn_res  prototype  include/linux/pci.h  706  int pci_bus_insert_busn_res(struct pci_bus *b,int bus,int busmax);
pci_bus_update_busn_res_end  prototype  include/linux/pci.h  707  int pci_bus_update_busn_res_end(struct pci_bus *b,int busmax);
pci_bus_release_busn_res  prototype  include/linux/pci.h  708  void pci_bus_release_busn_res(struct pci_bus *b);
pci_scan_root_bus  prototype  include/linux/pci.h  711  struct pci_bus *pci_scan_root_bus(struct device *parent,int bus,struct pci_ops *ops, void *sysdata,struct list_head *resources);
pci_add_new_bus  prototype  include/linux/pci.h  713  struct pci_bus *pci_add_new_bus(struct pci_bus *parent,struct pci_dev *dev,int busnr);
pcie_update_link_speed  prototype  include/linux/pci.h  714  void pcie_update_link_speed(struct pci_bus *bus,u16 link_status);
pci_create_slot  prototype  include/linux/pci.h  717  struct pci_slot *pci_create_slot(struct pci_bus *parent,int slot_nr,const char *name,struct hotplug_slot *hotplug);
pci_destroy_slot  prototype  include/linux/pci.h  718  void pci_destroy_slot(struct pci_slot *slot);
pci_renumber_slot  prototype  include/linux/pci.h  719  void pci_renumber_slot(struct pci_slot *slot,int slot_nr);
pci_scan_slot  prototype  include/linux/pci.h  720  int pci_scan_slot(struct pci_bus *bus,int devfn);
pci_scan_single_device  prototype  include/linux/pci.h  721  struct pci_dev *pci_scan_single_device(struct pci_bus *bus,int devfn);
pci_device_add  prototype  include/linux/pci.h  722  void pci_device_add(struct pci_dev *dev,struct pci_bus *bus);
pci_scan_child_bus  prototype  include/linux/pci.h  723  unsigned int pci_scan_child_bus(struct pci_bus *bus);
pci_bus_add_device  prototype  include/linux/pci.h  724  int __must_check pci_bus_add_device(struct pci_dev *dev);
pci_read_bridge_bases  prototype  include/linux/pci.h  725  void pci_read_bridge_bases(struct pci_bus *child);
pci_find_parent_resource  prototype  include/linux/pci.h  727  struct resource *pci_find_parent_resource(const struct pci_dev *dev,struct resource *res);
pci_swizzle_interrupt_pin  prototype  include/linux/pci.h  728  u8 pci_swizzle_interrupt_pin(const struct pci_dev *dev,u8 pin);
pci_get_interrupt_pin  prototype  include/linux/pci.h  729  int pci_get_interrupt_pin(struct pci_dev *dev,struct pci_dev **bridge);
pci_common_swizzle  prototype  include/linux/pci.h  730  u8 pci_common_swizzle(struct pci_dev *dev,u8 *pinp);
pci_dev_get  function  include/linux/pci.h  1412  static inline struct pci_dev *pci_dev_get(struct pci_dev *dev)
pci_dev_put  macro  include/linux/pci.h  1261  #define pci_dev_put(dev) do { } while (0)
pci_remove_bus  prototype  include/linux/pci.h  733  extern void pci_remove_bus(struct pci_bus *b);
pci_stop_and_remove_bus_device  prototype  include/linux/pci.h  734  extern void pci_stop_and_remove_bus_device(struct pci_dev *dev);
pci_stop_root_bus  prototype  include/linux/pci.h  735  void pci_stop_root_bus(struct pci_bus *bus);
pci_remove_root_bus  prototype  include/linux/pci.h  736  void pci_remove_root_bus(struct pci_bus *bus);
pci_setup_cardbus  prototype  include/linux/pci.h  737  void pci_setup_cardbus(struct pci_bus *bus);
pci_sort_breadthfirst  prototype  include/linux/pci.h  738  extern void pci_sort_breadthfirst(void);
dev_is_pci  macro  include/linux/pci.h  1415  #define dev_is_pci(d) (false)
dev_is_pf  macro  include/linux/pci.h  1416  #define dev_is_pf(d) (false)
dev_num_vf  macro  include/linux/pci.h  1417  #define dev_num_vf(d) (0)
pci_lost_interrupt_reason  enum  include/linux/pci.h  745  enum pci_lost_interrupt_reason {
pci_lost_interrupt  prototype  include/linux/pci.h  751  enum pci_lost_interrupt_reason pci_lost_interrupt(struct pci_dev *dev);
pci_find_capability  function  include/linux/pci.h  1315  static inline int pci_find_capability(struct pci_dev *dev,int cap)
pci_find_next_capability  function  include/linux/pci.h  1321  static inline int pci_find_next_capability(struct pci_dev *dev,u8 post,int cap)
pci_find_ext_capability  function  include/linux/pci.h  1326  static inline int pci_find_ext_capability(struct pci_dev *dev,int cap)
pci_find_next_ext_capability  prototype  include/linux/pci.h  755  int pci_find_next_ext_capability(struct pci_dev *dev,int pos,int cap);
pci_find_ht_capability  prototype  include/linux/pci.h  756  int pci_find_ht_capability(struct pci_dev *dev,int ht_cap);
pci_find_next_ht_capability  prototype  include/linux/pci.h  757  int pci_find_next_ht_capability(struct pci_dev *dev,int pos,int ht_cap);
pci_find_next_bus  function  include/linux/pci.h  1398  static inline struct pci_bus *pci_find_next_bus(const struct pci_bus *from)
pci_get_device  function  include/linux/pci.h  1239  static inline struct pci_dev *pci_get_device(unsigned int vendor,unsigned int device,struct pci_dev *from)
pci_get_subsys  function  include/linux/pci.h  1248  static inline struct pci_dev *pci_get_subsys(unsigned int vendor,unsigned int device,unsigned int ss_vendor,unsigned int ss_device,struct pci_dev *from)
pci_get_slot  function  include/linux/pci.h  1402  static inline struct pci_dev *pci_get_slot(struct pci_bus *bus,unsigned int devfn)
pci_get_domain_bus_and_slot  prototype  include/linux/pci.h  767  struct pci_dev *pci_get_domain_bus_and_slot(int domain,unsigned int bus,unsigned int devfn);
pci_get_bus_and_slot  function  include/linux/pci.h  1406  static inline struct pci_dev *pci_get_bus_and_slot(unsigned int bus,unsigned int devfn)
pci_get_class  function  include/linux/pci.h  1254  static inline struct pci_dev *pci_get_class(unsigned int class,struct pci_dev *from)
pci_dev_present  macro  include/linux/pci.h  1259  #define pci_dev_present(ids) (0)
pci_bus_read_config_byte  prototype  include/linux/pci.h  777  int pci_bus_read_config_byte(struct pci_bus *bus,unsigned int devfn,int where, u8 *val);
pci_bus_read_config_word  prototype  include/linux/pci.h  779  int pci_bus_read_config_word(struct pci_bus *bus,unsigned int devfn,int where, u16 *val);
pci_bus_read_config_dword  prototype  include/linux/pci.h  781  int pci_bus_read_config_dword(struct pci_bus *bus,unsigned int devfn,int where, u32 *val);
pci_bus_write_config_byte  prototype  include/linux/pci.h  783  int pci_bus_write_config_byte(struct pci_bus *bus,unsigned int devfn,int where, u8 val);
pci_bus_write_config_word  prototype  include/linux/pci.h  785  int pci_bus_write_config_word(struct pci_bus *bus,unsigned int devfn,int where, u16 val);
pci_bus_write_config_dword  prototype  include/linux/pci.h  787  int pci_bus_write_config_dword(struct pci_bus *bus,unsigned int devfn,int where, u32 val);
pci_bus_set_ops  prototype  include/linux/pci.h  788  struct pci_ops *pci_bus_set_ops(struct pci_bus *bus,struct pci_ops *ops);
pci_read_config_byte  function  include/linux/pci.h  790  static inline int pci_read_config_byte(const struct pci_dev *dev,int where,u8 *val)
pci_read_config_word  function  include/linux/pci.h  794  static inline int pci_read_config_word(const struct pci_dev *dev,int where,u16 *val)
pci_read_config_dword  function  include/linux/pci.h  799  static inline int pci_read_config_dword(const struct pci_dev *dev,int where,u32 *val)
pci_write_config_byte  function  include/linux/pci.h  803  static inline int pci_write_config_byte(const struct pci_dev *dev,int where,u8 val)
pci_write_config_word  function  include/linux/pci.h  807  static inline int pci_write_config_word(const struct pci_dev *dev,int where,u16 val)
pci_write_config_dword  function  include/linux/pci.h  812  static inline int pci_write_config_dword(const struct pci_dev *dev,int where,u32 val)
pcie_capability_read_word  prototype  include/linux/pci.h  817  int pcie_capability_read_word(struct pci_dev *dev,int pos,u16 *val);
pcie_capability_read_dword  prototype  include/linux/pci.h  818  int pcie_capability_read_dword(struct pci_dev *dev,int pos,u32 *val);
pcie_capability_write_word  prototype  include/linux/pci.h  819  int pcie_capability_write_word(struct pci_dev *dev,int pos,u16 val);
pcie_capability_write_dword  prototype  include/linux/pci.h  820  int pcie_capability_write_dword(struct pci_dev *dev,int pos,u32 val);
pcie_capability_clear_and_set_word  prototype  include/linux/pci.h  822  int pcie_capability_clear_and_set_word(struct pci_dev *dev,int pos,u16 clear, u16 set);
pcie_capability_clear_and_set_dword  prototype  include/linux/pci.h  824  int pcie_capability_clear_and_set_dword(struct pci_dev *dev,int pos,u32 clear, u32 set);
pcie_capability_set_word  function  include/linux/pci.h  827  static inline int pcie_capability_set_word(struct pci_dev *dev,int pos,u16 set)
pcie_capability_set_dword  function  include/linux/pci.h  833  static inline int pcie_capability_set_dword(struct pci_dev *dev,int pos,u32 set)
pcie_capability_clear_word  function  include/linux/pci.h  839  static inline int pcie_capability_clear_word(struct pci_dev *dev,int pos,u16 clear)
pcie_capability_clear_dword  function  include/linux/pci.h  845  static inline int pcie_capability_clear_dword(struct pci_dev *dev,int pos,u32 clear)
pci_user_read_config_byte  prototype  include/linux/pci.h  851  int pci_user_read_config_byte(struct pci_dev *dev,int where,u8 *val);
pci_user_read_config_word  prototype  include/linux/pci.h  852  int pci_user_read_config_word(struct pci_dev *dev,int where,u16 *val);
pci_user_read_config_dword  prototype  include/linux/pci.h  853  int pci_user_read_config_dword(struct pci_dev *dev,int where,u32 *val);
pci_user_write_config_byte  prototype  include/linux/pci.h  854  int pci_user_write_config_byte(struct pci_dev *dev,int where,u8 val);
pci_user_write_config_word  prototype  include/linux/pci.h  855  int pci_user_write_config_word(struct pci_dev *dev,int where,u16 val);
pci_user_write_config_dword  prototype  include/linux/pci.h  856  int pci_user_write_config_dword(struct pci_dev *dev,int where,u32 val);
pci_enable_device  function  include/linux/pci.h  1266  static inline int pci_enable_device(struct pci_dev *dev)
pci_enable_device_io  prototype  include/linux/pci.h  859  int __must_check pci_enable_device_io(struct pci_dev *dev);
pci_enable_device_mem  prototype  include/linux/pci.h  860  int __must_check pci_enable_device_mem(struct pci_dev *dev);
pci_reenable_device  prototype  include/linux/pci.h  861  int __must_check pci_reenable_device(struct pci_dev *);
pcim_enable_device  prototype  include/linux/pci.h  862  int __must_check pcim_enable_device(struct pci_dev *pdev);
pcim_pin_device  prototype  include/linux/pci.h  863  void pcim_pin_device(struct pci_dev *pdev);
pci_is_enabled  function  include/linux/pci.h  865  static inline int pci_is_enabled(struct pci_dev *pdev)
pci_is_managed  function  include/linux/pci.h  870  static inline int pci_is_managed(struct pci_dev *pdev)
pci_disable_device  function  include/linux/pci.h  1271  static inline void pci_disable_device(struct pci_dev *dev)
pci_set_master  function  include/linux/pci.h  1263  static inline void pci_set_master(struct pci_dev *dev)
pci_clear_master  prototype  include/linux/pci.h  879  void pci_clear_master(struct pci_dev *dev);
pci_set_pcie_reset_state  prototype  include/linux/pci.h  881  int pci_set_pcie_reset_state(struct pci_dev *dev,enum pcie_reset_state state);
pci_set_cacheline_size  prototype  include/linux/pci.h  882  int pci_set_cacheline_size(struct pci_dev *dev);
HAVE_PCI_SET_MWI  macro  include/linux/pci.h  883  #define HAVE_PCI_SET_MWI
pci_set_mwi  prototype  include/linux/pci.h  884  int __must_check pci_set_mwi(struct pci_dev *dev);
pci_try_set_mwi  prototype  include/linux/pci.h  885  int pci_try_set_mwi(struct pci_dev *dev);
pci_clear_mwi  prototype  include/linux/pci.h  886  void pci_clear_mwi(struct pci_dev *dev);
pci_intx  prototype  include/linux/pci.h  887  void pci_intx(struct pci_dev *dev,int enable);
pci_intx_mask_supported  prototype  include/linux/pci.h  888  bool pci_intx_mask_supported(struct pci_dev *dev);
pci_check_and_mask_intx  prototype  include/linux/pci.h  889  bool pci_check_and_mask_intx(struct pci_dev *dev);
pci_check_and_unmask_intx  prototype  include/linux/pci.h  890  bool pci_check_and_unmask_intx(struct pci_dev *dev);
pci_msi_off  prototype  include/linux/pci.h  891  void pci_msi_off(struct pci_dev *dev);
pci_set_dma_max_seg_size  function  include/linux/pci.h  1285  static inline int pci_set_dma_max_seg_size(struct pci_dev *dev,unsigned int size)
pci_set_dma_seg_boundary  function  include/linux/pci.h  1291  static inline int pci_set_dma_seg_boundary(struct pci_dev *dev,unsigned long mask)
pcix_get_max_mmrbc  prototype  include/linux/pci.h  894  int pcix_get_max_mmrbc(struct pci_dev *dev);
pcix_get_mmrbc  prototype  include/linux/pci.h  895  int pcix_get_mmrbc(struct pci_dev *dev);
pcix_set_mmrbc  prototype  include/linux/pci.h  896  int pcix_set_mmrbc(struct pci_dev *dev,int mmrbc);
pcie_get_readrq  prototype  include/linux/pci.h  897  int pcie_get_readrq(struct pci_dev *dev);
pcie_set_readrq  prototype  include/linux/pci.h  898  int pcie_set_readrq(struct pci_dev *dev,int rq);
pcie_get_mps  prototype  include/linux/pci.h  899  int pcie_get_mps(struct pci_dev *dev);
pcie_set_mps  prototype  include/linux/pci.h  900  int pcie_set_mps(struct pci_dev *dev,int mps);
__pci_reset_function  prototype  include/linux/pci.h  901  int __pci_reset_function(struct pci_dev *dev);
__pci_reset_function_locked  prototype  include/linux/pci.h  902  int __pci_reset_function_locked(struct pci_dev *dev);
pci_reset_function  prototype  include/linux/pci.h  903  int pci_reset_function(struct pci_dev *dev);
pci_update_resource  prototype  include/linux/pci.h  904  void pci_update_resource(struct pci_dev *dev,int resno);
pci_assign_resource  function  include/linux/pci.h  1296  static inline int pci_assign_resource(struct pci_dev *dev,int i)
pci_reassign_resource  prototype  include/linux/pci.h  906  int __must_check pci_reassign_resource(struct pci_dev *dev,int i,resource_size_t add_size,resource_size_t align);
pci_select_bars  prototype  include/linux/pci.h  907  int pci_select_bars(struct pci_dev *dev,unsigned long flags);
pci_enable_rom  prototype  include/linux/pci.h  910  int pci_enable_rom(struct pci_dev *pdev);
pci_disable_rom  prototype  include/linux/pci.h  911  void pci_disable_rom(struct pci_dev *pdev);
pci_map_rom  prototype  include/linux/pci.h  912  void __iomem __must_check *pci_map_rom(struct pci_dev *pdev,size_t *size);
pci_unmap_rom  prototype  include/linux/pci.h  913  void pci_unmap_rom(struct pci_dev *pdev,void __iomem *rom);
pci_get_rom_size  prototype  include/linux/pci.h  914  size_t pci_get_rom_size(struct pci_dev *pdev,void __iomem *rom,size_t size);
pci_save_state  function  include/linux/pci.h  1332  static inline int pci_save_state(struct pci_dev *dev)
pci_restore_state  function  include/linux/pci.h  1337  static inline void pci_restore_state(struct pci_dev *dev)
pci_store_saved_state  prototype  include/linux/pci.h  919  struct pci_saved_state *pci_store_saved_state(struct pci_dev *dev);
pci_load_saved_state  prototype  include/linux/pci.h  920  int pci_load_saved_state(struct pci_dev *dev,struct pci_saved_state *state);
pci_load_and_free_saved_state  prototype  include/linux/pci.h  922  int pci_load_and_free_saved_state(struct pci_dev *dev,struct pci_saved_state **state);
__pci_complete_power_transition  prototype  include/linux/pci.h  923  int __pci_complete_power_transition(struct pci_dev *dev,pci_power_t state);
pci_set_power_state  function  include/linux/pci.h  1340  static inline int pci_set_power_state(struct pci_dev *dev,pci_power_t state)
pci_choose_state  function  include/linux/pci.h  1351  static inline pci_power_t pci_choose_state(struct pci_dev *dev,pm_message_t state)
pci_pme_capable  prototype  include/linux/pci.h  926  bool pci_pme_capable(struct pci_dev *dev,pci_power_t state);
pci_pme_active  prototype  include/linux/pci.h  927  void pci_pme_active(struct pci_dev *dev,bool enable);
__pci_enable_wake  prototype  include/linux/pci.h  929  int __pci_enable_wake(struct pci_dev *dev,pci_power_t state,bool runtime, bool enable);
pci_wake_from_d3  function  include/linux/pci.h  1345  static inline int pci_wake_from_d3(struct pci_dev *dev,bool enable)
pci_target_state  prototype  include/linux/pci.h  931  pci_power_t pci_target_state(struct pci_dev *dev);
pci_prepare_to_sleep  prototype  include/linux/pci.h  932  int pci_prepare_to_sleep(struct pci_dev *dev);
pci_back_from_sleep  prototype  include/linux/pci.h  933  int pci_back_from_sleep(struct pci_dev *dev);
pci_dev_run_wake  prototype  include/linux/pci.h  934  bool pci_dev_run_wake(struct pci_dev *dev);
pci_check_pme_status  prototype  include/linux/pci.h  935  bool pci_check_pme_status(struct pci_dev *dev);
pci_pme_wakeup_bus  prototype  include/linux/pci.h  936  void pci_pme_wakeup_bus(struct pci_bus *bus);
pci_enable_wake  function  include/linux/pci.h  1357  static inline int pci_enable_wake(struct pci_dev *dev,pci_power_t state,int enable)
PCI_EXP_IDO_REQUEST  macro  include/linux/pci.h  944  #define PCI_EXP_IDO_REQUEST (1<<0)
PCI_EXP_IDO_COMPLETION  macro  include/linux/pci.h  945  #define PCI_EXP_IDO_COMPLETION (1<<1)
pci_enable_ido  function  include/linux/pci.h  1362  static inline void pci_enable_ido(struct pci_dev *dev,unsigned long type)
pci_disable_ido  function  include/linux/pci.h  1366  static inline void pci_disable_ido(struct pci_dev *dev,unsigned long type)
pci_obff_signal_type  enum  include/linux/pci.h  949  enum pci_obff_signal_type {
pci_enable_obff  function  include/linux/pci.h  1370  static inline int pci_enable_obff(struct pci_dev *dev,unsigned long type)
pci_disable_obff  function  include/linux/pci.h  1375  static inline void pci_disable_obff(struct pci_dev *dev)
pci_enable_ltr  prototype  include/linux/pci.h  956  int pci_enable_ltr(struct pci_dev *dev);
pci_disable_ltr  prototype  include/linux/pci.h  957  void pci_disable_ltr(struct pci_dev *dev);
pci_set_ltr  prototype  include/linux/pci.h  958  int pci_set_ltr(struct pci_dev *dev,int snoop_lat_ns,int nosnoop_lat_ns);
set_pcie_port_type  prototype  include/linux/pci.h  961  void set_pcie_port_type(struct pci_dev *pdev);
set_pcie_hotplug_bridge  prototype  include/linux/pci.h  962  void set_pcie_hotplug_bridge(struct pci_dev *pdev);
pci_bus_find_capability  prototype  include/linux/pci.h  965  int pci_bus_find_capability(struct pci_bus *bus,unsigned int devfn,int cap);
pci_rescan_bus_bridge_resize  prototype  include/linux/pci.h  966  unsigned int pci_rescan_bus_bridge_resize(struct pci_dev *bridge);
pci_rescan_bus  prototype  include/linux/pci.h  967  unsigned int pci_rescan_bus(struct pci_bus *bus);
pci_read_vpd  prototype  include/linux/pci.h  970  ssize_t pci_read_vpd(struct pci_dev *dev,loff_t pos,size_t count,void *buf);
pci_write_vpd  prototype  include/linux/pci.h  971  ssize_t pci_write_vpd(struct pci_dev *dev,loff_t pos,size_t count,const void *buf);
pci_vpd_truncate  prototype  include/linux/pci.h  972  int pci_vpd_truncate(struct pci_dev *dev,size_t size);
pcibios_retrieve_fw_addr  prototype  include/linux/pci.h  975  resource_size_t pcibios_retrieve_fw_addr(struct pci_dev *dev,int idx);
pci_bus_assign_resources  prototype  include/linux/pci.h  976  void pci_bus_assign_resources(const struct pci_bus *bus);
pci_bus_size_bridges  prototype  include/linux/pci.h  977  void pci_bus_size_bridges(struct pci_bus *bus);
pci_claim_resource  prototype  include/linux/pci.h  978  int pci_claim_resource(struct pci_dev *,int);
pci_assign_unassigned_resources  prototype  include/linux/pci.h  979  void pci_assign_unassigned_resources(void);
pci_assign_unassigned_bridge_resources  prototype  include/linux/pci.h  980  void pci_assign_unassigned_bridge_resources(struct pci_dev *bridge);
pci_assign_unassigned_bus_resources  prototype  include/linux/pci.h  981  void pci_assign_unassigned_bus_resources(struct pci_bus *bus);
pdev_enable_device  prototype  include/linux/pci.h  982  void pdev_enable_device(struct pci_dev *);
pci_enable_resources  prototype  include/linux/pci.h  983  int pci_enable_resources(struct pci_dev *,int mask);
pci_fixup_irqs  prototype  include/linux/pci.h  985  void pci_fixup_irqs(u8 (*)(struct pci_dev *,u8 *),int (*)(const struct pci_dev *, u8, u8));
HAVE_PCI_REQ_REGIONS  macro  include/linux/pci.h  986  #define HAVE_PCI_REQ_REGIONS 2
pci_request_regions  function  include/linux/pci.h  1379  static inline int pci_request_regions(struct pci_dev *dev,const char *res_name)
pci_request_regions_exclusive  prototype  include/linux/pci.h  988  int __must_check pci_request_regions_exclusive(struct pci_dev *,const char *);
pci_release_regions  function  include/linux/pci.h  1384  static inline void pci_release_regions(struct pci_dev *dev)
pci_request_region  prototype  include/linux/pci.h  990  int __must_check pci_request_region(struct pci_dev *,int,const char *);
pci_request_region_exclusive  prototype  include/linux/pci.h  991  int __must_check pci_request_region_exclusive(struct pci_dev *,int,const char *);
pci_release_region  prototype  include/linux/pci.h  992  void pci_release_region(struct pci_dev *,int);
pci_request_selected_regions  prototype  include/linux/pci.h  993  int pci_request_selected_regions(struct pci_dev *,int,const char *);
pci_request_selected_regions_exclusive  prototype  include/linux/pci.h  994  int pci_request_selected_regions_exclusive(struct pci_dev *,int,const char *);
pci_release_selected_regions  prototype  include/linux/pci.h  995  void pci_release_selected_regions(struct pci_dev *,int);
pci_add_resource  prototype  include/linux/pci.h  998  void pci_add_resource(struct list_head *resources,struct resource *res);
pci_add_resource_offset  prototype  include/linux/pci.h  1000  void pci_add_resource_offset(struct list_head *resources,struct resource *res,resource_size_t offset);
pci_free_resource_list  prototype  include/linux/pci.h  1001  void pci_free_resource_list(struct list_head *resources);
pci_bus_add_resource  prototype  include/linux/pci.h  1002  void pci_bus_add_resource(struct pci_bus *bus,struct resource *res,unsigned int flags);
pci_bus_resource_n  prototype  include/linux/pci.h  1003  struct resource *pci_bus_resource_n(const struct pci_bus *bus,int n);
pci_bus_remove_resources  prototype  include/linux/pci.h  1004  void pci_bus_remove_resources(struct pci_bus *bus);
pci_bus_for_each_resource  macro  include/linux/pci.h  1009  #define pci_bus_for_each_resource(bus,res,i) for (i = 0; (res = pci_bus_resource_n(bus, i)) || i < PCI_BRIDGE_RESOURCE_NUM; i++)
pci_bus_alloc_resource  prototype  include/linux/pci.h  1019  int __must_check pci_bus_alloc_resource(struct pci_bus *bus,struct resource *res, resource_size_t size,resource_size_t align, resource_size_t min,unsigned int type_mask,resource_size_t (*alignf)(void *,const struct resource *,resource_size_t,resource_size_t),void *alignf_data);
pci_enable_bridges  prototype  include/linux/pci.h  1020  void pci_enable_bridges(struct pci_bus *bus);
__pci_register_driver  function  include/linux/pci.h  1302  static inline int __pci_register_driver(struct pci_driver *drv,struct module *owner)
pci_register_driver  function  include/linux/pci.h  1307  static inline int pci_register_driver(struct pci_driver *drv)
pci_unregister_driver  function  include/linux/pci.h  1312  static inline void pci_unregister_driver(struct pci_driver *drv)
module_pci_driver  macro  include/linux/pci.h  1044  #define module_pci_driver(__pci_driver) module_driver(__pci_driver, pci_register_driver, pci_unregister_driver)
pci_dev_driver  prototype  include/linux/pci.h  1046  struct pci_driver *pci_dev_driver(const struct pci_dev *dev);
pci_add_dynid  prototype  include/linux/pci.h  1051  int pci_add_dynid(struct pci_driver *drv,unsigned int vendor, unsigned int device,unsigned int subvendor, unsigned int subdevice,unsigned int class, unsigned int class_mask,unsigned long driver_data);
pci_match_id  prototype  include/linux/pci.h  1053  const struct pci_device_id *pci_match_id(const struct pci_device_id *ids,struct pci_dev *dev);
pci_scan_bridge  prototype  include/linux/pci.h  1055  int pci_scan_bridge(struct pci_bus *bus,struct pci_dev *dev,int max,int pass);
pci_walk_bus  prototype  include/linux/pci.h  1058  void pci_walk_bus(struct pci_bus *top,int (*cb)(struct pci_dev *,void *),void *userdata);
pci_cfg_space_size_ext  prototype  include/linux/pci.h  1059  int pci_cfg_space_size_ext(struct pci_dev *dev);
pci_cfg_space_size  prototype  include/linux/pci.h  1060  int pci_cfg_space_size(struct pci_dev *dev);
pci_bus_max_busnr  prototype  include/linux/pci.h  1061  unsigned char pci_bus_max_busnr(struct pci_bus *bus);
pci_setup_bridge  prototype  include/linux/pci.h  1062  void pci_setup_bridge(struct pci_bus *bus);
pcibios_window_alignment  prototype  include/linux/pci.h  1064  resource_size_t pcibios_window_alignment(struct pci_bus *bus,unsigned long type);
PCI_VGA_STATE_CHANGE_BRIDGE  macro  include/linux/pci.h  1066  #define PCI_VGA_STATE_CHANGE_BRIDGE (1 << 0)
PCI_VGA_STATE_CHANGE_DECODES  macro  include/linux/pci.h  1067  #define PCI_VGA_STATE_CHANGE_DECODES (1 << 1)
pci_set_vga_state  prototype  include/linux/pci.h  1070  int pci_set_vga_state(struct pci_dev *pdev,bool decode,unsigned int command_bits, u32 flags);
pci_pool  macro  include/linux/pci.h  1076  #define pci_pool dma_pool
pci_pool_create  macro  include/linux/pci.h  1078  #define pci_pool_create(name,pdev,size,align,allocation) dma_pool_create(name, &pdev->dev, size, align, allocation)
pci_pool_destroy  macro  include/linux/pci.h  1079  #define pci_pool_destroy(pool) dma_pool_destroy(pool)
pci_pool_alloc  macro  include/linux/pci.h  1080  #define pci_pool_alloc(pool,flags,handle) dma_pool_alloc(pool,flags,handle)
pci_pool_free  macro  include/linux/pci.h  1081  #define pci_pool_free(pool,vaddr,addr) dma_pool_free(pool,vaddr,addr)
pci_dma_burst_strategy  enum  include/linux/pci.h  1083  enum pci_dma_burst_strategy {
msix_entry  struct  include/linux/pci.h  1092  struct msix_entry {
pci_enable_msi_block  prototype  include/linux/pci.h  1134  extern int pci_enable_msi_block(struct pci_dev *dev,unsigned int nvec);
pci_msi_shutdown  prototype  include/linux/pci.h  1135  extern void pci_msi_shutdown(struct pci_dev *dev);
pci_disable_msi  prototype  include/linux/pci.h  1136  extern void pci_disable_msi(struct pci_dev *dev);
pci_msix_table_size  prototype  include/linux/pci.h  1137  extern int pci_msix_table_size(struct pci_dev *dev);
pci_enable_msix  prototype  include/linux/pci.h  1139  extern int pci_enable_msix(struct pci_dev *dev,struct msix_entry *entries, int nvec);
pci_msix_shutdown  prototype  include/linux/pci.h  1140  extern void pci_msix_shutdown(struct pci_dev *dev);
pci_disable_msix  prototype  include/linux/pci.h  1141  extern void pci_disable_msix(struct pci_dev *dev);
msi_remove_pci_irq_vectors  prototype  include/linux/pci.h  1142  extern void msi_remove_pci_irq_vectors(struct pci_dev *dev);
pci_restore_msi_state  prototype  include/linux/pci.h  1143  extern void pci_restore_msi_state(struct pci_dev *dev);
pci_msi_enabled  prototype  include/linux/pci.h  1144  extern int pci_msi_enabled(void);
pcie_ports_disabled  macro  include/linux/pci.h  1151  #define pcie_ports_disabled true
pcie_ports_auto  macro  include/linux/pci.h  1152  #define pcie_ports_auto false
pcie_aspm_enabled  prototype  include/linux/pci.h  1159  extern int pcie_aspm_enabled(void);
pcie_aspm_support_enabled  prototype  include/linux/pci.h  1160  extern bool pcie_aspm_support_enabled(void);
pci_no_aer  function  include/linux/pci.h  1167  static inline void pci_no_aer(void) { }
pci_aer_available  function  include/linux/pci.h  1168  static inline bool pci_aer_available(void) { return false; }
pcie_set_ecrc_checking  prototype  include/linux/pci.h  1178  extern void pcie_set_ecrc_checking(struct pci_dev *dev);
pcie_ecrc_get_policy  prototype  include/linux/pci.h  1179  extern void pcie_ecrc_get_policy(char *str);
pci_enable_msi  macro  include/linux/pci.h  1182  #define pci_enable_msi(pdev) pci_enable_msi_block(pdev,1)
ht_create_irq  prototype  include/linux/pci.h  1186  int ht_create_irq(struct pci_dev *dev,int idx);
ht_destroy_irq  prototype  include/linux/pci.h  1187  void ht_destroy_irq(unsigned int irq);
pci_cfg_access_lock  prototype  include/linux/pci.h  1190  extern void pci_cfg_access_lock(struct pci_dev *dev);
pci_cfg_access_trylock  prototype  include/linux/pci.h  1191  extern bool pci_cfg_access_trylock(struct pci_dev *dev);
pci_cfg_access_unlock  prototype  include/linux/pci.h  1192  extern void pci_cfg_access_unlock(struct pci_dev *dev);
pci_domain_nr  function  arch/x86/include/asm/pci.h  34  static inline int pci_domain_nr(struct pci_bus *bus)
pci_proc_domain  function  arch/x86/include/asm/pci.h  40  static inline int pci_proc_domain(struct pci_bus *bus)
pci_register_set_vga_state  prototype  include/linux/pci.h  1217  extern void pci_register_set_vga_state(arch_set_vga_state_t func);
_PCI_NOP  macro  include/linux/pci.h  1229  #define _PCI_NOP(o,s,t) static inline int pci_##o##_config_##s(struct pci_dev *dev, int where, t val) { return PCIBIOS_FUNC_NOT_SUPPORTED; }
_PCI_NOP_ALL  macro  include/linux/pci.h  1233  #define _PCI_NOP_ALL(o,x) _PCI_NOP(o,byte,u8 x) _PCI_NOP(o, word, u16 x) _PCI_NOP(o, dword, u32 x)
pci_set_dma_mask  function  include/asm-generic/pci-dma-compat.h  105  static inline int pci_set_dma_mask(struct pci_dev *dev,u64 mask)
pci_set_consistent_dma_mask  function  include/asm-generic/pci-dma-compat.h  110  static inline int pci_set_consistent_dma_mask(struct pci_dev *dev,u64 mask)
pci_dma_burst_advice  function  arch/x86/include/asm/pci.h  88  static inline void pci_dma_burst_advice(struct pci_dev *pdev,enum pci_dma_burst_strategy *strat,unsigned long *strategy_parameter)
pci_block_cfg_access  function  include/linux/pci.h  1389  static inline void pci_block_cfg_access(struct pci_dev *dev)
pci_block_cfg_access_in_atomic  function  include/linux/pci.h  1392  static inline int pci_block_cfg_access_in_atomic(struct pci_dev *dev)
pci_unblock_cfg_access  function  include/linux/pci.h  1395  static inline void pci_unblock_cfg_access(struct pci_dev *dev)
PCIBIOS_MAX_MEM_32  macro  arch/x86/include/asm/pci.h  152  #define PCIBIOS_MAX_MEM_32 0xffffffff
pci_resource_start  macro  include/linux/pci.h  1430  #define pci_resource_start(dev,bar) ((dev)->resource[(bar)].start)
pci_resource_end  macro  include/linux/pci.h  1431  #define pci_resource_end(dev,bar) ((dev)->resource[(bar)].end)
pci_resource_flags  macro  include/linux/pci.h  1432  #define pci_resource_flags(dev,bar) ((dev)->resource[(bar)].flags)
pci_resource_len  macro  include/linux/pci.h  1439  #define pci_resource_len(dev,bar) ((pci_resource_start((dev), (bar)) == 0 && pci_resource_end((dev), (bar)) == pci_resource_start((dev), (bar))) ? 0 : (pci_resource_end((dev), (bar)) - pci_resource_start((dev), (bar)) + 1))
pci_get_drvdata  function  include/linux/pci.h  1445  static inline void *pci_get_drvdata(struct pci_dev *pdev)
pci_set_drvdata  function  include/linux/pci.h  1450  static inline void pci_set_drvdata(struct pci_dev *pdev,void *data)
pci_name  function  include/linux/pci.h  1458  static inline const char *pci_name(const struct pci_dev *pdev)
pci_resource_to_user  function  include/linux/pci.h  1470  static inline void pci_resource_to_user(const struct pci_dev *dev,int bar,const struct resource *rsrc, resource_size_t *start,resource_size_t *end)
pci_fixup  struct  include/linux/pci.h  1485  struct pci_fixup {
pci_fixup_pass  enum  include/linux/pci.h  1493  enum pci_fixup_pass {
DECLARE_PCI_FIXUP_SECTION  macro  include/linux/pci.h  1508  #define DECLARE_PCI_FIXUP_SECTION(section,name,vendor,device,class, class_shift, hook) static const struct pci_fixup __pci_fixup_##name __used __attribute__((__section__(#section), aligned((sizeof(void *))))) = { vendor, device, class, class_shift, hook };
DECLARE_PCI_FIXUP_CLASS_EARLY  macro  include/linux/pci.h  1513  #define DECLARE_PCI_FIXUP_CLASS_EARLY(vendor,device,class, class_shift, hook) DECLARE_PCI_FIXUP_SECTION(.pci_fixup_early, vendor##device##hook, vendor, device, class, class_shift, hook)
DECLARE_PCI_FIXUP_CLASS_HEADER  macro  include/linux/pci.h  1517  #define DECLARE_PCI_FIXUP_CLASS_HEADER(vendor,device,class, class_shift, hook) DECLARE_PCI_FIXUP_SECTION(.pci_fixup_header, vendor##device##hook, vendor, device, class, class_shift, hook)
DECLARE_PCI_FIXUP_CLASS_FINAL  macro  include/linux/pci.h  1521  #define DECLARE_PCI_FIXUP_CLASS_FINAL(vendor,device,class, class_shift, hook) DECLARE_PCI_FIXUP_SECTION(.pci_fixup_final, vendor##device##hook, vendor, device, class, class_shift, hook)
DECLARE_PCI_FIXUP_CLASS_ENABLE  macro  include/linux/pci.h  1525  #define DECLARE_PCI_FIXUP_CLASS_ENABLE(vendor,device,class, class_shift, hook) DECLARE_PCI_FIXUP_SECTION(.pci_fixup_enable, vendor##device##hook, vendor, device, class, class_shift, hook)
DECLARE_PCI_FIXUP_CLASS_RESUME  macro  include/linux/pci.h  1530  #define DECLARE_PCI_FIXUP_CLASS_RESUME(vendor,device,class, class_shift, hook) DECLARE_PCI_FIXUP_SECTION(.pci_fixup_resume, resume##vendor##device##hook, vendor, device, class, class_shift, hook)
DECLARE_PCI_FIXUP_CLASS_RESUME_EARLY  macro  include/linux/pci.h  1535  #define DECLARE_PCI_FIXUP_CLASS_RESUME_EARLY(vendor,device,class, class_shift, hook) DECLARE_PCI_FIXUP_SECTION(.pci_fixup_resume_early, resume_early##vendor##device##hook, vendor, device, class, class_shift, hook)
DECLARE_PCI_FIXUP_CLASS_SUSPEND  macro  include/linux/pci.h  1540  #define DECLARE_PCI_FIXUP_CLASS_SUSPEND(vendor,device,class, class_shift, hook) DECLARE_PCI_FIXUP_SECTION(.pci_fixup_suspend, suspend##vendor##device##hook, vendor, device, class, class_shift, hook)
DECLARE_PCI_FIXUP_EARLY  macro  include/linux/pci.h  1544  #define DECLARE_PCI_FIXUP_EARLY(vendor,device,hook) DECLARE_PCI_FIXUP_SECTION(.pci_fixup_early, vendor##device##hook, vendor, device, PCI_ANY_ID, 0, hook)
DECLARE_PCI_FIXUP_HEADER  macro  include/linux/pci.h  1547  #define DECLARE_PCI_FIXUP_HEADER(vendor,device,hook) DECLARE_PCI_FIXUP_SECTION(.pci_fixup_header, vendor##device##hook, vendor, device, PCI_ANY_ID, 0, hook)
DECLARE_PCI_FIXUP_FINAL  macro  include/linux/pci.h  1550  #define DECLARE_PCI_FIXUP_FINAL(vendor,device,hook) DECLARE_PCI_FIXUP_SECTION(.pci_fixup_final, vendor##device##hook, vendor, device, PCI_ANY_ID, 0, hook)
DECLARE_PCI_FIXUP_ENABLE  macro  include/linux/pci.h  1553  #define DECLARE_PCI_FIXUP_ENABLE(vendor,device,hook) DECLARE_PCI_FIXUP_SECTION(.pci_fixup_enable, vendor##device##hook, vendor, device, PCI_ANY_ID, 0, hook)
DECLARE_PCI_FIXUP_RESUME  macro  include/linux/pci.h  1557  #define DECLARE_PCI_FIXUP_RESUME(vendor,device,hook) DECLARE_PCI_FIXUP_SECTION(.pci_fixup_resume, resume##vendor##device##hook, vendor, device, PCI_ANY_ID, 0, hook)
DECLARE_PCI_FIXUP_RESUME_EARLY  macro  include/linux/pci.h  1561  #define DECLARE_PCI_FIXUP_RESUME_EARLY(vendor,device,hook) DECLARE_PCI_FIXUP_SECTION(.pci_fixup_resume_early, resume_early##vendor##device##hook, vendor, device, PCI_ANY_ID, 0, hook)
DECLARE_PCI_FIXUP_SUSPEND  macro  include/linux/pci.h  1565  #define DECLARE_PCI_FIXUP_SUSPEND(vendor,device,hook) DECLARE_PCI_FIXUP_SECTION(.pci_fixup_suspend, suspend##vendor##device##hook, vendor, device, PCI_ANY_ID, 0, hook)
pci_fixup_device  function  include/linux/pci.h  1573  static inline void pci_fixup_device(enum pci_fixup_pass pass,struct pci_dev *dev) {}
pci_get_dma_source  function  include/linux/pci.h  1574  static inline struct pci_dev *pci_get_dma_source(struct pci_dev *dev)
pci_dev_specific_acs_enabled  function  include/linux/pci.h  1579  static inline int pci_dev_specific_acs_enabled(struct pci_dev *dev,u16 acs_flags)
pcim_iomap  prototype  include/linux/pci.h  1585  void __iomem *pcim_iomap(struct pci_dev *pdev,int bar,unsigned long maxlen);
pcim_iounmap  prototype  include/linux/pci.h  1586  void pcim_iounmap(struct pci_dev *pdev,void __iomem *addr);
pcim_iomap_table  prototype  include/linux/pci.h  1587  void __iomem * const *pcim_iomap_table(struct pci_dev *pdev);
pcim_iomap_regions  prototype  include/linux/pci.h  1588  int pcim_iomap_regions(struct pci_dev *pdev,int mask,const char *name);
pcim_iomap_regions_request_all  prototype  include/linux/pci.h  1590  int pcim_iomap_regions_request_all(struct pci_dev *pdev,int mask,const char *name);
pcim_iounmap_regions  prototype  include/linux/pci.h  1591  void pcim_iounmap_regions(struct pci_dev *pdev,int mask);
PCIPCI_FAIL  macro  include/linux/pci.h  1594  #define PCIPCI_FAIL 1
PCIPCI_TRITON  macro  include/linux/pci.h  1595  #define PCIPCI_TRITON 2
PCIPCI_NATOMA  macro  include/linux/pci.h  1596  #define PCIPCI_NATOMA 4
PCIPCI_VIAETBF  macro  include/linux/pci.h  1597  #define PCIPCI_VIAETBF 8
PCIPCI_VSFX  macro  include/linux/pci.h  1598  #define PCIPCI_VSFX 16
PCIPCI_ALIMAGIK  macro  include/linux/pci.h  1599  #define PCIPCI_ALIMAGIK 32
PCIAGP_FAIL  macro  include/linux/pci.h  1600  #define PCIAGP_FAIL 64
pcibios_add_platform_entries  prototype  include/linux/pci.h  1611  int pcibios_add_platform_entries(struct pci_dev *dev);
pcibios_disable_device  prototype  include/linux/pci.h  1612  void pcibios_disable_device(struct pci_dev *dev);
pcibios_set_master  prototype  arch/x86/include/asm/pci.h  72  void pcibios_set_master(struct pci_dev *dev);
pcibios_set_pcie_reset_state  prototype  include/linux/pci.h  1615  int pcibios_set_pcie_reset_state(struct pci_dev *dev,enum pcie_reset_state state);
pcibios_add_device  prototype  include/linux/pci.h  1616  int pcibios_add_device(struct pci_dev *dev);
pci_mmcfg_early_init  function  include/linux/pci.h  1622  static inline void pci_mmcfg_early_init(void) { }
pci_mmcfg_late_init  function  include/linux/pci.h  1623  static inline void pci_mmcfg_late_init(void) { }
pci_ext_cfg_avail  prototype  include/linux/pci.h  1626  int pci_ext_cfg_avail(void);
pci_ioremap_bar  prototype  include/linux/pci.h  1628  void __iomem *pci_ioremap_bar(struct pci_dev *pdev,int bar);
pci_enable_sriov  function  include/linux/pci.h  1638  static inline int pci_enable_sriov(struct pci_dev *dev,int nr_virtfn)
pci_disable_sriov  function  include/linux/pci.h  1642  static inline void pci_disable_sriov(struct pci_dev *dev)
pci_sriov_migration  function  include/linux/pci.h  1645  static inline irqreturn_t pci_sriov_migration(struct pci_dev *dev)
pci_num_vf  function  include/linux/pci.h  1649  static inline int pci_num_vf(struct pci_dev *dev)
pci_sriov_set_totalvfs  function  include/linux/pci.h  1653  static inline int pci_sriov_set_totalvfs(struct pci_dev *dev,u16 numvfs)
pci_sriov_get_totalvfs  function  include/linux/pci.h  1657  static inline int pci_sriov_get_totalvfs(struct pci_dev *dev)
pci_hp_create_module_link  prototype  include/linux/pci.h  1664  extern void pci_hp_create_module_link(struct pci_slot *pci_slot);
pci_hp_remove_module_link  prototype  include/linux/pci.h  1665  extern void pci_hp_remove_module_link(struct pci_slot *pci_slot);
pci_pcie_cap  function  include/linux/pci.h  1679  static inline int pci_pcie_cap(struct pci_dev *dev)
pci_is_pcie  function  include/linux/pci.h  1690  static inline bool pci_is_pcie(struct pci_dev *dev)
pci_pcie_type  function  include/linux/pci.h  1699  static inline int pci_pcie_type(const struct pci_dev *dev)
pci_request_acs  prototype  include/linux/pci.h  1704  void pci_request_acs(void);
pci_acs_enabled  prototype  include/linux/pci.h  1705  bool pci_acs_enabled(struct pci_dev *pdev,u16 acs_flags);
pci_acs_path_enabled  prototype  include/linux/pci.h  1707  bool pci_acs_path_enabled(struct pci_dev *start,struct pci_dev *end, u16 acs_flags);
PCI_VPD_LRDT  macro  include/linux/pci.h  1709  #define PCI_VPD_LRDT 0x80
PCI_VPD_LRDT_ID  macro  include/linux/pci.h  1710  #define PCI_VPD_LRDT_ID(x) (x | PCI_VPD_LRDT)
PCI_VPD_LTIN_ID_STRING  macro  include/linux/pci.h  1713  #define PCI_VPD_LTIN_ID_STRING 0x02
PCI_VPD_LTIN_RO_DATA  macro  include/linux/pci.h  1714  #define PCI_VPD_LTIN_RO_DATA 0x10
PCI_VPD_LTIN_RW_DATA  macro  include/linux/pci.h  1715  #define PCI_VPD_LTIN_RW_DATA 0x11
PCI_VPD_LRDT_ID_STRING  macro  include/linux/pci.h  1717  #define PCI_VPD_LRDT_ID_STRING PCI_VPD_LRDT_ID(PCI_VPD_LTIN_ID_STRING)
PCI_VPD_LRDT_RO_DATA  macro  include/linux/pci.h  1718  #define PCI_VPD_LRDT_RO_DATA PCI_VPD_LRDT_ID(PCI_VPD_LTIN_RO_DATA)
PCI_VPD_LRDT_RW_DATA  macro  include/linux/pci.h  1719  #define PCI_VPD_LRDT_RW_DATA PCI_VPD_LRDT_ID(PCI_VPD_LTIN_RW_DATA)
PCI_VPD_STIN_END  macro  include/linux/pci.h  1722  #define PCI_VPD_STIN_END 0x78
PCI_VPD_SRDT_END  macro  include/linux/pci.h  1724  #define PCI_VPD_SRDT_END PCI_VPD_STIN_END
PCI_VPD_SRDT_TIN_MASK  macro  include/linux/pci.h  1726  #define PCI_VPD_SRDT_TIN_MASK 0x78
PCI_VPD_SRDT_LEN_MASK  macro  include/linux/pci.h  1727  #define PCI_VPD_SRDT_LEN_MASK 0x07
PCI_VPD_LRDT_TAG_SIZE  macro  include/linux/pci.h  1729  #define PCI_VPD_LRDT_TAG_SIZE 3
PCI_VPD_SRDT_TAG_SIZE  macro  include/linux/pci.h  1730  #define PCI_VPD_SRDT_TAG_SIZE 1
PCI_VPD_INFO_FLD_HDR_SIZE  macro  include/linux/pci.h  1732  #define PCI_VPD_INFO_FLD_HDR_SIZE 3
PCI_VPD_RO_KEYWORD_PARTNO  macro  include/linux/pci.h  1734  #define PCI_VPD_RO_KEYWORD_PARTNO "PN"
PCI_VPD_RO_KEYWORD_MFR_ID  macro  include/linux/pci.h  1735  #define PCI_VPD_RO_KEYWORD_MFR_ID "MN"
PCI_VPD_RO_KEYWORD_VENDOR0  macro  include/linux/pci.h  1736  #define PCI_VPD_RO_KEYWORD_VENDOR0 "V0"
PCI_VPD_RO_KEYWORD_CHKSUM  macro  include/linux/pci.h  1737  #define PCI_VPD_RO_KEYWORD_CHKSUM "RV"
pci_vpd_lrdt_size  function  include/linux/pci.h  1745  static inline u16 pci_vpd_lrdt_size(const u8 *lrdt)
pci_vpd_srdt_size  function  include/linux/pci.h  1756  static inline u8 pci_vpd_srdt_size(const u8 *srdt)
pci_vpd_info_field_size  function  include/linux/pci.h  1767  static inline u8 pci_vpd_info_field_size(const u8 *info_field)
pci_vpd_find_tag  prototype  include/linux/pci.h  1782  int pci_vpd_find_tag(const u8 *buf,unsigned int off,unsigned int len,u8 rdt);
pci_vpd_find_info_keyword  prototype  include/linux/pci.h  1795  int pci_vpd_find_info_keyword(const u8 *buf,unsigned int off,unsigned int len, const char *kw);
pci_set_of_node  function  include/linux/pci.h  1820  static inline void pci_set_of_node(struct pci_dev *dev) { }
pci_release_of_node  function  include/linux/pci.h  1821  static inline void pci_release_of_node(struct pci_dev *dev) { }
pci_set_bus_of_node  function  include/linux/pci.h  1822  static inline void pci_set_bus_of_node(struct pci_bus *bus) { }
pci_release_bus_of_node  function  include/linux/pci.h  1823  static inline void pci_release_bus_of_node(struct pci_bus *bus) { }
pcibios_get_phb_of_node  prototype  include/linux/pci.h  1806  extern struct device_node * __weak pcibios_get_phb_of_node(struct pci_bus *bus);
pci_device_to_OF_node  function  include/linux/pci.h  1809  pci_device_to_OF_node(const struct pci_dev *pdev)
pci_bus_to_OF_node  function  include/linux/pci.h  1814  static inline struct device_node *pci_bus_to_OF_node(struct pci_bus *bus)
pci_dev_to_eeh_dev  function  include/linux/pci.h  1827  static inline struct eeh_dev *pci_dev_to_eeh_dev(struct pci_dev *pdev)
pci_find_upstream_pcie_bridge  prototype  include/linux/pci.h  1842  struct pci_dev *pci_find_upstream_pcie_bridge(struct pci_dev *pdev);
_LINUX_DELAY_H  macro  include/linux/delay.h  2  #define _LINUX_DELAY_H
MAX_UDELAY_MS  macro  include/linux/delay.h  27  #define MAX_UDELAY_MS 5
mdelay  macro  include/linux/delay.h  33  #define mdelay(n) ( (__builtin_constant_p(n) && (n)<=MAX_UDELAY_MS) ? udelay((n)*1000) : ({unsigned long __ms=(n); while (__ms--) udelay(1000);}))
ndelay  macro  include/asm-generic/delay.h  42  #define ndelay(n) ({ if (__builtin_constant_p(n)) { if ((n) / 20000 >= 1) __bad_ndelay(); else __const_udelay((n) * 5ul); } else { __ndelay(n); } })
calibrate_delay  prototype  include/linux/delay.h  45  void calibrate_delay(void);
msleep  prototype  include/linux/delay.h  46  void msleep(unsigned int msecs);
msleep_interruptible  prototype  include/linux/delay.h  47  unsigned long msleep_interruptible(unsigned int msecs);
usleep_range  prototype  include/linux/delay.h  48  void usleep_range(unsigned long min,unsigned long max);
ssleep  function  include/linux/delay.h  50  static inline void ssleep(unsigned int seconds)
_LINUX_INIT_H  macro  include/linux/init.h  2  #define _LINUX_INIT_H
__init  macro  include/linux/init.h  44  #define __init __section(.init.text) __cold notrace
__initdata  macro  include/linux/init.h  45  #define __initdata __section(.init.data)
__initconst  macro  include/linux/init.h  46  #define __initconst __constsection(.init.rodata)
__exitdata  macro  include/linux/init.h  47  #define __exitdata __section(.exit.data)
__exit_call  macro  include/linux/init.h  48  #define __exit_call __used __section(.exitcall.exit)
__constsection  macro  include/linux/init.h  58  #define __constsection(x) __section(x)
__ref  macro  include/linux/init.h  78  #define __ref __section(.ref.text) noinline
__refdata  macro  include/linux/init.h  79  #define __refdata __section(.ref.data)
__refconst  macro  include/linux/init.h  80  #define __refconst __constsection(.ref.rodata)
__init_refok  macro  include/linux/init.h  83  #define __init_refok __ref
__initdata_refok  macro  include/linux/init.h  84  #define __initdata_refok __refdata
__exit_refok  macro  include/linux/init.h  85  #define __exit_refok __ref
__exitused  macro  include/linux/init.h  91  #define __exitused __used
__exit  macro  include/linux/init.h  94  #define __exit __section(.exit.text) __exitused __cold notrace
__cpuinit  macro  include/linux/init.h  97  #define __cpuinit __section(.cpuinit.text) __cold notrace
__cpuinitdata  macro  include/linux/init.h  98  #define __cpuinitdata __section(.cpuinit.data)
__cpuinitconst  macro  include/linux/init.h  99  #define __cpuinitconst __constsection(.cpuinit.rodata)
__cpuexit  macro  include/linux/init.h  100  #define __cpuexit __section(.cpuexit.text) __exitused __cold notrace
__cpuexitdata  macro  include/linux/init.h  101  #define __cpuexitdata __section(.cpuexit.data)
__cpuexitconst  macro  include/linux/init.h  102  #define __cpuexitconst __constsection(.cpuexit.rodata)
__meminit  macro  include/linux/init.h  105  #define __meminit __section(.meminit.text) __cold notrace
__meminitdata  macro  include/linux/init.h  106  #define __meminitdata __section(.meminit.data)
__meminitconst  macro  include/linux/init.h  107  #define __meminitconst __constsection(.meminit.rodata)
__memexit  macro  include/linux/init.h  108  #define __memexit __section(.memexit.text) __exitused __cold notrace
__memexitdata  macro  include/linux/init.h  109  #define __memexitdata __section(.memexit.data)
__memexitconst  macro  include/linux/init.h  110  #define __memexitconst __constsection(.memexit.rodata)
__HEAD  macro  include/linux/init.h  113  #define __HEAD .section ".head.text","ax"
__INIT  macro  include/linux/init.h  114  #define __INIT .section ".init.text","ax"
__FINIT  macro  include/linux/init.h  115  #define __FINIT .previous
__INITDATA  macro  include/linux/init.h  117  #define __INITDATA .section ".init.data","aw",%progbits
__INITRODATA  macro  include/linux/init.h  118  #define __INITRODATA .section ".init.rodata","a",%progbits
__FINITDATA  macro  include/linux/init.h  119  #define __FINITDATA .previous
__CPUINIT  macro  include/linux/init.h  121  #define __CPUINIT .section ".cpuinit.text","ax"
__CPUINITDATA  macro  include/linux/init.h  122  #define __CPUINITDATA .section ".cpuinit.data","aw"
__CPUINITRODATA  macro  include/linux/init.h  123  #define __CPUINITRODATA .section ".cpuinit.rodata","a"
__MEMINIT  macro  include/linux/init.h  125  #define __MEMINIT .section ".meminit.text","ax"
__MEMINITDATA  macro  include/linux/init.h  126  #define __MEMINITDATA .section ".meminit.data","aw"
__MEMINITRODATA  macro  include/linux/init.h  127  #define __MEMINITRODATA .section ".meminit.rodata","a"
__REF  macro  include/linux/init.h  130  #define __REF .section ".ref.text","ax"
__REFDATA  macro  include/linux/init.h  131  #define __REFDATA .section ".ref.data","aw"
__REFCONST  macro  include/linux/init.h  132  #define __REFCONST .section ".ref.rodata","a"
do_one_initcall  prototype  include/linux/init.h  148  extern int do_one_initcall(initcall_t fn);
setup_arch  prototype  include/linux/init.h  154  void setup_arch(char **);
prepare_namespace  prototype  include/linux/init.h  155  void prepare_namespace(void);
__define_initcall  macro  include/linux/init.h  179  #define __define_initcall(fn,id) static initcall_t __initcall_##fn##id __used __attribute__((__section__(".initcall" #id ".init"))) = fn
early_initcall  macro  include/linux/init.h  284  #define early_initcall(fn) module_init(fn)
pure_initcall  macro  include/linux/init.h  195  #define pure_initcall(fn) __define_initcall(fn,0)
core_initcall  macro  include/linux/init.h  285  #define core_initcall(fn) module_init(fn)
core_initcall_sync  macro  include/linux/init.h  198  #define core_initcall_sync(fn) __define_initcall(fn,1s)
postcore_initcall  macro  include/linux/init.h  286  #define postcore_initcall(fn) module_init(fn)
postcore_initcall_sync  macro  include/linux/init.h  200  #define postcore_initcall_sync(fn) __define_initcall(fn,2s)
arch_initcall  macro  include/linux/init.h  287  #define arch_initcall(fn) module_init(fn)
arch_initcall_sync  macro  include/linux/init.h  202  #define arch_initcall_sync(fn) __define_initcall(fn,3s)
subsys_initcall  macro  include/linux/init.h  288  #define subsys_initcall(fn) module_init(fn)
subsys_initcall_sync  macro  include/linux/init.h  204  #define subsys_initcall_sync(fn) __define_initcall(fn,4s)
fs_initcall  macro  include/linux/init.h  289  #define fs_initcall(fn) module_init(fn)
fs_initcall_sync  macro  include/linux/init.h  206  #define fs_initcall_sync(fn) __define_initcall(fn,5s)
rootfs_initcall  macro  include/linux/init.h  207  #define rootfs_initcall(fn) __define_initcall(fn,rootfs)
device_initcall  macro  include/linux/init.h  290  #define device_initcall(fn) module_init(fn)
device_initcall_sync  macro  include/linux/init.h  209  #define device_initcall_sync(fn) __define_initcall(fn,6s)
late_initcall  macro  include/linux/init.h  291  #define late_initcall(fn) module_init(fn)
late_initcall_sync  macro  include/linux/init.h  211  #define late_initcall_sync(fn) __define_initcall(fn,7s)
__initcall  macro  include/linux/init.h  213  #define __initcall(fn) device_initcall(fn)
__exitcall  macro  include/linux/init.h  216  #define __exitcall(fn) static exitcall_t __exitcall_##fn __exit_call = fn
console_initcall  macro  include/linux/init.h  220  #define console_initcall(fn) static initcall_t __initcall_##fn __used __section(.con_initcall.init) = fn
security_initcall  macro  include/linux/init.h  293  #define security_initcall(fn) module_init(fn)
obs_kernel_param  struct  include/linux/init.h  226  struct obs_kernel_param {
__setup_param  macro  include/linux/init.h  307  #define __setup_param(str,unique_id,fn)
__setup  macro  include/linux/init.h  308  #define __setup(str,func)
early_param  macro  include/linux/init.h  252  #define early_param(str,fn) __setup_param(str, fn, fn, 1)
parse_early_param  prototype  include/linux/init.h  255  void __init parse_early_param(void);
parse_early_options  prototype  include/linux/init.h  256  void __init parse_early_options(char *cmdline);
module_init  macro  include/linux/init.h  299  #define module_init(initfn) static inline initcall_t __inittest(void) { return initfn; } int init_module(void) __attribute__((alias(#initfn)));
module_exit  macro  include/linux/init.h  305  #define module_exit(exitfn) static inline exitcall_t __exittest(void) { return exitfn; } void cleanup_module(void) __attribute__((alias(#exitfn)));
__nosavedata  macro  include/linux/init.h  312  #define __nosavedata __section(.data..nosave)
__init_or_module  macro  include/linux/init.h  324  #define __init_or_module __init
__initdata_or_module  macro  include/linux/init.h  325  #define __initdata_or_module __initdata
__initconst_or_module  macro  include/linux/init.h  326  #define __initconst_or_module __initconst
__INIT_OR_MODULE  macro  include/linux/init.h  327  #define __INIT_OR_MODULE __INIT
__INITDATA_OR_MODULE  macro  include/linux/init.h  328  #define __INITDATA_OR_MODULE __INITDATA
__INITRODATA_OR_MODULE  macro  include/linux/init.h  329  #define __INITRODATA_OR_MODULE __INITRODATA
__exit_p  macro  include/linux/init.h  335  #define __exit_p(x) NULL
_LINUX_ETHTOOL_H  macro  include/linux/ethtool.h  13  #define _LINUX_ETHTOOL_H
compat_ethtool_rx_flow_spec  struct  include/linux/ethtool.h  20  struct compat_ethtool_rx_flow_spec {
compat_ethtool_rxnfc  struct  include/linux/ethtool.h  30  struct compat_ethtool_rxnfc {
__ethtool_get_settings  prototype  include/linux/ethtool.h  44  extern int __ethtool_get_settings(struct net_device *dev,struct ethtool_cmd *cmd);
ethtool_phys_id_state  enum  include/linux/ethtool.h  55  enum ethtool_phys_id_state {
ethtool_op_get_link  prototype  include/linux/ethtool.h  65  u32 ethtool_op_get_link(struct net_device *dev);
ethtool_op_get_ts_info  prototype  include/linux/ethtool.h  66  int ethtool_op_get_ts_info(struct net_device *dev,struct ethtool_ts_info *eti);
ethtool_rxfh_indir_default  function  include/linux/ethtool.h  75  static inline u32 ethtool_rxfh_indir_default(u32 index,u32 n_rx_rings)
ethtool_ops  struct  include/linux/ethtool.h  190  struct ethtool_ops {
__LINUX_MII_H__  macro  include/linux/mii.h  8  #define __LINUX_MII_H__
mii_if_info  struct  include/linux/mii.h  16  struct mii_if_info {
mii_link_ok  prototype  include/linux/mii.h  31  extern int mii_link_ok (struct mii_if_info *mii);
mii_nway_restart  prototype  include/linux/mii.h  32  extern int mii_nway_restart (struct mii_if_info *mii);
mii_ethtool_gset  prototype  include/linux/mii.h  33  extern int mii_ethtool_gset(struct mii_if_info *mii,struct ethtool_cmd *ecmd);
mii_ethtool_sset  prototype  include/linux/mii.h  34  extern int mii_ethtool_sset(struct mii_if_info *mii,struct ethtool_cmd *ecmd);
mii_check_gmii_support  prototype  include/linux/mii.h  35  extern int mii_check_gmii_support(struct mii_if_info *mii);
mii_check_link  prototype  include/linux/mii.h  36  extern void mii_check_link (struct mii_if_info *mii);
mii_check_media  prototype  include/linux/mii.h  39  extern unsigned int mii_check_media (struct mii_if_info *mii,unsigned int ok_to_print,unsigned int init_media);
generic_mii_ioctl  prototype  include/linux/mii.h  42  extern int generic_mii_ioctl(struct mii_if_info *mii_if,struct mii_ioctl_data *mii_data, int cmd,unsigned int *duplex_changed);
if_mii  function  include/linux/mii.h  45  static inline struct mii_ioctl_data *if_mii(struct ifreq *rq)
mii_nway_result  function  include/linux/mii.h  64  static inline unsigned int mii_nway_result (unsigned int negotiated)
mii_duplex  function  include/linux/mii.h  92  static inline unsigned int mii_duplex (unsigned int duplex_lock,unsigned int negotiated)
ethtool_adv_to_mii_adv_t  function  include/linux/mii.h  109  static inline u32 ethtool_adv_to_mii_adv_t(u32 ethadv)
mii_adv_to_ethtool_adv_t  function  include/linux/mii.h  136  static inline u32 mii_adv_to_ethtool_adv_t(u32 adv)
ethtool_adv_to_mii_ctrl1000_t  function  include/linux/mii.h  164  static inline u32 ethtool_adv_to_mii_ctrl1000_t(u32 ethadv)
mii_ctrl1000_to_ethtool_adv_t  function  include/linux/mii.h  184  static inline u32 mii_ctrl1000_to_ethtool_adv_t(u32 adv)
mii_lpa_to_ethtool_lpa_t  function  include/linux/mii.h  204  static inline u32 mii_lpa_to_ethtool_lpa_t(u32 lpa)
mii_stat1000_to_ethtool_lpa_t  function  include/linux/mii.h  222  static inline u32 mii_stat1000_to_ethtool_lpa_t(u32 lpa)
ethtool_adv_to_mii_adv_x  function  include/linux/mii.h  242  static inline u32 ethtool_adv_to_mii_adv_x(u32 ethadv)
mii_adv_to_ethtool_adv_x  function  include/linux/mii.h  266  static inline u32 mii_adv_to_ethtool_adv_x(u32 adv)
mii_lpa_to_ethtool_lpa_x  function  include/linux/mii.h  290  static inline u32 mii_lpa_to_ethtool_lpa_x(u32 lpa)
mii_advertise_flowctrl  function  include/linux/mii.h  304  static inline u16 mii_advertise_flowctrl(int cap)
mii_resolve_flowctrl_fdx  function  include/linux/mii.h  323  static inline u8 mii_resolve_flowctrl_fdx(u16 lcladv,u16 rmtadv)
_LINUX_CRC32_H  macro  include/linux/crc32.h  6  #define _LINUX_CRC32_H
crc32_le  prototype  include/linux/crc32.h  11  extern u32 crc32_le(u32 crc,unsigned char const *p,size_t len);
crc32_be  prototype  include/linux/crc32.h  12  extern u32 crc32_be(u32 crc,unsigned char const *p,size_t len);
__crc32c_le  prototype  include/linux/crc32.h  14  extern u32 __crc32c_le(u32 crc,unsigned char const *p,size_t len);
crc32  macro  include/linux/crc32.h  16  #define crc32(seed,data,length) crc32_le(seed,(unsigned char const *)(data),length)
ether_crc  macro  include/linux/crc32.h  26  #define ether_crc(length,data) bitrev32(crc32_le(~0,data,length))
ether_crc_le  macro  include/linux/crc32.h  27  #define ether_crc_le(length,data) crc32_le(~0,data,length)
_LINUX_NETDEVICE_H  macro  include/linux/netdevice.h  26  #define _LINUX_NETDEVICE_H
SET_ETHTOOL_OPS  macro  include/linux/netdevice.h  61  #define SET_ETHTOOL_OPS(netdev,ops) ( (netdev)->ethtool_ops = (ops) )
netdev_set_default_ethtool_ops  prototype  include/linux/netdevice.h  64  extern void netdev_set_default_ethtool_ops(struct net_device *dev,const struct ethtool_ops *ops);
NET_ADDR_PERM  macro  include/linux/netdevice.h  67  #define NET_ADDR_PERM 0
NET_ADDR_RANDOM  macro  include/linux/netdevice.h  68  #define NET_ADDR_RANDOM 1
NET_ADDR_STOLEN  macro  include/linux/netdevice.h  69  #define NET_ADDR_STOLEN 2
NET_RX_SUCCESS  macro  include/linux/netdevice.h  72  #define NET_RX_SUCCESS 0
NET_RX_DROP  macro  include/linux/netdevice.h  73  #define NET_RX_DROP 1
NET_XMIT_SUCCESS  macro  include/linux/netdevice.h  93  #define NET_XMIT_SUCCESS 0x00
NET_XMIT_DROP  macro  include/linux/netdevice.h  94  #define NET_XMIT_DROP 0x01
NET_XMIT_CN  macro  include/linux/netdevice.h  95  #define NET_XMIT_CN 0x02
NET_XMIT_POLICED  macro  include/linux/netdevice.h  96  #define NET_XMIT_POLICED 0x03
NET_XMIT_MASK  macro  include/linux/netdevice.h  97  #define NET_XMIT_MASK 0x0f
net_xmit_eval  macro  include/linux/netdevice.h  102  #define net_xmit_eval(e) ((e) == NET_XMIT_CN ? 0 : (e))
net_xmit_errno  macro  include/linux/netdevice.h  103  #define net_xmit_errno(e) ((e) != NET_XMIT_CN ? -ENOBUFS : 0)
NETDEV_TX_MASK  macro  include/linux/netdevice.h  106  #define NETDEV_TX_MASK 0xf0
netdev_tx  enum  include/linux/netdevice.h  108  enum netdev_tx {
dev_xmit_complete  function  include/linux/netdevice.h  120  static inline bool dev_xmit_complete(int rc)
LL_MAX_HEADER  macro  include/linux/netdevice.h  148  # define LL_MAX_HEADER 32
MAX_HEADER  macro  include/linux/netdevice.h  155  #define MAX_HEADER (LL_MAX_HEADER + 48)
net_device_stats  struct  include/linux/netdevice.h  163  struct net_device_stats {
netdev_hw_addr  struct  include/linux/netdevice.h  202  struct netdev_hw_addr {
NETDEV_HW_ADDR_T_LAN  macro  include/linux/netdevice.h  206  #define NETDEV_HW_ADDR_T_LAN 1
NETDEV_HW_ADDR_T_SAN  macro  include/linux/netdevice.h  207  #define NETDEV_HW_ADDR_T_SAN 2
NETDEV_HW_ADDR_T_SLAVE  macro  include/linux/netdevice.h  208  #define NETDEV_HW_ADDR_T_SLAVE 3
NETDEV_HW_ADDR_T_UNICAST  macro  include/linux/netdevice.h  209  #define NETDEV_HW_ADDR_T_UNICAST 4
NETDEV_HW_ADDR_T_MULTICAST  macro  include/linux/netdevice.h  210  #define NETDEV_HW_ADDR_T_MULTICAST 5
netdev_hw_addr_list  struct  include/linux/netdevice.h  217  struct netdev_hw_addr_list {
netdev_hw_addr_list_count  macro  include/linux/netdevice.h  222  #define netdev_hw_addr_list_count(l) ((l)->count)
netdev_hw_addr_list_empty  macro  include/linux/netdevice.h  223  #define netdev_hw_addr_list_empty(l) (netdev_hw_addr_list_count(l) == 0)
netdev_hw_addr_list_for_each  macro  include/linux/netdevice.h  225  #define netdev_hw_addr_list_for_each(ha,l) list_for_each_entry(ha, &(l)->list, list)
netdev_uc_count  macro  include/linux/netdevice.h  227  #define netdev_uc_count(dev) netdev_hw_addr_list_count(&(dev)->uc)
netdev_uc_empty  macro  include/linux/netdevice.h  228  #define netdev_uc_empty(dev) netdev_hw_addr_list_empty(&(dev)->uc)
netdev_for_each_uc_addr  macro  include/linux/netdevice.h  230  #define netdev_for_each_uc_addr(ha,dev) netdev_hw_addr_list_for_each(ha, &(dev)->uc)
netdev_mc_count  macro  include/linux/netdevice.h  232  #define netdev_mc_count(dev) netdev_hw_addr_list_count(&(dev)->mc)
netdev_mc_empty  macro  include/linux/netdevice.h  233  #define netdev_mc_empty(dev) netdev_hw_addr_list_empty(&(dev)->mc)
netdev_for_each_mc_addr  macro  include/linux/netdevice.h  235  #define netdev_for_each_mc_addr(ha,dev) netdev_hw_addr_list_for_each(ha, &(dev)->mc)
hh_cache  struct  include/linux/netdevice.h  237  struct hh_cache {
HH_DATA_MOD  macro  include/linux/netdevice.h  243  #define HH_DATA_MOD 16
HH_DATA_OFF  macro  include/linux/netdevice.h  245  #define HH_DATA_OFF(__len) (HH_DATA_MOD - (((__len - 1) & (HH_DATA_MOD - 1)) + 1))
HH_DATA_ALIGN  macro  include/linux/netdevice.h  247  #define HH_DATA_ALIGN(__len) (((__len)+(HH_DATA_MOD-1))&~(HH_DATA_MOD - 1))
LL_RESERVED_SPACE  macro  include/linux/netdevice.h  260  #define LL_RESERVED_SPACE(dev) ((((dev)->hard_header_len+(dev)->needed_headroom)&~(HH_DATA_MOD - 1)) + HH_DATA_MOD)
LL_RESERVED_SPACE_EXTRA  macro  include/linux/netdevice.h  262  #define LL_RESERVED_SPACE_EXTRA(dev,extra) ((((dev)->hard_header_len+(dev)->needed_headroom+(extra))&~(HH_DATA_MOD - 1)) + HH_DATA_MOD)
header_ops  struct  include/linux/netdevice.h  264  struct header_ops {
netdev_state_t  enum  include/linux/netdevice.h  281  enum netdev_state_t {
netdev_boot_setup  prototype  include/linux/netdevice.h  300  extern int __init netdev_boot_setup(char *str);
NETDEV_BOOT_SETUP_MAX  macro  include/linux/netdevice.h  298  #define NETDEV_BOOT_SETUP_MAX 8
napi_struct  struct  include/linux/netdevice.h  305  struct napi_struct {
gro_result  enum  include/linux/netdevice.h  334  enum gro_result {
rx_handler_result  enum  include/linux/netdevice.h  384  enum rx_handler_result {
__napi_schedule  prototype  include/linux/netdevice.h  393  extern void __napi_schedule(struct napi_struct *n);
napi_disable_pending  function  include/linux/netdevice.h  395  static inline bool napi_disable_pending(struct napi_struct *n)
napi_schedule_prep  function  include/linux/netdevice.h  409  static inline bool napi_schedule_prep(struct napi_struct *n)
napi_schedule  function  include/linux/netdevice.h  422  static inline void napi_schedule(struct napi_struct *n)
napi_reschedule  function  include/linux/netdevice.h  429  static inline bool napi_reschedule(struct napi_struct *napi)
__napi_complete  prototype  include/linux/netdevice.h  444  extern void __napi_complete(struct napi_struct *n);
napi_complete  prototype  include/linux/netdevice.h  445  extern void napi_complete(struct napi_struct *n);
napi_disable  function  include/linux/netdevice.h  454  static inline void napi_disable(struct napi_struct *n)
napi_enable  function  include/linux/netdevice.h  469  static inline void napi_enable(struct napi_struct *n)
napi_synchronize  macro  include/linux/netdevice.h  491  # define napi_synchronize(n) barrier()
netdev_queue_state_t  enum  include/linux/netdevice.h  494  enum netdev_queue_state_t {
QUEUE_STATE_ANY_XOFF  macro  include/linux/netdevice.h  499  #define QUEUE_STATE_ANY_XOFF ((1 << __QUEUE_STATE_DRV_XOFF) | (1 << __QUEUE_STATE_STACK_XOFF))
QUEUE_STATE_ANY_XOFF_OR_FROZEN  macro  include/linux/netdevice.h  501  #define QUEUE_STATE_ANY_XOFF_OR_FROZEN (QUEUE_STATE_ANY_XOFF | (1 << __QUEUE_STATE_FROZEN))
netdev_queue  struct  include/linux/netdevice.h  513  struct netdev_queue {
netdev_queue_numa_node_read  function  include/linux/netdevice.h  549  static inline int netdev_queue_numa_node_read(const struct netdev_queue *q)
netdev_queue_numa_node_write  function  include/linux/netdevice.h  558  static inline void netdev_queue_numa_node_write(struct netdev_queue *q,int node)
rps_map  struct  include/linux/netdevice.h  570  struct rps_map {
RPS_MAP_SIZE  macro  include/linux/netdevice.h  575  #define RPS_MAP_SIZE(_num) (sizeof(struct rps_map) + ((_num) * sizeof(u16)))
rps_dev_flow  struct  include/linux/netdevice.h  582  struct rps_dev_flow {
RPS_NO_FILTER  macro  include/linux/netdevice.h  587  #define RPS_NO_FILTER 0xffff
rps_dev_flow_table  struct  include/linux/netdevice.h  592  struct rps_dev_flow_table {
RPS_DEV_FLOW_TABLE_SIZE  macro  include/linux/netdevice.h  599  #define RPS_DEV_FLOW_TABLE_SIZE(_num) (sizeof(struct rps_dev_flow_table) + ((_num) * sizeof(struct rps_dev_flow)))
rps_sock_flow_table  struct  include/linux/netdevice.h  605  struct rps_sock_flow_table {
RPS_SOCK_FLOW_TABLE_SIZE  macro  include/linux/netdevice.h  610  #define RPS_SOCK_FLOW_TABLE_SIZE(_num) (sizeof(struct rps_sock_flow_table) + ((_num) * sizeof(u16)))
RPS_NO_CPU  macro  include/linux/netdevice.h  612  #define RPS_NO_CPU 0xffff
rps_record_sock_flow  function  include/linux/netdevice.h  615  static inline void rps_record_sock_flow(struct rps_sock_flow_table *table,u32 hash)
rps_reset_sock_flow  function  include/linux/netdevice.h  629  static inline void rps_reset_sock_flow(struct rps_sock_flow_table *table,u32 hash)
rps_may_expire_flow  prototype  include/linux/netdevice.h  639  extern bool rps_may_expire_flow(struct net_device *dev,u16 rxq_index,u32 flow_id, u16 filter_id);
netdev_rx_queue  struct  include/linux/netdevice.h  643  struct netdev_rx_queue {
xps_map  struct  include/linux/netdevice.h  656  struct xps_map {
XPS_MAP_SIZE  macro  include/linux/netdevice.h  662  #define XPS_MAP_SIZE(_num) (sizeof(struct xps_map) + ((_num) * sizeof(u16)))
XPS_MIN_MAP_ALLOC  macro  include/linux/netdevice.h  664  #define XPS_MIN_MAP_ALLOC ((L1_CACHE_BYTES - sizeof(struct xps_map)) / sizeof(u16))
xps_dev_maps  struct  include/linux/netdevice.h  669  struct xps_dev_maps {
XPS_DEV_MAPS_SIZE  macro  include/linux/netdevice.h  674  #define XPS_DEV_MAPS_SIZE (sizeof(struct xps_dev_maps) + (nr_cpu_ids * sizeof(struct xps_map *)))
TC_MAX_QUEUE  macro  include/linux/netdevice.h  677  #define TC_MAX_QUEUE 16
TC_BITMASK  macro  include/linux/netdevice.h  678  #define TC_BITMASK 15
netdev_tc_txq  struct  include/linux/netdevice.h  680  struct netdev_tc_txq {
netdev_fcoe_hbainfo  struct  include/linux/netdevice.h  690  struct netdev_fcoe_hbainfo {
net_device_ops  struct  include/linux/netdevice.h  898  struct net_device_ops {
NETDEV_FCOE_WWNN  macro  include/linux/netdevice.h  973  #define NETDEV_FCOE_WWNN 0
NETDEV_FCOE_WWPN  macro  include/linux/netdevice.h  974  #define NETDEV_FCOE_WWPN 1
net_device  struct  include/linux/netdevice.h  1026  struct net_device {
GSO_MAX_SIZE  macro  include/linux/netdevice.h  1293  #define GSO_MAX_SIZE 65536
GSO_MAX_SEGS  macro  include/linux/netdevice.h  1295  #define GSO_MAX_SEGS 65535
to_net_dev  macro  include/linux/netdevice.h  1323  #define to_net_dev(d) container_of(d,struct net_device,dev)
NETDEV_ALIGN  macro  include/linux/netdevice.h  1325  #define NETDEV_ALIGN 32
netdev_get_prio_tc_map  function  include/linux/netdevice.h  1328  int netdev_get_prio_tc_map(const struct net_device *dev,u32 prio)
netdev_set_prio_tc_map  function  include/linux/netdevice.h  1334  int netdev_set_prio_tc_map(struct net_device *dev,u8 prio,u8 tc)
netdev_reset_tc  function  include/linux/netdevice.h  1344  void netdev_reset_tc(struct net_device *dev)
netdev_set_tc_queue  function  include/linux/netdevice.h  1352  int netdev_set_tc_queue(struct net_device *dev,u8 tc,u16 count,u16 offset)
netdev_set_num_tc  function  include/linux/netdevice.h  1363  int netdev_set_num_tc(struct net_device *dev,u8 num_tc)
netdev_get_num_tc  function  include/linux/netdevice.h  1373  int netdev_get_num_tc(struct net_device *dev)
netdev_get_tx_queue  function  include/linux/netdevice.h  1380  struct netdev_queue *netdev_get_tx_queue(const struct net_device *dev,unsigned int index)
netdev_for_each_tx_queue  function  include/linux/netdevice.h  1389  static inline void netdev_for_each_tx_queue(struct net_device *dev,void (*f)(struct net_device *,struct netdev_queue *,void *),void *arg)
netdev_pick_tx  prototype  include/linux/netdevice.h  1398  extern struct netdev_queue *netdev_pick_tx(struct net_device *dev,struct sk_buff *skb);
dev_net  function  include/linux/netdevice.h  1404  struct net *dev_net(const struct net_device *dev)
dev_net_set  function  include/linux/netdevice.h  1410  void dev_net_set(struct net_device *dev,struct net *net)
netdev_uses_dsa_tags  function  include/linux/netdevice.h  1418  static inline bool netdev_uses_dsa_tags(struct net_device *dev)
netdev_uses_trailer_tags  function  include/linux/netdevice.h  1428  static inline bool netdev_uses_trailer_tags(struct net_device *dev)
netdev_priv  function  include/linux/netdevice.h  1444  static inline void *netdev_priv(const struct net_device *dev)
SET_NETDEV_DEV  macro  include/linux/netdevice.h  1452  #define SET_NETDEV_DEV(net,pdev) ((net)->dev.parent = (pdev))
SET_NETDEV_DEVTYPE  macro  include/linux/netdevice.h  1458  #define SET_NETDEV_DEVTYPE(net,devtype) ((net)->dev.type = (devtype))
netif_napi_add  prototype  include/linux/netdevice.h  1471  void netif_napi_add(struct net_device *dev,struct napi_struct *napi,int (*poll)(struct napi_struct *, int), int weight);
netif_napi_del  prototype  include/linux/netdevice.h  1479  void netif_napi_del(struct napi_struct *napi);
napi_gro_cb  struct  include/linux/netdevice.h  1481  struct napi_gro_cb {
NAPI_GRO_FREE  macro  include/linux/netdevice.h  1502  #define NAPI_GRO_FREE 1
NAPI_GRO_FREE_STOLEN_HEAD  macro  include/linux/netdevice.h  1503  #define NAPI_GRO_FREE_STOLEN_HEAD 2
NAPI_GRO_CB  macro  include/linux/netdevice.h  1515  #define NAPI_GRO_CB(skb) ((struct napi_gro_cb *)(skb)->cb)
packet_type  struct  include/linux/netdevice.h  1517  struct packet_type {
offload_callbacks  struct  include/linux/netdevice.h  1530  struct offload_callbacks {
packet_offload  struct  include/linux/netdevice.h  1539  struct packet_offload {
NETDEV_UP  macro  include/linux/netdevice.h  1551  #define NETDEV_UP 0x0001
NETDEV_DOWN  macro  include/linux/netdevice.h  1552  #define NETDEV_DOWN 0x0002
NETDEV_REBOOT  macro  include/linux/netdevice.h  1553  #define NETDEV_REBOOT 0x0003
NETDEV_CHANGE  macro  include/linux/netdevice.h  1557  #define NETDEV_CHANGE 0x0004
NETDEV_REGISTER  macro  include/linux/netdevice.h  1558  #define NETDEV_REGISTER 0x0005
NETDEV_UNREGISTER  macro  include/linux/netdevice.h  1559  #define NETDEV_UNREGISTER 0x0006
NETDEV_CHANGEMTU  macro  include/linux/netdevice.h  1560  #define NETDEV_CHANGEMTU 0x0007
NETDEV_CHANGEADDR  macro  include/linux/netdevice.h  1561  #define NETDEV_CHANGEADDR 0x0008
NETDEV_GOING_DOWN  macro  include/linux/netdevice.h  1562  #define NETDEV_GOING_DOWN 0x0009
NETDEV_CHANGENAME  macro  include/linux/netdevice.h  1563  #define NETDEV_CHANGENAME 0x000A
NETDEV_FEAT_CHANGE  macro  include/linux/netdevice.h  1564  #define NETDEV_FEAT_CHANGE 0x000B
NETDEV_BONDING_FAILOVER  macro  include/linux/netdevice.h  1565  #define NETDEV_BONDING_FAILOVER 0x000C
NETDEV_PRE_UP  macro  include/linux/netdevice.h  1566  #define NETDEV_PRE_UP 0x000D
NETDEV_PRE_TYPE_CHANGE  macro  include/linux/netdevice.h  1567  #define NETDEV_PRE_TYPE_CHANGE 0x000E
NETDEV_POST_TYPE_CHANGE  macro  include/linux/netdevice.h  1568  #define NETDEV_POST_TYPE_CHANGE 0x000F
NETDEV_POST_INIT  macro  include/linux/netdevice.h  1569  #define NETDEV_POST_INIT 0x0010
NETDEV_UNREGISTER_FINAL  macro  include/linux/netdevice.h  1570  #define NETDEV_UNREGISTER_FINAL 0x0011
NETDEV_RELEASE  macro  include/linux/netdevice.h  1571  #define NETDEV_RELEASE 0x0012
NETDEV_NOTIFY_PEERS  macro  include/linux/netdevice.h  1572  #define NETDEV_NOTIFY_PEERS 0x0013
NETDEV_JOIN  macro  include/linux/netdevice.h  1573  #define NETDEV_JOIN 0x0014
register_netdevice_notifier  prototype  include/linux/netdevice.h  1575  extern int register_netdevice_notifier(struct notifier_block *nb);
unregister_netdevice_notifier  prototype  include/linux/netdevice.h  1576  extern int unregister_netdevice_notifier(struct notifier_block *nb);
call_netdevice_notifiers  prototype  include/linux/netdevice.h  1577  extern int call_netdevice_notifiers(unsigned long val,struct net_device *dev);
for_each_netdev  macro  include/linux/netdevice.h  1586  #define for_each_netdev(net,d) list_for_each_entry(d, &(net)->dev_base_head, dev_list)
for_each_netdev_reverse  macro  include/linux/netdevice.h  1588  #define for_each_netdev_reverse(net,d) list_for_each_entry_reverse(d, &(net)->dev_base_head, dev_list)
for_each_netdev_rcu  macro  include/linux/netdevice.h  1590  #define for_each_netdev_rcu(net,d) list_for_each_entry_rcu(d, &(net)->dev_base_head, dev_list)
for_each_netdev_safe  macro  include/linux/netdevice.h  1592  #define for_each_netdev_safe(net,d,n) list_for_each_entry_safe(d, n, &(net)->dev_base_head, dev_list)
for_each_netdev_continue  macro  include/linux/netdevice.h  1594  #define for_each_netdev_continue(net,d) list_for_each_entry_continue(d, &(net)->dev_base_head, dev_list)
for_each_netdev_continue_rcu  macro  include/linux/netdevice.h  1596  #define for_each_netdev_continue_rcu(net,d) list_for_each_entry_continue_rcu(d, &(net)->dev_base_head, dev_list)
net_device_entry  macro  include/linux/netdevice.h  1597  #define net_device_entry(lh) list_entry(lh,struct net_device,dev_list)
next_net_device  function  include/linux/netdevice.h  1599  static inline struct net_device *next_net_device(struct net_device *dev)
next_net_device_rcu  function  include/linux/netdevice.h  1609  static inline struct net_device *next_net_device_rcu(struct net_device *dev)
first_net_device  function  include/linux/netdevice.h  1619  static inline struct net_device *first_net_device(struct net *net)
first_net_device_rcu  function  include/linux/netdevice.h  1625  static inline struct net_device *first_net_device_rcu(struct net *net)
netdev_boot_setup_check  prototype  include/linux/netdevice.h  1632  extern int netdev_boot_setup_check(struct net_device *dev);
netdev_boot_base  prototype  include/linux/netdevice.h  1633  extern unsigned long netdev_boot_base(const char *prefix,int unit);
dev_getbyhwaddr_rcu  prototype  include/linux/netdevice.h  1635  extern struct net_device *dev_getbyhwaddr_rcu(struct net *net,unsigned short type,const char *hwaddr);
dev_getfirstbyhwtype  prototype  include/linux/netdevice.h  1636  extern struct net_device *dev_getfirstbyhwtype(struct net *net,unsigned short type);
__dev_getfirstbyhwtype  prototype  include/linux/netdevice.h  1637  extern struct net_device *__dev_getfirstbyhwtype(struct net *net,unsigned short type);
dev_add_pack  prototype  include/linux/netdevice.h  1638  extern void dev_add_pack(struct packet_type *pt);
dev_remove_pack  prototype  include/linux/netdevice.h  1639  extern void dev_remove_pack(struct packet_type *pt);
__dev_remove_pack  prototype  include/linux/netdevice.h  1640  extern void __dev_remove_pack(struct packet_type *pt);
dev_add_offload  prototype  include/linux/netdevice.h  1641  extern void dev_add_offload(struct packet_offload *po);
dev_remove_offload  prototype  include/linux/netdevice.h  1642  extern void dev_remove_offload(struct packet_offload *po);
__dev_remove_offload  prototype  include/linux/netdevice.h  1643  extern void __dev_remove_offload(struct packet_offload *po);
dev_get_by_flags_rcu  prototype  include/linux/netdevice.h  1646  extern struct net_device *dev_get_by_flags_rcu(struct net *net,unsigned short flags,unsigned short mask);
dev_get_by_name  prototype  include/linux/netdevice.h  1647  extern struct net_device *dev_get_by_name(struct net *net,const char *name);
dev_get_by_name_rcu  prototype  include/linux/netdevice.h  1648  extern struct net_device *dev_get_by_name_rcu(struct net *net,const char *name);
__dev_get_by_name  prototype  include/linux/netdevice.h  1649  extern struct net_device *__dev_get_by_name(struct net *net,const char *name);
dev_alloc_name  prototype  include/linux/netdevice.h  1650  extern int dev_alloc_name(struct net_device *dev,const char *name);
dev_open  prototype  include/linux/netdevice.h  1651  extern int dev_open(struct net_device *dev);
dev_close  prototype  include/linux/netdevice.h  1652  extern int dev_close(struct net_device *dev);
dev_disable_lro  prototype  include/linux/netdevice.h  1653  extern void dev_disable_lro(struct net_device *dev);
dev_loopback_xmit  prototype  include/linux/netdevice.h  1654  extern int dev_loopback_xmit(struct sk_buff *newskb);
dev_queue_xmit  prototype  include/linux/netdevice.h  1655  extern int dev_queue_xmit(struct sk_buff *skb);
register_netdevice  prototype  include/linux/netdevice.h  1656  extern int register_netdevice(struct net_device *dev);
unregister_netdevice_queue  prototype  include/linux/netdevice.h  1658  extern void unregister_netdevice_queue(struct net_device *dev,struct list_head *head);
unregister_netdevice_many  prototype  include/linux/netdevice.h  1659  extern void unregister_netdevice_many(struct list_head *head);
unregister_netdevice  function  include/linux/netdevice.h  1660  static inline void unregister_netdevice(struct net_device *dev)
netdev_refcnt_read  prototype  include/linux/netdevice.h  1665  extern int netdev_refcnt_read(const struct net_device *dev);
free_netdev  prototype  include/linux/netdevice.h  1666  extern void free_netdev(struct net_device *dev);
synchronize_net  prototype  include/linux/netdevice.h  1667  extern void synchronize_net(void);
init_dummy_netdev  prototype  include/linux/netdevice.h  1668  extern int init_dummy_netdev(struct net_device *dev);
netdev_resync_ops  prototype  include/linux/netdevice.h  1669  extern void netdev_resync_ops(struct net_device *dev);
dev_get_by_index  prototype  include/linux/netdevice.h  1671  extern struct net_device *dev_get_by_index(struct net *net,int ifindex);
__dev_get_by_index  prototype  include/linux/netdevice.h  1672  extern struct net_device *__dev_get_by_index(struct net *net,int ifindex);
dev_get_by_index_rcu  prototype  include/linux/netdevice.h  1673  extern struct net_device *dev_get_by_index_rcu(struct net *net,int ifindex);
dev_restart  prototype  include/linux/netdevice.h  1674  extern int dev_restart(struct net_device *dev);
netpoll_trap  prototype  include/linux/netdevice.h  1676  extern int netpoll_trap(void);
skb_gro_receive  prototype  include/linux/netdevice.h  1679  extern int skb_gro_receive(struct sk_buff **head,struct sk_buff *skb);
skb_gro_offset  function  include/linux/netdevice.h  1681  static inline unsigned int skb_gro_offset(const struct sk_buff *skb)
skb_gro_len  function  include/linux/netdevice.h  1686  static inline unsigned int skb_gro_len(const struct sk_buff *skb)
skb_gro_pull  function  include/linux/netdevice.h  1691  static inline void skb_gro_pull(struct sk_buff *skb,unsigned int len)
skb_gro_header_fast  function  include/linux/netdevice.h  1697  static inline void *skb_gro_header_fast(struct sk_buff *skb,unsigned int offset)
skb_gro_header_hard  function  include/linux/netdevice.h  1702  static inline int skb_gro_header_hard(struct sk_buff *skb,unsigned int hlen)
skb_gro_header_slow  function  include/linux/netdevice.h  1708  static inline void *skb_gro_header_slow(struct sk_buff *skb,unsigned int hlen,unsigned int offset)
skb_gro_mac_header  function  include/linux/netdevice.h  1718  static inline void *skb_gro_mac_header(struct sk_buff *skb)
skb_gro_network_header  function  include/linux/netdevice.h  1723  static inline void *skb_gro_network_header(struct sk_buff *skb)
dev_hard_header  function  include/linux/netdevice.h  1732  static inline int dev_hard_header(struct sk_buff *skb,struct net_device *dev,unsigned short type,const void *daddr, const void *saddr,unsigned int len)
dev_parse_header  function  include/linux/netdevice.h  1741  static inline int dev_parse_header(const struct sk_buff *skb,unsigned char *haddr)
register_gifconf  prototype  include/linux/netdevice.h  1751  extern int register_gifconf(unsigned int family,gifconf_func_t * gifconf);
unregister_gifconf  function  include/linux/netdevice.h  1752  static inline int unregister_gifconf(unsigned int family)
softnet_data  struct  include/linux/netdevice.h  1760  struct softnet_data {
input_queue_head_incr  function  include/linux/netdevice.h  1788  static inline void input_queue_head_incr(struct softnet_data *sd)
input_queue_tail_incr_save  function  include/linux/netdevice.h  1796  static inline void input_queue_tail_incr_save(struct softnet_data *sd,unsigned int *qtail)
__netif_schedule  prototype  include/linux/netdevice.h  1805  extern void __netif_schedule(struct Qdisc *q);
netif_schedule_queue  function  include/linux/netdevice.h  1807  static inline void netif_schedule_queue(struct netdev_queue *txq)
netif_tx_schedule_all  function  include/linux/netdevice.h  1813  static inline void netif_tx_schedule_all(struct net_device *dev)
netif_tx_start_queue  function  include/linux/netdevice.h  1821  static inline void netif_tx_start_queue(struct netdev_queue *dev_queue)
netif_start_queue  function  include/linux/netdevice.h  1832  static inline void netif_start_queue(struct net_device *dev)
netif_tx_start_all_queues  function  include/linux/netdevice.h  1837  static inline void netif_tx_start_all_queues(struct net_device *dev)
netif_tx_wake_queue  function  include/linux/netdevice.h  1847  static inline void netif_tx_wake_queue(struct netdev_queue *dev_queue)
netif_wake_queue  function  include/linux/netdevice.h  1866  static inline void netif_wake_queue(struct net_device *dev)
netif_tx_wake_all_queues  function  include/linux/netdevice.h  1871  static inline void netif_tx_wake_all_queues(struct net_device *dev)
netif_tx_stop_queue  function  include/linux/netdevice.h  1881  static inline void netif_tx_stop_queue(struct netdev_queue *dev_queue)
netif_stop_queue  function  include/linux/netdevice.h  1897  static inline void netif_stop_queue(struct net_device *dev)
netif_tx_stop_all_queues  function  include/linux/netdevice.h  1902  static inline void netif_tx_stop_all_queues(struct net_device *dev)
netif_tx_queue_stopped  function  include/linux/netdevice.h  1912  static inline bool netif_tx_queue_stopped(const struct netdev_queue *dev_queue)
netif_queue_stopped  function  include/linux/netdevice.h  1923  static inline bool netif_queue_stopped(const struct net_device *dev)
netif_xmit_stopped  function  include/linux/netdevice.h  1928  static inline bool netif_xmit_stopped(const struct netdev_queue *dev_queue)
netif_xmit_frozen_or_stopped  function  include/linux/netdevice.h  1933  static inline bool netif_xmit_frozen_or_stopped(const struct netdev_queue *dev_queue)
netdev_tx_sent_queue  function  include/linux/netdevice.h  1939  static inline void netdev_tx_sent_queue(struct netdev_queue *dev_queue,unsigned int bytes)
netdev_sent_queue  function  include/linux/netdevice.h  1962  static inline void netdev_sent_queue(struct net_device *dev,unsigned int bytes)
netdev_tx_completed_queue  function  include/linux/netdevice.h  1968  static inline void netdev_tx_completed_queue(struct netdev_queue *dev_queue,unsigned int pkts, unsigned int bytes)
netdev_completed_queue  function  include/linux/netdevice.h  1992  static inline void netdev_completed_queue(struct net_device *dev,unsigned int pkts, unsigned int bytes)
netdev_tx_reset_queue  function  include/linux/netdevice.h  1997  static inline void netdev_tx_reset_queue(struct netdev_queue *q)
netdev_reset_queue  function  include/linux/netdevice.h  2005  static inline void netdev_reset_queue(struct net_device *dev_queue)
netif_running  function  include/linux/netdevice.h  2016  static inline bool netif_running(const struct net_device *dev)
netif_start_subqueue  function  include/linux/netdevice.h  2035  static inline void netif_start_subqueue(struct net_device *dev,u16 queue_index)
netif_stop_subqueue  function  include/linux/netdevice.h  2049  static inline void netif_stop_subqueue(struct net_device *dev,u16 queue_index)
__netif_subqueue_stopped  function  include/linux/netdevice.h  2067  static inline bool __netif_subqueue_stopped(const struct net_device *dev,u16 queue_index)
netif_subqueue_stopped  function  include/linux/netdevice.h  2075  static inline bool netif_subqueue_stopped(const struct net_device *dev,struct sk_buff *skb)
netif_wake_subqueue  function  include/linux/netdevice.h  2087  static inline void netif_wake_subqueue(struct net_device *dev,u16 queue_index)
skb_tx_hash  function  include/linux/netdevice.h  2103  static inline u16 skb_tx_hash(const struct net_device *dev,const struct sk_buff *skb)
netif_is_multiqueue  function  include/linux/netdevice.h  2114  static inline bool netif_is_multiqueue(const struct net_device *dev)
netif_set_real_num_tx_queues  prototype  include/linux/netdevice.h  2120  extern int netif_set_real_num_tx_queues(struct net_device *dev,unsigned int txq);
netif_set_real_num_rx_queues  function  include/linux/netdevice.h  2127  static inline int netif_set_real_num_rx_queues(struct net_device *dev,unsigned int rxq)
netif_copy_real_num_queues  function  include/linux/netdevice.h  2134  static inline int netif_copy_real_num_queues(struct net_device *to_dev,const struct net_device *from_dev)
DEFAULT_MAX_NUM_RSS_QUEUES  macro  include/linux/netdevice.h  2150  #define DEFAULT_MAX_NUM_RSS_QUEUES (8)
netif_get_num_default_rss_queues  prototype  include/linux/netdevice.h  2151  extern int netif_get_num_default_rss_queues(void);
dev_kfree_skb_irq  prototype  include/linux/netdevice.h  2157  extern void dev_kfree_skb_irq(struct sk_buff *skb);
dev_kfree_skb_any  prototype  include/linux/netdevice.h  2163  extern void dev_kfree_skb_any(struct sk_buff *skb);
netif_rx  prototype  include/linux/netdevice.h  2165  extern int netif_rx(struct sk_buff *skb);
netif_rx_ni  prototype  include/linux/netdevice.h  2166  extern int netif_rx_ni(struct sk_buff *skb);
netif_receive_skb  prototype  include/linux/netdevice.h  2167  extern int netif_receive_skb(struct sk_buff *skb);
napi_gro_receive  prototype  include/linux/netdevice.h  2169  extern gro_result_t napi_gro_receive(struct napi_struct *napi,struct sk_buff *skb);
napi_gro_flush  prototype  include/linux/netdevice.h  2170  extern void napi_gro_flush(struct napi_struct *napi,bool flush_old);
napi_get_frags  prototype  include/linux/netdevice.h  2171  extern struct sk_buff * napi_get_frags(struct napi_struct *napi);
napi_gro_frags  prototype  include/linux/netdevice.h  2172  extern gro_result_t napi_gro_frags(struct napi_struct *napi);
napi_free_frags  function  include/linux/netdevice.h  2174  static inline void napi_free_frags(struct napi_struct *napi)
netdev_rx_handler_register  prototype  include/linux/netdevice.h  2182  extern int netdev_rx_handler_register(struct net_device *dev,rx_handler_func_t *rx_handler,void *rx_handler_data);
netdev_rx_handler_unregister  prototype  include/linux/netdevice.h  2183  extern void netdev_rx_handler_unregister(struct net_device *dev);
dev_valid_name  prototype  include/linux/netdevice.h  2185  extern bool dev_valid_name(const char *name);
dev_ioctl  prototype  include/linux/netdevice.h  2186  extern int dev_ioctl(struct net *net,unsigned int cmd,void __user *);
dev_ethtool  prototype  include/linux/netdevice.h  2187  extern int dev_ethtool(struct net *net,struct ifreq *);
dev_get_flags  prototype  include/linux/netdevice.h  2188  extern unsigned int dev_get_flags(const struct net_device *);
__dev_change_flags  prototype  include/linux/netdevice.h  2189  extern int __dev_change_flags(struct net_device *,unsigned int flags);
dev_change_flags  prototype  include/linux/netdevice.h  2190  extern int dev_change_flags(struct net_device *,unsigned int);
__dev_notify_flags  prototype  include/linux/netdevice.h  2191  extern void __dev_notify_flags(struct net_device *,unsigned int old_flags);
dev_change_name  prototype  include/linux/netdevice.h  2192  extern int dev_change_name(struct net_device *,const char *);
dev_set_alias  prototype  include/linux/netdevice.h  2193  extern int dev_set_alias(struct net_device *,const char *,size_t);
dev_change_net_namespace  prototype  include/linux/netdevice.h  2195  extern int dev_change_net_namespace(struct net_device *,struct net *, const char *);
dev_set_mtu  prototype  include/linux/netdevice.h  2196  extern int dev_set_mtu(struct net_device *,int);
dev_set_group  prototype  include/linux/netdevice.h  2197  extern void dev_set_group(struct net_device *,int);
dev_set_mac_address  prototype  include/linux/netdevice.h  2199  extern int dev_set_mac_address(struct net_device *,struct sockaddr *);
dev_hard_start_xmit  prototype  include/linux/netdevice.h  2202  extern int dev_hard_start_xmit(struct sk_buff *skb,struct net_device *dev,struct netdev_queue *txq);
dev_forward_skb  prototype  include/linux/netdevice.h  2204  extern int dev_forward_skb(struct net_device *dev,struct sk_buff *skb);
netdev_run_todo  prototype  include/linux/netdevice.h  2209  extern void netdev_run_todo(void);
dev_put  function  include/linux/netdevice.h  2217  static inline void dev_put(struct net_device *dev)
dev_hold  function  include/linux/netdevice.h  2228  static inline void dev_hold(struct net_device *dev)
linkwatch_init_dev  prototype  include/linux/netdevice.h  2242  extern void linkwatch_init_dev(struct net_device *dev);
linkwatch_fire_event  prototype  include/linux/netdevice.h  2243  extern void linkwatch_fire_event(struct net_device *dev);
linkwatch_forget_dev  prototype  include/linux/netdevice.h  2244  extern void linkwatch_forget_dev(struct net_device *dev);
netif_carrier_ok  function  include/linux/netdevice.h  2252  static inline bool netif_carrier_ok(const struct net_device *dev)
dev_trans_start  prototype  include/linux/netdevice.h  2257  extern unsigned long dev_trans_start(struct net_device *dev);
__netdev_watchdog_up  prototype  include/linux/netdevice.h  2259  extern void __netdev_watchdog_up(struct net_device *dev);
netif_carrier_on  prototype  include/linux/netdevice.h  2261  extern void netif_carrier_on(struct net_device *dev);
netif_carrier_off  prototype  include/linux/netdevice.h  2263  extern void netif_carrier_off(struct net_device *dev);
netif_dormant_on  function  include/linux/netdevice.h  2278  static inline void netif_dormant_on(struct net_device *dev)
netif_dormant_off  function  include/linux/netdevice.h  2290  static inline void netif_dormant_off(struct net_device *dev)
netif_dormant  function  include/linux/netdevice.h  2302  static inline bool netif_dormant(const struct net_device *dev)
netif_oper_up  function  include/linux/netdevice.h  2314  static inline bool netif_oper_up(const struct net_device *dev)
netif_device_present  function  include/linux/netdevice.h  2326  static inline bool netif_device_present(struct net_device *dev)
netif_device_detach  prototype  include/linux/netdevice.h  2331  extern void netif_device_detach(struct net_device *dev);
netif_device_attach  prototype  include/linux/netdevice.h  2333  extern void netif_device_attach(struct net_device *dev);
netif_msg_drv  macro  include/linux/netdevice.h  2357  #define netif_msg_drv(p) ((p)->msg_enable & NETIF_MSG_DRV)
netif_msg_probe  macro  include/linux/netdevice.h  2358  #define netif_msg_probe(p) ((p)->msg_enable & NETIF_MSG_PROBE)
netif_msg_link  macro  include/linux/netdevice.h  2359  #define netif_msg_link(p) ((p)->msg_enable & NETIF_MSG_LINK)
netif_msg_timer  macro  include/linux/netdevice.h  2360  #define netif_msg_timer(p) ((p)->msg_enable & NETIF_MSG_TIMER)
netif_msg_ifdown  macro  include/linux/netdevice.h  2361  #define netif_msg_ifdown(p) ((p)->msg_enable & NETIF_MSG_IFDOWN)
netif_msg_ifup  macro  include/linux/netdevice.h  2362  #define netif_msg_ifup(p) ((p)->msg_enable & NETIF_MSG_IFUP)
netif_msg_rx_err  macro  include/linux/netdevice.h  2363  #define netif_msg_rx_err(p) ((p)->msg_enable & NETIF_MSG_RX_ERR)
netif_msg_tx_err  macro  include/linux/netdevice.h  2364  #define netif_msg_tx_err(p) ((p)->msg_enable & NETIF_MSG_TX_ERR)
netif_msg_tx_queued  macro  include/linux/netdevice.h  2365  #define netif_msg_tx_queued(p) ((p)->msg_enable & NETIF_MSG_TX_QUEUED)
netif_msg_intr  macro  include/linux/netdevice.h  2366  #define netif_msg_intr(p) ((p)->msg_enable & NETIF_MSG_INTR)
netif_msg_tx_done  macro  include/linux/netdevice.h  2367  #define netif_msg_tx_done(p) ((p)->msg_enable & NETIF_MSG_TX_DONE)
netif_msg_rx_status  macro  include/linux/netdevice.h  2368  #define netif_msg_rx_status(p) ((p)->msg_enable & NETIF_MSG_RX_STATUS)
netif_msg_pktdata  macro  include/linux/netdevice.h  2369  #define netif_msg_pktdata(p) ((p)->msg_enable & NETIF_MSG_PKTDATA)
netif_msg_hw  macro  include/linux/netdevice.h  2370  #define netif_msg_hw(p) ((p)->msg_enable & NETIF_MSG_HW)
netif_msg_wol  macro  include/linux/netdevice.h  2371  #define netif_msg_wol(p) ((p)->msg_enable & NETIF_MSG_WOL)
netif_msg_init  function  include/linux/netdevice.h  2373  static inline u32 netif_msg_init(int debug_value,int default_msg_enable_bits)
__netif_tx_lock  function  include/linux/netdevice.h  2384  static inline void __netif_tx_lock(struct netdev_queue *txq,int cpu)
__netif_tx_lock_bh  function  include/linux/netdevice.h  2390  static inline void __netif_tx_lock_bh(struct netdev_queue *txq)
__netif_tx_trylock  function  include/linux/netdevice.h  2396  static inline bool __netif_tx_trylock(struct netdev_queue *txq)
__netif_tx_unlock  function  include/linux/netdevice.h  2404  static inline void __netif_tx_unlock(struct netdev_queue *txq)
__netif_tx_unlock_bh  function  include/linux/netdevice.h  2410  static inline void __netif_tx_unlock_bh(struct netdev_queue *txq)
txq_trans_update  function  include/linux/netdevice.h  2416  static inline void txq_trans_update(struct netdev_queue *txq)
netif_tx_lock  function  include/linux/netdevice.h  2428  static inline void netif_tx_lock(struct net_device *dev)
netif_tx_lock_bh  function  include/linux/netdevice.h  2450  static inline void netif_tx_lock_bh(struct net_device *dev)
netif_tx_unlock  function  include/linux/netdevice.h  2456  static inline void netif_tx_unlock(struct net_device *dev)
netif_tx_unlock_bh  function  include/linux/netdevice.h  2473  static inline void netif_tx_unlock_bh(struct net_device *dev)
HARD_TX_LOCK  macro  include/linux/netdevice.h  2483  #define HARD_TX_LOCK(dev,txq,cpu) { if ((dev->features & NETIF_F_LLTX) == 0) { __netif_tx_lock(txq, cpu); } }
HARD_TX_UNLOCK  macro  include/linux/netdevice.h  2489  #define HARD_TX_UNLOCK(dev,txq) { if ((dev->features & NETIF_F_LLTX) == 0) { __netif_tx_unlock(txq); } }
netif_tx_disable  function  include/linux/netdevice.h  2491  static inline void netif_tx_disable(struct net_device *dev)
netif_addr_lock  function  include/linux/netdevice.h  2508  static inline void netif_addr_lock(struct net_device *dev)
netif_addr_lock_nested  function  include/linux/netdevice.h  2513  static inline void netif_addr_lock_nested(struct net_device *dev)
netif_addr_lock_bh  function  include/linux/netdevice.h  2518  static inline void netif_addr_lock_bh(struct net_device *dev)
netif_addr_unlock  function  include/linux/netdevice.h  2523  static inline void netif_addr_unlock(struct net_device *dev)
netif_addr_unlock_bh  function  include/linux/netdevice.h  2528  static inline void netif_addr_unlock_bh(struct net_device *dev)
for_each_dev_addr  macro  include/linux/netdevice.h  2538  #define for_each_dev_addr(dev,ha) list_for_each_entry_rcu(ha, &dev->dev_addrs.list, list)
ether_setup  prototype  include/linux/netdevice.h  2542  extern void ether_setup(struct net_device *dev);
alloc_netdev_mqs  prototype  include/linux/netdevice.h  2547  extern struct net_device *alloc_netdev_mqs(int sizeof_priv,const char *name,void (*setup)(struct net_device *),unsigned int txqs, unsigned int rxqs);
alloc_netdev  macro  include/linux/netdevice.h  2549  #define alloc_netdev(sizeof_priv,name,setup) alloc_netdev_mqs(sizeof_priv, name, setup, 1, 1)
alloc_netdev_mq  macro  include/linux/netdevice.h  2552  #define alloc_netdev_mq(sizeof_priv,name,setup,count) alloc_netdev_mqs(sizeof_priv, name, setup, count, count)
register_netdev  prototype  include/linux/netdevice.h  2554  extern int register_netdev(struct net_device *dev);
unregister_netdev  prototype  include/linux/netdevice.h  2555  extern void unregister_netdev(struct net_device *dev);
__hw_addr_add_multiple  prototype  include/linux/netdevice.h  2560  extern int __hw_addr_add_multiple(struct netdev_hw_addr_list *to_list,struct netdev_hw_addr_list *from_list,int addr_len, unsigned char addr_type);
__hw_addr_del_multiple  prototype  include/linux/netdevice.h  2563  extern void __hw_addr_del_multiple(struct netdev_hw_addr_list *to_list,struct netdev_hw_addr_list *from_list,int addr_len, unsigned char addr_type);
__hw_addr_sync  prototype  include/linux/netdevice.h  2566  extern int __hw_addr_sync(struct netdev_hw_addr_list *to_list,struct netdev_hw_addr_list *from_list,int addr_len);
__hw_addr_unsync  prototype  include/linux/netdevice.h  2569  extern void __hw_addr_unsync(struct netdev_hw_addr_list *to_list,struct netdev_hw_addr_list *from_list,int addr_len);
__hw_addr_flush  prototype  include/linux/netdevice.h  2570  extern void __hw_addr_flush(struct netdev_hw_addr_list *list);
__hw_addr_init  prototype  include/linux/netdevice.h  2571  extern void __hw_addr_init(struct netdev_hw_addr_list *list);
dev_addr_add  prototype  include/linux/netdevice.h  2575  extern int dev_addr_add(struct net_device *dev,const unsigned char *addr,unsigned char addr_type);
dev_addr_del  prototype  include/linux/netdevice.h  2577  extern int dev_addr_del(struct net_device *dev,const unsigned char *addr,unsigned char addr_type);
dev_addr_add_multiple  prototype  include/linux/netdevice.h  2580  extern int dev_addr_add_multiple(struct net_device *to_dev,struct net_device *from_dev,unsigned char addr_type);
dev_addr_del_multiple  prototype  include/linux/netdevice.h  2583  extern int dev_addr_del_multiple(struct net_device *to_dev,struct net_device *from_dev,unsigned char addr_type);
dev_addr_flush  prototype  include/linux/netdevice.h  2584  extern void dev_addr_flush(struct net_device *dev);
dev_addr_init  prototype  include/linux/netdevice.h  2585  extern int dev_addr_init(struct net_device *dev);
dev_uc_add  prototype  include/linux/netdevice.h  2588  extern int dev_uc_add(struct net_device *dev,const unsigned char *addr);
dev_uc_add_excl  prototype  include/linux/netdevice.h  2589  extern int dev_uc_add_excl(struct net_device *dev,const unsigned char *addr);
dev_uc_del  prototype  include/linux/netdevice.h  2590  extern int dev_uc_del(struct net_device *dev,const unsigned char *addr);
dev_uc_sync  prototype  include/linux/netdevice.h  2591  extern int dev_uc_sync(struct net_device *to,struct net_device *from);
dev_uc_unsync  prototype  include/linux/netdevice.h  2592  extern void dev_uc_unsync(struct net_device *to,struct net_device *from);
dev_uc_flush  prototype  include/linux/netdevice.h  2593  extern void dev_uc_flush(struct net_device *dev);
dev_uc_init  prototype  include/linux/netdevice.h  2594  extern void dev_uc_init(struct net_device *dev);
dev_mc_add  prototype  include/linux/netdevice.h  2597  extern int dev_mc_add(struct net_device *dev,const unsigned char *addr);
dev_mc_add_global  prototype  include/linux/netdevice.h  2598  extern int dev_mc_add_global(struct net_device *dev,const unsigned char *addr);
dev_mc_add_excl  prototype  include/linux/netdevice.h  2599  extern int dev_mc_add_excl(struct net_device *dev,const unsigned char *addr);
dev_mc_del  prototype  include/linux/netdevice.h  2600  extern int dev_mc_del(struct net_device *dev,const unsigned char *addr);
dev_mc_del_global  prototype  include/linux/netdevice.h  2601  extern int dev_mc_del_global(struct net_device *dev,const unsigned char *addr);
dev_mc_sync  prototype  include/linux/netdevice.h  2602  extern int dev_mc_sync(struct net_device *to,struct net_device *from);
dev_mc_unsync  prototype  include/linux/netdevice.h  2603  extern void dev_mc_unsync(struct net_device *to,struct net_device *from);
dev_mc_flush  prototype  include/linux/netdevice.h  2604  extern void dev_mc_flush(struct net_device *dev);
dev_mc_init  prototype  include/linux/netdevice.h  2605  extern void dev_mc_init(struct net_device *dev);
dev_set_rx_mode  prototype  include/linux/netdevice.h  2608  extern void dev_set_rx_mode(struct net_device *dev);
__dev_set_rx_mode  prototype  include/linux/netdevice.h  2609  extern void __dev_set_rx_mode(struct net_device *dev);
dev_set_promiscuity  prototype  include/linux/netdevice.h  2610  extern int dev_set_promiscuity(struct net_device *dev,int inc);
dev_set_allmulti  prototype  include/linux/netdevice.h  2611  extern int dev_set_allmulti(struct net_device *dev,int inc);
netdev_state_change  prototype  include/linux/netdevice.h  2612  extern void netdev_state_change(struct net_device *dev);
netdev_notify_peers  prototype  include/linux/netdevice.h  2613  extern void netdev_notify_peers(struct net_device *dev);
netdev_features_change  prototype  include/linux/netdevice.h  2614  extern void netdev_features_change(struct net_device *dev);
dev_load  prototype  include/linux/netdevice.h  2616  extern void dev_load(struct net *net,const char *name);
dev_mcast_init  prototype  include/linux/netdevice.h  2617  extern void dev_mcast_init(void);
dev_get_stats  prototype  include/linux/netdevice.h  2619  extern struct rtnl_link_stats64 *dev_get_stats(struct net_device *dev,struct rtnl_link_stats64 *storage);
netdev_stats_to_stats64  prototype  include/linux/netdevice.h  2621  extern void netdev_stats_to_stats64(struct rtnl_link_stats64 *stats64,const struct net_device_stats *netdev_stats);
netdev_set_master  prototype  include/linux/netdevice.h  2627  extern int netdev_set_master(struct net_device *dev,struct net_device *master);
netdev_set_bond_master  prototype  include/linux/netdevice.h  2629  extern int netdev_set_bond_master(struct net_device *dev,struct net_device *master);
skb_checksum_help  prototype  include/linux/netdevice.h  2630  extern int skb_checksum_help(struct sk_buff *skb);
skb_gso_segment  prototype  include/linux/netdevice.h  2632  extern struct sk_buff *skb_gso_segment(struct sk_buff *skb,netdev_features_t features);
netdev_rx_csum_fault  function  include/linux/netdevice.h  2636  static inline void netdev_rx_csum_fault(struct net_device *dev)
net_enable_timestamp  prototype  include/linux/netdevice.h  2641  extern void net_enable_timestamp(void);
net_disable_timestamp  prototype  include/linux/netdevice.h  2642  extern void net_disable_timestamp(void);
dev_seq_start  prototype  include/linux/netdevice.h  2645  extern void *dev_seq_start(struct seq_file *seq,loff_t *pos);
dev_seq_next  prototype  include/linux/netdevice.h  2646  extern void *dev_seq_next(struct seq_file *seq,void *v,loff_t *pos);
dev_seq_stop  prototype  include/linux/netdevice.h  2647  extern void dev_seq_stop(struct seq_file *seq,void *v);
netdev_class_create_file  prototype  include/linux/netdevice.h  2650  extern int netdev_class_create_file(struct class_attribute *class_attr);
netdev_class_remove_file  prototype  include/linux/netdevice.h  2651  extern void netdev_class_remove_file(struct class_attribute *class_attr);
netdev_drivername  prototype  include/linux/netdevice.h  2655  extern const char *netdev_drivername(const struct net_device *dev);
linkwatch_run_queue  prototype  include/linux/netdevice.h  2657  extern void linkwatch_run_queue(void);
netdev_get_wanted_features  function  include/linux/netdevice.h  2659  static inline netdev_features_t netdev_get_wanted_features(
netdev_increment_features  prototype  include/linux/netdevice.h  2665  netdev_features_t netdev_increment_features(netdev_features_t all,netdev_features_t one, netdev_features_t mask);
__netdev_update_features  prototype  include/linux/netdevice.h  2666  int __netdev_update_features(struct net_device *dev);
netdev_update_features  prototype  include/linux/netdevice.h  2667  void netdev_update_features(struct net_device *dev);
netdev_change_features  prototype  include/linux/netdevice.h  2668  void netdev_change_features(struct net_device *dev);
netif_stacked_transfer_operstate  prototype  include/linux/netdevice.h  2671  void netif_stacked_transfer_operstate(const struct net_device *rootdev,struct net_device *dev);
netif_skb_features  prototype  include/linux/netdevice.h  2673  netdev_features_t netif_skb_features(struct sk_buff *skb);
net_gso_ok  function  include/linux/netdevice.h  2675  static inline bool net_gso_ok(netdev_features_t features,int gso_type)
skb_gso_ok  function  include/linux/netdevice.h  2690  static inline bool skb_gso_ok(struct sk_buff *skb,netdev_features_t features)
netif_needs_gso  function  include/linux/netdevice.h  2697  static inline bool netif_needs_gso(struct sk_buff *skb,netdev_features_t features)
netif_set_gso_max_size  function  include/linux/netdevice.h  2705  static inline void netif_set_gso_max_size(struct net_device *dev,unsigned int size)
netif_is_bond_slave  function  include/linux/netdevice.h  2710  static inline bool netif_is_bond_slave(struct net_device *dev)
netif_supports_nofcs  function  include/linux/netdevice.h  2715  static inline bool netif_supports_nofcs(struct net_device *dev)
netdev_name  function  include/linux/netdevice.h  2726  static inline const char *netdev_name(const struct net_device *dev)
netdev_printk  prototype  include/linux/netdevice.h  2735  int netdev_printk(const char *level,const struct net_device *dev,const char *format, ...);
netdev_emerg  prototype  include/linux/netdevice.h  2737  int netdev_emerg(const struct net_device *dev,const char *format,...);
netdev_alert  prototype  include/linux/netdevice.h  2739  int netdev_alert(const struct net_device *dev,const char *format,...);
netdev_crit  prototype  include/linux/netdevice.h  2741  int netdev_crit(const struct net_device *dev,const char *format,...);
netdev_err  prototype  include/linux/netdevice.h  2743  int netdev_err(const struct net_device *dev,const char *format,...);
netdev_warn  prototype  include/linux/netdevice.h  2745  int netdev_warn(const struct net_device *dev,const char *format,...);
netdev_notice  prototype  include/linux/netdevice.h  2747  int netdev_notice(const struct net_device *dev,const char *format,...);
netdev_info  prototype  include/linux/netdevice.h  2749  int netdev_info(const struct net_device *dev,const char *format,...);
MODULE_ALIAS_NETDEV  macro  include/linux/netdevice.h  2752  #define MODULE_ALIAS_NETDEV(device) MODULE_ALIAS("netdev-" device)
netdev_dbg  macro  include/linux/netdevice.h  2768  #define netdev_dbg(__dev,format,args...) ({ if (0) netdev_printk(KERN_DEBUG, __dev, format, ##args); 0; })
netdev_vdbg  macro  include/linux/netdevice.h  2780  #define netdev_vdbg(dev,format,args...) ({ if (0) netdev_printk(KERN_DEBUG, dev, format, ##args); 0; })
netdev_WARN  macro  include/linux/netdevice.h  2789  #define netdev_WARN(dev,format,args...) WARN(1, "netdevice: %s\n" format, netdev_name(dev), ##args);
netif_printk  macro  include/linux/netdevice.h  2797  #define netif_printk(priv,type,level,dev,fmt,args...) do { if (netif_msg_##type(priv)) netdev_printk(level, (dev), fmt, ##args); } while (0)
netif_level  macro  include/linux/netdevice.h  2803  #define netif_level(level,priv,type,dev,fmt,args...) do { if (netif_msg_##type(priv)) netdev_##level(dev, fmt, ##args); } while (0)
netif_emerg  macro  include/linux/netdevice.h  2806  #define netif_emerg(priv,type,dev,fmt,args...) netif_level(emerg, priv, type, dev, fmt, ##args)
netif_alert  macro  include/linux/netdevice.h  2808  #define netif_alert(priv,type,dev,fmt,args...) netif_level(alert, priv, type, dev, fmt, ##args)
netif_crit  macro  include/linux/netdevice.h  2810  #define netif_crit(priv,type,dev,fmt,args...) netif_level(crit, priv, type, dev, fmt, ##args)
netif_err  macro  include/linux/netdevice.h  2812  #define netif_err(priv,type,dev,fmt,args...) netif_level(err, priv, type, dev, fmt, ##args)
netif_warn  macro  include/linux/netdevice.h  2814  #define netif_warn(priv,type,dev,fmt,args...) netif_level(warn, priv, type, dev, fmt, ##args)
netif_notice  macro  include/linux/netdevice.h  2816  #define netif_notice(priv,type,dev,fmt,args...) netif_level(notice, priv, type, dev, fmt, ##args)
netif_info  macro  include/linux/netdevice.h  2818  #define netif_info(priv,type,dev,fmt,args...) netif_level(info, priv, type, dev, fmt, ##args)
netif_dbg  macro  include/linux/netdevice.h  2835  #define netif_dbg(priv,type,dev,format,args...) ({ if (0) netif_printk(priv, type, KERN_DEBUG, dev, format, ##args); 0; })
netif_vdbg  macro  include/linux/netdevice.h  2846  #define netif_vdbg(priv,type,dev,format,args...) ({ if (0) netif_printk(priv, type, KERN_DEBUG, dev, format, ##args); 0; })
_LINUX_ETHERDEVICE_H  macro  include/linux/etherdevice.h  23  #define _LINUX_ETHERDEVICE_H
eth_type_trans  prototype  include/linux/etherdevice.h  31  extern __be16 eth_type_trans(struct sk_buff *skb,struct net_device *dev);
eth_header  prototype  include/linux/etherdevice.h  36  extern int eth_header(struct sk_buff *skb,struct net_device *dev,unsigned short type,const void *daddr, const void *saddr, unsigned len);
eth_rebuild_header  prototype  include/linux/etherdevice.h  37  extern int eth_rebuild_header(struct sk_buff *skb);
eth_header_parse  prototype  include/linux/if_ether.h  31  int eth_header_parse(const struct sk_buff *skb,unsigned char *haddr);
eth_header_cache  prototype  include/linux/etherdevice.h  39  extern int eth_header_cache(const struct neighbour *neigh,struct hh_cache *hh,__be16 type);
eth_header_cache_update  prototype  include/linux/etherdevice.h  42  extern void eth_header_cache_update(struct hh_cache *hh,const struct net_device *dev,const unsigned char *haddr);
eth_mac_addr  prototype  include/linux/etherdevice.h  43  extern int eth_mac_addr(struct net_device *dev,void *p);
eth_change_mtu  prototype  include/linux/etherdevice.h  44  extern int eth_change_mtu(struct net_device *dev,int new_mtu);
eth_validate_addr  prototype  include/linux/etherdevice.h  45  extern int eth_validate_addr(struct net_device *dev);
alloc_etherdev_mqs  prototype  include/linux/etherdevice.h  50  extern struct net_device *alloc_etherdev_mqs(int sizeof_priv,unsigned int txqs,unsigned int rxqs);
alloc_etherdev  macro  include/linux/etherdevice.h  51  #define alloc_etherdev(sizeof_priv) alloc_etherdev_mq(sizeof_priv,1)
alloc_etherdev_mq  macro  include/linux/etherdevice.h  52  #define alloc_etherdev_mq(sizeof_priv,count) alloc_etherdev_mqs(sizeof_priv,count,count)
is_link_local_ether_addr  function  include/linux/etherdevice.h  65  static inline bool is_link_local_ether_addr(const u8 *addr)
is_zero_ether_addr  function  include/linux/etherdevice.h  80  static inline bool is_zero_ether_addr(const u8 *addr)
is_multicast_ether_addr  function  include/linux/etherdevice.h  92  static inline bool is_multicast_ether_addr(const u8 *addr)
is_local_ether_addr  function  include/linux/etherdevice.h  103  static inline bool is_local_ether_addr(const u8 *addr)
is_broadcast_ether_addr  function  include/linux/etherdevice.h  114  static inline bool is_broadcast_ether_addr(const u8 *addr)
is_unicast_ether_addr  function  include/linux/etherdevice.h  125  static inline bool is_unicast_ether_addr(const u8 *addr)
is_valid_ether_addr  function  include/linux/etherdevice.h  139  static inline bool is_valid_ether_addr(const u8 *addr)
eth_random_addr  function  include/linux/etherdevice.h  153  static inline void eth_random_addr(u8 *addr)
random_ether_addr  macro  include/linux/etherdevice.h  160  #define random_ether_addr(addr) eth_random_addr(addr)
eth_broadcast_addr  function  include/linux/etherdevice.h  168  static inline void eth_broadcast_addr(u8 *addr)
eth_zero_addr  function  include/linux/etherdevice.h  179  static inline void eth_zero_addr(u8 *addr)
eth_hw_addr_random  function  include/linux/etherdevice.h  193  static inline void eth_hw_addr_random(struct net_device *dev)
compare_ether_addr  function  include/linux/etherdevice.h  207  static inline unsigned compare_ether_addr(const u8 *addr1,const u8 *addr2)
ether_addr_equal  function  include/linux/etherdevice.h  223  static inline bool ether_addr_equal(const u8 *addr1,const u8 *addr2)
zap_last_2bytes  function  include/linux/etherdevice.h  228  static inline unsigned long zap_last_2bytes(unsigned long value)
ether_addr_equal_64bits  function  include/linux/etherdevice.h  252  static inline bool ether_addr_equal_64bits(const u8 addr1[6+2],const u8 addr2[6+2])
is_etherdev_addr  function  include/linux/etherdevice.h  281  static inline bool is_etherdev_addr(const struct net_device *dev,const u8 addr[6 + 2])
compare_ether_header  function  include/linux/etherdevice.h  309  static inline unsigned long compare_ether_header(const void *a,const void *b)
_LINUX_IF_ETHER_H  macro  include/linux/if_ether.h  21  #define _LINUX_IF_ETHER_H
eth_hdr  function  include/linux/if_ether.h  26  static inline struct ethhdr *eth_hdr(const struct sk_buff *skb)
mac_pton  prototype  include/linux/if_ether.h  33  int mac_pton(const char *s,u8 *mac);
sysfs_format_mac  prototype  include/linux/if_ether.h  34  extern ssize_t sysfs_format_mac(char *buf,const unsigned char *addr,int len);
_LINUX_SKBUFF_H  macro  include/linux/skbuff.h  15  #define _LINUX_SKBUFF_H
CHECKSUM_NONE  macro  include/linux/skbuff.h  37  #define CHECKSUM_NONE 0
CHECKSUM_UNNECESSARY  macro  include/linux/skbuff.h  38  #define CHECKSUM_UNNECESSARY 1
CHECKSUM_COMPLETE  macro  include/linux/skbuff.h  39  #define CHECKSUM_COMPLETE 2
CHECKSUM_PARTIAL  macro  include/linux/skbuff.h  40  #define CHECKSUM_PARTIAL 3
SKB_DATA_ALIGN  macro  include/linux/skbuff.h  43  #define SKB_DATA_ALIGN(X) (((X) + (SMP_CACHE_BYTES - 1)) & ~(SMP_CACHE_BYTES - 1))
SKB_WITH_OVERHEAD  macro  include/linux/skbuff.h  45  #define SKB_WITH_OVERHEAD(X) ((X) - SKB_DATA_ALIGN(sizeof(struct skb_shared_info)))
SKB_MAX_ORDER  macro  include/linux/skbuff.h  47  #define SKB_MAX_ORDER(X,ORDER) SKB_WITH_OVERHEAD((PAGE_SIZE << (ORDER)) - (X))
SKB_MAX_HEAD  macro  include/linux/skbuff.h  48  #define SKB_MAX_HEAD(X) (SKB_MAX_ORDER((X),0))
SKB_MAX_ALLOC  macro  include/linux/skbuff.h  49  #define SKB_MAX_ALLOC (SKB_MAX_ORDER(0,2))
SKB_TRUESIZE  macro  include/linux/skbuff.h  54  #define SKB_TRUESIZE(X) ((X) + SKB_DATA_ALIGN(sizeof(struct sk_buff)) + SKB_DATA_ALIGN(sizeof(struct skb_shared_info)))
nf_conntrack  struct  include/linux/skbuff.h  113  struct nf_conntrack {
nf_bridge_info  struct  include/linux/skbuff.h  119  struct nf_bridge_info {
sk_buff_head  struct  include/linux/skbuff.h  128  struct sk_buff_head {
MAX_SKB_FRAGS  macro  include/linux/skbuff.h  149  #define MAX_SKB_FRAGS (65536/PAGE_SIZE + 1)
skb_frag_struct  struct  include/linux/skbuff.h  154  struct skb_frag_struct {
skb_frag_size  function  include/linux/skbuff.h  167  static inline unsigned int skb_frag_size(const skb_frag_t *frag)
skb_frag_size_set  function  include/linux/skbuff.h  172  static inline void skb_frag_size_set(skb_frag_t *frag,unsigned int size)
skb_frag_size_add  function  include/linux/skbuff.h  177  static inline void skb_frag_size_add(skb_frag_t *frag,int delta)
skb_frag_size_sub  function  include/linux/skbuff.h  182  static inline void skb_frag_size_sub(skb_frag_t *frag,int delta)
HAVE_HW_TIME_STAMP  macro  include/linux/skbuff.h  187  #define HAVE_HW_TIME_STAMP
skb_shared_hwtstamps  struct  include/linux/skbuff.h  212  struct skb_shared_hwtstamps {
ubuf_info  struct  include/linux/skbuff.h  243  struct ubuf_info {
skb_shared_info  struct  include/linux/skbuff.h  252  struct skb_shared_info {
SKB_DATAREF_SHIFT  macro  include/linux/skbuff.h  287  #define SKB_DATAREF_SHIFT 16
SKB_DATAREF_MASK  macro  include/linux/skbuff.h  288  #define SKB_DATAREF_MASK ((1 << SKB_DATAREF_SHIFT) - 1)
NET_SKBUFF_DATA_USES_OFFSET  macro  include/linux/skbuff.h  313  #define NET_SKBUFF_DATA_USES_OFFSET 1
NET_SKBUFF_NF_DEFRAG_NEEDED  macro  include/linux/skbuff.h  324  #define NET_SKBUFF_NF_DEFRAG_NEEDED 1
sk_buff  struct  include/linux/skbuff.h  392  struct sk_buff {
kmemcheck_bitfield_begin  prototype  include/linux/net.h  107  kmemcheck_bitfield_begin(type);
kmemcheck_bitfield_end  prototype  include/linux/net.h  109  kmemcheck_bitfield_end(type);
SKB_ALLOC_FCLONE  macro  include/linux/skbuff.h  518  #define SKB_ALLOC_FCLONE 0x01
SKB_ALLOC_RX  macro  include/linux/skbuff.h  519  #define SKB_ALLOC_RX 0x02
skb_pfmemalloc  function  include/linux/skbuff.h  522  static inline bool skb_pfmemalloc(const struct sk_buff *skb)
SKB_DST_NOREF  macro  include/linux/skbuff.h  531  #define SKB_DST_NOREF 1UL
SKB_DST_PTRMASK  macro  include/linux/skbuff.h  532  #define SKB_DST_PTRMASK ~(SKB_DST_NOREF)
skb_dst  function  include/linux/skbuff.h  540  static inline struct dst_entry *skb_dst(const struct sk_buff *skb)
skb_dst_set  function  include/linux/skbuff.h  559  static inline void skb_dst_set(struct sk_buff *skb,struct dst_entry *dst)
skb_dst_set_noref  prototype  include/linux/skbuff.h  564  extern void skb_dst_set_noref(struct sk_buff *skb,struct dst_entry *dst);
skb_dst_is_noref  function  include/linux/skbuff.h  570  static inline bool skb_dst_is_noref(const struct sk_buff *skb)
skb_rtable  function  include/linux/skbuff.h  575  static inline struct rtable *skb_rtable(const struct sk_buff *skb)
kfree_skb  prototype  include/linux/skbuff.h  580  extern void kfree_skb(struct sk_buff *skb);
skb_tx_error  prototype  include/linux/skbuff.h  581  extern void skb_tx_error(struct sk_buff *skb);
consume_skb  prototype  include/linux/skbuff.h  582  extern void consume_skb(struct sk_buff *skb);
__kfree_skb  prototype  include/linux/skbuff.h  583  extern void __kfree_skb(struct sk_buff *skb);
kfree_skb_partial  prototype  include/linux/skbuff.h  586  extern void kfree_skb_partial(struct sk_buff *skb,bool head_stolen);
skb_try_coalesce  prototype  include/linux/skbuff.h  588  extern bool skb_try_coalesce(struct sk_buff *to,struct sk_buff *from,bool *fragstolen, int *delta_truesize);
__alloc_skb  prototype  include/linux/skbuff.h  591  extern struct sk_buff *__alloc_skb(unsigned int size,gfp_t priority, int flags, int node);
build_skb  prototype  include/linux/skbuff.h  592  extern struct sk_buff *build_skb(void *data,unsigned int frag_size);
alloc_skb  function  include/linux/skbuff.h  594  static inline struct sk_buff *alloc_skb(unsigned int size,gfp_t priority)
alloc_skb_fclone  function  include/linux/skbuff.h  600  static inline struct sk_buff *alloc_skb_fclone(unsigned int size,gfp_t priority)
skb_morph  prototype  include/linux/skbuff.h  605  extern struct sk_buff *skb_morph(struct sk_buff *dst,struct sk_buff *src);
skb_copy_ubufs  prototype  include/linux/skbuff.h  606  extern int skb_copy_ubufs(struct sk_buff *skb,gfp_t gfp_mask);
skb_clone  prototype  include/linux/skbuff.h  608  extern struct sk_buff *skb_clone(struct sk_buff *skb,gfp_t priority);
skb_copy  prototype  include/linux/skbuff.h  610  extern struct sk_buff *skb_copy(const struct sk_buff *skb,gfp_t priority);
__pskb_copy  prototype  include/linux/skbuff.h  612  extern struct sk_buff *__pskb_copy(struct sk_buff *skb,int headroom, gfp_t gfp_mask);
pskb_expand_head  prototype  include/linux/skbuff.h  616  extern int pskb_expand_head(struct sk_buff *skb,int nhead, int ntail,gfp_t gfp_mask);
skb_realloc_headroom  prototype  include/linux/skbuff.h  618  extern struct sk_buff *skb_realloc_headroom(struct sk_buff *skb,unsigned int headroom);
skb_copy_expand  prototype  include/linux/skbuff.h  621  extern struct sk_buff *skb_copy_expand(const struct sk_buff *skb,int newheadroom, int newtailroom,gfp_t priority);
skb_to_sgvec  prototype  include/linux/skbuff.h  624  extern int skb_to_sgvec(struct sk_buff *skb,struct scatterlist *sg, int offset,int len);
skb_cow_data  prototype  include/linux/skbuff.h  626  extern int skb_cow_data(struct sk_buff *skb,int tailbits,struct sk_buff **trailer);
skb_pad  prototype  include/linux/skbuff.h  627  extern int skb_pad(struct sk_buff *skb,int pad);
dev_kfree_skb  macro  include/linux/skbuff.h  628  #define dev_kfree_skb(a) consume_skb(a)
skb_append_datato_frags  prototype  include/linux/skbuff.h  633  extern int skb_append_datato_frags(struct sock *sk,struct sk_buff *skb,int getfrag(void *from, char *to, int offset,int len,int odd, struct sk_buff *skb),void *from, int length);
skb_seq_state  struct  include/linux/skbuff.h  635  struct skb_seq_state {
skb_prepare_seq_read  prototype  include/linux/skbuff.h  647  extern void skb_prepare_seq_read(struct sk_buff *skb,unsigned int from, unsigned int to,struct skb_seq_state *st);
skb_seq_read  prototype  include/linux/skbuff.h  649  extern unsigned int skb_seq_read(unsigned int consumed,const u8 **data,struct skb_seq_state *st);
skb_abort_seq_read  prototype  include/linux/skbuff.h  650  extern void skb_abort_seq_read(struct skb_seq_state *st);
skb_find_text  prototype  include/linux/skbuff.h  654  extern unsigned int skb_find_text(struct sk_buff *skb,unsigned int from,unsigned int to, struct ts_config *config,struct ts_state *state);
__skb_get_rxhash  prototype  include/linux/skbuff.h  656  extern void __skb_get_rxhash(struct sk_buff *skb);
skb_get_rxhash  function  include/linux/skbuff.h  657  static inline __u32 skb_get_rxhash(struct sk_buff *skb)
skb_end_pointer  function  include/linux/skbuff.h  676  static inline unsigned char *skb_end_pointer(const struct sk_buff *skb)
skb_end_offset  function  include/linux/skbuff.h  681  static inline unsigned int skb_end_offset(const struct sk_buff *skb)
skb_shinfo  macro  include/linux/skbuff.h  688  #define skb_shinfo(SKB) ((struct skb_shared_info *)(skb_end_pointer(SKB)))
skb_hwtstamps  function  include/linux/skbuff.h  690  static inline struct skb_shared_hwtstamps *skb_hwtstamps(struct sk_buff *skb)
skb_queue_empty  function  include/linux/skbuff.h  701  static inline int skb_queue_empty(const struct sk_buff_head *list)
skb_queue_is_last  function  include/linux/skbuff.h  714  static inline bool skb_queue_is_last(const struct sk_buff_head *list,const struct sk_buff *skb)
skb_queue_is_first  function  include/linux/skbuff.h  727  static inline bool skb_queue_is_first(const struct sk_buff_head *list,const struct sk_buff *skb)
skb_queue_next  function  include/linux/skbuff.h  741  static inline struct sk_buff *skb_queue_next(const struct sk_buff_head *list,const struct sk_buff *skb)
skb_queue_prev  function  include/linux/skbuff.h  759  static inline struct sk_buff *skb_queue_prev(const struct sk_buff_head *list,const struct sk_buff *skb)
skb_get  function  include/linux/skbuff.h  775  static inline struct sk_buff *skb_get(struct sk_buff *skb)
skb_cloned  function  include/linux/skbuff.h  794  static inline int skb_cloned(const struct sk_buff *skb)
skb_header_cloned  function  include/linux/skbuff.h  807  static inline int skb_header_cloned(const struct sk_buff *skb)
skb_header_release  function  include/linux/skbuff.h  827  static inline void skb_header_release(struct sk_buff *skb)
skb_shared  function  include/linux/skbuff.h  841  static inline int skb_shared(const struct sk_buff *skb)
skb_share_check  function  include/linux/skbuff.h  859  static inline struct sk_buff *skb_share_check(struct sk_buff *skb,gfp_t pri)
skb_unshare  function  include/linux/skbuff.h  895  static inline struct sk_buff *skb_unshare(struct sk_buff *skb,gfp_t pri)
skb_peek  function  include/linux/skbuff.h  919  static inline struct sk_buff *skb_peek(const struct sk_buff_head *list_)
skb_peek_next  function  include/linux/skbuff.h  938  static inline struct sk_buff *skb_peek_next(struct sk_buff *skb,const struct sk_buff_head *list_)
skb_peek_tail  function  include/linux/skbuff.h  960  static inline struct sk_buff *skb_peek_tail(const struct sk_buff_head *list_)
skb_queue_len  function  include/linux/skbuff.h  976  static inline __u32 skb_queue_len(const struct sk_buff_head *list_)
__skb_queue_head_init  function  include/linux/skbuff.h  991  static inline void __skb_queue_head_init(struct sk_buff_head *list)
skb_queue_head_init  function  include/linux/skbuff.h  1005  static inline void skb_queue_head_init(struct sk_buff_head *list)
skb_queue_head_init_class  function  include/linux/skbuff.h  1012  static inline void skb_queue_head_init_class(struct sk_buff_head *list,struct lock_class_key *class)
skb_insert  prototype  include/linux/skbuff.h  1024  extern void skb_insert(struct sk_buff *old,struct sk_buff *newsk,struct sk_buff_head *list);
__skb_insert  function  include/linux/skbuff.h  1027  static inline void __skb_insert(struct sk_buff *newsk,struct sk_buff *prev, struct sk_buff *next,struct sk_buff_head *list)
__skb_queue_splice  function  include/linux/skbuff.h  1037  static inline void __skb_queue_splice(const struct sk_buff_head *list,struct sk_buff *prev,struct sk_buff *next)
skb_queue_splice  function  include/linux/skbuff.h  1055  static inline void skb_queue_splice(const struct sk_buff_head *list,struct sk_buff_head *head)
skb_queue_splice_init  function  include/linux/skbuff.h  1071  static inline void skb_queue_splice_init(struct sk_buff_head *list,struct sk_buff_head *head)
skb_queue_splice_tail  function  include/linux/skbuff.h  1086  static inline void skb_queue_splice_tail(const struct sk_buff_head *list,struct sk_buff_head *head)
skb_queue_splice_tail_init  function  include/linux/skbuff.h  1103  static inline void skb_queue_splice_tail_init(struct sk_buff_head *list,struct sk_buff_head *head)
__skb_queue_after  function  include/linux/skbuff.h  1125  static inline void __skb_queue_after(struct sk_buff_head *list,struct sk_buff *prev,struct sk_buff *newsk)
skb_append  prototype  include/linux/skbuff.h  1131  extern void skb_append(struct sk_buff *old,struct sk_buff *newsk,struct sk_buff_head *list);
__skb_queue_before  function  include/linux/skbuff.h  1135  static inline void __skb_queue_before(struct sk_buff_head *list,struct sk_buff *next,struct sk_buff *newsk)
skb_queue_head  prototype  include/linux/skbuff.h  1150  extern void skb_queue_head(struct sk_buff_head *list,struct sk_buff *newsk);
__skb_queue_head  function  include/linux/skbuff.h  1152  static inline void __skb_queue_head(struct sk_buff_head *list,struct sk_buff *newsk)
skb_queue_tail  prototype  include/linux/skbuff.h  1167  extern void skb_queue_tail(struct sk_buff_head *list,struct sk_buff *newsk);
__skb_queue_tail  function  include/linux/skbuff.h  1169  static inline void __skb_queue_tail(struct sk_buff_head *list,struct sk_buff *newsk)
skb_unlink  prototype  include/linux/skbuff.h  1178  extern void skb_unlink(struct sk_buff *skb,struct sk_buff_head *list);
__skb_unlink  function  include/linux/skbuff.h  1179  static inline void __skb_unlink(struct sk_buff *skb,struct sk_buff_head *list)
skb_dequeue  prototype  include/linux/skbuff.h  1199  extern struct sk_buff *skb_dequeue(struct sk_buff_head *list);
__skb_dequeue  function  include/linux/skbuff.h  1200  static inline struct sk_buff *__skb_dequeue(struct sk_buff_head *list)
skb_dequeue_tail  prototype  include/linux/skbuff.h  1216  extern struct sk_buff *skb_dequeue_tail(struct sk_buff_head *list);
__skb_dequeue_tail  function  include/linux/skbuff.h  1217  static inline struct sk_buff *__skb_dequeue_tail(struct sk_buff_head *list)
skb_is_nonlinear  function  include/linux/skbuff.h  1226  static inline bool skb_is_nonlinear(const struct sk_buff *skb)
skb_headlen  function  include/linux/skbuff.h  1231  static inline unsigned int skb_headlen(const struct sk_buff *skb)
skb_pagelen  function  include/linux/skbuff.h  1236  static inline int skb_pagelen(const struct sk_buff *skb)
__skb_fill_page_desc  function  include/linux/skbuff.h  1259  static inline void __skb_fill_page_desc(struct sk_buff *skb,int i,struct page *page, int off, int size)
skb_fill_page_desc  function  include/linux/skbuff.h  1296  static inline void skb_fill_page_desc(struct sk_buff *skb,int i,struct page *page, int off, int size)
skb_add_rx_frag  prototype  include/linux/skbuff.h  1303  extern void skb_add_rx_frag(struct sk_buff *skb,int i,struct page *page,int off, int size, unsigned int truesize);
SKB_PAGE_ASSERT  macro  include/linux/skbuff.h  1305  #define SKB_PAGE_ASSERT(skb) BUG_ON(skb_shinfo(skb)->nr_frags)
SKB_FRAG_ASSERT  macro  include/linux/skbuff.h  1306  #define SKB_FRAG_ASSERT(skb) BUG_ON(skb_has_frag_list(skb))
SKB_LINEAR_ASSERT  macro  include/linux/skbuff.h  1307  #define SKB_LINEAR_ASSERT(skb) BUG_ON(skb_is_nonlinear(skb))
skb_tail_pointer  function  include/linux/skbuff.h  1326  static inline unsigned char *skb_tail_pointer(const struct sk_buff *skb)
skb_reset_tail_pointer  function  include/linux/skbuff.h  1331  static inline void skb_reset_tail_pointer(struct sk_buff *skb)
skb_set_tail_pointer  function  include/linux/skbuff.h  1336  static inline void skb_set_tail_pointer(struct sk_buff *skb,const int offset)
skb_put  prototype  include/linux/skbuff.h  1346  extern unsigned char *skb_put(struct sk_buff *skb,unsigned int len);
__skb_put  function  include/linux/skbuff.h  1347  static inline unsigned char *__skb_put(struct sk_buff *skb,unsigned int len)
skb_push  prototype  include/linux/skbuff.h  1356  extern unsigned char *skb_push(struct sk_buff *skb,unsigned int len);
__skb_push  function  include/linux/skbuff.h  1357  static inline unsigned char *__skb_push(struct sk_buff *skb,unsigned int len)
skb_pull  prototype  include/linux/skbuff.h  1364  extern unsigned char *skb_pull(struct sk_buff *skb,unsigned int len);
__skb_pull  function  include/linux/skbuff.h  1365  static inline unsigned char *__skb_pull(struct sk_buff *skb,unsigned int len)
skb_pull_inline  function  include/linux/skbuff.h  1372  static inline unsigned char *skb_pull_inline(struct sk_buff *skb,unsigned int len)
__pskb_pull_tail  prototype  include/linux/skbuff.h  1377  extern unsigned char *__pskb_pull_tail(struct sk_buff *skb,int delta);
__pskb_pull  function  include/linux/skbuff.h  1379  static inline unsigned char *__pskb_pull(struct sk_buff *skb,unsigned int len)
pskb_pull  function  include/linux/skbuff.h  1388  static inline unsigned char *pskb_pull(struct sk_buff *skb,unsigned int len)
pskb_may_pull  function  include/linux/skbuff.h  1393  static inline int pskb_may_pull(struct sk_buff *skb,unsigned int len)
skb_headroom  function  include/linux/skbuff.h  1408  static inline unsigned int skb_headroom(const struct sk_buff *skb)
skb_tailroom  function  include/linux/skbuff.h  1419  static inline int skb_tailroom(const struct sk_buff *skb)
skb_availroom  function  include/linux/skbuff.h  1431  static inline int skb_availroom(const struct sk_buff *skb)
skb_reserve  function  include/linux/skbuff.h  1447  static inline void skb_reserve(struct sk_buff *skb,int len)
skb_reset_inner_headers  function  include/linux/skbuff.h  1453  static inline void skb_reset_inner_headers(struct sk_buff *skb)
skb_reset_mac_len  function  include/linux/skbuff.h  1459  static inline void skb_reset_mac_len(struct sk_buff *skb)
skb_inner_transport_header  function  include/linux/skbuff.h  1555  static inline unsigned char *skb_inner_transport_header(const struct sk_buff
skb_reset_inner_transport_header  function  include/linux/skbuff.h  1561  static inline void skb_reset_inner_transport_header(struct sk_buff *skb)
skb_set_inner_transport_header  function  include/linux/skbuff.h  1567  static inline void skb_set_inner_transport_header(struct sk_buff *skb,const int offset)
skb_inner_network_header  function  include/linux/skbuff.h  1572  static inline unsigned char *skb_inner_network_header(const struct sk_buff *skb)
skb_reset_inner_network_header  function  include/linux/skbuff.h  1577  static inline void skb_reset_inner_network_header(struct sk_buff *skb)
skb_set_inner_network_header  function  include/linux/skbuff.h  1583  static inline void skb_set_inner_network_header(struct sk_buff *skb,const int offset)
skb_transport_header  function  include/linux/skbuff.h  1588  static inline unsigned char *skb_transport_header(const struct sk_buff *skb)
skb_reset_transport_header  function  include/linux/skbuff.h  1593  static inline void skb_reset_transport_header(struct sk_buff *skb)
skb_set_transport_header  function  include/linux/skbuff.h  1599  static inline void skb_set_transport_header(struct sk_buff *skb,const int offset)
skb_network_header  function  include/linux/skbuff.h  1604  static inline unsigned char *skb_network_header(const struct sk_buff *skb)
skb_reset_network_header  function  include/linux/skbuff.h  1609  static inline void skb_reset_network_header(struct sk_buff *skb)
skb_set_network_header  function  include/linux/skbuff.h  1614  static inline void skb_set_network_header(struct sk_buff *skb,const int offset)
skb_mac_header  function  include/linux/skbuff.h  1619  static inline unsigned char *skb_mac_header(const struct sk_buff *skb)
skb_mac_header_was_set  function  include/linux/skbuff.h  1624  static inline int skb_mac_header_was_set(const struct sk_buff *skb)
skb_reset_mac_header  function  include/linux/skbuff.h  1629  static inline void skb_reset_mac_header(struct sk_buff *skb)
skb_set_mac_header  function  include/linux/skbuff.h  1634  static inline void skb_set_mac_header(struct sk_buff *skb,const int offset)
skb_mac_header_rebuild  function  include/linux/skbuff.h  1640  static inline void skb_mac_header_rebuild(struct sk_buff *skb)
skb_checksum_start_offset  function  include/linux/skbuff.h  1650  static inline int skb_checksum_start_offset(const struct sk_buff *skb)
skb_transport_offset  function  include/linux/skbuff.h  1655  static inline int skb_transport_offset(const struct sk_buff *skb)
skb_network_header_len  function  include/linux/skbuff.h  1660  static inline u32 skb_network_header_len(const struct sk_buff *skb)
skb_inner_network_header_len  function  include/linux/skbuff.h  1665  static inline u32 skb_inner_network_header_len(const struct sk_buff *skb)
skb_network_offset  function  include/linux/skbuff.h  1670  static inline int skb_network_offset(const struct sk_buff *skb)
skb_inner_network_offset  function  include/linux/skbuff.h  1675  static inline int skb_inner_network_offset(const struct sk_buff *skb)
pskb_network_may_pull  function  include/linux/skbuff.h  1680  static inline int pskb_network_may_pull(struct sk_buff *skb,unsigned int len)
NET_IP_ALIGN  macro  arch/x86/include/asm/processor.h  40  #define NET_IP_ALIGN 0
NET_SKB_PAD  macro  include/linux/skbuff.h  1730  #define NET_SKB_PAD max(32,L1_CACHE_BYTES)
___pskb_trim  prototype  include/linux/skbuff.h  1733  extern int ___pskb_trim(struct sk_buff *skb,unsigned int len);
__skb_trim  function  include/linux/skbuff.h  1735  static inline void __skb_trim(struct sk_buff *skb,unsigned int len)
skb_trim  prototype  include/linux/skbuff.h  1745  extern void skb_trim(struct sk_buff *skb,unsigned int len);
__pskb_trim  function  include/linux/skbuff.h  1747  static inline int __pskb_trim(struct sk_buff *skb,unsigned int len)
pskb_trim  function  include/linux/skbuff.h  1755  static inline int pskb_trim(struct sk_buff *skb,unsigned int len)
pskb_trim_unique  function  include/linux/skbuff.h  1769  static inline void pskb_trim_unique(struct sk_buff *skb,unsigned int len)
skb_orphan  function  include/linux/skbuff.h  1783  static inline void skb_orphan(struct sk_buff *skb)
skb_orphan_frags  function  include/linux/skbuff.h  1800  static inline int skb_orphan_frags(struct sk_buff *skb,gfp_t gfp_mask)
skb_queue_purge  prototype  include/linux/skbuff.h  1815  extern void skb_queue_purge(struct sk_buff_head *list);
__skb_queue_purge  function  include/linux/skbuff.h  1816  static inline void __skb_queue_purge(struct sk_buff_head *list)
netdev_alloc_frag  prototype  include/linux/skbuff.h  1823  extern void *netdev_alloc_frag(unsigned int fragsz);
__netdev_alloc_skb  prototype  include/linux/skbuff.h  1827  extern struct sk_buff *__netdev_alloc_skb(struct net_device *dev,unsigned int length,gfp_t gfp_mask);
netdev_alloc_skb  function  include/linux/skbuff.h  1843  static inline struct sk_buff *netdev_alloc_skb(struct net_device *dev,unsigned int length)
__dev_alloc_skb  function  include/linux/skbuff.h  1850  static inline struct sk_buff *__dev_alloc_skb(unsigned int length,gfp_t gfp_mask)
dev_alloc_skb  function  include/linux/skbuff.h  1856  static inline struct sk_buff *dev_alloc_skb(unsigned int length)
__netdev_alloc_skb_ip_align  function  include/linux/skbuff.h  1863  static inline struct sk_buff *__netdev_alloc_skb_ip_align(struct net_device *dev,unsigned int length, gfp_t gfp)
netdev_alloc_skb_ip_align  function  include/linux/skbuff.h  1873  static inline struct sk_buff *netdev_alloc_skb_ip_align(struct net_device *dev,unsigned int length)
__skb_alloc_pages  function  include/linux/skbuff.h  1890  static inline struct page *__skb_alloc_pages(gfp_t gfp_mask,struct sk_buff *skb,unsigned int order)
__skb_alloc_page  function  include/linux/skbuff.h  1916  static inline struct page *__skb_alloc_page(gfp_t gfp_mask,struct sk_buff *skb)
skb_propagate_pfmemalloc  function  include/linux/skbuff.h  1927  static inline void skb_propagate_pfmemalloc(struct page *page,struct sk_buff *skb)
skb_frag_page  function  include/linux/skbuff.h  1939  static inline struct page *skb_frag_page(const skb_frag_t *frag)
__skb_frag_ref  function  include/linux/skbuff.h  1950  static inline void __skb_frag_ref(skb_frag_t *frag)
skb_frag_ref  function  include/linux/skbuff.h  1962  static inline void skb_frag_ref(struct sk_buff *skb,int f)
__skb_frag_unref  function  include/linux/skbuff.h  1973  static inline void __skb_frag_unref(skb_frag_t *frag)
skb_frag_unref  function  include/linux/skbuff.h  1985  static inline void skb_frag_unref(struct sk_buff *skb,int f)
skb_frag_address  function  include/linux/skbuff.h  1997  static inline void *skb_frag_address(const skb_frag_t *frag)
skb_frag_address_safe  function  include/linux/skbuff.h  2009  static inline void *skb_frag_address_safe(const skb_frag_t *frag)
__skb_frag_set_page  function  include/linux/skbuff.h  2025  static inline void __skb_frag_set_page(skb_frag_t *frag,struct page *page)
skb_frag_set_page  function  include/linux/skbuff.h  2039  static inline void skb_frag_set_page(struct sk_buff *skb,int f,struct page *page)
skb_frag_dma_map  function  include/linux/skbuff.h  2058  static inline dma_addr_t skb_frag_dma_map(struct device *dev,const skb_frag_t *frag,size_t offset, size_t size,enum dma_data_direction dir)
pskb_copy  function  include/linux/skbuff.h  2065  static inline struct sk_buff *pskb_copy(struct sk_buff *skb,gfp_t gfp_mask)
skb_clone_writable  function  include/linux/skbuff.h  2078  static inline int skb_clone_writable(const struct sk_buff *skb,unsigned int len)
__skb_cow  function  include/linux/skbuff.h  2085  static inline int __skb_cow(struct sk_buff *skb,unsigned int headroom,int cloned)
skb_cow  function  include/linux/skbuff.h  2110  static inline int skb_cow(struct sk_buff *skb,unsigned int headroom)
skb_cow_head  function  include/linux/skbuff.h  2125  static inline int skb_cow_head(struct sk_buff *skb,unsigned int headroom)
skb_padto  function  include/linux/skbuff.h  2141  static inline int skb_padto(struct sk_buff *skb,unsigned int len)
skb_add_data  function  include/linux/skbuff.h  2150  static inline int skb_add_data(struct sk_buff *skb,char __user *from, int copy)
skb_can_coalesce  function  include/linux/skbuff.h  2170  static inline bool skb_can_coalesce(struct sk_buff *skb,int i,const struct page *page, int off)
__skb_linearize  function  include/linux/skbuff.h  2181  static inline int __skb_linearize(struct sk_buff *skb)
skb_linearize  function  include/linux/skbuff.h  2193  static inline int skb_linearize(struct sk_buff *skb)
skb_linearize_cow  function  include/linux/skbuff.h  2205  static inline int skb_linearize_cow(struct sk_buff *skb)
skb_postpull_rcsum  function  include/linux/skbuff.h  2223  static inline void skb_postpull_rcsum(struct sk_buff *skb,const void *start, unsigned int len)
skb_pull_rcsum  prototype  include/linux/skbuff.h  2229  unsigned char *skb_pull_rcsum(struct sk_buff *skb,unsigned int len);
pskb_trim_rcsum  function  include/linux/skbuff.h  2240  static inline int pskb_trim_rcsum(struct sk_buff *skb,unsigned int len)
skb_queue_walk  macro  include/linux/skbuff.h  2252  #define skb_queue_walk(queue,skb) for (skb = (queue)->next; skb != (struct sk_buff *)(queue); skb = skb->next)
skb_queue_walk_safe  macro  include/linux/skbuff.h  2257  #define skb_queue_walk_safe(queue,skb,tmp) for (skb = (queue)->next, tmp = skb->next; skb != (struct sk_buff *)(queue); skb = tmp, tmp = skb->next)
skb_queue_walk_from  macro  include/linux/skbuff.h  2261  #define skb_queue_walk_from(queue,skb) for (; skb != (struct sk_buff *)(queue); skb = skb->next)
skb_queue_walk_from_safe  macro  include/linux/skbuff.h  2266  #define skb_queue_walk_from_safe(queue,skb,tmp) for (tmp = skb->next; skb != (struct sk_buff *)(queue); skb = tmp, tmp = skb->next)
skb_queue_reverse_walk  macro  include/linux/skbuff.h  2271  #define skb_queue_reverse_walk(queue,skb) for (skb = (queue)->prev; skb != (struct sk_buff *)(queue); skb = skb->prev)
skb_queue_reverse_walk_safe  macro  include/linux/skbuff.h  2276  #define skb_queue_reverse_walk_safe(queue,skb,tmp) for (skb = (queue)->prev, tmp = skb->prev; skb != (struct sk_buff *)(queue); skb = tmp, tmp = skb->prev)
skb_queue_reverse_walk_from_safe  macro  include/linux/skbuff.h  2281  #define skb_queue_reverse_walk_from_safe(queue,skb,tmp) for (tmp = skb->prev; skb != (struct sk_buff *)(queue); skb = tmp, tmp = skb->prev)
skb_has_frag_list  function  include/linux/skbuff.h  2283  static inline bool skb_has_frag_list(const struct sk_buff *skb)
skb_frag_list_init  function  include/linux/skbuff.h  2288  static inline void skb_frag_list_init(struct sk_buff *skb)
skb_frag_add_head  function  include/linux/skbuff.h  2293  static inline void skb_frag_add_head(struct sk_buff *skb,struct sk_buff *frag)
skb_walk_frags  macro  include/linux/skbuff.h  2300  #define skb_walk_frags(skb,iter) for (iter = skb_shinfo(skb)->frag_list; iter; iter = iter->next)
__skb_recv_datagram  prototype  include/linux/skbuff.h  2303  extern struct sk_buff *__skb_recv_datagram(struct sock *sk,unsigned flags,int *peeked, int *off, int *err);
skb_recv_datagram  prototype  include/linux/skbuff.h  2305  extern struct sk_buff *skb_recv_datagram(struct sock *sk,unsigned flags,int noblock, int *err);
datagram_poll  prototype  include/linux/skbuff.h  2307  extern unsigned int datagram_poll(struct file *file,struct socket *sock,struct poll_table_struct *wait);
skb_copy_datagram_iovec  prototype  include/linux/skbuff.h  2310  extern int skb_copy_datagram_iovec(const struct sk_buff *from,int offset, struct iovec *to,int size);
skb_copy_and_csum_datagram_iovec  prototype  include/linux/skbuff.h  2313  extern int skb_copy_and_csum_datagram_iovec(struct sk_buff *skb,int hlen,struct iovec *iov);
skb_copy_datagram_from_iovec  prototype  include/linux/skbuff.h  2318  extern int skb_copy_datagram_from_iovec(struct sk_buff *skb,int offset,const struct iovec *from,int from_offset,int len);
skb_copy_datagram_const_iovec  prototype  include/linux/skbuff.h  2323  extern int skb_copy_datagram_const_iovec(const struct sk_buff *from,int offset,const struct iovec *to,int to_offset,int size);
skb_free_datagram  prototype  include/linux/skbuff.h  2324  extern void skb_free_datagram(struct sock *sk,struct sk_buff *skb);
skb_free_datagram_locked  prototype  include/linux/skbuff.h  2326  extern void skb_free_datagram_locked(struct sock *sk,struct sk_buff *skb);
skb_kill_datagram  prototype  include/linux/skbuff.h  2328  extern int skb_kill_datagram(struct sock *sk,struct sk_buff *skb,unsigned int flags);
skb_checksum  prototype  include/linux/skbuff.h  2330  extern __wsum skb_checksum(const struct sk_buff *skb,int offset,int len, __wsum csum);
skb_copy_bits  prototype  include/linux/skbuff.h  2332  extern int skb_copy_bits(const struct sk_buff *skb,int offset,void *to, int len);
skb_store_bits  prototype  include/linux/skbuff.h  2334  extern int skb_store_bits(struct sk_buff *skb,int offset,const void *from, int len);
skb_copy_and_csum_bits  prototype  include/linux/skbuff.h  2337  extern __wsum skb_copy_and_csum_bits(const struct sk_buff *skb,int offset, u8 *to, int len,__wsum csum);
skb_splice_bits  prototype  include/linux/skbuff.h  2342  extern int skb_splice_bits(struct sk_buff *skb,unsigned int offset,struct pipe_inode_info *pipe,unsigned int len,unsigned int flags);
skb_copy_and_csum_dev  prototype  include/linux/skbuff.h  2343  extern void skb_copy_and_csum_dev(const struct sk_buff *skb,u8 *to);
skb_split  prototype  include/linux/skbuff.h  2345  extern void skb_split(struct sk_buff *skb,struct sk_buff *skb1, const u32 len);
skb_shift  prototype  include/linux/skbuff.h  2347  extern int skb_shift(struct sk_buff *tgt,struct sk_buff *skb,int shiftlen);
skb_segment  prototype  include/linux/skbuff.h  2350  extern struct sk_buff *skb_segment(struct sk_buff *skb,netdev_features_t features);
skb_header_pointer  function  include/linux/skbuff.h  2353  static inline void *skb_header_pointer(const struct sk_buff *skb,int offset,int len, void *buffer)
skb_copy_from_linear_data  function  include/linux/skbuff.h  2368  static inline void skb_copy_from_linear_data(const struct sk_buff *skb,void *to,const unsigned int len)
skb_copy_from_linear_data_offset  function  include/linux/skbuff.h  2375  static inline void skb_copy_from_linear_data_offset(const struct sk_buff *skb,const int offset, void *to,const unsigned int len)
skb_copy_to_linear_data  function  include/linux/skbuff.h  2382  static inline void skb_copy_to_linear_data(struct sk_buff *skb,const void *from,const unsigned int len)
skb_copy_to_linear_data_offset  function  include/linux/skbuff.h  2390  static inline void skb_copy_to_linear_data_offset(struct sk_buff *skb,const int offset,const void *from,const unsigned int len)
skb_init  prototype  include/linux/skbuff.h  2395  extern void skb_init(void);
skb_get_ktime  function  include/linux/skbuff.h  2397  static inline ktime_t skb_get_ktime(const struct sk_buff *skb)
skb_get_timestamp  function  include/linux/skbuff.h  2412  static inline void skb_get_timestamp(const struct sk_buff *skb,struct timeval *stamp)
skb_get_timestampns  function  include/linux/skbuff.h  2418  static inline void skb_get_timestampns(const struct sk_buff *skb,struct timespec *stamp)
__net_timestamp  function  include/linux/skbuff.h  2423  static inline void __net_timestamp(struct sk_buff *skb)
net_timedelta  function  include/linux/skbuff.h  2428  static inline ktime_t net_timedelta(ktime_t t)
net_invalid_timestamp  function  include/linux/skbuff.h  2433  static inline ktime_t net_invalid_timestamp(void)
skb_timestamping_init  prototype  include/linux/skbuff.h  2438  extern void skb_timestamping_init(void);
skb_clone_tx_timestamp  function  include/linux/skbuff.h  2447  static inline void skb_clone_tx_timestamp(struct sk_buff *skb)
skb_defer_rx_timestamp  function  include/linux/skbuff.h  2451  static inline bool skb_defer_rx_timestamp(struct sk_buff *skb)
skb_complete_tx_timestamp  prototype  include/linux/skbuff.h  2471  void skb_complete_tx_timestamp(struct sk_buff *skb,struct skb_shared_hwtstamps *hwtstamps);
skb_tstamp_tx  prototype  include/linux/skbuff.h  2485  extern void skb_tstamp_tx(struct sk_buff *orig_skb,struct skb_shared_hwtstamps *hwtstamps);
sw_tx_timestamp  function  include/linux/skbuff.h  2487  static inline void sw_tx_timestamp(struct sk_buff *skb)
skb_tx_timestamp  function  include/linux/skbuff.h  2502  static inline void skb_tx_timestamp(struct sk_buff *skb)
skb_complete_wifi_ack  prototype  include/linux/skbuff.h  2515  void skb_complete_wifi_ack(struct sk_buff *skb,bool acked);
__skb_checksum_complete_head  prototype  include/linux/skbuff.h  2517  extern __sum16 __skb_checksum_complete_head(struct sk_buff *skb,int len);
__skb_checksum_complete  prototype  include/linux/skbuff.h  2518  extern __sum16 __skb_checksum_complete(struct sk_buff *skb);
skb_csum_unnecessary  function  include/linux/skbuff.h  2520  static inline int skb_csum_unnecessary(const struct sk_buff *skb)
skb_checksum_complete  function  include/linux/skbuff.h  2541  static inline __sum16 skb_checksum_complete(struct sk_buff *skb)
nf_conntrack_destroy  prototype  include/linux/skbuff.h  2548  extern void nf_conntrack_destroy(struct nf_conntrack *nfct);
nf_conntrack_put  function  include/linux/skbuff.h  2549  static inline void nf_conntrack_put(struct nf_conntrack *nfct)
nf_conntrack_get  function  include/linux/skbuff.h  2554  static inline void nf_conntrack_get(struct nf_conntrack *nfct)
nf_conntrack_get_reasm  function  include/linux/skbuff.h  2561  static inline void nf_conntrack_get_reasm(struct sk_buff *skb)
nf_conntrack_put_reasm  function  include/linux/skbuff.h  2566  static inline void nf_conntrack_put_reasm(struct sk_buff *skb)
nf_bridge_put  function  include/linux/skbuff.h  2573  static inline void nf_bridge_put(struct nf_bridge_info *nf_bridge)
nf_bridge_get  function  include/linux/skbuff.h  2578  static inline void nf_bridge_get(struct nf_bridge_info *nf_bridge)
nf_reset  function  include/linux/skbuff.h  2584  static inline void nf_reset(struct sk_buff *skb)
nf_reset_trace  function  include/linux/skbuff.h  2600  static inline void nf_reset_trace(struct sk_buff *skb)
__nf_copy  function  include/linux/skbuff.h  2608  static inline void __nf_copy(struct sk_buff *dst,const struct sk_buff *src)
nf_copy  function  include/linux/skbuff.h  2625  static inline void nf_copy(struct sk_buff *dst,const struct sk_buff *src)
skb_copy_secmark  function  include/linux/skbuff.h  2650  static inline void skb_copy_secmark(struct sk_buff *to,const struct sk_buff *from)
skb_init_secmark  function  include/linux/skbuff.h  2653  static inline void skb_init_secmark(struct sk_buff *skb)
skb_set_queue_mapping  function  include/linux/skbuff.h  2657  static inline void skb_set_queue_mapping(struct sk_buff *skb,u16 queue_mapping)
skb_get_queue_mapping  function  include/linux/skbuff.h  2662  static inline u16 skb_get_queue_mapping(const struct sk_buff *skb)
skb_copy_queue_mapping  function  include/linux/skbuff.h  2667  static inline void skb_copy_queue_mapping(struct sk_buff *to,const struct sk_buff *from)
skb_record_rx_queue  function  include/linux/skbuff.h  2672  static inline void skb_record_rx_queue(struct sk_buff *skb,u16 rx_queue)
skb_get_rx_queue  function  include/linux/skbuff.h  2677  static inline u16 skb_get_rx_queue(const struct sk_buff *skb)
skb_rx_queue_recorded  function  include/linux/skbuff.h  2682  static inline bool skb_rx_queue_recorded(const struct sk_buff *skb)
__skb_tx_hash  prototype  include/linux/skbuff.h  2689  extern u16 __skb_tx_hash(const struct net_device *dev,const struct sk_buff *skb,unsigned int num_tx_queues);
skb_sec_path  function  include/linux/skbuff.h  2697  static inline struct sec_path *skb_sec_path(struct sk_buff *skb)
skb_is_gso  function  include/linux/skbuff.h  2703  static inline bool skb_is_gso(const struct sk_buff *skb)
skb_is_gso_v6  function  include/linux/skbuff.h  2708  static inline bool skb_is_gso_v6(const struct sk_buff *skb)
__skb_warn_lro_forwarding  prototype  include/linux/skbuff.h  2713  extern void __skb_warn_lro_forwarding(const struct sk_buff *skb);
skb_warn_if_lro  function  include/linux/skbuff.h  2715  static inline bool skb_warn_if_lro(const struct sk_buff *skb)
skb_forward_csum  function  include/linux/skbuff.h  2729  static inline void skb_forward_csum(struct sk_buff *skb)
skb_checksum_none_assert  function  include/linux/skbuff.h  2744  static inline void skb_checksum_none_assert(const struct sk_buff *skb)
skb_partial_csum_set  prototype  include/linux/skbuff.h  2751  bool skb_partial_csum_set(struct sk_buff *skb,u16 start,u16 off);
skb_head_is_locked  function  include/linux/skbuff.h  2762  static inline bool skb_head_is_locked(const struct sk_buff *skb)
__LINUX_SPINLOCK_H  macro  include/linux/spinlock.h  2  #define __LINUX_SPINLOCK_H
LOCK_SECTION_NAME  macro  include/linux/spinlock.h  64  #define LOCK_SECTION_NAME ".text..lock."KBUILD_BASENAME
LOCK_SECTION_START  macro  include/linux/spinlock.h  71  #define LOCK_SECTION_START(extra) ".subsection 1\n\t" extra ".ifndef " LOCK_SECTION_NAME "\n\t" LOCK_SECTION_NAME ":\n\t" ".endif\n"
LOCK_SECTION_END  macro  include/linux/spinlock.h  74  #define LOCK_SECTION_END ".previous\n\t"
__lockfunc  macro  include/linux/spinlock.h  76  #define __lockfunc __attribute__((section(".spinlock.text")))
__raw_spin_lock_init  prototype  include/linux/spinlock.h  94  extern void __raw_spin_lock_init(raw_spinlock_t *lock,const char *name,struct lock_class_key *key);
raw_spin_lock_init  macro  include/linux/spinlock.h  104  # define raw_spin_lock_init(lock) do { *(lock) = __RAW_SPIN_LOCK_UNLOCKED(lock); } while (0)
raw_spin_is_locked  macro  include/linux/spinlock.h  107  #define raw_spin_is_locked(lock) arch_spin_is_locked(&(lock)->raw_lock)
raw_spin_is_contended  macro  include/linux/spinlock.h  116  #define raw_spin_is_contended(lock) (((void)(lock),0))
smp_mb__after_lock  function  arch/x86/include/asm/spinlock.h  237  static inline void smp_mb__after_lock(void) { }
raw_spin_unlock_wait  macro  include/linux/spinlock.h  129  #define raw_spin_unlock_wait(lock) arch_spin_unlock_wait(&(lock)->raw_lock)
do_raw_spin_lock_flags  macro  include/linux/spinlock.h  133  #define do_raw_spin_lock_flags(lock,flags) do_raw_spin_lock(lock)
do_raw_spin_trylock  function  include/linux/spinlock.h  150  static inline int do_raw_spin_trylock(raw_spinlock_t *lock)
__acquires  function  include/linux/srcu.h  234  static inline int srcu_read_lock(struct srcu_struct *sp) __acquires(sp)
__releases  function  include/linux/srcu.h  252  __releases(sp)
raw_spin_trylock  macro  include/linux/spinlock.h  168  #define raw_spin_trylock(lock) __cond_lock(lock,_raw_spin_trylock(lock))
raw_spin_lock  macro  include/linux/spinlock.h  170  #define raw_spin_lock(lock) _raw_spin_lock(lock)
raw_spin_lock_nested  macro  include/linux/spinlock.h  182  # define raw_spin_lock_nested(lock,subclass) _raw_spin_lock(lock)
raw_spin_lock_nest_lock  macro  include/linux/spinlock.h  183  # define raw_spin_lock_nest_lock(lock,nest_lock) _raw_spin_lock(lock)
raw_spin_lock_irqsave  macro  include/linux/spinlock.h  214  #define raw_spin_lock_irqsave(lock,flags) do { typecheck(unsigned long, flags); _raw_spin_lock_irqsave(lock, flags); } while (0)
raw_spin_lock_irqsave_nested  macro  include/linux/spinlock.h  217  #define raw_spin_lock_irqsave_nested(lock,flags,subclass) raw_spin_lock_irqsave(lock, flags)
raw_spin_lock_irq  macro  include/linux/spinlock.h  221  #define raw_spin_lock_irq(lock) _raw_spin_lock_irq(lock)
raw_spin_lock_bh  macro  include/linux/spinlock.h  222  #define raw_spin_lock_bh(lock) _raw_spin_lock_bh(lock)
raw_spin_unlock  macro  include/linux/spinlock.h  223  #define raw_spin_unlock(lock) _raw_spin_unlock(lock)
raw_spin_unlock_irq  macro  include/linux/spinlock.h  224  #define raw_spin_unlock_irq(lock) _raw_spin_unlock_irq(lock)
raw_spin_unlock_irqrestore  macro  include/linux/spinlock.h  230  #define raw_spin_unlock_irqrestore(lock,flags) do { typecheck(unsigned long, flags); _raw_spin_unlock_irqrestore(lock, flags); } while (0)
raw_spin_unlock_bh  macro  include/linux/spinlock.h  231  #define raw_spin_unlock_bh(lock) _raw_spin_unlock_bh(lock)
raw_spin_trylock_bh  macro  include/linux/spinlock.h  234  #define raw_spin_trylock_bh(lock) __cond_lock(lock, _raw_spin_trylock_bh(lock))
raw_spin_trylock_irq  macro  include/linux/spinlock.h  241  #define raw_spin_trylock_irq(lock) ({ local_irq_disable(); raw_spin_trylock(lock) ? 1 : ({ local_irq_enable(); 0;  }); })
raw_spin_trylock_irqsave  macro  include/linux/spinlock.h  248  #define raw_spin_trylock_irqsave(lock,flags) ({ local_irq_save(flags); raw_spin_trylock(lock) ? 1 : ({ local_irq_restore(flags); 0; }); })
raw_spin_can_lock  macro  include/linux/spinlock.h  254  #define raw_spin_can_lock(lock) (!raw_spin_is_locked(lock))
spinlock_check  function  include/linux/spinlock.h  272  static inline raw_spinlock_t *spinlock_check(spinlock_t *lock)
spin_lock_init  macro  include/linux/spinlock.h  281  #define spin_lock_init(_lock) do { spinlock_check(_lock); raw_spin_lock_init(&(_lock)->rlock); } while (0)
spin_lock  function  include/linux/spinlock.h  283  static inline void spin_lock(spinlock_t *lock)
spin_lock_bh  function  include/linux/spinlock.h  288  static inline void spin_lock_bh(spinlock_t *lock)
spin_trylock  function  include/linux/spinlock.h  293  static inline int spin_trylock(spinlock_t *lock)
spin_lock_nested  macro  include/linux/spinlock.h  301  #define spin_lock_nested(lock,subclass) do { raw_spin_lock_nested(spinlock_check(lock), subclass); } while (0)
spin_lock_nest_lock  macro  include/linux/spinlock.h  306  #define spin_lock_nest_lock(lock,nest_lock) do { raw_spin_lock_nest_lock(spinlock_check(lock), nest_lock); } while (0)
spin_lock_irq  function  include/linux/spinlock.h  308  static inline void spin_lock_irq(spinlock_t *lock)
spin_lock_irqsave  macro  include/linux/spinlock.h  316  #define spin_lock_irqsave(lock,flags) do { raw_spin_lock_irqsave(spinlock_check(lock), flags); } while (0)
spin_lock_irqsave_nested  macro  include/linux/spinlock.h  321  #define spin_lock_irqsave_nested(lock,flags,subclass) do { raw_spin_lock_irqsave_nested(spinlock_check(lock), flags, subclass); } while (0)
spin_unlock  function  include/linux/spinlock.h  323  static inline void spin_unlock(spinlock_t *lock)
spin_unlock_bh  function  include/linux/spinlock.h  328  static inline void spin_unlock_bh(spinlock_t *lock)
spin_unlock_irq  function  include/linux/spinlock.h  333  static inline void spin_unlock_irq(spinlock_t *lock)
spin_unlock_irqrestore  function  include/linux/spinlock.h  338  static inline void spin_unlock_irqrestore(spinlock_t *lock,unsigned long flags)
spin_trylock_bh  function  include/linux/spinlock.h  343  static inline int spin_trylock_bh(spinlock_t *lock)
spin_trylock_irq  function  include/linux/spinlock.h  348  static inline int spin_trylock_irq(spinlock_t *lock)
spin_trylock_irqsave  macro  include/linux/spinlock.h  356  #define spin_trylock_irqsave(lock,flags) ({ raw_spin_trylock_irqsave(spinlock_check(lock), flags); })
spin_unlock_wait  function  include/linux/spinlock.h  358  static inline void spin_unlock_wait(spinlock_t *lock)
spin_is_locked  function  include/linux/spinlock.h  363  static inline int spin_is_locked(spinlock_t *lock)
spin_is_contended  function  include/linux/spinlock.h  368  static inline int spin_is_contended(spinlock_t *lock)
spin_can_lock  function  include/linux/spinlock.h  373  static inline int spin_can_lock(spinlock_t *lock)
assert_spin_locked  macro  include/linux/spinlock.h  378  #define assert_spin_locked(lock) assert_raw_spin_locked(&(lock)->rlock)
_atomic_dec_and_lock  prototype  include/linux/spinlock.h  393  extern int _atomic_dec_and_lock(atomic_t *atomic,spinlock_t *lock);
atomic_dec_and_lock  macro  include/linux/spinlock.h  395  #define atomic_dec_and_lock(atomic,lock) __cond_lock(lock, _atomic_dec_and_lock(atomic, lock))
_LINUX_MODULE_PARAMS_H  macro  include/linux/moduleparam.h  2  #define _LINUX_MODULE_PARAMS_H
MODULE_PARAM_PREFIX  macro  include/linux/moduleparam.h  13  #define MODULE_PARAM_PREFIX KBUILD_MODNAME "."
MAX_PARAM_PREFIX_LEN  macro  include/linux/moduleparam.h  17  #define MAX_PARAM_PREFIX_LEN (64 - sizeof(unsigned long))
__MODULE_INFO  macro  include/linux/moduleparam.h  27  #define __MODULE_INFO(tag,name,info) struct __UNIQUE_ID(name) {}
__MODULE_PARM_TYPE  macro  include/linux/moduleparam.h  30  #define __MODULE_PARM_TYPE(name,_type) __MODULE_INFO(parmtype, name##type, #name ":" _type)
MODULE_PARM_DESC  macro  include/linux/moduleparam.h  35  #define MODULE_PARM_DESC(_parm,desc) __MODULE_INFO(parm, _parm, #_parm ":" desc)
kernel_param_ops  struct  include/linux/moduleparam.h  39  struct kernel_param_ops {
kernel_param  struct  include/linux/moduleparam.h  48  struct kernel_param {
kparam_string  struct  include/linux/moduleparam.h  61  struct kparam_string {
kparam_array  struct  include/linux/moduleparam.h  67  struct kparam_array
module_param  macro  include/linux/moduleparam.h  102  #define module_param(name,type,perm) module_param_named(name, name, type, perm)
module_param_named  macro  include/linux/moduleparam.h  118  #define module_param_named(name,value,type,perm) param_check_##type(name, &(value)); module_param_cb(name, &param_ops_##type, &value, perm); __MODULE_PARM_TYPE(name, #type)
module_param_cb  macro  include/linux/moduleparam.h  129  #define module_param_cb(name,ops,arg,perm) __module_param_call(MODULE_PARAM_PREFIX, name, ops, arg, perm, -1)
__level_param_cb  macro  include/linux/moduleparam.h  141  #define __level_param_cb(name,ops,arg,perm,level) __module_param_call(MODULE_PARAM_PREFIX, name, ops, arg, perm, level)
core_param_cb  macro  include/linux/moduleparam.h  144  #define core_param_cb(name,ops,arg,perm) __level_param_cb(name, ops, arg, perm, 1)
postcore_param_cb  macro  include/linux/moduleparam.h  147  #define postcore_param_cb(name,ops,arg,perm) __level_param_cb(name, ops, arg, perm, 2)
arch_param_cb  macro  include/linux/moduleparam.h  150  #define arch_param_cb(name,ops,arg,perm) __level_param_cb(name, ops, arg, perm, 3)
subsys_param_cb  macro  include/linux/moduleparam.h  153  #define subsys_param_cb(name,ops,arg,perm) __level_param_cb(name, ops, arg, perm, 4)
fs_param_cb  macro  include/linux/moduleparam.h  156  #define fs_param_cb(name,ops,arg,perm) __level_param_cb(name, ops, arg, perm, 5)
device_param_cb  macro  include/linux/moduleparam.h  159  #define device_param_cb(name,ops,arg,perm) __level_param_cb(name, ops, arg, perm, 6)
late_param_cb  macro  include/linux/moduleparam.h  162  #define late_param_cb(name,ops,arg,perm) __level_param_cb(name, ops, arg, perm, 7)
__moduleparam_const  macro  include/linux/moduleparam.h  171  #define __moduleparam_const const
__module_param_call  macro  include/linux/moduleparam.h  185  #define __module_param_call(prefix,name,ops,arg,perm,level) /* Default value instead of permissions? */ static int __param_perm_check_##name __attribute__((unused)) = BUILD_BUG_ON_ZERO((perm) < 0 || (perm) > 0777 || ((perm) & 2)) + BUILD_BUG_ON_ZERO(sizeof(""prefix) > MAX_PARAM_PREFIX_LEN); static const char __param_str_##name[] = prefix #name; static struct kernel_param __moduleparam_const __param_##name __used __attribute__ ((unused,__section__ ("__param"),aligned(sizeof(void *)))) = { __param_str_##name, ops, perm, level, { arg } }
module_param_call  macro  include/linux/moduleparam.h  193  #define module_param_call(name,set,get,arg,perm) static struct kernel_param_ops __param_ops_##name = { (void *)set, (void *)get }; __module_param_call(MODULE_PARAM_PREFIX, name, &__param_ops_##name, arg, (perm) + sizeof(__check_old_set_param(set))*0, -1)
__check_old_set_param  function  include/linux/moduleparam.h  197  __check_old_set_param(int (*oldset)(const char *,struct kernel_param *))
kparam_block_sysfs_write  macro  include/linux/moduleparam.h  212  #define kparam_block_sysfs_write(name) do { BUG_ON(!(__param_##name.perm & 0222)); __kernel_param_lock(); } while (0)
kparam_unblock_sysfs_write  macro  include/linux/moduleparam.h  222  #define kparam_unblock_sysfs_write(name) do { BUG_ON(!(__param_##name.perm & 0222)); __kernel_param_unlock(); } while (0)
kparam_block_sysfs_read  macro  include/linux/moduleparam.h  234  #define kparam_block_sysfs_read(name) do { BUG_ON(!(__param_##name.perm & 0444)); __kernel_param_lock(); } while (0)
kparam_unblock_sysfs_read  macro  include/linux/moduleparam.h  244  #define kparam_unblock_sysfs_read(name) do { BUG_ON(!(__param_##name.perm & 0444)); __kernel_param_unlock(); } while (0)
__kernel_param_lock  function  include/linux/moduleparam.h  250  static inline void __kernel_param_lock(void)
__kernel_param_unlock  function  include/linux/moduleparam.h  253  static inline void __kernel_param_unlock(void)
core_param  macro  include/linux/moduleparam.h  273  #define core_param(name,var,type,perm) param_check_##type(name, &(var)); __module_param_call("", name, &param_ops_##type, &var, perm, -1)
module_param_string  macro  include/linux/moduleparam.h  292  #define module_param_string(name,string,len,perm) static const struct kparam_string __param_string_##name = { len, string }; __module_param_call(MODULE_PARAM_PREFIX, name, &param_ops_string, .str = &__param_string_##name, perm, -1); __MODULE_PARM_TYPE(name, "string")
parameq  prototype  include/linux/moduleparam.h  302  extern bool parameq(const char *name1,const char *name2);
parameqn  prototype  include/linux/moduleparam.h  312  extern bool parameqn(const char *name1,const char *name2,size_t n);
parse_args  prototype  include/linux/moduleparam.h  322  extern int parse_args(const char *name,char *args,const struct kernel_param *params,unsigned num,s16 level_min,s16 level_max,int (*unknown)(char *param, char *val,const char *doing));
destroy_params  function  include/linux/moduleparam.h  329  static inline void destroy_params(const struct kernel_param *params,unsigned num)
__param_check  macro  include/linux/moduleparam.h  338  #define __param_check(name,p,type) static inline type *__check_##name(void) { return(p); }
param_set_byte  prototype  include/linux/moduleparam.h  341  extern int param_set_byte(const char *val,const struct kernel_param *kp);
param_get_byte  prototype  include/linux/moduleparam.h  342  extern int param_get_byte(char *buffer,const struct kernel_param *kp);
param_check_byte  macro  include/linux/moduleparam.h  343  #define param_check_byte(name,p) __param_check(name,p,unsigned char)
param_set_short  prototype  include/linux/moduleparam.h  346  extern int param_set_short(const char *val,const struct kernel_param *kp);
param_get_short  prototype  include/linux/moduleparam.h  347  extern int param_get_short(char *buffer,const struct kernel_param *kp);
param_check_short  macro  include/linux/moduleparam.h  348  #define param_check_short(name,p) __param_check(name,p,short)
param_set_ushort  prototype  include/linux/moduleparam.h  351  extern int param_set_ushort(const char *val,const struct kernel_param *kp);
param_get_ushort  prototype  include/linux/moduleparam.h  352  extern int param_get_ushort(char *buffer,const struct kernel_param *kp);
param_check_ushort  macro  include/linux/moduleparam.h  353  #define param_check_ushort(name,p) __param_check(name,p,unsigned short)
param_set_int  prototype  include/linux/moduleparam.h  356  extern int param_set_int(const char *val,const struct kernel_param *kp);
param_get_int  prototype  include/linux/moduleparam.h  357  extern int param_get_int(char *buffer,const struct kernel_param *kp);
param_check_int  macro  include/linux/moduleparam.h  358  #define param_check_int(name,p) __param_check(name,p,int)
param_set_uint  prototype  include/linux/moduleparam.h  361  extern int param_set_uint(const char *val,const struct kernel_param *kp);
param_get_uint  prototype  include/linux/moduleparam.h  362  extern int param_get_uint(char *buffer,const struct kernel_param *kp);
param_check_uint  macro  include/linux/moduleparam.h  363  #define param_check_uint(name,p) __param_check(name,p,unsigned int)
param_set_long  prototype  include/linux/moduleparam.h  366  extern int param_set_long(const char *val,const struct kernel_param *kp);
param_get_long  prototype  include/linux/moduleparam.h  367  extern int param_get_long(char *buffer,const struct kernel_param *kp);
param_check_long  macro  include/linux/moduleparam.h  368  #define param_check_long(name,p) __param_check(name,p,long)
param_set_ulong  prototype  include/linux/moduleparam.h  371  extern int param_set_ulong(const char *val,const struct kernel_param *kp);
param_get_ulong  prototype  include/linux/moduleparam.h  372  extern int param_get_ulong(char *buffer,const struct kernel_param *kp);
param_check_ulong  macro  include/linux/moduleparam.h  373  #define param_check_ulong(name,p) __param_check(name,p,unsigned long)
param_set_charp  prototype  include/linux/moduleparam.h  376  extern int param_set_charp(const char *val,const struct kernel_param *kp);
param_get_charp  prototype  include/linux/moduleparam.h  377  extern int param_get_charp(char *buffer,const struct kernel_param *kp);
param_check_charp  macro  include/linux/moduleparam.h  378  #define param_check_charp(name,p) __param_check(name,p,char *)
param_set_bool  prototype  include/linux/moduleparam.h  382  extern int param_set_bool(const char *val,const struct kernel_param *kp);
param_get_bool  prototype  include/linux/moduleparam.h  383  extern int param_get_bool(char *buffer,const struct kernel_param *kp);
param_check_bool  macro  include/linux/moduleparam.h  384  #define param_check_bool(name,p) __param_check(name,p,bool)
param_set_invbool  prototype  include/linux/moduleparam.h  387  extern int param_set_invbool(const char *val,const struct kernel_param *kp);
param_get_invbool  prototype  include/linux/moduleparam.h  388  extern int param_get_invbool(char *buffer,const struct kernel_param *kp);
param_check_invbool  macro  include/linux/moduleparam.h  389  #define param_check_invbool(name,p) __param_check(name,p,bool)
param_set_bint  prototype  include/linux/moduleparam.h  393  extern int param_set_bint(const char *val,const struct kernel_param *kp);
param_get_bint  macro  include/linux/moduleparam.h  394  #define param_get_bint param_get_int
param_check_bint  macro  include/linux/moduleparam.h  395  #define param_check_bint param_check_int
module_param_array  macro  include/linux/moduleparam.h  411  #define module_param_array(name,type,nump,perm) module_param_array_named(name, name, type, nump, perm)
module_param_array_named  macro  include/linux/moduleparam.h  434  #define module_param_array_named(name,array,type,nump,perm) param_check_##type(name, &(array)[0]); static const struct kparam_array __param_arr_##name = { .max = ARRAY_SIZE(array), .num = nump, .ops = &param_ops_##type, .elemsize = sizeof(array[0]), .elem = array }; __module_param_call(MODULE_PARAM_PREFIX, name, &param_array_ops, .arr = &__param_arr_##name, perm, -1); __MODULE_PARM_TYPE(name, "array of " #type)
param_set_copystring  prototype  include/linux/moduleparam.h  439  extern int param_set_copystring(const char *val,const struct kernel_param *);
param_get_string  prototype  include/linux/moduleparam.h  440  extern int param_get_string(char *buffer,const struct kernel_param *kp);
module_param_sysfs_setup  function  include/linux/moduleparam.h  455  static inline int module_param_sysfs_setup(struct module *mod,const struct kernel_param *kparam,unsigned int num_params)
module_param_sysfs_remove  function  include/linux/moduleparam.h  460  static inline void module_param_sysfs_remove(struct module *mod)
_LINUX_BITOPS_H  macro  include/linux/bitops.h  2  #define _LINUX_BITOPS_H
BIT  macro  include/linux/bitops.h  6  #define BIT(nr) (1UL << (nr))
BIT_MASK  macro  include/linux/bitops.h  7  #define BIT_MASK(nr) (1UL << ((nr) % BITS_PER_LONG))
BIT_WORD  macro  include/linux/bitops.h  8  #define BIT_WORD(nr) ((nr) / BITS_PER_LONG)
BITS_PER_BYTE  macro  include/linux/bitops.h  9  #define BITS_PER_BYTE 8
BITS_TO_LONGS  macro  include/linux/bitops.h  10  #define BITS_TO_LONGS(nr) DIV_ROUND_UP(nr,BITS_PER_BYTE * sizeof(long))
__sw_hweight8  prototype  include/linux/bitops.h  13  extern unsigned int __sw_hweight8(unsigned int w);
__sw_hweight16  prototype  include/linux/bitops.h  14  extern unsigned int __sw_hweight16(unsigned int w);
__sw_hweight32  prototype  include/linux/bitops.h  15  extern unsigned int __sw_hweight32(unsigned int w);
__sw_hweight64  prototype  include/linux/bitops.h  16  extern unsigned long __sw_hweight64(__u64 w);
for_each_set_bit  macro  include/linux/bitops.h  27  #define for_each_set_bit(bit,addr,size) for ((bit) = find_first_bit((addr), (size)); (bit) < (size); (bit) = find_next_bit((addr), (size), (bit) + 1))
for_each_set_bit_from  macro  include/linux/bitops.h  33  #define for_each_set_bit_from(bit,addr,size) for ((bit) = find_next_bit((addr), (size), (bit)); (bit) < (size); (bit) = find_next_bit((addr), (size), (bit) + 1))
for_each_clear_bit  macro  include/linux/bitops.h  38  #define for_each_clear_bit(bit,addr,size) for ((bit) = find_first_zero_bit((addr), (size)); (bit) < (size); (bit) = find_next_zero_bit((addr), (size), (bit) + 1))
for_each_clear_bit_from  macro  include/linux/bitops.h  44  #define for_each_clear_bit_from(bit,addr,size) for ((bit) = find_next_zero_bit((addr), (size), (bit)); (bit) < (size); (bit) = find_next_zero_bit((addr), (size), (bit) + 1))
get_bitmask_order  function  include/linux/bitops.h  46  static __inline__ int get_bitmask_order(unsigned int count)
get_count_order  function  include/linux/bitops.h  54  static __inline__ int get_count_order(unsigned int count)
hweight_long  function  include/linux/bitops.h  64  static inline unsigned long hweight_long(unsigned long w)
rol64  function  include/linux/bitops.h  74  static inline __u64 rol64(__u64 word,unsigned int shift)
ror64  function  include/linux/bitops.h  84  static inline __u64 ror64(__u64 word,unsigned int shift)
rol32  function  include/linux/bitops.h  94  static inline __u32 rol32(__u32 word,unsigned int shift)
ror32  function  include/linux/bitops.h  104  static inline __u32 ror32(__u32 word,unsigned int shift)
rol16  function  include/linux/bitops.h  114  static inline __u16 rol16(__u16 word,unsigned int shift)
ror16  function  include/linux/bitops.h  124  static inline __u16 ror16(__u16 word,unsigned int shift)
rol8  function  include/linux/bitops.h  134  static inline __u8 rol8(__u8 word,unsigned int shift)
ror8  function  include/linux/bitops.h  144  static inline __u8 ror8(__u8 word,unsigned int shift)
sign_extend32  function  include/linux/bitops.h  154  static inline __s32 sign_extend32(__u32 value,int index)
fls_long  function  include/linux/bitops.h  160  static inline unsigned fls_long(unsigned long l)
__ffs64  function  include/linux/bitops.h  175  static inline unsigned long __ffs64(u64 word)
find_last_bit  prototype  include/linux/bitops.h  197  extern unsigned long find_last_bit(const unsigned long *addr,unsigned long size);
_LINUX_IO_H  macro  include/linux/io.h  19  #define _LINUX_IO_H
__iowrite32_copy  prototype  include/linux/io.h  27  void __iowrite32_copy(void __iomem *to,const void *from,size_t count);
__iowrite64_copy  prototype  include/linux/io.h  28  void __iowrite64_copy(void __iomem *to,const void *from,size_t count);
ioremap_page_range  function  include/linux/io.h  35  static inline int ioremap_page_range(unsigned long addr,unsigned long end,phys_addr_t phys_addr, pgprot_t prot)
devm_ioport_map  function  include/linux/io.h  51  static inline void __iomem *devm_ioport_map(struct device *dev,unsigned long port,unsigned int nr)
devm_ioport_unmap  function  include/linux/io.h  56  static inline void devm_ioport_unmap(struct device *dev,void __iomem *addr)
devm_ioremap  prototype  include/linux/io.h  62  void __iomem *devm_ioremap(struct device *dev,resource_size_t offset,unsigned long size);
devm_ioremap_nocache  prototype  include/linux/io.h  64  void __iomem *devm_ioremap_nocache(struct device *dev,resource_size_t offset,unsigned long size);
devm_iounmap  prototype  include/linux/io.h  65  void devm_iounmap(struct device *dev,void __iomem *addr);
check_signature  prototype  include/linux/io.h  67  int check_signature(const volatile void __iomem *io_addr,const unsigned char *signature, int length);
devm_ioremap_release  prototype  include/linux/io.h  68  void devm_ioremap_release(struct device *dev,void *res);
arch_has_dev_port  macro  include/linux/io.h  76  #define arch_has_dev_port() (1)
__LINUX_UACCESS_H__  macro  include/linux/uaccess.h  2  #define __LINUX_UACCESS_H__
pagefault_disable  function  include/linux/uaccess.h  16  static inline void pagefault_disable(void)
pagefault_enable  function  include/linux/uaccess.h  26  static inline void pagefault_enable(void)
__copy_from_user_inatomic_nocache  function  arch/x86/include/asm/uaccess_64.h  244  __copy_from_user_inatomic_nocache(void *dst,const void __user *src,unsigned size)
__copy_from_user_nocache  function  arch/x86/include/asm/uaccess_64.h  236  __copy_from_user_nocache(void *dst,const void __user *src,unsigned size)
probe_kernel_address  macro  include/linux/uaccess.h  85  #define probe_kernel_address(addr,retval) ({ long ret; mm_segment_t old_fs = get_fs(); set_fs(KERNEL_DS); pagefault_disable(); ret = __copy_from_user_inatomic(&(retval), (__force typeof(retval) __user *)(addr), sizeof(retval)); pagefault_enable(); set_fs(old_fs); ret; })
probe_kernel_read  prototype  include/linux/uaccess.h  96  extern long probe_kernel_read(void *dst,const void *src,size_t size);
__probe_kernel_read  prototype  include/linux/uaccess.h  97  extern long __probe_kernel_read(void *dst,const void *src,size_t size);
probe_kernel_write  prototype  include/linux/uaccess.h  108  extern long notrace probe_kernel_write(void *dst,const void *src,size_t size);
__probe_kernel_write  prototype  include/linux/uaccess.h  109  extern long notrace __probe_kernel_write(void *dst,const void *src,size_t size);
_ASM_X86_DMA_H  macro  arch/x86/include/asm/dma.h  9  #define _ASM_X86_DMA_H
dma_outb  macro  arch/x86/include/asm/dma.h  17  #define dma_outb outb
dma_inb  macro  arch/x86/include/asm/dma.h  20  #define dma_inb inb
MAX_DMA_CHANNELS  macro  arch/x86/include/asm/dma.h  70  #define MAX_DMA_CHANNELS 8
MAX_DMA_PFN  macro  arch/x86/include/asm/dma.h  73  #define MAX_DMA_PFN ((16 * 1024 * 1024) >> PAGE_SHIFT)
MAX_DMA32_PFN  macro  arch/x86/include/asm/dma.h  76  #define MAX_DMA32_PFN ((4UL * 1024 * 1024 * 1024) >> PAGE_SHIFT)
MAX_DMA_ADDRESS  macro  arch/x86/include/asm/dma.h  83  #define MAX_DMA_ADDRESS ((unsigned long)__va(MAX_DMA_PFN << PAGE_SHIFT))
IO_DMA1_BASE  macro  arch/x86/include/asm/dma.h  87  #define IO_DMA1_BASE 0x00
IO_DMA2_BASE  macro  arch/x86/include/asm/dma.h  88  #define IO_DMA2_BASE 0xC0
DMA1_CMD_REG  macro  arch/x86/include/asm/dma.h  91  #define DMA1_CMD_REG 0x08
DMA1_STAT_REG  macro  arch/x86/include/asm/dma.h  92  #define DMA1_STAT_REG 0x08
DMA1_REQ_REG  macro  arch/x86/include/asm/dma.h  93  #define DMA1_REQ_REG 0x09
DMA1_MASK_REG  macro  arch/x86/include/asm/dma.h  94  #define DMA1_MASK_REG 0x0A
DMA1_MODE_REG  macro  arch/x86/include/asm/dma.h  95  #define DMA1_MODE_REG 0x0B
DMA1_CLEAR_FF_REG  macro  arch/x86/include/asm/dma.h  96  #define DMA1_CLEAR_FF_REG 0x0C
DMA1_TEMP_REG  macro  arch/x86/include/asm/dma.h  97  #define DMA1_TEMP_REG 0x0D
DMA1_RESET_REG  macro  arch/x86/include/asm/dma.h  98  #define DMA1_RESET_REG 0x0D
DMA1_CLR_MASK_REG  macro  arch/x86/include/asm/dma.h  99  #define DMA1_CLR_MASK_REG 0x0E
DMA1_MASK_ALL_REG  macro  arch/x86/include/asm/dma.h  100  #define DMA1_MASK_ALL_REG 0x0F
DMA2_CMD_REG  macro  arch/x86/include/asm/dma.h  102  #define DMA2_CMD_REG 0xD0
DMA2_STAT_REG  macro  arch/x86/include/asm/dma.h  103  #define DMA2_STAT_REG 0xD0
DMA2_REQ_REG  macro  arch/x86/include/asm/dma.h  104  #define DMA2_REQ_REG 0xD2
DMA2_MASK_REG  macro  arch/x86/include/asm/dma.h  105  #define DMA2_MASK_REG 0xD4
DMA2_MODE_REG  macro  arch/x86/include/asm/dma.h  106  #define DMA2_MODE_REG 0xD6
DMA2_CLEAR_FF_REG  macro  arch/x86/include/asm/dma.h  107  #define DMA2_CLEAR_FF_REG 0xD8
DMA2_TEMP_REG  macro  arch/x86/include/asm/dma.h  108  #define DMA2_TEMP_REG 0xDA
DMA2_RESET_REG  macro  arch/x86/include/asm/dma.h  109  #define DMA2_RESET_REG 0xDA
DMA2_CLR_MASK_REG  macro  arch/x86/include/asm/dma.h  110  #define DMA2_CLR_MASK_REG 0xDC
DMA2_MASK_ALL_REG  macro  arch/x86/include/asm/dma.h  111  #define DMA2_MASK_ALL_REG 0xDE
DMA_ADDR_0  macro  arch/x86/include/asm/dma.h  113  #define DMA_ADDR_0 0x00
DMA_ADDR_1  macro  arch/x86/include/asm/dma.h  114  #define DMA_ADDR_1 0x02
DMA_ADDR_2  macro  arch/x86/include/asm/dma.h  115  #define DMA_ADDR_2 0x04
DMA_ADDR_3  macro  arch/x86/include/asm/dma.h  116  #define DMA_ADDR_3 0x06
DMA_ADDR_4  macro  arch/x86/include/asm/dma.h  117  #define DMA_ADDR_4 0xC0
DMA_ADDR_5  macro  arch/x86/include/asm/dma.h  118  #define DMA_ADDR_5 0xC4
DMA_ADDR_6  macro  arch/x86/include/asm/dma.h  119  #define DMA_ADDR_6 0xC8
DMA_ADDR_7  macro  arch/x86/include/asm/dma.h  120  #define DMA_ADDR_7 0xCC
DMA_CNT_0  macro  arch/x86/include/asm/dma.h  122  #define DMA_CNT_0 0x01
DMA_CNT_1  macro  arch/x86/include/asm/dma.h  123  #define DMA_CNT_1 0x03
DMA_CNT_2  macro  arch/x86/include/asm/dma.h  124  #define DMA_CNT_2 0x05
DMA_CNT_3  macro  arch/x86/include/asm/dma.h  125  #define DMA_CNT_3 0x07
DMA_CNT_4  macro  arch/x86/include/asm/dma.h  126  #define DMA_CNT_4 0xC2
DMA_CNT_5  macro  arch/x86/include/asm/dma.h  127  #define DMA_CNT_5 0xC6
DMA_CNT_6  macro  arch/x86/include/asm/dma.h  128  #define DMA_CNT_6 0xCA
DMA_CNT_7  macro  arch/x86/include/asm/dma.h  129  #define DMA_CNT_7 0xCE
DMA_PAGE_0  macro  arch/x86/include/asm/dma.h  131  #define DMA_PAGE_0 0x87
DMA_PAGE_1  macro  arch/x86/include/asm/dma.h  132  #define DMA_PAGE_1 0x83
DMA_PAGE_2  macro  arch/x86/include/asm/dma.h  133  #define DMA_PAGE_2 0x81
DMA_PAGE_3  macro  arch/x86/include/asm/dma.h  134  #define DMA_PAGE_3 0x82
DMA_PAGE_5  macro  arch/x86/include/asm/dma.h  135  #define DMA_PAGE_5 0x8B
DMA_PAGE_6  macro  arch/x86/include/asm/dma.h  136  #define DMA_PAGE_6 0x89
DMA_PAGE_7  macro  arch/x86/include/asm/dma.h  137  #define DMA_PAGE_7 0x8A
DMA_MODE_READ  macro  arch/x86/include/asm/dma.h  140  #define DMA_MODE_READ 0x44
DMA_MODE_WRITE  macro  arch/x86/include/asm/dma.h  142  #define DMA_MODE_WRITE 0x48
DMA_MODE_CASCADE  macro  arch/x86/include/asm/dma.h  144  #define DMA_MODE_CASCADE 0xC0
DMA_AUTOINIT  macro  arch/x86/include/asm/dma.h  146  #define DMA_AUTOINIT 0x10
claim_dma_lock  function  arch/x86/include/asm/dma.h  152  static inline unsigned long claim_dma_lock(void)
release_dma_lock  function  arch/x86/include/asm/dma.h  159  static inline void release_dma_lock(unsigned long flags)
enable_dma  function  arch/x86/include/asm/dma.h  166  static inline void enable_dma(unsigned int dmanr)
disable_dma  function  arch/x86/include/asm/dma.h  174  static inline void disable_dma(unsigned int dmanr)
clear_dma_ff  function  arch/x86/include/asm/dma.h  189  static inline void clear_dma_ff(unsigned int dmanr)
set_dma_mode  function  arch/x86/include/asm/dma.h  198  static inline void set_dma_mode(unsigned int dmanr,char mode)
set_dma_page  function  arch/x86/include/asm/dma.h  211  static inline void set_dma_page(unsigned int dmanr,char pagenr)
set_dma_addr  function  arch/x86/include/asm/dma.h  242  static inline void set_dma_addr(unsigned int dmanr,unsigned int a)
set_dma_count  function  arch/x86/include/asm/dma.h  263  static inline void set_dma_count(unsigned int dmanr,unsigned int count)
get_dma_residue  function  arch/x86/include/asm/dma.h  287  static inline int get_dma_residue(unsigned int dmanr)
request_dma  prototype  arch/x86/include/asm/dma.h  305  extern int request_dma(unsigned int dmanr,const char *device_id);
free_dma  prototype  arch/x86/include/asm/dma.h  306  extern void free_dma(unsigned int dmanr);
isa_dma_bridge_buggy  macro  arch/x86/include/asm/dma.h  314  #define isa_dma_bridge_buggy (0)
_ASM_X86_IRQ_H  macro  arch/x86/include/asm/irq.h  2  #define _ASM_X86_IRQ_H
irq_canonicalize  function  arch/x86/include/asm/irq.h  13  static inline int irq_canonicalize(int irq)
irq_ctx_init  macro  arch/x86/include/asm/irq.h  21  # define irq_ctx_init(cpu) do { } while (0)
__ARCH_HAS_DO_SOFTIRQ  macro  arch/x86/include/asm/irq.h  24  #define __ARCH_HAS_DO_SOFTIRQ
fixup_irqs  prototype  arch/x86/include/asm/irq.h  28  extern void fixup_irqs(void);
irq_force_complete_move  prototype  arch/x86/include/asm/irq.h  29  extern void irq_force_complete_move(int);
native_init_IRQ  prototype  arch/x86/include/asm/irq.h  33  extern void native_init_IRQ(void);
handle_irq  prototype  arch/x86/include/asm/irq.h  34  extern bool handle_irq(unsigned irq,struct pt_regs *regs);
do_IRQ  prototype  arch/x86/include/asm/irq.h  36  extern unsigned int do_IRQ(struct pt_regs *regs);
DECLARE_BITMAP  prototype  arch/x86/include/asm/mpspec.h  47  extern DECLARE_BITMAP(mp_bus_not_pci,MAX_MP_BUSSES);
vector_used_by_percpu_irq  prototype  arch/x86/include/asm/irq.h  40  extern int vector_used_by_percpu_irq(unsigned int vector);
init_ISA_irqs  prototype  arch/x86/include/asm/irq.h  42  extern void init_ISA_irqs(void);
_LINUX_LIST_H  macro  include/linux/list.h  2  #define _LINUX_LIST_H
LIST_HEAD_INIT  macro  include/linux/list.h  19  #define LIST_HEAD_INIT(name) { &(name),&(name) }
LIST_HEAD  macro  include/linux/list.h  22  #define LIST_HEAD(name) struct list_head name = LIST_HEAD_INIT(name)
INIT_LIST_HEAD  function  include/linux/list.h  24  static inline void INIT_LIST_HEAD(struct list_head *list)
__list_add  prototype  include/linux/list.h  49  extern void __list_add(struct list_head *new,struct list_head *prev,struct list_head *next);
list_add  function  include/linux/list.h  60  static inline void list_add(struct list_head *new,struct list_head *head)
list_add_tail  function  include/linux/list.h  74  static inline void list_add_tail(struct list_head *new,struct list_head *head)
__list_del  function  include/linux/list.h  86  static inline void __list_del(struct list_head * prev,struct list_head * next)
__list_del_entry  prototype  include/linux/list.h  111  extern void __list_del_entry(struct list_head *entry);
list_del  prototype  include/linux/list.h  112  extern void list_del(struct list_head *entry);
list_replace  function  include/linux/list.h  123  static inline void list_replace(struct list_head *old,struct list_head *new)
list_replace_init  function  include/linux/list.h  132  static inline void list_replace_init(struct list_head *old,struct list_head *new)
list_del_init  function  include/linux/list.h  142  static inline void list_del_init(struct list_head *entry)
list_move  function  include/linux/list.h  153  static inline void list_move(struct list_head *list,struct list_head *head)
list_move_tail  function  include/linux/list.h  165  static inline void list_move_tail(struct list_head *list,struct list_head *head)
list_is_last  function  include/linux/list.h  177  static inline int list_is_last(const struct list_head *list,const struct list_head *head)
list_empty  function  include/linux/list.h  186  static inline int list_empty(const struct list_head *head)
list_empty_careful  function  include/linux/list.h  204  static inline int list_empty_careful(const struct list_head *head)
list_rotate_left  function  include/linux/list.h  214  static inline void list_rotate_left(struct list_head *head)
list_is_singular  function  include/linux/list.h  228  static inline int list_is_singular(const struct list_head *head)
__list_cut_position  function  include/linux/list.h  234  static inline void __list_cut_position(struct list_head *list,struct list_head *head, struct list_head *entry)
list_cut_position  function  include/linux/list.h  260  static inline void list_cut_position(struct list_head *list,struct list_head *head, struct list_head *entry)
__list_splice  function  include/linux/list.h  275  static inline void __list_splice(const struct list_head *list,struct list_head *prev,struct list_head *next)
list_splice  function  include/linux/list.h  293  static inline void list_splice(const struct list_head *list,struct list_head *head)
list_splice_tail  function  include/linux/list.h  305  static inline void list_splice_tail(struct list_head *list,struct list_head *head)
list_splice_init  function  include/linux/list.h  319  static inline void list_splice_init(struct list_head *list,struct list_head *head)
list_splice_tail_init  function  include/linux/list.h  336  static inline void list_splice_tail_init(struct list_head *list,struct list_head *head)
list_entry  macro  include/linux/list.h  351  #define list_entry(ptr,type,member) container_of(ptr, type, member)
list_first_entry  macro  include/linux/list.h  362  #define list_first_entry(ptr,type,member) list_entry((ptr)->next, type, member)
list_for_each  macro  include/linux/list.h  370  #define list_for_each(pos,head) for (pos = (head)->next; pos != (head); pos = pos->next)
__list_for_each  macro  include/linux/list.h  381  #define __list_for_each(pos,head) for (pos = (head)->next; pos != (head); pos = pos->next)
list_for_each_prev  macro  include/linux/list.h  389  #define list_for_each_prev(pos,head) for (pos = (head)->prev; pos != (head); pos = pos->prev)
list_for_each_safe  macro  include/linux/list.h  399  #define list_for_each_safe(pos,n,head) for (pos = (head)->next, n = pos->next; pos != (head); pos = n, n = pos->next)
list_for_each_prev_safe  macro  include/linux/list.h  410  #define list_for_each_prev_safe(pos,n,head) for (pos = (head)->prev, n = pos->prev; pos != (head); pos = n, n = pos->prev)
list_for_each_entry  macro  include/linux/list.h  421  #define list_for_each_entry(pos,head,member) for (pos = list_entry((head)->next, typeof(*pos), member); &pos->member != (head); pos = list_entry(pos->member.next, typeof(*pos), member))
list_for_each_entry_reverse  macro  include/linux/list.h  432  #define list_for_each_entry_reverse(pos,head,member) for (pos = list_entry((head)->prev, typeof(*pos), member); &pos->member != (head); pos = list_entry(pos->member.prev, typeof(*pos), member))
list_prepare_entry  macro  include/linux/list.h  443  #define list_prepare_entry(pos,head,member) ((pos) ? : list_entry(head, typeof(*pos), member))
list_for_each_entry_continue  macro  include/linux/list.h  457  #define list_for_each_entry_continue(pos,head,member) for (pos = list_entry(pos->member.next, typeof(*pos), member); &pos->member != (head); pos = list_entry(pos->member.next, typeof(*pos), member))
list_for_each_entry_continue_reverse  macro  include/linux/list.h  471  #define list_for_each_entry_continue_reverse(pos,head,member) for (pos = list_entry(pos->member.prev, typeof(*pos), member); &pos->member != (head); pos = list_entry(pos->member.prev, typeof(*pos), member))
list_for_each_entry_from  macro  include/linux/list.h  483  #define list_for_each_entry_from(pos,head,member) for (; &pos->member != (head); pos = list_entry(pos->member.next, typeof(*pos), member))
list_for_each_entry_safe  macro  include/linux/list.h  496  #define list_for_each_entry_safe(pos,n,head,member) for (pos = list_entry((head)->next, typeof(*pos), member), n = list_entry(pos->member.next, typeof(*pos), member); &pos->member != (head); pos = n, n = list_entry(n->member.next, typeof(*n), member))
list_for_each_entry_safe_continue  macro  include/linux/list.h  512  #define list_for_each_entry_safe_continue(pos,n,head,member) for (pos = list_entry(pos->member.next, typeof(*pos), member), n = list_entry(pos->member.next, typeof(*pos), member); &pos->member != (head); pos = n, n = list_entry(n->member.next, typeof(*n), member))
list_for_each_entry_safe_from  macro  include/linux/list.h  527  #define list_for_each_entry_safe_from(pos,n,head,member) for (n = list_entry(pos->member.next, typeof(*pos), member); &pos->member != (head); pos = n, n = list_entry(n->member.next, typeof(*n), member))
list_for_each_entry_safe_reverse  macro  include/linux/list.h  543  #define list_for_each_entry_safe_reverse(pos,n,head,member) for (pos = list_entry((head)->prev, typeof(*pos), member), n = list_entry(pos->member.prev, typeof(*pos), member); &pos->member != (head); pos = n, n = list_entry(n->member.prev, typeof(*n), member))
list_safe_reset_next  macro  include/linux/list.h  558  #define list_safe_reset_next(pos,n,member) n = list_entry(pos->member.next, typeof(*pos), member)
HLIST_HEAD_INIT  macro  include/linux/list.h  567  #define HLIST_HEAD_INIT { .first = NULL }
HLIST_HEAD  macro  include/linux/list.h  568  #define HLIST_HEAD(name) struct hlist_head name = { .first = NULL }
INIT_HLIST_HEAD  macro  include/linux/list.h  569  #define INIT_HLIST_HEAD(ptr) ((ptr)->first = NULL)
INIT_HLIST_NODE  function  include/linux/list.h  570  static inline void INIT_HLIST_NODE(struct hlist_node *h)
hlist_unhashed  function  include/linux/list.h  576  static inline int hlist_unhashed(const struct hlist_node *h)
hlist_empty  function  include/linux/list.h  581  static inline int hlist_empty(const struct hlist_head *h)
__hlist_del  function  include/linux/list.h  586  static inline void __hlist_del(struct hlist_node *n)
hlist_del  function  include/linux/list.h  595  static inline void hlist_del(struct hlist_node *n)
hlist_del_init  function  include/linux/list.h  602  static inline void hlist_del_init(struct hlist_node *n)
hlist_add_head  function  include/linux/list.h  610  static inline void hlist_add_head(struct hlist_node *n,struct hlist_head *h)
hlist_add_before  function  include/linux/list.h  622  static inline void hlist_add_before(struct hlist_node *n,struct hlist_node *next)
hlist_add_after  function  include/linux/list.h  631  static inline void hlist_add_after(struct hlist_node *n,struct hlist_node *next)
hlist_add_fake  function  include/linux/list.h  642  static inline void hlist_add_fake(struct hlist_node *n)
hlist_move_list  function  include/linux/list.h  652  static inline void hlist_move_list(struct hlist_head *old,struct hlist_head *new)
hlist_entry  macro  include/linux/list.h  660  #define hlist_entry(ptr,type,member) container_of(ptr,type,member)
hlist_for_each  macro  include/linux/list.h  663  #define hlist_for_each(pos,head) for (pos = (head)->first; pos ; pos = pos->next)
hlist_for_each_safe  macro  include/linux/list.h  667  #define hlist_for_each_safe(pos,n,head) for (pos = (head)->first; pos && ({ n = pos->next; 1; }); pos = n)
hlist_for_each_entry  macro  include/linux/list.h  680  #define hlist_for_each_entry(tpos,pos,head,member) for (pos = (head)->first; pos && ({ tpos = hlist_entry(pos, typeof(*tpos), member); 1;}); pos = pos->next)
hlist_for_each_entry_continue  macro  include/linux/list.h  692  #define hlist_for_each_entry_continue(tpos,pos,member) for (pos = (pos)->next; pos && ({ tpos = hlist_entry(pos, typeof(*tpos), member); 1;}); pos = pos->next)
hlist_for_each_entry_from  macro  include/linux/list.h  703  #define hlist_for_each_entry_from(tpos,pos,member) for (; pos && ({ tpos = hlist_entry(pos, typeof(*tpos), member); 1;}); pos = pos->next)
hlist_for_each_entry_safe  macro  include/linux/list.h  717  #define hlist_for_each_entry_safe(tpos,pos,n,head,member) for (pos = (head)->first; pos && ({ n = pos->next; 1; }) && ({ tpos = hlist_entry(pos, typeof(*tpos), member); 1;}); pos = n)
_LINUX_STAT_H  macro  include/linux/stat.h  2  #define _LINUX_STAT_H
S_IRWXUGO  macro  include/linux/stat.h  8  #define S_IRWXUGO (S_IRWXU|S_IRWXG|S_IRWXO)
S_IALLUGO  macro  include/linux/stat.h  9  #define S_IALLUGO (S_ISUID|S_ISGID|S_ISVTX|S_IRWXUGO)
S_IRUGO  macro  include/linux/stat.h  10  #define S_IRUGO (S_IRUSR|S_IRGRP|S_IROTH)
S_IWUGO  macro  include/linux/stat.h  11  #define S_IWUGO (S_IWUSR|S_IWGRP|S_IWOTH)
S_IXUGO  macro  include/linux/stat.h  12  #define S_IXUGO (S_IXUSR|S_IXGRP|S_IXOTH)
UTIME_NOW  macro  include/linux/stat.h  14  #define UTIME_NOW ((1l << 30) - 1l)
UTIME_OMIT  macro  include/linux/stat.h  15  #define UTIME_OMIT ((1l << 30) - 2l)
kstat  struct  include/linux/stat.h  21  struct kstat {
__LINUX_COMPILER_H  macro  include/linux/compiler.h  2  #define __LINUX_COMPILER_H
__user  macro  include/linux/compiler.h  28  # define __user
__kernel  macro  include/linux/compiler.h  29  # define __kernel
__safe  macro  include/linux/compiler.h  30  # define __safe
__force  macro  include/linux/compiler.h  31  # define __force
__nocast  macro  include/linux/compiler.h  32  # define __nocast
__iomem  macro  include/linux/compiler.h  33  # define __iomem
__must_hold  macro  include/linux/compiler.h  37  # define __must_hold(x)
__acquire  macro  include/linux/compiler.h  40  # define __acquire(x) (void)0
__release  macro  include/linux/compiler.h  41  # define __release(x) (void)0
__cond_lock  macro  include/linux/compiler.h  42  # define __cond_lock(x,c) (c)
__percpu  macro  include/linux/compiler.h  43  # define __percpu
__rcu  macro  include/linux/compiler.h  44  # define __rcu
__chk_user_ptr  macro  include/linux/compiler.h  34  # define __chk_user_ptr(x) (void)0
__chk_io_ptr  macro  include/linux/compiler.h  35  # define __chk_io_ptr(x) (void)0
__builtin_warning  macro  include/linux/compiler.h  36  # define __builtin_warning(x,y...) (1)
___PASTE  macro  include/linux/compiler.h  48  #define ___PASTE(a,b) a##b
__PASTE  macro  include/linux/compiler.h  49  #define __PASTE(a,b) ___PASTE(a,b)
notrace  macro  arch/x86/include/asm/linkage.h  7  #define notrace __attribute__((no_instrument_function))
ftrace_branch_data  struct  include/linux/compiler.h  72  struct ftrace_branch_data {
ftrace_likely_update  prototype  include/linux/compiler.h  95  void ftrace_likely_update(struct ftrace_branch_data *f,int val,int expect);
likely_notrace  macro  include/linux/compiler.h  97  #define likely_notrace(x) __builtin_expect(!!(x),1)
unlikely_notrace  macro  include/linux/compiler.h  98  #define unlikely_notrace(x) __builtin_expect(!!(x),0)
__branch_check__  macro  include/linux/compiler.h  113  #define __branch_check__(x,expect) ({ int ______r; static struct ftrace_branch_data __attribute__((__aligned__(4))) __attribute__((section("_ftrace_annotated_branch"))) ______f = { .func = __func__, .file = __FILE__, .line = __LINE__, }; ______r = likely_notrace(x); ftrace_likely_update(&______f, ______r, expect); ______r; })
likely  macro  include/linux/compiler.h  152  # define likely(x) __builtin_expect(!!(x),1)
unlikely  macro  include/linux/compiler.h  153  # define unlikely(x) __builtin_expect(!!(x),0)
if  macro  include/linux/compiler.h  132  #define if(cond,...) __trace_if( (cond ,## __VA_ARGS__) )
__trace_if  macro  include/linux/compiler.h  148  #define __trace_if(cond) if (__builtin_constant_p((cond)) ? !!(cond) : ({ int ______r; static struct ftrace_branch_data __attribute__((__aligned__(4))) __attribute__((section("_ftrace_branch"))) ______f = { .func = __func__, .file = __FILE__, .line = __LINE__, }; ______r = !!(cond); ______f.miss_hit[______r]++; ______r; }))
barrier  macro  include/linux/compiler-intel.h  19  #define barrier() __memory_barrier()
unreachable  macro  include/linux/compiler.h  163  # define unreachable() do { } while (1)
RELOC_HIDE  macro  include/linux/compiler-intel.h  24  #define RELOC_HIDE(ptr,off) ({ unsigned long __ptr; __ptr = (unsigned long) (ptr); (typeof(ptr)) (__ptr + (off)); })
__UNIQUE_ID  macro  include/linux/compiler.h  175  # define __UNIQUE_ID(prefix) __PASTE(__PASTE(__UNIQUE_ID_,prefix),__LINE__)
__deprecated  macro  include/linux/compiler-gcc.h  60  #define __deprecated __attribute__((deprecated))
__deprecated_for_modules  macro  include/linux/compiler.h  211  #define __deprecated_for_modules
__must_check  macro  include/linux/compiler.h  205  #define __must_check
__used  macro  include/linux/compiler.h  233  # define __used
__maybe_unused  macro  include/linux/compiler-gcc.h  94  #define __maybe_unused __attribute__((unused))
__always_unused  macro  include/linux/compiler-gcc.h  95  #define __always_unused __attribute__((unused))
noinline  macro  include/linux/compiler-gcc.h  92  #define noinline __attribute__((noinline))
noinline_for_stack  macro  include/linux/compiler.h  252  #define noinline_for_stack noinline
__always_inline  macro  include/linux/compiler-gcc.h  112  #define __always_inline inline __attribute__((always_inline))
__attribute_const__  macro  include/linux/compiler-gcc.h  93  #define __attribute_const__ __attribute__((__const__))
__cold  macro  include/linux/compiler.h  284  #define __cold
__section  macro  include/linux/compiler.h  289  # define __section(S) __attribute__ ((__section__(#S)))
__visible  macro  include/linux/compiler.h  293  #define __visible
__same_type  macro  include/linux/compiler.h  298  # define __same_type(a,b) __builtin_types_compatible_p(typeof(a),typeof(b))
__compiletime_object_size  macro  include/linux/compiler.h  303  # define __compiletime_object_size(obj) -1
__compiletime_warning  macro  include/linux/compiler.h  306  # define __compiletime_warning(message)
__compiletime_error  macro  include/linux/compiler.h  309  # define __compiletime_error(message)
__linktime_error  macro  include/linux/compiler.h  312  # define __linktime_error(message)
ACCESS_ONCE  macro  include/linux/compiler.h  326  #define ACCESS_ONCE(x) (*(volatile typeof(x) *)&(x))
__LINUX_CACHE_H  macro  include/linux/cache.h  2  #define __LINUX_CACHE_H
L1_CACHE_ALIGN  macro  include/linux/cache.h  8  #define L1_CACHE_ALIGN(x) ALIGN(x,L1_CACHE_BYTES)
SMP_CACHE_BYTES  macro  include/linux/cache.h  12  #define SMP_CACHE_BYTES L1_CACHE_BYTES
__read_mostly  macro  arch/x86/include/asm/cache.h  10  #define __read_mostly __attribute__((__section__(".data..read_mostly")))
____cacheline_aligned  macro  include/linux/cache.h  20  #define ____cacheline_aligned __attribute__((__aligned__(SMP_CACHE_BYTES)))
____cacheline_aligned_in_smp  macro  include/linux/cache.h  27  #define ____cacheline_aligned_in_smp
__cacheline_aligned  macro  include/linux/cache.h  34  #define __cacheline_aligned __attribute__((__aligned__(SMP_CACHE_BYTES), __section__(".data..cacheline_aligned")))
__cacheline_aligned_in_smp  macro  arch/x86/include/asm/cache.h  19  #define __cacheline_aligned_in_smp __attribute__((__aligned__(INTERNODE_CACHE_BYTES))) __page_aligned_data
INTERNODE_CACHE_SHIFT  macro  arch/x86/include/asm/cache.h  12  #define INTERNODE_CACHE_SHIFT CONFIG_X86_INTERNODE_CACHE_SHIFT
____cacheline_internodealigned_in_smp  macro  include/linux/cache.h  59  #define ____cacheline_internodealigned_in_smp
cache_line_size  macro  arch/x86/include/asm/processor.h  177  #define cache_line_size() (boot_cpu_data.x86_cache_alignment)
__LINUX_KMOD_H__  macro  include/linux/kmod.h  2  #define __LINUX_KMOD_H__
KMOD_PATH_LEN  macro  include/linux/kmod.h  29  #define KMOD_PATH_LEN 256
__request_module  prototype  include/linux/kmod.h  36  int __request_module(bool wait,const char *name,...);
request_module  function  include/linux/kmod.h  42  static inline int request_module(const char *name,...) { return -ENOSYS; }
request_module_nowait  function  include/linux/kmod.h  43  static inline int request_module_nowait(const char *name,...) { return -ENOSYS; }
try_then_request_module  macro  include/linux/kmod.h  44  #define try_then_request_module(x,mod...) (x)
UMH_NO_WAIT  macro  include/linux/kmod.h  51  #define UMH_NO_WAIT 0
UMH_WAIT_EXEC  macro  include/linux/kmod.h  52  #define UMH_WAIT_EXEC 1
UMH_WAIT_PROC  macro  include/linux/kmod.h  53  #define UMH_WAIT_PROC 2
UMH_KILLABLE  macro  include/linux/kmod.h  54  #define UMH_KILLABLE 4
subprocess_info  struct  include/linux/kmod.h  56  struct subprocess_info {
call_usermodehelper_fns  prototype  include/linux/kmod.h  72  call_usermodehelper_fns(char *path,char **argv,char **envp,int wait,int (*init)(struct subprocess_info *info, struct cred *new),void (*cleanup)(struct subprocess_info *), void *data);
call_usermodehelper  function  include/linux/kmod.h  75  call_usermodehelper(char *path,char **argv,char **envp,int wait)
umh_disable_depth  enum  include/linux/kmod.h  83  enum umh_disable_depth {
usermodehelper_init  prototype  include/linux/kmod.h  89  extern void usermodehelper_init(void);
__usermodehelper_disable  prototype  include/linux/kmod.h  91  extern int __usermodehelper_disable(enum umh_disable_depth depth);
__usermodehelper_set_disable_depth  prototype  include/linux/kmod.h  92  extern void __usermodehelper_set_disable_depth(enum umh_disable_depth depth);
usermodehelper_disable  function  include/linux/kmod.h  94  static inline int usermodehelper_disable(void)
usermodehelper_enable  function  include/linux/kmod.h  99  static inline void usermodehelper_enable(void)
usermodehelper_read_trylock  prototype  include/linux/kmod.h  104  extern int usermodehelper_read_trylock(void);
usermodehelper_read_lock_wait  prototype  include/linux/kmod.h  105  extern long usermodehelper_read_lock_wait(long timeout);
usermodehelper_read_unlock  prototype  include/linux/kmod.h  106  extern void usermodehelper_read_unlock(void);
_LINUX_ELF_H  macro  include/linux/elf.h  2  #define _LINUX_ELF_H
elf_read_implies_exec  macro  arch/x86/include/asm/elf.h  268  #define elf_read_implies_exec(ex,executable_stack) (executable_stack != EXSTACK_DISABLE_X)
elfhdr  macro  include/linux/elf.h  27  #define elfhdr elf64_hdr
elf_phdr  macro  include/linux/elf.h  28  #define elf_phdr elf64_phdr
elf_shdr  macro  include/linux/elf.h  29  #define elf_shdr elf64_shdr
elf_note  macro  include/linux/elf.h  30  #define elf_note elf64_note
elf_addr_t  macro  include/linux/elf.h  31  #define elf_addr_t Elf64_Off
Elf_Half  macro  include/linux/elf.h  32  #define Elf_Half Elf64_Half
elf_coredump_extra_notes_size  prototype  include/linux/elf.h  44  extern int elf_coredump_extra_notes_size(void);
elf_coredump_extra_notes_write  prototype  include/linux/elf.h  45  extern int elf_coredump_extra_notes_write(struct file *file,loff_t *foffset);
__LINUX_STRINGIFY_H  macro  include/linux/stringify.h  2  #define __LINUX_STRINGIFY_H
__stringify_1  macro  include/linux/stringify.h  9  #define __stringify_1(x...) #x
__stringify  macro  include/linux/stringify.h  10  #define __stringify(x...) __stringify_1(x)
_KOBJECT_H_  macro  include/linux/kobject.h  17  #define _KOBJECT_H_
UEVENT_HELPER_PATH_LEN  macro  include/linux/kobject.h  30  #define UEVENT_HELPER_PATH_LEN 256
UEVENT_NUM_ENVP  macro  include/linux/kobject.h  31  #define UEVENT_NUM_ENVP 32
UEVENT_BUFFER_SIZE  macro  include/linux/kobject.h  32  #define UEVENT_BUFFER_SIZE 2048
kobject_action  enum  include/linux/kobject.h  50  enum kobject_action {
kobject  struct  include/linux/kobject.h  60  struct kobject {
kobject_set_name  prototype  include/linux/kobject.h  76  int kobject_set_name(struct kobject *kobj,const char *name,...);
kobject_set_name_vargs  prototype  include/linux/kobject.h  78  extern int kobject_set_name_vargs(struct kobject *kobj,const char *fmt,va_list vargs);
kobject_name  function  include/linux/kobject.h  80  static inline const char *kobject_name(const struct kobject *kobj)
kobject_init  prototype  include/linux/kobject.h  85  extern void kobject_init(struct kobject *kobj,struct kobj_type *ktype);
kobject_add  prototype  include/linux/kobject.h  88  int kobject_add(struct kobject *kobj,struct kobject *parent,const char *fmt, ...);
kobject_init_and_add  prototype  include/linux/kobject.h  92  int kobject_init_and_add(struct kobject *kobj,struct kobj_type *ktype, struct kobject *parent,const char *fmt, ...);
kobject_del  prototype  include/linux/kobject.h  94  extern void kobject_del(struct kobject *kobj);
kobject_create  prototype  include/linux/kobject.h  96  extern struct kobject * __must_check kobject_create(void);
kobject_create_and_add  prototype  include/linux/kobject.h  98  extern struct kobject * __must_check kobject_create_and_add(const char *name,struct kobject *parent);
kobject_rename  prototype  include/linux/kobject.h  100  extern int __must_check kobject_rename(struct kobject *,const char *new_name);
kobject_move  prototype  include/linux/kobject.h  101  extern int __must_check kobject_move(struct kobject *,struct kobject *);
kobject_get  prototype  include/linux/kobject.h  103  extern struct kobject *kobject_get(struct kobject *kobj);
kobject_put  prototype  include/linux/kobject.h  104  extern void kobject_put(struct kobject *kobj);
kobject_get_path  prototype  include/linux/kobject.h  106  extern char *kobject_get_path(struct kobject *kobj,gfp_t flag);
kobj_type  struct  include/linux/kobject.h  108  struct kobj_type {
kobj_uevent_env  struct  include/linux/kobject.h  116  struct kobj_uevent_env {
kset_uevent_ops  struct  include/linux/kobject.h  123  struct kset_uevent_ops {
kobj_attribute  struct  include/linux/kobject.h  130  struct kobj_attribute {
kset  struct  include/linux/kobject.h  159  struct kset {
kset_init  prototype  include/linux/kobject.h  166  extern void kset_init(struct kset *kset);
kset_register  prototype  include/linux/kobject.h  167  extern int __must_check kset_register(struct kset *kset);
kset_unregister  prototype  include/linux/kobject.h  168  extern void kset_unregister(struct kset *kset);
kset_create_and_add  prototype  include/linux/kobject.h  171  extern struct kset * __must_check kset_create_and_add(const char *name,const struct kset_uevent_ops *u,struct kobject *parent_kobj);
to_kset  function  include/linux/kobject.h  173  static inline struct kset *to_kset(struct kobject *kobj)
kset_get  function  include/linux/kobject.h  178  static inline struct kset *kset_get(struct kset *k)
kset_put  function  include/linux/kobject.h  183  static inline void kset_put(struct kset *k)
get_ktype  function  include/linux/kobject.h  188  static inline struct kobj_type *get_ktype(struct kobject *kobj)
kset_find_obj  prototype  include/linux/kobject.h  193  extern struct kobject *kset_find_obj(struct kset *,const char *);
kobject_uevent  prototype  include/linux/kobject.h  206  int kobject_uevent(struct kobject *kobj,enum kobject_action action);
kobject_uevent_env  prototype  include/linux/kobject.h  208  int kobject_uevent_env(struct kobject *kobj,enum kobject_action action,char *envp[]);
add_uevent_var  prototype  include/linux/kobject.h  211  int add_uevent_var(struct kobj_uevent_env *env,const char *format,...);
kobject_action_type  prototype  include/linux/kobject.h  214  int kobject_action_type(const char *buf,size_t count,enum kobject_action *type);
_LINUX_TRACEPOINT_H  macro  include/linux/tracepoint.h  2  #define _LINUX_TRACEPOINT_H
tracepoint_func  struct  include/linux/tracepoint.h  25  struct tracepoint_func {
tracepoint  struct  include/linux/tracepoint.h  30  struct tracepoint {
tracepoint_probe_register  prototype  include/linux/tracepoint.h  42  extern int tracepoint_probe_register(const char *name,void *probe,void *data);
tracepoint_probe_unregister  prototype  include/linux/tracepoint.h  49  tracepoint_probe_unregister(const char *name,void *probe,void *data);
tracepoint_probe_register_noupdate  prototype  include/linux/tracepoint.h  52  extern int tracepoint_probe_register_noupdate(const char *name,void *probe,void *data);
tracepoint_probe_unregister_noupdate  prototype  include/linux/tracepoint.h  54  extern int tracepoint_probe_unregister_noupdate(const char *name,void *probe,void *data);
tracepoint_probe_update_all  prototype  include/linux/tracepoint.h  55  extern void tracepoint_probe_update_all(void);
tp_module  struct  include/linux/tracepoint.h  58  struct tp_module {
tracepoint_iter  struct  include/linux/tracepoint.h  65  struct tracepoint_iter {
tracepoint_iter_start  prototype  include/linux/tracepoint.h  72  extern void tracepoint_iter_start(struct tracepoint_iter *iter);
tracepoint_iter_next  prototype  include/linux/tracepoint.h  73  extern void tracepoint_iter_next(struct tracepoint_iter *iter);
tracepoint_iter_stop  prototype  include/linux/tracepoint.h  74  extern void tracepoint_iter_stop(struct tracepoint_iter *iter);
tracepoint_iter_reset  prototype  include/linux/tracepoint.h  75  extern void tracepoint_iter_reset(struct tracepoint_iter *iter);
tracepoint_synchronize_unregister  function  include/linux/tracepoint.h  82  static inline void tracepoint_synchronize_unregister(void)
PARAMS  macro  include/linux/tracepoint.h  87  #define PARAMS(args...) args
TP_PROTO  macro  include/linux/tracepoint.h  101  #define TP_PROTO(args...) args
TP_ARGS  macro  include/linux/tracepoint.h  102  #define TP_ARGS(args...) args
TP_CONDITION  macro  include/linux/tracepoint.h  103  #define TP_CONDITION(args...) args
__DO_TRACE  macro  include/linux/tracepoint.h  137  #define __DO_TRACE(tp,proto,args,cond,prercu,postrcu) do { struct tracepoint_func *it_func_ptr; void *it_func; void *__data; if (!(cond)) return; prercu; rcu_read_lock_sched_notrace(); it_func_ptr = rcu_dereference_sched((tp)->funcs); if (it_func_ptr) { do { it_func = (it_func_ptr)->func; __data = (it_func_ptr)->data; ((void(*)(proto))(it_func))(args); } while ((++it_func_ptr)->func); } rcu_read_unlock_sched_notrace(); postrcu; } while (0)
__DECLARE_TRACE_RCU  macro  include/linux/tracepoint.h  152  #define __DECLARE_TRACE_RCU(name,proto,args,cond,data_proto,data_args)
__DECLARE_TRACE  macro  include/linux/tracepoint.h  232  #define __DECLARE_TRACE(name,proto,args,cond,data_proto,data_args) static inline void trace_##name(proto) { } static inline void trace_##name##_rcuidle(proto) { } static inline int register_trace_##name(void (*probe)(data_proto), void *data) { return -ENOSYS; } static inline int unregister_trace_##name(void (*probe)(data_proto), void *data) { return -ENOSYS; } static inline void check_trace_callback_type_##name(void (*cb)(data_proto)) { }
DEFINE_TRACE_FN  macro  include/linux/tracepoint.h  234  #define DEFINE_TRACE_FN(name,reg,unreg)
DEFINE_TRACE  macro  include/linux/tracepoint.h  235  #define DEFINE_TRACE(name)
EXPORT_TRACEPOINT_SYMBOL_GPL  macro  include/linux/tracepoint.h  236  #define EXPORT_TRACEPOINT_SYMBOL_GPL(name)
EXPORT_TRACEPOINT_SYMBOL  macro  include/linux/tracepoint.h  237  #define EXPORT_TRACEPOINT_SYMBOL(name)
DECLARE_TRACE_NOARGS  macro  include/linux/tracepoint.h  256  #define DECLARE_TRACE_NOARGS(name) __DECLARE_TRACE(name, void, , 1, void *__data, __data)
DECLARE_TRACE  macro  include/linux/tracepoint.h  261  #define DECLARE_TRACE(name,proto,args) __DECLARE_TRACE(name, PARAMS(proto), PARAMS(args), 1, PARAMS(void *__data, proto), PARAMS(__data, args))
DECLARE_TRACE_CONDITION  macro  include/linux/tracepoint.h  266  #define DECLARE_TRACE_CONDITION(name,proto,args,cond) __DECLARE_TRACE(name, PARAMS(proto), PARAMS(args), PARAMS(cond), PARAMS(void *__data, proto), PARAMS(__data, args))
TRACE_EVENT_FLAGS  macro  include/linux/tracepoint.h  398  #define TRACE_EVENT_FLAGS(event,flag)
DECLARE_EVENT_CLASS  macro  include/linux/tracepoint.h  378  #define DECLARE_EVENT_CLASS(name,proto,args,tstruct,assign,print)
DEFINE_EVENT  macro  include/linux/tracepoint.h  380  #define DEFINE_EVENT(template,name,proto,args) DECLARE_TRACE(name, PARAMS(proto), PARAMS(args))
DEFINE_EVENT_PRINT  macro  include/linux/tracepoint.h  382  #define DEFINE_EVENT_PRINT(template,name,proto,args,print) DECLARE_TRACE(name, PARAMS(proto), PARAMS(args))
DEFINE_EVENT_CONDITION  macro  include/linux/tracepoint.h  386  #define DEFINE_EVENT_CONDITION(template,name,proto, args, cond) DECLARE_TRACE_CONDITION(name, PARAMS(proto), PARAMS(args), PARAMS(cond))
TRACE_EVENT  macro  include/linux/tracepoint.h  389  #define TRACE_EVENT(name,proto,args,struct,assign,print) DECLARE_TRACE(name, PARAMS(proto), PARAMS(args))
TRACE_EVENT_FN  macro  include/linux/tracepoint.h  392  #define TRACE_EVENT_FN(name,proto,args,struct, assign, print, reg, unreg) DECLARE_TRACE(name, PARAMS(proto), PARAMS(args))
TRACE_EVENT_CONDITION  macro  include/linux/tracepoint.h  396  #define TRACE_EVENT_CONDITION(name,proto,args,cond, struct, assign, print) DECLARE_TRACE_CONDITION(name, PARAMS(proto), PARAMS(args), PARAMS(cond))
_LINUX_EXPORT_H  macro  include/linux/export.h  2  #define _LINUX_EXPORT_H
MODULE_SYMBOL_PREFIX  macro  include/linux/export.h  16  #define MODULE_SYMBOL_PREFIX ""
kernel_symbol  struct  include/linux/export.h  19  struct kernel_symbol
THIS_MODULE  macro  include/linux/export.h  29  #define THIS_MODULE ((struct module *)0)
__CRC_SYMBOL  macro  include/linux/export.h  45  #define __CRC_SYMBOL(sym,sec)
__EXPORT_SYMBOL  macro  include/linux/export.h  58  #define __EXPORT_SYMBOL(sym,sec) extern typeof(sym) sym; __CRC_SYMBOL(sym, sec) static const char __kstrtab_##sym[] __attribute__((section("__ksymtab_strings"), aligned(1))) = MODULE_SYMBOL_PREFIX #sym; static const struct kernel_symbol __ksymtab_##sym __used __attribute__((section("___ksymtab" sec "+" #sym), unused)) = { (unsigned long)&sym, __kstrtab_##sym }
EXPORT_SYMBOL  macro  include/linux/export.h  81  #define EXPORT_SYMBOL(sym)
EXPORT_SYMBOL_GPL  macro  include/linux/export.h  82  #define EXPORT_SYMBOL_GPL(sym)
EXPORT_SYMBOL_GPL_FUTURE  macro  include/linux/export.h  83  #define EXPORT_SYMBOL_GPL_FUTURE(sym)
EXPORT_UNUSED_SYMBOL  macro  include/linux/export.h  84  #define EXPORT_UNUSED_SYMBOL(sym)
EXPORT_UNUSED_SYMBOL_GPL  macro  include/linux/export.h  85  #define EXPORT_UNUSED_SYMBOL_GPL(sym)
__LINUX_PERCPU_H  macro  include/linux/percpu.h  2  #define __LINUX_PERCPU_H
PERCPU_MODULE_RESERVE  macro  include/linux/percpu.h  16  #define PERCPU_MODULE_RESERVE 0
PERCPU_ENOUGH_ROOM  macro  include/linux/percpu.h  22  #define PERCPU_ENOUGH_ROOM (ALIGN(__per_cpu_end - __per_cpu_start, SMP_CACHE_BYTES) + PERCPU_MODULE_RESERVE)
get_cpu_var  macro  include/linux/percpu.h  31  #define get_cpu_var(var) (*({ preempt_disable(); &__get_cpu_var(var); }))
put_cpu_var  macro  include/linux/percpu.h  40  #define put_cpu_var(var) do { (void)&(var); preempt_enable(); } while (0)
get_cpu_ptr  macro  include/linux/percpu.h  44  #define get_cpu_ptr(var) ({ preempt_disable(); this_cpu_ptr(var); })
put_cpu_ptr  macro  include/linux/percpu.h  49  #define put_cpu_ptr(var) do { (void)(var); preempt_enable(); } while (0)
PCPU_MIN_UNIT_SIZE  macro  include/linux/percpu.h  52  #define PCPU_MIN_UNIT_SIZE PFN_ALIGN(32 << 10)
PERCPU_DYNAMIC_EARLY_SLOTS  macro  include/linux/percpu.h  61  #define PERCPU_DYNAMIC_EARLY_SLOTS 128
PERCPU_DYNAMIC_EARLY_SIZE  macro  include/linux/percpu.h  62  #define PERCPU_DYNAMIC_EARLY_SIZE (12 << 10)
PERCPU_DYNAMIC_RESERVE  macro  include/linux/percpu.h  78  #define PERCPU_DYNAMIC_RESERVE (12 << 10)
pcpu_group_info  struct  include/linux/percpu.h  84  struct pcpu_group_info {
pcpu_alloc_info  struct  include/linux/percpu.h  91  struct pcpu_alloc_info {
pcpu_fc  enum  include/linux/percpu.h  103  enum pcpu_fc {
pcpu_alloc_alloc_info  prototype  include/linux/percpu.h  121  extern struct pcpu_alloc_info * __init pcpu_alloc_alloc_info(int nr_groups,int nr_units);
pcpu_free_alloc_info  prototype  include/linux/percpu.h  122  extern void __init pcpu_free_alloc_info(struct pcpu_alloc_info *ai);
pcpu_setup_first_chunk  prototype  include/linux/percpu.h  125  extern int __init pcpu_setup_first_chunk(const struct pcpu_alloc_info *ai,void *base_addr);
pcpu_embed_first_chunk  prototype  include/linux/percpu.h  132  extern int __init pcpu_embed_first_chunk(size_t reserved_size,size_t dyn_size,size_t atom_size,pcpu_fc_cpu_distance_fn_t cpu_distance_fn,pcpu_fc_alloc_fn_t alloc_fn,pcpu_fc_free_fn_t free_fn);
pcpu_page_first_chunk  prototype  include/linux/percpu.h  139  extern int __init pcpu_page_first_chunk(size_t reserved_size,pcpu_fc_alloc_fn_t alloc_fn,pcpu_fc_free_fn_t free_fn,pcpu_fc_populate_pte_fn_t populate_pte_fn);
per_cpu_ptr  macro  include/linux/percpu.h  150  #define per_cpu_ptr(ptr,cpu) ({ (void)(cpu); VERIFY_PERCPU_PTR((ptr)); })
__alloc_reserved_percpu  prototype  include/linux/percpu.h  153  extern void __percpu *__alloc_reserved_percpu(size_t size,size_t align);
is_kernel_percpu_address  prototype  include/linux/percpu.h  154  extern bool is_kernel_percpu_address(unsigned long addr);
setup_per_cpu_areas  prototype  include/linux/percpu.h  157  extern void __init setup_per_cpu_areas(void);
percpu_init_late  prototype  include/linux/percpu.h  159  extern void __init percpu_init_late(void);
__alloc_percpu  prototype  include/linux/percpu.h  161  extern void __percpu *__alloc_percpu(size_t size,size_t align);
free_percpu  prototype  include/linux/percpu.h  162  extern void free_percpu(void __percpu *__pdata);
per_cpu_ptr_to_phys  prototype  include/linux/percpu.h  163  extern phys_addr_t per_cpu_ptr_to_phys(void *addr);
alloc_percpu  macro  include/linux/percpu.h  166  #define alloc_percpu(type) (typeof(type) __percpu *)__alloc_percpu(sizeof(type), __alignof__(type))
__bad_size_call_parameter  prototype  include/linux/percpu.h  173  extern void __bad_size_call_parameter(void);
__pcpu_size_call_return  macro  include/linux/percpu.h  187  #define __pcpu_size_call_return(stem,variable) ({	typeof(variable) pscr_ret__; __verify_pcpu_ptr(&(variable)); switch(sizeof(variable)) { case 1: pscr_ret__ = stem##1(variable);break; case 2: pscr_ret__ = stem##2(variable);break; case 4: pscr_ret__ = stem##4(variable);break; case 8: pscr_ret__ = stem##8(variable);break; default: __bad_size_call_parameter();break; } pscr_ret__; })
__pcpu_size_call_return2  macro  include/linux/percpu.h  202  #define __pcpu_size_call_return2(stem,variable,...) ({ typeof(variable) pscr2_ret__; __verify_pcpu_ptr(&(variable)); switch(sizeof(variable)) { case 1: pscr2_ret__ = stem##1(variable, __VA_ARGS__); break; case 2: pscr2_ret__ = stem##2(variable, __VA_ARGS__); break; case 4: pscr2_ret__ = stem##4(variable, __VA_ARGS__); break; case 8: pscr2_ret__ = stem##8(variable, __VA_ARGS__); break; default: __bad_size_call_parameter(); break; } pscr2_ret__; })
__pcpu_double_call_return_bool  macro  include/linux/percpu.h  229  #define __pcpu_double_call_return_bool(stem,pcp1,pcp2,...) ({ bool pdcrb_ret__; __verify_pcpu_ptr(&pcp1); BUILD_BUG_ON(sizeof(pcp1) != sizeof(pcp2)); VM_BUG_ON((unsigned long)(&pcp1) % (2 * sizeof(pcp1))); VM_BUG_ON((unsigned long)(&pcp2) != (unsigned long)(&pcp1) + sizeof(pcp1)); switch(sizeof(pcp1)) { case 1: pdcrb_ret__ = stem##1(pcp1, pcp2, __VA_ARGS__); break; case 2: pdcrb_ret__ = stem##2(pcp1, pcp2, __VA_ARGS__); break; case 4: pdcrb_ret__ = stem##4(pcp1, pcp2, __VA_ARGS__); break; case 8: pdcrb_ret__ = stem##8(pcp1, pcp2, __VA_ARGS__); break; default: __bad_size_call_parameter(); break; } pdcrb_ret__; })
__pcpu_size_call  macro  include/linux/percpu.h  242  #define __pcpu_size_call(stem,variable,...) do { __verify_pcpu_ptr(&(variable)); switch(sizeof(variable)) { case 1: stem##1(variable, __VA_ARGS__);break; case 2: stem##2(variable, __VA_ARGS__);break; case 4: stem##4(variable, __VA_ARGS__);break; case 8: stem##8(variable, __VA_ARGS__);break; default: __bad_size_call_parameter();break; } } while (0)
_this_cpu_generic_read  macro  include/linux/percpu.h  276  #define _this_cpu_generic_read(pcp) ({	typeof(pcp) ret__; preempt_disable(); ret__ = *this_cpu_ptr(&(pcp)); preempt_enable(); ret__; })
this_cpu_read_1  macro  arch/x86/include/asm/percpu.h  387  #define this_cpu_read_1(pcp) percpu_from_op("mov",(pcp),"m"(pcp))
this_cpu_read_2  macro  arch/x86/include/asm/percpu.h  388  #define this_cpu_read_2(pcp) percpu_from_op("mov",(pcp),"m"(pcp))
this_cpu_read_4  macro  arch/x86/include/asm/percpu.h  389  #define this_cpu_read_4(pcp) percpu_from_op("mov",(pcp),"m"(pcp))
this_cpu_read_8  macro  arch/x86/include/asm/percpu.h  454  #define this_cpu_read_8(pcp) percpu_from_op("mov",(pcp),"m"(pcp))
this_cpu_read  macro  include/linux/percpu.h  291  # define this_cpu_read(pcp) __pcpu_size_call_return(this_cpu_read_,(pcp))
_this_cpu_generic_to_op  macro  include/linux/percpu.h  300  #define _this_cpu_generic_to_op(pcp,val,op) do { unsigned long flags; raw_local_irq_save(flags); *__this_cpu_ptr(&(pcp)) op val; raw_local_irq_restore(flags); } while (0)
this_cpu_write_1  macro  arch/x86/include/asm/percpu.h  390  #define this_cpu_write_1(pcp,val) percpu_to_op("mov",(pcp),val)
this_cpu_write_2  macro  arch/x86/include/asm/percpu.h  391  #define this_cpu_write_2(pcp,val) percpu_to_op("mov",(pcp),val)
this_cpu_write_4  macro  arch/x86/include/asm/percpu.h  392  #define this_cpu_write_4(pcp,val) percpu_to_op("mov",(pcp),val)
this_cpu_write_8  macro  arch/x86/include/asm/percpu.h  455  #define this_cpu_write_8(pcp,val) percpu_to_op("mov",(pcp),val)
this_cpu_write  macro  include/linux/percpu.h  315  # define this_cpu_write(pcp,val) __pcpu_size_call(this_cpu_write_,(pcp),(val))
this_cpu_add_1  macro  arch/x86/include/asm/percpu.h  393  #define this_cpu_add_1(pcp,val) percpu_add_op((pcp),val)
this_cpu_add_2  macro  arch/x86/include/asm/percpu.h  394  #define this_cpu_add_2(pcp,val) percpu_add_op((pcp),val)
this_cpu_add_4  macro  arch/x86/include/asm/percpu.h  395  #define this_cpu_add_4(pcp,val) percpu_add_op((pcp),val)
this_cpu_add_8  macro  arch/x86/include/asm/percpu.h  456  #define this_cpu_add_8(pcp,val) percpu_add_op((pcp),val)
this_cpu_add  macro  include/linux/percpu.h  331  # define this_cpu_add(pcp,val) __pcpu_size_call(this_cpu_add_,(pcp),(val))
this_cpu_sub  macro  include/linux/percpu.h  335  # define this_cpu_sub(pcp,val) this_cpu_add((pcp),-(val))
this_cpu_inc  macro  include/linux/percpu.h  339  # define this_cpu_inc(pcp) this_cpu_add((pcp),1)
this_cpu_dec  macro  include/linux/percpu.h  343  # define this_cpu_dec(pcp) this_cpu_sub((pcp),1)
this_cpu_and_1  macro  arch/x86/include/asm/percpu.h  396  #define this_cpu_and_1(pcp,val) percpu_to_op("and",(pcp),val)
this_cpu_and_2  macro  arch/x86/include/asm/percpu.h  397  #define this_cpu_and_2(pcp,val) percpu_to_op("and",(pcp),val)
this_cpu_and_4  macro  arch/x86/include/asm/percpu.h  398  #define this_cpu_and_4(pcp,val) percpu_to_op("and",(pcp),val)
this_cpu_and_8  macro  arch/x86/include/asm/percpu.h  457  #define this_cpu_and_8(pcp,val) percpu_to_op("and",(pcp),val)
this_cpu_and  macro  include/linux/percpu.h  359  # define this_cpu_and(pcp,val) __pcpu_size_call(this_cpu_and_,(pcp),(val))
this_cpu_or_1  macro  arch/x86/include/asm/percpu.h  399  #define this_cpu_or_1(pcp,val) percpu_to_op("or",(pcp),val)
this_cpu_or_2  macro  arch/x86/include/asm/percpu.h  400  #define this_cpu_or_2(pcp,val) percpu_to_op("or",(pcp),val)
this_cpu_or_4  macro  arch/x86/include/asm/percpu.h  401  #define this_cpu_or_4(pcp,val) percpu_to_op("or",(pcp),val)
this_cpu_or_8  macro  arch/x86/include/asm/percpu.h  458  #define this_cpu_or_8(pcp,val) percpu_to_op("or",(pcp),val)
this_cpu_or  macro  include/linux/percpu.h  375  # define this_cpu_or(pcp,val) __pcpu_size_call(this_cpu_or_,(pcp),(val))
this_cpu_xor_1  macro  arch/x86/include/asm/percpu.h  402  #define this_cpu_xor_1(pcp,val) percpu_to_op("xor",(pcp),val)
this_cpu_xor_2  macro  arch/x86/include/asm/percpu.h  403  #define this_cpu_xor_2(pcp,val) percpu_to_op("xor",(pcp),val)
this_cpu_xor_4  macro  arch/x86/include/asm/percpu.h  404  #define this_cpu_xor_4(pcp,val) percpu_to_op("xor",(pcp),val)
this_cpu_xor_8  macro  arch/x86/include/asm/percpu.h  459  #define this_cpu_xor_8(pcp,val) percpu_to_op("xor",(pcp),val)
this_cpu_xor  macro  include/linux/percpu.h  391  # define this_cpu_xor(pcp,val) __pcpu_size_call(this_cpu_or_,(pcp),(val))
_this_cpu_generic_add_return  macro  include/linux/percpu.h  403  #define _this_cpu_generic_add_return(pcp,val) ({ typeof(pcp) ret__; unsigned long flags; raw_local_irq_save(flags); __this_cpu_add(pcp, val); ret__ = __this_cpu_read(pcp); raw_local_irq_restore(flags); ret__; })
this_cpu_add_return_1  macro  arch/x86/include/asm/percpu.h  416  #define this_cpu_add_return_1(pcp,val) percpu_add_return_op(pcp,val)
this_cpu_add_return_2  macro  arch/x86/include/asm/percpu.h  417  #define this_cpu_add_return_2(pcp,val) percpu_add_return_op(pcp,val)
this_cpu_add_return_4  macro  arch/x86/include/asm/percpu.h  418  #define this_cpu_add_return_4(pcp,val) percpu_add_return_op(pcp,val)
this_cpu_add_return_8  macro  arch/x86/include/asm/percpu.h  460  #define this_cpu_add_return_8(pcp,val) percpu_add_return_op(pcp,val)
this_cpu_add_return  macro  include/linux/percpu.h  418  # define this_cpu_add_return(pcp,val) __pcpu_size_call_return2(this_cpu_add_return_,pcp,val)
this_cpu_sub_return  macro  include/linux/percpu.h  421  #define this_cpu_sub_return(pcp,val) this_cpu_add_return(pcp,-(val))
this_cpu_inc_return  macro  include/linux/percpu.h  422  #define this_cpu_inc_return(pcp) this_cpu_add_return(pcp,1)
this_cpu_dec_return  macro  include/linux/percpu.h  423  #define this_cpu_dec_return(pcp) this_cpu_add_return(pcp,-1)
_this_cpu_generic_xchg  macro  include/linux/percpu.h  433  #define _this_cpu_generic_xchg(pcp,nval) ({	typeof(pcp) ret__; unsigned long flags; raw_local_irq_save(flags); ret__ = __this_cpu_read(pcp); __this_cpu_write(pcp, nval); raw_local_irq_restore(flags); ret__; })
this_cpu_xchg_1  macro  arch/x86/include/asm/percpu.h  405  #define this_cpu_xchg_1(pcp,nval) percpu_xchg_op(pcp,nval)
this_cpu_xchg_2  macro  arch/x86/include/asm/percpu.h  406  #define this_cpu_xchg_2(pcp,nval) percpu_xchg_op(pcp,nval)
this_cpu_xchg_4  macro  arch/x86/include/asm/percpu.h  407  #define this_cpu_xchg_4(pcp,nval) percpu_xchg_op(pcp,nval)
this_cpu_xchg_8  macro  arch/x86/include/asm/percpu.h  461  #define this_cpu_xchg_8(pcp,nval) percpu_xchg_op(pcp,nval)
this_cpu_xchg  macro  include/linux/percpu.h  449  # define this_cpu_xchg(pcp,nval) __pcpu_size_call_return2(this_cpu_xchg_, (pcp), nval)
_this_cpu_generic_cmpxchg  macro  include/linux/percpu.h  462  #define _this_cpu_generic_cmpxchg(pcp,oval,nval) ({ typeof(pcp) ret__; unsigned long flags; raw_local_irq_save(flags); ret__ = __this_cpu_read(pcp); if (ret__ == (oval)) __this_cpu_write(pcp, nval); raw_local_irq_restore(flags); ret__; })
this_cpu_cmpxchg_1  macro  arch/x86/include/asm/percpu.h  419  #define this_cpu_cmpxchg_1(pcp,oval,nval) percpu_cmpxchg_op(pcp,oval,nval)
this_cpu_cmpxchg_2  macro  arch/x86/include/asm/percpu.h  420  #define this_cpu_cmpxchg_2(pcp,oval,nval) percpu_cmpxchg_op(pcp,oval,nval)
this_cpu_cmpxchg_4  macro  arch/x86/include/asm/percpu.h  421  #define this_cpu_cmpxchg_4(pcp,oval,nval) percpu_cmpxchg_op(pcp,oval,nval)
this_cpu_cmpxchg_8  macro  arch/x86/include/asm/percpu.h  462  #define this_cpu_cmpxchg_8(pcp,oval,nval) percpu_cmpxchg_op(pcp,oval,nval)
this_cpu_cmpxchg  macro  include/linux/percpu.h  478  # define this_cpu_cmpxchg(pcp,oval,nval) __pcpu_size_call_return2(this_cpu_cmpxchg_, pcp, oval, nval)
_this_cpu_generic_cmpxchg_double  macro  include/linux/percpu.h  498  #define _this_cpu_generic_cmpxchg_double(pcp1,pcp2,oval1,oval2,nval1,nval2) ({ int ret__; unsigned long flags; raw_local_irq_save(flags); ret__ = __this_cpu_generic_cmpxchg_double(pcp1, pcp2, oval1, oval2, nval1, nval2); raw_local_irq_restore(flags); ret__; })
this_cpu_cmpxchg_double_1  macro  include/linux/percpu.h  503  # define this_cpu_cmpxchg_double_1(pcp1,pcp2,oval1,oval2,nval1,nval2) _this_cpu_generic_cmpxchg_double(pcp1, pcp2, oval1, oval2, nval1, nval2)
this_cpu_cmpxchg_double_2  macro  include/linux/percpu.h  507  # define this_cpu_cmpxchg_double_2(pcp1,pcp2,oval1,oval2,nval1,nval2) _this_cpu_generic_cmpxchg_double(pcp1, pcp2, oval1, oval2, nval1, nval2)
this_cpu_cmpxchg_double_4  macro  arch/x86/include/asm/percpu.h  436  #define this_cpu_cmpxchg_double_4 percpu_cmpxchg8b_double
this_cpu_cmpxchg_double_8  macro  arch/x86/include/asm/percpu.h  485  #define this_cpu_cmpxchg_double_8 percpu_cmpxchg16b_double
this_cpu_cmpxchg_double  macro  include/linux/percpu.h  518  # define this_cpu_cmpxchg_double(pcp1,pcp2,oval1,oval2,nval1,nval2) __pcpu_double_call_return_bool(this_cpu_cmpxchg_double_, (pcp1), (pcp2), (oval1), (oval2), (nval1), (nval2))
__this_cpu_read_1  macro  arch/x86/include/asm/percpu.h  364  #define __this_cpu_read_1(pcp) percpu_from_op("mov",(pcp),"m"(pcp))
__this_cpu_read_2  macro  arch/x86/include/asm/percpu.h  365  #define __this_cpu_read_2(pcp) percpu_from_op("mov",(pcp),"m"(pcp))
__this_cpu_read_4  macro  arch/x86/include/asm/percpu.h  366  #define __this_cpu_read_4(pcp) percpu_from_op("mov",(pcp),"m"(pcp))
__this_cpu_read_8  macro  arch/x86/include/asm/percpu.h  444  #define __this_cpu_read_8(pcp) percpu_from_op("mov",(pcp),"m"(pcp))
__this_cpu_read  macro  include/linux/percpu.h  548  # define __this_cpu_read(pcp) __pcpu_size_call_return(__this_cpu_read_,(pcp))
__this_cpu_generic_to_op  macro  include/linux/percpu.h  554  #define __this_cpu_generic_to_op(pcp,val,op) do { *__this_cpu_ptr(&(pcp)) op val; } while (0)
__this_cpu_write_1  macro  arch/x86/include/asm/percpu.h  368  #define __this_cpu_write_1(pcp,val) percpu_to_op("mov",(pcp),val)
__this_cpu_write_2  macro  arch/x86/include/asm/percpu.h  369  #define __this_cpu_write_2(pcp,val) percpu_to_op("mov",(pcp),val)
__this_cpu_write_4  macro  arch/x86/include/asm/percpu.h  370  #define __this_cpu_write_4(pcp,val) percpu_to_op("mov",(pcp),val)
__this_cpu_write_8  macro  arch/x86/include/asm/percpu.h  445  #define __this_cpu_write_8(pcp,val) percpu_to_op("mov",(pcp),val)
__this_cpu_write  macro  include/linux/percpu.h  569  # define __this_cpu_write(pcp,val) __pcpu_size_call(__this_cpu_write_,(pcp),(val))
__this_cpu_add_1  macro  arch/x86/include/asm/percpu.h  371  #define __this_cpu_add_1(pcp,val) percpu_add_op((pcp),val)
__this_cpu_add_2  macro  arch/x86/include/asm/percpu.h  372  #define __this_cpu_add_2(pcp,val) percpu_add_op((pcp),val)
__this_cpu_add_4  macro  arch/x86/include/asm/percpu.h  373  #define __this_cpu_add_4(pcp,val) percpu_add_op((pcp),val)
__this_cpu_add_8  macro  arch/x86/include/asm/percpu.h  446  #define __this_cpu_add_8(pcp,val) percpu_add_op((pcp),val)
__this_cpu_add  macro  include/linux/percpu.h  585  # define __this_cpu_add(pcp,val) __pcpu_size_call(__this_cpu_add_,(pcp),(val))
__this_cpu_sub  macro  include/linux/percpu.h  589  # define __this_cpu_sub(pcp,val) __this_cpu_add((pcp),-(val))
__this_cpu_inc  macro  include/linux/percpu.h  593  # define __this_cpu_inc(pcp) __this_cpu_add((pcp),1)
__this_cpu_dec  macro  include/linux/percpu.h  597  # define __this_cpu_dec(pcp) __this_cpu_sub((pcp),1)
__this_cpu_and_1  macro  arch/x86/include/asm/percpu.h  374  #define __this_cpu_and_1(pcp,val) percpu_to_op("and",(pcp),val)
__this_cpu_and_2  macro  arch/x86/include/asm/percpu.h  375  #define __this_cpu_and_2(pcp,val) percpu_to_op("and",(pcp),val)
__this_cpu_and_4  macro  arch/x86/include/asm/percpu.h  376  #define __this_cpu_and_4(pcp,val) percpu_to_op("and",(pcp),val)
__this_cpu_and_8  macro  arch/x86/include/asm/percpu.h  447  #define __this_cpu_and_8(pcp,val) percpu_to_op("and",(pcp),val)
__this_cpu_and  macro  include/linux/percpu.h  613  # define __this_cpu_and(pcp,val) __pcpu_size_call(__this_cpu_and_,(pcp),(val))
__this_cpu_or_1  macro  arch/x86/include/asm/percpu.h  377  #define __this_cpu_or_1(pcp,val) percpu_to_op("or",(pcp),val)
__this_cpu_or_2  macro  arch/x86/include/asm/percpu.h  378  #define __this_cpu_or_2(pcp,val) percpu_to_op("or",(pcp),val)
__this_cpu_or_4  macro  arch/x86/include/asm/percpu.h  379  #define __this_cpu_or_4(pcp,val) percpu_to_op("or",(pcp),val)
__this_cpu_or_8  macro  arch/x86/include/asm/percpu.h  448  #define __this_cpu_or_8(pcp,val) percpu_to_op("or",(pcp),val)
__this_cpu_or  macro  include/linux/percpu.h  629  # define __this_cpu_or(pcp,val) __pcpu_size_call(__this_cpu_or_,(pcp),(val))
__this_cpu_xor_1  macro  arch/x86/include/asm/percpu.h  380  #define __this_cpu_xor_1(pcp,val) percpu_to_op("xor",(pcp),val)
__this_cpu_xor_2  macro  arch/x86/include/asm/percpu.h  381  #define __this_cpu_xor_2(pcp,val) percpu_to_op("xor",(pcp),val)
__this_cpu_xor_4  macro  arch/x86/include/asm/percpu.h  382  #define __this_cpu_xor_4(pcp,val) percpu_to_op("xor",(pcp),val)
__this_cpu_xor_8  macro  arch/x86/include/asm/percpu.h  449  #define __this_cpu_xor_8(pcp,val) percpu_to_op("xor",(pcp),val)
__this_cpu_xor  macro  include/linux/percpu.h  645  # define __this_cpu_xor(pcp,val) __pcpu_size_call(__this_cpu_xor_,(pcp),(val))
__this_cpu_generic_add_return  macro  include/linux/percpu.h  652  #define __this_cpu_generic_add_return(pcp,val) ({ __this_cpu_add(pcp, val); __this_cpu_read(pcp); })
__this_cpu_add_return_1  macro  arch/x86/include/asm/percpu.h  409  #define __this_cpu_add_return_1(pcp,val) percpu_add_return_op(pcp,val)
__this_cpu_add_return_2  macro  arch/x86/include/asm/percpu.h  410  #define __this_cpu_add_return_2(pcp,val) percpu_add_return_op(pcp,val)
__this_cpu_add_return_4  macro  arch/x86/include/asm/percpu.h  411  #define __this_cpu_add_return_4(pcp,val) percpu_add_return_op(pcp,val)
__this_cpu_add_return_8  macro  arch/x86/include/asm/percpu.h  450  #define __this_cpu_add_return_8(pcp,val) percpu_add_return_op(pcp,val)
__this_cpu_add_return  macro  include/linux/percpu.h  668  # define __this_cpu_add_return(pcp,val) __pcpu_size_call_return2(__this_cpu_add_return_, pcp, val)
__this_cpu_sub_return  macro  include/linux/percpu.h  671  #define __this_cpu_sub_return(pcp,val) __this_cpu_add_return(pcp,-(val))
__this_cpu_inc_return  macro  include/linux/percpu.h  672  #define __this_cpu_inc_return(pcp) __this_cpu_add_return(pcp,1)
__this_cpu_dec_return  macro  include/linux/percpu.h  673  #define __this_cpu_dec_return(pcp) __this_cpu_add_return(pcp,-1)
__this_cpu_generic_xchg  macro  include/linux/percpu.h  680  #define __this_cpu_generic_xchg(pcp,nval) ({	typeof(pcp) ret__; ret__ = __this_cpu_read(pcp); __this_cpu_write(pcp, nval); ret__; })
__this_cpu_xchg_1  macro  arch/x86/include/asm/percpu.h  383  #define __this_cpu_xchg_1(pcp,val) percpu_xchg_op(pcp,val)
__this_cpu_xchg_2  macro  arch/x86/include/asm/percpu.h  384  #define __this_cpu_xchg_2(pcp,val) percpu_xchg_op(pcp,val)
__this_cpu_xchg_4  macro  arch/x86/include/asm/percpu.h  385  #define __this_cpu_xchg_4(pcp,val) percpu_xchg_op(pcp,val)
__this_cpu_xchg_8  macro  arch/x86/include/asm/percpu.h  451  #define __this_cpu_xchg_8(pcp,nval) percpu_xchg_op(pcp,nval)
__this_cpu_xchg  macro  include/linux/percpu.h  696  # define __this_cpu_xchg(pcp,nval) __pcpu_size_call_return2(__this_cpu_xchg_, (pcp), nval)
__this_cpu_generic_cmpxchg  macro  include/linux/percpu.h  706  #define __this_cpu_generic_cmpxchg(pcp,oval,nval) ({ typeof(pcp) ret__; ret__ = __this_cpu_read(pcp); if (ret__ == (oval)) __this_cpu_write(pcp, nval); ret__; })
__this_cpu_cmpxchg_1  macro  arch/x86/include/asm/percpu.h  412  #define __this_cpu_cmpxchg_1(pcp,oval,nval) percpu_cmpxchg_op(pcp,oval,nval)
__this_cpu_cmpxchg_2  macro  arch/x86/include/asm/percpu.h  413  #define __this_cpu_cmpxchg_2(pcp,oval,nval) percpu_cmpxchg_op(pcp,oval,nval)
__this_cpu_cmpxchg_4  macro  arch/x86/include/asm/percpu.h  414  #define __this_cpu_cmpxchg_4(pcp,oval,nval) percpu_cmpxchg_op(pcp,oval,nval)
__this_cpu_cmpxchg_8  macro  arch/x86/include/asm/percpu.h  452  #define __this_cpu_cmpxchg_8(pcp,oval,nval) percpu_cmpxchg_op(pcp,oval,nval)
__this_cpu_cmpxchg  macro  include/linux/percpu.h  722  # define __this_cpu_cmpxchg(pcp,oval,nval) __pcpu_size_call_return2(__this_cpu_cmpxchg_, pcp, oval, nval)
__this_cpu_generic_cmpxchg_double  macro  include/linux/percpu.h  735  #define __this_cpu_generic_cmpxchg_double(pcp1,pcp2,oval1,oval2,nval1,nval2) ({ int __ret = 0; if (__this_cpu_read(pcp1) == (oval1) && __this_cpu_read(pcp2)  == (oval2)) { __this_cpu_write(pcp1, (nval1)); __this_cpu_write(pcp2, (nval2)); __ret = 1; } (__ret); })
__this_cpu_cmpxchg_double_1  macro  include/linux/percpu.h  740  # define __this_cpu_cmpxchg_double_1(pcp1,pcp2,oval1,oval2,nval1,nval2) __this_cpu_generic_cmpxchg_double(pcp1, pcp2, oval1, oval2, nval1, nval2)
__this_cpu_cmpxchg_double_2  macro  include/linux/percpu.h  744  # define __this_cpu_cmpxchg_double_2(pcp1,pcp2,oval1,oval2,nval1,nval2) __this_cpu_generic_cmpxchg_double(pcp1, pcp2, oval1, oval2, nval1, nval2)
__this_cpu_cmpxchg_double_4  macro  arch/x86/include/asm/percpu.h  435  #define __this_cpu_cmpxchg_double_4 percpu_cmpxchg8b_double
__this_cpu_cmpxchg_double_8  macro  arch/x86/include/asm/percpu.h  484  #define __this_cpu_cmpxchg_double_8 percpu_cmpxchg16b_double
__this_cpu_cmpxchg_double  macro  include/linux/percpu.h  755  # define __this_cpu_cmpxchg_double(pcp1,pcp2,oval1,oval2,nval1,nval2) __pcpu_double_call_return_bool(__this_cpu_cmpxchg_double_, (pcp1), (pcp2), (oval1), (oval2), (nval1), (nval2))
_ASM_X86_MODULE_H  macro  arch/x86/include/asm/module.h  2  #define _ASM_X86_MODULE_H
MODULE_PROC_FAMILY  macro  arch/x86/include/asm/module.h  55  #define MODULE_PROC_FAMILY "GEODE "
MODULE_ARCH_VERMAGIC  macro  arch/x86/include/asm/module.h  61  # define MODULE_ARCH_VERMAGIC MODULE_PROC_FAMILY
_LINUX_LINKAGE_H  macro  include/linux/linkage.h  2  #define _LINUX_LINKAGE_H
CPP_ASMLINKAGE  macro  include/linux/linkage.h  10  #define CPP_ASMLINKAGE
asmlinkage  macro  arch/x86/include/asm/linkage.h  10  #define asmlinkage CPP_ASMLINKAGE __attribute__((regparm(0)))
__page_aligned_data  macro  include/linux/linkage.h  17  #define __page_aligned_data __section(.data..page_aligned) __aligned(PAGE_SIZE)
__page_aligned_bss  macro  include/linux/linkage.h  18  #define __page_aligned_bss __section(.bss..page_aligned) __aligned(PAGE_SIZE)
__PAGE_ALIGNED_DATA  macro  include/linux/linkage.h  26  #define __PAGE_ALIGNED_DATA .section ".data..page_aligned","aw"
__PAGE_ALIGNED_BSS  macro  include/linux/linkage.h  27  #define __PAGE_ALIGNED_BSS .section ".bss..page_aligned","aw"
asmlinkage_protect  macro  arch/x86/include/asm/linkage.h  24  #define asmlinkage_protect(n,ret,args...) __asmlinkage_protect##n(ret, ##args)
__ALIGN  macro  arch/x86/include/asm/linkage.h  54  #define __ALIGN .p2align 4,0x90
__ALIGN_STR  macro  arch/x86/include/asm/linkage.h  55  #define __ALIGN_STR __stringify(__ALIGN)
ALIGN_STR  macro  include/linux/linkage.h  58  #define ALIGN_STR __ALIGN_STR
ENTRY  macro  include/linux/linkage.h  64  #define ENTRY(name) .globl name; ALIGN; name:
WEAK  macro  include/linux/linkage.h  71  #define WEAK(name) .weak name; name:
END  macro  include/linux/linkage.h  76  #define END(name) .size name, .-name
ENDPROC  macro  include/linux/linkage.h  86  #define ENDPROC(name) .type name, @function; END(name)
_LINUX_STDDEF_H  macro  include/linux/stddef.h  2  #define _LINUX_STDDEF_H
NULL  macro  include/linux/stddef.h  8  #define NULL ((void *)0)
offsetof  macro  include/linux/stddef.h  19  #define offsetof(TYPE,MEMBER) ((size_t) &((TYPE *)0)->MEMBER)
_LINUX_TYPES_H  macro  include/linux/types.h  2  #define _LINUX_TYPES_H
__EXPORTED_HEADERS__  macro  include/linux/types.h  4  #define __EXPORTED_HEADERS__
_SIZE_T  macro  include/linux/types.h  53  #define _SIZE_T
_SSIZE_T  macro  include/linux/types.h  58  #define _SSIZE_T
_PTRDIFF_T  macro  include/linux/types.h  63  #define _PTRDIFF_T
_TIME_T  macro  include/linux/types.h  68  #define _TIME_T
_CLOCK_T  macro  include/linux/types.h  73  #define _CLOCK_T
_CADDR_T  macro  include/linux/types.h  78  #define _CADDR_T
__BIT_TYPES_DEFINED__  macro  include/linux/types.h  95  #define __BIT_TYPES_DEFINED__
aligned_u64  macro  include/linux/types.h  117  #define aligned_u64 __u64 __attribute__((aligned(8)))
aligned_be64  macro  include/linux/types.h  118  #define aligned_be64 __be64 __attribute__((aligned(8)))
aligned_le64  macro  include/linux/types.h  119  #define aligned_le64 __le64 __attribute__((aligned(8)))
pgoff_t  macro  include/linux/types.h  142  #define pgoff_t unsigned long
list_head  struct  include/linux/types.h  185  struct list_head {
hlist_head  struct  include/linux/types.h  189  struct hlist_head {
hlist_node  struct  include/linux/types.h  193  struct hlist_node {
ustat  struct  include/linux/types.h  197  struct ustat {
callback_head  struct  include/linux/types.h  209  struct callback_head {
rcu_head  macro  include/linux/types.h  213  #define rcu_head callback_head
_LINUX_LOG2_H  macro  include/linux/log2.h  13  #define _LINUX_LOG2_H
____ilog2_NaN  prototype  include/linux/log2.h  22  int ____ilog2_NaN(void);
__ilog2_u32  function  include/linux/log2.h  32  int __ilog2_u32(u32 n)
__ilog2_u64  function  include/linux/log2.h  40  int __ilog2_u64(u64 n)
is_power_of_2  function  include/linux/log2.h  52  bool is_power_of_2(unsigned long n)
__roundup_pow_of_two  function  include/linux/log2.h  61  unsigned long __roundup_pow_of_two(unsigned long n)
__rounddown_pow_of_two  function  include/linux/log2.h  70  unsigned long __rounddown_pow_of_two(unsigned long n)
ilog2  macro  include/linux/log2.h  158  #define ilog2(n) ( __builtin_constant_p(n) ? ( (n) < 1 ? ____ilog2_NaN() : (n) & (1ULL << 63) ? 63 : (n) & (1ULL << 62) ? 62 : (n) & (1ULL << 61) ? 61 : (n) & (1ULL << 60) ? 60 : (n) & (1ULL << 59) ? 59 : (n) & (1ULL << 58) ? 58 : (n) & (1ULL << 57) ? 57 : (n) & (1ULL << 56) ? 56 : (n) & (1ULL << 55) ? 55 : (n) & (1ULL << 54) ? 54 : (n) & (1ULL << 53) ? 53 : (n) & (1ULL << 52) ? 52 : (n) & (1ULL << 51) ? 51 : (n) & (1ULL << 50) ? 50 : (n) & (1ULL << 49) ? 49 : (n) & (1ULL << 48) ? 48 : (n) & (1ULL << 47) ? 47 : (n) & (1ULL << 46) ? 46 : (n) & (1ULL << 45) ? 45 : (n) & (1ULL << 44) ? 44 : (n) & (1ULL << 43) ? 43 : (n) & (1ULL << 42) ? 42 : (n) & (1ULL << 41) ? 41 : (n) & (1ULL << 40) ? 40 : (n) & (1ULL << 39) ? 39 : (n) & (1ULL << 38) ? 38 : (n) & (1ULL << 37) ? 37 : (n) & (1ULL << 36) ? 36 : (n) & (1ULL << 35) ? 35 : (n) & (1ULL << 34) ? 34 : (n) & (1ULL << 33) ? 33 : (n) & (1ULL << 32) ? 32 : (n) & (1ULL << 31) ? 31 : (n) & (1ULL << 30) ? 30 : (n) & (1ULL << 29) ? 29 : (n) & (1ULL << 28) ? 28 : (n) & (1ULL << 27) ? 27 : (n) & (1ULL << 26) ? 26 : (n) & (1ULL << 25) ? 25 : (n) & (1ULL << 24) ? 24 : (n) & (1ULL << 23) ? 23 : (n) & (1ULL << 22) ? 22 : (n) & (1ULL << 21) ? 21 : (n) & (1ULL << 20) ? 20 : (n) & (1ULL << 19) ? 19 : (n) & (1ULL << 18) ? 18 : (n) & (1ULL << 17) ? 17 : (n) & (1ULL << 16) ? 16 : (n) & (1ULL << 15) ? 15 : (n) & (1ULL << 14) ? 14 : (n) & (1ULL << 13) ? 13 : (n) & (1ULL << 12) ? 12 : (n) & (1ULL << 11) ? 11 : (n) & (1ULL << 10) ? 10 : (n) & (1ULL <<  9) ?  9 : (n) & (1ULL <<  8) ?  8 : (n) & (1ULL <<  7) ?  7 : (n) & (1ULL <<  6) ?  6 : (n) & (1ULL <<  5) ?  5 : (n) & (1ULL <<  4) ?  4 : (n) & (1ULL <<  3) ?  3 : (n) & (1ULL <<  2) ?  2 : (n) & (1ULL <<  1) ?  1 : (n) & (1ULL <<  0) ?  0 : ____ilog2_NaN() ) : (sizeof(n) <= 4) ? __ilog2_u32(n) : __ilog2_u64(n) )
roundup_pow_of_two  macro  include/linux/log2.h  175  #define roundup_pow_of_two(n) ( __builtin_constant_p(n) ? ( (n == 1) ? 1 : (1UL << (ilog2((n) - 1) + 1)) ) : __roundup_pow_of_two(n) )
rounddown_pow_of_two  macro  include/linux/log2.h  190  #define rounddown_pow_of_two(n) ( __builtin_constant_p(n) ? ( (1UL << ilog2(n))) : __rounddown_pow_of_two(n) )
order_base_2  macro  include/linux/log2.h  206  #define order_base_2(n) ilog2(roundup_pow_of_two(n))
TYPECHECK_H_INCLUDED  macro  include/linux/typecheck.h  2  #define TYPECHECK_H_INCLUDED
typecheck  macro  include/linux/typecheck.h  13  #define typecheck(type,x) ({	type __dummy; typeof(x) __dummy2; (void)(&__dummy == &__dummy2); 1; })
typecheck_fn  macro  include/linux/typecheck.h  22  #define typecheck_fn(type,function) ({	typeof(type) __tmp = function; (void)__tmp; })
__KERNEL_PRINTK__  macro  include/linux/printk.h  2  #define __KERNEL_PRINTK__
printk_get_level  function  include/linux/printk.h  10  static inline int printk_get_level(const char *buffer)
printk_skip_level  function  include/linux/printk.h  22  static inline const char *printk_skip_level(const char *buffer)
console_loglevel  macro  include/linux/printk.h  36  #define console_loglevel (console_printk[0])
default_message_loglevel  macro  include/linux/printk.h  37  #define default_message_loglevel (console_printk[1])
minimum_console_loglevel  macro  include/linux/printk.h  38  #define minimum_console_loglevel (console_printk[2])
default_console_loglevel  macro  include/linux/printk.h  39  #define default_console_loglevel (console_printk[3])
console_silent  function  include/linux/printk.h  41  static inline void console_silent(void)
console_verbose  function  include/linux/printk.h  46  static inline void console_verbose(void)
va_format  struct  include/linux/printk.h  52  struct va_format {
FW_BUG  macro  include/linux/printk.h  77  #define FW_BUG "[Firmware Bug]: "
FW_WARN  macro  include/linux/printk.h  78  #define FW_WARN "[Firmware Warn]: "
FW_INFO  macro  include/linux/printk.h  79  #define FW_INFO "[Firmware Info]: "
HW_ERR  macro  include/linux/printk.h  86  #define HW_ERR "[Hardware Error]: "
no_printk  function  include/linux/printk.h  93  int no_printk(const char *fmt,...)
early_printk  prototype  include/linux/printk.h  99  void early_printk(const char *fmt,...);
printk_needs_cpu  prototype  include/linux/printk.h  101  extern int printk_needs_cpu(int cpu);
printk_tick  prototype  include/linux/printk.h  102  extern void printk_tick(void);
vprintk_emit  prototype  include/linux/printk.h  108  int vprintk_emit(int facility,int level,const char *dict, size_t dictlen,const char *fmt, va_list args);
vprintk  function  include/linux/printk.h  144  int vprintk(const char *s,va_list args)
printk_emit  prototype  include/linux/printk.h  116  asmlinkage int printk_emit(int facility,int level,const char *dict, size_t dictlen,const char *fmt, ...);
printk  function  include/linux/printk.h  149  int printk(const char *s,...)
printk_sched  function  include/linux/printk.h  154  int printk_sched(const char *s,...)
__printk_ratelimit  prototype  include/linux/printk.h  131  extern int __printk_ratelimit(const char *func);
printk_ratelimit  function  include/linux/printk.h  158  static inline int printk_ratelimit(void)
printk_timed_ratelimit  function  include/linux/printk.h  163  static inline bool printk_timed_ratelimit(unsigned long *caller_jiffies,unsigned int interval_msec)
log_buf_kexec_setup  function  include/linux/printk.h  168  static inline void log_buf_kexec_setup(void)
setup_log_buf  function  include/linux/printk.h  172  static inline void setup_log_buf(int early)
pr_fmt  macro  include/linux/printk.h  180  #define pr_fmt(fmt) fmt
pr_emerg  macro  include/linux/printk.h  184  #define pr_emerg(fmt,...) printk(KERN_EMERG pr_fmt(fmt), ##__VA_ARGS__)
pr_alert  macro  include/linux/printk.h  186  #define pr_alert(fmt,...) printk(KERN_ALERT pr_fmt(fmt), ##__VA_ARGS__)
pr_crit  macro  include/linux/printk.h  188  #define pr_crit(fmt,...) printk(KERN_CRIT pr_fmt(fmt), ##__VA_ARGS__)
pr_err  macro  include/linux/printk.h  190  #define pr_err(fmt,...) printk(KERN_ERR pr_fmt(fmt), ##__VA_ARGS__)
pr_warning  macro  include/linux/printk.h  192  #define pr_warning(fmt,...) printk(KERN_WARNING pr_fmt(fmt), ##__VA_ARGS__)
pr_warn  macro  include/linux/printk.h  193  #define pr_warn pr_warning
pr_notice  macro  include/linux/printk.h  195  #define pr_notice(fmt,...) printk(KERN_NOTICE pr_fmt(fmt), ##__VA_ARGS__)
pr_info  macro  include/linux/printk.h  197  #define pr_info(fmt,...) printk(KERN_INFO pr_fmt(fmt), ##__VA_ARGS__)
pr_cont  macro  include/linux/printk.h  199  #define pr_cont(fmt,...) printk(KERN_CONT fmt, ##__VA_ARGS__)
pr_devel  macro  include/linux/printk.h  207  #define pr_devel(fmt,...) no_printk(KERN_DEBUG pr_fmt(fmt), ##__VA_ARGS__)
pr_debug  macro  include/linux/printk.h  220  #define pr_debug(fmt,...) no_printk(KERN_DEBUG pr_fmt(fmt), ##__VA_ARGS__)
printk_once  macro  include/linux/printk.h  239  #define printk_once(fmt,...) no_printk(fmt, ##__VA_ARGS__)
pr_emerg_once  macro  include/linux/printk.h  243  #define pr_emerg_once(fmt,...) printk_once(KERN_EMERG pr_fmt(fmt), ##__VA_ARGS__)
pr_alert_once  macro  include/linux/printk.h  245  #define pr_alert_once(fmt,...) printk_once(KERN_ALERT pr_fmt(fmt), ##__VA_ARGS__)
pr_crit_once  macro  include/linux/printk.h  247  #define pr_crit_once(fmt,...) printk_once(KERN_CRIT pr_fmt(fmt), ##__VA_ARGS__)
pr_err_once  macro  include/linux/printk.h  249  #define pr_err_once(fmt,...) printk_once(KERN_ERR pr_fmt(fmt), ##__VA_ARGS__)
pr_warn_once  macro  include/linux/printk.h  251  #define pr_warn_once(fmt,...) printk_once(KERN_WARNING pr_fmt(fmt), ##__VA_ARGS__)
pr_notice_once  macro  include/linux/printk.h  253  #define pr_notice_once(fmt,...) printk_once(KERN_NOTICE pr_fmt(fmt), ##__VA_ARGS__)
pr_info_once  macro  include/linux/printk.h  255  #define pr_info_once(fmt,...) printk_once(KERN_INFO pr_fmt(fmt), ##__VA_ARGS__)
pr_cont_once  macro  include/linux/printk.h  257  #define pr_cont_once(fmt,...) printk_once(KERN_CONT pr_fmt(fmt), ##__VA_ARGS__)
pr_debug_once  macro  include/linux/printk.h  264  #define pr_debug_once(fmt,...) no_printk(KERN_DEBUG pr_fmt(fmt), ##__VA_ARGS__)
printk_ratelimited  macro  include/linux/printk.h  283  #define printk_ratelimited(fmt,...) no_printk(fmt, ##__VA_ARGS__)
pr_emerg_ratelimited  macro  include/linux/printk.h  287  #define pr_emerg_ratelimited(fmt,...) printk_ratelimited(KERN_EMERG pr_fmt(fmt), ##__VA_ARGS__)
pr_alert_ratelimited  macro  include/linux/printk.h  289  #define pr_alert_ratelimited(fmt,...) printk_ratelimited(KERN_ALERT pr_fmt(fmt), ##__VA_ARGS__)
pr_crit_ratelimited  macro  include/linux/printk.h  291  #define pr_crit_ratelimited(fmt,...) printk_ratelimited(KERN_CRIT pr_fmt(fmt), ##__VA_ARGS__)
pr_err_ratelimited  macro  include/linux/printk.h  293  #define pr_err_ratelimited(fmt,...) printk_ratelimited(KERN_ERR pr_fmt(fmt), ##__VA_ARGS__)
pr_warn_ratelimited  macro  include/linux/printk.h  295  #define pr_warn_ratelimited(fmt,...) printk_ratelimited(KERN_WARNING pr_fmt(fmt), ##__VA_ARGS__)
pr_notice_ratelimited  macro  include/linux/printk.h  297  #define pr_notice_ratelimited(fmt,...) printk_ratelimited(KERN_NOTICE pr_fmt(fmt), ##__VA_ARGS__)
pr_info_ratelimited  macro  include/linux/printk.h  299  #define pr_info_ratelimited(fmt,...) printk_ratelimited(KERN_INFO pr_fmt(fmt), ##__VA_ARGS__)
pr_debug_ratelimited  macro  include/linux/printk.h  307  #define pr_debug_ratelimited(fmt,...) no_printk(KERN_DEBUG pr_fmt(fmt), ##__VA_ARGS__)
hex_dump_to_buffer  prototype  include/linux/printk.h  319  extern void hex_dump_to_buffer(const void *buf,size_t len,int rowsize, int groupsize,char *linebuf, size_t linebuflen, bool ascii);
print_hex_dump  function  include/linux/printk.h  329  static inline void print_hex_dump(const char *level,const char *prefix_str,int prefix_type, int rowsize, int groupsize,const void *buf, size_t len, bool ascii)
print_hex_dump_bytes  function  include/linux/printk.h  333  static inline void print_hex_dump_bytes(const char *prefix_str,int prefix_type,const void *buf, size_t len)
_DYNAMIC_DEBUG_H  macro  include/linux/dynamic_debug.h  2  #define _DYNAMIC_DEBUG_H
_ddebug  struct  include/linux/dynamic_debug.h  9  struct _ddebug {
_DPRINTK_FLAGS_NONE  macro  include/linux/dynamic_debug.h  24  #define _DPRINTK_FLAGS_NONE 0
_DPRINTK_FLAGS_PRINT  macro  include/linux/dynamic_debug.h  25  #define _DPRINTK_FLAGS_PRINT (1<<0)
_DPRINTK_FLAGS_INCL_MODNAME  macro  include/linux/dynamic_debug.h  26  #define _DPRINTK_FLAGS_INCL_MODNAME (1<<1)
_DPRINTK_FLAGS_INCL_FUNCNAME  macro  include/linux/dynamic_debug.h  27  #define _DPRINTK_FLAGS_INCL_FUNCNAME (1<<2)
_DPRINTK_FLAGS_INCL_LINENO  macro  include/linux/dynamic_debug.h  28  #define _DPRINTK_FLAGS_INCL_LINENO (1<<3)
_DPRINTK_FLAGS_INCL_TID  macro  include/linux/dynamic_debug.h  29  #define _DPRINTK_FLAGS_INCL_TID (1<<4)
_DPRINTK_FLAGS_DEFAULT  macro  include/linux/dynamic_debug.h  33  #define _DPRINTK_FLAGS_DEFAULT 0
ddebug_add_module  prototype  include/linux/dynamic_debug.h  40  int ddebug_add_module(struct _ddebug *tab,unsigned int n,const char *modname);
ddebug_remove_module  function  include/linux/dynamic_debug.h  103  static inline int ddebug_remove_module(const char *mod)
__dynamic_pr_debug  prototype  include/linux/dynamic_debug.h  45  int __dynamic_pr_debug(struct _ddebug *descriptor,const char *fmt,...);
ddebug_dyndbg_module_param_cb  function  include/linux/dynamic_debug.h  109  static inline int ddebug_dyndbg_module_param_cb(char *param,char *val,const char *modname)
__dynamic_dev_dbg  prototype  include/linux/dynamic_debug.h  54  int __dynamic_dev_dbg(struct _ddebug *descriptor,const struct device *dev,const char *fmt, ...);
__dynamic_netdev_dbg  prototype  include/linux/dynamic_debug.h  61  int __dynamic_netdev_dbg(struct _ddebug *descriptor,const struct net_device *dev,const char *fmt, ...);
DEFINE_DYNAMIC_DEBUG_METADATA  macro  include/linux/dynamic_debug.h  72  #define DEFINE_DYNAMIC_DEBUG_METADATA(name,fmt) static struct _ddebug  __aligned(8) __attribute__((section("__verbose"))) name = { .modname = KBUILD_MODNAME, .function = __func__, .filename = __FILE__, .format = (fmt), .lineno = __LINE__, .flags =  _DPRINTK_FLAGS_DEFAULT, }
dynamic_pr_debug  macro  include/linux/dynamic_debug.h  121  #define dynamic_pr_debug(fmt,...) do { if (0) printk(KERN_DEBUG pr_fmt(fmt), ##__VA_ARGS__); } while (0)
dynamic_dev_dbg  macro  include/linux/dynamic_debug.h  123  #define dynamic_dev_dbg(dev,fmt,...) do { if (0) dev_printk(KERN_DEBUG, dev, fmt, ##__VA_ARGS__); } while (0)
dynamic_netdev_dbg  macro  include/linux/dynamic_debug.h  96  #define dynamic_netdev_dbg(dev,fmt,...) do { DEFINE_DYNAMIC_DEBUG_METADATA(descriptor, fmt); if (unlikely(descriptor.flags & _DPRINTK_FLAGS_PRINT)) __dynamic_netdev_dbg(&descriptor, dev, fmt, ##__VA_ARGS__); } while (0)
_ASM_X86_BYTEORDER_H  macro  arch/x86/include/uapi/asm/byteorder.h  2  #define _ASM_X86_BYTEORDER_H
_UAPI_LINUX_KERNEL_H  macro  include/uapi/linux/kernel.h  2  #define _UAPI_LINUX_KERNEL_H
__ALIGN_KERNEL  macro  include/uapi/linux/kernel.h  9  #define __ALIGN_KERNEL(x,a) __ALIGN_KERNEL_MASK(x,(typeof(x))(a) - 1)
__ALIGN_KERNEL_MASK  macro  include/uapi/linux/kernel.h  10  #define __ALIGN_KERNEL_MASK(x,mask) (((x) + (mask)) & ~(mask))
_ASM_X86_DIV64_H  macro  arch/x86/include/asm/div64.h  2  #define _ASM_X86_DIV64_H
do_div  macro  include/asm-generic/div64.h  50  # define do_div(n,base) ({ uint32_t __base = (base); uint32_t __rem; (void)(((typeof((n)) *)0) == ((uint64_t *)0)); if (likely(((n) >> 32) == 0)) { __rem = (uint32_t)(n) % __base; (n) = (uint32_t)(n) / __base; } else __rem = __div64_32(&(n), __base); __rem; })
div_u64_rem  function  include/linux/math64.h  53  static inline u64 div_u64_rem(u64 dividend,u32 divisor,u32 *remainder)
_UAPI_LINUX_SCHED_H  macro  include/uapi/linux/sched.h  2  #define _UAPI_LINUX_SCHED_H
CSIGNAL  macro  include/uapi/linux/sched.h  7  #define CSIGNAL 0x000000ff
CLONE_VM  macro  include/uapi/linux/sched.h  8  #define CLONE_VM 0x00000100
CLONE_FS  macro  include/uapi/linux/sched.h  9  #define CLONE_FS 0x00000200
CLONE_FILES  macro  include/uapi/linux/sched.h  10  #define CLONE_FILES 0x00000400
CLONE_SIGHAND  macro  include/uapi/linux/sched.h  11  #define CLONE_SIGHAND 0x00000800
CLONE_PTRACE  macro  include/uapi/linux/sched.h  12  #define CLONE_PTRACE 0x00002000
CLONE_VFORK  macro  include/uapi/linux/sched.h  13  #define CLONE_VFORK 0x00004000
CLONE_PARENT  macro  include/uapi/linux/sched.h  14  #define CLONE_PARENT 0x00008000
CLONE_THREAD  macro  include/uapi/linux/sched.h  15  #define CLONE_THREAD 0x00010000
CLONE_NEWNS  macro  include/uapi/linux/sched.h  16  #define CLONE_NEWNS 0x00020000
CLONE_SYSVSEM  macro  include/uapi/linux/sched.h  17  #define CLONE_SYSVSEM 0x00040000
CLONE_SETTLS  macro  include/uapi/linux/sched.h  18  #define CLONE_SETTLS 0x00080000
CLONE_PARENT_SETTID  macro  include/uapi/linux/sched.h  19  #define CLONE_PARENT_SETTID 0x00100000
CLONE_CHILD_CLEARTID  macro  include/uapi/linux/sched.h  20  #define CLONE_CHILD_CLEARTID 0x00200000
CLONE_DETACHED  macro  include/uapi/linux/sched.h  21  #define CLONE_DETACHED 0x00400000
CLONE_UNTRACED  macro  include/uapi/linux/sched.h  22  #define CLONE_UNTRACED 0x00800000
CLONE_CHILD_SETTID  macro  include/uapi/linux/sched.h  23  #define CLONE_CHILD_SETTID 0x01000000
CLONE_NEWUTS  macro  include/uapi/linux/sched.h  26  #define CLONE_NEWUTS 0x04000000
CLONE_NEWIPC  macro  include/uapi/linux/sched.h  27  #define CLONE_NEWIPC 0x08000000
CLONE_NEWUSER  macro  include/uapi/linux/sched.h  28  #define CLONE_NEWUSER 0x10000000
CLONE_NEWPID  macro  include/uapi/linux/sched.h  29  #define CLONE_NEWPID 0x20000000
CLONE_NEWNET  macro  include/uapi/linux/sched.h  30  #define CLONE_NEWNET 0x40000000
CLONE_IO  macro  include/uapi/linux/sched.h  31  #define CLONE_IO 0x80000000
SCHED_NORMAL  macro  include/uapi/linux/sched.h  36  #define SCHED_NORMAL 0
SCHED_FIFO  macro  include/uapi/linux/sched.h  37  #define SCHED_FIFO 1
SCHED_RR  macro  include/uapi/linux/sched.h  38  #define SCHED_RR 2
SCHED_BATCH  macro  include/uapi/linux/sched.h  39  #define SCHED_BATCH 3
SCHED_IDLE  macro  include/uapi/linux/sched.h  41  #define SCHED_IDLE 5
SCHED_RESET_ON_FORK  macro  include/uapi/linux/sched.h  43  #define SCHED_RESET_ON_FORK 0x40000000
_LINUX_CAPABILITY_H  macro  include/linux/capability.h  13  #define _LINUX_CAPABILITY_H
_KERNEL_CAPABILITY_VERSION  macro  include/linux/capability.h  18  #define _KERNEL_CAPABILITY_VERSION _LINUX_CAPABILITY_VERSION_3
_KERNEL_CAPABILITY_U32S  macro  include/linux/capability.h  19  #define _KERNEL_CAPABILITY_U32S _LINUX_CAPABILITY_U32S_3
kernel_cap_struct  struct  include/linux/capability.h  23  typedef struct kernel_cap_struct {
cpu_vfs_cap_data  struct  include/linux/capability.h  28  struct cpu_vfs_cap_data {
_USER_CAP_HEADER_SIZE  macro  include/linux/capability.h  34  #define _USER_CAP_HEADER_SIZE (sizeof(struct __user_cap_header_struct))
_KERNEL_CAP_T_SIZE  macro  include/linux/capability.h  35  #define _KERNEL_CAP_T_SIZE (sizeof(kernel_cap_t))
current_user_ns  macro  include/linux/cred.h  347  #define current_user_ns() (&init_user_ns)
CAP_FOR_EACH_U32  macro  include/linux/capability.h  53  #define CAP_FOR_EACH_U32(__capi) for (__capi = 0; __capi < _KERNEL_CAPABILITY_U32S; ++__capi)
CAP_FS_MASK_B0  macro  include/linux/capability.h  73  # define CAP_FS_MASK_B0 (CAP_TO_MASK(CAP_CHOWN) | CAP_TO_MASK(CAP_MKNOD) | CAP_TO_MASK(CAP_DAC_OVERRIDE) | CAP_TO_MASK(CAP_DAC_READ_SEARCH) | CAP_TO_MASK(CAP_FOWNER) | CAP_TO_MASK(CAP_FSETID))
CAP_FS_MASK_B1  macro  include/linux/capability.h  75  # define CAP_FS_MASK_B1 (CAP_TO_MASK(CAP_MAC_OVERRIDE))
CAP_EMPTY_SET  macro  include/linux/capability.h  81  # define CAP_EMPTY_SET ((kernel_cap_t){{ 0,0 }})
CAP_FULL_SET  macro  include/linux/capability.h  82  # define CAP_FULL_SET ((kernel_cap_t){{ ~0,~0 }})
CAP_FS_SET  macro  include/linux/capability.h  85  # define CAP_FS_SET ((kernel_cap_t){{ CAP_FS_MASK_B0 | CAP_TO_MASK(CAP_LINUX_IMMUTABLE), CAP_FS_MASK_B1 } })
CAP_NFSD_SET  macro  include/linux/capability.h  88  # define CAP_NFSD_SET ((kernel_cap_t){{ CAP_FS_MASK_B0 | CAP_TO_MASK(CAP_SYS_RESOURCE), CAP_FS_MASK_B1 } })
cap_clear  macro  include/linux/capability.h  92  # define cap_clear(c) do { (c) = __cap_empty_set; } while (0)
cap_raise  macro  include/linux/capability.h  94  #define cap_raise(c,flag) ((c).cap[CAP_TO_INDEX(flag)] |= CAP_TO_MASK(flag))
cap_lower  macro  include/linux/capability.h  95  #define cap_lower(c,flag) ((c).cap[CAP_TO_INDEX(flag)] &= ~CAP_TO_MASK(flag))
cap_raised  macro  include/linux/capability.h  96  #define cap_raised(c,flag) ((c).cap[CAP_TO_INDEX(flag)] & CAP_TO_MASK(flag))
CAP_BOP_ALL  macro  include/linux/capability.h  104  #define CAP_BOP_ALL(c,a,b,OP) do { unsigned __capi; CAP_FOR_EACH_U32(__capi) { c.cap[__capi] = a.cap[__capi] OP b.cap[__capi]; } } while (0)
CAP_UOP_ALL  macro  include/linux/capability.h  112  #define CAP_UOP_ALL(c,a,OP) do { unsigned __capi; CAP_FOR_EACH_U32(__capi) { c.cap[__capi] = OP a.cap[__capi]; } } while (0)
cap_combine  function  include/linux/capability.h  115  static inline kernel_cap_t cap_combine(const kernel_cap_t a,const kernel_cap_t b)
cap_intersect  function  include/linux/capability.h  123  static inline kernel_cap_t cap_intersect(const kernel_cap_t a,const kernel_cap_t b)
cap_drop  function  include/linux/capability.h  131  static inline kernel_cap_t cap_drop(const kernel_cap_t a,const kernel_cap_t drop)
cap_invert  function  include/linux/capability.h  138  static inline kernel_cap_t cap_invert(const kernel_cap_t c)
cap_isclear  function  include/linux/capability.h  145  static inline int cap_isclear(const kernel_cap_t a)
cap_issubset  function  include/linux/capability.h  162  static inline int cap_issubset(const kernel_cap_t a,const kernel_cap_t set)
cap_is_fs_cap  function  include/linux/capability.h  171  static inline int cap_is_fs_cap(int cap)
cap_drop_fs_set  function  include/linux/capability.h  177  static inline kernel_cap_t cap_drop_fs_set(const kernel_cap_t a)
cap_raise_fs_set  function  include/linux/capability.h  184  static inline kernel_cap_t cap_raise_fs_set(const kernel_cap_t a,const kernel_cap_t permitted)
cap_drop_nfsd_set  function  include/linux/capability.h  191  static inline kernel_cap_t cap_drop_nfsd_set(const kernel_cap_t a)
cap_raise_nfsd_set  function  include/linux/capability.h  198  static inline kernel_cap_t cap_raise_nfsd_set(const kernel_cap_t a,const kernel_cap_t permitted)
has_capability  prototype  include/linux/capability.h  205  extern bool has_capability(struct task_struct *t,int cap);
has_ns_capability  prototype  include/linux/capability.h  207  extern bool has_ns_capability(struct task_struct *t,struct user_namespace *ns, int cap);
has_capability_noaudit  prototype  include/linux/capability.h  208  extern bool has_capability_noaudit(struct task_struct *t,int cap);
has_ns_capability_noaudit  prototype  include/linux/capability.h  210  extern bool has_ns_capability_noaudit(struct task_struct *t,struct user_namespace *ns, int cap);
capable  prototype  include/linux/capability.h  211  extern bool capable(int cap);
ns_capable  prototype  include/linux/capability.h  212  extern bool ns_capable(struct user_namespace *ns,int cap);
nsown_capable  prototype  include/linux/capability.h  213  extern bool nsown_capable(int cap);
inode_capable  prototype  include/linux/capability.h  214  extern bool inode_capable(const struct inode *inode,int cap);
file_ns_capable  prototype  include/linux/capability.h  215  extern bool file_ns_capable(const struct file *file,struct user_namespace *ns,int cap);
get_vfs_caps_from_disk  prototype  include/linux/capability.h  218  extern int get_vfs_caps_from_disk(const struct dentry *dentry,struct cpu_vfs_cap_data *cpu_caps);
_LINUX_THREADS_H  macro  include/linux/threads.h  2  #define _LINUX_THREADS_H
CONFIG_NR_CPUS  macro  include/linux/threads.h  16  #define CONFIG_NR_CPUS 1
NR_CPUS  macro  include/linux/threads.h  20  #define NR_CPUS CONFIG_NR_CPUS
MIN_THREADS_LEFT_FOR_ROOT  macro  include/linux/threads.h  22  #define MIN_THREADS_LEFT_FOR_ROOT 4
PID_MAX_DEFAULT  macro  include/linux/threads.h  27  #define PID_MAX_DEFAULT (CONFIG_BASE_SMALL ? 0x1000 : 0x8000)
PID_MAX_LIMIT  macro  include/linux/threads.h  34  #define PID_MAX_LIMIT (CONFIG_BASE_SMALL ? PAGE_SIZE * 8 : (sizeof(long) > 4 ? 4 * 1024 * 1024 : PID_MAX_DEFAULT))
PIDS_PER_CPU_DEFAULT  macro  include/linux/threads.h  42  #define PIDS_PER_CPU_DEFAULT 1024
PIDS_PER_CPU_MIN  macro  include/linux/threads.h  43  #define PIDS_PER_CPU_MIN 8
_LINUX_TIMEX_H  macro  include/linux/timex.h  54  #define _LINUX_TIMEX_H
ADJ_ADJTIME  macro  include/linux/timex.h  58  #define ADJ_ADJTIME 0x8000
ADJ_OFFSET_SINGLESHOT  macro  include/uapi/linux/timex.h  111  #define ADJ_OFFSET_SINGLESHOT 0x8001
ADJ_OFFSET_READONLY  macro  include/linux/timex.h  60  #define ADJ_OFFSET_READONLY 0x2000
SHIFT_PLL  macro  include/linux/timex.h  98  #define SHIFT_PLL 2
SHIFT_FLL  macro  include/linux/timex.h  99  #define SHIFT_FLL 2
MAXTC  macro  include/linux/timex.h  100  #define MAXTC 10
SHIFT_USEC  macro  include/linux/timex.h  107  #define SHIFT_USEC 16
PPM_SCALE  macro  include/linux/timex.h  108  #define PPM_SCALE ((s64)NSEC_PER_USEC << (NTP_SCALE_SHIFT - SHIFT_USEC))
PPM_SCALE_INV_SHIFT  macro  include/linux/timex.h  109  #define PPM_SCALE_INV_SHIFT 19
PPM_SCALE_INV  macro  include/linux/timex.h  111  #define PPM_SCALE_INV ((1LL << (PPM_SCALE_INV_SHIFT + NTP_SCALE_SHIFT)) / PPM_SCALE + 1)
MAXPHASE  macro  include/linux/timex.h  113  #define MAXPHASE 500000000L
MAXFREQ  macro  include/linux/timex.h  114  #define MAXFREQ 500000
MAXFREQ_SCALED  macro  include/linux/timex.h  115  #define MAXFREQ_SCALED ((s64)MAXFREQ << NTP_SCALE_SHIFT)
MINSEC  macro  include/linux/timex.h  116  #define MINSEC 256
MAXSEC  macro  include/linux/timex.h  117  #define MAXSEC 2048
NTP_PHASE_LIMIT  macro  include/linux/timex.h  118  #define NTP_PHASE_LIMIT ((MAXPHASE / NSEC_PER_USEC) << 5)
ntp_init  prototype  include/linux/timex.h  128  extern void ntp_init(void);
ntp_clear  prototype  include/linux/timex.h  129  extern void ntp_clear(void);
shift_right  macro  include/linux/timex.h  136  #define shift_right(x,s) ({ __typeof__(x) __x = (x); __typeof__(s) __s = (s); __x < 0 ? -(-__x >> __s) : __x >> __s; })
NTP_SCALE_SHIFT  macro  include/linux/timex.h  138  #define NTP_SCALE_SHIFT 32
NTP_INTERVAL_FREQ  macro  include/linux/timex.h  140  #define NTP_INTERVAL_FREQ (HZ)
NTP_INTERVAL_LENGTH  macro  include/linux/timex.h  141  #define NTP_INTERVAL_LENGTH (NSEC_PER_SEC/NTP_INTERVAL_FREQ)
ntp_tick_length  prototype  include/linux/timex.h  144  extern u64 ntp_tick_length(void);
second_overflow  prototype  include/linux/timex.h  146  extern int second_overflow(unsigned long secs);
do_adjtimex  prototype  include/linux/timex.h  147  extern int do_adjtimex(struct timex *);
hardpps  prototype  include/linux/timex.h  148  extern void hardpps(const struct timespec *,const struct timespec *);
read_current_timer  prototype  include/linux/timex.h  150  int read_current_timer(unsigned long *timer_val);
PIT_TICK_RATE  macro  include/linux/timex.h  153  #define PIT_TICK_RATE 1193182ul
_LINUX_JIFFIES_H  macro  include/linux/jiffies.h  2  #define _LINUX_JIFFIES_H
SHIFT_HZ  macro  include/linux/jiffies.h  37  # define SHIFT_HZ 13
SH_DIV  macro  include/linux/jiffies.h  52  #define SH_DIV(NOM,DEN,LSH) ( (((NOM) / (DEN)) << (LSH)) + ((((NOM) % (DEN)) << (LSH)) + (DEN) / 2) / (DEN))
LATCH  macro  include/linux/jiffies.h  55  #define LATCH ((CLOCK_TICK_RATE + HZ/2) / HZ)
register_refined_jiffies  prototype  include/linux/jiffies.h  57  extern int register_refined_jiffies(long clock_tick_rate);
TICK_NSEC  macro  include/linux/jiffies.h  60  #define TICK_NSEC ((NSEC_PER_SEC+HZ/2)/HZ)
TICK_USEC  macro  include/linux/jiffies.h  63  #define TICK_USEC ((1000000UL + USER_HZ/2) / USER_HZ)
__jiffy_data  macro  include/linux/jiffies.h  69  #define __jiffy_data __attribute__((section(".data")))
get_jiffies_64  function  include/linux/jiffies.h  83  static inline u64 get_jiffies_64(void)
time_after  macro  include/linux/jiffies.h  105  #define time_after(a,b) (typecheck(unsigned long, a) && typecheck(unsigned long, b) && ((long)(b) - (long)(a) < 0))
time_before  macro  include/linux/jiffies.h  106  #define time_before(a,b) time_after(b,a)
time_after_eq  macro  include/linux/jiffies.h  111  #define time_after_eq(a,b) (typecheck(unsigned long, a) && typecheck(unsigned long, b) && ((long)(a) - (long)(b) >= 0))
time_before_eq  macro  include/linux/jiffies.h  112  #define time_before_eq(a,b) time_after_eq(b,a)
time_in_range  macro  include/linux/jiffies.h  119  #define time_in_range(a,b,c) (time_after_eq(a,b) && time_before_eq(a,c))
time_in_range_open  macro  include/linux/jiffies.h  126  #define time_in_range_open(a,b,c) (time_after_eq(a,b) && time_before(a,c))
time_after64  macro  include/linux/jiffies.h  134  #define time_after64(a,b) (typecheck(__u64, a) && typecheck(__u64, b) && ((__s64)(b) - (__s64)(a) < 0))
time_before64  macro  include/linux/jiffies.h  135  #define time_before64(a,b) time_after64(b,a)
time_after_eq64  macro  include/linux/jiffies.h  140  #define time_after_eq64(a,b) (typecheck(__u64, a) && typecheck(__u64, b) && ((__s64)(a) - (__s64)(b) >= 0))
time_before_eq64  macro  include/linux/jiffies.h  141  #define time_before_eq64(a,b) time_after_eq64(b,a)
time_is_before_jiffies  macro  include/linux/jiffies.h  148  #define time_is_before_jiffies(a) time_after(jiffies,a)
time_is_after_jiffies  macro  include/linux/jiffies.h  151  #define time_is_after_jiffies(a) time_before(jiffies,a)
time_is_before_eq_jiffies  macro  include/linux/jiffies.h  154  #define time_is_before_eq_jiffies(a) time_after_eq(jiffies,a)
time_is_after_eq_jiffies  macro  include/linux/jiffies.h  157  #define time_is_after_eq_jiffies(a) time_before_eq(jiffies,a)
INITIAL_JIFFIES  macro  include/linux/jiffies.h  163  #define INITIAL_JIFFIES ((unsigned long)(unsigned int) (-300*HZ))
MAX_JIFFY_OFFSET  macro  include/linux/jiffies.h  177  #define MAX_JIFFY_OFFSET ((LONG_MAX >> 1)-1)
SEC_JIFFIE_SC  macro  include/linux/jiffies.h  255  #define SEC_JIFFIE_SC (32 - SHIFT_HZ)
NSEC_JIFFIE_SC  macro  include/linux/jiffies.h  257  #define NSEC_JIFFIE_SC (SEC_JIFFIE_SC + 29)
USEC_JIFFIE_SC  macro  include/linux/jiffies.h  258  #define USEC_JIFFIE_SC (SEC_JIFFIE_SC + 19)
SEC_CONVERSION  macro  include/linux/jiffies.h  260  #define SEC_CONVERSION ((unsigned long)((((u64)NSEC_PER_SEC << SEC_JIFFIE_SC) + TICK_NSEC -1) / (u64)TICK_NSEC))
NSEC_CONVERSION  macro  include/linux/jiffies.h  263  #define NSEC_CONVERSION ((unsigned long)((((u64)1 << NSEC_JIFFIE_SC) + TICK_NSEC -1) / (u64)TICK_NSEC))
USEC_CONVERSION  macro  include/linux/jiffies.h  266  #define USEC_CONVERSION ((unsigned long)((((u64)NSEC_PER_USEC << USEC_JIFFIE_SC) + TICK_NSEC -1) / (u64)TICK_NSEC))
USEC_ROUND  macro  include/linux/jiffies.h  274  #define USEC_ROUND (u64)(((u64)1 << USEC_JIFFIE_SC) - 1)
MAX_SEC_IN_JIFFIES  macro  include/linux/jiffies.h  285  # define MAX_SEC_IN_JIFFIES (SH_DIV((MAX_JIFFY_OFFSET >> SEC_JIFFIE_SC) * TICK_NSEC, NSEC_PER_SEC, 1) - 1)
jiffies_to_msecs  prototype  include/linux/jiffies.h  292  extern unsigned int jiffies_to_msecs(const unsigned long j);
jiffies_to_usecs  prototype  include/linux/jiffies.h  293  extern unsigned int jiffies_to_usecs(const unsigned long j);
msecs_to_jiffies  prototype  include/linux/jiffies.h  294  extern unsigned long msecs_to_jiffies(const unsigned int m);
usecs_to_jiffies  prototype  include/linux/jiffies.h  295  extern unsigned long usecs_to_jiffies(const unsigned int u);
timespec_to_jiffies  prototype  include/linux/jiffies.h  296  extern unsigned long timespec_to_jiffies(const struct timespec *value);
jiffies_to_timespec  prototype  include/linux/jiffies.h  298  extern void jiffies_to_timespec(const unsigned long jiffies,struct timespec *value);
timeval_to_jiffies  prototype  include/linux/jiffies.h  299  extern unsigned long timeval_to_jiffies(const struct timeval *value);
jiffies_to_timeval  prototype  include/linux/jiffies.h  301  extern void jiffies_to_timeval(const unsigned long jiffies,struct timeval *value);
jiffies_to_clock_t  prototype  include/linux/jiffies.h  303  extern clock_t jiffies_to_clock_t(unsigned long x);
jiffies_delta_to_clock_t  function  include/linux/jiffies.h  304  static inline clock_t jiffies_delta_to_clock_t(long delta)
clock_t_to_jiffies  prototype  include/linux/jiffies.h  309  extern unsigned long clock_t_to_jiffies(unsigned long x);
jiffies_64_to_clock_t  prototype  include/linux/jiffies.h  310  extern u64 jiffies_64_to_clock_t(u64 x);
nsec_to_clock_t  prototype  include/linux/jiffies.h  311  extern u64 nsec_to_clock_t(u64 x);
nsecs_to_jiffies64  prototype  include/linux/jiffies.h  312  extern u64 nsecs_to_jiffies64(u64 n);
nsecs_to_jiffies  prototype  include/linux/jiffies.h  313  extern unsigned long nsecs_to_jiffies(u64 n);
TIMESTAMP_SIZE  macro  include/linux/jiffies.h  315  #define TIMESTAMP_SIZE 30
_LINUX_RBTREE_H  macro  include/linux/rbtree.h  30  #define _LINUX_RBTREE_H
rb_node  struct  include/linux/rbtree.h  35  struct rb_node {
rb_root  struct  include/linux/rbtree.h  42  struct rb_root {
rb_parent  macro  include/linux/rbtree.h  47  #define rb_parent(r) ((struct rb_node *)((r)->__rb_parent_color & ~3))
RB_ROOT  macro  include/linux/rbtree.h  49  #define RB_ROOT (struct rb_root) { NULL,}
rb_entry  macro  include/linux/rbtree.h  50  #define rb_entry(ptr,type,member) container_of(ptr,type,member)
RB_EMPTY_ROOT  macro  include/linux/rbtree.h  52  #define RB_EMPTY_ROOT(root) ((root)->rb_node == NULL)
RB_EMPTY_NODE  macro  include/linux/rbtree.h  56  #define RB_EMPTY_NODE(node) ((node)->__rb_parent_color == (unsigned long)(node))
RB_CLEAR_NODE  macro  include/linux/rbtree.h  58  #define RB_CLEAR_NODE(node) ((node)->__rb_parent_color = (unsigned long)(node))
rb_insert_color  prototype  include/linux/rbtree.h  61  extern void rb_insert_color(struct rb_node *,struct rb_root *);
rb_erase  prototype  include/linux/rbtree.h  62  extern void rb_erase(struct rb_node *,struct rb_root *);
rb_next  prototype  include/linux/rbtree.h  66  extern struct rb_node *rb_next(const struct rb_node *);
rb_prev  prototype  include/linux/rbtree.h  67  extern struct rb_node *rb_prev(const struct rb_node *);
rb_first  prototype  include/linux/rbtree.h  68  extern struct rb_node *rb_first(const struct rb_root *);
rb_last  prototype  include/linux/rbtree.h  69  extern struct rb_node *rb_last(const struct rb_root *);
rb_replace_node  prototype  include/linux/rbtree.h  73  extern void rb_replace_node(struct rb_node *victim,struct rb_node *new,struct rb_root *root);
rb_link_node  function  include/linux/rbtree.h  76  static inline void rb_link_node(struct rb_node * node,struct rb_node * parent,struct rb_node ** rb_link)
_LINUX_THREAD_INFO_H  macro  include/linux/thread_info.h  8  #define _LINUX_THREAD_INFO_H
restart_block  struct  include/linux/thread_info.h  19  struct restart_block {
do_no_restart_syscall  prototype  include/linux/thread_info.h  51  extern long do_no_restart_syscall(struct restart_block *parm);
THREADINFO_GFP  macro  include/linux/thread_info.h  61  # define THREADINFO_GFP (GFP_KERNEL | __GFP_NOTRACK)
THREADINFO_GFP_ACCOUNTED  macro  include/linux/thread_info.h  64  #define THREADINFO_GFP_ACCOUNTED (THREADINFO_GFP | __GFP_KMEMCG)
set_ti_thread_flag  function  include/linux/thread_info.h  71  static inline void set_ti_thread_flag(struct thread_info *ti,int flag)
clear_ti_thread_flag  function  include/linux/thread_info.h  76  static inline void clear_ti_thread_flag(struct thread_info *ti,int flag)
test_and_set_ti_thread_flag  function  include/linux/thread_info.h  81  static inline int test_and_set_ti_thread_flag(struct thread_info *ti,int flag)
test_and_clear_ti_thread_flag  function  include/linux/thread_info.h  86  static inline int test_and_clear_ti_thread_flag(struct thread_info *ti,int flag)
test_ti_thread_flag  function  include/linux/thread_info.h  91  static inline int test_ti_thread_flag(struct thread_info *ti,int flag)
set_thread_flag  macro  include/linux/thread_info.h  97  #define set_thread_flag(flag) set_ti_thread_flag(current_thread_info(), flag)
clear_thread_flag  macro  include/linux/thread_info.h  99  #define clear_thread_flag(flag) clear_ti_thread_flag(current_thread_info(), flag)
test_and_set_thread_flag  macro  include/linux/thread_info.h  101  #define test_and_set_thread_flag(flag) test_and_set_ti_thread_flag(current_thread_info(), flag)
test_and_clear_thread_flag  macro  include/linux/thread_info.h  103  #define test_and_clear_thread_flag(flag) test_and_clear_ti_thread_flag(current_thread_info(), flag)
test_thread_flag  macro  include/linux/thread_info.h  105  #define test_thread_flag(flag) test_ti_thread_flag(current_thread_info(), flag)
set_need_resched  macro  include/linux/thread_info.h  107  #define set_need_resched() set_thread_flag(TIF_NEED_RESCHED)
clear_need_resched  macro  include/linux/thread_info.h  108  #define clear_need_resched() clear_thread_flag(TIF_NEED_RESCHED)
HAVE_SET_RESTORE_SIGMASK  macro  arch/x86/include/asm/thread_info.h  248  #define HAVE_SET_RESTORE_SIGMASK 1
set_restore_sigmask  function  arch/x86/include/asm/thread_info.h  249  static inline void set_restore_sigmask(void)
clear_restore_sigmask  function  arch/x86/include/asm/thread_info.h  255  static inline void clear_restore_sigmask(void)
test_restore_sigmask  function  arch/x86/include/asm/thread_info.h  259  static inline bool test_restore_sigmask(void)
test_and_clear_restore_sigmask  function  arch/x86/include/asm/thread_info.h  263  static inline bool test_and_clear_restore_sigmask(void)
__LINUX_CPUMASK_H  macro  include/linux/cpumask.h  2  #define __LINUX_CPUMASK_H
cpumask  struct  include/linux/cpumask.h  14  typedef struct cpumask { DECLARE_BITMAP(bits,NR_CPUS); } cpumask_t;
cpumask_bits  macro  include/linux/cpumask.h  23  #define cpumask_bits(maskp) ((maskp)->bits)
nr_cpu_ids  macro  include/linux/cpumask.h  26  #define nr_cpu_ids 1
nr_cpumask_bits  macro  include/linux/cpumask.h  36  #define nr_cpumask_bits NR_CPUS
num_online_cpus  macro  include/linux/cpumask.h  94  #define num_online_cpus() 1U
num_possible_cpus  macro  include/linux/cpumask.h  95  #define num_possible_cpus() 1U
num_present_cpus  macro  include/linux/cpumask.h  96  #define num_present_cpus() 1U
num_active_cpus  macro  include/linux/cpumask.h  97  #define num_active_cpus() 1U
cpu_online  macro  include/linux/cpumask.h  98  #define cpu_online(cpu) ((cpu) == 0)
cpu_possible  macro  include/linux/cpumask.h  99  #define cpu_possible(cpu) ((cpu) == 0)
cpu_present  macro  include/linux/cpumask.h  100  #define cpu_present(cpu) ((cpu) == 0)
cpu_active  macro  include/linux/cpumask.h  101  #define cpu_active(cpu) ((cpu) == 0)
cpumask_check  function  include/linux/cpumask.h  105  static inline unsigned int cpumask_check(unsigned int cpu)
cpumask_first  function  include/linux/cpumask.h  158  static inline unsigned int cpumask_first(const struct cpumask *srcp)
cpumask_next  function  include/linux/cpumask.h  170  static inline unsigned int cpumask_next(int n,const struct cpumask *srcp)
cpumask_next_zero  function  include/linux/cpumask.h  185  static inline unsigned int cpumask_next_zero(int n,const struct cpumask *srcp)
cpumask_next_and  prototype  include/linux/cpumask.h  193  int cpumask_next_and(int n,const struct cpumask *,const struct cpumask *);
cpumask_any_but  prototype  include/linux/cpumask.h  194  int cpumask_any_but(const struct cpumask *mask,unsigned int cpu);
for_each_cpu  macro  include/linux/cpumask.h  206  #define for_each_cpu(cpu,mask) for ((cpu) = -1; (cpu) = cpumask_next((cpu), (mask)), (cpu) < nr_cpu_ids;)
for_each_cpu_not  macro  include/linux/cpumask.h  218  #define for_each_cpu_not(cpu,mask) for ((cpu) = -1; (cpu) = cpumask_next_zero((cpu), (mask)), (cpu) < nr_cpu_ids;)
for_each_cpu_and  macro  include/linux/cpumask.h  237  #define for_each_cpu_and(cpu,mask,and) for ((cpu) = -1; (cpu) = cpumask_next_and((cpu), (mask), (and)), (cpu) < nr_cpu_ids;)
CPU_BITS_NONE  macro  include/linux/cpumask.h  243  #define CPU_BITS_NONE { [0 ... BITS_TO_LONGS(NR_CPUS)-1] = 0UL }
CPU_BITS_CPU0  macro  include/linux/cpumask.h  248  #define CPU_BITS_CPU0 { [0] =  1UL }
cpumask_set_cpu  function  include/linux/cpumask.h  255  static inline void cpumask_set_cpu(unsigned int cpu,struct cpumask *dstp)
cpumask_clear_cpu  function  include/linux/cpumask.h  265  static inline void cpumask_clear_cpu(int cpu,struct cpumask *dstp)
cpumask_test_cpu  macro  include/linux/cpumask.h  280  #define cpumask_test_cpu(cpu,cpumask) test_bit(cpumask_check(cpu), cpumask_bits((cpumask)))
cpumask_test_and_set_cpu  function  include/linux/cpumask.h  291  static inline int cpumask_test_and_set_cpu(int cpu,struct cpumask *cpumask)
cpumask_test_and_clear_cpu  function  include/linux/cpumask.h  305  static inline int cpumask_test_and_clear_cpu(int cpu,struct cpumask *cpumask)
cpumask_setall  function  include/linux/cpumask.h  314  static inline void cpumask_setall(struct cpumask *dstp)
cpumask_clear  function  include/linux/cpumask.h  323  static inline void cpumask_clear(struct cpumask *dstp)
cpumask_and  function  include/linux/cpumask.h  338  static inline int cpumask_and(struct cpumask *dstp,const struct cpumask *src1p,const struct cpumask *src2p)
cpumask_or  function  include/linux/cpumask.h  351  static inline void cpumask_or(struct cpumask *dstp,const struct cpumask *src1p,const struct cpumask *src2p)
cpumask_xor  function  include/linux/cpumask.h  365  static inline void cpumask_xor(struct cpumask *dstp,const struct cpumask *src1p,const struct cpumask *src2p)
cpumask_andnot  function  include/linux/cpumask.h  381  static inline int cpumask_andnot(struct cpumask *dstp,const struct cpumask *src1p,const struct cpumask *src2p)
cpumask_complement  function  include/linux/cpumask.h  393  static inline void cpumask_complement(struct cpumask *dstp,const struct cpumask *srcp)
cpumask_equal  function  include/linux/cpumask.h  405  static inline bool cpumask_equal(const struct cpumask *src1p,const struct cpumask *src2p)
cpumask_intersects  function  include/linux/cpumask.h  417  static inline bool cpumask_intersects(const struct cpumask *src1p,const struct cpumask *src2p)
cpumask_subset  function  include/linux/cpumask.h  431  static inline int cpumask_subset(const struct cpumask *src1p,const struct cpumask *src2p)
cpumask_empty  function  include/linux/cpumask.h  441  static inline bool cpumask_empty(const struct cpumask *srcp)
cpumask_full  function  include/linux/cpumask.h  450  static inline bool cpumask_full(const struct cpumask *srcp)
cpumask_weight  function  include/linux/cpumask.h  459  static inline unsigned int cpumask_weight(const struct cpumask *srcp)
cpumask_shift_right  function  include/linux/cpumask.h  471  static inline void cpumask_shift_right(struct cpumask *dstp,const struct cpumask *srcp, int n)
cpumask_shift_left  function  include/linux/cpumask.h  484  static inline void cpumask_shift_left(struct cpumask *dstp,const struct cpumask *srcp, int n)
cpumask_copy  function  include/linux/cpumask.h  496  static inline void cpumask_copy(struct cpumask *dstp,const struct cpumask *srcp)
cpumask_any  macro  include/linux/cpumask.h  507  #define cpumask_any(srcp) cpumask_first(srcp)
cpumask_first_and  macro  include/linux/cpumask.h  516  #define cpumask_first_and(src1p,src2p) cpumask_next_and(-1,(src1p),(src2p))
cpumask_any_and  macro  include/linux/cpumask.h  525  #define cpumask_any_and(mask1,mask2) cpumask_first_and((mask1),(mask2))
cpumask_of  macro  include/linux/cpumask.h  531  #define cpumask_of(cpu) (get_cpu_mask(cpu))
cpumask_scnprintf  function  include/linux/cpumask.h  543  static inline int cpumask_scnprintf(char *buf,int len,const struct cpumask *srcp)
cpumask_parse_user  function  include/linux/cpumask.h  557  static inline int cpumask_parse_user(const char __user *buf,int len,struct cpumask *dstp)
cpumask_parselist_user  function  include/linux/cpumask.h  571  static inline int cpumask_parselist_user(const char __user *buf,int len,struct cpumask *dstp)
cpulist_scnprintf  function  include/linux/cpumask.h  587  static inline int cpulist_scnprintf(char *buf,int len,const struct cpumask *srcp)
cpulist_parse  function  include/linux/cpumask.h  600  static inline int cpulist_parse(const char *buf,struct cpumask *dstp)
cpumask_size  function  include/linux/cpumask.h  610  static inline size_t cpumask_size(void)
alloc_cpumask_var_node  function  include/linux/cpumask.h  667  static inline bool alloc_cpumask_var_node(cpumask_var_t *mask,gfp_t flags,int node)
alloc_cpumask_var  function  include/linux/cpumask.h  661  static inline bool alloc_cpumask_var(cpumask_var_t *mask,gfp_t flags)
zalloc_cpumask_var_node  function  include/linux/cpumask.h  679  static inline bool zalloc_cpumask_var_node(cpumask_var_t *mask,gfp_t flags,int node)
zalloc_cpumask_var  function  include/linux/cpumask.h  672  static inline bool zalloc_cpumask_var(cpumask_var_t *mask,gfp_t flags)
alloc_bootmem_cpumask_var  function  include/linux/cpumask.h  685  static inline void alloc_bootmem_cpumask_var(cpumask_var_t *mask)
free_cpumask_var  function  include/linux/cpumask.h  689  static inline void free_cpumask_var(cpumask_var_t mask)
free_bootmem_cpumask_var  function  include/linux/cpumask.h  693  static inline void free_bootmem_cpumask_var(cpumask_var_t mask)
cpu_all_mask  macro  include/linux/cpumask.h  701  #define cpu_all_mask to_cpumask(cpu_all_bits)
cpu_none_mask  macro  include/linux/cpumask.h  704  #define cpu_none_mask to_cpumask(cpu_bit_bitmap[0])
for_each_possible_cpu  macro  include/linux/cpumask.h  706  #define for_each_possible_cpu(cpu) for_each_cpu((cpu),cpu_possible_mask)
for_each_online_cpu  macro  include/linux/cpumask.h  707  #define for_each_online_cpu(cpu) for_each_cpu((cpu),cpu_online_mask)
for_each_present_cpu  macro  include/linux/cpumask.h  708  #define for_each_present_cpu(cpu) for_each_cpu((cpu),cpu_present_mask)
set_cpu_possible  prototype  include/linux/cpumask.h  711  void set_cpu_possible(unsigned int cpu,bool possible);
set_cpu_present  prototype  include/linux/cpumask.h  712  void set_cpu_present(unsigned int cpu,bool present);
set_cpu_online  prototype  include/linux/cpumask.h  713  void set_cpu_online(unsigned int cpu,bool online);
set_cpu_active  prototype  include/linux/cpumask.h  714  void set_cpu_active(unsigned int cpu,bool active);
init_cpu_present  prototype  include/linux/cpumask.h  715  void init_cpu_present(const struct cpumask *src);
init_cpu_possible  prototype  include/linux/cpumask.h  716  void init_cpu_possible(const struct cpumask *src);
init_cpu_online  prototype  include/linux/cpumask.h  717  void init_cpu_online(const struct cpumask *src);
to_cpumask  macro  include/linux/cpumask.h  731  #define to_cpumask(bitmap) ((struct cpumask *)(1 ? (bitmap) : (void *)sizeof(__check_is_bitmap(bitmap))))
__check_is_bitmap  function  include/linux/cpumask.h  733  static inline int __check_is_bitmap(const unsigned long *bitmap)
get_cpu_mask  function  include/linux/cpumask.h  748  static inline const struct cpumask *get_cpu_mask(unsigned int cpu)
cpu_is_offline  macro  include/linux/cpumask.h  755  #define cpu_is_offline(cpu) unlikely(!cpu_online(cpu))
CPU_BITS_ALL  macro  include/linux/cpumask.h  769  #define CPU_BITS_ALL { [0 ... BITS_TO_LONGS(NR_CPUS)-2] = ~0UL, [BITS_TO_LONGS(NR_CPUS)-1] = CPU_MASK_LAST_WORD }
cpumask_of_cpu  macro  include/linux/cpumask.h  778  #define cpumask_of_cpu(cpu) (*get_cpu_mask(cpu))
CPU_MASK_LAST_WORD  macro  include/linux/cpumask.h  780  #define CPU_MASK_LAST_WORD BITMAP_LAST_WORD_MASK(NR_CPUS)
CPU_MASK_ALL  macro  include/linux/cpumask.h  795  #define CPU_MASK_ALL (cpumask_t) { { [0 ... BITS_TO_LONGS(NR_CPUS)-2] = ~0UL, [BITS_TO_LONGS(NR_CPUS)-1] = CPU_MASK_LAST_WORD } }
CPU_MASK_NONE  macro  include/linux/cpumask.h  802  #define CPU_MASK_NONE (cpumask_t) { { [0 ... BITS_TO_LONGS(NR_CPUS)-1] =  0UL } }
CPU_MASK_CPU0  macro  include/linux/cpumask.h  807  #define CPU_MASK_CPU0 (cpumask_t) { { [0] =  1UL } }
first_cpu  macro  include/linux/cpumask.h  819  #define first_cpu(src) __first_cpu(&(src))
next_cpu  macro  include/linux/cpumask.h  820  #define next_cpu(n,src) __next_cpu((n),&(src))
any_online_cpu  macro  include/linux/cpumask.h  821  #define any_online_cpu(mask) cpumask_any_and(&mask,cpu_online_mask)
for_each_cpu_mask  macro  include/linux/cpumask.h  825  #define for_each_cpu_mask(cpu,mask) for ((cpu) = -1; (cpu) = next_cpu((cpu), (mask)), (cpu) < NR_CPUS; )
__first_cpu  prototype  include/linux/cpumask.h  816  int __first_cpu(const cpumask_t *srcp);
__next_cpu  prototype  include/linux/cpumask.h  817  int __next_cpu(int n,const cpumask_t *srcp);
for_each_cpu_mask_nr  macro  include/linux/cpumask.h  838  #define for_each_cpu_mask_nr(cpu,mask) for ((cpu) = -1; (cpu) = __next_cpu_nr((cpu), &(mask)), (cpu) < nr_cpu_ids; )
__next_cpu_nr  prototype  include/linux/cpumask.h  834  int __next_cpu_nr(int n,const cpumask_t *srcp);
cpus_addr  macro  include/linux/cpumask.h  842  #define cpus_addr(src) ((src).bits)
cpu_set  macro  include/linux/cpumask.h  844  #define cpu_set(cpu,dst) __cpu_set((cpu),&(dst))
__cpu_set  function  include/linux/cpumask.h  845  static inline void __cpu_set(int cpu,volatile cpumask_t *dstp)
cpu_clear  macro  include/linux/cpumask.h  850  #define cpu_clear(cpu,dst) __cpu_clear((cpu),&(dst))
__cpu_clear  function  include/linux/cpumask.h  851  static inline void __cpu_clear(int cpu,volatile cpumask_t *dstp)
cpus_setall  macro  include/linux/cpumask.h  856  #define cpus_setall(dst) __cpus_setall(&(dst),NR_CPUS)
__cpus_setall  function  include/linux/cpumask.h  857  static inline void __cpus_setall(cpumask_t *dstp,int nbits)
cpus_clear  macro  include/linux/cpumask.h  862  #define cpus_clear(dst) __cpus_clear(&(dst),NR_CPUS)
__cpus_clear  function  include/linux/cpumask.h  863  static inline void __cpus_clear(cpumask_t *dstp,int nbits)
cpu_isset  macro  include/linux/cpumask.h  869  #define cpu_isset(cpu,cpumask) test_bit((cpu),(cpumask).bits)
cpu_test_and_set  macro  include/linux/cpumask.h  871  #define cpu_test_and_set(cpu,cpumask) __cpu_test_and_set((cpu),&(cpumask))
__cpu_test_and_set  function  include/linux/cpumask.h  872  static inline int __cpu_test_and_set(int cpu,cpumask_t *addr)
cpus_and  macro  include/linux/cpumask.h  877  #define cpus_and(dst,src1,src2) __cpus_and(&(dst),&(src1),&(src2),NR_CPUS)
__cpus_and  function  include/linux/cpumask.h  879  static inline int __cpus_and(cpumask_t *dstp,const cpumask_t *src1p,const cpumask_t *src2p, int nbits)
cpus_or  macro  include/linux/cpumask.h  884  #define cpus_or(dst,src1,src2) __cpus_or(&(dst),&(src1),&(src2),NR_CPUS)
__cpus_or  function  include/linux/cpumask.h  886  static inline void __cpus_or(cpumask_t *dstp,const cpumask_t *src1p,const cpumask_t *src2p, int nbits)
cpus_xor  macro  include/linux/cpumask.h  891  #define cpus_xor(dst,src1,src2) __cpus_xor(&(dst),&(src1),&(src2),NR_CPUS)
__cpus_xor  function  include/linux/cpumask.h  893  static inline void __cpus_xor(cpumask_t *dstp,const cpumask_t *src1p,const cpumask_t *src2p, int nbits)
cpus_andnot  macro  include/linux/cpumask.h  899  #define cpus_andnot(dst,src1,src2) __cpus_andnot(&(dst), &(src1), &(src2), NR_CPUS)
__cpus_andnot  function  include/linux/cpumask.h  901  static inline int __cpus_andnot(cpumask_t *dstp,const cpumask_t *src1p,const cpumask_t *src2p, int nbits)
cpus_equal  macro  include/linux/cpumask.h  906  #define cpus_equal(src1,src2) __cpus_equal(&(src1),&(src2),NR_CPUS)
__cpus_equal  function  include/linux/cpumask.h  908  static inline int __cpus_equal(const cpumask_t *src1p,const cpumask_t *src2p, int nbits)
cpus_intersects  macro  include/linux/cpumask.h  913  #define cpus_intersects(src1,src2) __cpus_intersects(&(src1),&(src2),NR_CPUS)
__cpus_intersects  function  include/linux/cpumask.h  915  static inline int __cpus_intersects(const cpumask_t *src1p,const cpumask_t *src2p, int nbits)
cpus_subset  macro  include/linux/cpumask.h  920  #define cpus_subset(src1,src2) __cpus_subset(&(src1),&(src2),NR_CPUS)
__cpus_subset  function  include/linux/cpumask.h  922  static inline int __cpus_subset(const cpumask_t *src1p,const cpumask_t *src2p, int nbits)
cpus_empty  macro  include/linux/cpumask.h  927  #define cpus_empty(src) __cpus_empty(&(src),NR_CPUS)
__cpus_empty  function  include/linux/cpumask.h  928  static inline int __cpus_empty(const cpumask_t *srcp,int nbits)
cpus_weight  macro  include/linux/cpumask.h  933  #define cpus_weight(cpumask) __cpus_weight(&(cpumask),NR_CPUS)
__cpus_weight  function  include/linux/cpumask.h  934  static inline int __cpus_weight(const cpumask_t *srcp,int nbits)
cpus_shift_left  macro  include/linux/cpumask.h  940  #define cpus_shift_left(dst,src,n) __cpus_shift_left(&(dst), &(src), (n), NR_CPUS)
__cpus_shift_left  function  include/linux/cpumask.h  942  static inline void __cpus_shift_left(cpumask_t *dstp,const cpumask_t *srcp, int n, int nbits)
__LINUX_NODEMASK_H  macro  include/linux/nodemask.h  2  #define __LINUX_NODEMASK_H
node_set  macro  include/linux/nodemask.h  101  #define node_set(node,dst) __node_set((node),&(dst))
__node_set  function  include/linux/nodemask.h  102  static inline void __node_set(int node,volatile nodemask_t *dstp)
node_clear  macro  include/linux/nodemask.h  107  #define node_clear(node,dst) __node_clear((node),&(dst))
__node_clear  function  include/linux/nodemask.h  108  static inline void __node_clear(int node,volatile nodemask_t *dstp)
nodes_setall  macro  include/linux/nodemask.h  113  #define nodes_setall(dst) __nodes_setall(&(dst),MAX_NUMNODES)
__nodes_setall  function  include/linux/nodemask.h  114  static inline void __nodes_setall(nodemask_t *dstp,int nbits)
nodes_clear  macro  include/linux/nodemask.h  119  #define nodes_clear(dst) __nodes_clear(&(dst),MAX_NUMNODES)
__nodes_clear  function  include/linux/nodemask.h  120  static inline void __nodes_clear(nodemask_t *dstp,int nbits)
node_isset  macro  include/linux/nodemask.h  126  #define node_isset(node,nodemask) test_bit((node),(nodemask).bits)
node_test_and_set  macro  include/linux/nodemask.h  129  #define node_test_and_set(node,nodemask) __node_test_and_set((node), &(nodemask))
__node_test_and_set  function  include/linux/nodemask.h  130  static inline int __node_test_and_set(int node,nodemask_t *addr)
nodes_and  macro  include/linux/nodemask.h  136  #define nodes_and(dst,src1,src2) __nodes_and(&(dst), &(src1), &(src2), MAX_NUMNODES)
__nodes_and  function  include/linux/nodemask.h  138  static inline void __nodes_and(nodemask_t *dstp,const nodemask_t *src1p,const nodemask_t *src2p, int nbits)
nodes_or  macro  include/linux/nodemask.h  144  #define nodes_or(dst,src1,src2) __nodes_or(&(dst), &(src1), &(src2), MAX_NUMNODES)
__nodes_or  function  include/linux/nodemask.h  146  static inline void __nodes_or(nodemask_t *dstp,const nodemask_t *src1p,const nodemask_t *src2p, int nbits)
nodes_xor  macro  include/linux/nodemask.h  152  #define nodes_xor(dst,src1,src2) __nodes_xor(&(dst), &(src1), &(src2), MAX_NUMNODES)
__nodes_xor  function  include/linux/nodemask.h  154  static inline void __nodes_xor(nodemask_t *dstp,const nodemask_t *src1p,const nodemask_t *src2p, int nbits)
nodes_andnot  macro  include/linux/nodemask.h  160  #define nodes_andnot(dst,src1,src2) __nodes_andnot(&(dst), &(src1), &(src2), MAX_NUMNODES)
__nodes_andnot  function  include/linux/nodemask.h  162  static inline void __nodes_andnot(nodemask_t *dstp,const nodemask_t *src1p,const nodemask_t *src2p, int nbits)
nodes_complement  macro  include/linux/nodemask.h  168  #define nodes_complement(dst,src) __nodes_complement(&(dst), &(src), MAX_NUMNODES)
__nodes_complement  function  include/linux/nodemask.h  170  static inline void __nodes_complement(nodemask_t *dstp,const nodemask_t *srcp, int nbits)
nodes_equal  macro  include/linux/nodemask.h  176  #define nodes_equal(src1,src2) __nodes_equal(&(src1), &(src2), MAX_NUMNODES)
__nodes_equal  function  include/linux/nodemask.h  178  static inline int __nodes_equal(const nodemask_t *src1p,const nodemask_t *src2p, int nbits)
nodes_intersects  macro  include/linux/nodemask.h  184  #define nodes_intersects(src1,src2) __nodes_intersects(&(src1), &(src2), MAX_NUMNODES)
__nodes_intersects  function  include/linux/nodemask.h  186  static inline int __nodes_intersects(const nodemask_t *src1p,const nodemask_t *src2p, int nbits)
nodes_subset  macro  include/linux/nodemask.h  192  #define nodes_subset(src1,src2) __nodes_subset(&(src1), &(src2), MAX_NUMNODES)
__nodes_subset  function  include/linux/nodemask.h  194  static inline int __nodes_subset(const nodemask_t *src1p,const nodemask_t *src2p, int nbits)
nodes_empty  macro  include/linux/nodemask.h  199  #define nodes_empty(src) __nodes_empty(&(src),MAX_NUMNODES)
__nodes_empty  function  include/linux/nodemask.h  200  static inline int __nodes_empty(const nodemask_t *srcp,int nbits)
nodes_full  macro  include/linux/nodemask.h  205  #define nodes_full(nodemask) __nodes_full(&(nodemask),MAX_NUMNODES)
__nodes_full  function  include/linux/nodemask.h  206  static inline int __nodes_full(const nodemask_t *srcp,int nbits)
nodes_weight  macro  include/linux/nodemask.h  211  #define nodes_weight(nodemask) __nodes_weight(&(nodemask),MAX_NUMNODES)
__nodes_weight  function  include/linux/nodemask.h  212  static inline int __nodes_weight(const nodemask_t *srcp,int nbits)
nodes_shift_right  macro  include/linux/nodemask.h  218  #define nodes_shift_right(dst,src,n) __nodes_shift_right(&(dst), &(src), (n), MAX_NUMNODES)
__nodes_shift_right  function  include/linux/nodemask.h  220  static inline void __nodes_shift_right(nodemask_t *dstp,const nodemask_t *srcp, int n, int nbits)
nodes_shift_left  macro  include/linux/nodemask.h  226  #define nodes_shift_left(dst,src,n) __nodes_shift_left(&(dst), &(src), (n), MAX_NUMNODES)
__nodes_shift_left  function  include/linux/nodemask.h  228  static inline void __nodes_shift_left(nodemask_t *dstp,const nodemask_t *srcp, int n, int nbits)
first_node  macro  include/linux/nodemask.h  236  #define first_node(src) __first_node(&(src))
__first_node  function  include/linux/nodemask.h  237  static inline int __first_node(const nodemask_t *srcp)
next_node  macro  include/linux/nodemask.h  242  #define next_node(n,src) __next_node((n),&(src))
__next_node  function  include/linux/nodemask.h  243  static inline int __next_node(int n,const nodemask_t *srcp)
init_nodemask_of_node  function  include/linux/nodemask.h  248  static inline void init_nodemask_of_node(nodemask_t *mask,int node)
nodemask_of_node  macro  include/linux/nodemask.h  263  #define nodemask_of_node(node) ({ typeof(_unused_nodemask_arg_) m; if (sizeof(m) == sizeof(unsigned long)) { m.bits[0] = 1UL << (node); } else { init_nodemask_of_node(&m, (node)); } m; })
first_unset_node  macro  include/linux/nodemask.h  265  #define first_unset_node(mask) __first_unset_node(&(mask))
__first_unset_node  function  include/linux/nodemask.h  266  static inline int __first_unset_node(const nodemask_t *maskp)
NODE_MASK_LAST_WORD  macro  include/linux/nodemask.h  272  #define NODE_MASK_LAST_WORD BITMAP_LAST_WORD_MASK(MAX_NUMNODES)
NODE_MASK_ALL  macro  include/linux/nodemask.h  287  #define NODE_MASK_ALL ((nodemask_t) { { [0 ... BITS_TO_LONGS(MAX_NUMNODES)-2] = ~0UL, [BITS_TO_LONGS(MAX_NUMNODES)-1] = NODE_MASK_LAST_WORD } })
NODE_MASK_NONE  macro  include/linux/nodemask.h  294  #define NODE_MASK_NONE ((nodemask_t) { { [0 ... BITS_TO_LONGS(MAX_NUMNODES)-1] =  0UL } })
nodes_addr  macro  include/linux/nodemask.h  296  #define nodes_addr(src) ((src).bits)
nodemask_scnprintf  macro  include/linux/nodemask.h  299  #define nodemask_scnprintf(buf,len,src) __nodemask_scnprintf((buf), (len), &(src), MAX_NUMNODES)
__nodemask_scnprintf  function  include/linux/nodemask.h  301  static inline int __nodemask_scnprintf(char *buf,int len,const nodemask_t *srcp, int nbits)
nodemask_parse_user  macro  include/linux/nodemask.h  307  #define nodemask_parse_user(ubuf,ulen,dst) __nodemask_parse_user((ubuf), (ulen), &(dst), MAX_NUMNODES)
__nodemask_parse_user  function  include/linux/nodemask.h  309  static inline int __nodemask_parse_user(const char __user *buf,int len,nodemask_t *dstp, int nbits)
nodelist_scnprintf  macro  include/linux/nodemask.h  315  #define nodelist_scnprintf(buf,len,src) __nodelist_scnprintf((buf), (len), &(src), MAX_NUMNODES)
__nodelist_scnprintf  function  include/linux/nodemask.h  317  static inline int __nodelist_scnprintf(char *buf,int len,const nodemask_t *srcp, int nbits)
nodelist_parse  macro  include/linux/nodemask.h  322  #define nodelist_parse(buf,dst) __nodelist_parse((buf),&(dst),MAX_NUMNODES)
__nodelist_parse  function  include/linux/nodemask.h  323  static inline int __nodelist_parse(const char *buf,nodemask_t *dstp,int nbits)
node_remap  macro  include/linux/nodemask.h  329  #define node_remap(oldbit,old,new) __node_remap((oldbit), &(old), &(new), MAX_NUMNODES)
__node_remap  function  include/linux/nodemask.h  331  static inline int __node_remap(int oldbit,const nodemask_t *oldp, const nodemask_t *newp, int nbits)
nodes_remap  macro  include/linux/nodemask.h  337  #define nodes_remap(dst,src,old,new) __nodes_remap(&(dst), &(src), &(old), &(new), MAX_NUMNODES)
__nodes_remap  function  include/linux/nodemask.h  339  static inline void __nodes_remap(nodemask_t *dstp,const nodemask_t *srcp,const nodemask_t *oldp, const nodemask_t *newp, int nbits)
nodes_onto  macro  include/linux/nodemask.h  345  #define nodes_onto(dst,orig,relmap) __nodes_onto(&(dst), &(orig), &(relmap), MAX_NUMNODES)
__nodes_onto  function  include/linux/nodemask.h  347  static inline void __nodes_onto(nodemask_t *dstp,const nodemask_t *origp,const nodemask_t *relmapp, int nbits)
nodes_fold  macro  include/linux/nodemask.h  353  #define nodes_fold(dst,orig,sz) __nodes_fold(&(dst), &(orig), sz, MAX_NUMNODES)
__nodes_fold  function  include/linux/nodemask.h  355  static inline void __nodes_fold(nodemask_t *dstp,const nodemask_t *origp,int sz, int nbits)
for_each_node_mask  macro  include/linux/nodemask.h  368  #define for_each_node_mask(node,mask) if (!nodes_empty(mask)) for ((node) = 0; (node) < 1; (node)++)
node_states  enum  include/linux/nodemask.h  374  enum node_states {
node_state  function  include/linux/nodemask.h  443  static inline int node_state(int node,enum node_states state)
node_set_state  function  include/linux/nodemask.h  448  static inline void node_set_state(int node,enum node_states state)
node_clear_state  function  include/linux/nodemask.h  452  static inline void node_clear_state(int node,enum node_states state)
num_node_state  function  include/linux/nodemask.h  456  static inline int num_node_state(enum node_states state)
for_each_node_state  macro  include/linux/nodemask.h  462  #define for_each_node_state(node,__state) for ( (node) = 0; (node) == 0; (node) = 1)
first_online_node  macro  include/linux/nodemask.h  464  #define first_online_node 0
next_online_node  macro  include/linux/nodemask.h  465  #define next_online_node(nid) (MAX_NUMNODES)
node_set_online  macro  include/linux/nodemask.h  469  #define node_set_online(node) node_set_state((node),N_ONLINE)
node_set_offline  macro  include/linux/nodemask.h  470  #define node_set_offline(node) node_clear_state((node),N_ONLINE)
nr_node_ids  macro  include/linux/nodemask.h  466  #define nr_node_ids 1
nr_online_nodes  macro  include/linux/nodemask.h  467  #define nr_online_nodes 1
node_random  function  include/linux/nodemask.h  477  static inline int node_random(const nodemask_t *mask)
node_online_map  macro  include/linux/nodemask.h  483  #define node_online_map node_states[N_ONLINE]
node_possible_map  macro  include/linux/nodemask.h  484  #define node_possible_map node_states[N_POSSIBLE]
num_online_nodes  macro  include/linux/nodemask.h  486  #define num_online_nodes() num_node_state(N_ONLINE)
num_possible_nodes  macro  include/linux/nodemask.h  487  #define num_possible_nodes() num_node_state(N_POSSIBLE)
node_online  macro  include/linux/nodemask.h  488  #define node_online(node) node_state((node),N_ONLINE)
node_possible  macro  include/linux/nodemask.h  489  #define node_possible(node) node_state((node),N_POSSIBLE)
for_each_node  macro  include/linux/nodemask.h  491  #define for_each_node(node) for_each_node_state(node,N_POSSIBLE)
for_each_online_node  macro  include/linux/nodemask.h  492  #define for_each_online_node(node) for_each_node_state(node,N_ONLINE)
NODEMASK_ALLOC  macro  include/linux/nodemask.h  504  #define NODEMASK_ALLOC(type,name,gfp_flags) type _##name,*name = &_##name
NODEMASK_FREE  macro  include/linux/nodemask.h  505  #define NODEMASK_FREE(m) do {} while (0)
nodemask_scratch  struct  include/linux/nodemask.h  509  struct nodemask_scratch {
NODEMASK_SCRATCH  macro  include/linux/nodemask.h  516  #define NODEMASK_SCRATCH(x) NODEMASK_ALLOC(struct nodemask_scratch, x, GFP_KERNEL | __GFP_NORETRY)
NODEMASK_SCRATCH_FREE  macro  include/linux/nodemask.h  517  #define NODEMASK_SCRATCH_FREE(x) NODEMASK_FREE(x)
_LINUX_MM_TYPES_H  macro  include/linux/mm_types.h  2  #define _LINUX_MM_TYPES_H
AT_VECTOR_SIZE_ARCH  macro  include/linux/mm_types.h  19  #define AT_VECTOR_SIZE_ARCH 0
AT_VECTOR_SIZE  macro  include/linux/mm_types.h  21  #define AT_VECTOR_SIZE (2*(AT_VECTOR_SIZE_ARCH + AT_VECTOR_SIZE_BASE + 1))
USE_SPLIT_PTLOCKS  macro  include/linux/mm_types.h  25  #define USE_SPLIT_PTLOCKS (NR_CPUS >= CONFIG_SPLIT_PTLOCK_CPUS)
page  struct  include/linux/mm_types.h  40  struct page {
page_frag  struct  include/linux/mm_types.h  189  struct page_frag {
vm_region  struct  include/linux/mm_types.h  207  struct vm_region {
vm_area_struct  struct  include/linux/mm_types.h  227  struct vm_area_struct {
core_thread  struct  include/linux/mm_types.h  293  struct core_thread {
core_state  struct  include/linux/mm_types.h  298  struct core_state {
SPLIT_RSS_COUNTING  macro  include/linux/mm_types.h  312  #define SPLIT_RSS_COUNTING
task_rss_stat  struct  include/linux/mm_types.h  314  struct task_rss_stat {
mm_rss_stat  struct  include/linux/mm_types.h  320  struct mm_rss_stat {
mm_struct  struct  include/linux/mm_types.h  324  struct mm_struct {
NUMA_PTE_SCAN_INIT  macro  include/linux/mm_types.h  442  #define NUMA_PTE_SCAN_INIT -1
NUMA_PTE_SCAN_ACTIVE  macro  include/linux/mm_types.h  443  #define NUMA_PTE_SCAN_ACTIVE -2
mm_init_cpumask  function  include/linux/mm_types.h  445  static inline void mm_init_cpumask(struct mm_struct *mm)
mm_cpumask  function  include/linux/mm_types.h  453  static inline cpumask_t *mm_cpumask(struct mm_struct *mm)
_ASM_X86_PAGE_H  macro  arch/x86/include/asm/page.h  2  #define _ASM_X86_PAGE_H
clear_user_page  function  arch/x86/include/asm/page.h  21  static inline void clear_user_page(void *page,unsigned long vaddr,struct page *pg)
copy_user_page  function  arch/x86/include/asm/page.h  27  static inline void copy_user_page(void *to,void *from,unsigned long vaddr,struct page *topage)
__alloc_zeroed_user_highpage  macro  arch/x86/include/asm/page.h  33  #define __alloc_zeroed_user_highpage(movableflags,vma,vaddr) alloc_page_vma(GFP_HIGHUSER | __GFP_ZERO | movableflags, vma, vaddr)
__HAVE_ARCH_ALLOC_ZEROED_USER_HIGHPAGE  macro  arch/x86/include/asm/page.h  34  #define __HAVE_ARCH_ALLOC_ZEROED_USER_HIGHPAGE
__pa  macro  arch/x86/include/asm/page.h  36  #define __pa(x) __phys_addr((unsigned long)(x))
__pa_nodebug  macro  arch/x86/include/asm/page.h  37  #define __pa_nodebug(x) __phys_addr_nodebug((unsigned long)(x))
__pa_symbol  macro  arch/x86/include/asm/page.h  47  #define __pa_symbol(x) __pa(__phys_reloc_hide((unsigned long)(x)))
__va  macro  arch/x86/include/asm/page.h  49  #define __va(x) ((void *)((unsigned long)(x)+PAGE_OFFSET))
__boot_va  macro  arch/x86/include/asm/page.h  51  #define __boot_va(x) __va(x)
__boot_pa  macro  arch/x86/include/asm/page.h  52  #define __boot_pa(x) __pa(x)
virt_to_page  macro  arch/x86/include/asm/page.h  58  #define virt_to_page(kaddr) pfn_to_page(__pa(kaddr) >> PAGE_SHIFT)
pfn_to_kaddr  macro  arch/x86/include/asm/page.h  59  #define pfn_to_kaddr(pfn) __va((pfn) << PAGE_SHIFT)
__virt_addr_valid  prototype  arch/x86/include/asm/page.h  60  extern bool __virt_addr_valid(unsigned long kaddr);
virt_addr_valid  macro  arch/x86/include/asm/page.h  61  #define virt_addr_valid(kaddr) __virt_addr_valid((unsigned long) (kaddr))
__HAVE_ARCH_GATE_AREA  macro  arch/x86/include/asm/page.h  68  #define __HAVE_ARCH_GATE_AREA 1
_ASM_X86_PTRACE_H  macro  arch/x86/include/asm/ptrace.h  2  #define _ASM_X86_PTRACE_H
pt_regs  struct  arch/x86/include/uapi/asm/ptrace.h  43  struct pt_regs {
profile_pc  macro  include/asm-generic/ptrace.h  33  #define profile_pc(regs) instruction_pointer(regs)
convert_ip_to_linear  prototype  arch/x86/include/asm/ptrace.h  75  convert_ip_to_linear(struct task_struct *child,struct pt_regs *regs);
send_sigtrap  prototype  arch/x86/include/asm/ptrace.h  77  extern void send_sigtrap(struct task_struct *tsk,struct pt_regs *regs,int error_code, int si_code);
syscall_trace_enter  prototype  arch/x86/include/asm/ptrace.h  79  extern long syscall_trace_enter(struct pt_regs *);
syscall_trace_leave  prototype  arch/x86/include/asm/ptrace.h  80  extern void syscall_trace_leave(struct pt_regs *);
regs_return_value  function  arch/x86/include/asm/ptrace.h  82  static inline unsigned long regs_return_value(struct pt_regs *regs)
user_mode  function  arch/x86/include/asm/ptrace.h  94  static inline int user_mode(struct pt_regs *regs)
user_mode_vm  function  arch/x86/include/asm/ptrace.h  103  static inline int user_mode_vm(struct pt_regs *regs)
v8086_mode  function  arch/x86/include/asm/ptrace.h  113  static inline int v8086_mode(struct pt_regs *regs)
user_64bit_mode  function  arch/x86/include/asm/ptrace.h  123  static inline bool user_64bit_mode(struct pt_regs *regs)
current_user_stack_pointer  macro  arch/x86/include/asm/ptrace.h  137  #define current_user_stack_pointer() this_cpu_read(old_rsp)
compat_user_stack_pointer  macro  include/linux/compat.h  69  #define compat_user_stack_pointer() current_user_stack_pointer()
kernel_stack_pointer  function  arch/x86/include/asm/ptrace.h  148  static inline unsigned long kernel_stack_pointer(struct pt_regs *regs)
GET_IP  macro  include/asm-generic/ptrace.h  16  #define GET_IP(regs) ((regs)->pc)
GET_FP  macro  include/asm-generic/ptrace.h  56  #define GET_FP(regs) ((regs)->fp)
GET_USP  macro  include/asm-generic/ptrace.h  38  #define GET_USP(regs) ((regs)->usp)
regs_query_register_offset  prototype  arch/x86/include/asm/ptrace.h  161  extern int regs_query_register_offset(const char *name);
regs_query_register_name  prototype  arch/x86/include/asm/ptrace.h  162  extern const char *regs_query_register_name(unsigned int offset);
MAX_REG_OFFSET  macro  arch/x86/include/asm/ptrace.h  163  #define MAX_REG_OFFSET (offsetof(struct pt_regs,ss))
regs_get_register  function  arch/x86/include/asm/ptrace.h  175  static inline unsigned long regs_get_register(struct pt_regs *regs,unsigned int offset)
regs_within_kernel_stack  function  arch/x86/include/asm/ptrace.h  200  static inline int regs_within_kernel_stack(struct pt_regs *regs,unsigned long addr)
regs_get_kernel_stack_nth  function  arch/x86/include/asm/ptrace.h  216  static inline unsigned long regs_get_kernel_stack_nth(struct pt_regs *regs,unsigned int n)
arch_has_single_step  macro  arch/x86/include/asm/ptrace.h  226  #define arch_has_single_step() (1)
arch_has_block_step  macro  arch/x86/include/asm/ptrace.h  230  #define arch_has_block_step() (boot_cpu_data.x86 >= 6)
ARCH_HAS_USER_SINGLE_STEP_INFO  macro  arch/x86/include/asm/ptrace.h  233  #define ARCH_HAS_USER_SINGLE_STEP_INFO
do_get_thread_area  prototype  arch/x86/include/asm/ptrace.h  237  extern int do_get_thread_area(struct task_struct *p,int idx,struct user_desc __user *info);
do_set_thread_area  prototype  arch/x86/include/asm/ptrace.h  239  extern int do_set_thread_area(struct task_struct *p,int idx,struct user_desc __user *info, int can_allocate);
__LINUX_SMP_H  macro  include/linux/smp.h  2  #define __LINUX_SMP_H
cpu_idle  prototype  include/linux/smp.h  15  extern void cpu_idle(void);
call_single_data  struct  include/linux/smp.h  18  struct call_single_data {
smp_call_function_single  prototype  include/linux/smp.h  30  int smp_call_function_single(int cpuid,smp_call_func_t func,void *info,int wait);
smp_send_stop  function  arch/x86/include/asm/smp.h  93  static inline void smp_send_stop(void)
smp_send_reschedule  function  arch/x86/include/asm/smp.h  138  static inline void smp_send_reschedule(int cpu)
smp_prepare_cpus  function  arch/x86/include/asm/smp.h  108  static inline void smp_prepare_cpus(unsigned int max_cpus)
__cpu_up  function  arch/x86/include/asm/smp.h  118  static inline int __cpu_up(unsigned int cpu,struct task_struct *tidle)
smp_cpus_done  function  arch/x86/include/asm/smp.h  113  static inline void smp_cpus_done(unsigned int max_cpus)
smp_call_function  macro  include/linux/smp.h  141  #define smp_call_function(func,info,wait) (up_smp_call_function(func, info))
smp_call_function_many  macro  include/linux/smp.h  182  #define smp_call_function_many(mask,func,info,wait) (up_smp_call_function(func, info))
__smp_call_function_single  prototype  include/linux/smp.h  79  void __smp_call_function_single(int cpuid,struct call_single_data *data,int wait);
smp_call_function_any  function  include/linux/smp.h  187  smp_call_function_any(const struct cpumask *mask,smp_call_func_t func,void *info, int wait)
kick_all_cpus_sync  function  include/linux/smp.h  192  static inline void kick_all_cpus_sync(void) { }
call_function_init  function  include/linux/smp.h  183  static inline void call_function_init(void) { }
generic_smp_call_function_single_interrupt  prototype  include/linux/smp.h  91  void generic_smp_call_function_single_interrupt(void);
generic_smp_call_function_interrupt  prototype  include/linux/smp.h  92  void generic_smp_call_function_interrupt(void);
on_each_cpu  macro  include/linux/smp.h  148  #define on_each_cpu(func,info,wait) ({ local_irq_disable(); func(info); local_irq_enable(); 0; })
on_each_cpu_mask  macro  include/linux/smp.h  162  #define on_each_cpu_mask(mask,func,info,wait) do { if (cpumask_test_cpu(0, (mask))) { local_irq_disable(); (func)(info); local_irq_enable(); } } while (0)
on_each_cpu_cond  macro  include/linux/smp.h  177  #define on_each_cpu_cond(cond_func,func,info,wait,gfp_flags) do { void *__info = (info); preempt_disable(); if ((cond_func)(0, __info)) { local_irq_disable(); (func)(__info); local_irq_enable(); } preempt_enable(); } while (0)
smp_prepare_boot_cpu  function  arch/x86/include/asm/smp.h  103  static inline void smp_prepare_boot_cpu(void)
setup_nr_cpu_ids  prototype  include/linux/smp.h  125  extern void __init setup_nr_cpu_ids(void);
smp_init  prototype  include/linux/smp.h  126  extern void __init smp_init(void);
raw_smp_processor_id  macro  arch/x86/include/asm/smp.h  194  #define raw_smp_processor_id() (this_cpu_read(cpu_number))
up_smp_call_function  function  include/linux/smp.h  136  static inline int up_smp_call_function(smp_call_func_t func,void *info)
debug_smp_processor_id  prototype  include/linux/smp.h  212  extern unsigned int debug_smp_processor_id(void);
smp_processor_id  macro  include/linux/smp.h  215  # define smp_processor_id() raw_smp_processor_id()
get_cpu  macro  include/linux/smp.h  218  #define get_cpu() ({ preempt_disable(); smp_processor_id(); })
put_cpu  macro  include/linux/smp.h  219  #define put_cpu() preempt_enable()
arch_disable_smp_support  prototype  include/linux/smp.h  225  extern void arch_disable_smp_support(void);
smp_setup_processor_id  prototype  include/linux/smp.h  227  void smp_setup_processor_id(void);
_LINUX_SEM_H  macro  include/linux/sem.h  2  #define _LINUX_SEM_H
sem_array  struct  include/linux/sem.h  12  struct sem_array {
sysv_sem  struct  include/linux/sem.h  35  struct sysv_sem {
copy_semundo  function  include/linux/sem.h  39  static inline int copy_semundo(unsigned long clone_flags,struct task_struct *tsk)
exit_sem  function  include/linux/sem.h  44  static inline void exit_sem(struct task_struct *tsk)
_LINUX_SIGNAL_H  macro  include/linux/signal.h  2  #define _LINUX_SIGNAL_H
sigqueue  struct  include/linux/signal.h  15  struct sigqueue {
SIGQUEUE_PREALLOC  macro  include/linux/signal.h  23  #define SIGQUEUE_PREALLOC 1
sigpending  struct  include/linux/signal.h  25  struct sigpending {
sigaddset  macro  arch/x86/include/asm/signal.h  67  #define sigaddset(set,sig) (__builtin_constant_p(sig) ? __const_sigaddset((set), (sig)) : __gen_sigaddset((set), (sig)))
sigdelset  macro  arch/x86/include/asm/signal.h  83  #define sigdelset(set,sig) (__builtin_constant_p(sig) ? __const_sigdelset((set), (sig)) : __gen_sigdelset((set), (sig)))
sigismember  macro  arch/x86/include/asm/signal.h  114  #define sigismember(set,sig) (__builtin_constant_p(sig) ? __const_sigismember((set), (sig)) : __gen_sigismember((set), (sig)))
sigfindinword  function  arch/x86/include/asm/signal.h  116  static inline int sigfindinword(unsigned long word)
sigisemptyset  function  include/linux/signal.h  73  static inline int sigisemptyset(sigset_t *set)
sigmask  macro  include/linux/signal.h  90  #define sigmask(sig) (1UL << ((sig) - 1))
_SIG_SET_BINOP  macro  include/linux/signal.h  128  #undef _SIG_SET_BINOP
_sig_or  macro  include/linux/signal.h  129  #undef _sig_or
_sig_and  macro  include/linux/signal.h  130  #undef _sig_and
_sig_andn  macro  include/linux/signal.h  131  #undef _sig_andn
_SIG_SET_OP  macro  include/linux/signal.h  152  #undef _SIG_SET_OP
_sig_not  macro  include/linux/signal.h  153  #undef _sig_not
sigemptyset  function  include/linux/signal.h  155  static inline void sigemptyset(sigset_t *set)
sigfillset  function  include/linux/signal.h  167  static inline void sigfillset(sigset_t *set)
sigaddsetmask  function  include/linux/signal.h  181  static inline void sigaddsetmask(sigset_t *set,unsigned long mask)
sigdelsetmask  function  include/linux/signal.h  186  static inline void sigdelsetmask(sigset_t *set,unsigned long mask)
sigtestsetmask  function  include/linux/signal.h  191  static inline int sigtestsetmask(sigset_t *set,unsigned long mask)
siginitset  function  include/linux/signal.h  196  static inline void siginitset(sigset_t *set,unsigned long mask)
siginitsetinv  function  include/linux/signal.h  208  static inline void siginitsetinv(sigset_t *set,unsigned long mask)
init_sigpending  function  include/linux/signal.h  222  static inline void init_sigpending(struct sigpending *sig)
flush_sigqueue  prototype  include/linux/signal.h  228  extern void flush_sigqueue(struct sigpending *queue);
valid_signal  function  include/linux/signal.h  231  static inline int valid_signal(unsigned long sig)
next_signal  prototype  include/linux/signal.h  239  extern int next_signal(struct sigpending *pending,sigset_t *mask);
do_send_sig_info  prototype  include/linux/signal.h  241  extern int do_send_sig_info(int sig,struct siginfo *info,struct task_struct *p, bool group);
group_send_sig_info  prototype  include/linux/signal.h  242  extern int group_send_sig_info(int sig,struct siginfo *info,struct task_struct *p);
__group_send_sig_info  prototype  include/linux/signal.h  243  extern int __group_send_sig_info(int,struct siginfo *,struct task_struct *);
do_rt_tgsigqueueinfo  prototype  include/linux/signal.h  245  extern long do_rt_tgsigqueueinfo(pid_t tgid,pid_t pid,int sig,siginfo_t *info);
do_sigpending  prototype  include/linux/signal.h  246  extern long do_sigpending(void __user *,unsigned long);
do_sigtimedwait  prototype  include/linux/signal.h  248  extern int do_sigtimedwait(const sigset_t *,siginfo_t *,const struct timespec *);
sigprocmask  prototype  include/linux/signal.h  249  extern int sigprocmask(int,sigset_t *,sigset_t *);
set_current_blocked  prototype  include/linux/signal.h  250  extern void set_current_blocked(sigset_t *);
__set_current_blocked  prototype  include/linux/signal.h  251  extern void __set_current_blocked(const sigset_t *);
sigsuspend  prototype  include/linux/signal.h  253  extern int sigsuspend(sigset_t *);
get_signal_to_deliver  prototype  include/linux/signal.h  255  extern int get_signal_to_deliver(siginfo_t *info,struct k_sigaction *return_ka,struct pt_regs *regs,void *cookie);
signal_delivered  prototype  include/linux/signal.h  256  extern void signal_delivered(int sig,siginfo_t *info,struct k_sigaction *ka,struct pt_regs *regs,int stepping);
exit_signals  prototype  include/linux/signal.h  257  extern void exit_signals(struct task_struct *tsk);
unhandled_signal  prototype  include/linux/signal.h  261  int unhandled_signal(struct task_struct *tsk,int sig);
SIGEMT_MASK  macro  include/linux/signal.h  340  #define SIGEMT_MASK 0
rt_sigmask  macro  include/linux/signal.h  346  #define rt_sigmask(sig) sigmask(sig)
siginmask  macro  include/linux/signal.h  348  #define siginmask(sig,mask) (rt_sigmask(sig) & (mask))
SIG_KERNEL_ONLY_MASK  macro  include/linux/signal.h  351  #define SIG_KERNEL_ONLY_MASK ( rt_sigmask(SIGKILL)   |  rt_sigmask(SIGSTOP))
SIG_KERNEL_STOP_MASK  macro  include/linux/signal.h  355  #define SIG_KERNEL_STOP_MASK ( rt_sigmask(SIGSTOP)   |  rt_sigmask(SIGTSTP)   | rt_sigmask(SIGTTIN)   |  rt_sigmask(SIGTTOU)   )
SIG_KERNEL_COREDUMP_MASK  macro  include/linux/signal.h  363  #define SIG_KERNEL_COREDUMP_MASK ( rt_sigmask(SIGQUIT)   |  rt_sigmask(SIGILL)    | rt_sigmask(SIGTRAP)   |  rt_sigmask(SIGABRT)   | rt_sigmask(SIGFPE)    |  rt_sigmask(SIGSEGV)   | rt_sigmask(SIGBUS)    |  rt_sigmask(SIGSYS)    | rt_sigmask(SIGXCPU)   |  rt_sigmask(SIGXFSZ)   | SIGEMT_MASK				       )
SIG_KERNEL_IGNORE_MASK  macro  include/linux/signal.h  367  #define SIG_KERNEL_IGNORE_MASK ( rt_sigmask(SIGCONT)   |  rt_sigmask(SIGCHLD)   | rt_sigmask(SIGWINCH)  |  rt_sigmask(SIGURG)    )
sig_kernel_only  macro  include/linux/signal.h  370  #define sig_kernel_only(sig) (((sig) < SIGRTMIN) && siginmask(sig, SIG_KERNEL_ONLY_MASK))
sig_kernel_coredump  macro  include/linux/signal.h  372  #define sig_kernel_coredump(sig) (((sig) < SIGRTMIN) && siginmask(sig, SIG_KERNEL_COREDUMP_MASK))
sig_kernel_ignore  macro  include/linux/signal.h  374  #define sig_kernel_ignore(sig) (((sig) < SIGRTMIN) && siginmask(sig, SIG_KERNEL_IGNORE_MASK))
sig_kernel_stop  macro  include/linux/signal.h  376  #define sig_kernel_stop(sig) (((sig) < SIGRTMIN) && siginmask(sig, SIG_KERNEL_STOP_MASK))
sig_user_defined  macro  include/linux/signal.h  380  #define sig_user_defined(t,signr) (((t)->sighand->action[(signr)-1].sa.sa_handler != SIG_DFL) && ((t)->sighand->action[(signr)-1].sa.sa_handler != SIG_IGN))
sig_fatal  macro  include/linux/signal.h  384  #define sig_fatal(t,signr) (!siginmask(signr, SIG_KERNEL_IGNORE_MASK|SIG_KERNEL_STOP_MASK) && (t)->sighand->action[(signr)-1].sa.sa_handler == SIG_DFL)
signals_init  prototype  include/linux/signal.h  386  void signals_init(void);
restore_altstack  prototype  include/linux/signal.h  388  int restore_altstack(const stack_t __user *);
__save_altstack  prototype  include/linux/signal.h  389  int __save_altstack(stack_t __user *,unsigned long);
__LINUX_COMPLETION_H  macro  include/linux/completion.h  2  #define __LINUX_COMPLETION_H
completion  struct  include/linux/completion.h  25  struct completion {
COMPLETION_INITIALIZER  macro  include/linux/completion.h  31  #define COMPLETION_INITIALIZER(work) { 0, __WAIT_QUEUE_HEAD_INITIALIZER((work).wait) }
COMPLETION_INITIALIZER_ONSTACK  macro  include/linux/completion.h  34  #define COMPLETION_INITIALIZER_ONSTACK(work) ({ init_completion(&work); work; })
DECLARE_COMPLETION  macro  include/linux/completion.h  45  #define DECLARE_COMPLETION(work) struct completion work = COMPLETION_INITIALIZER(work)
DECLARE_COMPLETION_ONSTACK  macro  include/linux/completion.h  63  # define DECLARE_COMPLETION_ONSTACK(work) DECLARE_COMPLETION(work)
init_completion  function  include/linux/completion.h  73  static inline void init_completion(struct completion *x)
wait_for_completion  prototype  include/linux/completion.h  79  extern void wait_for_completion(struct completion *);
wait_for_completion_interruptible  prototype  include/linux/completion.h  80  extern int wait_for_completion_interruptible(struct completion *x);
wait_for_completion_killable  prototype  include/linux/completion.h  81  extern int wait_for_completion_killable(struct completion *x);
wait_for_completion_timeout  prototype  include/linux/completion.h  83  extern unsigned long wait_for_completion_timeout(struct completion *x,unsigned long timeout);
wait_for_completion_interruptible_timeout  prototype  include/linux/completion.h  84  extern long wait_for_completion_interruptible_timeout(
wait_for_completion_killable_timeout  prototype  include/linux/completion.h  86  extern long wait_for_completion_killable_timeout(
try_wait_for_completion  prototype  include/linux/completion.h  88  extern bool try_wait_for_completion(struct completion *x);
completion_done  prototype  include/linux/completion.h  89  extern bool completion_done(struct completion *x);
complete  prototype  include/linux/completion.h  91  extern void complete(struct completion *);
complete_all  prototype  include/linux/completion.h  92  extern void complete_all(struct completion *);
INIT_COMPLETION  macro  include/linux/completion.h  101  #define INIT_COMPLETION(x) ((x).done = 0)
_LINUX_PID_H  macro  include/linux/pid.h  2  #define _LINUX_PID_H
pid_type  enum  include/linux/pid.h  6  enum pid_type
upid  struct  include/linux/pid.h  50  struct upid {
pid  struct  include/linux/pid.h  57  struct pid
pid_link  struct  include/linux/pid.h  69  struct pid_link
get_pid  function  include/linux/pid.h  75  static inline struct pid *get_pid(struct pid *pid)
put_pid  prototype  include/linux/pid.h  82  extern void put_pid(struct pid *pid);
pid_task  prototype  include/linux/pid.h  83  extern struct task_struct *pid_task(struct pid *pid,enum pid_type);
get_pid_task  prototype  include/linux/pid.h  84  extern struct task_struct *get_pid_task(struct pid *pid,enum pid_type);
get_task_pid  prototype  include/linux/pid.h  86  extern struct pid *get_task_pid(struct task_struct *task,enum pid_type type);
attach_pid  prototype  include/linux/pid.h  93  extern void attach_pid(struct task_struct *task,enum pid_type type,struct pid *pid);
detach_pid  prototype  include/linux/pid.h  94  extern void detach_pid(struct task_struct *task,enum pid_type);
change_pid  prototype  include/linux/pid.h  96  extern void change_pid(struct task_struct *task,enum pid_type,struct pid *pid);
transfer_pid  prototype  include/linux/pid.h  98  extern void transfer_pid(struct task_struct *old,struct task_struct *new,enum pid_type);
find_pid_ns  prototype  include/linux/pid.h  112  extern struct pid *find_pid_ns(int nr,struct pid_namespace *ns);
find_vpid  prototype  include/linux/pid.h  113  extern struct pid *find_vpid(int nr);
find_get_pid  prototype  include/linux/pid.h  118  extern struct pid *find_get_pid(int nr);
find_ge_pid  prototype  include/linux/pid.h  119  extern struct pid *find_ge_pid(int nr,struct pid_namespace *);
next_pidmap  prototype  include/linux/pid.h  120  int next_pidmap(struct pid_namespace *pid_ns,unsigned int last);
alloc_pid  prototype  include/linux/pid.h  122  extern struct pid *alloc_pid(struct pid_namespace *ns);
free_pid  prototype  include/linux/pid.h  123  extern void free_pid(struct pid *pid);
disable_pid_allocation  prototype  include/linux/pid.h  124  extern void disable_pid_allocation(struct pid_namespace *ns);
ns_of_pid  function  include/linux/pid.h  136  static inline struct pid_namespace *ns_of_pid(struct pid *pid)
is_child_reaper  function  include/linux/pid.h  150  static inline bool is_child_reaper(struct pid *pid)
pid_nr  function  include/linux/pid.h  166  static inline pid_t pid_nr(struct pid *pid)
pid_nr_ns  prototype  include/linux/pid.h  174  pid_t pid_nr_ns(struct pid *pid,struct pid_namespace *ns);
pid_vnr  prototype  include/linux/pid.h  175  pid_t pid_vnr(struct pid *pid);
do_each_pid_task  macro  include/linux/pid.h  182  #define do_each_pid_task(pid,type,task) do { struct hlist_node *pos___; if ((pid) != NULL) hlist_for_each_entry_rcu((task), pos___, &(pid)->tasks[type], pids[type].node) {
while_each_pid_task  macro  include/linux/pid.h  192  #define while_each_pid_task(pid,type,task) if (type == PIDTYPE_PID) break; } } while (0)
do_each_pid_thread  macro  include/linux/pid.h  197  #define do_each_pid_thread(pid,type,task) do_each_pid_task(pid, type, task) { struct task_struct *tg___ = task; do {
while_each_pid_thread  macro  include/linux/pid.h  202  #define while_each_pid_thread(pid,type,task) } while_each_thread(tg___, task); task = tg___; } while_each_pid_task(pid, type, task)
_LINUX_TOPOLOGY_H  macro  include/linux/topology.h  28  #define _LINUX_TOPOLOGY_H
node_has_online_mem  macro  include/linux/topology.h  38  #define node_has_online_mem(nid) (1)
nr_cpus_node  macro  include/linux/topology.h  42  #define nr_cpus_node(node) cpumask_weight(cpumask_of_node(node))
for_each_node_with_cpus  macro  include/linux/topology.h  47  #define for_each_node_with_cpus(node) for_each_online_node(node) if (nr_cpus_node(node))
arch_update_cpu_topology  prototype  include/linux/topology.h  49  int arch_update_cpu_topology(void);
LOCAL_DISTANCE  macro  include/linux/topology.h  52  #define LOCAL_DISTANCE 10
REMOTE_DISTANCE  macro  include/linux/topology.h  53  #define REMOTE_DISTANCE 20
node_distance  macro  arch/x86/include/asm/topology.h  96  #define node_distance(a,b) __node_distance(a,b)
RECLAIM_DISTANCE  macro  include/linux/topology.h  63  #define RECLAIM_DISTANCE 30
PENALTY_FOR_NODE_WITH_CPUS  macro  include/linux/topology.h  66  #define PENALTY_FOR_NODE_WITH_CPUS (1)
ARCH_HAS_SCHED_WAKE_IDLE  macro  include/linux/topology.h  85  #define ARCH_HAS_SCHED_WAKE_IDLE
SD_SIBLING_INIT  macro  include/linux/topology.h  109  #define SD_SIBLING_INIT (struct sched_domain) { .min_interval		= 1, .max_interval		= 2, .busy_factor		= 64, .imbalance_pct		= 110, .flags			= 1*SD_LOAD_BALANCE | 1*SD_BALANCE_NEWIDLE | 1*SD_BALANCE_EXEC | 1*SD_BALANCE_FORK | 0*SD_BALANCE_WAKE | 1*SD_WAKE_AFFINE | 1*SD_SHARE_CPUPOWER | 1*SD_SHARE_PKG_RESOURCES | 0*SD_SERIALIZE | 0*SD_PREFER_SIBLING | arch_sd_sibling_asym_packing() , .last_balance		= jiffies, .balance_interval	= 1, .smt_gain		= 1178,	/* 15% */ }
SD_MC_INIT  macro  include/linux/topology.h  138  #define SD_MC_INIT (struct sched_domain) { .min_interval		= 1, .max_interval		= 4, .busy_factor		= 64, .imbalance_pct		= 125, .cache_nice_tries	= 1, .busy_idx		= 2, .wake_idx		= 0, .forkexec_idx		= 0, .flags			= 1*SD_LOAD_BALANCE | 1*SD_BALANCE_NEWIDLE | 1*SD_BALANCE_EXEC | 1*SD_BALANCE_FORK | 0*SD_BALANCE_WAKE | 1*SD_WAKE_AFFINE | 0*SD_SHARE_CPUPOWER | 1*SD_SHARE_PKG_RESOURCES | 0*SD_SERIALIZE , .last_balance		= jiffies, .balance_interval	= 1, }
SD_CPU_INIT  macro  include/linux/topology.h  169  #define SD_CPU_INIT (struct sched_domain) { .min_interval		= 1, .max_interval		= 4, .busy_factor		= 64, .imbalance_pct		= 125, .cache_nice_tries	= 1, .busy_idx		= 2, .idle_idx		= 1, .newidle_idx		= 0, .wake_idx		= 0, .forkexec_idx		= 0, .flags			= 1*SD_LOAD_BALANCE | 1*SD_BALANCE_NEWIDLE | 1*SD_BALANCE_EXEC | 1*SD_BALANCE_FORK | 0*SD_BALANCE_WAKE | 1*SD_WAKE_AFFINE | 0*SD_SHARE_CPUPOWER | 0*SD_SHARE_PKG_RESOURCES | 0*SD_SERIALIZE | 1*SD_PREFER_SIBLING , .last_balance		= jiffies, .balance_interval	= 1, }
numa_node_id  macro  arch/x86/include/asm/topology.h  107  #define numa_node_id numa_node_id
cpu_to_node  macro  arch/x86/include/asm/topology.h  58  #define cpu_to_node __cpu_to_node
set_numa_node  function  include/linux/topology.h  197  static inline void set_numa_node(int node)
set_cpu_numa_node  function  include/linux/topology.h  204  static inline void set_cpu_numa_node(int cpu,int node)
set_numa_mem  function  include/linux/topology.h  232  static inline void set_numa_mem(int node)
numa_mem_id  function  include/linux/topology.h  264  static inline int numa_mem_id(void)
cpu_to_mem  function  include/linux/topology.h  271  static inline int cpu_to_mem(int cpu)
set_cpu_numa_mem  function  include/linux/topology.h  254  static inline void set_cpu_numa_mem(int cpu,int node)
topology_physical_package_id  macro  arch/x86/include/asm/topology.h  123  #define topology_physical_package_id(cpu) (cpu_data(cpu).phys_proc_id)
topology_core_id  macro  arch/x86/include/asm/topology.h  124  #define topology_core_id(cpu) (cpu_data(cpu).cpu_core_id)
topology_thread_cpumask  macro  arch/x86/include/asm/topology.h  126  #define topology_thread_cpumask(cpu) (per_cpu(cpu_sibling_map,cpu))
topology_core_cpumask  macro  arch/x86/include/asm/topology.h  125  #define topology_core_cpumask(cpu) (per_cpu(cpu_core_map,cpu))
_LINUX_PROPORTIONS_H  macro  include/linux/proportions.h  10  #define _LINUX_PROPORTIONS_H
prop_global  struct  include/linux/proportions.h  16  struct prop_global {
prop_descriptor  struct  include/linux/proportions.h  37  struct prop_descriptor {
prop_descriptor_init  prototype  include/linux/proportions.h  43  int prop_descriptor_init(struct prop_descriptor *pd,int shift);
prop_change_shift  prototype  include/linux/proportions.h  44  void prop_change_shift(struct prop_descriptor *pd,int new_shift);
prop_local_percpu  struct  include/linux/proportions.h  50  struct prop_local_percpu {
prop_local_init_percpu  prototype  include/linux/proportions.h  64  int prop_local_init_percpu(struct prop_local_percpu *pl);
prop_local_destroy_percpu  prototype  include/linux/proportions.h  65  void prop_local_destroy_percpu(struct prop_local_percpu *pl);
__prop_inc_percpu  prototype  include/linux/proportions.h  66  void __prop_inc_percpu(struct prop_descriptor *pd,struct prop_local_percpu *pl);
prop_fraction_percpu  prototype  include/linux/proportions.h  68  void prop_fraction_percpu(struct prop_descriptor *pd,struct prop_local_percpu *pl,long *numerator, long *denominator);
prop_inc_percpu  function  include/linux/proportions.h  71  void prop_inc_percpu(struct prop_descriptor *pd,struct prop_local_percpu *pl)
PROP_MAX_SHIFT  macro  include/linux/proportions.h  87  #define PROP_MAX_SHIFT (BITS_PER_LONG/2)
PROP_FRAC_SHIFT  macro  include/linux/proportions.h  90  #define PROP_FRAC_SHIFT (BITS_PER_LONG - PROP_MAX_SHIFT - 1)
PROP_FRAC_BASE  macro  include/linux/proportions.h  91  #define PROP_FRAC_BASE (1UL << PROP_FRAC_SHIFT)
__prop_inc_percpu_max  prototype  include/linux/proportions.h  94  void __prop_inc_percpu_max(struct prop_descriptor *pd,struct prop_local_percpu *pl, long frac);
prop_local_single  struct  include/linux/proportions.h  101  struct prop_local_single {
INIT_PROP_LOCAL_SINGLE  macro  include/linux/proportions.h  118  #define INIT_PROP_LOCAL_SINGLE(name) {	.lock = __RAW_SPIN_LOCK_UNLOCKED(name.lock), }
prop_local_init_single  prototype  include/linux/proportions.h  120  int prop_local_init_single(struct prop_local_single *pl);
prop_local_destroy_single  prototype  include/linux/proportions.h  121  void prop_local_destroy_single(struct prop_local_single *pl);
__prop_inc_single  prototype  include/linux/proportions.h  122  void __prop_inc_single(struct prop_descriptor *pd,struct prop_local_single *pl);
prop_fraction_single  prototype  include/linux/proportions.h  124  void prop_fraction_single(struct prop_descriptor *pd,struct prop_local_single *pl,long *numerator, long *denominator);
prop_inc_single  function  include/linux/proportions.h  127  void prop_inc_single(struct prop_descriptor *pd,struct prop_local_single *pl)
_LINUX_SECCOMP_H  macro  include/linux/seccomp.h  2  #define _LINUX_SECCOMP_H
seccomp  struct  include/linux/seccomp.h  54  struct seccomp { };
__secure_computing  prototype  include/linux/seccomp.h  28  extern int __secure_computing(int);
secure_computing  function  include/linux/seccomp.h  57  static inline int secure_computing(int this_syscall) { return 0; }
secure_computing_strict  function  include/linux/seccomp.h  58  static inline void secure_computing_strict(int this_syscall) { return; }
prctl_get_seccomp  function  include/linux/seccomp.h  60  static inline long prctl_get_seccomp(void)
prctl_set_seccomp  function  include/linux/seccomp.h  65  static inline long prctl_set_seccomp(unsigned long arg2,char __user *arg3)
seccomp_mode  function  include/linux/seccomp.h  70  static inline int seccomp_mode(struct seccomp *s)
seccomp_filter  struct  include/linux/seccomp.h  55  struct seccomp_filter { };
put_seccomp_filter  function  include/linux/seccomp.h  81  static inline void put_seccomp_filter(struct task_struct *tsk)
get_seccomp_filter  function  include/linux/seccomp.h  85  static inline void get_seccomp_filter(struct task_struct *tsk)
seccomp_bpf_load  prototype  include/linux/seccomp.h  79  extern u32 seccomp_bpf_load(int off);
__LINUX_RCUPDATE_H  macro  include/linux/rcupdate.h  34  #define __LINUX_RCUPDATE_H
rcutorture_record_test_transition  function  include/linux/rcupdate.h  58  static inline void rcutorture_record_test_transition(void)
rcutorture_record_progress  function  include/linux/rcupdate.h  61  static inline void rcutorture_record_progress(unsigned long vernum)
do_trace_rcu_torture_read  macro  include/linux/rcupdate.h  68  #define do_trace_rcu_torture_read(rcutorturename,rhp) do { } while (0)
UINT_CMP_GE  macro  include/linux/rcupdate.h  72  #define UINT_CMP_GE(a,b) (UINT_MAX / 2 >= (a) - (b))
UINT_CMP_LT  macro  include/linux/rcupdate.h  73  #define UINT_CMP_LT(a,b) (UINT_MAX / 2 < (a) - (b))
ULONG_CMP_GE  macro  include/linux/rcupdate.h  74  #define ULONG_CMP_GE(a,b) (ULONG_MAX / 2 >= (a) - (b))
ULONG_CMP_LT  macro  include/linux/rcupdate.h  75  #define ULONG_CMP_LT(a,b) (ULONG_MAX / 2 < (a) - (b))
call_rcu  macro  include/linux/rcupdate.h  119  #define call_rcu call_rcu_sched
call_rcu_bh  prototype  include/linux/rcupdate.h  145  extern void call_rcu_bh(struct rcu_head *head,void (*func)(struct rcu_head *head));
call_rcu_sched  prototype  include/linux/rcupdate.h  167  extern void call_rcu_sched(struct rcu_head *head,void (*func)(struct rcu_head *rcu));
synchronize_sched  prototype  include/linux/rcupdate.h  169  extern void synchronize_sched(void);
__rcu_read_lock  function  include/linux/rcupdate.h  188  static inline void __rcu_read_lock(void)
__rcu_read_unlock  function  include/linux/rcupdate.h  193  static inline void __rcu_read_unlock(void)
rcu_read_unlock_special  prototype  include/linux/rcupdate.h  175  extern void rcu_read_unlock_special(struct task_struct *t);
synchronize_rcu  function  include/linux/rcupdate.h  198  static inline void synchronize_rcu(void)
rcu_preempt_depth  function  include/linux/rcupdate.h  203  static inline int rcu_preempt_depth(void)
rcu_sched_qs  prototype  include/linux/rcupdate.h  211  extern void rcu_sched_qs(int cpu);
rcu_bh_qs  prototype  include/linux/rcupdate.h  212  extern void rcu_bh_qs(int cpu);
rcu_check_callbacks  prototype  include/linux/rcupdate.h  213  extern void rcu_check_callbacks(int cpu,int user);
rcu_idle_enter  prototype  include/linux/rcupdate.h  215  extern void rcu_idle_enter(void);
rcu_idle_exit  prototype  include/linux/rcupdate.h  216  extern void rcu_idle_exit(void);
rcu_irq_enter  prototype  include/linux/rcupdate.h  217  extern void rcu_irq_enter(void);
rcu_irq_exit  prototype  include/linux/rcupdate.h  218  extern void rcu_irq_exit(void);
rcu_user_enter  function  include/linux/rcupdate.h  226  static inline void rcu_user_enter(void) { }
rcu_user_exit  function  include/linux/rcupdate.h  227  static inline void rcu_user_exit(void) { }
rcu_user_enter_after_irq  function  include/linux/rcupdate.h  228  static inline void rcu_user_enter_after_irq(void) { }
rcu_user_exit_after_irq  function  include/linux/rcupdate.h  229  static inline void rcu_user_exit_after_irq(void) { }
rcu_user_hooks_switch  function  include/linux/rcupdate.h  231  static inline void rcu_user_hooks_switch(struct task_struct *prev,struct task_struct *next) { }
exit_rcu  prototype  include/linux/rcupdate.h  234  extern void exit_rcu(void);
RCU_NONIDLE  macro  include/linux/rcupdate.h  259  #define RCU_NONIDLE(a) do { rcu_irq_enter(); do { a; } while (0); rcu_irq_exit(); } while (0)
wait_rcu_gp  prototype  include/linux/rcupdate.h  268  void wait_rcu_gp(call_rcu_func_t crf);
init_rcu_head_on_stack  function  include/linux/rcupdate.h  288  static inline void init_rcu_head_on_stack(struct rcu_head *head)
destroy_rcu_head_on_stack  function  include/linux/rcupdate.h  292  static inline void destroy_rcu_head_on_stack(struct rcu_head *head)
rcu_is_cpu_idle  prototype  include/linux/rcupdate.h  298  extern int rcu_is_cpu_idle(void);
rcu_lockdep_current_cpu_online  function  include/linux/rcupdate.h  304  static inline bool rcu_lockdep_current_cpu_online(void)
rcu_lock_acquire  macro  include/linux/rcupdate.h  419  # define rcu_lock_acquire(a) do { } while (0)
rcu_lock_release  macro  include/linux/rcupdate.h  420  # define rcu_lock_release(a) do { } while (0)
debug_lockdep_rcu_enabled  prototype  include/linux/rcupdate.h  325  extern int debug_lockdep_rcu_enabled(void);
rcu_read_lock_held  function  include/linux/rcupdate.h  422  static inline int rcu_read_lock_held(void)
rcu_read_lock_bh_held  function  include/linux/rcupdate.h  427  static inline int rcu_read_lock_bh_held(void)
rcu_read_lock_sched_held  function  include/linux/rcupdate.h  438  static inline int rcu_read_lock_sched_held(void)
rcu_my_thread_group_empty  prototype  include/linux/rcupdate.h  448  extern int rcu_my_thread_group_empty(void);
rcu_lockdep_assert  macro  include/linux/rcupdate.h  489  #define rcu_lockdep_assert(c,s) do { } while (0)
rcu_preempt_sleep_check  function  include/linux/rcupdate.h  471  static inline void rcu_preempt_sleep_check(void)
rcu_sleep_check  macro  include/linux/rcupdate.h  490  #define rcu_sleep_check() do { } while (0)
rcu_dereference_sparse  macro  include/linux/rcupdate.h  507  #define rcu_dereference_sparse(p,space)
__rcu_access_pointer  macro  include/linux/rcupdate.h  515  #define __rcu_access_pointer(p,space) ({ typeof(*p) *_________p1 = (typeof(*p)*__force )ACCESS_ONCE(p); rcu_dereference_sparse(p, space); ((typeof(*p) __force __kernel *)(_________p1)); })
__rcu_dereference_check  macro  include/linux/rcupdate.h  524  #define __rcu_dereference_check(p,c,space) ({ typeof(*p) *_________p1 = (typeof(*p)*__force )ACCESS_ONCE(p); rcu_lockdep_assert(c, "suspicious rcu_dereference_check()" " usage"); rcu_dereference_sparse(p, space); smp_read_barrier_depends(); ((typeof(*p) __force __kernel *)(_________p1)); })
__rcu_dereference_protected  macro  include/linux/rcupdate.h  531  #define __rcu_dereference_protected(p,c,space) ({ rcu_lockdep_assert(c, "suspicious rcu_dereference_protected()" " usage"); rcu_dereference_sparse(p, space); ((typeof(*p) __force __kernel *)(p)); })
__rcu_access_index  macro  include/linux/rcupdate.h  538  #define __rcu_access_index(p,space) ({ typeof(p) _________p1 = ACCESS_ONCE(p); rcu_dereference_sparse(p, space); (_________p1); })
__rcu_dereference_index_check  macro  include/linux/rcupdate.h  547  #define __rcu_dereference_index_check(p,c) ({ typeof(p) _________p1 = ACCESS_ONCE(p); rcu_lockdep_assert(c, "suspicious rcu_dereference_index_check()" " usage"); smp_read_barrier_depends(); (_________p1); })
__rcu_assign_pointer  macro  include/linux/rcupdate.h  552  #define __rcu_assign_pointer(p,v,space) do { smp_wmb(); (p) = (typeof(*v) __force space *)(v); } while (0)
rcu_access_pointer  macro  include/linux/rcupdate.h  574  #define rcu_access_pointer(p) __rcu_access_pointer((p),__rcu)
rcu_dereference_check  macro  include/linux/rcupdate.h  610  #define rcu_dereference_check(p,c) __rcu_dereference_check((p), rcu_read_lock_held() || (c), __rcu)
rcu_dereference_bh_check  macro  include/linux/rcupdate.h  620  #define rcu_dereference_bh_check(p,c) __rcu_dereference_check((p), rcu_read_lock_bh_held() || (c), __rcu)
rcu_dereference_sched_check  macro  include/linux/rcupdate.h  631  #define rcu_dereference_sched_check(p,c) __rcu_dereference_check((p), rcu_read_lock_sched_held() || (c), __rcu)
rcu_dereference_raw  macro  include/linux/rcupdate.h  633  #define rcu_dereference_raw(p) rcu_dereference_check(p,1)
rcu_access_index  macro  include/linux/rcupdate.h  647  #define rcu_access_index(p) __rcu_access_index((p),__rcu)
rcu_dereference_index_check  macro  include/linux/rcupdate.h  668  #define rcu_dereference_index_check(p,c) __rcu_dereference_index_check((p), (c))
rcu_dereference_protected  macro  include/linux/rcupdate.h  688  #define rcu_dereference_protected(p,c) __rcu_dereference_protected((p), (c), __rcu)
rcu_dereference  macro  include/linux/rcupdate.h  697  #define rcu_dereference(p) rcu_dereference_check(p,0)
rcu_dereference_bh  macro  include/linux/rcupdate.h  705  #define rcu_dereference_bh(p) rcu_dereference_bh_check(p,0)
rcu_dereference_sched  macro  include/linux/rcupdate.h  713  #define rcu_dereference_sched(p) rcu_dereference_sched_check(p,0)
rcu_read_lock  function  include/linux/rcupdate.h  757  static inline void rcu_read_lock(void)
rcu_read_unlock  function  include/linux/rcupdate.h  781  static inline void rcu_read_unlock(void)
rcu_read_lock_bh  function  include/linux/rcupdate.h  807  static inline void rcu_read_lock_bh(void)
rcu_read_unlock_bh  function  include/linux/rcupdate.h  821  static inline void rcu_read_unlock_bh(void)
rcu_read_lock_sched  function  include/linux/rcupdate.h  843  static inline void rcu_read_lock_sched(void)
rcu_read_lock_sched_notrace  function  include/linux/rcupdate.h  853  static inline notrace void rcu_read_lock_sched_notrace(void)
rcu_read_unlock_sched  function  include/linux/rcupdate.h  864  static inline void rcu_read_unlock_sched(void)
rcu_read_unlock_sched_notrace  function  include/linux/rcupdate.h  874  static inline notrace void rcu_read_unlock_sched_notrace(void)
rcu_assign_pointer  macro  include/linux/rcupdate.h  904  #define rcu_assign_pointer(p,v) __rcu_assign_pointer((p), (v), __rcu)
RCU_INIT_POINTER  macro  include/linux/rcupdate.h  941  #define RCU_INIT_POINTER(p,v) do { p = (typeof(*v) __force __rcu *)(v); } while (0)
RCU_POINTER_INITIALIZER  macro  include/linux/rcupdate.h  949  #define RCU_POINTER_INITIALIZER(p,v) .p = (typeof(*v) __force __rcu *)(v)
__is_kfree_rcu_offset  macro  include/linux/rcupdate.h  955  #define __is_kfree_rcu_offset(offset) ((offset) < 4096)
__kfree_rcu  macro  include/linux/rcupdate.h  964  #define __kfree_rcu(head,offset) do { BUILD_BUG_ON(!__is_kfree_rcu_offset(offset)); kfree_call_rcu(head, (void (*)(struct rcu_head *))(unsigned long)(offset)); } while (0)
kfree_rcu  macro  include/linux/rcupdate.h  993  #define kfree_rcu(ptr,rcu_head) __kfree_rcu(&((ptr)->rcu_head), offsetof(typeof(*(ptr)), rcu_head))
_LINUX_RCULIST_H  macro  include/linux/rculist.h  2  #define _LINUX_RCULIST_H
list_next_rcu  macro  include/linux/rculist.h  25  #define list_next_rcu(list) (*((struct list_head __rcu **)(&(list)->next)))
__list_add_rcu  prototype  include/linux/rculist.h  44  extern void __list_add_rcu(struct list_head *new,struct list_head *prev, struct list_head *next);
list_add_rcu  function  include/linux/rculist.h  63  static inline void list_add_rcu(struct list_head *new,struct list_head *head)
list_add_tail_rcu  function  include/linux/rculist.h  85  static inline void list_add_tail_rcu(struct list_head *new,struct list_head *head)
list_del_rcu  function  include/linux/rculist.h  114  static inline void list_del_rcu(struct list_head *entry)
hlist_del_init_rcu  function  include/linux/rculist.h  140  static inline void hlist_del_init_rcu(struct hlist_node *n)
list_replace_rcu  function  include/linux/rculist.h  157  static inline void list_replace_rcu(struct list_head *old,struct list_head *new)
list_splice_init_rcu  function  include/linux/rculist.h  185  static inline void list_splice_init_rcu(struct list_head *list,struct list_head *head,void (*sync)(void))
list_entry_rcu  macro  include/linux/rculist.h  233  #define list_entry_rcu(ptr,type,member) ({typeof (*ptr) __rcu *__ptr = (typeof (*ptr) __rcu __force *)ptr; container_of((typeof(ptr))rcu_dereference_raw(__ptr), type, member); })
list_first_or_null_rcu  macro  include/linux/rculist.h  272  #define list_first_or_null_rcu(ptr,type,member) ({struct list_head *__ptr = (ptr); struct list_head __rcu *__next = list_next_rcu(__ptr); likely(__ptr != __next) ? container_of(__next, type, member) : NULL; })
list_for_each_entry_rcu  macro  include/linux/rculist.h  287  #define list_for_each_entry_rcu(pos,head,member) for (pos = list_entry_rcu((head)->next, typeof(*pos), member); &pos->member != (head); pos = list_entry_rcu(pos->member.next, typeof(*pos), member))
list_for_each_entry_continue_rcu  macro  include/linux/rculist.h  301  #define list_for_each_entry_continue_rcu(pos,head,member) for (pos = list_entry_rcu(pos->member.next, typeof(*pos), member); &pos->member != (head); pos = list_entry_rcu(pos->member.next, typeof(*pos), member))
hlist_del_rcu  function  include/linux/rculist.h  322  static inline void hlist_del_rcu(struct hlist_node *n)
hlist_replace_rcu  function  include/linux/rculist.h  336  static inline void hlist_replace_rcu(struct hlist_node *old,struct hlist_node *new)
hlist_first_rcu  macro  include/linux/rculist.h  351  #define hlist_first_rcu(head) (*((struct hlist_node __rcu **)(&(head)->first)))
hlist_next_rcu  macro  include/linux/rculist.h  352  #define hlist_next_rcu(node) (*((struct hlist_node __rcu **)(&(node)->next)))
hlist_pprev_rcu  macro  include/linux/rculist.h  353  #define hlist_pprev_rcu(node) (*((struct hlist_node __rcu **)((node)->pprev)))
hlist_add_head_rcu  function  include/linux/rculist.h  375  static inline void hlist_add_head_rcu(struct hlist_node *n,struct hlist_head *h)
hlist_add_before_rcu  function  include/linux/rculist.h  405  static inline void hlist_add_before_rcu(struct hlist_node *n,struct hlist_node *next)
hlist_add_after_rcu  function  include/linux/rculist.h  432  static inline void hlist_add_after_rcu(struct hlist_node *prev,struct hlist_node *n)
__hlist_for_each_rcu  macro  include/linux/rculist.h  444  #define __hlist_for_each_rcu(pos,head) for (pos = rcu_dereference(hlist_first_rcu(head)); pos; pos = rcu_dereference(hlist_next_rcu(pos)))
hlist_for_each_entry_rcu  macro  include/linux/rculist.h  461  #define hlist_for_each_entry_rcu(tpos,pos,head,member) for (pos = rcu_dereference_raw(hlist_first_rcu(head)); pos && ({ tpos = hlist_entry(pos, typeof(*tpos), member); 1; }); pos = rcu_dereference_raw(hlist_next_rcu(pos)))
hlist_for_each_entry_rcu_bh  macro  include/linux/rculist.h  478  #define hlist_for_each_entry_rcu_bh(tpos,pos,head,member) for (pos = rcu_dereference_bh((head)->first); pos && ({ tpos = hlist_entry(pos, typeof(*tpos), member); 1; }); pos = rcu_dereference_bh(pos->next))
hlist_for_each_entry_continue_rcu  macro  include/linux/rculist.h  490  #define hlist_for_each_entry_continue_rcu(tpos,pos,member) for (pos = rcu_dereference((pos)->next); pos && ({ tpos = hlist_entry(pos, typeof(*tpos), member); 1; }); pos = rcu_dereference(pos->next))
hlist_for_each_entry_continue_rcu_bh  macro  include/linux/rculist.h  502  #define hlist_for_each_entry_continue_rcu_bh(tpos,pos,member) for (pos = rcu_dereference_bh((pos)->next); pos && ({ tpos = hlist_entry(pos, typeof(*tpos), member); 1; }); pos = rcu_dereference_bh(pos->next))
__LINUX_RT_MUTEX_H  macro  include/linux/rtmutex.h  13  #define __LINUX_RT_MUTEX_H
rt_mutex  struct  include/linux/rtmutex.h  28  struct rt_mutex {
rt_mutex_debug_check_no_locks_freed  function  include/linux/rtmutex.h  49  static inline int rt_mutex_debug_check_no_locks_freed(const void *from,unsigned long len)
rt_mutex_debug_check_no_locks_held  macro  include/linux/rtmutex.h  53  # define rt_mutex_debug_check_no_locks_held(task) do { } while (0)
__DEBUG_RT_MUTEX_INITIALIZER  macro  include/linux/rtmutex.h  62  # define __DEBUG_RT_MUTEX_INITIALIZER(mutexname)
rt_mutex_init  macro  include/linux/rtmutex.h  63  # define rt_mutex_init(mutex) __rt_mutex_init(mutex,NULL)
rt_mutex_debug_task_free  macro  include/linux/rtmutex.h  64  # define rt_mutex_debug_task_free(t) do { } while (0)
__RT_MUTEX_INITIALIZER  macro  include/linux/rtmutex.h  71  #define __RT_MUTEX_INITIALIZER(mutexname) { .wait_lock = __RAW_SPIN_LOCK_UNLOCKED(mutexname.wait_lock) , .wait_list = PLIST_HEAD_INIT(mutexname.wait_list) , .owner = NULL __DEBUG_RT_MUTEX_INITIALIZER(mutexname)}
DEFINE_RT_MUTEX  macro  include/linux/rtmutex.h  74  #define DEFINE_RT_MUTEX(mutexname) struct rt_mutex mutexname = __RT_MUTEX_INITIALIZER(mutexname)
rt_mutex_is_locked  function  include/linux/rtmutex.h  82  static inline int rt_mutex_is_locked(struct rt_mutex *lock)
__rt_mutex_init  prototype  include/linux/rtmutex.h  87  extern void __rt_mutex_init(struct rt_mutex *lock,const char *name);
rt_mutex_destroy  prototype  include/linux/rtmutex.h  88  extern void rt_mutex_destroy(struct rt_mutex *lock);
rt_mutex_lock  prototype  include/linux/rtmutex.h  90  extern void rt_mutex_lock(struct rt_mutex *lock);
rt_mutex_lock_interruptible  prototype  include/linux/rtmutex.h  92  extern int rt_mutex_lock_interruptible(struct rt_mutex *lock,int detect_deadlock);
rt_mutex_timed_lock  prototype  include/linux/rtmutex.h  95  extern int rt_mutex_timed_lock(struct rt_mutex *lock,struct hrtimer_sleeper *timeout,int detect_deadlock);
rt_mutex_trylock  prototype  include/linux/rtmutex.h  97  extern int rt_mutex_trylock(struct rt_mutex *lock);
rt_mutex_unlock  prototype  include/linux/rtmutex.h  99  extern void rt_mutex_unlock(struct rt_mutex *lock);
INIT_RT_MUTEXES  macro  include/linux/rtmutex.h  106  # define INIT_RT_MUTEXES(tsk)
_LINUX_TIME_H  macro  include/linux/time.h  2  #define _LINUX_TIME_H
MSEC_PER_SEC  macro  include/linux/time.h  12  #define MSEC_PER_SEC 1000L
USEC_PER_MSEC  macro  include/linux/time.h  13  #define USEC_PER_MSEC 1000L
NSEC_PER_USEC  macro  include/linux/time.h  14  #define NSEC_PER_USEC 1000L
NSEC_PER_MSEC  macro  include/linux/time.h  15  #define NSEC_PER_MSEC 1000000L
USEC_PER_SEC  macro  include/linux/time.h  16  #define USEC_PER_SEC 1000000L
NSEC_PER_SEC  macro  include/linux/time.h  17  #define NSEC_PER_SEC 1000000000L
FSEC_PER_SEC  macro  include/linux/time.h  18  #define FSEC_PER_SEC 1000000000000000LL
TIME_T_MAX  macro  include/linux/time.h  20  #define TIME_T_MAX (time_t)((1UL << ((sizeof(time_t) << 3) - 1)) - 1)
timespec_equal  function  include/linux/time.h  23  static inline int timespec_equal(const struct timespec *a,const struct timespec *b)
timespec_compare  function  include/linux/time.h  33  static inline int timespec_compare(const struct timespec *lhs,const struct timespec *rhs)
timeval_compare  function  include/linux/time.h  42  static inline int timeval_compare(const struct timeval *lhs,const struct timeval *rhs)
mktime  prototype  include/linux/time.h  53  extern unsigned long mktime(const unsigned int year,const unsigned int mon,const unsigned int day, const unsigned int hour,const unsigned int min, const unsigned int sec);
set_normalized_timespec  prototype  include/linux/time.h  55  extern void set_normalized_timespec(struct timespec *ts,time_t sec,s64 nsec);
timespec_add_safe  prototype  include/linux/time.h  63  extern struct timespec timespec_add_safe(const struct timespec lhs,const struct timespec rhs);
timespec_add  function  include/linux/time.h  67  static inline struct timespec timespec_add(struct timespec lhs,struct timespec rhs)
timespec_sub  function  include/linux/time.h  79  static inline struct timespec timespec_sub(struct timespec lhs,struct timespec rhs)
KTIME_MAX  macro  include/linux/time.h  87  #define KTIME_MAX ((s64)~((u64)1 << 63))
KTIME_SEC_MAX  macro  include/linux/time.h  91  # define KTIME_SEC_MAX LONG_MAX
timespec_valid  function  include/linux/time.h  97  static inline bool timespec_valid(const struct timespec *ts)
timespec_valid_strict  function  include/linux/time.h  108  static inline bool timespec_valid_strict(const struct timespec *ts)
read_persistent_clock  prototype  include/linux/time.h  118  extern void read_persistent_clock(struct timespec *ts);
read_boot_clock  prototype  include/linux/time.h  119  extern void read_boot_clock(struct timespec *ts);
update_persistent_clock  prototype  include/linux/time.h  120  extern int update_persistent_clock(struct timespec now);
timekeeping_init  prototype  include/linux/time.h  121  void timekeeping_init(void);
get_seconds  prototype  include/linux/time.h  124  unsigned long get_seconds(void);
current_kernel_time  prototype  include/linux/time.h  125  struct timespec current_kernel_time(void);
__current_kernel_time  prototype  include/linux/time.h  126  struct timespec __current_kernel_time(void);
get_monotonic_coarse  prototype  include/linux/time.h  127  struct timespec get_monotonic_coarse(void);
get_xtime_and_monotonic_and_sleep_offset  prototype  include/linux/time.h  129  void get_xtime_and_monotonic_and_sleep_offset(struct timespec *xtim,struct timespec *wtom, struct timespec *sleep);
timekeeping_inject_sleeptime  prototype  include/linux/time.h  130  void timekeeping_inject_sleeptime(struct timespec *delta);
CURRENT_TIME  macro  include/linux/time.h  132  #define CURRENT_TIME (current_kernel_time())
CURRENT_TIME_SEC  macro  include/linux/time.h  133  #define CURRENT_TIME_SEC ((struct timespec) { get_seconds(),0 })
arch_gettimeoffset  function  include/linux/time.h  147  static inline u32 arch_gettimeoffset(void) { return 0; }
do_gettimeofday  prototype  include/linux/time.h  150  extern void do_gettimeofday(struct timeval *tv);
do_settimeofday  prototype  include/linux/time.h  151  extern int do_settimeofday(const struct timespec *tv);
do_sys_settimeofday  prototype  include/linux/time.h  153  extern int do_sys_settimeofday(const struct timespec *tv,const struct timezone *tz);
do_posix_clock_monotonic_gettime  macro  include/linux/time.h  154  #define do_posix_clock_monotonic_gettime(ts) ktime_get_ts(ts)
do_utimes  prototype  include/linux/time.h  155  extern long do_utimes(int dfd,const char __user *filename,struct timespec *times,int flags);
do_setitimer  prototype  include/linux/time.h  158  extern int do_setitimer(int which,struct itimerval *value,struct itimerval *ovalue);
alarm_setitimer  prototype  include/linux/time.h  159  extern unsigned int alarm_setitimer(unsigned int seconds);
do_getitimer  prototype  include/linux/time.h  160  extern int do_getitimer(int which,struct itimerval *value);
getnstimeofday  prototype  include/linux/time.h  161  extern void getnstimeofday(struct timespec *tv);
getrawmonotonic  prototype  include/linux/time.h  162  extern void getrawmonotonic(struct timespec *ts);
getnstime_raw_and_real  prototype  include/linux/time.h  164  extern void getnstime_raw_and_real(struct timespec *ts_raw,struct timespec *ts_real);
getboottime  prototype  include/linux/time.h  165  extern void getboottime(struct timespec *ts);
monotonic_to_bootbased  prototype  include/linux/time.h  166  extern void monotonic_to_bootbased(struct timespec *ts);
get_monotonic_boottime  prototype  include/linux/time.h  167  extern void get_monotonic_boottime(struct timespec *ts);
timespec_trunc  prototype  include/linux/time.h  169  extern struct timespec timespec_trunc(struct timespec t,unsigned gran);
timekeeping_valid_for_hres  prototype  include/linux/time.h  170  extern int timekeeping_valid_for_hres(void);
timekeeping_max_deferment  prototype  include/linux/time.h  171  extern u64 timekeeping_max_deferment(void);
timekeeping_inject_offset  prototype  include/linux/time.h  172  extern int timekeeping_inject_offset(struct timespec *ts);
do_sys_times  prototype  include/linux/time.h  175  extern void do_sys_times(struct tms *);
tm  struct  include/linux/time.h  181  struct tm {
time_to_tm  prototype  include/linux/time.h  203  void time_to_tm(time_t totalsecs,int offset,struct tm *result);
timespec_to_ns  function  include/linux/time.h  212  static inline s64 timespec_to_ns(const struct timespec *ts)
timeval_to_ns  function  include/linux/time.h  224  static inline s64 timeval_to_ns(const struct timeval *tv)
ns_to_timespec  prototype  include/linux/time.h  236  extern struct timespec ns_to_timespec(const s64 nsec);
ns_to_timeval  prototype  include/linux/time.h  244  extern struct timeval ns_to_timeval(const s64 nsec);
timespec_add_ns  function  include/linux/time.h  254  static __always_inline void timespec_add_ns(struct timespec *a,u64 ns)
_LINUX_PARAM_H  macro  include/uapi/linux/param.h  2  #define _LINUX_PARAM_H
_LINUX_RESOURCE_H  macro  include/linux/resource.h  2  #define _LINUX_RESOURCE_H
getrusage  prototype  include/linux/resource.h  9  int getrusage(struct task_struct *p,int who,struct rusage __user *ru);
do_prlimit  prototype  include/linux/resource.h  11  int do_prlimit(struct task_struct *tsk,unsigned int resource,struct rlimit *new_rlim, struct rlimit *old_rlim);
_LINUX_TIMER_H  macro  include/linux/timer.h  2  #define _LINUX_TIMER_H
timer_list  struct  include/linux/timer.h  12  struct timer_list {
__TIMER_LOCKDEP_MAP_INITIALIZER  macro  include/linux/timer.h  48  #define __TIMER_LOCKDEP_MAP_INITIALIZER(_kn)
TIMER_DEFERRABLE  macro  include/linux/timer.h  68  #define TIMER_DEFERRABLE 0x1LU
TIMER_IRQSAFE  macro  include/linux/timer.h  69  #define TIMER_IRQSAFE 0x2LU
TIMER_FLAG_MASK  macro  include/linux/timer.h  71  #define TIMER_FLAG_MASK 0x3LU
__TIMER_INITIALIZER  macro  include/linux/timer.h  82  #define __TIMER_INITIALIZER(_function,_expires,_data,_flags) { .entry = { .prev = TIMER_ENTRY_STATIC }, .function = (_function), .expires = (_expires), .data = (_data), .base = (void *)((unsigned long)&boot_tvec_bases + (_flags)), .slack = -1, __TIMER_LOCKDEP_MAP_INITIALIZER( __FILE__ ":" __stringify(__LINE__)) }
TIMER_INITIALIZER  macro  include/linux/timer.h  85  #define TIMER_INITIALIZER(_function,_expires,_data) __TIMER_INITIALIZER((_function), (_expires), (_data), 0)
TIMER_DEFERRED_INITIALIZER  macro  include/linux/timer.h  88  #define TIMER_DEFERRED_INITIALIZER(_function,_expires,_data) __TIMER_INITIALIZER((_function), (_expires), (_data), TIMER_DEFERRABLE)
DEFINE_TIMER  macro  include/linux/timer.h  92  #define DEFINE_TIMER(_name,_function,_expires,_data) struct timer_list _name = TIMER_INITIALIZER(_function, _expires, _data)
init_timer_key  prototype  include/linux/timer.h  95  void init_timer_key(struct timer_list *timer,unsigned int flags,const char *name, struct lock_class_key *key);
init_timer_on_stack_key  function  include/linux/timer.h  106  static inline void init_timer_on_stack_key(struct timer_list *timer,unsigned int flags, const char *name,struct lock_class_key *key)
destroy_timer_on_stack  function  include/linux/timer.h  103  static inline void destroy_timer_on_stack(struct timer_list *timer) { }
__init_timer  macro  include/linux/timer.h  126  #define __init_timer(_timer,_flags) init_timer_key((_timer), (_flags), NULL, NULL)
__init_timer_on_stack  macro  include/linux/timer.h  128  #define __init_timer_on_stack(_timer,_flags) init_timer_on_stack_key((_timer), (_flags), NULL, NULL)
init_timer  macro  include/linux/timer.h  132  #define init_timer(timer) __init_timer((timer), 0)
init_timer_deferrable  macro  include/linux/timer.h  134  #define init_timer_deferrable(timer) __init_timer((timer), TIMER_DEFERRABLE)
init_timer_on_stack  macro  include/linux/timer.h  136  #define init_timer_on_stack(timer) __init_timer_on_stack((timer), 0)
__setup_timer  macro  include/linux/timer.h  143  #define __setup_timer(_timer,_fn,_data,_flags) do { __init_timer((_timer), (_flags)); (_timer)->function = (_fn); (_timer)->data = (_data); } while (0)
__setup_timer_on_stack  macro  include/linux/timer.h  150  #define __setup_timer_on_stack(_timer,_fn,_data,_flags) do { __init_timer_on_stack((_timer), (_flags)); (_timer)->function = (_fn); (_timer)->data = (_data); } while (0)
setup_timer  macro  include/linux/timer.h  153  #define setup_timer(timer,fn,data) __setup_timer((timer), (fn), (data), 0)
setup_timer_on_stack  macro  include/linux/timer.h  155  #define setup_timer_on_stack(timer,fn,data) __setup_timer_on_stack((timer), (fn), (data), 0)
setup_deferrable_timer_on_stack  macro  include/linux/timer.h  157  #define setup_deferrable_timer_on_stack(timer,fn,data) __setup_timer_on_stack((timer), (fn), (data), TIMER_DEFERRABLE)
timer_pending  function  include/linux/timer.h  169  static inline int timer_pending(const struct timer_list * timer)
add_timer_on  prototype  include/linux/timer.h  174  extern void add_timer_on(struct timer_list *timer,int cpu);
del_timer  prototype  include/linux/timer.h  175  extern int del_timer(struct timer_list * timer);
mod_timer  prototype  include/linux/timer.h  176  extern int mod_timer(struct timer_list *timer,unsigned long expires);
mod_timer_pending  prototype  include/linux/timer.h  177  extern int mod_timer_pending(struct timer_list *timer,unsigned long expires);
mod_timer_pinned  prototype  include/linux/timer.h  178  extern int mod_timer_pinned(struct timer_list *timer,unsigned long expires);
set_timer_slack  prototype  include/linux/timer.h  180  extern void set_timer_slack(struct timer_list *time,int slack_hz);
TIMER_NOT_PINNED  macro  include/linux/timer.h  182  #define TIMER_NOT_PINNED 0
TIMER_PINNED  macro  include/linux/timer.h  183  #define TIMER_PINNED 1
NEXT_TIMER_MAX_DELTA  macro  include/linux/timer.h  188  #define NEXT_TIMER_MAX_DELTA ((1UL << 30) - 1)
get_next_timer_interrupt  prototype  include/linux/timer.h  195  extern unsigned long get_next_timer_interrupt(unsigned long now);
TIMER_STATS_FLAG_DEFERRABLE  macro  include/linux/timer.h  204  #define TIMER_STATS_FLAG_DEFERRABLE 0x1
init_timer_stats  function  include/linux/timer.h  227  static inline void init_timer_stats(void)
timer_stats_update_stats  prototype  include/linux/timer.h  210  extern void timer_stats_update_stats(void *timer,pid_t pid,void *startf,void *timerf, char *comm,unsigned int timer_flag);
__timer_stats_timer_set_start_info  prototype  include/linux/timer.h  213  extern void __timer_stats_timer_set_start_info(struct timer_list *timer,void *addr);
timer_stats_timer_set_start_info  function  include/linux/timer.h  231  static inline void timer_stats_timer_set_start_info(struct timer_list *timer)
timer_stats_timer_clear_start_info  function  include/linux/timer.h  235  static inline void timer_stats_timer_clear_start_info(struct timer_list *timer)
add_timer  prototype  include/linux/timer.h  240  extern void add_timer(struct timer_list *timer);
try_to_del_timer_sync  prototype  include/linux/timer.h  242  extern int try_to_del_timer_sync(struct timer_list *timer);
del_timer_sync  macro  include/linux/timer.h  247  # define del_timer_sync(t) del_timer(t)
del_singleshot_timer_sync  macro  include/linux/timer.h  250  #define del_singleshot_timer_sync(t) del_timer_sync(t)
init_timers  prototype  include/linux/timer.h  252  extern void init_timers(void);
run_local_timers  prototype  include/linux/timer.h  253  extern void run_local_timers(void);
it_real_fn  prototype  include/linux/timer.h  255  extern enum hrtimer_restart it_real_fn(struct hrtimer *);
__round_jiffies  prototype  include/linux/timer.h  257  unsigned long __round_jiffies(unsigned long j,int cpu);
__round_jiffies_relative  prototype  include/linux/timer.h  258  unsigned long __round_jiffies_relative(unsigned long j,int cpu);
round_jiffies  prototype  include/linux/timer.h  259  unsigned long round_jiffies(unsigned long j);
round_jiffies_relative  prototype  include/linux/timer.h  260  unsigned long round_jiffies_relative(unsigned long j);
__round_jiffies_up  prototype  include/linux/timer.h  262  unsigned long __round_jiffies_up(unsigned long j,int cpu);
__round_jiffies_up_relative  prototype  include/linux/timer.h  263  unsigned long __round_jiffies_up_relative(unsigned long j,int cpu);
round_jiffies_up  prototype  include/linux/timer.h  264  unsigned long round_jiffies_up(unsigned long j);
round_jiffies_up_relative  prototype  include/linux/timer.h  265  unsigned long round_jiffies_up_relative(unsigned long j);
_LINUX_HRTIMER_H  macro  include/linux/hrtimer.h  16  #define _LINUX_HRTIMER_H
hrtimer_mode  enum  include/linux/hrtimer.h  33  enum hrtimer_mode {
hrtimer_restart  function  include/linux/hrtimer.h  380  static inline int hrtimer_restart(struct hrtimer *timer)
HRTIMER_STATE_INACTIVE  macro  include/linux/hrtimer.h  80  #define HRTIMER_STATE_INACTIVE 0x00
HRTIMER_STATE_ENQUEUED  macro  include/linux/hrtimer.h  81  #define HRTIMER_STATE_ENQUEUED 0x01
HRTIMER_STATE_CALLBACK  macro  include/linux/hrtimer.h  82  #define HRTIMER_STATE_CALLBACK 0x02
HRTIMER_STATE_MIGRATE  macro  include/linux/hrtimer.h  83  #define HRTIMER_STATE_MIGRATE 0x04
hrtimer  struct  include/linux/hrtimer.h  108  struct hrtimer {
hrtimer_sleeper  struct  include/linux/hrtimer.h  128  struct hrtimer_sleeper {
hrtimer_clock_base  struct  include/linux/hrtimer.h  145  struct hrtimer_clock_base {
hrtimer_base_type  enum  include/linux/hrtimer.h  156  enum hrtimer_base_type {
hrtimer_cpu_base  struct  include/linux/hrtimer.h  179  struct hrtimer_cpu_base {
hrtimer_set_expires  function  include/linux/hrtimer.h  195  static inline void hrtimer_set_expires(struct hrtimer *timer,ktime_t time)
hrtimer_set_expires_range  function  include/linux/hrtimer.h  201  static inline void hrtimer_set_expires_range(struct hrtimer *timer,ktime_t time,ktime_t delta)
hrtimer_set_expires_range_ns  function  include/linux/hrtimer.h  207  static inline void hrtimer_set_expires_range_ns(struct hrtimer *timer,ktime_t time,unsigned long delta)
hrtimer_set_expires_tv64  function  include/linux/hrtimer.h  213  static inline void hrtimer_set_expires_tv64(struct hrtimer *timer,s64 tv64)
hrtimer_add_expires  function  include/linux/hrtimer.h  219  static inline void hrtimer_add_expires(struct hrtimer *timer,ktime_t time)
hrtimer_add_expires_ns  function  include/linux/hrtimer.h  225  static inline void hrtimer_add_expires_ns(struct hrtimer *timer,u64 ns)
hrtimer_get_expires  function  include/linux/hrtimer.h  231  static inline ktime_t hrtimer_get_expires(const struct hrtimer *timer)
hrtimer_get_softexpires  function  include/linux/hrtimer.h  236  static inline ktime_t hrtimer_get_softexpires(const struct hrtimer *timer)
hrtimer_get_expires_tv64  function  include/linux/hrtimer.h  241  static inline s64 hrtimer_get_expires_tv64(const struct hrtimer *timer)
hrtimer_get_softexpires_tv64  function  include/linux/hrtimer.h  245  static inline s64 hrtimer_get_softexpires_tv64(const struct hrtimer *timer)
hrtimer_get_expires_ns  function  include/linux/hrtimer.h  250  static inline s64 hrtimer_get_expires_ns(const struct hrtimer *timer)
hrtimer_expires_remaining  function  include/linux/hrtimer.h  255  static inline ktime_t hrtimer_expires_remaining(const struct hrtimer *timer)
hrtimer_interrupt  prototype  include/linux/hrtimer.h  263  extern void hrtimer_interrupt(struct clock_event_device *dev);
hrtimer_cb_get_time  function  include/linux/hrtimer.h  304  static inline ktime_t hrtimer_cb_get_time(struct hrtimer *timer)
hrtimer_is_hres_active  function  include/linux/hrtimer.h  309  static inline int hrtimer_is_hres_active(struct hrtimer *timer)
hrtimer_peek_ahead_timers  function  include/linux/hrtimer.h  298  static inline void hrtimer_peek_ahead_timers(void) { }
HIGH_RES_NSEC  macro  include/linux/hrtimer.h  286  # define HIGH_RES_NSEC 1
KTIME_HIGH_RES  macro  include/linux/hrtimer.h  287  # define KTIME_HIGH_RES (ktime_t) { .tv64 = HIGH_RES_NSEC }
MONOTONIC_RES_NSEC  macro  include/linux/hrtimer.h  295  # define MONOTONIC_RES_NSEC LOW_RES_NSEC
KTIME_MONOTONIC_RES  macro  include/linux/hrtimer.h  296  # define KTIME_MONOTONIC_RES KTIME_LOW_RES
clock_was_set_delayed  function  include/linux/hrtimer.h  314  static inline void clock_was_set_delayed(void) { }
clock_was_set  prototype  include/linux/hrtimer.h  318  extern void clock_was_set(void);
timerfd_clock_was_set  function  include/linux/hrtimer.h  322  static inline void timerfd_clock_was_set(void) { }
hrtimers_resume  prototype  include/linux/hrtimer.h  324  extern void hrtimers_resume(void);
ktime_get  prototype  include/linux/hrtimer.h  326  extern ktime_t ktime_get(void);
ktime_get_real  prototype  include/linux/hrtimer.h  327  extern ktime_t ktime_get_real(void);
ktime_get_boottime  prototype  include/linux/hrtimer.h  328  extern ktime_t ktime_get_boottime(void);
ktime_get_monotonic_offset  prototype  include/linux/hrtimer.h  329  extern ktime_t ktime_get_monotonic_offset(void);
ktime_get_update_offsets  prototype  include/linux/hrtimer.h  330  extern ktime_t ktime_get_update_offsets(ktime_t *offs_real,ktime_t *offs_boot);
hrtimer_init  prototype  include/linux/hrtimer.h  339  extern void hrtimer_init(struct hrtimer *timer,clockid_t which_clock,enum hrtimer_mode mode);
hrtimer_init_on_stack  function  include/linux/hrtimer.h  349  static inline void hrtimer_init_on_stack(struct hrtimer *timer,clockid_t which_clock,enum hrtimer_mode mode)
destroy_hrtimer_on_stack  function  include/linux/hrtimer.h  353  static inline void destroy_hrtimer_on_stack(struct hrtimer *timer) { }
hrtimer_start  prototype  include/linux/hrtimer.h  358  extern int hrtimer_start(struct hrtimer *timer,ktime_t tim,const enum hrtimer_mode mode);
hrtimer_start_range_ns  prototype  include/linux/hrtimer.h  360  extern int hrtimer_start_range_ns(struct hrtimer *timer,ktime_t tim,unsigned long range_ns, const enum hrtimer_mode mode);
__hrtimer_start_range_ns  prototype  include/linux/hrtimer.h  364  __hrtimer_start_range_ns(struct hrtimer *timer,ktime_t tim,unsigned long delta_ns,const enum hrtimer_mode mode, int wakeup);
hrtimer_cancel  prototype  include/linux/hrtimer.h  366  extern int hrtimer_cancel(struct hrtimer *timer);
hrtimer_try_to_cancel  prototype  include/linux/hrtimer.h  367  extern int hrtimer_try_to_cancel(struct hrtimer *timer);
hrtimer_start_expires  function  include/linux/hrtimer.h  370  static inline int hrtimer_start_expires(struct hrtimer *timer,enum hrtimer_mode mode)
hrtimer_get_remaining  prototype  include/linux/hrtimer.h  386  extern ktime_t hrtimer_get_remaining(const struct hrtimer *timer);
hrtimer_get_res  prototype  include/linux/hrtimer.h  387  extern int hrtimer_get_res(const clockid_t which_clock,struct timespec *tp);
hrtimer_get_next_event  prototype  include/linux/hrtimer.h  389  extern ktime_t hrtimer_get_next_event(void);
hrtimer_active  function  include/linux/hrtimer.h  396  static inline int hrtimer_active(const struct hrtimer *timer)
hrtimer_is_queued  function  include/linux/hrtimer.h  404  static inline int hrtimer_is_queued(struct hrtimer *timer)
hrtimer_callback_running  function  include/linux/hrtimer.h  413  static inline int hrtimer_callback_running(struct hrtimer *timer)
hrtimer_forward  prototype  include/linux/hrtimer.h  420  hrtimer_forward(struct hrtimer *timer,ktime_t now,ktime_t interval);
hrtimer_forward_now  function  include/linux/hrtimer.h  424  static inline u64 hrtimer_forward_now(struct hrtimer *timer,ktime_t interval)
hrtimer_nanosleep  prototype  include/linux/hrtimer.h  433  extern long hrtimer_nanosleep(struct timespec *rqtp,struct timespec __user *rmtp,const enum hrtimer_mode mode,const clockid_t clockid);
hrtimer_nanosleep_restart  prototype  include/linux/hrtimer.h  434  extern long hrtimer_nanosleep_restart(struct restart_block *restart_block);
hrtimer_init_sleeper  prototype  include/linux/hrtimer.h  437  extern void hrtimer_init_sleeper(struct hrtimer_sleeper *sl,struct task_struct *tsk);
schedule_hrtimeout_range  prototype  include/linux/hrtimer.h  440  extern int schedule_hrtimeout_range(ktime_t *expires,unsigned long delta,const enum hrtimer_mode mode);
schedule_hrtimeout_range_clock  prototype  include/linux/hrtimer.h  442  extern int schedule_hrtimeout_range_clock(ktime_t *expires,unsigned long delta, const enum hrtimer_mode mode, int clock);
schedule_hrtimeout  prototype  include/linux/hrtimer.h  443  extern int schedule_hrtimeout(ktime_t *expires,const enum hrtimer_mode mode);
hrtimer_run_queues  prototype  include/linux/hrtimer.h  446  extern void hrtimer_run_queues(void);
hrtimer_run_pending  prototype  include/linux/hrtimer.h  447  extern void hrtimer_run_pending(void);
hrtimers_init  prototype  include/linux/hrtimer.h  450  extern void __init hrtimers_init(void);
ktime_divns  macro  include/linux/hrtimer.h  455  # define ktime_divns(kt,div) (u64)((kt).tv64 / (div))
sysrq_timer_list_show  prototype  include/linux/hrtimer.h  459  extern void sysrq_timer_list_show(void);
task_io_accounting  struct  include/linux/task_io_accounting.h  11  struct task_io_accounting {
_INCLUDE_GUARD_LATENCYTOP_H_  macro  include/linux/latencytop.h  10  #define _INCLUDE_GUARD_LATENCYTOP_H_
LT_SAVECOUNT  macro  include/linux/latencytop.h  17  #define LT_SAVECOUNT 32
LT_BACKTRACEDEPTH  macro  include/linux/latencytop.h  18  #define LT_BACKTRACEDEPTH 12
latency_record  struct  include/linux/latencytop.h  20  struct latency_record {
__account_scheduler_latency  prototype  include/linux/latencytop.h  30  void __account_scheduler_latency(struct task_struct *task,int usecs,int inter);
account_scheduler_latency  function  include/linux/latencytop.h  43  account_scheduler_latency(struct task_struct *task,int usecs,int inter)
clear_all_latency_tracing  function  include/linux/latencytop.h  47  static inline void clear_all_latency_tracing(struct task_struct *p)
_LINUX_CRED_H  macro  include/linux/cred.h  13  #define _LINUX_CRED_H
NGROUPS_SMALL  macro  include/linux/cred.h  29  #define NGROUPS_SMALL 32
NGROUPS_PER_BLOCK  macro  include/linux/cred.h  30  #define NGROUPS_PER_BLOCK ((unsigned int)(PAGE_SIZE / sizeof(kgid_t)))
group_info  struct  include/linux/cred.h  32  struct group_info {
get_group_info  function  include/linux/cred.h  49  static inline struct group_info *get_group_info(struct group_info *gi)
put_group_info  macro  include/linux/cred.h  63  #define put_group_info(group_info) do { if (atomic_dec_and_test(&(group_info)->usage)) groups_free(group_info); } while (0)
groups_alloc  prototype  include/linux/cred.h  65  extern struct group_info *groups_alloc(int);
groups_free  prototype  include/linux/cred.h  67  extern void groups_free(struct group_info *);
set_current_groups  prototype  include/linux/cred.h  68  extern int set_current_groups(struct group_info *);
set_groups  prototype  include/linux/cred.h  69  extern int set_groups(struct cred *,struct group_info *);
groups_search  prototype  include/linux/cred.h  70  extern int groups_search(const struct group_info *,kgid_t);
GROUP_AT  macro  include/linux/cred.h  74  #define GROUP_AT(gi,i) ((gi)->blocks[(i) / NGROUPS_PER_BLOCK][(i) % NGROUPS_PER_BLOCK])
in_group_p  prototype  include/linux/cred.h  76  extern int in_group_p(kgid_t);
in_egroup_p  prototype  include/linux/cred.h  77  extern int in_egroup_p(kgid_t);
cred  struct  include/linux/cred.h  102  struct cred {
CRED_MAGIC  macro  include/linux/cred.h  108  #define CRED_MAGIC 0x43736564
CRED_MAGIC_DEAD  macro  include/linux/cred.h  109  #define CRED_MAGIC_DEAD 0x44656144
__put_cred  prototype  include/linux/cred.h  141  extern void __put_cred(struct cred *);
exit_creds  prototype  include/linux/cred.h  142  extern void exit_creds(struct task_struct *);
copy_creds  prototype  include/linux/cred.h  143  extern int copy_creds(struct task_struct *,unsigned long);
get_task_cred  prototype  include/linux/cred.h  144  extern const struct cred *get_task_cred(struct task_struct *);
cred_alloc_blank  prototype  include/linux/cred.h  145  extern struct cred *cred_alloc_blank(void);
prepare_creds  prototype  include/linux/cred.h  146  extern struct cred *prepare_creds(void);
prepare_exec_creds  prototype  include/linux/cred.h  147  extern struct cred *prepare_exec_creds(void);
commit_creds  prototype  include/linux/cred.h  148  extern int commit_creds(struct cred *);
abort_creds  prototype  include/linux/cred.h  149  extern void abort_creds(struct cred *);
override_creds  prototype  include/linux/cred.h  150  extern const struct cred *override_creds(const struct cred *);
revert_creds  prototype  include/linux/cred.h  151  extern void revert_creds(const struct cred *);
prepare_kernel_cred  prototype  include/linux/cred.h  152  extern struct cred *prepare_kernel_cred(struct task_struct *);
change_create_files_as  prototype  include/linux/cred.h  153  extern int change_create_files_as(struct cred *,struct inode *);
set_security_override  prototype  include/linux/cred.h  154  extern int set_security_override(struct cred *,u32);
set_security_override_from_ctx  prototype  include/linux/cred.h  155  extern int set_security_override_from_ctx(struct cred *,const char *);
set_create_files_as  prototype  include/linux/cred.h  156  extern int set_create_files_as(struct cred *,struct inode *);
cred_init  prototype  include/linux/cred.h  157  extern void __init cred_init(void);
__invalid_creds  prototype  include/linux/cred.h  163  extern void __invalid_creds(const struct cred *,const char *,unsigned);
__validate_process_creds  prototype  include/linux/cred.h  165  extern void __validate_process_creds(struct task_struct *,const char *, unsigned);
creds_are_invalid  prototype  include/linux/cred.h  167  extern bool creds_are_invalid(const struct cred *cred);
__validate_creds  function  include/linux/cred.h  170  static inline void __validate_creds(const struct cred *cred,const char *file, unsigned line)
validate_creds  function  include/linux/cred.h  188  static inline void validate_creds(const struct cred *cred)
validate_process_creds  function  include/linux/cred.h  194  static inline void validate_process_creds(void)
validate_creds_for_do_exit  function  include/linux/cred.h  191  static inline void validate_creds_for_do_exit(struct task_struct *tsk)
get_new_cred  function  include/linux/cred.h  206  static inline struct cred *get_new_cred(struct cred *cred)
get_cred  function  include/linux/cred.h  225  static inline const struct cred *get_cred(const struct cred *cred)
put_cred  function  include/linux/cred.h  243  static inline void put_cred(const struct cred *_cred)
current_cred  macro  include/linux/cred.h  259  #define current_cred() rcu_dereference_protected(current->cred, 1)
__task_cred  macro  include/linux/cred.h  272  #define __task_cred(task) rcu_dereference((task)->real_cred)
get_current_cred  macro  include/linux/cred.h  282  #define get_current_cred() (get_cred(current_cred()))
get_current_user  macro  include/linux/cred.h  297  #define get_current_user() ({ struct user_struct *__u; const struct cred *__cred; __cred = current_cred(); __u = get_uid(__cred->user); __u; })
get_current_groups  macro  include/linux/cred.h  312  #define get_current_groups() ({ struct group_info *__groups; const struct cred *__cred; __cred = current_cred(); __groups = get_group_info(__cred->group_info); __groups; })
task_cred_xxx  macro  include/linux/cred.h  321  #define task_cred_xxx(task,xxx) ({ __typeof__(((struct cred *)NULL)->xxx) ___val; rcu_read_lock(); ___val = __task_cred((task))->xxx; rcu_read_unlock(); ___val; })
task_uid  macro  include/linux/cred.h  323  #define task_uid(task) (task_cred_xxx((task),uid))
task_euid  macro  include/linux/cred.h  324  #define task_euid(task) (task_cred_xxx((task),euid))
current_cred_xxx  macro  include/linux/cred.h  329  #define current_cred_xxx(xxx) ({ current_cred()->xxx; })
current_uid  macro  include/linux/cred.h  331  #define current_uid() (current_cred_xxx(uid))
current_gid  macro  include/linux/cred.h  332  #define current_gid() (current_cred_xxx(gid))
current_euid  macro  include/linux/cred.h  333  #define current_euid() (current_cred_xxx(euid))
current_egid  macro  include/linux/cred.h  334  #define current_egid() (current_cred_xxx(egid))
current_suid  macro  include/linux/cred.h  335  #define current_suid() (current_cred_xxx(suid))
current_sgid  macro  include/linux/cred.h  336  #define current_sgid() (current_cred_xxx(sgid))
current_fsuid  macro  include/linux/cred.h  337  #define current_fsuid() (current_cred_xxx(fsuid))
current_fsgid  macro  include/linux/cred.h  338  #define current_fsgid() (current_cred_xxx(fsgid))
current_cap  macro  include/linux/cred.h  339  #define current_cap() (current_cred_xxx(cap_effective))
current_user  macro  include/linux/cred.h  340  #define current_user() (current_cred_xxx(user))
current_security  macro  include/linux/cred.h  341  #define current_security() (current_cred_xxx(security))
current_uid_gid  macro  include/linux/cred.h  357  #define current_uid_gid(_uid,_gid) do { const struct cred *__cred; __cred = current_cred(); *(_uid) = __cred->uid; *(_gid) = __cred->gid; } while(0)
current_euid_egid  macro  include/linux/cred.h  365  #define current_euid_egid(_euid,_egid) do { const struct cred *__cred; __cred = current_cred(); *(_euid) = __cred->euid; *(_egid) = __cred->egid; } while(0)
current_fsuid_fsgid  macro  include/linux/cred.h  373  #define current_fsuid_fsgid(_fsuid,_fsgid) do { const struct cred *__cred; __cred = current_cred(); *(_fsuid) = __cred->fsuid; *(_fsgid) = __cred->fsgid; } while(0)
LLIST_H  macro  include/linux/llist.h  2  #define LLIST_H
llist_head  struct  include/linux/llist.h  61  struct llist_head {
llist_node  struct  include/linux/llist.h  65  struct llist_node {
LLIST_HEAD_INIT  macro  include/linux/llist.h  69  #define LLIST_HEAD_INIT(name) { NULL }
LLIST_HEAD  macro  include/linux/llist.h  70  #define LLIST_HEAD(name) struct llist_head name = LLIST_HEAD_INIT(name)
init_llist_head  function  include/linux/llist.h  76  static inline void init_llist_head(struct llist_head *list)
llist_entry  macro  include/linux/llist.h  88  #define llist_entry(ptr,type,member) container_of(ptr, type, member)
llist_for_each  macro  include/linux/llist.h  105  #define llist_for_each(pos,node) for ((pos) = (node); pos; (pos) = (pos)->next)
llist_for_each_entry  macro  include/linux/llist.h  125  #define llist_for_each_entry(pos,node,member) for ((pos) = llist_entry((node), typeof(*(pos)), member); &(pos)->member != NULL; (pos) = llist_entry((pos)->member.next, typeof(*(pos)), member))
llist_empty  function  include/linux/llist.h  135  static inline bool llist_empty(const struct llist_head *head)
llist_next  function  include/linux/llist.h  140  static inline struct llist_node *llist_next(struct llist_node *node)
llist_add  function  include/linux/llist.h  152  static inline bool llist_add(struct llist_node *new,struct llist_head *head)
llist_del_all  function  include/linux/llist.h  176  static inline struct llist_node *llist_del_all(struct llist_head *head)
llist_add_batch  prototype  include/linux/llist.h  183  extern bool llist_add_batch(struct llist_node *new_first,struct llist_node *new_last,struct llist_head *head);
llist_del_first  prototype  include/linux/llist.h  184  extern struct llist_node *llist_del_first(struct llist_head *head);
_LINUX_UIDGID_H  macro  include/linux/uidgid.h  2  #define _LINUX_UIDGID_H
KUIDT_INIT  macro  include/linux/uidgid.h  59  #define KUIDT_INIT(value) ((kuid_t) value )
KGIDT_INIT  macro  include/linux/uidgid.h  60  #define KGIDT_INIT(value) ((kgid_t) value )
__kuid_val  function  include/linux/uidgid.h  49  static inline uid_t __kuid_val(kuid_t uid)
__kgid_val  function  include/linux/uidgid.h  54  static inline gid_t __kgid_val(kgid_t gid)
GLOBAL_ROOT_UID  macro  include/linux/uidgid.h  64  #define GLOBAL_ROOT_UID KUIDT_INIT(0)
GLOBAL_ROOT_GID  macro  include/linux/uidgid.h  65  #define GLOBAL_ROOT_GID KGIDT_INIT(0)
INVALID_UID  macro  include/linux/uidgid.h  67  #define INVALID_UID KUIDT_INIT(-1)
INVALID_GID  macro  include/linux/uidgid.h  68  #define INVALID_GID KGIDT_INIT(-1)
uid_eq  function  include/linux/uidgid.h  70  static inline bool uid_eq(kuid_t left,kuid_t right)
gid_eq  function  include/linux/uidgid.h  75  static inline bool gid_eq(kgid_t left,kgid_t right)
uid_gt  function  include/linux/uidgid.h  80  static inline bool uid_gt(kuid_t left,kuid_t right)
gid_gt  function  include/linux/uidgid.h  85  static inline bool gid_gt(kgid_t left,kgid_t right)
uid_gte  function  include/linux/uidgid.h  90  static inline bool uid_gte(kuid_t left,kuid_t right)
gid_gte  function  include/linux/uidgid.h  95  static inline bool gid_gte(kgid_t left,kgid_t right)
uid_lt  function  include/linux/uidgid.h  100  static inline bool uid_lt(kuid_t left,kuid_t right)
gid_lt  function  include/linux/uidgid.h  105  static inline bool gid_lt(kgid_t left,kgid_t right)
uid_lte  function  include/linux/uidgid.h  110  static inline bool uid_lte(kuid_t left,kuid_t right)
gid_lte  function  include/linux/uidgid.h  115  static inline bool gid_lte(kgid_t left,kgid_t right)
uid_valid  function  include/linux/uidgid.h  120  static inline bool uid_valid(kuid_t uid)
gid_valid  function  include/linux/uidgid.h  125  static inline bool gid_valid(kgid_t gid)
make_kuid  function  include/linux/uidgid.h  152  static inline kuid_t make_kuid(struct user_namespace *from,uid_t uid)
make_kgid  function  include/linux/uidgid.h  157  static inline kgid_t make_kgid(struct user_namespace *from,gid_t gid)
from_kuid  function  include/linux/uidgid.h  162  static inline uid_t from_kuid(struct user_namespace *to,kuid_t kuid)
from_kgid  function  include/linux/uidgid.h  167  static inline gid_t from_kgid(struct user_namespace *to,kgid_t kgid)
from_kuid_munged  function  include/linux/uidgid.h  172  static inline uid_t from_kuid_munged(struct user_namespace *to,kuid_t kuid)
from_kgid_munged  function  include/linux/uidgid.h  180  static inline gid_t from_kgid_munged(struct user_namespace *to,kgid_t kgid)
kuid_has_mapping  function  include/linux/uidgid.h  188  static inline bool kuid_has_mapping(struct user_namespace *ns,kuid_t uid)
kgid_has_mapping  function  include/linux/uidgid.h  193  static inline bool kgid_has_mapping(struct user_namespace *ns,kgid_t gid)
_ASM_X86_PROCESSOR_H  macro  arch/x86/include/asm/processor.h  2  #define _ASM_X86_PROCESSOR_H
HBP_NUM  macro  arch/x86/include/asm/processor.h  42  #define HBP_NUM 4
current_text_addr  function  arch/x86/include/asm/processor.h  47  static inline void *current_text_addr(void)
ARCH_MIN_TASKALIGN  macro  arch/x86/include/asm/processor.h  60  # define ARCH_MIN_TASKALIGN 16
ARCH_MIN_MMSTRUCT_ALIGN  macro  arch/x86/include/asm/processor.h  61  # define ARCH_MIN_MMSTRUCT_ALIGN 0
tlb_infos  enum  arch/x86/include/asm/processor.h  64  enum tlb_infos {
cpuinfo_x86  struct  arch/x86/include/asm/processor.h  83  struct cpuinfo_x86 {
X86_VENDOR_INTEL  macro  arch/x86/include/asm/processor.h  137  #define X86_VENDOR_INTEL 0
X86_VENDOR_CYRIX  macro  arch/x86/include/asm/processor.h  138  #define X86_VENDOR_CYRIX 1
X86_VENDOR_AMD  macro  arch/x86/include/asm/processor.h  139  #define X86_VENDOR_AMD 2
X86_VENDOR_UMC  macro  arch/x86/include/asm/processor.h  140  #define X86_VENDOR_UMC 3
X86_VENDOR_CENTAUR  macro  arch/x86/include/asm/processor.h  141  #define X86_VENDOR_CENTAUR 5
X86_VENDOR_TRANSMETA  macro  arch/x86/include/asm/processor.h  142  #define X86_VENDOR_TRANSMETA 7
X86_VENDOR_NSC  macro  arch/x86/include/asm/processor.h  143  #define X86_VENDOR_NSC 8
X86_VENDOR_NUM  macro  arch/x86/include/asm/processor.h  144  #define X86_VENDOR_NUM 9
X86_VENDOR_UNKNOWN  macro  arch/x86/include/asm/processor.h  146  #define X86_VENDOR_UNKNOWN 0xff
cpu_data  macro  arch/x86/include/asm/processor.h  163  #define cpu_data(cpu) boot_cpu_data
cpu_info  macro  arch/x86/include/asm/processor.h  162  #define cpu_info boot_cpu_data
hlt_works  function  arch/x86/include/asm/processor.h  168  static inline int hlt_works(int cpu)
cpu_detect  prototype  arch/x86/include/asm/processor.h  179  extern void cpu_detect(struct cpuinfo_x86 *c);
early_cpu_init  prototype  arch/x86/include/asm/processor.h  181  extern void early_cpu_init(void);
identify_boot_cpu  prototype  arch/x86/include/asm/processor.h  182  extern void identify_boot_cpu(void);
identify_secondary_cpu  prototype  arch/x86/include/asm/processor.h  183  extern void identify_secondary_cpu(struct cpuinfo_x86 *);
print_cpu_info  prototype  arch/x86/include/asm/processor.h  184  extern void print_cpu_info(struct cpuinfo_x86 *);
print_cpu_msr  prototype  arch/x86/include/asm/processor.h  185  void print_cpu_msr(struct cpuinfo_x86 *);
init_scattered_cpuid_features  prototype  arch/x86/include/asm/processor.h  186  extern void init_scattered_cpuid_features(struct cpuinfo_x86 *c);
init_intel_cacheinfo  prototype  arch/x86/include/asm/processor.h  187  extern unsigned int init_intel_cacheinfo(struct cpuinfo_x86 *c);
init_amd_cacheinfo  prototype  arch/x86/include/asm/processor.h  188  extern void init_amd_cacheinfo(struct cpuinfo_x86 *c);
detect_extended_topology  prototype  arch/x86/include/asm/processor.h  190  extern void detect_extended_topology(struct cpuinfo_x86 *c);
detect_ht  prototype  arch/x86/include/asm/processor.h  191  extern void detect_ht(struct cpuinfo_x86 *c);
native_cpuid  function  arch/x86/include/asm/processor.h  194  static inline void native_cpuid(unsigned int *eax,unsigned int *ebx,unsigned int *ecx, unsigned int *edx)
load_cr3  function  arch/x86/include/asm/processor.h  206  static inline void load_cr3(pgd_t *pgdir)
x86_hw_tss  struct  arch/x86/include/asm/processor.h  245  struct x86_hw_tss {
IO_BITMAP_BITS  macro  arch/x86/include/asm/processor.h  263  #define IO_BITMAP_BITS 65536
IO_BITMAP_BYTES  macro  arch/x86/include/asm/processor.h  264  #define IO_BITMAP_BYTES (IO_BITMAP_BITS/8)
IO_BITMAP_LONGS  macro  arch/x86/include/asm/processor.h  265  #define IO_BITMAP_LONGS (IO_BITMAP_BYTES/sizeof(long))
IO_BITMAP_OFFSET  macro  arch/x86/include/asm/processor.h  266  #define IO_BITMAP_OFFSET offsetof(struct tss_struct,io_bitmap)
INVALID_IO_BITMAP_OFFSET  macro  arch/x86/include/asm/processor.h  267  #define INVALID_IO_BITMAP_OFFSET 0x8000
tss_struct  struct  arch/x86/include/asm/processor.h  269  struct tss_struct {
orig_ist  struct  arch/x86/include/asm/processor.h  295  struct orig_ist {
MXCSR_DEFAULT  macro  arch/x86/include/asm/processor.h  299  #define MXCSR_DEFAULT 0x1f80
i387_fsave_struct  struct  arch/x86/include/asm/processor.h  301  struct i387_fsave_struct {
i387_fxsave_struct  struct  arch/x86/include/asm/processor.h  317  struct i387_fxsave_struct {
i387_soft_struct  struct  arch/x86/include/asm/processor.h  352  struct i387_soft_struct {
ymmh_struct  struct  arch/x86/include/asm/processor.h  372  struct ymmh_struct {
xsave_hdr_struct  struct  arch/x86/include/asm/processor.h  377  struct xsave_hdr_struct {
xsave_struct  struct  arch/x86/include/asm/processor.h  383  struct xsave_struct {
thread_xstate  union  arch/x86/include/asm/processor.h  390  union thread_xstate {
fpu  struct  arch/x86/include/asm/processor.h  397  struct fpu {
irq_stack_union  union  arch/x86/include/asm/processor.h  406  union irq_stack_union {
ignore_sysret  prototype  arch/x86/include/asm/processor.h  424  extern asmlinkage void ignore_sysret(void);
stack_canary  struct  arch/x86/include/asm/processor.h  433  struct stack_canary {
free_thread_xstate  prototype  arch/x86/include/asm/processor.h  442  extern void free_thread_xstate(struct task_struct *);
thread_struct  struct  arch/x86/include/asm/processor.h  447  struct thread_struct {
native_set_iopl_mask  function  arch/x86/include/asm/processor.h  500  static inline void native_set_iopl_mask(unsigned mask)
native_load_sp0  function  arch/x86/include/asm/processor.h  517  native_load_sp0(struct tss_struct *tss,struct thread_struct *thread)
native_swapgs  function  arch/x86/include/asm/processor.h  529  static inline void native_swapgs(void)
__cpuid  function  arch/x86/include/asm/paravirt.h  30  static inline void __cpuid(unsigned int *eax,unsigned int *ebx,unsigned int *ecx, unsigned int *edx)
paravirt_enabled  function  arch/x86/include/asm/paravirt.h  17  static inline int paravirt_enabled(void)
load_sp0  function  arch/x86/include/asm/paravirt.h  23  static inline void load_sp0(struct tss_struct *tss,struct thread_struct *thread)
set_iopl_mask  function  arch/x86/include/asm/paravirt.h  306  static inline void set_iopl_mask(unsigned mask)
set_in_cr4  function  arch/x86/include/asm/processor.h  560  static inline void set_in_cr4(unsigned long mask)
clear_in_cr4  function  arch/x86/include/asm/processor.h  572  static inline void clear_in_cr4(unsigned long mask)
release_thread  prototype  arch/x86/include/asm/processor.h  590  extern void release_thread(struct task_struct *);
get_wchan  prototype  arch/x86/include/asm/processor.h  592  unsigned long get_wchan(struct task_struct *p);
cpuid  function  arch/x86/include/asm/processor.h  601  static inline void cpuid(unsigned int op,unsigned int *eax, unsigned int *ebx,unsigned int *ecx, unsigned int *edx)
cpuid_count  function  arch/x86/include/asm/processor.h  611  static inline void cpuid_count(unsigned int op,int count,unsigned int *eax, unsigned int *ebx,unsigned int *ecx, unsigned int *edx)
cpuid_eax  function  arch/x86/include/asm/processor.h  621  static inline unsigned int cpuid_eax(unsigned int op)
cpuid_ebx  function  arch/x86/include/asm/processor.h  630  static inline unsigned int cpuid_ebx(unsigned int op)
cpuid_ecx  function  arch/x86/include/asm/processor.h  639  static inline unsigned int cpuid_ecx(unsigned int op)
cpuid_edx  function  arch/x86/include/asm/processor.h  648  static inline unsigned int cpuid_edx(unsigned int op)
rep_nop  function  arch/x86/include/asm/processor.h  658  static inline void rep_nop(void)
cpu_relax  function  arch/x86/include/asm/processor.h  663  static inline void cpu_relax(void)
sync_core  function  arch/x86/include/asm/processor.h  669  static inline void sync_core(void)
__monitor  function  arch/x86/include/asm/processor.h  699  static inline void __monitor(const void *eax,unsigned long ecx,unsigned long edx)
__mwait  function  arch/x86/include/asm/processor.h  706  static inline void __mwait(unsigned long eax,unsigned long ecx)
__sti_mwait  function  arch/x86/include/asm/processor.h  713  static inline void __sti_mwait(unsigned long eax,unsigned long ecx)
select_idle_routine  prototype  arch/x86/include/asm/processor.h  721  extern void select_idle_routine(const struct cpuinfo_x86 *c);
init_amd_e400_c1e_mask  prototype  arch/x86/include/asm/processor.h  722  extern void init_amd_e400_c1e_mask(void);
idle_boot_override  enum  arch/x86/include/asm/processor.h  727  enum idle_boot_override {IDLE_NO_OVERRIDE=0,IDLE_HALT,IDLE_NOMWAIT,
enable_sep_cpu  prototype  arch/x86/include/asm/processor.h  730  extern void enable_sep_cpu(void);
sysenter_setup  prototype  arch/x86/include/asm/processor.h  731  extern int sysenter_setup(void);
early_trap_init  prototype  arch/x86/include/asm/processor.h  733  extern void early_trap_init(void);
cpu_set_gdt  prototype  arch/x86/include/asm/processor.h  738  extern void cpu_set_gdt(int);
switch_to_new_gdt  prototype  arch/x86/include/asm/processor.h  739  extern void switch_to_new_gdt(int);
load_percpu_segment  prototype  arch/x86/include/asm/processor.h  740  extern void load_percpu_segment(int);
get_debugctlmsr  function  arch/x86/include/asm/processor.h  743  static inline unsigned long get_debugctlmsr(void)
update_debugctlmsr  function  arch/x86/include/asm/processor.h  756  static inline void update_debugctlmsr(unsigned long debugctlmsr)
set_task_blockstep  prototype  arch/x86/include/asm/processor.h  765  extern void set_task_blockstep(struct task_struct *task,bool on);
HAVE_ARCH_PICK_MMAP_LAYOUT  macro  arch/x86/include/asm/processor.h  781  #define HAVE_ARCH_PICK_MMAP_LAYOUT 1
ARCH_HAS_PREFETCHW  macro  arch/x86/include/asm/processor.h  782  #define ARCH_HAS_PREFETCHW
ARCH_HAS_SPINLOCK_PREFETCH  macro  arch/x86/include/asm/processor.h  783  #define ARCH_HAS_SPINLOCK_PREFETCH
BASE_PREFETCH  macro  arch/x86/include/asm/processor.h  789  # define BASE_PREFETCH "prefetcht0 (%1)"
ARCH_HAS_PREFETCH  macro  arch/x86/include/asm/processor.h  787  # define ARCH_HAS_PREFETCH
prefetch  function  arch/x86/include/asm/processor.h  798  static inline void prefetch(const void *x)
prefetchw  function  arch/x86/include/asm/processor.h  811  static inline void prefetchw(const void *x)
spin_lock_prefetch  function  arch/x86/include/asm/processor.h  819  static inline void spin_lock_prefetch(const void *x)
TASK_SIZE  macro  arch/x86/include/asm/processor.h  897  #define TASK_SIZE (test_thread_flag(TIF_ADDR32) ? IA32_PAGE_OFFSET : TASK_SIZE_MAX)
TASK_SIZE_MAX  macro  arch/x86/include/asm/processor.h  888  #define TASK_SIZE_MAX ((1UL << 47) - PAGE_SIZE)
STACK_TOP  macro  arch/x86/include/asm/processor.h  901  #define STACK_TOP TASK_SIZE
STACK_TOP_MAX  macro  arch/x86/include/asm/processor.h  902  #define STACK_TOP_MAX TASK_SIZE_MAX
INIT_THREAD  macro  arch/x86/include/asm/processor.h  906  #define INIT_THREAD { .sp0 = (unsigned long)&init_stack + sizeof(init_stack) }
INIT_TSS  macro  arch/x86/include/asm/processor.h  910  #define INIT_TSS { .x86_tss.sp0 = (unsigned long)&init_stack + sizeof(init_stack) }
thread_saved_pc  macro  arch/x86/include/asm/processor.h  916  #define thread_saved_pc(t) (*(unsigned long *)((t)->thread.sp - 8))
THREAD_SIZE_LONGS  macro  arch/x86/include/asm/processor.h  858  #define THREAD_SIZE_LONGS (THREAD_SIZE/sizeof(unsigned long))
KSTK_TOP  macro  arch/x86/include/asm/processor.h  863  #define KSTK_TOP(info) ({ unsigned long *__ptr = (unsigned long *)(info); (unsigned long)(&__ptr[THREAD_SIZE_LONGS]); })
task_pt_regs  macro  arch/x86/include/asm/processor.h  918  #define task_pt_regs(tsk) ((struct pt_regs *)(tsk)->thread.sp0 - 1)
KSTK_ESP  prototype  arch/x86/include/asm/processor.h  919  extern unsigned long KSTK_ESP(struct task_struct *task);
IA32_PAGE_OFFSET  macro  arch/x86/include/asm/processor.h  894  #define IA32_PAGE_OFFSET ((current->personality & ADDR_LIMIT_3GB) ? 0xc0000000 : 0xFFFFe000)
start_thread  prototype  arch/x86/include/asm/processor.h  929  extern void start_thread(struct pt_regs *regs,unsigned long new_ip,unsigned long new_sp);
TASK_UNMAPPED_BASE  macro  arch/x86/include/asm/processor.h  935  #define TASK_UNMAPPED_BASE (PAGE_ALIGN(TASK_SIZE / 3))
KSTK_EIP  macro  arch/x86/include/asm/processor.h  937  #define KSTK_EIP(task) (task_pt_regs(task)->ip)
GET_TSC_CTL  macro  arch/x86/include/asm/processor.h  940  #define GET_TSC_CTL(adr) get_tsc_mode((adr))
SET_TSC_CTL  macro  arch/x86/include/asm/processor.h  941  #define SET_TSC_CTL(val) set_tsc_mode((val))
get_tsc_mode  prototype  arch/x86/include/asm/processor.h  943  extern int get_tsc_mode(unsigned long adr);
set_tsc_mode  prototype  arch/x86/include/asm/processor.h  944  extern int set_tsc_mode(unsigned int val);
amd_get_nb_id  prototype  arch/x86/include/asm/processor.h  946  extern int amd_get_nb_id(int cpu);
aperfmperf  struct  arch/x86/include/asm/processor.h  948  struct aperfmperf {
get_aperfmperf  function  arch/x86/include/asm/processor.h  952  static inline void get_aperfmperf(struct aperfmperf *am)
APERFMPERF_SHIFT  macro  arch/x86/include/asm/processor.h  960  #define APERFMPERF_SHIFT 10
calc_aperfmperf_ratio  function  arch/x86/include/asm/processor.h  964  unsigned long calc_aperfmperf_ratio(struct aperfmperf *old,struct aperfmperf *new)
cpu_has_amd_erratum  macro  arch/x86/include/asm/processor.h  994  #define cpu_has_amd_erratum(x) (false)
AMD_LEGACY_ERRATUM  macro  arch/x86/include/asm/processor.h  985  #define AMD_LEGACY_ERRATUM(...) { -1,__VA_ARGS__,0 }
AMD_OSVW_ERRATUM  macro  arch/x86/include/asm/processor.h  986  #define AMD_OSVW_ERRATUM(osvw_id,...) { osvw_id,__VA_ARGS__,0 }
AMD_MODEL_RANGE  macro  arch/x86/include/asm/processor.h  988  #define AMD_MODEL_RANGE(f,m_start,s_start,m_end,s_end) ((f << 24) | (m_start << 16) | (s_start << 12) | (m_end << 4) | (s_end))
AMD_MODEL_RANGE_FAMILY  macro  arch/x86/include/asm/processor.h  989  #define AMD_MODEL_RANGE_FAMILY(range) (((range) >> 24) & 0xff)
AMD_MODEL_RANGE_START  macro  arch/x86/include/asm/processor.h  990  #define AMD_MODEL_RANGE_START(range) (((range) >> 12) & 0xfff)
AMD_MODEL_RANGE_END  macro  arch/x86/include/asm/processor.h  991  #define AMD_MODEL_RANGE_END(range) ((range) & 0xfff)
arch_align_stack  prototype  arch/x86/include/asm/processor.h  997  extern unsigned long arch_align_stack(unsigned long sp);
free_init_pages  prototype  arch/x86/include/asm/processor.h  998  extern void free_init_pages(char *what,unsigned long begin,unsigned long end);
default_idle  prototype  arch/x86/include/asm/processor.h  1000  void default_idle(void);
set_pm_idle_to_default  prototype  arch/x86/include/asm/processor.h  1001  bool set_pm_idle_to_default(void);
stop_this_cpu  prototype  arch/x86/include/asm/processor.h  1003  void stop_this_cpu(void *dummy);
__LINUX__AIO_H  macro  include/linux/aio.h  2  #define __LINUX__AIO_H
AIO_MAXSEGS  macro  include/linux/aio.h  12  #define AIO_MAXSEGS 4
AIO_KIOGRP_NR_ATOMIC  macro  include/linux/aio.h  13  #define AIO_KIOGRP_NR_ATOMIC 8
KIOCB_C_CANCELLED  macro  include/linux/aio.h  23  #define KIOCB_C_CANCELLED 0x01
KIOCB_C_COMPLETE  macro  include/linux/aio.h  24  #define KIOCB_C_COMPLETE 0x02
KIOCB_SYNC_KEY  macro  include/linux/aio.h  26  #define KIOCB_SYNC_KEY (~0U)
KIF_KICKED  macro  include/linux/aio.h  35  #define KIF_KICKED 1
KIF_CANCELLED  macro  include/linux/aio.h  36  #define KIF_CANCELLED 2
kiocbTryLock  macro  include/linux/aio.h  38  #define kiocbTryLock(iocb) test_and_set_bit(KIF_LOCKED,&(iocb)->ki_flags)
kiocbTryKick  macro  include/linux/aio.h  39  #define kiocbTryKick(iocb) test_and_set_bit(KIF_KICKED,&(iocb)->ki_flags)
kiocbSetLocked  macro  include/linux/aio.h  41  #define kiocbSetLocked(iocb) set_bit(KIF_LOCKED,&(iocb)->ki_flags)
kiocbSetKicked  macro  include/linux/aio.h  42  #define kiocbSetKicked(iocb) set_bit(KIF_KICKED,&(iocb)->ki_flags)
kiocbSetCancelled  macro  include/linux/aio.h  43  #define kiocbSetCancelled(iocb) set_bit(KIF_CANCELLED,&(iocb)->ki_flags)
kiocbClearLocked  macro  include/linux/aio.h  45  #define kiocbClearLocked(iocb) clear_bit(KIF_LOCKED,&(iocb)->ki_flags)
kiocbClearKicked  macro  include/linux/aio.h  46  #define kiocbClearKicked(iocb) clear_bit(KIF_KICKED,&(iocb)->ki_flags)
kiocbClearCancelled  macro  include/linux/aio.h  47  #define kiocbClearCancelled(iocb) clear_bit(KIF_CANCELLED,&(iocb)->ki_flags)
kiocbIsLocked  macro  include/linux/aio.h  49  #define kiocbIsLocked(iocb) test_bit(KIF_LOCKED,&(iocb)->ki_flags)
kiocbIsKicked  macro  include/linux/aio.h  50  #define kiocbIsKicked(iocb) test_bit(KIF_KICKED,&(iocb)->ki_flags)
kiocbIsCancelled  macro  include/linux/aio.h  51  #define kiocbIsCancelled(iocb) test_bit(KIF_CANCELLED,&(iocb)->ki_flags)
kiocb  struct  include/linux/aio.h  87  struct kiocb {
is_sync_kiocb  function  include/linux/aio.h  129  static inline bool is_sync_kiocb(struct kiocb *kiocb)
init_sync_kiocb  function  include/linux/aio.h  134  static inline void init_sync_kiocb(struct kiocb *kiocb,struct file *filp)
AIO_RING_MAGIC  macro  include/linux/aio.h  144  #define AIO_RING_MAGIC 0xa10a10a1
AIO_RING_COMPAT_FEATURES  macro  include/linux/aio.h  145  #define AIO_RING_COMPAT_FEATURES 1
AIO_RING_INCOMPAT_FEATURES  macro  include/linux/aio.h  146  #define AIO_RING_INCOMPAT_FEATURES 0
aio_ring  struct  include/linux/aio.h  147  struct aio_ring {
AIO_RING_PAGES  macro  include/linux/aio.h  162  #define AIO_RING_PAGES 8
aio_ring_info  struct  include/linux/aio.h  163  struct aio_ring_info {
aio_ring_avail  function  include/linux/aio.h  177  static inline unsigned aio_ring_avail(struct aio_ring_info *info,struct aio_ring *ring)
kioctx  struct  include/linux/aio.h  182  struct kioctx {
wait_on_sync_kiocb  function  include/linux/aio.h  222  static inline ssize_t wait_on_sync_kiocb(struct kiocb *iocb) { return 0; }
aio_put_req  function  include/linux/aio.h  223  static inline int aio_put_req(struct kiocb *iocb) { return 0; }
kick_iocb  function  include/linux/aio.h  224  static inline void kick_iocb(struct kiocb *iocb) { }
aio_complete  function  include/linux/aio.h  225  static inline int aio_complete(struct kiocb *iocb,long res,long res2) { return 0; }
exit_aio  function  include/linux/aio.h  227  static inline void exit_aio(struct mm_struct *mm) { }
do_io_submit  function  include/linux/aio.h  230  static inline long do_io_submit(aio_context_t ctx_id,long nr,struct iocb __user * __user *iocbpp,bool compat) { return 0; }
list_kiocb  function  include/linux/aio.h  233  static inline struct kiocb *list_kiocb(struct list_head *h)
_LINUX_RWSEM_H  macro  include/linux/rwsem.h  8  #define _LINUX_RWSEM_H
rw_semaphore  struct  include/linux/rwsem-spinlock.h  23  struct rw_semaphore {
rwsem_down_read_failed  prototype  include/linux/rwsem.h  34  extern struct rw_semaphore *rwsem_down_read_failed(struct rw_semaphore *sem);
rwsem_down_write_failed  prototype  include/linux/rwsem.h  35  extern struct rw_semaphore *rwsem_down_write_failed(struct rw_semaphore *sem);
rwsem_wake  prototype  include/linux/rwsem.h  36  extern struct rw_semaphore *rwsem_wake(struct rw_semaphore *);
rwsem_downgrade_wake  prototype  include/linux/rwsem.h  37  extern struct rw_semaphore *rwsem_downgrade_wake(struct rw_semaphore *sem);
rwsem_is_locked  prototype  include/linux/rwsem-spinlock.h  42  extern int rwsem_is_locked(struct rw_semaphore *sem);
__RWSEM_DEP_MAP_INIT  macro  include/linux/rwsem.h  55  # define __RWSEM_DEP_MAP_INIT(lockname)
__RWSEM_INITIALIZER  macro  include/linux/rwsem.h  62  #define __RWSEM_INITIALIZER(name) { RWSEM_UNLOCKED_VALUE, __RAW_SPIN_LOCK_UNLOCKED(name.wait_lock), LIST_HEAD_INIT((name).wait_list) __RWSEM_DEP_MAP_INIT(name) }
DECLARE_RWSEM  macro  include/linux/rwsem.h  65  #define DECLARE_RWSEM(name) struct rw_semaphore name = __RWSEM_INITIALIZER(name)
__init_rwsem  prototype  include/linux/rwsem.h  68  extern void __init_rwsem(struct rw_semaphore *sem,const char *name,struct lock_class_key *key);
init_rwsem  macro  include/linux/rwsem.h  75  #define init_rwsem(sem) do { static struct lock_class_key __key; __init_rwsem((sem), #sem, &__key); } while (0)
down_read  prototype  include/linux/rwsem.h  80  extern void down_read(struct rw_semaphore *sem);
down_read_trylock  prototype  include/linux/rwsem.h  85  extern int down_read_trylock(struct rw_semaphore *sem);
down_write  prototype  include/linux/rwsem.h  90  extern void down_write(struct rw_semaphore *sem);
down_write_trylock  prototype  include/linux/rwsem.h  95  extern int down_write_trylock(struct rw_semaphore *sem);
up_read  prototype  include/linux/rwsem.h  100  extern void up_read(struct rw_semaphore *sem);
up_write  prototype  include/linux/rwsem.h  105  extern void up_write(struct rw_semaphore *sem);
downgrade_write  prototype  include/linux/rwsem.h  110  extern void downgrade_write(struct rw_semaphore *sem);
down_read_nested  macro  include/linux/rwsem.h  137  # define down_read_nested(sem,subclass) down_read(sem)
down_write_nested  macro  include/linux/rwsem.h  139  # define down_write_nested(sem,subclass) down_write(sem)
_down_write_nest_lock  prototype  include/linux/rwsem.h  128  extern void _down_write_nest_lock(struct rw_semaphore *sem,struct lockdep_map *nest_lock);
down_write_nest_lock  macro  include/linux/rwsem.h  138  # define down_write_nest_lock(sem,nest_lock) down_write(sem)
_ASM_X86_CURRENT_H  macro  arch/x86/include/asm/current.h  2  #define _ASM_X86_CURRENT_H
get_current  function  arch/x86/include/asm/current.h  12  static __always_inline struct task_struct *get_current(void)
current  macro  arch/x86/include/asm/current.h  17  #define current get_current()
_UAPI_LINUX_STRING_H_  macro  include/uapi/linux/string.h  2  #define _UAPI_LINUX_STRING_H_
__LINUX_GFP_H  macro  include/linux/gfp.h  2  #define __LINUX_GFP_H
___GFP_DMA  macro  include/linux/gfp.h  13  #define ___GFP_DMA 0x01u
___GFP_HIGHMEM  macro  include/linux/gfp.h  14  #define ___GFP_HIGHMEM 0x02u
___GFP_DMA32  macro  include/linux/gfp.h  15  #define ___GFP_DMA32 0x04u
___GFP_MOVABLE  macro  include/linux/gfp.h  16  #define ___GFP_MOVABLE 0x08u
___GFP_WAIT  macro  include/linux/gfp.h  17  #define ___GFP_WAIT 0x10u
___GFP_HIGH  macro  include/linux/gfp.h  18  #define ___GFP_HIGH 0x20u
___GFP_IO  macro  include/linux/gfp.h  19  #define ___GFP_IO 0x40u
___GFP_FS  macro  include/linux/gfp.h  20  #define ___GFP_FS 0x80u
___GFP_COLD  macro  include/linux/gfp.h  21  #define ___GFP_COLD 0x100u
___GFP_NOWARN  macro  include/linux/gfp.h  22  #define ___GFP_NOWARN 0x200u
___GFP_REPEAT  macro  include/linux/gfp.h  23  #define ___GFP_REPEAT 0x400u
___GFP_NOFAIL  macro  include/linux/gfp.h  24  #define ___GFP_NOFAIL 0x800u
___GFP_NORETRY  macro  include/linux/gfp.h  25  #define ___GFP_NORETRY 0x1000u
___GFP_MEMALLOC  macro  include/linux/gfp.h  26  #define ___GFP_MEMALLOC 0x2000u
___GFP_COMP  macro  include/linux/gfp.h  27  #define ___GFP_COMP 0x4000u
___GFP_ZERO  macro  include/linux/gfp.h  28  #define ___GFP_ZERO 0x8000u
___GFP_NOMEMALLOC  macro  include/linux/gfp.h  29  #define ___GFP_NOMEMALLOC 0x10000u
___GFP_HARDWALL  macro  include/linux/gfp.h  30  #define ___GFP_HARDWALL 0x20000u
___GFP_THISNODE  macro  include/linux/gfp.h  31  #define ___GFP_THISNODE 0x40000u
___GFP_RECLAIMABLE  macro  include/linux/gfp.h  32  #define ___GFP_RECLAIMABLE 0x80000u
___GFP_KMEMCG  macro  include/linux/gfp.h  33  #define ___GFP_KMEMCG 0x100000u
___GFP_NOTRACK  macro  include/linux/gfp.h  34  #define ___GFP_NOTRACK 0x200000u
___GFP_NO_KSWAPD  macro  include/linux/gfp.h  35  #define ___GFP_NO_KSWAPD 0x400000u
___GFP_OTHER_NODE  macro  include/linux/gfp.h  36  #define ___GFP_OTHER_NODE 0x800000u
___GFP_WRITE  macro  include/linux/gfp.h  37  #define ___GFP_WRITE 0x1000000u
__GFP_DMA  macro  include/linux/gfp.h  49  #define __GFP_DMA ((__force gfp_t)___GFP_DMA)
__GFP_HIGHMEM  macro  include/linux/gfp.h  50  #define __GFP_HIGHMEM ((__force gfp_t)___GFP_HIGHMEM)
__GFP_DMA32  macro  include/linux/gfp.h  51  #define __GFP_DMA32 ((__force gfp_t)___GFP_DMA32)
__GFP_MOVABLE  macro  include/linux/gfp.h  52  #define __GFP_MOVABLE ((__force gfp_t)___GFP_MOVABLE)
GFP_ZONEMASK  macro  include/linux/gfp.h  53  #define GFP_ZONEMASK (__GFP_DMA|__GFP_HIGHMEM|__GFP_DMA32|__GFP_MOVABLE)
__GFP_WAIT  macro  include/linux/gfp.h  69  #define __GFP_WAIT ((__force gfp_t)___GFP_WAIT)
__GFP_HIGH  macro  include/linux/gfp.h  70  #define __GFP_HIGH ((__force gfp_t)___GFP_HIGH)
__GFP_IO  macro  include/linux/gfp.h  71  #define __GFP_IO ((__force gfp_t)___GFP_IO)
__GFP_FS  macro  include/linux/gfp.h  72  #define __GFP_FS ((__force gfp_t)___GFP_FS)
__GFP_COLD  macro  include/linux/gfp.h  73  #define __GFP_COLD ((__force gfp_t)___GFP_COLD)
__GFP_NOWARN  macro  include/linux/gfp.h  74  #define __GFP_NOWARN ((__force gfp_t)___GFP_NOWARN)
__GFP_REPEAT  macro  include/linux/gfp.h  75  #define __GFP_REPEAT ((__force gfp_t)___GFP_REPEAT)
__GFP_NOFAIL  macro  include/linux/gfp.h  76  #define __GFP_NOFAIL ((__force gfp_t)___GFP_NOFAIL)
__GFP_NORETRY  macro  include/linux/gfp.h  77  #define __GFP_NORETRY ((__force gfp_t)___GFP_NORETRY)
__GFP_MEMALLOC  macro  include/linux/gfp.h  78  #define __GFP_MEMALLOC ((__force gfp_t)___GFP_MEMALLOC)
__GFP_COMP  macro  include/linux/gfp.h  79  #define __GFP_COMP ((__force gfp_t)___GFP_COMP)
__GFP_ZERO  macro  include/linux/gfp.h  80  #define __GFP_ZERO ((__force gfp_t)___GFP_ZERO)
__GFP_NOMEMALLOC  macro  include/linux/gfp.h  81  #define __GFP_NOMEMALLOC ((__force gfp_t)___GFP_NOMEMALLOC)
__GFP_HARDWALL  macro  include/linux/gfp.h  86  #define __GFP_HARDWALL ((__force gfp_t)___GFP_HARDWALL)
__GFP_THISNODE  macro  include/linux/gfp.h  87  #define __GFP_THISNODE ((__force gfp_t)___GFP_THISNODE)
__GFP_RECLAIMABLE  macro  include/linux/gfp.h  88  #define __GFP_RECLAIMABLE ((__force gfp_t)___GFP_RECLAIMABLE)
__GFP_NOTRACK  macro  include/linux/gfp.h  89  #define __GFP_NOTRACK ((__force gfp_t)___GFP_NOTRACK)
__GFP_NO_KSWAPD  macro  include/linux/gfp.h  91  #define __GFP_NO_KSWAPD ((__force gfp_t)___GFP_NO_KSWAPD)
__GFP_OTHER_NODE  macro  include/linux/gfp.h  92  #define __GFP_OTHER_NODE ((__force gfp_t)___GFP_OTHER_NODE)
__GFP_KMEMCG  macro  include/linux/gfp.h  93  #define __GFP_KMEMCG ((__force gfp_t)___GFP_KMEMCG)
__GFP_WRITE  macro  include/linux/gfp.h  94  #define __GFP_WRITE ((__force gfp_t)___GFP_WRITE)
__GFP_NOTRACK_FALSE_POSITIVE  macro  include/linux/gfp.h  100  #define __GFP_NOTRACK_FALSE_POSITIVE (__GFP_NOTRACK)
__GFP_BITS_SHIFT  macro  include/linux/gfp.h  102  #define __GFP_BITS_SHIFT 25
__GFP_BITS_MASK  macro  include/linux/gfp.h  103  #define __GFP_BITS_MASK ((__force gfp_t)((1 << __GFP_BITS_SHIFT) - 1))
GFP_NOWAIT  macro  include/linux/gfp.h  106  #define GFP_NOWAIT (GFP_ATOMIC & ~__GFP_HIGH)
GFP_ATOMIC  macro  include/linux/gfp.h  108  #define GFP_ATOMIC (__GFP_HIGH)
GFP_NOIO  macro  include/linux/gfp.h  109  #define GFP_NOIO (__GFP_WAIT)
GFP_NOFS  macro  include/linux/gfp.h  110  #define GFP_NOFS (__GFP_WAIT | __GFP_IO)
GFP_KERNEL  macro  include/linux/gfp.h  111  #define GFP_KERNEL (__GFP_WAIT | __GFP_IO | __GFP_FS)
GFP_TEMPORARY  macro  include/linux/gfp.h  113  #define GFP_TEMPORARY (__GFP_WAIT | __GFP_IO | __GFP_FS | __GFP_RECLAIMABLE)
GFP_USER  macro  include/linux/gfp.h  114  #define GFP_USER (__GFP_WAIT | __GFP_IO | __GFP_FS | __GFP_HARDWALL)
GFP_HIGHUSER  macro  include/linux/gfp.h  116  #define GFP_HIGHUSER (__GFP_WAIT | __GFP_IO | __GFP_FS | __GFP_HARDWALL | __GFP_HIGHMEM)
GFP_HIGHUSER_MOVABLE  macro  include/linux/gfp.h  119  #define GFP_HIGHUSER_MOVABLE (__GFP_WAIT | __GFP_IO | __GFP_FS | __GFP_HARDWALL | __GFP_HIGHMEM | __GFP_MOVABLE)
GFP_IOFS  macro  include/linux/gfp.h  120  #define GFP_IOFS (__GFP_IO | __GFP_FS)
GFP_TRANSHUGE  macro  include/linux/gfp.h  123  #define GFP_TRANSHUGE (GFP_HIGHUSER_MOVABLE | __GFP_COMP | __GFP_NOMEMALLOC | __GFP_NORETRY | __GFP_NOWARN | __GFP_NO_KSWAPD)
GFP_THISNODE  macro  include/linux/gfp.h  128  #define GFP_THISNODE ((__force gfp_t)0)
GFP_MOVABLE_MASK  macro  include/linux/gfp.h  132  #define GFP_MOVABLE_MASK (__GFP_RECLAIMABLE|__GFP_MOVABLE)
GFP_RECLAIM_MASK  macro  include/linux/gfp.h  137  #define GFP_RECLAIM_MASK (__GFP_WAIT|__GFP_HIGH|__GFP_IO|__GFP_FS| __GFP_NOWARN|__GFP_REPEAT|__GFP_NOFAIL| __GFP_NORETRY|__GFP_MEMALLOC|__GFP_NOMEMALLOC)
GFP_BOOT_MASK  macro  include/linux/gfp.h  140  #define GFP_BOOT_MASK (__GFP_BITS_MASK & ~(__GFP_WAIT|__GFP_IO|__GFP_FS))
GFP_CONSTRAINT_MASK  macro  include/linux/gfp.h  143  #define GFP_CONSTRAINT_MASK (__GFP_HARDWALL|__GFP_THISNODE)
GFP_SLAB_BUG_MASK  macro  include/linux/gfp.h  146  #define GFP_SLAB_BUG_MASK (__GFP_DMA32|__GFP_HIGHMEM|~__GFP_BITS_MASK)
GFP_DMA  macro  include/linux/gfp.h  151  #define GFP_DMA __GFP_DMA
GFP_DMA32  macro  include/linux/gfp.h  154  #define GFP_DMA32 __GFP_DMA32
allocflags_to_migratetype  function  include/linux/gfp.h  157  static inline int allocflags_to_migratetype(gfp_t gfp_flags)
OPT_ZONE_HIGHMEM  macro  include/linux/gfp.h  172  #define OPT_ZONE_HIGHMEM ZONE_NORMAL
OPT_ZONE_DMA  macro  include/linux/gfp.h  178  #define OPT_ZONE_DMA ZONE_NORMAL
OPT_ZONE_DMA32  macro  include/linux/gfp.h  184  #define OPT_ZONE_DMA32 ZONE_NORMAL
GFP_ZONE_TABLE  macro  include/linux/gfp.h  233  #define GFP_ZONE_TABLE ( (ZONE_NORMAL << 0 * ZONES_SHIFT) | (OPT_ZONE_DMA << ___GFP_DMA * ZONES_SHIFT) | (OPT_ZONE_HIGHMEM << ___GFP_HIGHMEM * ZONES_SHIFT) | (OPT_ZONE_DMA32 << ___GFP_DMA32 * ZONES_SHIFT) | (ZONE_NORMAL << ___GFP_MOVABLE * ZONES_SHIFT) | (OPT_ZONE_DMA << (___GFP_MOVABLE | ___GFP_DMA) * ZONES_SHIFT) | (ZONE_MOVABLE << (___GFP_MOVABLE | ___GFP_HIGHMEM) * ZONES_SHIFT) | (OPT_ZONE_DMA32 << (___GFP_MOVABLE | ___GFP_DMA32) * ZONES_SHIFT) )
GFP_ZONE_BAD  macro  include/linux/gfp.h  250  #define GFP_ZONE_BAD ( 1 << (___GFP_DMA | ___GFP_HIGHMEM) | 1 << (___GFP_DMA | ___GFP_DMA32) | 1 << (___GFP_DMA32 | ___GFP_HIGHMEM) | 1 << (___GFP_DMA | ___GFP_DMA32 | ___GFP_HIGHMEM) | 1 << (___GFP_MOVABLE | ___GFP_HIGHMEM | ___GFP_DMA) | 1 << (___GFP_MOVABLE | ___GFP_DMA32 | ___GFP_DMA) | 1 << (___GFP_MOVABLE | ___GFP_DMA32 | ___GFP_HIGHMEM) | 1 << (___GFP_MOVABLE | ___GFP_DMA32 | ___GFP_DMA | ___GFP_HIGHMEM) )
gfp_zone  function  include/linux/gfp.h  252  static inline enum zone_type gfp_zone(gfp_t flags)
gfp_zonelist  function  include/linux/gfp.h  270  static inline int gfp_zonelist(gfp_t flags)
node_zonelist  function  include/linux/gfp.h  287  static inline struct zonelist *node_zonelist(int nid,gfp_t flags)
arch_free_page  function  include/linux/gfp.h  293  static inline void arch_free_page(struct page *page,int order) { }
arch_alloc_page  function  include/linux/gfp.h  296  static inline void arch_alloc_page(struct page *page,int order) { }
__alloc_pages_nodemask  prototype  include/linux/gfp.h  301  __alloc_pages_nodemask(gfp_t gfp_mask,unsigned int order,struct zonelist *zonelist, nodemask_t *nodemask);
__alloc_pages  function  include/linux/gfp.h  305  __alloc_pages(gfp_t gfp_mask,unsigned int order,struct zonelist *zonelist)
alloc_pages_node  function  include/linux/gfp.h  311  static inline struct page *alloc_pages_node(int nid,gfp_t gfp_mask,unsigned int order)
alloc_pages_exact_node  function  include/linux/gfp.h  321  static inline struct page *alloc_pages_exact_node(int nid,gfp_t gfp_mask,unsigned int order)
alloc_pages_current  prototype  include/linux/gfp.h  329  extern struct page *alloc_pages_current(gfp_t gfp_mask,unsigned order);
alloc_pages  macro  include/linux/gfp.h  341  #define alloc_pages(gfp_mask,order) alloc_pages_node(numa_node_id(), gfp_mask, order)
alloc_pages_vma  macro  include/linux/gfp.h  343  #define alloc_pages_vma(gfp_mask,order,vma,addr,node) alloc_pages(gfp_mask, order)
alloc_page  macro  include/linux/gfp.h  345  #define alloc_page(gfp_mask) alloc_pages(gfp_mask,0)
alloc_page_vma  macro  include/linux/gfp.h  347  #define alloc_page_vma(gfp_mask,vma,addr) alloc_pages_vma(gfp_mask, 0, vma, addr, numa_node_id())
alloc_page_vma_node  macro  include/linux/gfp.h  349  #define alloc_page_vma_node(gfp_mask,vma,addr,node) alloc_pages_vma(gfp_mask, 0, vma, addr, node)
__get_free_pages  prototype  include/linux/gfp.h  351  extern unsigned long __get_free_pages(gfp_t gfp_mask,unsigned int order);
get_zeroed_page  prototype  include/linux/gfp.h  352  extern unsigned long get_zeroed_page(gfp_t gfp_mask);
alloc_pages_exact  prototype  include/linux/gfp.h  354  void *alloc_pages_exact(size_t size,gfp_t gfp_mask);
free_pages_exact  prototype  include/linux/gfp.h  355  void free_pages_exact(void *virt,size_t size);
alloc_pages_exact_nid  prototype  include/linux/gfp.h  357  void *alloc_pages_exact_nid(int nid,size_t size,gfp_t gfp_mask);
__get_free_page  macro  include/linux/gfp.h  360  #define __get_free_page(gfp_mask) __get_free_pages((gfp_mask), 0)
__get_dma_pages  macro  include/linux/gfp.h  363  #define __get_dma_pages(gfp_mask,order) __get_free_pages((gfp_mask) | GFP_DMA, (order))
__free_pages  prototype  include/linux/gfp.h  365  extern void __free_pages(struct page *page,unsigned int order);
free_pages  prototype  include/linux/gfp.h  366  extern void free_pages(unsigned long addr,unsigned int order);
free_hot_cold_page  prototype  include/linux/gfp.h  367  extern void free_hot_cold_page(struct page *page,int cold);
free_hot_cold_page_list  prototype  include/linux/gfp.h  368  extern void free_hot_cold_page_list(struct list_head *list,int cold);
__free_memcg_kmem_pages  prototype  include/linux/gfp.h  370  extern void __free_memcg_kmem_pages(struct page *page,unsigned int order);
free_memcg_kmem_pages  prototype  include/linux/gfp.h  371  extern void free_memcg_kmem_pages(unsigned long addr,unsigned int order);
__free_page  macro  include/linux/gfp.h  373  #define __free_page(page) __free_pages((page),0)
free_page  macro  include/linux/gfp.h  374  #define free_page(addr) free_pages((addr),0)
page_alloc_init  prototype  include/linux/gfp.h  376  void page_alloc_init(void);
drain_zone_pages  prototype  include/linux/gfp.h  377  void drain_zone_pages(struct zone *zone,struct per_cpu_pages *pcp);
drain_all_pages  prototype  include/linux/gfp.h  378  void drain_all_pages(void);
drain_local_pages  prototype  include/linux/gfp.h  379  void drain_local_pages(void *dummy);
gfp_pfmemalloc_allowed  prototype  include/linux/gfp.h  391  bool gfp_pfmemalloc_allowed(gfp_t gfp_mask);
pm_restrict_gfp_mask  prototype  include/linux/gfp.h  393  extern void pm_restrict_gfp_mask(void);
pm_restore_gfp_mask  prototype  include/linux/gfp.h  394  extern void pm_restore_gfp_mask(void);
pm_suspended_storage  function  include/linux/gfp.h  399  static inline bool pm_suspended_storage(void)
alloc_contig_range  prototype  include/linux/gfp.h  409  extern int alloc_contig_range(unsigned long start,unsigned long end,unsigned migratetype);
free_contig_range  prototype  include/linux/gfp.h  410  extern void free_contig_range(unsigned long pfn,unsigned nr_pages);
init_cma_reserved_pageblock  prototype  include/linux/gfp.h  413  extern void init_cma_reserved_pageblock(struct page *page);
_LINUX_WORKQUEUE_H  macro  include/linux/workqueue.h  6  #define _LINUX_WORKQUEUE_H
delayed_work_timer_fn  prototype  include/linux/workqueue.h  19  void delayed_work_timer_fn(unsigned long __data);
work_data_bits  macro  include/linux/workqueue.h  25  #define work_data_bits(work) ((unsigned long *)(&(work)->data))
work_struct  struct  include/linux/workqueue.h  89  struct work_struct {
WORK_DATA_INIT  macro  include/linux/workqueue.h  98  #define WORK_DATA_INIT() ATOMIC_LONG_INIT(WORK_STRUCT_NO_CPU)
WORK_DATA_STATIC_INIT  macro  include/linux/workqueue.h  100  #define WORK_DATA_STATIC_INIT() ATOMIC_LONG_INIT(WORK_STRUCT_NO_CPU | WORK_STRUCT_STATIC)
delayed_work  struct  include/linux/workqueue.h  102  struct delayed_work {
to_delayed_work  function  include/linux/workqueue.h  108  static inline struct delayed_work *to_delayed_work(struct work_struct *work)
execute_work  struct  include/linux/workqueue.h  113  struct execute_work {
__WORK_INIT_LOCKDEP_MAP  macro  include/linux/workqueue.h  126  #define __WORK_INIT_LOCKDEP_MAP(n,k)
__WORK_INITIALIZER  macro  include/linux/workqueue.h  134  #define __WORK_INITIALIZER(n,f) { .data = WORK_DATA_STATIC_INIT(), .entry	= { &(n).entry, &(n).entry }, .func = (f), __WORK_INIT_LOCKDEP_MAP(#n, &(n)) }
__DELAYED_WORK_INITIALIZER  macro  include/linux/workqueue.h  141  #define __DELAYED_WORK_INITIALIZER(n,f,tflags) { .work = __WORK_INITIALIZER((n).work, (f)), .timer = __TIMER_INITIALIZER(delayed_work_timer_fn, 0, (unsigned long)&(n), (tflags) | TIMER_IRQSAFE), }
DECLARE_WORK  macro  include/linux/workqueue.h  144  #define DECLARE_WORK(n,f) struct work_struct n = __WORK_INITIALIZER(n, f)
DECLARE_DELAYED_WORK  macro  include/linux/workqueue.h  147  #define DECLARE_DELAYED_WORK(n,f) struct delayed_work n = __DELAYED_WORK_INITIALIZER(n, f, 0)
DECLARE_DEFERRABLE_WORK  macro  include/linux/workqueue.h  150  #define DECLARE_DEFERRABLE_WORK(n,f) struct delayed_work n = __DELAYED_WORK_INITIALIZER(n, f, TIMER_DEFERRABLE)
PREPARE_WORK  macro  include/linux/workqueue.h  158  #define PREPARE_WORK(_work,_func) do { (_work)->func = (_func); } while (0)
PREPARE_DELAYED_WORK  macro  include/linux/workqueue.h  161  #define PREPARE_DELAYED_WORK(_work,_func) PREPARE_WORK(&(_work)->work, (_func))
__init_work  function  include/linux/workqueue.h  171  static inline void __init_work(struct work_struct *work,int onstack) { }
destroy_work_on_stack  function  include/linux/workqueue.h  172  static inline void destroy_work_on_stack(struct work_struct *work) { }
work_static  function  include/linux/workqueue.h  173  static inline unsigned int work_static(struct work_struct *work) { return 0; }
__INIT_WORK  macro  include/linux/workqueue.h  201  #define __INIT_WORK(_work,_func,_onstack) do { __init_work((_work), _onstack); (_work)->data = (atomic_long_t) WORK_DATA_INIT(); INIT_LIST_HEAD(&(_work)->entry); PREPARE_WORK((_work), (_func)); } while (0)
INIT_WORK  macro  include/linux/workqueue.h  207  #define INIT_WORK(_work,_func) do { __INIT_WORK((_work), (_func), 0); } while (0)
INIT_WORK_ONSTACK  macro  include/linux/workqueue.h  212  #define INIT_WORK_ONSTACK(_work,_func) do { __INIT_WORK((_work), (_func), 1); } while (0)
__INIT_DELAYED_WORK  macro  include/linux/workqueue.h  220  #define __INIT_DELAYED_WORK(_work,_func,_tflags) do { INIT_WORK(&(_work)->work, (_func)); __setup_timer(&(_work)->timer, delayed_work_timer_fn, (unsigned long)(_work), (_tflags) | TIMER_IRQSAFE); } while (0)
__INIT_DELAYED_WORK_ONSTACK  macro  include/linux/workqueue.h  229  #define __INIT_DELAYED_WORK_ONSTACK(_work,_func,_tflags) do { INIT_WORK_ONSTACK(&(_work)->work, (_func)); __setup_timer_on_stack(&(_work)->timer, delayed_work_timer_fn, (unsigned long)(_work), (_tflags) | TIMER_IRQSAFE); } while (0)
INIT_DELAYED_WORK  macro  include/linux/workqueue.h  232  #define INIT_DELAYED_WORK(_work,_func) __INIT_DELAYED_WORK(_work, _func, 0)
INIT_DELAYED_WORK_ONSTACK  macro  include/linux/workqueue.h  235  #define INIT_DELAYED_WORK_ONSTACK(_work,_func) __INIT_DELAYED_WORK_ONSTACK(_work, _func, 0)
INIT_DEFERRABLE_WORK  macro  include/linux/workqueue.h  238  #define INIT_DEFERRABLE_WORK(_work,_func) __INIT_DELAYED_WORK(_work, _func, TIMER_DEFERRABLE)
INIT_DEFERRABLE_WORK_ONSTACK  macro  include/linux/workqueue.h  241  #define INIT_DEFERRABLE_WORK_ONSTACK(_work,_func) __INIT_DELAYED_WORK_ONSTACK(_work, _func, TIMER_DEFERRABLE)
work_pending  macro  include/linux/workqueue.h  248  #define work_pending(work) test_bit(WORK_STRUCT_PENDING_BIT, work_data_bits(work))
delayed_work_pending  macro  include/linux/workqueue.h  256  #define delayed_work_pending(w) work_pending(&(w)->work)
work_clear_pending  macro  include/linux/workqueue.h  263  #define work_clear_pending(work) clear_bit(WORK_STRUCT_PENDING_BIT, work_data_bits(work))
WQ_UNBOUND_MAX_ACTIVE  macro  include/linux/workqueue.h  287  #define WQ_UNBOUND_MAX_ACTIVE max_t(int, WQ_MAX_ACTIVE, num_possible_cpus() * WQ_MAX_UNBOUND_PER_CPU)
__system_nrt_wq  function  include/linux/workqueue.h  313  static inline struct workqueue_struct * __deprecated __system_nrt_wq(void)
__system_nrt_freezable_wq  function  include/linux/workqueue.h  318  static inline struct workqueue_struct * __deprecated __system_nrt_freezable_wq(void)
system_nrt_wq  macro  include/linux/workqueue.h  324  #define system_nrt_wq __system_nrt_wq()
system_nrt_freezable_wq  macro  include/linux/workqueue.h  325  #define system_nrt_freezable_wq __system_nrt_freezable_wq()
alloc_workqueue  macro  include/linux/workqueue.h  364  #define alloc_workqueue(fmt,flags,max_active,args...) __alloc_workqueue_key((fmt), (flags), (max_active), NULL, NULL, ##args)
alloc_ordered_workqueue  macro  include/linux/workqueue.h  381  #define alloc_ordered_workqueue(fmt,flags,args...) alloc_workqueue(fmt, WQ_UNBOUND | (flags), 1, ##args)
create_workqueue  macro  include/linux/workqueue.h  384  #define create_workqueue(name) alloc_workqueue((name), WQ_MEM_RECLAIM, 1)
create_freezable_workqueue  macro  include/linux/workqueue.h  386  #define create_freezable_workqueue(name) alloc_workqueue((name), WQ_FREEZABLE | WQ_UNBOUND | WQ_MEM_RECLAIM, 1)
create_singlethread_workqueue  macro  include/linux/workqueue.h  388  #define create_singlethread_workqueue(name) alloc_workqueue((name), WQ_UNBOUND | WQ_MEM_RECLAIM, 1)
destroy_workqueue  prototype  include/linux/workqueue.h  390  extern void destroy_workqueue(struct workqueue_struct *wq);
queue_work_on  prototype  include/linux/workqueue.h  393  extern bool queue_work_on(int cpu,struct workqueue_struct *wq,struct work_struct *work);
queue_work  prototype  include/linux/workqueue.h  394  extern bool queue_work(struct workqueue_struct *wq,struct work_struct *work);
queue_delayed_work_on  prototype  include/linux/workqueue.h  396  extern bool queue_delayed_work_on(int cpu,struct workqueue_struct *wq,struct delayed_work *work, unsigned long delay);
queue_delayed_work  prototype  include/linux/workqueue.h  398  extern bool queue_delayed_work(struct workqueue_struct *wq,struct delayed_work *work, unsigned long delay);
mod_delayed_work_on  prototype  include/linux/workqueue.h  400  extern bool mod_delayed_work_on(int cpu,struct workqueue_struct *wq,struct delayed_work *dwork, unsigned long delay);
mod_delayed_work  prototype  include/linux/workqueue.h  402  extern bool mod_delayed_work(struct workqueue_struct *wq,struct delayed_work *dwork, unsigned long delay);
flush_workqueue  prototype  include/linux/workqueue.h  404  extern void flush_workqueue(struct workqueue_struct *wq);
drain_workqueue  prototype  include/linux/workqueue.h  405  extern void drain_workqueue(struct workqueue_struct *wq);
flush_scheduled_work  prototype  include/linux/workqueue.h  406  extern void flush_scheduled_work(void);
schedule_work_on  prototype  include/linux/workqueue.h  408  extern bool schedule_work_on(int cpu,struct work_struct *work);
schedule_work  prototype  include/linux/workqueue.h  409  extern bool schedule_work(struct work_struct *work);
schedule_delayed_work_on  prototype  include/linux/workqueue.h  411  extern bool schedule_delayed_work_on(int cpu,struct delayed_work *work,unsigned long delay);
schedule_delayed_work  prototype  include/linux/workqueue.h  413  extern bool schedule_delayed_work(struct delayed_work *work,unsigned long delay);
schedule_on_each_cpu  prototype  include/linux/workqueue.h  414  extern int schedule_on_each_cpu(work_func_t func);
keventd_up  prototype  include/linux/workqueue.h  415  extern int keventd_up(void);
execute_in_process_context  prototype  include/linux/workqueue.h  417  int execute_in_process_context(work_func_t fn,struct execute_work *);
flush_work  prototype  include/linux/workqueue.h  419  extern bool flush_work(struct work_struct *work);
cancel_work_sync  prototype  include/linux/workqueue.h  420  extern bool cancel_work_sync(struct work_struct *work);
flush_delayed_work  prototype  include/linux/workqueue.h  422  extern bool flush_delayed_work(struct delayed_work *dwork);
cancel_delayed_work  prototype  include/linux/workqueue.h  423  extern bool cancel_delayed_work(struct delayed_work *dwork);
cancel_delayed_work_sync  prototype  include/linux/workqueue.h  424  extern bool cancel_delayed_work_sync(struct delayed_work *dwork);
workqueue_set_max_active  prototype  include/linux/workqueue.h  427  extern void workqueue_set_max_active(struct workqueue_struct *wq,int max_active);
workqueue_congested  prototype  include/linux/workqueue.h  428  extern bool workqueue_congested(unsigned int cpu,struct workqueue_struct *wq);
work_cpu  prototype  include/linux/workqueue.h  429  extern unsigned int work_cpu(struct work_struct *work);
work_busy  prototype  include/linux/workqueue.h  430  extern unsigned int work_busy(struct work_struct *work);
__cancel_delayed_work  function  include/linux/workqueue.h  437  static inline bool __deprecated __cancel_delayed_work(struct delayed_work *work)
flush_work_sync  function  include/linux/workqueue.h  448  static inline bool __deprecated flush_work_sync(struct work_struct *work)
flush_delayed_work_sync  function  include/linux/workqueue.h  454  static inline bool __deprecated flush_delayed_work_sync(struct delayed_work *dwork)
work_on_cpu  prototype  include/linux/workqueue.h  465  long work_on_cpu(unsigned int cpu,long (*fn)(void *),void *arg);
freeze_workqueues_begin  prototype  include/linux/workqueue.h  469  extern void freeze_workqueues_begin(void);
freeze_workqueues_busy  prototype  include/linux/workqueue.h  470  extern bool freeze_workqueues_busy(void);
thaw_workqueues  prototype  include/linux/workqueue.h  471  extern void thaw_workqueues(void);
_LINUX_SLUB_DEF_H  macro  include/linux/slub_def.h  2  #define _LINUX_SLUB_DEF_H
stat_item  enum  include/linux/slub_def.h  17  enum stat_item {
kmem_cache_cpu  struct  include/linux/slub_def.h  46  struct kmem_cache_cpu {
kmem_cache_node  struct  include/linux/slub_def.h  56  struct kmem_cache_node {
kmem_cache_order_objects  struct  include/linux/slub_def.h  72  struct kmem_cache_order_objects {
KMALLOC_MIN_SIZE  macro  include/linux/slub_def.h  124  #define KMALLOC_MIN_SIZE 8
KMALLOC_SHIFT_LOW  macro  include/linux/slub_def.h  127  #define KMALLOC_SHIFT_LOW ilog2(KMALLOC_MIN_SIZE)
SLUB_MAX_SIZE  macro  include/linux/slub_def.h  138  #define SLUB_MAX_SIZE (2 * PAGE_SIZE)
SLUB_PAGE_SHIFT  macro  include/linux/slub_def.h  140  #define SLUB_PAGE_SHIFT (PAGE_SHIFT + 2)
SLUB_DMA  macro  include/linux/slub_def.h  146  #define SLUB_DMA (__force gfp_t)0
kmalloc_index  function  include/linux/slub_def.h  159  static __always_inline int kmalloc_index(size_t size)
kmalloc_slab  function  include/linux/slub_def.h  213  static __always_inline struct kmem_cache *kmalloc_slab(size_t size)
__kmalloc  prototype  include/linux/slab_def.h  118  void *__kmalloc(size_t size,gfp_t flags);
kmalloc_order  function  include/linux/slub_def.h  227  kmalloc_order(size_t size,gfp_t flags,unsigned int order)
verify_mem_not_deleted  function  include/linux/slub_def.h  244  static inline bool verify_mem_not_deleted(const void *x)
kmem_cache_alloc_trace  function  include/linux/slab_def.h  124  kmem_cache_alloc_trace(struct kmem_cache *cachep,gfp_t flags,size_t size)
kmalloc_order_trace  function  include/linux/slub_def.h  262  kmalloc_order_trace(size_t size,gfp_t flags,unsigned int order)
kmalloc_large  function  include/linux/slub_def.h  268  static __always_inline void *kmalloc_large(size_t size,gfp_t flags)
kmalloc  function  include/linux/slab_def.h  130  static __always_inline void *kmalloc(size_t size,gfp_t flags)
kmem_cache_alloc_node_trace  function  include/linux/slab_def.h  178  kmem_cache_alloc_node_trace(struct kmem_cache *cachep,gfp_t flags,int nodeid,size_t size)
__LINUX_SLOB_DEF_H  macro  include/linux/slob_def.h  2  #define __LINUX_SLOB_DEF_H
_LINUX_SLAB_DEF_H  macro  include/linux/slab_def.h  2  #define _LINUX_SLAB_DEF_H
cache_sizes  struct  include/linux/slab_def.h  108  struct cache_sizes {
CACHE  macro  include/linux/slab_def.h  200  #undef CACHE
__LINUX_PREEMPT_H  macro  include/linux/preempt.h  2  #define __LINUX_PREEMPT_H
add_preempt_count  macro  include/linux/preempt.h  17  # define add_preempt_count(val) do { preempt_count() += (val); } while (0)
sub_preempt_count  macro  include/linux/preempt.h  18  # define sub_preempt_count(val) do { preempt_count() -= (val); } while (0)
inc_preempt_count  macro  include/linux/preempt.h  21  #define inc_preempt_count() add_preempt_count(1)
dec_preempt_count  macro  include/linux/preempt.h  22  #define dec_preempt_count() sub_preempt_count(1)
preempt_count  macro  include/linux/preempt.h  24  #define preempt_count() (current_thread_info()->preempt_count)
preempt_schedule  prototype  include/linux/preempt.h  28  asmlinkage void preempt_schedule(void);
preempt_check_resched  macro  include/linux/preempt.h  38  #define preempt_check_resched() do { } while (0)
preempt_disable  macro  include/linux/preempt.h  102  #define preempt_disable() barrier()
sched_preempt_enable_no_resched  macro  include/linux/preempt.h  103  #define sched_preempt_enable_no_resched() barrier()
preempt_enable_no_resched  macro  include/linux/preempt.h  104  #define preempt_enable_no_resched() barrier()
preempt_enable  macro  include/linux/preempt.h  105  #define preempt_enable() barrier()
add_preempt_count_notrace  macro  include/linux/preempt.h  68  #define add_preempt_count_notrace(val) do { preempt_count() += (val); } while (0)
sub_preempt_count_notrace  macro  include/linux/preempt.h  70  #define sub_preempt_count_notrace(val) do { preempt_count() -= (val); } while (0)
inc_preempt_count_notrace  macro  include/linux/preempt.h  71  #define inc_preempt_count_notrace() add_preempt_count_notrace(1)
dec_preempt_count_notrace  macro  include/linux/preempt.h  72  #define dec_preempt_count_notrace() sub_preempt_count_notrace(1)
preempt_disable_notrace  macro  include/linux/preempt.h  107  #define preempt_disable_notrace() barrier()
preempt_enable_no_resched_notrace  macro  include/linux/preempt.h  108  #define preempt_enable_no_resched_notrace() barrier()
preempt_enable_notrace  macro  include/linux/preempt.h  109  #define preempt_enable_notrace() barrier()
preempt_ops  struct  include/linux/preempt.h  131  struct preempt_ops {
preempt_notifier  struct  include/linux/preempt.h  144  struct preempt_notifier {
preempt_notifier_register  prototype  include/linux/preempt.h  149  void preempt_notifier_register(struct preempt_notifier *notifier);
preempt_notifier_unregister  prototype  include/linux/preempt.h  150  void preempt_notifier_unregister(struct preempt_notifier *notifier);
preempt_notifier_init  function  include/linux/preempt.h  153  static inline void preempt_notifier_init(struct preempt_notifier *notifier,struct preempt_ops *ops)
_LINUX_IRQRETURN_H  macro  include/linux/irqreturn.h  2  #define _LINUX_IRQRETURN_H
irqreturn  enum  include/linux/irqreturn.h  10  enum irqreturn {
IRQ_RETVAL  macro  include/linux/irqreturn.h  17  #define IRQ_RETVAL(x) ((x) != IRQ_NONE)
_LINUX_IRQNR_H  macro  include/linux/irqnr.h  2  #define _LINUX_IRQNR_H
nr_irqs  macro  include/linux/irqnr.h  13  #define nr_irqs NR_IRQS
irq_to_desc  prototype  include/linux/irqnr.h  25  extern struct irq_desc *irq_to_desc(unsigned int irq);
for_each_irq_desc  macro  include/linux/irqnr.h  33  # define for_each_irq_desc(irq,desc) for (irq = 0, desc = irq_to_desc(irq); irq < nr_irqs; irq++, desc = irq_to_desc(irq)) if (!desc) ; else
for_each_irq_desc_reverse  macro  include/linux/irqnr.h  41  # define for_each_irq_desc_reverse(irq,desc) for (irq = nr_irqs - 1, desc = irq_to_desc(irq); irq >= 0; irq--, desc = irq_to_desc(irq)) if (!desc) ; else
irq_get_next_irq  prototype  include/linux/irqnr.h  26  unsigned int irq_get_next_irq(unsigned int offset);
irq_node  macro  include/linux/irqnr.h  46  #define irq_node(irq) 0
for_each_active_irq  macro  include/linux/irqnr.h  51  # define for_each_active_irq(irq) for (irq = irq_get_next_irq(0); irq < nr_irqs; irq = irq_get_next_irq(irq + 1))
for_each_irq_nr  macro  include/linux/irqnr.h  56  #define for_each_irq_nr(irq) for (irq = 0; irq < nr_irqs; irq++)
LINUX_HARDIRQ_H  macro  include/linux/hardirq.h  2  #define LINUX_HARDIRQ_H
PREEMPT_BITS  macro  include/linux/hardirq.h  33  #define PREEMPT_BITS 8
SOFTIRQ_BITS  macro  include/linux/hardirq.h  34  #define SOFTIRQ_BITS 8
NMI_BITS  macro  include/linux/hardirq.h  35  #define NMI_BITS 1
MAX_HARDIRQ_BITS  macro  include/linux/hardirq.h  37  #define MAX_HARDIRQ_BITS 10
HARDIRQ_BITS  macro  include/linux/hardirq.h  40  # define HARDIRQ_BITS MAX_HARDIRQ_BITS
PREEMPT_SHIFT  macro  include/linux/hardirq.h  47  #define PREEMPT_SHIFT 0
SOFTIRQ_SHIFT  macro  include/linux/hardirq.h  48  #define SOFTIRQ_SHIFT (PREEMPT_SHIFT + PREEMPT_BITS)
HARDIRQ_SHIFT  macro  include/linux/hardirq.h  49  #define HARDIRQ_SHIFT (SOFTIRQ_SHIFT + SOFTIRQ_BITS)
NMI_SHIFT  macro  include/linux/hardirq.h  50  #define NMI_SHIFT (HARDIRQ_SHIFT + HARDIRQ_BITS)
__IRQ_MASK  macro  include/linux/hardirq.h  52  #define __IRQ_MASK(x) ((1UL << (x))-1)
PREEMPT_MASK  macro  include/linux/hardirq.h  54  #define PREEMPT_MASK (__IRQ_MASK(PREEMPT_BITS) << PREEMPT_SHIFT)
SOFTIRQ_MASK  macro  include/linux/hardirq.h  55  #define SOFTIRQ_MASK (__IRQ_MASK(SOFTIRQ_BITS) << SOFTIRQ_SHIFT)
HARDIRQ_MASK  macro  include/linux/hardirq.h  56  #define HARDIRQ_MASK (__IRQ_MASK(HARDIRQ_BITS) << HARDIRQ_SHIFT)
NMI_MASK  macro  include/linux/hardirq.h  57  #define NMI_MASK (__IRQ_MASK(NMI_BITS) << NMI_SHIFT)
PREEMPT_OFFSET  macro  include/linux/hardirq.h  59  #define PREEMPT_OFFSET (1UL << PREEMPT_SHIFT)
SOFTIRQ_OFFSET  macro  include/linux/hardirq.h  60  #define SOFTIRQ_OFFSET (1UL << SOFTIRQ_SHIFT)
HARDIRQ_OFFSET  macro  include/linux/hardirq.h  61  #define HARDIRQ_OFFSET (1UL << HARDIRQ_SHIFT)
NMI_OFFSET  macro  include/linux/hardirq.h  62  #define NMI_OFFSET (1UL << NMI_SHIFT)
SOFTIRQ_DISABLE_OFFSET  macro  include/linux/hardirq.h  64  #define SOFTIRQ_DISABLE_OFFSET (2 * SOFTIRQ_OFFSET)
PREEMPT_ACTIVE_BITS  macro  include/linux/hardirq.h  67  #define PREEMPT_ACTIVE_BITS 1
PREEMPT_ACTIVE_SHIFT  macro  include/linux/hardirq.h  68  #define PREEMPT_ACTIVE_SHIFT (NMI_SHIFT + NMI_BITS)
PREEMPT_ACTIVE  macro  arch/x86/include/asm/thread_info.h  160  #define PREEMPT_ACTIVE 0x10000000
hardirq_count  macro  include/linux/hardirq.h  76  #define hardirq_count() (preempt_count() & HARDIRQ_MASK)
softirq_count  macro  include/linux/hardirq.h  77  #define softirq_count() (preempt_count() & SOFTIRQ_MASK)
irq_count  macro  include/linux/hardirq.h  79  #define irq_count() (preempt_count() & (HARDIRQ_MASK | SOFTIRQ_MASK | NMI_MASK))
in_irq  macro  include/linux/hardirq.h  87  #define in_irq() (hardirq_count())
in_softirq  macro  include/linux/hardirq.h  88  #define in_softirq() (softirq_count())
in_interrupt  macro  include/linux/hardirq.h  89  #define in_interrupt() (irq_count())
in_serving_softirq  macro  include/linux/hardirq.h  90  #define in_serving_softirq() (softirq_count() & SOFTIRQ_OFFSET)
in_nmi  macro  include/linux/hardirq.h  95  #define in_nmi() (preempt_count() & NMI_MASK)
PREEMPT_CHECK_OFFSET  macro  include/linux/hardirq.h  100  # define PREEMPT_CHECK_OFFSET 0
in_atomic  macro  include/linux/hardirq.h  110  #define in_atomic() ((preempt_count() & ~PREEMPT_ACTIVE) != 0)
in_atomic_preempt_off  macro  include/linux/hardirq.h  117  #define in_atomic_preempt_off() ((preempt_count() & ~PREEMPT_ACTIVE) != PREEMPT_CHECK_OFFSET)
preemptible  macro  include/linux/hardirq.h  123  # define preemptible() 0
IRQ_EXIT_OFFSET  macro  include/linux/hardirq.h  124  # define IRQ_EXIT_OFFSET HARDIRQ_OFFSET
synchronize_irq  macro  include/linux/hardirq.h  130  # define synchronize_irq(irq) barrier()
rcu_nmi_enter  prototype  include/linux/hardirq.h  144  extern void rcu_nmi_enter(void);
rcu_nmi_exit  prototype  include/linux/hardirq.h  145  extern void rcu_nmi_exit(void);
__irq_enter  macro  include/linux/hardirq.h  159  #define __irq_enter() do { vtime_account_irq_enter(current); add_preempt_count(HARDIRQ_OFFSET); trace_hardirq_enter(); } while (0)
irq_enter  prototype  include/linux/hardirq.h  164  extern void irq_enter(void);
__irq_exit  macro  include/linux/hardirq.h  174  #define __irq_exit() do { trace_hardirq_exit(); vtime_account_irq_exit(current); sub_preempt_count(HARDIRQ_OFFSET); } while (0)
irq_exit  prototype  include/linux/hardirq.h  179  extern void irq_exit(void);
nmi_enter  macro  include/linux/hardirq.h  189  #define nmi_enter() do { ftrace_nmi_enter(); BUG_ON(in_nmi()); add_preempt_count(NMI_OFFSET + HARDIRQ_OFFSET); lockdep_off(); rcu_nmi_enter(); trace_hardirq_enter(); } while (0)
nmi_exit  macro  include/linux/hardirq.h  199  #define nmi_exit() do { trace_hardirq_exit(); rcu_nmi_exit(); lockdep_on(); BUG_ON(!in_nmi()); sub_preempt_count(NMI_OFFSET + HARDIRQ_OFFSET); ftrace_nmi_exit(); } while (0)
_LINUX_TRACE_IRQFLAGS_H  macro  include/linux/irqflags.h  12  #define _LINUX_TRACE_IRQFLAGS_H
trace_softirqs_on  macro  include/linux/irqflags.h  34  # define trace_softirqs_on(ip) do { } while (0)
trace_softirqs_off  macro  include/linux/irqflags.h  35  # define trace_softirqs_off(ip) do { } while (0)
trace_hardirqs_on  macro  include/linux/irqflags.h  32  # define trace_hardirqs_on() do { } while (0)
trace_hardirqs_off  macro  include/linux/irqflags.h  33  # define trace_hardirqs_off() do { } while (0)
trace_hardirq_context  macro  include/linux/irqflags.h  36  # define trace_hardirq_context(p) 0
trace_softirq_context  macro  include/linux/irqflags.h  37  # define trace_softirq_context(p) 0
trace_hardirqs_enabled  macro  include/linux/irqflags.h  38  # define trace_hardirqs_enabled(p) 0
trace_softirqs_enabled  macro  include/linux/irqflags.h  39  # define trace_softirqs_enabled(p) 0
trace_hardirq_enter  macro  include/linux/irqflags.h  40  # define trace_hardirq_enter() do { } while (0)
trace_hardirq_exit  macro  include/linux/irqflags.h  41  # define trace_hardirq_exit() do { } while (0)
lockdep_softirq_enter  macro  include/linux/irqflags.h  42  # define lockdep_softirq_enter() do { } while (0)
lockdep_softirq_exit  macro  include/linux/irqflags.h  43  # define lockdep_softirq_exit() do { } while (0)
INIT_TRACE_IRQFLAGS  macro  include/linux/irqflags.h  44  # define INIT_TRACE_IRQFLAGS
stop_critical_timings  macro  include/linux/irqflags.h  52  # define stop_critical_timings() do { } while (0)
start_critical_timings  macro  include/linux/irqflags.h  53  # define start_critical_timings() do { } while (0)
raw_local_irq_disable  macro  include/linux/irqflags.h  59  #define raw_local_irq_disable() arch_local_irq_disable()
raw_local_irq_enable  macro  include/linux/irqflags.h  60  #define raw_local_irq_enable() arch_local_irq_enable()
raw_local_irq_save  macro  include/linux/irqflags.h  65  #define raw_local_irq_save(flags) do { typecheck(unsigned long, flags); flags = arch_local_irq_save(); } while (0)
raw_local_irq_restore  macro  include/linux/irqflags.h  70  #define raw_local_irq_restore(flags) do { typecheck(unsigned long, flags); arch_local_irq_restore(flags); } while (0)
raw_local_save_flags  macro  include/linux/irqflags.h  75  #define raw_local_save_flags(flags) do { typecheck(unsigned long, flags); flags = arch_local_save_flags(); } while (0)
raw_irqs_disabled_flags  macro  include/linux/irqflags.h  80  #define raw_irqs_disabled_flags(flags) ({ typecheck(unsigned long, flags); arch_irqs_disabled_flags(flags); })
raw_irqs_disabled  macro  include/linux/irqflags.h  81  #define raw_irqs_disabled() (arch_irqs_disabled())
raw_safe_halt  macro  include/linux/irqflags.h  82  #define raw_safe_halt() arch_safe_halt()
local_irq_enable  macro  include/linux/irqflags.h  136  #define local_irq_enable() do { raw_local_irq_enable(); } while (0)
local_irq_disable  macro  include/linux/irqflags.h  137  #define local_irq_disable() do { raw_local_irq_disable(); } while (0)
local_irq_save  macro  include/linux/irqflags.h  141  #define local_irq_save(flags) do { raw_local_irq_save(flags); } while (0)
local_irq_restore  macro  include/linux/irqflags.h  142  #define local_irq_restore(flags) do { raw_local_irq_restore(flags); } while (0)
local_save_flags  macro  include/linux/irqflags.h  143  #define local_save_flags(flags) do { raw_local_save_flags(flags); } while (0)
irqs_disabled_flags  macro  include/linux/irqflags.h  145  #define irqs_disabled_flags(flags) (raw_irqs_disabled_flags(flags))
irqs_disabled  macro  include/linux/irqflags.h  144  #define irqs_disabled() (raw_irqs_disabled())
safe_halt  macro  include/linux/irqflags.h  146  #define safe_halt() do { raw_safe_halt(); } while (0)
_KREF_H_  macro  include/linux/kref.h  16  #define _KREF_H_
kref  struct  include/linux/kref.h  23  struct kref {
kref_init  function  include/linux/kref.h  31  static inline void kref_init(struct kref *kref)
kref_get  function  include/linux/kref.h  40  static inline void kref_get(struct kref *kref)
kref_sub  function  include/linux/kref.h  65  static inline int kref_sub(struct kref *kref,unsigned int count,void (*release)(struct kref *kref))
kref_put  function  include/linux/kref.h  93  static inline int kref_put(struct kref *kref,void (*release)(struct kref *kref))
kref_put_mutex  function  include/linux/kref.h  100  static inline int kref_put_mutex(struct kref *kref,void (*release)(struct kref *kref),struct mutex *lock)
kref_get_unless_zero  function  include/linux/kref.h  131  static inline int __must_check kref_get_unless_zero(struct kref *kref)
_LINUX_ATOMIC_H  macro  include/linux/atomic.h  3  #define _LINUX_ATOMIC_H
atomic_add_unless  function  include/linux/atomic.h  15  static inline int atomic_add_unless(atomic_t *v,int a,int u)
atomic_inc_not_zero  macro  include/linux/atomic.h  28  #define atomic_inc_not_zero(v) atomic_add_unless((v),1,0)
atomic_inc_not_zero_hint  function  include/linux/atomic.h  44  static inline int atomic_inc_not_zero_hint(atomic_t *v,int hint)
atomic_inc_unless_negative  function  include/linux/atomic.h  64  static inline int atomic_inc_unless_negative(atomic_t *p)
atomic_dec_unless_positive  function  include/linux/atomic.h  77  static inline int atomic_dec_unless_positive(atomic_t *p)
atomic_dec_if_positive  function  include/linux/atomic.h  97  static inline int atomic_dec_if_positive(atomic_t *v)
atomic_or  function  include/linux/atomic.h  115  static inline void atomic_or(int i,atomic_t *v)
LINUX_MOD_DEVICETABLE_H  macro  include/linux/mod_devicetable.h  8  #define LINUX_MOD_DEVICETABLE_H
PCI_ANY_ID  macro  include/linux/mod_devicetable.h  15  #define PCI_ANY_ID (~0)
pci_device_id  struct  include/linux/mod_devicetable.h  17  struct pci_device_id {
IEEE1394_MATCH_VENDOR_ID  macro  include/linux/mod_devicetable.h  25  #define IEEE1394_MATCH_VENDOR_ID 0x0001
IEEE1394_MATCH_MODEL_ID  macro  include/linux/mod_devicetable.h  26  #define IEEE1394_MATCH_MODEL_ID 0x0002
IEEE1394_MATCH_SPECIFIER_ID  macro  include/linux/mod_devicetable.h  27  #define IEEE1394_MATCH_SPECIFIER_ID 0x0004
IEEE1394_MATCH_VERSION  macro  include/linux/mod_devicetable.h  28  #define IEEE1394_MATCH_VERSION 0x0008
ieee1394_device_id  struct  include/linux/mod_devicetable.h  30  struct ieee1394_device_id {
usb_device_id  struct  include/linux/mod_devicetable.h  101  struct usb_device_id {
USB_DEVICE_ID_MATCH_VENDOR  macro  include/linux/mod_devicetable.h  130  #define USB_DEVICE_ID_MATCH_VENDOR 0x0001
USB_DEVICE_ID_MATCH_PRODUCT  macro  include/linux/mod_devicetable.h  131  #define USB_DEVICE_ID_MATCH_PRODUCT 0x0002
USB_DEVICE_ID_MATCH_DEV_LO  macro  include/linux/mod_devicetable.h  132  #define USB_DEVICE_ID_MATCH_DEV_LO 0x0004
USB_DEVICE_ID_MATCH_DEV_HI  macro  include/linux/mod_devicetable.h  133  #define USB_DEVICE_ID_MATCH_DEV_HI 0x0008
USB_DEVICE_ID_MATCH_DEV_CLASS  macro  include/linux/mod_devicetable.h  134  #define USB_DEVICE_ID_MATCH_DEV_CLASS 0x0010
USB_DEVICE_ID_MATCH_DEV_SUBCLASS  macro  include/linux/mod_devicetable.h  135  #define USB_DEVICE_ID_MATCH_DEV_SUBCLASS 0x0020
USB_DEVICE_ID_MATCH_DEV_PROTOCOL  macro  include/linux/mod_devicetable.h  136  #define USB_DEVICE_ID_MATCH_DEV_PROTOCOL 0x0040
USB_DEVICE_ID_MATCH_INT_CLASS  macro  include/linux/mod_devicetable.h  137  #define USB_DEVICE_ID_MATCH_INT_CLASS 0x0080
USB_DEVICE_ID_MATCH_INT_SUBCLASS  macro  include/linux/mod_devicetable.h  138  #define USB_DEVICE_ID_MATCH_INT_SUBCLASS 0x0100
USB_DEVICE_ID_MATCH_INT_PROTOCOL  macro  include/linux/mod_devicetable.h  139  #define USB_DEVICE_ID_MATCH_INT_PROTOCOL 0x0200
USB_DEVICE_ID_MATCH_INT_NUMBER  macro  include/linux/mod_devicetable.h  140  #define USB_DEVICE_ID_MATCH_INT_NUMBER 0x0400
HID_ANY_ID  macro  include/linux/mod_devicetable.h  142  #define HID_ANY_ID (~0)
HID_BUS_ANY  macro  include/linux/mod_devicetable.h  143  #define HID_BUS_ANY 0xffff
HID_GROUP_ANY  macro  include/linux/mod_devicetable.h  144  #define HID_GROUP_ANY 0x0000
hid_device_id  struct  include/linux/mod_devicetable.h  146  struct hid_device_id {
ccw_device_id  struct  include/linux/mod_devicetable.h  156  struct ccw_device_id {
CCW_DEVICE_ID_MATCH_CU_TYPE  macro  include/linux/mod_devicetable.h  167  #define CCW_DEVICE_ID_MATCH_CU_TYPE 0x01
CCW_DEVICE_ID_MATCH_CU_MODEL  macro  include/linux/mod_devicetable.h  168  #define CCW_DEVICE_ID_MATCH_CU_MODEL 0x02
CCW_DEVICE_ID_MATCH_DEVICE_TYPE  macro  include/linux/mod_devicetable.h  169  #define CCW_DEVICE_ID_MATCH_DEVICE_TYPE 0x04
CCW_DEVICE_ID_MATCH_DEVICE_MODEL  macro  include/linux/mod_devicetable.h  170  #define CCW_DEVICE_ID_MATCH_DEVICE_MODEL 0x08
ap_device_id  struct  include/linux/mod_devicetable.h  173  struct ap_device_id {
AP_DEVICE_ID_MATCH_DEVICE_TYPE  macro  include/linux/mod_devicetable.h  181  #define AP_DEVICE_ID_MATCH_DEVICE_TYPE 0x01
css_device_id  struct  include/linux/mod_devicetable.h  184  struct css_device_id {
ACPI_ID_LEN  macro  include/linux/mod_devicetable.h  192  #define ACPI_ID_LEN 16
acpi_device_id  struct  include/linux/mod_devicetable.h  195  struct acpi_device_id {
PNP_ID_LEN  macro  include/linux/mod_devicetable.h  200  #define PNP_ID_LEN 8
PNP_MAX_DEVICES  macro  include/linux/mod_devicetable.h  201  #define PNP_MAX_DEVICES 8
pnp_device_id  struct  include/linux/mod_devicetable.h  203  struct pnp_device_id {
pnp_card_device_id  struct  include/linux/mod_devicetable.h  208  struct pnp_card_device_id {
SERIO_ANY  macro  include/linux/mod_devicetable.h  217  #define SERIO_ANY 0xff
serio_device_id  struct  include/linux/mod_devicetable.h  219  struct serio_device_id {
of_device_id  struct  include/linux/mod_devicetable.h  229  struct of_device_id
vio_device_id  struct  include/linux/mod_devicetable.h  242  struct vio_device_id {
pcmcia_device_id  struct  include/linux/mod_devicetable.h  249  struct pcmcia_device_id {
PCMCIA_DEV_ID_MATCH_MANF_ID  macro  include/linux/mod_devicetable.h  283  #define PCMCIA_DEV_ID_MATCH_MANF_ID 0x0001
PCMCIA_DEV_ID_MATCH_CARD_ID  macro  include/linux/mod_devicetable.h  284  #define PCMCIA_DEV_ID_MATCH_CARD_ID 0x0002
PCMCIA_DEV_ID_MATCH_FUNC_ID  macro  include/linux/mod_devicetable.h  285  #define PCMCIA_DEV_ID_MATCH_FUNC_ID 0x0004
PCMCIA_DEV_ID_MATCH_FUNCTION  macro  include/linux/mod_devicetable.h  286  #define PCMCIA_DEV_ID_MATCH_FUNCTION 0x0008
PCMCIA_DEV_ID_MATCH_PROD_ID1  macro  include/linux/mod_devicetable.h  287  #define PCMCIA_DEV_ID_MATCH_PROD_ID1 0x0010
PCMCIA_DEV_ID_MATCH_PROD_ID2  macro  include/linux/mod_devicetable.h  288  #define PCMCIA_DEV_ID_MATCH_PROD_ID2 0x0020
PCMCIA_DEV_ID_MATCH_PROD_ID3  macro  include/linux/mod_devicetable.h  289  #define PCMCIA_DEV_ID_MATCH_PROD_ID3 0x0040
PCMCIA_DEV_ID_MATCH_PROD_ID4  macro  include/linux/mod_devicetable.h  290  #define PCMCIA_DEV_ID_MATCH_PROD_ID4 0x0080
PCMCIA_DEV_ID_MATCH_DEVICE_NO  macro  include/linux/mod_devicetable.h  291  #define PCMCIA_DEV_ID_MATCH_DEVICE_NO 0x0100
PCMCIA_DEV_ID_MATCH_FAKE_CIS  macro  include/linux/mod_devicetable.h  292  #define PCMCIA_DEV_ID_MATCH_FAKE_CIS 0x0200
PCMCIA_DEV_ID_MATCH_ANONYMOUS  macro  include/linux/mod_devicetable.h  293  #define PCMCIA_DEV_ID_MATCH_ANONYMOUS 0x0400
INPUT_DEVICE_ID_EV_MAX  macro  include/linux/mod_devicetable.h  296  #define INPUT_DEVICE_ID_EV_MAX 0x1f
INPUT_DEVICE_ID_KEY_MIN_INTERESTING  macro  include/linux/mod_devicetable.h  297  #define INPUT_DEVICE_ID_KEY_MIN_INTERESTING 0x71
INPUT_DEVICE_ID_KEY_MAX  macro  include/linux/mod_devicetable.h  298  #define INPUT_DEVICE_ID_KEY_MAX 0x2ff
INPUT_DEVICE_ID_REL_MAX  macro  include/linux/mod_devicetable.h  299  #define INPUT_DEVICE_ID_REL_MAX 0x0f
INPUT_DEVICE_ID_ABS_MAX  macro  include/linux/mod_devicetable.h  300  #define INPUT_DEVICE_ID_ABS_MAX 0x3f
INPUT_DEVICE_ID_MSC_MAX  macro  include/linux/mod_devicetable.h  301  #define INPUT_DEVICE_ID_MSC_MAX 0x07
INPUT_DEVICE_ID_LED_MAX  macro  include/linux/mod_devicetable.h  302  #define INPUT_DEVICE_ID_LED_MAX 0x0f
INPUT_DEVICE_ID_SND_MAX  macro  include/linux/mod_devicetable.h  303  #define INPUT_DEVICE_ID_SND_MAX 0x07
INPUT_DEVICE_ID_FF_MAX  macro  include/linux/mod_devicetable.h  304  #define INPUT_DEVICE_ID_FF_MAX 0x7f
INPUT_DEVICE_ID_SW_MAX  macro  include/linux/mod_devicetable.h  305  #define INPUT_DEVICE_ID_SW_MAX 0x0f
INPUT_DEVICE_ID_MATCH_BUS  macro  include/linux/mod_devicetable.h  307  #define INPUT_DEVICE_ID_MATCH_BUS 1
INPUT_DEVICE_ID_MATCH_VENDOR  macro  include/linux/mod_devicetable.h  308  #define INPUT_DEVICE_ID_MATCH_VENDOR 2
INPUT_DEVICE_ID_MATCH_PRODUCT  macro  include/linux/mod_devicetable.h  309  #define INPUT_DEVICE_ID_MATCH_PRODUCT 4
INPUT_DEVICE_ID_MATCH_VERSION  macro  include/linux/mod_devicetable.h  310  #define INPUT_DEVICE_ID_MATCH_VERSION 8
INPUT_DEVICE_ID_MATCH_EVBIT  macro  include/linux/mod_devicetable.h  312  #define INPUT_DEVICE_ID_MATCH_EVBIT 0x0010
INPUT_DEVICE_ID_MATCH_KEYBIT  macro  include/linux/mod_devicetable.h  313  #define INPUT_DEVICE_ID_MATCH_KEYBIT 0x0020
INPUT_DEVICE_ID_MATCH_RELBIT  macro  include/linux/mod_devicetable.h  314  #define INPUT_DEVICE_ID_MATCH_RELBIT 0x0040
INPUT_DEVICE_ID_MATCH_ABSBIT  macro  include/linux/mod_devicetable.h  315  #define INPUT_DEVICE_ID_MATCH_ABSBIT 0x0080
INPUT_DEVICE_ID_MATCH_MSCIT  macro  include/linux/mod_devicetable.h  316  #define INPUT_DEVICE_ID_MATCH_MSCIT 0x0100
INPUT_DEVICE_ID_MATCH_LEDBIT  macro  include/linux/mod_devicetable.h  317  #define INPUT_DEVICE_ID_MATCH_LEDBIT 0x0200
INPUT_DEVICE_ID_MATCH_SNDBIT  macro  include/linux/mod_devicetable.h  318  #define INPUT_DEVICE_ID_MATCH_SNDBIT 0x0400
INPUT_DEVICE_ID_MATCH_FFBIT  macro  include/linux/mod_devicetable.h  319  #define INPUT_DEVICE_ID_MATCH_FFBIT 0x0800
INPUT_DEVICE_ID_MATCH_SWBIT  macro  include/linux/mod_devicetable.h  320  #define INPUT_DEVICE_ID_MATCH_SWBIT 0x1000
input_device_id  struct  include/linux/mod_devicetable.h  322  struct input_device_id {
EISA_SIG_LEN  macro  include/linux/mod_devicetable.h  346  #define EISA_SIG_LEN 8
eisa_device_id  struct  include/linux/mod_devicetable.h  349  struct eisa_device_id {
EISA_DEVICE_MODALIAS_FMT  macro  include/linux/mod_devicetable.h  354  #define EISA_DEVICE_MODALIAS_FMT "eisa:s%s"
parisc_device_id  struct  include/linux/mod_devicetable.h  356  struct parisc_device_id {
PA_HWTYPE_ANY_ID  macro  include/linux/mod_devicetable.h  363  #define PA_HWTYPE_ANY_ID 0xff
PA_HVERSION_REV_ANY_ID  macro  include/linux/mod_devicetable.h  364  #define PA_HVERSION_REV_ANY_ID 0xff
PA_HVERSION_ANY_ID  macro  include/linux/mod_devicetable.h  365  #define PA_HVERSION_ANY_ID 0xffff
PA_SVERSION_ANY_ID  macro  include/linux/mod_devicetable.h  366  #define PA_SVERSION_ANY_ID 0xffffffff
SDIO_ANY_ID  macro  include/linux/mod_devicetable.h  370  #define SDIO_ANY_ID (~0)
sdio_device_id  struct  include/linux/mod_devicetable.h  372  struct sdio_device_id {
ssb_device_id  struct  include/linux/mod_devicetable.h  381  struct ssb_device_id {
SSB_DEVICE  macro  include/linux/mod_devicetable.h  387  #define SSB_DEVICE(_vendor,_coreid,_revision) { .vendor = _vendor, .coreid = _coreid, .revision = _revision, }
SSB_DEVTABLE_END  macro  include/linux/mod_devicetable.h  389  #define SSB_DEVTABLE_END { 0, },
SSB_ANY_VENDOR  macro  include/linux/mod_devicetable.h  391  #define SSB_ANY_VENDOR 0xFFFF
SSB_ANY_ID  macro  include/linux/mod_devicetable.h  392  #define SSB_ANY_ID 0xFFFF
SSB_ANY_REV  macro  include/linux/mod_devicetable.h  393  #define SSB_ANY_REV 0xFF
bcma_device_id  struct  include/linux/mod_devicetable.h  396  struct bcma_device_id {
BCMA_CORE  macro  include/linux/mod_devicetable.h  403  #define BCMA_CORE(_manuf,_id,_rev,_class) { .manuf = _manuf, .id = _id, .rev = _rev, .class = _class, }
BCMA_CORETABLE_END  macro  include/linux/mod_devicetable.h  405  #define BCMA_CORETABLE_END { 0, },
BCMA_ANY_MANUF  macro  include/linux/mod_devicetable.h  407  #define BCMA_ANY_MANUF 0xFFFF
BCMA_ANY_ID  macro  include/linux/mod_devicetable.h  408  #define BCMA_ANY_ID 0xFFFF
BCMA_ANY_REV  macro  include/linux/mod_devicetable.h  409  #define BCMA_ANY_REV 0xFF
BCMA_ANY_CLASS  macro  include/linux/mod_devicetable.h  410  #define BCMA_ANY_CLASS 0xFF
virtio_device_id  struct  include/linux/mod_devicetable.h  412  struct virtio_device_id {
VIRTIO_DEV_ANY_ID  macro  include/linux/mod_devicetable.h  416  #define VIRTIO_DEV_ANY_ID 0xffffffff
hv_vmbus_device_id  struct  include/linux/mod_devicetable.h  421  struct hv_vmbus_device_id {
RPMSG_NAME_SIZE  macro  include/linux/mod_devicetable.h  429  #define RPMSG_NAME_SIZE 32
RPMSG_DEVICE_MODALIAS_FMT  macro  include/linux/mod_devicetable.h  430  #define RPMSG_DEVICE_MODALIAS_FMT "rpmsg:%s"
rpmsg_device_id  struct  include/linux/mod_devicetable.h  432  struct rpmsg_device_id {
I2C_NAME_SIZE  macro  include/linux/mod_devicetable.h  438  #define I2C_NAME_SIZE 20
I2C_MODULE_PREFIX  macro  include/linux/mod_devicetable.h  439  #define I2C_MODULE_PREFIX "i2c:"
i2c_device_id  struct  include/linux/mod_devicetable.h  441  struct i2c_device_id {
SPI_NAME_SIZE  macro  include/linux/mod_devicetable.h  449  #define SPI_NAME_SIZE 32
SPI_MODULE_PREFIX  macro  include/linux/mod_devicetable.h  450  #define SPI_MODULE_PREFIX "spi:"
spi_device_id  struct  include/linux/mod_devicetable.h  452  struct spi_device_id {
dmi_field  enum  include/linux/mod_devicetable.h  459  enum dmi_field {
dmi_strmatch  struct  include/linux/mod_devicetable.h  482  struct dmi_strmatch {
dmi_system_id  struct  include/linux/mod_devicetable.h  496  struct dmi_system_id {
dmi_device_id  macro  include/linux/mod_devicetable.h  508  #define dmi_device_id dmi_system_id
DMI_MATCH  macro  include/linux/mod_devicetable.h  511  #define DMI_MATCH(a,b) { a,b }
PLATFORM_NAME_SIZE  macro  include/linux/mod_devicetable.h  513  #define PLATFORM_NAME_SIZE 20
PLATFORM_MODULE_PREFIX  macro  include/linux/mod_devicetable.h  514  #define PLATFORM_MODULE_PREFIX "platform:"
platform_device_id  struct  include/linux/mod_devicetable.h  516  struct platform_device_id {
MDIO_MODULE_PREFIX  macro  include/linux/mod_devicetable.h  522  #define MDIO_MODULE_PREFIX "mdio:"
MDIO_ID_FMT  macro  include/linux/mod_devicetable.h  524  #define MDIO_ID_FMT "%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d"
MDIO_ID_ARGS  macro  include/linux/mod_devicetable.h  533  #define MDIO_ID_ARGS(_id) (_id)>>31, ((_id)>>30) & 1, ((_id)>>29) & 1, ((_id)>>28) & 1, ((_id)>>27) & 1, ((_id)>>26) & 1, ((_id)>>25) & 1, ((_id)>>24) & 1, ((_id)>>23) & 1, ((_id)>>22) & 1, ((_id)>>21) & 1, ((_id)>>20) & 1, ((_id)>>19) & 1, ((_id)>>18) & 1, ((_id)>>17) & 1, ((_id)>>16) & 1, ((_id)>>15) & 1, ((_id)>>14) & 1, ((_id)>>13) & 1, ((_id)>>12) & 1, ((_id)>>11) & 1, ((_id)>>10) & 1, ((_id)>>9) & 1, ((_id)>>8) & 1, ((_id)>>7) & 1, ((_id)>>6) & 1, ((_id)>>5) & 1, ((_id)>>4) & 1, ((_id)>>3) & 1, ((_id)>>2) & 1, ((_id)>>1) & 1, (_id) & 1
mdio_device_id  struct  include/linux/mod_devicetable.h  543  struct mdio_device_id {
zorro_device_id  struct  include/linux/mod_devicetable.h  548  struct zorro_device_id {
ZORRO_WILDCARD  macro  include/linux/mod_devicetable.h  553  #define ZORRO_WILDCARD (0xffffffff)
ZORRO_DEVICE_MODALIAS_FMT  macro  include/linux/mod_devicetable.h  555  #define ZORRO_DEVICE_MODALIAS_FMT "zorro:i%08X"
ISAPNP_ANY_ID  macro  include/linux/mod_devicetable.h  557  #define ISAPNP_ANY_ID 0xffff
isapnp_device_id  struct  include/linux/mod_devicetable.h  558  struct isapnp_device_id {
amba_id  struct  include/linux/mod_devicetable.h  572  struct amba_id {
x86_cpu_id  struct  include/linux/mod_devicetable.h  587  struct x86_cpu_id {
X86_FEATURE_MATCH  macro  include/linux/mod_devicetable.h  596  #define X86_FEATURE_MATCH(x) { X86_VENDOR_ANY, X86_FAMILY_ANY, X86_MODEL_ANY, x }
X86_VENDOR_ANY  macro  include/linux/mod_devicetable.h  598  #define X86_VENDOR_ANY 0xffff
X86_FAMILY_ANY  macro  include/linux/mod_devicetable.h  599  #define X86_FAMILY_ANY 0
X86_MODEL_ANY  macro  include/linux/mod_devicetable.h  600  #define X86_MODEL_ANY 0
X86_FEATURE_ANY  macro  include/linux/mod_devicetable.h  601  #define X86_FEATURE_ANY 0
IPACK_ANY_FORMAT  macro  include/linux/mod_devicetable.h  603  #define IPACK_ANY_FORMAT 0xff
IPACK_ANY_ID  macro  include/linux/mod_devicetable.h  604  #define IPACK_ANY_ID (~0)
ipack_device_id  struct  include/linux/mod_devicetable.h  605  struct ipack_device_id {
_DEVICE_H_  macro  include/linux/device.h  14  #define _DEVICE_H_
bus_attribute  struct  include/linux/device.h  41  struct bus_attribute {
BUS_ATTR  macro  include/linux/device.h  48  #define BUS_ATTR(_name,_mode,_show,_store) struct bus_attribute bus_attr_##_name = __ATTR(_name, _mode, _show, _store)
bus_create_file  prototype  include/linux/device.h  51  extern int __must_check bus_create_file(struct bus_type *,struct bus_attribute *);
bus_remove_file  prototype  include/linux/device.h  52  extern void bus_remove_file(struct bus_type *,struct bus_attribute *);
bus_type  struct  include/linux/device.h  91  struct bus_type {
bus_register  macro  include/linux/device.h  121  #define bus_register(subsys) ({ static struct lock_class_key __key; __bus_register(subsys, &__key); })
__bus_register  prototype  include/linux/device.h  123  extern int __must_check __bus_register(struct bus_type *bus,struct lock_class_key *key);
bus_unregister  prototype  include/linux/device.h  124  extern void bus_unregister(struct bus_type *bus);
bus_rescan_devices  prototype  include/linux/device.h  126  extern int __must_check bus_rescan_devices(struct bus_type *bus);
subsys_dev_iter  struct  include/linux/device.h  129  struct subsys_dev_iter {
subsys_dev_iter_init  prototype  include/linux/device.h  136  void subsys_dev_iter_init(struct subsys_dev_iter *iter,struct bus_type *subsys,struct device *start,const struct device_type *type);
subsys_dev_iter_next  prototype  include/linux/device.h  137  struct device *subsys_dev_iter_next(struct subsys_dev_iter *iter);
subsys_dev_iter_exit  prototype  include/linux/device.h  138  void subsys_dev_iter_exit(struct subsys_dev_iter *iter);
bus_for_each_dev  prototype  include/linux/device.h  141  int bus_for_each_dev(struct bus_type *bus,struct device *start,void *data,int (*fn)(struct device *dev, void *data));
bus_find_device  prototype  include/linux/device.h  144  struct device *bus_find_device(struct bus_type *bus,struct device *start,void *data,int (*match)(struct device *dev, void *data));
bus_find_device_by_name  prototype  include/linux/device.h  147  struct device *bus_find_device_by_name(struct bus_type *bus,struct device *start,const char *name);
subsys_find_device_by_id  prototype  include/linux/device.h  149  struct device *subsys_find_device_by_id(struct bus_type *bus,unsigned int id,struct device *hint);
bus_for_each_drv  prototype  include/linux/device.h  151  int bus_for_each_drv(struct bus_type *bus,struct device_driver *start,void *data, int (*fn)(struct device_driver *, void *));
bus_sort_breadthfirst  prototype  include/linux/device.h  154  void bus_sort_breadthfirst(struct bus_type *bus,int (*compare)(const struct device *a,const struct device *b));
bus_register_notifier  prototype  include/linux/device.h  164  extern int bus_register_notifier(struct bus_type *bus,struct notifier_block *nb);
bus_unregister_notifier  prototype  include/linux/device.h  166  extern int bus_unregister_notifier(struct bus_type *bus,struct notifier_block *nb);
BUS_NOTIFY_ADD_DEVICE  macro  include/linux/device.h  172  #define BUS_NOTIFY_ADD_DEVICE 0x00000001
BUS_NOTIFY_DEL_DEVICE  macro  include/linux/device.h  173  #define BUS_NOTIFY_DEL_DEVICE 0x00000002
BUS_NOTIFY_BIND_DRIVER  macro  include/linux/device.h  174  #define BUS_NOTIFY_BIND_DRIVER 0x00000003
BUS_NOTIFY_BOUND_DRIVER  macro  include/linux/device.h  176  #define BUS_NOTIFY_BOUND_DRIVER 0x00000004
BUS_NOTIFY_UNBIND_DRIVER  macro  include/linux/device.h  177  #define BUS_NOTIFY_UNBIND_DRIVER 0x00000005
BUS_NOTIFY_UNBOUND_DRIVER  macro  include/linux/device.h  179  #define BUS_NOTIFY_UNBOUND_DRIVER 0x00000006
bus_get_kset  prototype  include/linux/device.h  182  extern struct kset *bus_get_kset(struct bus_type *bus);
bus_get_device_klist  prototype  include/linux/device.h  183  extern struct klist *bus_get_device_klist(struct bus_type *bus);
device_driver  struct  include/linux/device.h  217  struct device_driver {
driver_register  prototype  include/linux/device.h  242  extern int __must_check driver_register(struct device_driver *drv);
driver_unregister  prototype  include/linux/device.h  243  extern void driver_unregister(struct device_driver *drv);
driver_find  prototype  include/linux/device.h  246  extern struct device_driver *driver_find(const char *name,struct bus_type *bus);
driver_probe_done  prototype  include/linux/device.h  247  extern int driver_probe_done(void);
wait_for_device_probe  prototype  include/linux/device.h  248  extern void wait_for_device_probe(void);
driver_attribute  struct  include/linux/device.h  253  struct driver_attribute {
DRIVER_ATTR  macro  include/linux/device.h  262  #define DRIVER_ATTR(_name,_mode,_show,_store) struct driver_attribute driver_attr_##_name = __ATTR(_name, _mode, _show, _store)
driver_create_file  prototype  include/linux/device.h  265  extern int __must_check driver_create_file(struct device_driver *driver,const struct driver_attribute *attr);
driver_remove_file  prototype  include/linux/device.h  267  extern void driver_remove_file(struct device_driver *driver,const struct driver_attribute *attr);
driver_for_each_device  prototype  include/linux/device.h  273  extern int __must_check driver_for_each_device(struct device_driver *drv,struct device *start,void *data,int (*fn)(struct device *dev,void *));
driver_find_device  prototype  include/linux/device.h  276  struct device *driver_find_device(struct device_driver *drv,struct device *start, void *data,int (*match)(struct device *dev, void *data));
subsys_interface  struct  include/linux/device.h  291  struct subsys_interface {
subsys_interface_register  prototype  include/linux/device.h  299  int subsys_interface_register(struct subsys_interface *sif);
subsys_interface_unregister  prototype  include/linux/device.h  300  void subsys_interface_unregister(struct subsys_interface *sif);
subsys_system_register  prototype  include/linux/device.h  303  int subsys_system_register(struct bus_type *subsys,const struct attribute_group **groups);
class_dev_iter  struct  include/linux/device.h  360  struct class_dev_iter {
__class_register  prototype  include/linux/device.h  368  extern int __must_check __class_register(struct class *class,struct lock_class_key *key);
class_unregister  prototype  include/linux/device.h  369  extern void class_unregister(struct class *class);
class_register  macro  include/linux/device.h  377  #define class_register(class) ({ static struct lock_class_key __key; __class_register(class, &__key); })
class_compat_register  prototype  include/linux/device.h  380  struct class_compat *class_compat_register(const char *name);
class_compat_unregister  prototype  include/linux/device.h  381  void class_compat_unregister(struct class_compat *cls);
class_compat_create_link  prototype  include/linux/device.h  383  int class_compat_create_link(struct class_compat *cls,struct device *dev,struct device *device_link);
class_compat_remove_link  prototype  include/linux/device.h  385  void class_compat_remove_link(struct class_compat *cls,struct device *dev,struct device *device_link);
class_dev_iter_init  prototype  include/linux/device.h  390  extern void class_dev_iter_init(struct class_dev_iter *iter,struct class *class,struct device *start,const struct device_type *type);
class_dev_iter_next  prototype  include/linux/device.h  391  extern struct device *class_dev_iter_next(struct class_dev_iter *iter);
class_dev_iter_exit  prototype  include/linux/device.h  392  extern void class_dev_iter_exit(struct class_dev_iter *iter);
class_for_each_device  prototype  include/linux/device.h  396  extern int class_for_each_device(struct class *class,struct device *start,void *data,int (*fn)(struct device *dev, void *data));
class_find_device  prototype  include/linux/device.h  399  extern struct device *class_find_device(struct class *class,struct device *start, void *data,int (*match)(struct device *, void *));
class_attribute  struct  include/linux/device.h  401  struct class_attribute {
CLASS_ATTR  macro  include/linux/device.h  412  #define CLASS_ATTR(_name,_mode,_show,_store) struct class_attribute class_attr_##_name = __ATTR(_name, _mode, _show, _store)
class_create_file  prototype  include/linux/device.h  415  extern int __must_check class_create_file(struct class *class,const struct class_attribute *attr);
class_remove_file  prototype  include/linux/device.h  417  extern void class_remove_file(struct class *class,const struct class_attribute *attr);
class_attribute_string  struct  include/linux/device.h  421  struct class_attribute_string {
_CLASS_ATTR_STRING  macro  include/linux/device.h  428  #define _CLASS_ATTR_STRING(_name,_mode,_str) { __ATTR(_name, _mode, show_class_attr_string, NULL), _str }
CLASS_ATTR_STRING  macro  include/linux/device.h  431  #define CLASS_ATTR_STRING(_name,_mode,_str) struct class_attribute_string class_attr_##_name = _CLASS_ATTR_STRING(_name, _mode, _str)
show_class_attr_string  prototype  include/linux/device.h  434  extern ssize_t show_class_attr_string(struct class *class,struct class_attribute *attr,char *buf);
class_interface  struct  include/linux/device.h  436  struct class_interface {
class_interface_register  prototype  include/linux/device.h  444  extern int __must_check class_interface_register(struct class_interface *);
class_interface_unregister  prototype  include/linux/device.h  445  extern void class_interface_unregister(struct class_interface *);
__class_create  prototype  include/linux/device.h  449  extern struct class * __must_check __class_create(struct module *owner,const char *name,struct lock_class_key *key);
class_destroy  prototype  include/linux/device.h  450  extern void class_destroy(struct class *cls);
class_create  macro  include/linux/device.h  458  #define class_create(owner,name) ({ static struct lock_class_key __key; __class_create(owner, name, &__key); })
device_type  struct  include/linux/device.h  469  struct device_type {
device_attribute  struct  include/linux/device.h  480  struct device_attribute {
dev_ext_attribute  struct  include/linux/device.h  488  struct dev_ext_attribute {
device_show_ulong  prototype  include/linux/device.h  494  ssize_t device_show_ulong(struct device *dev,struct device_attribute *attr,char *buf);
device_store_ulong  prototype  include/linux/device.h  496  ssize_t device_store_ulong(struct device *dev,struct device_attribute *attr,const char *buf, size_t count);
device_show_int  prototype  include/linux/device.h  498  ssize_t device_show_int(struct device *dev,struct device_attribute *attr,char *buf);
device_store_int  prototype  include/linux/device.h  500  ssize_t device_store_int(struct device *dev,struct device_attribute *attr,const char *buf, size_t count);
device_show_bool  prototype  include/linux/device.h  502  ssize_t device_show_bool(struct device *dev,struct device_attribute *attr,char *buf);
device_store_bool  prototype  include/linux/device.h  504  ssize_t device_store_bool(struct device *dev,struct device_attribute *attr,const char *buf, size_t count);
DEVICE_ATTR  macro  include/linux/device.h  507  #define DEVICE_ATTR(_name,_mode,_show,_store) struct device_attribute dev_attr_##_name = __ATTR(_name, _mode, _show, _store)
DEVICE_ULONG_ATTR  macro  include/linux/device.h  510  #define DEVICE_ULONG_ATTR(_name,_mode,_var) struct dev_ext_attribute dev_attr_##_name = { __ATTR(_name, _mode, device_show_ulong, device_store_ulong), &(_var) }
DEVICE_INT_ATTR  macro  include/linux/device.h  513  #define DEVICE_INT_ATTR(_name,_mode,_var) struct dev_ext_attribute dev_attr_##_name = { __ATTR(_name, _mode, device_show_int, device_store_int), &(_var) }
DEVICE_BOOL_ATTR  macro  include/linux/device.h  516  #define DEVICE_BOOL_ATTR(_name,_mode,_var) struct dev_ext_attribute dev_attr_##_name = { __ATTR(_name, _mode, device_show_bool, device_store_bool), &(_var) }
DEVICE_ATTR_IGNORE_LOCKDEP  macro  include/linux/device.h  519  #define DEVICE_ATTR_IGNORE_LOCKDEP(_name,_mode,_show,_store) struct device_attribute dev_attr_##_name = __ATTR_IGNORE_LOCKDEP(_name, _mode, _show, _store)
device_create_file  prototype  include/linux/device.h  522  extern int device_create_file(struct device *device,const struct device_attribute *entry);
device_remove_file  prototype  include/linux/device.h  524  extern void device_remove_file(struct device *dev,const struct device_attribute *attr);
device_create_bin_file  prototype  include/linux/device.h  526  extern int __must_check device_create_bin_file(struct device *dev,const struct bin_attribute *attr);
device_remove_bin_file  prototype  include/linux/device.h  528  extern void device_remove_bin_file(struct device *dev,const struct bin_attribute *attr);
device_schedule_callback_owner  prototype  include/linux/device.h  530  extern int device_schedule_callback_owner(struct device *dev,void (*func)(struct device *dev), struct module *owner);
device_schedule_callback  macro  include/linux/device.h  534  #define device_schedule_callback(dev,func) device_schedule_callback_owner(dev, func, THIS_MODULE)
__devres_alloc  prototype  include/linux/device.h  542  extern void *__devres_alloc(dr_release_t release,size_t size,gfp_t gfp,const char *name);
devres_alloc  prototype  include/linux/device.h  546  extern void *devres_alloc(dr_release_t release,size_t size,gfp_t gfp);
devres_for_each_res  prototype  include/linux/device.h  551  extern void devres_for_each_res(struct device *dev,dr_release_t release,dr_match_t match, void *match_data,void (*fn)(struct device *, void *, void *),void *data);
devres_free  prototype  include/linux/device.h  552  extern void devres_free(void *res);
devres_add  prototype  include/linux/device.h  553  extern void devres_add(struct device *dev,void *res);
devres_find  prototype  include/linux/device.h  555  extern void *devres_find(struct device *dev,dr_release_t release,dr_match_t match, void *match_data);
devres_get  prototype  include/linux/device.h  557  extern void *devres_get(struct device *dev,void *new_res,dr_match_t match, void *match_data);
devres_remove  prototype  include/linux/device.h  559  extern void *devres_remove(struct device *dev,dr_release_t release,dr_match_t match, void *match_data);
devres_destroy  prototype  include/linux/device.h  561  extern int devres_destroy(struct device *dev,dr_release_t release,dr_match_t match, void *match_data);
devres_release  prototype  include/linux/device.h  563  extern int devres_release(struct device *dev,dr_release_t release,dr_match_t match, void *match_data);
devres_open_group  prototype  include/linux/device.h  567  extern void * __must_check devres_open_group(struct device *dev,void *id,gfp_t gfp);
devres_close_group  prototype  include/linux/device.h  568  extern void devres_close_group(struct device *dev,void *id);
devres_remove_group  prototype  include/linux/device.h  569  extern void devres_remove_group(struct device *dev,void *id);
devres_release_group  prototype  include/linux/device.h  570  extern int devres_release_group(struct device *dev,void *id);
devm_kzalloc  prototype  include/linux/device.h  573  extern void *devm_kzalloc(struct device *dev,size_t size,gfp_t gfp);
devm_kfree  prototype  include/linux/device.h  574  extern void devm_kfree(struct device *dev,void *p);
devm_request_and_ioremap  prototype  include/linux/device.h  577  void __iomem *devm_request_and_ioremap(struct device *dev,struct resource *res);
device_dma_parameters  struct  include/linux/device.h  579  struct device_dma_parameters {
acpi_dev_node  struct  include/linux/device.h  588  struct acpi_dev_node {
device  struct  include/linux/device.h  654  struct device {
kobj_to_dev  function  include/linux/device.h  715  static inline struct device *kobj_to_dev(struct kobject *kobj)
ACPI_HANDLE  macro  include/linux/device.h  724  #define ACPI_HANDLE(dev) (NULL)
ACPI_HANDLE_SET  macro  include/linux/device.h  725  #define ACPI_HANDLE_SET(dev,_handle_) do { } while (0)
dev_name  function  include/linux/device.h  731  static inline const char *dev_name(const struct device *dev)
dev_set_name  prototype  include/linux/device.h  741  int dev_set_name(struct device *dev,const char *name,...);
dev_to_node  function  include/linux/device.h  753  static inline int dev_to_node(struct device *dev)
set_dev_node  function  include/linux/device.h  757  static inline void set_dev_node(struct device *dev,int node)
dev_to_psd  function  include/linux/device.h  762  static inline struct pm_subsys_data *dev_to_psd(struct device *dev)
dev_get_uevent_suppress  function  include/linux/device.h  767  static inline unsigned int dev_get_uevent_suppress(const struct device *dev)
dev_set_uevent_suppress  function  include/linux/device.h  772  static inline void dev_set_uevent_suppress(struct device *dev,int val)
device_is_registered  function  include/linux/device.h  777  static inline int device_is_registered(struct device *dev)
device_enable_async_suspend  function  include/linux/device.h  782  static inline void device_enable_async_suspend(struct device *dev)
device_disable_async_suspend  function  include/linux/device.h  788  static inline void device_disable_async_suspend(struct device *dev)
device_async_suspend_enabled  function  include/linux/device.h  794  static inline bool device_async_suspend_enabled(struct device *dev)
pm_suspend_ignore_children  function  include/linux/device.h  799  static inline void pm_suspend_ignore_children(struct device *dev,bool enable)
dev_pm_syscore_device  function  include/linux/device.h  804  static inline void dev_pm_syscore_device(struct device *dev,bool val)
device_lock  function  include/linux/device.h  811  static inline void device_lock(struct device *dev)
device_trylock  function  include/linux/device.h  816  static inline int device_trylock(struct device *dev)
device_unlock  function  include/linux/device.h  821  static inline void device_unlock(struct device *dev)
driver_init  prototype  include/linux/device.h  826  void driver_init(void);
device_register  prototype  include/linux/device.h  831  extern int __must_check device_register(struct device *dev);
device_unregister  prototype  include/linux/device.h  832  extern void device_unregister(struct device *dev);
device_initialize  prototype  include/linux/device.h  833  extern void device_initialize(struct device *dev);
device_add  prototype  include/linux/device.h  834  extern int __must_check device_add(struct device *dev);
device_del  prototype  include/linux/device.h  835  extern void device_del(struct device *dev);
device_for_each_child  prototype  include/linux/device.h  837  extern int device_for_each_child(struct device *dev,void *data,int (*fn)(struct device *dev, void *data));
device_find_child  prototype  include/linux/device.h  839  extern struct device *device_find_child(struct device *dev,void *data,int (*match)(struct device *dev, void *data));
device_rename  prototype  include/linux/device.h  840  extern int device_rename(struct device *dev,const char *new_name);
device_move  prototype  include/linux/device.h  842  extern int device_move(struct device *dev,struct device *new_parent,enum dpm_order dpm_order);
device_get_devnode  prototype  include/linux/device.h  844  extern const char *device_get_devnode(struct device *dev,umode_t *mode, const char **tmp);
dev_get_drvdata  prototype  include/linux/device.h  845  extern void *dev_get_drvdata(const struct device *dev);
dev_set_drvdata  prototype  include/linux/device.h  846  extern int dev_set_drvdata(struct device *dev,void *data);
__root_device_register  prototype  include/linux/device.h  852  extern struct device *__root_device_register(const char *name,struct module *owner);
root_device_register  macro  include/linux/device.h  859  #define root_device_register(name) __root_device_register(name, THIS_MODULE)
root_device_unregister  prototype  include/linux/device.h  861  extern void root_device_unregister(struct device *root);
dev_get_platdata  function  include/linux/device.h  863  static inline void *dev_get_platdata(const struct device *dev)
device_bind_driver  prototype  include/linux/device.h  872  extern int __must_check device_bind_driver(struct device *dev);
device_release_driver  prototype  include/linux/device.h  873  extern void device_release_driver(struct device *dev);
device_attach  prototype  include/linux/device.h  874  extern int __must_check device_attach(struct device *dev);
driver_attach  prototype  include/linux/device.h  875  extern int __must_check driver_attach(struct device_driver *drv);
device_reprobe  prototype  include/linux/device.h  876  extern int __must_check device_reprobe(struct device *dev);
device_create_vargs  prototype  include/linux/device.h  886  extern struct device *device_create_vargs(struct class *cls,struct device *parent,dev_t devt,void *drvdata,const char *fmt,va_list vargs);
device_create  prototype  include/linux/device.h  890  struct device *device_create(struct class *cls,struct device *parent,dev_t devt, void *drvdata,const char *fmt, ...);
device_destroy  prototype  include/linux/device.h  891  extern void device_destroy(struct class *cls,dev_t devt);
get_device  prototype  include/linux/device.h  908  extern struct device *get_device(struct device *dev);
put_device  prototype  include/linux/device.h  909  extern void put_device(struct device *dev);
devtmpfs_create_node  function  include/linux/device.h  916  static inline int devtmpfs_create_node(struct device *dev) { return 0; }
devtmpfs_delete_node  function  include/linux/device.h  917  static inline int devtmpfs_delete_node(struct device *dev) { return 0; }
devtmpfs_mount  function  include/linux/device.h  918  static inline int devtmpfs_mount(const char *mountpoint) { return 0; }
device_shutdown  prototype  include/linux/device.h  922  extern void device_shutdown(void);
dev_driver_string  prototype  include/linux/device.h  925  extern const char *dev_driver_string(const struct device *dev);
dev_vprintk_emit  function  include/linux/device.h  958  int dev_vprintk_emit(int level,const struct device *dev,const char *fmt, va_list args)
dev_printk_emit  function  include/linux/device.h  961  int dev_printk_emit(int level,const struct device *dev,const char *fmt,...)
dev_printk  function  include/linux/device.h  969  int dev_printk(const char *level,const struct device *dev,const char *fmt, ...)
dev_emerg  function  include/linux/device.h  973  int dev_emerg(const struct device *dev,const char *fmt,...)
dev_alert  function  include/linux/device.h  979  int dev_alert(const struct device *dev,const char *fmt,...)
dev_crit  function  include/linux/device.h  976  int dev_crit(const struct device *dev,const char *fmt,...)
dev_err  function  include/linux/device.h  982  int dev_err(const struct device *dev,const char *fmt,...)
dev_warn  function  include/linux/device.h  985  int dev_warn(const struct device *dev,const char *fmt,...)
dev_notice  function  include/linux/device.h  988  int dev_notice(const struct device *dev,const char *fmt,...)
_dev_info  function  include/linux/device.h  991  int _dev_info(const struct device *dev,const char *fmt,...)
__dev_printk  function  include/linux/device.h  965  static inline int __dev_printk(const char *level,const struct device *dev,struct va_format *vaf)
dev_info  macro  include/linux/device.h  1003  #define dev_info(dev,fmt,arg...) _dev_info(dev,fmt,##arg)
dev_dbg  macro  include/linux/device.h  1019  #define dev_dbg(dev,format,arg...) ({ if (0) dev_printk(KERN_DEBUG, dev, format, ##arg); 0; })
dev_level_ratelimited  macro  include/linux/device.h  1029  #define dev_level_ratelimited(dev_level,dev,fmt,...) do { static DEFINE_RATELIMIT_STATE(_rs, DEFAULT_RATELIMIT_INTERVAL, DEFAULT_RATELIMIT_BURST); if (__ratelimit(&_rs)) dev_level(dev, fmt, ##__VA_ARGS__); } while (0)
dev_emerg_ratelimited  macro  include/linux/device.h  1032  #define dev_emerg_ratelimited(dev,fmt,...) dev_level_ratelimited(dev_emerg, dev, fmt, ##__VA_ARGS__)
dev_alert_ratelimited  macro  include/linux/device.h  1034  #define dev_alert_ratelimited(dev,fmt,...) dev_level_ratelimited(dev_alert, dev, fmt, ##__VA_ARGS__)
dev_crit_ratelimited  macro  include/linux/device.h  1036  #define dev_crit_ratelimited(dev,fmt,...) dev_level_ratelimited(dev_crit, dev, fmt, ##__VA_ARGS__)
dev_err_ratelimited  macro  include/linux/device.h  1038  #define dev_err_ratelimited(dev,fmt,...) dev_level_ratelimited(dev_err, dev, fmt, ##__VA_ARGS__)
dev_warn_ratelimited  macro  include/linux/device.h  1040  #define dev_warn_ratelimited(dev,fmt,...) dev_level_ratelimited(dev_warn, dev, fmt, ##__VA_ARGS__)
dev_notice_ratelimited  macro  include/linux/device.h  1042  #define dev_notice_ratelimited(dev,fmt,...) dev_level_ratelimited(dev_notice, dev, fmt, ##__VA_ARGS__)
dev_info_ratelimited  macro  include/linux/device.h  1044  #define dev_info_ratelimited(dev,fmt,...) dev_level_ratelimited(dev_info, dev, fmt, ##__VA_ARGS__)
dev_dbg_ratelimited  macro  include/linux/device.h  1059  #define dev_dbg_ratelimited(dev,fmt,...) no_printk(KERN_DEBUG pr_fmt(fmt), ##__VA_ARGS__)
dev_vdbg  macro  include/linux/device.h  1070  #define dev_vdbg(dev,format,arg...) ({ if (0) dev_printk(KERN_DEBUG, dev, format, ##arg); 0; })
dev_WARN  macro  include/linux/device.h  1079  #define dev_WARN(dev,format,arg...) WARN(1, "Device: %s\n" format, dev_driver_string(dev), ## arg);
dev_WARN_ONCE  macro  include/linux/device.h  1083  #define dev_WARN_ONCE(dev,condition,format,arg...) WARN_ONCE(condition, "Device %s\n" format, dev_driver_string(dev), ## arg)
MODULE_ALIAS_CHARDEV  macro  include/linux/device.h  1087  #define MODULE_ALIAS_CHARDEV(major,minor) MODULE_ALIAS("char-major-" __stringify(major) "-" __stringify(minor))
MODULE_ALIAS_CHARDEV_MAJOR  macro  include/linux/device.h  1089  #define MODULE_ALIAS_CHARDEV_MAJOR(major) MODULE_ALIAS("char-major-" __stringify(major) "-*")
sysfs_deprecated  macro  include/linux/device.h  1094  #define sysfs_deprecated 0
module_driver  macro  include/linux/device.h  1121  #define module_driver(__driver,__register,__unregister,...) static int __init __driver##_init(void) { return __register(&(__driver) , ##__VA_ARGS__); } module_init(__driver##_init); static void __exit __driver##_exit(void) { __unregister(&(__driver) , ##__VA_ARGS__); } module_exit(__driver##_exit);
_UAPILINUX_PCI_H  macro  include/uapi/linux/pci.h  18  #define _UAPILINUX_PCI_H
PCI_DEVFN  macro  include/uapi/linux/pci.h  30  #define PCI_DEVFN(slot,func) ((((slot) & 0x1f) << 3) | ((func) & 0x07))
PCI_SLOT  macro  include/uapi/linux/pci.h  31  #define PCI_SLOT(devfn) (((devfn) >> 3) & 0x1f)
PCI_FUNC  macro  include/uapi/linux/pci.h  32  #define PCI_FUNC(devfn) ((devfn) & 0x07)
PCIIOC_BASE  macro  include/uapi/linux/pci.h  35  #define PCIIOC_BASE ('P' << 24 | 'C' << 16 | 'I' << 8)
PCIIOC_CONTROLLER  macro  include/uapi/linux/pci.h  36  #define PCIIOC_CONTROLLER (PCIIOC_BASE | 0x00)
PCIIOC_MMAP_IS_IO  macro  include/uapi/linux/pci.h  37  #define PCIIOC_MMAP_IS_IO (PCIIOC_BASE | 0x01)
PCIIOC_MMAP_IS_MEM  macro  include/uapi/linux/pci.h  38  #define PCIIOC_MMAP_IS_MEM (PCIIOC_BASE | 0x02)
PCIIOC_WRITE_COMBINE  macro  include/uapi/linux/pci.h  39  #define PCIIOC_WRITE_COMBINE (PCIIOC_BASE | 0x03)
PCI_CLASS_NOT_DEFINED  macro  include/linux/pci_ids.h  12  #define PCI_CLASS_NOT_DEFINED 0x0000
PCI_CLASS_NOT_DEFINED_VGA  macro  include/linux/pci_ids.h  13  #define PCI_CLASS_NOT_DEFINED_VGA 0x0001
PCI_BASE_CLASS_STORAGE  macro  include/linux/pci_ids.h  15  #define PCI_BASE_CLASS_STORAGE 0x01
PCI_CLASS_STORAGE_SCSI  macro  include/linux/pci_ids.h  16  #define PCI_CLASS_STORAGE_SCSI 0x0100
PCI_CLASS_STORAGE_IDE  macro  include/linux/pci_ids.h  17  #define PCI_CLASS_STORAGE_IDE 0x0101
PCI_CLASS_STORAGE_FLOPPY  macro  include/linux/pci_ids.h  18  #define PCI_CLASS_STORAGE_FLOPPY 0x0102
PCI_CLASS_STORAGE_IPI  macro  include/linux/pci_ids.h  19  #define PCI_CLASS_STORAGE_IPI 0x0103
PCI_CLASS_STORAGE_RAID  macro  include/linux/pci_ids.h  20  #define PCI_CLASS_STORAGE_RAID 0x0104
PCI_CLASS_STORAGE_SATA  macro  include/linux/pci_ids.h  21  #define PCI_CLASS_STORAGE_SATA 0x0106
PCI_CLASS_STORAGE_SATA_AHCI  macro  include/linux/pci_ids.h  22  #define PCI_CLASS_STORAGE_SATA_AHCI 0x010601
PCI_CLASS_STORAGE_SAS  macro  include/linux/pci_ids.h  23  #define PCI_CLASS_STORAGE_SAS 0x0107
PCI_CLASS_STORAGE_OTHER  macro  include/linux/pci_ids.h  24  #define PCI_CLASS_STORAGE_OTHER 0x0180
PCI_BASE_CLASS_NETWORK  macro  include/linux/pci_ids.h  26  #define PCI_BASE_CLASS_NETWORK 0x02
PCI_CLASS_NETWORK_ETHERNET  macro  include/linux/pci_ids.h  27  #define PCI_CLASS_NETWORK_ETHERNET 0x0200
PCI_CLASS_NETWORK_TOKEN_RING  macro  include/linux/pci_ids.h  28  #define PCI_CLASS_NETWORK_TOKEN_RING 0x0201
PCI_CLASS_NETWORK_FDDI  macro  include/linux/pci_ids.h  29  #define PCI_CLASS_NETWORK_FDDI 0x0202
PCI_CLASS_NETWORK_ATM  macro  include/linux/pci_ids.h  30  #define PCI_CLASS_NETWORK_ATM 0x0203
PCI_CLASS_NETWORK_OTHER  macro  include/linux/pci_ids.h  31  #define PCI_CLASS_NETWORK_OTHER 0x0280
PCI_BASE_CLASS_DISPLAY  macro  include/linux/pci_ids.h  33  #define PCI_BASE_CLASS_DISPLAY 0x03
PCI_CLASS_DISPLAY_VGA  macro  include/linux/pci_ids.h  34  #define PCI_CLASS_DISPLAY_VGA 0x0300
PCI_CLASS_DISPLAY_XGA  macro  include/linux/pci_ids.h  35  #define PCI_CLASS_DISPLAY_XGA 0x0301
PCI_CLASS_DISPLAY_3D  macro  include/linux/pci_ids.h  36  #define PCI_CLASS_DISPLAY_3D 0x0302
PCI_CLASS_DISPLAY_OTHER  macro  include/linux/pci_ids.h  37  #define PCI_CLASS_DISPLAY_OTHER 0x0380
PCI_BASE_CLASS_MULTIMEDIA  macro  include/linux/pci_ids.h  39  #define PCI_BASE_CLASS_MULTIMEDIA 0x04
PCI_CLASS_MULTIMEDIA_VIDEO  macro  include/linux/pci_ids.h  40  #define PCI_CLASS_MULTIMEDIA_VIDEO 0x0400
PCI_CLASS_MULTIMEDIA_AUDIO  macro  include/linux/pci_ids.h  41  #define PCI_CLASS_MULTIMEDIA_AUDIO 0x0401
PCI_CLASS_MULTIMEDIA_PHONE  macro  include/linux/pci_ids.h  42  #define PCI_CLASS_MULTIMEDIA_PHONE 0x0402
PCI_CLASS_MULTIMEDIA_OTHER  macro  include/linux/pci_ids.h  43  #define PCI_CLASS_MULTIMEDIA_OTHER 0x0480
PCI_BASE_CLASS_MEMORY  macro  include/linux/pci_ids.h  45  #define PCI_BASE_CLASS_MEMORY 0x05
PCI_CLASS_MEMORY_RAM  macro  include/linux/pci_ids.h  46  #define PCI_CLASS_MEMORY_RAM 0x0500
PCI_CLASS_MEMORY_FLASH  macro  include/linux/pci_ids.h  47  #define PCI_CLASS_MEMORY_FLASH 0x0501
PCI_CLASS_MEMORY_OTHER  macro  include/linux/pci_ids.h  48  #define PCI_CLASS_MEMORY_OTHER 0x0580
PCI_BASE_CLASS_BRIDGE  macro  include/linux/pci_ids.h  50  #define PCI_BASE_CLASS_BRIDGE 0x06
PCI_CLASS_BRIDGE_HOST  macro  include/linux/pci_ids.h  51  #define PCI_CLASS_BRIDGE_HOST 0x0600
PCI_CLASS_BRIDGE_ISA  macro  include/linux/pci_ids.h  52  #define PCI_CLASS_BRIDGE_ISA 0x0601
PCI_CLASS_BRIDGE_EISA  macro  include/linux/pci_ids.h  53  #define PCI_CLASS_BRIDGE_EISA 0x0602
PCI_CLASS_BRIDGE_MC  macro  include/linux/pci_ids.h  54  #define PCI_CLASS_BRIDGE_MC 0x0603
PCI_CLASS_BRIDGE_PCI  macro  include/linux/pci_ids.h  55  #define PCI_CLASS_BRIDGE_PCI 0x0604
PCI_CLASS_BRIDGE_PCMCIA  macro  include/linux/pci_ids.h  56  #define PCI_CLASS_BRIDGE_PCMCIA 0x0605
PCI_CLASS_BRIDGE_NUBUS  macro  include/linux/pci_ids.h  57  #define PCI_CLASS_BRIDGE_NUBUS 0x0606
PCI_CLASS_BRIDGE_CARDBUS  macro  include/linux/pci_ids.h  58  #define PCI_CLASS_BRIDGE_CARDBUS 0x0607
PCI_CLASS_BRIDGE_RACEWAY  macro  include/linux/pci_ids.h  59  #define PCI_CLASS_BRIDGE_RACEWAY 0x0608
PCI_CLASS_BRIDGE_OTHER  macro  include/linux/pci_ids.h  60  #define PCI_CLASS_BRIDGE_OTHER 0x0680
PCI_BASE_CLASS_COMMUNICATION  macro  include/linux/pci_ids.h  62  #define PCI_BASE_CLASS_COMMUNICATION 0x07
PCI_CLASS_COMMUNICATION_SERIAL  macro  include/linux/pci_ids.h  63  #define PCI_CLASS_COMMUNICATION_SERIAL 0x0700
PCI_CLASS_COMMUNICATION_PARALLEL  macro  include/linux/pci_ids.h  64  #define PCI_CLASS_COMMUNICATION_PARALLEL 0x0701
PCI_CLASS_COMMUNICATION_MULTISERIAL  macro  include/linux/pci_ids.h  65  #define PCI_CLASS_COMMUNICATION_MULTISERIAL 0x0702
PCI_CLASS_COMMUNICATION_MODEM  macro  include/linux/pci_ids.h  66  #define PCI_CLASS_COMMUNICATION_MODEM 0x0703
PCI_CLASS_COMMUNICATION_OTHER  macro  include/linux/pci_ids.h  67  #define PCI_CLASS_COMMUNICATION_OTHER 0x0780
PCI_BASE_CLASS_SYSTEM  macro  include/linux/pci_ids.h  69  #define PCI_BASE_CLASS_SYSTEM 0x08
PCI_CLASS_SYSTEM_PIC  macro  include/linux/pci_ids.h  70  #define PCI_CLASS_SYSTEM_PIC 0x0800
PCI_CLASS_SYSTEM_PIC_IOAPIC  macro  include/linux/pci_ids.h  71  #define PCI_CLASS_SYSTEM_PIC_IOAPIC 0x080010
PCI_CLASS_SYSTEM_PIC_IOXAPIC  macro  include/linux/pci_ids.h  72  #define PCI_CLASS_SYSTEM_PIC_IOXAPIC 0x080020
PCI_CLASS_SYSTEM_DMA  macro  include/linux/pci_ids.h  73  #define PCI_CLASS_SYSTEM_DMA 0x0801
PCI_CLASS_SYSTEM_TIMER  macro  include/linux/pci_ids.h  74  #define PCI_CLASS_SYSTEM_TIMER 0x0802
PCI_CLASS_SYSTEM_RTC  macro  include/linux/pci_ids.h  75  #define PCI_CLASS_SYSTEM_RTC 0x0803
PCI_CLASS_SYSTEM_PCI_HOTPLUG  macro  include/linux/pci_ids.h  76  #define PCI_CLASS_SYSTEM_PCI_HOTPLUG 0x0804
PCI_CLASS_SYSTEM_SDHCI  macro  include/linux/pci_ids.h  77  #define PCI_CLASS_SYSTEM_SDHCI 0x0805
PCI_CLASS_SYSTEM_OTHER  macro  include/linux/pci_ids.h  78  #define PCI_CLASS_SYSTEM_OTHER 0x0880
PCI_BASE_CLASS_INPUT  macro  include/linux/pci_ids.h  80  #define PCI_BASE_CLASS_INPUT 0x09
PCI_CLASS_INPUT_KEYBOARD  macro  include/linux/pci_ids.h  81  #define PCI_CLASS_INPUT_KEYBOARD 0x0900
PCI_CLASS_INPUT_PEN  macro  include/linux/pci_ids.h  82  #define PCI_CLASS_INPUT_PEN 0x0901
PCI_CLASS_INPUT_MOUSE  macro  include/linux/pci_ids.h  83  #define PCI_CLASS_INPUT_MOUSE 0x0902
PCI_CLASS_INPUT_SCANNER  macro  include/linux/pci_ids.h  84  #define PCI_CLASS_INPUT_SCANNER 0x0903
PCI_CLASS_INPUT_GAMEPORT  macro  include/linux/pci_ids.h  85  #define PCI_CLASS_INPUT_GAMEPORT 0x0904
PCI_CLASS_INPUT_OTHER  macro  include/linux/pci_ids.h  86  #define PCI_CLASS_INPUT_OTHER 0x0980
PCI_BASE_CLASS_DOCKING  macro  include/linux/pci_ids.h  88  #define PCI_BASE_CLASS_DOCKING 0x0a
PCI_CLASS_DOCKING_GENERIC  macro  include/linux/pci_ids.h  89  #define PCI_CLASS_DOCKING_GENERIC 0x0a00
PCI_CLASS_DOCKING_OTHER  macro  include/linux/pci_ids.h  90  #define PCI_CLASS_DOCKING_OTHER 0x0a80
PCI_BASE_CLASS_PROCESSOR  macro  include/linux/pci_ids.h  92  #define PCI_BASE_CLASS_PROCESSOR 0x0b
PCI_CLASS_PROCESSOR_386  macro  include/linux/pci_ids.h  93  #define PCI_CLASS_PROCESSOR_386 0x0b00
PCI_CLASS_PROCESSOR_486  macro  include/linux/pci_ids.h  94  #define PCI_CLASS_PROCESSOR_486 0x0b01
PCI_CLASS_PROCESSOR_PENTIUM  macro  include/linux/pci_ids.h  95  #define PCI_CLASS_PROCESSOR_PENTIUM 0x0b02
PCI_CLASS_PROCESSOR_ALPHA  macro  include/linux/pci_ids.h  96  #define PCI_CLASS_PROCESSOR_ALPHA 0x0b10
PCI_CLASS_PROCESSOR_POWERPC  macro  include/linux/pci_ids.h  97  #define PCI_CLASS_PROCESSOR_POWERPC 0x0b20
PCI_CLASS_PROCESSOR_MIPS  macro  include/linux/pci_ids.h  98  #define PCI_CLASS_PROCESSOR_MIPS 0x0b30
PCI_CLASS_PROCESSOR_CO  macro  include/linux/pci_ids.h  99  #define PCI_CLASS_PROCESSOR_CO 0x0b40
PCI_BASE_CLASS_SERIAL  macro  include/linux/pci_ids.h  101  #define PCI_BASE_CLASS_SERIAL 0x0c
PCI_CLASS_SERIAL_FIREWIRE  macro  include/linux/pci_ids.h  102  #define PCI_CLASS_SERIAL_FIREWIRE 0x0c00
PCI_CLASS_SERIAL_FIREWIRE_OHCI  macro  include/linux/pci_ids.h  103  #define PCI_CLASS_SERIAL_FIREWIRE_OHCI 0x0c0010
PCI_CLASS_SERIAL_ACCESS  macro  include/linux/pci_ids.h  104  #define PCI_CLASS_SERIAL_ACCESS 0x0c01
PCI_CLASS_SERIAL_SSA  macro  include/linux/pci_ids.h  105  #define PCI_CLASS_SERIAL_SSA 0x0c02
PCI_CLASS_SERIAL_USB  macro  include/linux/pci_ids.h  106  #define PCI_CLASS_SERIAL_USB 0x0c03
PCI_CLASS_SERIAL_USB_UHCI  macro  include/linux/pci_ids.h  107  #define PCI_CLASS_SERIAL_USB_UHCI 0x0c0300
PCI_CLASS_SERIAL_USB_OHCI  macro  include/linux/pci_ids.h  108  #define PCI_CLASS_SERIAL_USB_OHCI 0x0c0310
PCI_CLASS_SERIAL_USB_EHCI  macro  include/linux/pci_ids.h  109  #define PCI_CLASS_SERIAL_USB_EHCI 0x0c0320
PCI_CLASS_SERIAL_USB_XHCI  macro  include/linux/pci_ids.h  110  #define PCI_CLASS_SERIAL_USB_XHCI 0x0c0330
PCI_CLASS_SERIAL_FIBER  macro  include/linux/pci_ids.h  111  #define PCI_CLASS_SERIAL_FIBER 0x0c04
PCI_CLASS_SERIAL_SMBUS  macro  include/linux/pci_ids.h  112  #define PCI_CLASS_SERIAL_SMBUS 0x0c05
PCI_BASE_CLASS_WIRELESS  macro  include/linux/pci_ids.h  114  #define PCI_BASE_CLASS_WIRELESS 0x0d
PCI_CLASS_WIRELESS_RF_CONTROLLER  macro  include/linux/pci_ids.h  115  #define PCI_CLASS_WIRELESS_RF_CONTROLLER 0x0d10
PCI_CLASS_WIRELESS_WHCI  macro  include/linux/pci_ids.h  116  #define PCI_CLASS_WIRELESS_WHCI 0x0d1010
PCI_BASE_CLASS_INTELLIGENT  macro  include/linux/pci_ids.h  118  #define PCI_BASE_CLASS_INTELLIGENT 0x0e
PCI_CLASS_INTELLIGENT_I2O  macro  include/linux/pci_ids.h  119  #define PCI_CLASS_INTELLIGENT_I2O 0x0e00
PCI_BASE_CLASS_SATELLITE  macro  include/linux/pci_ids.h  121  #define PCI_BASE_CLASS_SATELLITE 0x0f
PCI_CLASS_SATELLITE_TV  macro  include/linux/pci_ids.h  122  #define PCI_CLASS_SATELLITE_TV 0x0f00
PCI_CLASS_SATELLITE_AUDIO  macro  include/linux/pci_ids.h  123  #define PCI_CLASS_SATELLITE_AUDIO 0x0f01
PCI_CLASS_SATELLITE_VOICE  macro  include/linux/pci_ids.h  124  #define PCI_CLASS_SATELLITE_VOICE 0x0f03
PCI_CLASS_SATELLITE_DATA  macro  include/linux/pci_ids.h  125  #define PCI_CLASS_SATELLITE_DATA 0x0f04
PCI_BASE_CLASS_CRYPT  macro  include/linux/pci_ids.h  127  #define PCI_BASE_CLASS_CRYPT 0x10
PCI_CLASS_CRYPT_NETWORK  macro  include/linux/pci_ids.h  128  #define PCI_CLASS_CRYPT_NETWORK 0x1000
PCI_CLASS_CRYPT_ENTERTAINMENT  macro  include/linux/pci_ids.h  129  #define PCI_CLASS_CRYPT_ENTERTAINMENT 0x1001
PCI_CLASS_CRYPT_OTHER  macro  include/linux/pci_ids.h  130  #define PCI_CLASS_CRYPT_OTHER 0x1080
PCI_BASE_CLASS_SIGNAL_PROCESSING  macro  include/linux/pci_ids.h  132  #define PCI_BASE_CLASS_SIGNAL_PROCESSING 0x11
PCI_CLASS_SP_DPIO  macro  include/linux/pci_ids.h  133  #define PCI_CLASS_SP_DPIO 0x1100
PCI_CLASS_SP_OTHER  macro  include/linux/pci_ids.h  134  #define PCI_CLASS_SP_OTHER 0x1180
PCI_CLASS_OTHERS  macro  include/linux/pci_ids.h  136  #define PCI_CLASS_OTHERS 0xff
PCI_VENDOR_ID_TTTECH  macro  include/linux/pci_ids.h  140  #define PCI_VENDOR_ID_TTTECH 0x0357
PCI_DEVICE_ID_TTTECH_MC322  macro  include/linux/pci_ids.h  141  #define PCI_DEVICE_ID_TTTECH_MC322 0x000a
PCI_VENDOR_ID_DYNALINK  macro  include/linux/pci_ids.h  143  #define PCI_VENDOR_ID_DYNALINK 0x0675
PCI_DEVICE_ID_DYNALINK_IS64PH  macro  include/linux/pci_ids.h  144  #define PCI_DEVICE_ID_DYNALINK_IS64PH 0x1702
PCI_VENDOR_ID_BERKOM  macro  include/linux/pci_ids.h  146  #define PCI_VENDOR_ID_BERKOM 0x0871
PCI_DEVICE_ID_BERKOM_A1T  macro  include/linux/pci_ids.h  147  #define PCI_DEVICE_ID_BERKOM_A1T 0xffa1
PCI_DEVICE_ID_BERKOM_T_CONCEPT  macro  include/linux/pci_ids.h  148  #define PCI_DEVICE_ID_BERKOM_T_CONCEPT 0xffa2
PCI_DEVICE_ID_BERKOM_A4T  macro  include/linux/pci_ids.h  149  #define PCI_DEVICE_ID_BERKOM_A4T 0xffa4
PCI_DEVICE_ID_BERKOM_SCITEL_QUADRO  macro  include/linux/pci_ids.h  150  #define PCI_DEVICE_ID_BERKOM_SCITEL_QUADRO 0xffa8
PCI_VENDOR_ID_COMPAQ  macro  include/linux/pci_ids.h  152  #define PCI_VENDOR_ID_COMPAQ 0x0e11
PCI_DEVICE_ID_COMPAQ_TOKENRING  macro  include/linux/pci_ids.h  153  #define PCI_DEVICE_ID_COMPAQ_TOKENRING 0x0508
PCI_DEVICE_ID_COMPAQ_TACHYON  macro  include/linux/pci_ids.h  154  #define PCI_DEVICE_ID_COMPAQ_TACHYON 0xa0fc
PCI_DEVICE_ID_COMPAQ_SMART2P  macro  include/linux/pci_ids.h  155  #define PCI_DEVICE_ID_COMPAQ_SMART2P 0xae10
PCI_DEVICE_ID_COMPAQ_NETEL100  macro  include/linux/pci_ids.h  156  #define PCI_DEVICE_ID_COMPAQ_NETEL100 0xae32
PCI_DEVICE_ID_COMPAQ_NETEL10  macro  include/linux/pci_ids.h  157  #define PCI_DEVICE_ID_COMPAQ_NETEL10 0xae34
PCI_DEVICE_ID_COMPAQ_TRIFLEX_IDE  macro  include/linux/pci_ids.h  158  #define PCI_DEVICE_ID_COMPAQ_TRIFLEX_IDE 0xae33
PCI_DEVICE_ID_COMPAQ_NETFLEX3I  macro  include/linux/pci_ids.h  159  #define PCI_DEVICE_ID_COMPAQ_NETFLEX3I 0xae35
PCI_DEVICE_ID_COMPAQ_NETEL100D  macro  include/linux/pci_ids.h  160  #define PCI_DEVICE_ID_COMPAQ_NETEL100D 0xae40
PCI_DEVICE_ID_COMPAQ_NETEL100PI  macro  include/linux/pci_ids.h  161  #define PCI_DEVICE_ID_COMPAQ_NETEL100PI 0xae43
PCI_DEVICE_ID_COMPAQ_NETEL100I  macro  include/linux/pci_ids.h  162  #define PCI_DEVICE_ID_COMPAQ_NETEL100I 0xb011
PCI_DEVICE_ID_COMPAQ_CISS  macro  include/linux/pci_ids.h  163  #define PCI_DEVICE_ID_COMPAQ_CISS 0xb060
PCI_DEVICE_ID_COMPAQ_CISSB  macro  include/linux/pci_ids.h  164  #define PCI_DEVICE_ID_COMPAQ_CISSB 0xb178
PCI_DEVICE_ID_COMPAQ_CISSC  macro  include/linux/pci_ids.h  165  #define PCI_DEVICE_ID_COMPAQ_CISSC 0x46
PCI_DEVICE_ID_COMPAQ_THUNDER  macro  include/linux/pci_ids.h  166  #define PCI_DEVICE_ID_COMPAQ_THUNDER 0xf130
PCI_DEVICE_ID_COMPAQ_NETFLEX3B  macro  include/linux/pci_ids.h  167  #define PCI_DEVICE_ID_COMPAQ_NETFLEX3B 0xf150
PCI_VENDOR_ID_NCR  macro  include/linux/pci_ids.h  169  #define PCI_VENDOR_ID_NCR 0x1000
PCI_VENDOR_ID_LSI_LOGIC  macro  include/linux/pci_ids.h  170  #define PCI_VENDOR_ID_LSI_LOGIC 0x1000
PCI_DEVICE_ID_NCR_53C810  macro  include/linux/pci_ids.h  171  #define PCI_DEVICE_ID_NCR_53C810 0x0001
PCI_DEVICE_ID_NCR_53C820  macro  include/linux/pci_ids.h  172  #define PCI_DEVICE_ID_NCR_53C820 0x0002
PCI_DEVICE_ID_NCR_53C825  macro  include/linux/pci_ids.h  173  #define PCI_DEVICE_ID_NCR_53C825 0x0003
PCI_DEVICE_ID_NCR_53C815  macro  include/linux/pci_ids.h  174  #define PCI_DEVICE_ID_NCR_53C815 0x0004
PCI_DEVICE_ID_LSI_53C810AP  macro  include/linux/pci_ids.h  175  #define PCI_DEVICE_ID_LSI_53C810AP 0x0005
PCI_DEVICE_ID_NCR_53C860  macro  include/linux/pci_ids.h  176  #define PCI_DEVICE_ID_NCR_53C860 0x0006
PCI_DEVICE_ID_LSI_53C1510  macro  include/linux/pci_ids.h  177  #define PCI_DEVICE_ID_LSI_53C1510 0x000a
PCI_DEVICE_ID_NCR_53C896  macro  include/linux/pci_ids.h  178  #define PCI_DEVICE_ID_NCR_53C896 0x000b
PCI_DEVICE_ID_NCR_53C895  macro  include/linux/pci_ids.h  179  #define PCI_DEVICE_ID_NCR_53C895 0x000c
PCI_DEVICE_ID_NCR_53C885  macro  include/linux/pci_ids.h  180  #define PCI_DEVICE_ID_NCR_53C885 0x000d
PCI_DEVICE_ID_NCR_53C875  macro  include/linux/pci_ids.h  181  #define PCI_DEVICE_ID_NCR_53C875 0x000f
PCI_DEVICE_ID_NCR_53C1510  macro  include/linux/pci_ids.h  182  #define PCI_DEVICE_ID_NCR_53C1510 0x0010
PCI_DEVICE_ID_LSI_53C895A  macro  include/linux/pci_ids.h  183  #define PCI_DEVICE_ID_LSI_53C895A 0x0012
PCI_DEVICE_ID_LSI_53C875A  macro  include/linux/pci_ids.h  184  #define PCI_DEVICE_ID_LSI_53C875A 0x0013
PCI_DEVICE_ID_LSI_53C1010_33  macro  include/linux/pci_ids.h  185  #define PCI_DEVICE_ID_LSI_53C1010_33 0x0020
PCI_DEVICE_ID_LSI_53C1010_66  macro  include/linux/pci_ids.h  186  #define PCI_DEVICE_ID_LSI_53C1010_66 0x0021
PCI_DEVICE_ID_LSI_53C1030  macro  include/linux/pci_ids.h  187  #define PCI_DEVICE_ID_LSI_53C1030 0x0030
PCI_DEVICE_ID_LSI_1030_53C1035  macro  include/linux/pci_ids.h  188  #define PCI_DEVICE_ID_LSI_1030_53C1035 0x0032
PCI_DEVICE_ID_LSI_53C1035  macro  include/linux/pci_ids.h  189  #define PCI_DEVICE_ID_LSI_53C1035 0x0040
PCI_DEVICE_ID_NCR_53C875J  macro  include/linux/pci_ids.h  190  #define PCI_DEVICE_ID_NCR_53C875J 0x008f
PCI_DEVICE_ID_LSI_FC909  macro  include/linux/pci_ids.h  191  #define PCI_DEVICE_ID_LSI_FC909 0x0621
PCI_DEVICE_ID_LSI_FC929  macro  include/linux/pci_ids.h  192  #define PCI_DEVICE_ID_LSI_FC929 0x0622
PCI_DEVICE_ID_LSI_FC929_LAN  macro  include/linux/pci_ids.h  193  #define PCI_DEVICE_ID_LSI_FC929_LAN 0x0623
PCI_DEVICE_ID_LSI_FC919  macro  include/linux/pci_ids.h  194  #define PCI_DEVICE_ID_LSI_FC919 0x0624
PCI_DEVICE_ID_LSI_FC919_LAN  macro  include/linux/pci_ids.h  195  #define PCI_DEVICE_ID_LSI_FC919_LAN 0x0625
PCI_DEVICE_ID_LSI_FC929X  macro  include/linux/pci_ids.h  196  #define PCI_DEVICE_ID_LSI_FC929X 0x0626
PCI_DEVICE_ID_LSI_FC939X  macro  include/linux/pci_ids.h  197  #define PCI_DEVICE_ID_LSI_FC939X 0x0642
PCI_DEVICE_ID_LSI_FC949X  macro  include/linux/pci_ids.h  198  #define PCI_DEVICE_ID_LSI_FC949X 0x0640
PCI_DEVICE_ID_LSI_FC949ES  macro  include/linux/pci_ids.h  199  #define PCI_DEVICE_ID_LSI_FC949ES 0x0646
PCI_DEVICE_ID_LSI_FC919X  macro  include/linux/pci_ids.h  200  #define PCI_DEVICE_ID_LSI_FC919X 0x0628
PCI_DEVICE_ID_NCR_YELLOWFIN  macro  include/linux/pci_ids.h  201  #define PCI_DEVICE_ID_NCR_YELLOWFIN 0x0701
PCI_DEVICE_ID_LSI_61C102  macro  include/linux/pci_ids.h  202  #define PCI_DEVICE_ID_LSI_61C102 0x0901
PCI_DEVICE_ID_LSI_63C815  macro  include/linux/pci_ids.h  203  #define PCI_DEVICE_ID_LSI_63C815 0x1000
PCI_DEVICE_ID_LSI_SAS1064  macro  include/linux/pci_ids.h  204  #define PCI_DEVICE_ID_LSI_SAS1064 0x0050
PCI_DEVICE_ID_LSI_SAS1064R  macro  include/linux/pci_ids.h  205  #define PCI_DEVICE_ID_LSI_SAS1064R 0x0411
PCI_DEVICE_ID_LSI_SAS1066  macro  include/linux/pci_ids.h  206  #define PCI_DEVICE_ID_LSI_SAS1066 0x005E
PCI_DEVICE_ID_LSI_SAS1068  macro  include/linux/pci_ids.h  207  #define PCI_DEVICE_ID_LSI_SAS1068 0x0054
PCI_DEVICE_ID_LSI_SAS1064A  macro  include/linux/pci_ids.h  208  #define PCI_DEVICE_ID_LSI_SAS1064A 0x005C
PCI_DEVICE_ID_LSI_SAS1064E  macro  include/linux/pci_ids.h  209  #define PCI_DEVICE_ID_LSI_SAS1064E 0x0056
PCI_DEVICE_ID_LSI_SAS1066E  macro  include/linux/pci_ids.h  210  #define PCI_DEVICE_ID_LSI_SAS1066E 0x005A
PCI_DEVICE_ID_LSI_SAS1068E  macro  include/linux/pci_ids.h  211  #define PCI_DEVICE_ID_LSI_SAS1068E 0x0058
PCI_DEVICE_ID_LSI_SAS1078  macro  include/linux/pci_ids.h  212  #define PCI_DEVICE_ID_LSI_SAS1078 0x0060
PCI_VENDOR_ID_ATI  macro  include/linux/pci_ids.h  214  #define PCI_VENDOR_ID_ATI 0x1002
PCI_DEVICE_ID_ATI_68800  macro  include/linux/pci_ids.h  216  #define PCI_DEVICE_ID_ATI_68800 0x4158
PCI_DEVICE_ID_ATI_215CT222  macro  include/linux/pci_ids.h  217  #define PCI_DEVICE_ID_ATI_215CT222 0x4354
PCI_DEVICE_ID_ATI_210888CX  macro  include/linux/pci_ids.h  218  #define PCI_DEVICE_ID_ATI_210888CX 0x4358
PCI_DEVICE_ID_ATI_215ET222  macro  include/linux/pci_ids.h  219  #define PCI_DEVICE_ID_ATI_215ET222 0x4554
PCI_DEVICE_ID_ATI_215GB  macro  include/linux/pci_ids.h  221  #define PCI_DEVICE_ID_ATI_215GB 0x4742
PCI_DEVICE_ID_ATI_215GD  macro  include/linux/pci_ids.h  222  #define PCI_DEVICE_ID_ATI_215GD 0x4744
PCI_DEVICE_ID_ATI_215GI  macro  include/linux/pci_ids.h  223  #define PCI_DEVICE_ID_ATI_215GI 0x4749
PCI_DEVICE_ID_ATI_215GP  macro  include/linux/pci_ids.h  224  #define PCI_DEVICE_ID_ATI_215GP 0x4750
PCI_DEVICE_ID_ATI_215GQ  macro  include/linux/pci_ids.h  225  #define PCI_DEVICE_ID_ATI_215GQ 0x4751
PCI_DEVICE_ID_ATI_215XL  macro  include/linux/pci_ids.h  226  #define PCI_DEVICE_ID_ATI_215XL 0x4752
PCI_DEVICE_ID_ATI_215GT  macro  include/linux/pci_ids.h  227  #define PCI_DEVICE_ID_ATI_215GT 0x4754
PCI_DEVICE_ID_ATI_215GTB  macro  include/linux/pci_ids.h  228  #define PCI_DEVICE_ID_ATI_215GTB 0x4755
PCI_DEVICE_ID_ATI_215_IV  macro  include/linux/pci_ids.h  229  #define PCI_DEVICE_ID_ATI_215_IV 0x4756
PCI_DEVICE_ID_ATI_215_IW  macro  include/linux/pci_ids.h  230  #define PCI_DEVICE_ID_ATI_215_IW 0x4757
PCI_DEVICE_ID_ATI_215_IZ  macro  include/linux/pci_ids.h  231  #define PCI_DEVICE_ID_ATI_215_IZ 0x475A
PCI_DEVICE_ID_ATI_210888GX  macro  include/linux/pci_ids.h  232  #define PCI_DEVICE_ID_ATI_210888GX 0x4758
PCI_DEVICE_ID_ATI_215_LB  macro  include/linux/pci_ids.h  233  #define PCI_DEVICE_ID_ATI_215_LB 0x4c42
PCI_DEVICE_ID_ATI_215_LD  macro  include/linux/pci_ids.h  234  #define PCI_DEVICE_ID_ATI_215_LD 0x4c44
PCI_DEVICE_ID_ATI_215_LG  macro  include/linux/pci_ids.h  235  #define PCI_DEVICE_ID_ATI_215_LG 0x4c47
PCI_DEVICE_ID_ATI_215_LI  macro  include/linux/pci_ids.h  236  #define PCI_DEVICE_ID_ATI_215_LI 0x4c49
PCI_DEVICE_ID_ATI_215_LM  macro  include/linux/pci_ids.h  237  #define PCI_DEVICE_ID_ATI_215_LM 0x4c4D
PCI_DEVICE_ID_ATI_215_LN  macro  include/linux/pci_ids.h  238  #define PCI_DEVICE_ID_ATI_215_LN 0x4c4E
PCI_DEVICE_ID_ATI_215_LR  macro  include/linux/pci_ids.h  239  #define PCI_DEVICE_ID_ATI_215_LR 0x4c52
PCI_DEVICE_ID_ATI_215_LS  macro  include/linux/pci_ids.h  240  #define PCI_DEVICE_ID_ATI_215_LS 0x4c53
PCI_DEVICE_ID_ATI_264_LT  macro  include/linux/pci_ids.h  241  #define PCI_DEVICE_ID_ATI_264_LT 0x4c54
PCI_DEVICE_ID_ATI_264VT  macro  include/linux/pci_ids.h  243  #define PCI_DEVICE_ID_ATI_264VT 0x5654
PCI_DEVICE_ID_ATI_264VU  macro  include/linux/pci_ids.h  244  #define PCI_DEVICE_ID_ATI_264VU 0x5655
PCI_DEVICE_ID_ATI_264VV  macro  include/linux/pci_ids.h  245  #define PCI_DEVICE_ID_ATI_264VV 0x5656
PCI_DEVICE_ID_ATI_RAGE128_RE  macro  include/linux/pci_ids.h  247  #define PCI_DEVICE_ID_ATI_RAGE128_RE 0x5245
PCI_DEVICE_ID_ATI_RAGE128_RF  macro  include/linux/pci_ids.h  248  #define PCI_DEVICE_ID_ATI_RAGE128_RF 0x5246
PCI_DEVICE_ID_ATI_RAGE128_RG  macro  include/linux/pci_ids.h  249  #define PCI_DEVICE_ID_ATI_RAGE128_RG 0x5247
PCI_DEVICE_ID_ATI_RAGE128_RK  macro  include/linux/pci_ids.h  251  #define PCI_DEVICE_ID_ATI_RAGE128_RK 0x524b
PCI_DEVICE_ID_ATI_RAGE128_RL  macro  include/linux/pci_ids.h  252  #define PCI_DEVICE_ID_ATI_RAGE128_RL 0x524c
PCI_DEVICE_ID_ATI_RAGE128_SE  macro  include/linux/pci_ids.h  253  #define PCI_DEVICE_ID_ATI_RAGE128_SE 0x5345
PCI_DEVICE_ID_ATI_RAGE128_SF  macro  include/linux/pci_ids.h  254  #define PCI_DEVICE_ID_ATI_RAGE128_SF 0x5346
PCI_DEVICE_ID_ATI_RAGE128_SG  macro  include/linux/pci_ids.h  255  #define PCI_DEVICE_ID_ATI_RAGE128_SG 0x5347
PCI_DEVICE_ID_ATI_RAGE128_SH  macro  include/linux/pci_ids.h  256  #define PCI_DEVICE_ID_ATI_RAGE128_SH 0x5348
PCI_DEVICE_ID_ATI_RAGE128_SK  macro  include/linux/pci_ids.h  257  #define PCI_DEVICE_ID_ATI_RAGE128_SK 0x534b
PCI_DEVICE_ID_ATI_RAGE128_SL  macro  include/linux/pci_ids.h  258  #define PCI_DEVICE_ID_ATI_RAGE128_SL 0x534c
PCI_DEVICE_ID_ATI_RAGE128_SM  macro  include/linux/pci_ids.h  259  #define PCI_DEVICE_ID_ATI_RAGE128_SM 0x534d
PCI_DEVICE_ID_ATI_RAGE128_SN  macro  include/linux/pci_ids.h  260  #define PCI_DEVICE_ID_ATI_RAGE128_SN 0x534e
PCI_DEVICE_ID_ATI_RAGE128_TF  macro  include/linux/pci_ids.h  262  #define PCI_DEVICE_ID_ATI_RAGE128_TF 0x5446
PCI_DEVICE_ID_ATI_RAGE128_TL  macro  include/linux/pci_ids.h  263  #define PCI_DEVICE_ID_ATI_RAGE128_TL 0x544c
PCI_DEVICE_ID_ATI_RAGE128_TR  macro  include/linux/pci_ids.h  264  #define PCI_DEVICE_ID_ATI_RAGE128_TR 0x5452
PCI_DEVICE_ID_ATI_RAGE128_TS  macro  include/linux/pci_ids.h  265  #define PCI_DEVICE_ID_ATI_RAGE128_TS 0x5453
PCI_DEVICE_ID_ATI_RAGE128_TT  macro  include/linux/pci_ids.h  266  #define PCI_DEVICE_ID_ATI_RAGE128_TT 0x5454
PCI_DEVICE_ID_ATI_RAGE128_TU  macro  include/linux/pci_ids.h  267  #define PCI_DEVICE_ID_ATI_RAGE128_TU 0x5455
PCI_DEVICE_ID_ATI_RAGE128_LE  macro  include/linux/pci_ids.h  269  #define PCI_DEVICE_ID_ATI_RAGE128_LE 0x4c45
PCI_DEVICE_ID_ATI_RAGE128_LF  macro  include/linux/pci_ids.h  270  #define PCI_DEVICE_ID_ATI_RAGE128_LF 0x4c46
PCI_DEVICE_ID_ATI_RAGE128_MF  macro  include/linux/pci_ids.h  272  #define PCI_DEVICE_ID_ATI_RAGE128_MF 0x4d46
PCI_DEVICE_ID_ATI_RAGE128_ML  macro  include/linux/pci_ids.h  273  #define PCI_DEVICE_ID_ATI_RAGE128_ML 0x4d4c
PCI_DEVICE_ID_ATI_RAGE128_PA  macro  include/linux/pci_ids.h  275  #define PCI_DEVICE_ID_ATI_RAGE128_PA 0x5041
PCI_DEVICE_ID_ATI_RAGE128_PB  macro  include/linux/pci_ids.h  276  #define PCI_DEVICE_ID_ATI_RAGE128_PB 0x5042
PCI_DEVICE_ID_ATI_RAGE128_PC  macro  include/linux/pci_ids.h  277  #define PCI_DEVICE_ID_ATI_RAGE128_PC 0x5043
PCI_DEVICE_ID_ATI_RAGE128_PD  macro  include/linux/pci_ids.h  278  #define PCI_DEVICE_ID_ATI_RAGE128_PD 0x5044
PCI_DEVICE_ID_ATI_RAGE128_PE  macro  include/linux/pci_ids.h  279  #define PCI_DEVICE_ID_ATI_RAGE128_PE 0x5045
PCI_DEVICE_ID_ATI_RAGE128_PF  macro  include/linux/pci_ids.h  280  #define PCI_DEVICE_ID_ATI_RAGE128_PF 0x5046
PCI_DEVICE_ID_ATI_RAGE128_PG  macro  include/linux/pci_ids.h  282  #define PCI_DEVICE_ID_ATI_RAGE128_PG 0x5047
PCI_DEVICE_ID_ATI_RAGE128_PH  macro  include/linux/pci_ids.h  283  #define PCI_DEVICE_ID_ATI_RAGE128_PH 0x5048
PCI_DEVICE_ID_ATI_RAGE128_PI  macro  include/linux/pci_ids.h  284  #define PCI_DEVICE_ID_ATI_RAGE128_PI 0x5049
PCI_DEVICE_ID_ATI_RAGE128_PJ  macro  include/linux/pci_ids.h  285  #define PCI_DEVICE_ID_ATI_RAGE128_PJ 0x504A
PCI_DEVICE_ID_ATI_RAGE128_PK  macro  include/linux/pci_ids.h  286  #define PCI_DEVICE_ID_ATI_RAGE128_PK 0x504B
PCI_DEVICE_ID_ATI_RAGE128_PL  macro  include/linux/pci_ids.h  287  #define PCI_DEVICE_ID_ATI_RAGE128_PL 0x504C
PCI_DEVICE_ID_ATI_RAGE128_PM  macro  include/linux/pci_ids.h  288  #define PCI_DEVICE_ID_ATI_RAGE128_PM 0x504D
PCI_DEVICE_ID_ATI_RAGE128_PN  macro  include/linux/pci_ids.h  289  #define PCI_DEVICE_ID_ATI_RAGE128_PN 0x504E
PCI_DEVICE_ID_ATI_RAGE128_PO  macro  include/linux/pci_ids.h  290  #define PCI_DEVICE_ID_ATI_RAGE128_PO 0x504F
PCI_DEVICE_ID_ATI_RAGE128_PP  macro  include/linux/pci_ids.h  291  #define PCI_DEVICE_ID_ATI_RAGE128_PP 0x5050
PCI_DEVICE_ID_ATI_RAGE128_PQ  macro  include/linux/pci_ids.h  292  #define PCI_DEVICE_ID_ATI_RAGE128_PQ 0x5051
PCI_DEVICE_ID_ATI_RAGE128_PR  macro  include/linux/pci_ids.h  293  #define PCI_DEVICE_ID_ATI_RAGE128_PR 0x5052
PCI_DEVICE_ID_ATI_RAGE128_PS  macro  include/linux/pci_ids.h  294  #define PCI_DEVICE_ID_ATI_RAGE128_PS 0x5053
PCI_DEVICE_ID_ATI_RAGE128_PT  macro  include/linux/pci_ids.h  295  #define PCI_DEVICE_ID_ATI_RAGE128_PT 0x5054
PCI_DEVICE_ID_ATI_RAGE128_PU  macro  include/linux/pci_ids.h  296  #define PCI_DEVICE_ID_ATI_RAGE128_PU 0x5055
PCI_DEVICE_ID_ATI_RAGE128_PV  macro  include/linux/pci_ids.h  297  #define PCI_DEVICE_ID_ATI_RAGE128_PV 0x5056
PCI_DEVICE_ID_ATI_RAGE128_PW  macro  include/linux/pci_ids.h  298  #define PCI_DEVICE_ID_ATI_RAGE128_PW 0x5057
PCI_DEVICE_ID_ATI_RAGE128_PX  macro  include/linux/pci_ids.h  299  #define PCI_DEVICE_ID_ATI_RAGE128_PX 0x5058
PCI_DEVICE_ID_ATI_RADEON_QD  macro  include/linux/pci_ids.h  302  #define PCI_DEVICE_ID_ATI_RADEON_QD 0x5144
PCI_DEVICE_ID_ATI_RADEON_QE  macro  include/linux/pci_ids.h  303  #define PCI_DEVICE_ID_ATI_RADEON_QE 0x5145
PCI_DEVICE_ID_ATI_RADEON_QF  macro  include/linux/pci_ids.h  304  #define PCI_DEVICE_ID_ATI_RADEON_QF 0x5146
PCI_DEVICE_ID_ATI_RADEON_QG  macro  include/linux/pci_ids.h  305  #define PCI_DEVICE_ID_ATI_RADEON_QG 0x5147
PCI_DEVICE_ID_ATI_RADEON_QY  macro  include/linux/pci_ids.h  307  #define PCI_DEVICE_ID_ATI_RADEON_QY 0x5159
PCI_DEVICE_ID_ATI_RADEON_QZ  macro  include/linux/pci_ids.h  308  #define PCI_DEVICE_ID_ATI_RADEON_QZ 0x515a
PCI_DEVICE_ID_ATI_RADEON_QL  macro  include/linux/pci_ids.h  310  #define PCI_DEVICE_ID_ATI_RADEON_QL 0x514c
PCI_DEVICE_ID_ATI_RADEON_QN  macro  include/linux/pci_ids.h  311  #define PCI_DEVICE_ID_ATI_RADEON_QN 0x514e
PCI_DEVICE_ID_ATI_RADEON_QO  macro  include/linux/pci_ids.h  312  #define PCI_DEVICE_ID_ATI_RADEON_QO 0x514f
PCI_DEVICE_ID_ATI_RADEON_Ql  macro  include/linux/pci_ids.h  313  #define PCI_DEVICE_ID_ATI_RADEON_Ql 0x516c
PCI_DEVICE_ID_ATI_RADEON_BB  macro  include/linux/pci_ids.h  314  #define PCI_DEVICE_ID_ATI_RADEON_BB 0x4242
PCI_DEVICE_ID_ATI_RADEON_QM  macro  include/linux/pci_ids.h  316  #define PCI_DEVICE_ID_ATI_RADEON_QM 0x514d
PCI_DEVICE_ID_ATI_RADEON_QW  macro  include/linux/pci_ids.h  318  #define PCI_DEVICE_ID_ATI_RADEON_QW 0x5157
PCI_DEVICE_ID_ATI_RADEON_QX  macro  include/linux/pci_ids.h  319  #define PCI_DEVICE_ID_ATI_RADEON_QX 0x5158
PCI_DEVICE_ID_ATI_RADEON_Id  macro  include/linux/pci_ids.h  322  #define PCI_DEVICE_ID_ATI_RADEON_Id 0x4964
PCI_DEVICE_ID_ATI_RADEON_Ie  macro  include/linux/pci_ids.h  323  #define PCI_DEVICE_ID_ATI_RADEON_Ie 0x4965
PCI_DEVICE_ID_ATI_RADEON_If  macro  include/linux/pci_ids.h  324  #define PCI_DEVICE_ID_ATI_RADEON_If 0x4966
PCI_DEVICE_ID_ATI_RADEON_Ig  macro  include/linux/pci_ids.h  325  #define PCI_DEVICE_ID_ATI_RADEON_Ig 0x4967
PCI_DEVICE_ID_ATI_RADEON_Ya  macro  include/linux/pci_ids.h  327  #define PCI_DEVICE_ID_ATI_RADEON_Ya 0x5961
PCI_DEVICE_ID_ATI_RADEON_Yd  macro  include/linux/pci_ids.h  328  #define PCI_DEVICE_ID_ATI_RADEON_Yd 0x5964
PCI_DEVICE_ID_ATI_RADEON_ND  macro  include/linux/pci_ids.h  331  #define PCI_DEVICE_ID_ATI_RADEON_ND 0x4e44
PCI_DEVICE_ID_ATI_RADEON_NE  macro  include/linux/pci_ids.h  332  #define PCI_DEVICE_ID_ATI_RADEON_NE 0x4e45
PCI_DEVICE_ID_ATI_RADEON_NF  macro  include/linux/pci_ids.h  333  #define PCI_DEVICE_ID_ATI_RADEON_NF 0x4e46
PCI_DEVICE_ID_ATI_RADEON_NG  macro  include/linux/pci_ids.h  334  #define PCI_DEVICE_ID_ATI_RADEON_NG 0x4e47
PCI_DEVICE_ID_ATI_RADEON_LY  macro  include/linux/pci_ids.h  338  #define PCI_DEVICE_ID_ATI_RADEON_LY 0x4c59
PCI_DEVICE_ID_ATI_RADEON_LZ  macro  include/linux/pci_ids.h  339  #define PCI_DEVICE_ID_ATI_RADEON_LZ 0x4c5a
PCI_DEVICE_ID_ATI_RADEON_LW  macro  include/linux/pci_ids.h  341  #define PCI_DEVICE_ID_ATI_RADEON_LW 0x4c57
PCI_DEVICE_ID_ATI_RADEON_LX  macro  include/linux/pci_ids.h  342  #define PCI_DEVICE_ID_ATI_RADEON_LX 0x4c58
PCI_DEVICE_ID_ATI_RADEON_Ld  macro  include/linux/pci_ids.h  344  #define PCI_DEVICE_ID_ATI_RADEON_Ld 0x4c64
PCI_DEVICE_ID_ATI_RADEON_Le  macro  include/linux/pci_ids.h  345  #define PCI_DEVICE_ID_ATI_RADEON_Le 0x4c65
PCI_DEVICE_ID_ATI_RADEON_Lf  macro  include/linux/pci_ids.h  346  #define PCI_DEVICE_ID_ATI_RADEON_Lf 0x4c66
PCI_DEVICE_ID_ATI_RADEON_Lg  macro  include/linux/pci_ids.h  347  #define PCI_DEVICE_ID_ATI_RADEON_Lg 0x4c67
PCI_DEVICE_ID_ATI_RS100  macro  include/linux/pci_ids.h  350  #define PCI_DEVICE_ID_ATI_RS100 0xcab0
PCI_DEVICE_ID_ATI_RS200  macro  include/linux/pci_ids.h  351  #define PCI_DEVICE_ID_ATI_RS200 0xcab2
PCI_DEVICE_ID_ATI_RS200_B  macro  include/linux/pci_ids.h  352  #define PCI_DEVICE_ID_ATI_RS200_B 0xcbb2
PCI_DEVICE_ID_ATI_RS250  macro  include/linux/pci_ids.h  353  #define PCI_DEVICE_ID_ATI_RS250 0xcab3
PCI_DEVICE_ID_ATI_RS300_100  macro  include/linux/pci_ids.h  354  #define PCI_DEVICE_ID_ATI_RS300_100 0x5830
PCI_DEVICE_ID_ATI_RS300_133  macro  include/linux/pci_ids.h  355  #define PCI_DEVICE_ID_ATI_RS300_133 0x5831
PCI_DEVICE_ID_ATI_RS300_166  macro  include/linux/pci_ids.h  356  #define PCI_DEVICE_ID_ATI_RS300_166 0x5832
PCI_DEVICE_ID_ATI_RS300_200  macro  include/linux/pci_ids.h  357  #define PCI_DEVICE_ID_ATI_RS300_200 0x5833
PCI_DEVICE_ID_ATI_RS350_100  macro  include/linux/pci_ids.h  358  #define PCI_DEVICE_ID_ATI_RS350_100 0x7830
PCI_DEVICE_ID_ATI_RS350_133  macro  include/linux/pci_ids.h  359  #define PCI_DEVICE_ID_ATI_RS350_133 0x7831
PCI_DEVICE_ID_ATI_RS350_166  macro  include/linux/pci_ids.h  360  #define PCI_DEVICE_ID_ATI_RS350_166 0x7832
PCI_DEVICE_ID_ATI_RS350_200  macro  include/linux/pci_ids.h  361  #define PCI_DEVICE_ID_ATI_RS350_200 0x7833
PCI_DEVICE_ID_ATI_RS400_100  macro  include/linux/pci_ids.h  362  #define PCI_DEVICE_ID_ATI_RS400_100 0x5a30
PCI_DEVICE_ID_ATI_RS400_133  macro  include/linux/pci_ids.h  363  #define PCI_DEVICE_ID_ATI_RS400_133 0x5a31
PCI_DEVICE_ID_ATI_RS400_166  macro  include/linux/pci_ids.h  364  #define PCI_DEVICE_ID_ATI_RS400_166 0x5a32
PCI_DEVICE_ID_ATI_RS400_200  macro  include/linux/pci_ids.h  365  #define PCI_DEVICE_ID_ATI_RS400_200 0x5a33
PCI_DEVICE_ID_ATI_RS480  macro  include/linux/pci_ids.h  366  #define PCI_DEVICE_ID_ATI_RS480 0x5950
PCI_DEVICE_ID_ATI_IXP200_IDE  macro  include/linux/pci_ids.h  368  #define PCI_DEVICE_ID_ATI_IXP200_IDE 0x4349
PCI_DEVICE_ID_ATI_IXP200_SMBUS  macro  include/linux/pci_ids.h  369  #define PCI_DEVICE_ID_ATI_IXP200_SMBUS 0x4353
PCI_DEVICE_ID_ATI_IXP300_SMBUS  macro  include/linux/pci_ids.h  370  #define PCI_DEVICE_ID_ATI_IXP300_SMBUS 0x4363
PCI_DEVICE_ID_ATI_IXP300_IDE  macro  include/linux/pci_ids.h  371  #define PCI_DEVICE_ID_ATI_IXP300_IDE 0x4369
PCI_DEVICE_ID_ATI_IXP300_SATA  macro  include/linux/pci_ids.h  372  #define PCI_DEVICE_ID_ATI_IXP300_SATA 0x436e
PCI_DEVICE_ID_ATI_IXP400_SMBUS  macro  include/linux/pci_ids.h  373  #define PCI_DEVICE_ID_ATI_IXP400_SMBUS 0x4372
PCI_DEVICE_ID_ATI_IXP400_IDE  macro  include/linux/pci_ids.h  374  #define PCI_DEVICE_ID_ATI_IXP400_IDE 0x4376
PCI_DEVICE_ID_ATI_IXP400_SATA  macro  include/linux/pci_ids.h  375  #define PCI_DEVICE_ID_ATI_IXP400_SATA 0x4379
PCI_DEVICE_ID_ATI_IXP400_SATA2  macro  include/linux/pci_ids.h  376  #define PCI_DEVICE_ID_ATI_IXP400_SATA2 0x437a
PCI_DEVICE_ID_ATI_IXP600_SATA  macro  include/linux/pci_ids.h  377  #define PCI_DEVICE_ID_ATI_IXP600_SATA 0x4380
PCI_DEVICE_ID_ATI_SBX00_SMBUS  macro  include/linux/pci_ids.h  378  #define PCI_DEVICE_ID_ATI_SBX00_SMBUS 0x4385
PCI_DEVICE_ID_ATI_IXP600_IDE  macro  include/linux/pci_ids.h  379  #define PCI_DEVICE_ID_ATI_IXP600_IDE 0x438c
PCI_DEVICE_ID_ATI_IXP700_SATA  macro  include/linux/pci_ids.h  380  #define PCI_DEVICE_ID_ATI_IXP700_SATA 0x4390
PCI_DEVICE_ID_ATI_IXP700_IDE  macro  include/linux/pci_ids.h  381  #define PCI_DEVICE_ID_ATI_IXP700_IDE 0x439c
PCI_VENDOR_ID_VLSI  macro  include/linux/pci_ids.h  383  #define PCI_VENDOR_ID_VLSI 0x1004
PCI_DEVICE_ID_VLSI_82C592  macro  include/linux/pci_ids.h  384  #define PCI_DEVICE_ID_VLSI_82C592 0x0005
PCI_DEVICE_ID_VLSI_82C593  macro  include/linux/pci_ids.h  385  #define PCI_DEVICE_ID_VLSI_82C593 0x0006
PCI_DEVICE_ID_VLSI_82C594  macro  include/linux/pci_ids.h  386  #define PCI_DEVICE_ID_VLSI_82C594 0x0007
PCI_DEVICE_ID_VLSI_82C597  macro  include/linux/pci_ids.h  387  #define PCI_DEVICE_ID_VLSI_82C597 0x0009
PCI_DEVICE_ID_VLSI_82C541  macro  include/linux/pci_ids.h  388  #define PCI_DEVICE_ID_VLSI_82C541 0x000c
PCI_DEVICE_ID_VLSI_82C543  macro  include/linux/pci_ids.h  389  #define PCI_DEVICE_ID_VLSI_82C543 0x000d
PCI_DEVICE_ID_VLSI_82C532  macro  include/linux/pci_ids.h  390  #define PCI_DEVICE_ID_VLSI_82C532 0x0101
PCI_DEVICE_ID_VLSI_82C534  macro  include/linux/pci_ids.h  391  #define PCI_DEVICE_ID_VLSI_82C534 0x0102
PCI_DEVICE_ID_VLSI_82C535  macro  include/linux/pci_ids.h  392  #define PCI_DEVICE_ID_VLSI_82C535 0x0104
PCI_DEVICE_ID_VLSI_82C147  macro  include/linux/pci_ids.h  393  #define PCI_DEVICE_ID_VLSI_82C147 0x0105
PCI_DEVICE_ID_VLSI_VAS96011  macro  include/linux/pci_ids.h  394  #define PCI_DEVICE_ID_VLSI_VAS96011 0x0702
PCI_DEVICE_ID_RD890_IOMMU  macro  include/linux/pci_ids.h  397  #define PCI_DEVICE_ID_RD890_IOMMU 0x5a23
PCI_VENDOR_ID_ADL  macro  include/linux/pci_ids.h  399  #define PCI_VENDOR_ID_ADL 0x1005
PCI_DEVICE_ID_ADL_2301  macro  include/linux/pci_ids.h  400  #define PCI_DEVICE_ID_ADL_2301 0x2301
PCI_VENDOR_ID_NS  macro  include/linux/pci_ids.h  402  #define PCI_VENDOR_ID_NS 0x100b
PCI_DEVICE_ID_NS_87415  macro  include/linux/pci_ids.h  403  #define PCI_DEVICE_ID_NS_87415 0x0002
PCI_DEVICE_ID_NS_87560_LIO  macro  include/linux/pci_ids.h  404  #define PCI_DEVICE_ID_NS_87560_LIO 0x000e
PCI_DEVICE_ID_NS_87560_USB  macro  include/linux/pci_ids.h  405  #define PCI_DEVICE_ID_NS_87560_USB 0x0012
PCI_DEVICE_ID_NS_83815  macro  include/linux/pci_ids.h  406  #define PCI_DEVICE_ID_NS_83815 0x0020
PCI_DEVICE_ID_NS_83820  macro  include/linux/pci_ids.h  407  #define PCI_DEVICE_ID_NS_83820 0x0022
PCI_DEVICE_ID_NS_CS5535_ISA  macro  include/linux/pci_ids.h  408  #define PCI_DEVICE_ID_NS_CS5535_ISA 0x002b
PCI_DEVICE_ID_NS_CS5535_IDE  macro  include/linux/pci_ids.h  409  #define PCI_DEVICE_ID_NS_CS5535_IDE 0x002d
PCI_DEVICE_ID_NS_CS5535_AUDIO  macro  include/linux/pci_ids.h  410  #define PCI_DEVICE_ID_NS_CS5535_AUDIO 0x002e
PCI_DEVICE_ID_NS_CS5535_USB  macro  include/linux/pci_ids.h  411  #define PCI_DEVICE_ID_NS_CS5535_USB 0x002f
PCI_DEVICE_ID_NS_GX_VIDEO  macro  include/linux/pci_ids.h  412  #define PCI_DEVICE_ID_NS_GX_VIDEO 0x0030
PCI_DEVICE_ID_NS_SATURN  macro  include/linux/pci_ids.h  413  #define PCI_DEVICE_ID_NS_SATURN 0x0035
PCI_DEVICE_ID_NS_SCx200_BRIDGE  macro  include/linux/pci_ids.h  414  #define PCI_DEVICE_ID_NS_SCx200_BRIDGE 0x0500
PCI_DEVICE_ID_NS_SCx200_SMI  macro  include/linux/pci_ids.h  415  #define PCI_DEVICE_ID_NS_SCx200_SMI 0x0501
PCI_DEVICE_ID_NS_SCx200_IDE  macro  include/linux/pci_ids.h  416  #define PCI_DEVICE_ID_NS_SCx200_IDE 0x0502
PCI_DEVICE_ID_NS_SCx200_AUDIO  macro  include/linux/pci_ids.h  417  #define PCI_DEVICE_ID_NS_SCx200_AUDIO 0x0503
PCI_DEVICE_ID_NS_SCx200_VIDEO  macro  include/linux/pci_ids.h  418  #define PCI_DEVICE_ID_NS_SCx200_VIDEO 0x0504
PCI_DEVICE_ID_NS_SCx200_XBUS  macro  include/linux/pci_ids.h  419  #define PCI_DEVICE_ID_NS_SCx200_XBUS 0x0505
PCI_DEVICE_ID_NS_SC1100_BRIDGE  macro  include/linux/pci_ids.h  420  #define PCI_DEVICE_ID_NS_SC1100_BRIDGE 0x0510
PCI_DEVICE_ID_NS_SC1100_SMI  macro  include/linux/pci_ids.h  421  #define PCI_DEVICE_ID_NS_SC1100_SMI 0x0511
PCI_DEVICE_ID_NS_SC1100_XBUS  macro  include/linux/pci_ids.h  422  #define PCI_DEVICE_ID_NS_SC1100_XBUS 0x0515
PCI_DEVICE_ID_NS_87410  macro  include/linux/pci_ids.h  423  #define PCI_DEVICE_ID_NS_87410 0xd001
PCI_DEVICE_ID_NS_GX_HOST_BRIDGE  macro  include/linux/pci_ids.h  425  #define PCI_DEVICE_ID_NS_GX_HOST_BRIDGE 0x0028
PCI_VENDOR_ID_TSENG  macro  include/linux/pci_ids.h  427  #define PCI_VENDOR_ID_TSENG 0x100c
PCI_DEVICE_ID_TSENG_W32P_2  macro  include/linux/pci_ids.h  428  #define PCI_DEVICE_ID_TSENG_W32P_2 0x3202
PCI_DEVICE_ID_TSENG_W32P_b  macro  include/linux/pci_ids.h  429  #define PCI_DEVICE_ID_TSENG_W32P_b 0x3205
PCI_DEVICE_ID_TSENG_W32P_c  macro  include/linux/pci_ids.h  430  #define PCI_DEVICE_ID_TSENG_W32P_c 0x3206
PCI_DEVICE_ID_TSENG_W32P_d  macro  include/linux/pci_ids.h  431  #define PCI_DEVICE_ID_TSENG_W32P_d 0x3207
PCI_DEVICE_ID_TSENG_ET6000  macro  include/linux/pci_ids.h  432  #define PCI_DEVICE_ID_TSENG_ET6000 0x3208
PCI_VENDOR_ID_WEITEK  macro  include/linux/pci_ids.h  434  #define PCI_VENDOR_ID_WEITEK 0x100e
PCI_DEVICE_ID_WEITEK_P9000  macro  include/linux/pci_ids.h  435  #define PCI_DEVICE_ID_WEITEK_P9000 0x9001
PCI_DEVICE_ID_WEITEK_P9100  macro  include/linux/pci_ids.h  436  #define PCI_DEVICE_ID_WEITEK_P9100 0x9100
PCI_VENDOR_ID_DEC  macro  include/linux/pci_ids.h  438  #define PCI_VENDOR_ID_DEC 0x1011
PCI_DEVICE_ID_DEC_BRD  macro  include/linux/pci_ids.h  439  #define PCI_DEVICE_ID_DEC_BRD 0x0001
PCI_DEVICE_ID_DEC_TULIP  macro  include/linux/pci_ids.h  440  #define PCI_DEVICE_ID_DEC_TULIP 0x0002
PCI_DEVICE_ID_DEC_TGA  macro  include/linux/pci_ids.h  441  #define PCI_DEVICE_ID_DEC_TGA 0x0004
PCI_DEVICE_ID_DEC_TULIP_FAST  macro  include/linux/pci_ids.h  442  #define PCI_DEVICE_ID_DEC_TULIP_FAST 0x0009
PCI_DEVICE_ID_DEC_TGA2  macro  include/linux/pci_ids.h  443  #define PCI_DEVICE_ID_DEC_TGA2 0x000D
PCI_DEVICE_ID_DEC_FDDI  macro  include/linux/pci_ids.h  444  #define PCI_DEVICE_ID_DEC_FDDI 0x000F
PCI_DEVICE_ID_DEC_TULIP_PLUS  macro  include/linux/pci_ids.h  445  #define PCI_DEVICE_ID_DEC_TULIP_PLUS 0x0014
PCI_DEVICE_ID_DEC_21142  macro  include/linux/pci_ids.h  446  #define PCI_DEVICE_ID_DEC_21142 0x0019
PCI_DEVICE_ID_DEC_21052  macro  include/linux/pci_ids.h  447  #define PCI_DEVICE_ID_DEC_21052 0x0021
PCI_DEVICE_ID_DEC_21150  macro  include/linux/pci_ids.h  448  #define PCI_DEVICE_ID_DEC_21150 0x0022
PCI_DEVICE_ID_DEC_21152  macro  include/linux/pci_ids.h  449  #define PCI_DEVICE_ID_DEC_21152 0x0024
PCI_DEVICE_ID_DEC_21153  macro  include/linux/pci_ids.h  450  #define PCI_DEVICE_ID_DEC_21153 0x0025
PCI_DEVICE_ID_DEC_21154  macro  include/linux/pci_ids.h  451  #define PCI_DEVICE_ID_DEC_21154 0x0026
PCI_DEVICE_ID_DEC_21285  macro  include/linux/pci_ids.h  452  #define PCI_DEVICE_ID_DEC_21285 0x1065
PCI_DEVICE_ID_COMPAQ_42XX  macro  include/linux/pci_ids.h  453  #define PCI_DEVICE_ID_COMPAQ_42XX 0x0046
PCI_VENDOR_ID_CIRRUS  macro  include/linux/pci_ids.h  455  #define PCI_VENDOR_ID_CIRRUS 0x1013
PCI_DEVICE_ID_CIRRUS_7548  macro  include/linux/pci_ids.h  456  #define PCI_DEVICE_ID_CIRRUS_7548 0x0038
PCI_DEVICE_ID_CIRRUS_5430  macro  include/linux/pci_ids.h  457  #define PCI_DEVICE_ID_CIRRUS_5430 0x00a0
PCI_DEVICE_ID_CIRRUS_5434_4  macro  include/linux/pci_ids.h  458  #define PCI_DEVICE_ID_CIRRUS_5434_4 0x00a4
PCI_DEVICE_ID_CIRRUS_5434_8  macro  include/linux/pci_ids.h  459  #define PCI_DEVICE_ID_CIRRUS_5434_8 0x00a8
PCI_DEVICE_ID_CIRRUS_5436  macro  include/linux/pci_ids.h  460  #define PCI_DEVICE_ID_CIRRUS_5436 0x00ac
PCI_DEVICE_ID_CIRRUS_5446  macro  include/linux/pci_ids.h  461  #define PCI_DEVICE_ID_CIRRUS_5446 0x00b8
PCI_DEVICE_ID_CIRRUS_5480  macro  include/linux/pci_ids.h  462  #define PCI_DEVICE_ID_CIRRUS_5480 0x00bc
PCI_DEVICE_ID_CIRRUS_5462  macro  include/linux/pci_ids.h  463  #define PCI_DEVICE_ID_CIRRUS_5462 0x00d0
PCI_DEVICE_ID_CIRRUS_5464  macro  include/linux/pci_ids.h  464  #define PCI_DEVICE_ID_CIRRUS_5464 0x00d4
PCI_DEVICE_ID_CIRRUS_5465  macro  include/linux/pci_ids.h  465  #define PCI_DEVICE_ID_CIRRUS_5465 0x00d6
PCI_DEVICE_ID_CIRRUS_6729  macro  include/linux/pci_ids.h  466  #define PCI_DEVICE_ID_CIRRUS_6729 0x1100
PCI_DEVICE_ID_CIRRUS_6832  macro  include/linux/pci_ids.h  467  #define PCI_DEVICE_ID_CIRRUS_6832 0x1110
PCI_DEVICE_ID_CIRRUS_7543  macro  include/linux/pci_ids.h  468  #define PCI_DEVICE_ID_CIRRUS_7543 0x1202
PCI_DEVICE_ID_CIRRUS_4610  macro  include/linux/pci_ids.h  469  #define PCI_DEVICE_ID_CIRRUS_4610 0x6001
PCI_DEVICE_ID_CIRRUS_4612  macro  include/linux/pci_ids.h  470  #define PCI_DEVICE_ID_CIRRUS_4612 0x6003
PCI_DEVICE_ID_CIRRUS_4615  macro  include/linux/pci_ids.h  471  #define PCI_DEVICE_ID_CIRRUS_4615 0x6004
PCI_VENDOR_ID_IBM  macro  include/linux/pci_ids.h  473  #define PCI_VENDOR_ID_IBM 0x1014
PCI_DEVICE_ID_IBM_TR  macro  include/linux/pci_ids.h  474  #define PCI_DEVICE_ID_IBM_TR 0x0018
PCI_DEVICE_ID_IBM_TR_WAKE  macro  include/linux/pci_ids.h  475  #define PCI_DEVICE_ID_IBM_TR_WAKE 0x003e
PCI_DEVICE_ID_IBM_CPC710_PCI64  macro  include/linux/pci_ids.h  476  #define PCI_DEVICE_ID_IBM_CPC710_PCI64 0x00fc
PCI_DEVICE_ID_IBM_SNIPE  macro  include/linux/pci_ids.h  477  #define PCI_DEVICE_ID_IBM_SNIPE 0x0180
PCI_DEVICE_ID_IBM_CITRINE  macro  include/linux/pci_ids.h  478  #define PCI_DEVICE_ID_IBM_CITRINE 0x028C
PCI_DEVICE_ID_IBM_GEMSTONE  macro  include/linux/pci_ids.h  479  #define PCI_DEVICE_ID_IBM_GEMSTONE 0xB166
PCI_DEVICE_ID_IBM_OBSIDIAN  macro  include/linux/pci_ids.h  480  #define PCI_DEVICE_ID_IBM_OBSIDIAN 0x02BD
PCI_DEVICE_ID_IBM_ICOM_DEV_ID_1  macro  include/linux/pci_ids.h  481  #define PCI_DEVICE_ID_IBM_ICOM_DEV_ID_1 0x0031
PCI_DEVICE_ID_IBM_ICOM_DEV_ID_2  macro  include/linux/pci_ids.h  482  #define PCI_DEVICE_ID_IBM_ICOM_DEV_ID_2 0x0219
PCI_DEVICE_ID_IBM_ICOM_V2_TWO_PORTS_RVX  macro  include/linux/pci_ids.h  483  #define PCI_DEVICE_ID_IBM_ICOM_V2_TWO_PORTS_RVX 0x021A
PCI_DEVICE_ID_IBM_ICOM_V2_ONE_PORT_RVX_ONE_PORT_MDM  macro  include/linux/pci_ids.h  484  #define PCI_DEVICE_ID_IBM_ICOM_V2_ONE_PORT_RVX_ONE_PORT_MDM 0x0251
PCI_DEVICE_ID_IBM_ICOM_V2_ONE_PORT_RVX_ONE_PORT_MDM_PCIE  macro  include/linux/pci_ids.h  485  #define PCI_DEVICE_ID_IBM_ICOM_V2_ONE_PORT_RVX_ONE_PORT_MDM_PCIE 0x0361
PCI_DEVICE_ID_IBM_ICOM_FOUR_PORT_MODEL  macro  include/linux/pci_ids.h  486  #define PCI_DEVICE_ID_IBM_ICOM_FOUR_PORT_MODEL 0x252
PCI_SUBVENDOR_ID_IBM  macro  include/linux/pci_ids.h  488  #define PCI_SUBVENDOR_ID_IBM 0x1014
PCI_SUBDEVICE_ID_IBM_SATURN_SERIAL_ONE_PORT  macro  include/linux/pci_ids.h  489  #define PCI_SUBDEVICE_ID_IBM_SATURN_SERIAL_ONE_PORT 0x03d4
PCI_VENDOR_ID_UNISYS  macro  include/linux/pci_ids.h  491  #define PCI_VENDOR_ID_UNISYS 0x1018
PCI_DEVICE_ID_UNISYS_DMA_DIRECTOR  macro  include/linux/pci_ids.h  492  #define PCI_DEVICE_ID_UNISYS_DMA_DIRECTOR 0x001C
PCI_VENDOR_ID_COMPEX2  macro  include/linux/pci_ids.h  494  #define PCI_VENDOR_ID_COMPEX2 0x101a
PCI_DEVICE_ID_COMPEX2_100VG  macro  include/linux/pci_ids.h  495  #define PCI_DEVICE_ID_COMPEX2_100VG 0x0005
PCI_VENDOR_ID_WD  macro  include/linux/pci_ids.h  497  #define PCI_VENDOR_ID_WD 0x101c
PCI_DEVICE_ID_WD_90C  macro  include/linux/pci_ids.h  498  #define PCI_DEVICE_ID_WD_90C 0xc24a
PCI_VENDOR_ID_AMI  macro  include/linux/pci_ids.h  500  #define PCI_VENDOR_ID_AMI 0x101e
PCI_DEVICE_ID_AMI_MEGARAID3  macro  include/linux/pci_ids.h  501  #define PCI_DEVICE_ID_AMI_MEGARAID3 0x1960
PCI_DEVICE_ID_AMI_MEGARAID  macro  include/linux/pci_ids.h  502  #define PCI_DEVICE_ID_AMI_MEGARAID 0x9010
PCI_DEVICE_ID_AMI_MEGARAID2  macro  include/linux/pci_ids.h  503  #define PCI_DEVICE_ID_AMI_MEGARAID2 0x9060
PCI_VENDOR_ID_AMD  macro  include/linux/pci_ids.h  505  #define PCI_VENDOR_ID_AMD 0x1022
PCI_DEVICE_ID_AMD_K8_NB  macro  include/linux/pci_ids.h  506  #define PCI_DEVICE_ID_AMD_K8_NB 0x1100
PCI_DEVICE_ID_AMD_K8_NB_ADDRMAP  macro  include/linux/pci_ids.h  507  #define PCI_DEVICE_ID_AMD_K8_NB_ADDRMAP 0x1101
PCI_DEVICE_ID_AMD_K8_NB_MEMCTL  macro  include/linux/pci_ids.h  508  #define PCI_DEVICE_ID_AMD_K8_NB_MEMCTL 0x1102
PCI_DEVICE_ID_AMD_K8_NB_MISC  macro  include/linux/pci_ids.h  509  #define PCI_DEVICE_ID_AMD_K8_NB_MISC 0x1103
PCI_DEVICE_ID_AMD_10H_NB_HT  macro  include/linux/pci_ids.h  510  #define PCI_DEVICE_ID_AMD_10H_NB_HT 0x1200
PCI_DEVICE_ID_AMD_10H_NB_MAP  macro  include/linux/pci_ids.h  511  #define PCI_DEVICE_ID_AMD_10H_NB_MAP 0x1201
PCI_DEVICE_ID_AMD_10H_NB_DRAM  macro  include/linux/pci_ids.h  512  #define PCI_DEVICE_ID_AMD_10H_NB_DRAM 0x1202
PCI_DEVICE_ID_AMD_10H_NB_MISC  macro  include/linux/pci_ids.h  513  #define PCI_DEVICE_ID_AMD_10H_NB_MISC 0x1203
PCI_DEVICE_ID_AMD_10H_NB_LINK  macro  include/linux/pci_ids.h  514  #define PCI_DEVICE_ID_AMD_10H_NB_LINK 0x1204
PCI_DEVICE_ID_AMD_11H_NB_HT  macro  include/linux/pci_ids.h  515  #define PCI_DEVICE_ID_AMD_11H_NB_HT 0x1300
PCI_DEVICE_ID_AMD_11H_NB_MAP  macro  include/linux/pci_ids.h  516  #define PCI_DEVICE_ID_AMD_11H_NB_MAP 0x1301
PCI_DEVICE_ID_AMD_11H_NB_DRAM  macro  include/linux/pci_ids.h  517  #define PCI_DEVICE_ID_AMD_11H_NB_DRAM 0x1302
PCI_DEVICE_ID_AMD_11H_NB_MISC  macro  include/linux/pci_ids.h  518  #define PCI_DEVICE_ID_AMD_11H_NB_MISC 0x1303
PCI_DEVICE_ID_AMD_11H_NB_LINK  macro  include/linux/pci_ids.h  519  #define PCI_DEVICE_ID_AMD_11H_NB_LINK 0x1304
PCI_DEVICE_ID_AMD_15H_M10H_F3  macro  include/linux/pci_ids.h  520  #define PCI_DEVICE_ID_AMD_15H_M10H_F3 0x1403
PCI_DEVICE_ID_AMD_15H_NB_F0  macro  include/linux/pci_ids.h  521  #define PCI_DEVICE_ID_AMD_15H_NB_F0 0x1600
PCI_DEVICE_ID_AMD_15H_NB_F1  macro  include/linux/pci_ids.h  522  #define PCI_DEVICE_ID_AMD_15H_NB_F1 0x1601
PCI_DEVICE_ID_AMD_15H_NB_F2  macro  include/linux/pci_ids.h  523  #define PCI_DEVICE_ID_AMD_15H_NB_F2 0x1602
PCI_DEVICE_ID_AMD_15H_NB_F3  macro  include/linux/pci_ids.h  524  #define PCI_DEVICE_ID_AMD_15H_NB_F3 0x1603
PCI_DEVICE_ID_AMD_15H_NB_F4  macro  include/linux/pci_ids.h  525  #define PCI_DEVICE_ID_AMD_15H_NB_F4 0x1604
PCI_DEVICE_ID_AMD_15H_NB_F5  macro  include/linux/pci_ids.h  526  #define PCI_DEVICE_ID_AMD_15H_NB_F5 0x1605
PCI_DEVICE_ID_AMD_CNB17H_F3  macro  include/linux/pci_ids.h  527  #define PCI_DEVICE_ID_AMD_CNB17H_F3 0x1703
PCI_DEVICE_ID_AMD_LANCE  macro  include/linux/pci_ids.h  528  #define PCI_DEVICE_ID_AMD_LANCE 0x2000
PCI_DEVICE_ID_AMD_LANCE_HOME  macro  include/linux/pci_ids.h  529  #define PCI_DEVICE_ID_AMD_LANCE_HOME 0x2001
PCI_DEVICE_ID_AMD_SCSI  macro  include/linux/pci_ids.h  530  #define PCI_DEVICE_ID_AMD_SCSI 0x2020
PCI_DEVICE_ID_AMD_SERENADE  macro  include/linux/pci_ids.h  531  #define PCI_DEVICE_ID_AMD_SERENADE 0x36c0
PCI_DEVICE_ID_AMD_FE_GATE_7006  macro  include/linux/pci_ids.h  532  #define PCI_DEVICE_ID_AMD_FE_GATE_7006 0x7006
PCI_DEVICE_ID_AMD_FE_GATE_7007  macro  include/linux/pci_ids.h  533  #define PCI_DEVICE_ID_AMD_FE_GATE_7007 0x7007
PCI_DEVICE_ID_AMD_FE_GATE_700C  macro  include/linux/pci_ids.h  534  #define PCI_DEVICE_ID_AMD_FE_GATE_700C 0x700C
PCI_DEVICE_ID_AMD_FE_GATE_700E  macro  include/linux/pci_ids.h  535  #define PCI_DEVICE_ID_AMD_FE_GATE_700E 0x700E
PCI_DEVICE_ID_AMD_COBRA_7401  macro  include/linux/pci_ids.h  536  #define PCI_DEVICE_ID_AMD_COBRA_7401 0x7401
PCI_DEVICE_ID_AMD_VIPER_7409  macro  include/linux/pci_ids.h  537  #define PCI_DEVICE_ID_AMD_VIPER_7409 0x7409
PCI_DEVICE_ID_AMD_VIPER_740B  macro  include/linux/pci_ids.h  538  #define PCI_DEVICE_ID_AMD_VIPER_740B 0x740B
PCI_DEVICE_ID_AMD_VIPER_7410  macro  include/linux/pci_ids.h  539  #define PCI_DEVICE_ID_AMD_VIPER_7410 0x7410
PCI_DEVICE_ID_AMD_VIPER_7411  macro  include/linux/pci_ids.h  540  #define PCI_DEVICE_ID_AMD_VIPER_7411 0x7411
PCI_DEVICE_ID_AMD_VIPER_7413  macro  include/linux/pci_ids.h  541  #define PCI_DEVICE_ID_AMD_VIPER_7413 0x7413
PCI_DEVICE_ID_AMD_VIPER_7440  macro  include/linux/pci_ids.h  542  #define PCI_DEVICE_ID_AMD_VIPER_7440 0x7440
PCI_DEVICE_ID_AMD_OPUS_7441  macro  include/linux/pci_ids.h  543  #define PCI_DEVICE_ID_AMD_OPUS_7441 0x7441
PCI_DEVICE_ID_AMD_OPUS_7443  macro  include/linux/pci_ids.h  544  #define PCI_DEVICE_ID_AMD_OPUS_7443 0x7443
PCI_DEVICE_ID_AMD_VIPER_7443  macro  include/linux/pci_ids.h  545  #define PCI_DEVICE_ID_AMD_VIPER_7443 0x7443
PCI_DEVICE_ID_AMD_OPUS_7445  macro  include/linux/pci_ids.h  546  #define PCI_DEVICE_ID_AMD_OPUS_7445 0x7445
PCI_DEVICE_ID_AMD_8111_PCI  macro  include/linux/pci_ids.h  547  #define PCI_DEVICE_ID_AMD_8111_PCI 0x7460
PCI_DEVICE_ID_AMD_8111_LPC  macro  include/linux/pci_ids.h  548  #define PCI_DEVICE_ID_AMD_8111_LPC 0x7468
PCI_DEVICE_ID_AMD_8111_IDE  macro  include/linux/pci_ids.h  549  #define PCI_DEVICE_ID_AMD_8111_IDE 0x7469
PCI_DEVICE_ID_AMD_8111_SMBUS2  macro  include/linux/pci_ids.h  550  #define PCI_DEVICE_ID_AMD_8111_SMBUS2 0x746a
PCI_DEVICE_ID_AMD_8111_SMBUS  macro  include/linux/pci_ids.h  551  #define PCI_DEVICE_ID_AMD_8111_SMBUS 0x746b
PCI_DEVICE_ID_AMD_8111_AUDIO  macro  include/linux/pci_ids.h  552  #define PCI_DEVICE_ID_AMD_8111_AUDIO 0x746d
PCI_DEVICE_ID_AMD_8151_0  macro  include/linux/pci_ids.h  553  #define PCI_DEVICE_ID_AMD_8151_0 0x7454
PCI_DEVICE_ID_AMD_8131_BRIDGE  macro  include/linux/pci_ids.h  554  #define PCI_DEVICE_ID_AMD_8131_BRIDGE 0x7450
PCI_DEVICE_ID_AMD_8131_APIC  macro  include/linux/pci_ids.h  555  #define PCI_DEVICE_ID_AMD_8131_APIC 0x7451
PCI_DEVICE_ID_AMD_8132_BRIDGE  macro  include/linux/pci_ids.h  556  #define PCI_DEVICE_ID_AMD_8132_BRIDGE 0x7458
PCI_DEVICE_ID_AMD_HUDSON2_SMBUS  macro  include/linux/pci_ids.h  557  #define PCI_DEVICE_ID_AMD_HUDSON2_SMBUS 0x780b
PCI_DEVICE_ID_AMD_CS5535_IDE  macro  include/linux/pci_ids.h  558  #define PCI_DEVICE_ID_AMD_CS5535_IDE 0x208F
PCI_DEVICE_ID_AMD_CS5536_ISA  macro  include/linux/pci_ids.h  559  #define PCI_DEVICE_ID_AMD_CS5536_ISA 0x2090
PCI_DEVICE_ID_AMD_CS5536_FLASH  macro  include/linux/pci_ids.h  560  #define PCI_DEVICE_ID_AMD_CS5536_FLASH 0x2091
PCI_DEVICE_ID_AMD_CS5536_AUDIO  macro  include/linux/pci_ids.h  561  #define PCI_DEVICE_ID_AMD_CS5536_AUDIO 0x2093
PCI_DEVICE_ID_AMD_CS5536_OHC  macro  include/linux/pci_ids.h  562  #define PCI_DEVICE_ID_AMD_CS5536_OHC 0x2094
PCI_DEVICE_ID_AMD_CS5536_EHC  macro  include/linux/pci_ids.h  563  #define PCI_DEVICE_ID_AMD_CS5536_EHC 0x2095
PCI_DEVICE_ID_AMD_CS5536_UDC  macro  include/linux/pci_ids.h  564  #define PCI_DEVICE_ID_AMD_CS5536_UDC 0x2096
PCI_DEVICE_ID_AMD_CS5536_UOC  macro  include/linux/pci_ids.h  565  #define PCI_DEVICE_ID_AMD_CS5536_UOC 0x2097
PCI_DEVICE_ID_AMD_CS5536_IDE  macro  include/linux/pci_ids.h  566  #define PCI_DEVICE_ID_AMD_CS5536_IDE 0x209A
PCI_DEVICE_ID_AMD_LX_VIDEO  macro  include/linux/pci_ids.h  567  #define PCI_DEVICE_ID_AMD_LX_VIDEO 0x2081
PCI_DEVICE_ID_AMD_LX_AES  macro  include/linux/pci_ids.h  568  #define PCI_DEVICE_ID_AMD_LX_AES 0x2082
PCI_DEVICE_ID_AMD_HUDSON2_IDE  macro  include/linux/pci_ids.h  569  #define PCI_DEVICE_ID_AMD_HUDSON2_IDE 0x780c
PCI_DEVICE_ID_AMD_HUDSON2_SATA_IDE  macro  include/linux/pci_ids.h  570  #define PCI_DEVICE_ID_AMD_HUDSON2_SATA_IDE 0x7800
PCI_VENDOR_ID_TRIDENT  macro  include/linux/pci_ids.h  572  #define PCI_VENDOR_ID_TRIDENT 0x1023
PCI_DEVICE_ID_TRIDENT_4DWAVE_DX  macro  include/linux/pci_ids.h  573  #define PCI_DEVICE_ID_TRIDENT_4DWAVE_DX 0x2000
PCI_DEVICE_ID_TRIDENT_4DWAVE_NX  macro  include/linux/pci_ids.h  574  #define PCI_DEVICE_ID_TRIDENT_4DWAVE_NX 0x2001
PCI_DEVICE_ID_TRIDENT_9320  macro  include/linux/pci_ids.h  575  #define PCI_DEVICE_ID_TRIDENT_9320 0x9320
PCI_DEVICE_ID_TRIDENT_9388  macro  include/linux/pci_ids.h  576  #define PCI_DEVICE_ID_TRIDENT_9388 0x9388
PCI_DEVICE_ID_TRIDENT_9397  macro  include/linux/pci_ids.h  577  #define PCI_DEVICE_ID_TRIDENT_9397 0x9397
PCI_DEVICE_ID_TRIDENT_939A  macro  include/linux/pci_ids.h  578  #define PCI_DEVICE_ID_TRIDENT_939A 0x939A
PCI_DEVICE_ID_TRIDENT_9520  macro  include/linux/pci_ids.h  579  #define PCI_DEVICE_ID_TRIDENT_9520 0x9520
PCI_DEVICE_ID_TRIDENT_9525  macro  include/linux/pci_ids.h  580  #define PCI_DEVICE_ID_TRIDENT_9525 0x9525
PCI_DEVICE_ID_TRIDENT_9420  macro  include/linux/pci_ids.h  581  #define PCI_DEVICE_ID_TRIDENT_9420 0x9420
PCI_DEVICE_ID_TRIDENT_9440  macro  include/linux/pci_ids.h  582  #define PCI_DEVICE_ID_TRIDENT_9440 0x9440
PCI_DEVICE_ID_TRIDENT_9660  macro  include/linux/pci_ids.h  583  #define PCI_DEVICE_ID_TRIDENT_9660 0x9660
PCI_DEVICE_ID_TRIDENT_9750  macro  include/linux/pci_ids.h  584  #define PCI_DEVICE_ID_TRIDENT_9750 0x9750
PCI_DEVICE_ID_TRIDENT_9850  macro  include/linux/pci_ids.h  585  #define PCI_DEVICE_ID_TRIDENT_9850 0x9850
PCI_DEVICE_ID_TRIDENT_9880  macro  include/linux/pci_ids.h  586  #define PCI_DEVICE_ID_TRIDENT_9880 0x9880
PCI_DEVICE_ID_TRIDENT_8400  macro  include/linux/pci_ids.h  587  #define PCI_DEVICE_ID_TRIDENT_8400 0x8400
PCI_DEVICE_ID_TRIDENT_8420  macro  include/linux/pci_ids.h  588  #define PCI_DEVICE_ID_TRIDENT_8420 0x8420
PCI_DEVICE_ID_TRIDENT_8500  macro  include/linux/pci_ids.h  589  #define PCI_DEVICE_ID_TRIDENT_8500 0x8500
PCI_VENDOR_ID_AI  macro  include/linux/pci_ids.h  591  #define PCI_VENDOR_ID_AI 0x1025
PCI_DEVICE_ID_AI_M1435  macro  include/linux/pci_ids.h  592  #define PCI_DEVICE_ID_AI_M1435 0x1435
PCI_VENDOR_ID_DELL  macro  include/linux/pci_ids.h  594  #define PCI_VENDOR_ID_DELL 0x1028
PCI_DEVICE_ID_DELL_RACIII  macro  include/linux/pci_ids.h  595  #define PCI_DEVICE_ID_DELL_RACIII 0x0008
PCI_DEVICE_ID_DELL_RAC4  macro  include/linux/pci_ids.h  596  #define PCI_DEVICE_ID_DELL_RAC4 0x0012
PCI_DEVICE_ID_DELL_PERC5  macro  include/linux/pci_ids.h  597  #define PCI_DEVICE_ID_DELL_PERC5 0x0015
PCI_VENDOR_ID_MATROX  macro  include/linux/pci_ids.h  599  #define PCI_VENDOR_ID_MATROX 0x102B
PCI_DEVICE_ID_MATROX_MGA_2  macro  include/linux/pci_ids.h  600  #define PCI_DEVICE_ID_MATROX_MGA_2 0x0518
PCI_DEVICE_ID_MATROX_MIL  macro  include/linux/pci_ids.h  601  #define PCI_DEVICE_ID_MATROX_MIL 0x0519
PCI_DEVICE_ID_MATROX_MYS  macro  include/linux/pci_ids.h  602  #define PCI_DEVICE_ID_MATROX_MYS 0x051A
PCI_DEVICE_ID_MATROX_MIL_2  macro  include/linux/pci_ids.h  603  #define PCI_DEVICE_ID_MATROX_MIL_2 0x051b
PCI_DEVICE_ID_MATROX_MYS_AGP  macro  include/linux/pci_ids.h  604  #define PCI_DEVICE_ID_MATROX_MYS_AGP 0x051e
PCI_DEVICE_ID_MATROX_MIL_2_AGP  macro  include/linux/pci_ids.h  605  #define PCI_DEVICE_ID_MATROX_MIL_2_AGP 0x051f
PCI_DEVICE_ID_MATROX_MGA_IMP  macro  include/linux/pci_ids.h  606  #define PCI_DEVICE_ID_MATROX_MGA_IMP 0x0d10
PCI_DEVICE_ID_MATROX_G100_MM  macro  include/linux/pci_ids.h  607  #define PCI_DEVICE_ID_MATROX_G100_MM 0x1000
PCI_DEVICE_ID_MATROX_G100_AGP  macro  include/linux/pci_ids.h  608  #define PCI_DEVICE_ID_MATROX_G100_AGP 0x1001
PCI_DEVICE_ID_MATROX_G200_PCI  macro  include/linux/pci_ids.h  609  #define PCI_DEVICE_ID_MATROX_G200_PCI 0x0520
PCI_DEVICE_ID_MATROX_G200_AGP  macro  include/linux/pci_ids.h  610  #define PCI_DEVICE_ID_MATROX_G200_AGP 0x0521
PCI_DEVICE_ID_MATROX_G400  macro  include/linux/pci_ids.h  611  #define PCI_DEVICE_ID_MATROX_G400 0x0525
PCI_DEVICE_ID_MATROX_G200EV_PCI  macro  include/linux/pci_ids.h  612  #define PCI_DEVICE_ID_MATROX_G200EV_PCI 0x0530
PCI_DEVICE_ID_MATROX_G550  macro  include/linux/pci_ids.h  613  #define PCI_DEVICE_ID_MATROX_G550 0x2527
PCI_DEVICE_ID_MATROX_VIA  macro  include/linux/pci_ids.h  614  #define PCI_DEVICE_ID_MATROX_VIA 0x4536
PCI_VENDOR_ID_MOBILITY_ELECTRONICS  macro  include/linux/pci_ids.h  616  #define PCI_VENDOR_ID_MOBILITY_ELECTRONICS 0x14f2
PCI_VENDOR_ID_CT  macro  include/linux/pci_ids.h  618  #define PCI_VENDOR_ID_CT 0x102c
PCI_DEVICE_ID_CT_69000  macro  include/linux/pci_ids.h  619  #define PCI_DEVICE_ID_CT_69000 0x00c0
PCI_DEVICE_ID_CT_65545  macro  include/linux/pci_ids.h  620  #define PCI_DEVICE_ID_CT_65545 0x00d8
PCI_DEVICE_ID_CT_65548  macro  include/linux/pci_ids.h  621  #define PCI_DEVICE_ID_CT_65548 0x00dc
PCI_DEVICE_ID_CT_65550  macro  include/linux/pci_ids.h  622  #define PCI_DEVICE_ID_CT_65550 0x00e0
PCI_DEVICE_ID_CT_65554  macro  include/linux/pci_ids.h  623  #define PCI_DEVICE_ID_CT_65554 0x00e4
PCI_DEVICE_ID_CT_65555  macro  include/linux/pci_ids.h  624  #define PCI_DEVICE_ID_CT_65555 0x00e5
PCI_VENDOR_ID_MIRO  macro  include/linux/pci_ids.h  626  #define PCI_VENDOR_ID_MIRO 0x1031
PCI_DEVICE_ID_MIRO_36050  macro  include/linux/pci_ids.h  627  #define PCI_DEVICE_ID_MIRO_36050 0x5601
PCI_DEVICE_ID_MIRO_DC10PLUS  macro  include/linux/pci_ids.h  628  #define PCI_DEVICE_ID_MIRO_DC10PLUS 0x7efe
PCI_DEVICE_ID_MIRO_DC30PLUS  macro  include/linux/pci_ids.h  629  #define PCI_DEVICE_ID_MIRO_DC30PLUS 0xd801
PCI_VENDOR_ID_NEC  macro  include/linux/pci_ids.h  631  #define PCI_VENDOR_ID_NEC 0x1033
PCI_DEVICE_ID_NEC_CBUS_1  macro  include/linux/pci_ids.h  632  #define PCI_DEVICE_ID_NEC_CBUS_1 0x0001
PCI_DEVICE_ID_NEC_LOCAL  macro  include/linux/pci_ids.h  633  #define PCI_DEVICE_ID_NEC_LOCAL 0x0002
PCI_DEVICE_ID_NEC_ATM  macro  include/linux/pci_ids.h  634  #define PCI_DEVICE_ID_NEC_ATM 0x0003
PCI_DEVICE_ID_NEC_R4000  macro  include/linux/pci_ids.h  635  #define PCI_DEVICE_ID_NEC_R4000 0x0004
PCI_DEVICE_ID_NEC_486  macro  include/linux/pci_ids.h  636  #define PCI_DEVICE_ID_NEC_486 0x0005
PCI_DEVICE_ID_NEC_ACCEL_1  macro  include/linux/pci_ids.h  637  #define PCI_DEVICE_ID_NEC_ACCEL_1 0x0006
PCI_DEVICE_ID_NEC_UXBUS  macro  include/linux/pci_ids.h  638  #define PCI_DEVICE_ID_NEC_UXBUS 0x0007
PCI_DEVICE_ID_NEC_ACCEL_2  macro  include/linux/pci_ids.h  639  #define PCI_DEVICE_ID_NEC_ACCEL_2 0x0008
PCI_DEVICE_ID_NEC_GRAPH  macro  include/linux/pci_ids.h  640  #define PCI_DEVICE_ID_NEC_GRAPH 0x0009
PCI_DEVICE_ID_NEC_VL  macro  include/linux/pci_ids.h  641  #define PCI_DEVICE_ID_NEC_VL 0x0016
PCI_DEVICE_ID_NEC_STARALPHA2  macro  include/linux/pci_ids.h  642  #define PCI_DEVICE_ID_NEC_STARALPHA2 0x002c
PCI_DEVICE_ID_NEC_CBUS_2  macro  include/linux/pci_ids.h  643  #define PCI_DEVICE_ID_NEC_CBUS_2 0x002d
PCI_DEVICE_ID_NEC_USB  macro  include/linux/pci_ids.h  644  #define PCI_DEVICE_ID_NEC_USB 0x0035
PCI_DEVICE_ID_NEC_CBUS_3  macro  include/linux/pci_ids.h  645  #define PCI_DEVICE_ID_NEC_CBUS_3 0x003b
PCI_DEVICE_ID_NEC_NAPCCARD  macro  include/linux/pci_ids.h  646  #define PCI_DEVICE_ID_NEC_NAPCCARD 0x003e
PCI_DEVICE_ID_NEC_PCX2  macro  include/linux/pci_ids.h  647  #define PCI_DEVICE_ID_NEC_PCX2 0x0046
PCI_DEVICE_ID_NEC_VRC5476  macro  include/linux/pci_ids.h  648  #define PCI_DEVICE_ID_NEC_VRC5476 0x009b
PCI_DEVICE_ID_NEC_VRC4173  macro  include/linux/pci_ids.h  649  #define PCI_DEVICE_ID_NEC_VRC4173 0x00a5
PCI_DEVICE_ID_NEC_VRC5477_AC97  macro  include/linux/pci_ids.h  650  #define PCI_DEVICE_ID_NEC_VRC5477_AC97 0x00a6
PCI_DEVICE_ID_NEC_PC9821CS01  macro  include/linux/pci_ids.h  651  #define PCI_DEVICE_ID_NEC_PC9821CS01 0x800c
PCI_DEVICE_ID_NEC_PC9821NRB06  macro  include/linux/pci_ids.h  652  #define PCI_DEVICE_ID_NEC_PC9821NRB06 0x800d
PCI_VENDOR_ID_FD  macro  include/linux/pci_ids.h  654  #define PCI_VENDOR_ID_FD 0x1036
PCI_DEVICE_ID_FD_36C70  macro  include/linux/pci_ids.h  655  #define PCI_DEVICE_ID_FD_36C70 0x0000
PCI_VENDOR_ID_SI  macro  include/linux/pci_ids.h  657  #define PCI_VENDOR_ID_SI 0x1039
PCI_DEVICE_ID_SI_5591_AGP  macro  include/linux/pci_ids.h  658  #define PCI_DEVICE_ID_SI_5591_AGP 0x0001
PCI_DEVICE_ID_SI_6202  macro  include/linux/pci_ids.h  659  #define PCI_DEVICE_ID_SI_6202 0x0002
PCI_DEVICE_ID_SI_503  macro  include/linux/pci_ids.h  660  #define PCI_DEVICE_ID_SI_503 0x0008
PCI_DEVICE_ID_SI_ACPI  macro  include/linux/pci_ids.h  661  #define PCI_DEVICE_ID_SI_ACPI 0x0009
PCI_DEVICE_ID_SI_SMBUS  macro  include/linux/pci_ids.h  662  #define PCI_DEVICE_ID_SI_SMBUS 0x0016
PCI_DEVICE_ID_SI_LPC  macro  include/linux/pci_ids.h  663  #define PCI_DEVICE_ID_SI_LPC 0x0018
PCI_DEVICE_ID_SI_5597_VGA  macro  include/linux/pci_ids.h  664  #define PCI_DEVICE_ID_SI_5597_VGA 0x0200
PCI_DEVICE_ID_SI_6205  macro  include/linux/pci_ids.h  665  #define PCI_DEVICE_ID_SI_6205 0x0205
PCI_DEVICE_ID_SI_501  macro  include/linux/pci_ids.h  666  #define PCI_DEVICE_ID_SI_501 0x0406
PCI_DEVICE_ID_SI_496  macro  include/linux/pci_ids.h  667  #define PCI_DEVICE_ID_SI_496 0x0496
PCI_DEVICE_ID_SI_300  macro  include/linux/pci_ids.h  668  #define PCI_DEVICE_ID_SI_300 0x0300
PCI_DEVICE_ID_SI_315H  macro  include/linux/pci_ids.h  669  #define PCI_DEVICE_ID_SI_315H 0x0310
PCI_DEVICE_ID_SI_315  macro  include/linux/pci_ids.h  670  #define PCI_DEVICE_ID_SI_315 0x0315
PCI_DEVICE_ID_SI_315PRO  macro  include/linux/pci_ids.h  671  #define PCI_DEVICE_ID_SI_315PRO 0x0325
PCI_DEVICE_ID_SI_530  macro  include/linux/pci_ids.h  672  #define PCI_DEVICE_ID_SI_530 0x0530
PCI_DEVICE_ID_SI_540  macro  include/linux/pci_ids.h  673  #define PCI_DEVICE_ID_SI_540 0x0540
PCI_DEVICE_ID_SI_550  macro  include/linux/pci_ids.h  674  #define PCI_DEVICE_ID_SI_550 0x0550
PCI_DEVICE_ID_SI_540_VGA  macro  include/linux/pci_ids.h  675  #define PCI_DEVICE_ID_SI_540_VGA 0x5300
PCI_DEVICE_ID_SI_550_VGA  macro  include/linux/pci_ids.h  676  #define PCI_DEVICE_ID_SI_550_VGA 0x5315
PCI_DEVICE_ID_SI_620  macro  include/linux/pci_ids.h  677  #define PCI_DEVICE_ID_SI_620 0x0620
PCI_DEVICE_ID_SI_630  macro  include/linux/pci_ids.h  678  #define PCI_DEVICE_ID_SI_630 0x0630
PCI_DEVICE_ID_SI_633  macro  include/linux/pci_ids.h  679  #define PCI_DEVICE_ID_SI_633 0x0633
PCI_DEVICE_ID_SI_635  macro  include/linux/pci_ids.h  680  #define PCI_DEVICE_ID_SI_635 0x0635
PCI_DEVICE_ID_SI_640  macro  include/linux/pci_ids.h  681  #define PCI_DEVICE_ID_SI_640 0x0640
PCI_DEVICE_ID_SI_645  macro  include/linux/pci_ids.h  682  #define PCI_DEVICE_ID_SI_645 0x0645
PCI_DEVICE_ID_SI_646  macro  include/linux/pci_ids.h  683  #define PCI_DEVICE_ID_SI_646 0x0646
PCI_DEVICE_ID_SI_648  macro  include/linux/pci_ids.h  684  #define PCI_DEVICE_ID_SI_648 0x0648
PCI_DEVICE_ID_SI_650  macro  include/linux/pci_ids.h  685  #define PCI_DEVICE_ID_SI_650 0x0650
PCI_DEVICE_ID_SI_651  macro  include/linux/pci_ids.h  686  #define PCI_DEVICE_ID_SI_651 0x0651
PCI_DEVICE_ID_SI_655  macro  include/linux/pci_ids.h  687  #define PCI_DEVICE_ID_SI_655 0x0655
PCI_DEVICE_ID_SI_661  macro  include/linux/pci_ids.h  688  #define PCI_DEVICE_ID_SI_661 0x0661
PCI_DEVICE_ID_SI_730  macro  include/linux/pci_ids.h  689  #define PCI_DEVICE_ID_SI_730 0x0730
PCI_DEVICE_ID_SI_733  macro  include/linux/pci_ids.h  690  #define PCI_DEVICE_ID_SI_733 0x0733
PCI_DEVICE_ID_SI_630_VGA  macro  include/linux/pci_ids.h  691  #define PCI_DEVICE_ID_SI_630_VGA 0x6300
PCI_DEVICE_ID_SI_735  macro  include/linux/pci_ids.h  692  #define PCI_DEVICE_ID_SI_735 0x0735
PCI_DEVICE_ID_SI_740  macro  include/linux/pci_ids.h  693  #define PCI_DEVICE_ID_SI_740 0x0740
PCI_DEVICE_ID_SI_741  macro  include/linux/pci_ids.h  694  #define PCI_DEVICE_ID_SI_741 0x0741
PCI_DEVICE_ID_SI_745  macro  include/linux/pci_ids.h  695  #define PCI_DEVICE_ID_SI_745 0x0745
PCI_DEVICE_ID_SI_746  macro  include/linux/pci_ids.h  696  #define PCI_DEVICE_ID_SI_746 0x0746
PCI_DEVICE_ID_SI_755  macro  include/linux/pci_ids.h  697  #define PCI_DEVICE_ID_SI_755 0x0755
PCI_DEVICE_ID_SI_760  macro  include/linux/pci_ids.h  698  #define PCI_DEVICE_ID_SI_760 0x0760
PCI_DEVICE_ID_SI_900  macro  include/linux/pci_ids.h  699  #define PCI_DEVICE_ID_SI_900 0x0900
PCI_DEVICE_ID_SI_961  macro  include/linux/pci_ids.h  700  #define PCI_DEVICE_ID_SI_961 0x0961
PCI_DEVICE_ID_SI_962  macro  include/linux/pci_ids.h  701  #define PCI_DEVICE_ID_SI_962 0x0962
PCI_DEVICE_ID_SI_963  macro  include/linux/pci_ids.h  702  #define PCI_DEVICE_ID_SI_963 0x0963
PCI_DEVICE_ID_SI_965  macro  include/linux/pci_ids.h  703  #define PCI_DEVICE_ID_SI_965 0x0965
PCI_DEVICE_ID_SI_966  macro  include/linux/pci_ids.h  704  #define PCI_DEVICE_ID_SI_966 0x0966
PCI_DEVICE_ID_SI_968  macro  include/linux/pci_ids.h  705  #define PCI_DEVICE_ID_SI_968 0x0968
PCI_DEVICE_ID_SI_1180  macro  include/linux/pci_ids.h  706  #define PCI_DEVICE_ID_SI_1180 0x1180
PCI_DEVICE_ID_SI_5511  macro  include/linux/pci_ids.h  707  #define PCI_DEVICE_ID_SI_5511 0x5511
PCI_DEVICE_ID_SI_5513  macro  include/linux/pci_ids.h  708  #define PCI_DEVICE_ID_SI_5513 0x5513
PCI_DEVICE_ID_SI_5517  macro  include/linux/pci_ids.h  709  #define PCI_DEVICE_ID_SI_5517 0x5517
PCI_DEVICE_ID_SI_5518  macro  include/linux/pci_ids.h  710  #define PCI_DEVICE_ID_SI_5518 0x5518
PCI_DEVICE_ID_SI_5571  macro  include/linux/pci_ids.h  711  #define PCI_DEVICE_ID_SI_5571 0x5571
PCI_DEVICE_ID_SI_5581  macro  include/linux/pci_ids.h  712  #define PCI_DEVICE_ID_SI_5581 0x5581
PCI_DEVICE_ID_SI_5582  macro  include/linux/pci_ids.h  713  #define PCI_DEVICE_ID_SI_5582 0x5582
PCI_DEVICE_ID_SI_5591  macro  include/linux/pci_ids.h  714  #define PCI_DEVICE_ID_SI_5591 0x5591
PCI_DEVICE_ID_SI_5596  macro  include/linux/pci_ids.h  715  #define PCI_DEVICE_ID_SI_5596 0x5596
PCI_DEVICE_ID_SI_5597  macro  include/linux/pci_ids.h  716  #define PCI_DEVICE_ID_SI_5597 0x5597
PCI_DEVICE_ID_SI_5598  macro  include/linux/pci_ids.h  717  #define PCI_DEVICE_ID_SI_5598 0x5598
PCI_DEVICE_ID_SI_5600  macro  include/linux/pci_ids.h  718  #define PCI_DEVICE_ID_SI_5600 0x5600
PCI_DEVICE_ID_SI_7012  macro  include/linux/pci_ids.h  719  #define PCI_DEVICE_ID_SI_7012 0x7012
PCI_DEVICE_ID_SI_7013  macro  include/linux/pci_ids.h  720  #define PCI_DEVICE_ID_SI_7013 0x7013
PCI_DEVICE_ID_SI_7016  macro  include/linux/pci_ids.h  721  #define PCI_DEVICE_ID_SI_7016 0x7016
PCI_DEVICE_ID_SI_7018  macro  include/linux/pci_ids.h  722  #define PCI_DEVICE_ID_SI_7018 0x7018
PCI_VENDOR_ID_HP  macro  include/linux/pci_ids.h  724  #define PCI_VENDOR_ID_HP 0x103c
PCI_DEVICE_ID_HP_VISUALIZE_EG  macro  include/linux/pci_ids.h  725  #define PCI_DEVICE_ID_HP_VISUALIZE_EG 0x1005
PCI_DEVICE_ID_HP_VISUALIZE_FX6  macro  include/linux/pci_ids.h  726  #define PCI_DEVICE_ID_HP_VISUALIZE_FX6 0x1006
PCI_DEVICE_ID_HP_VISUALIZE_FX4  macro  include/linux/pci_ids.h  727  #define PCI_DEVICE_ID_HP_VISUALIZE_FX4 0x1008
PCI_DEVICE_ID_HP_VISUALIZE_FX2  macro  include/linux/pci_ids.h  728  #define PCI_DEVICE_ID_HP_VISUALIZE_FX2 0x100a
PCI_DEVICE_ID_HP_TACHYON  macro  include/linux/pci_ids.h  729  #define PCI_DEVICE_ID_HP_TACHYON 0x1028
PCI_DEVICE_ID_HP_TACHLITE  macro  include/linux/pci_ids.h  730  #define PCI_DEVICE_ID_HP_TACHLITE 0x1029
PCI_DEVICE_ID_HP_J2585A  macro  include/linux/pci_ids.h  731  #define PCI_DEVICE_ID_HP_J2585A 0x1030
PCI_DEVICE_ID_HP_J2585B  macro  include/linux/pci_ids.h  732  #define PCI_DEVICE_ID_HP_J2585B 0x1031
PCI_DEVICE_ID_HP_J2973A  macro  include/linux/pci_ids.h  733  #define PCI_DEVICE_ID_HP_J2973A 0x1040
PCI_DEVICE_ID_HP_J2970A  macro  include/linux/pci_ids.h  734  #define PCI_DEVICE_ID_HP_J2970A 0x1042
PCI_DEVICE_ID_HP_DIVA  macro  include/linux/pci_ids.h  735  #define PCI_DEVICE_ID_HP_DIVA 0x1048
PCI_DEVICE_ID_HP_DIVA_TOSCA1  macro  include/linux/pci_ids.h  736  #define PCI_DEVICE_ID_HP_DIVA_TOSCA1 0x1049
PCI_DEVICE_ID_HP_DIVA_TOSCA2  macro  include/linux/pci_ids.h  737  #define PCI_DEVICE_ID_HP_DIVA_TOSCA2 0x104A
PCI_DEVICE_ID_HP_DIVA_MAESTRO  macro  include/linux/pci_ids.h  738  #define PCI_DEVICE_ID_HP_DIVA_MAESTRO 0x104B
PCI_DEVICE_ID_HP_REO_IOC  macro  include/linux/pci_ids.h  739  #define PCI_DEVICE_ID_HP_REO_IOC 0x10f1
PCI_DEVICE_ID_HP_VISUALIZE_FXE  macro  include/linux/pci_ids.h  740  #define PCI_DEVICE_ID_HP_VISUALIZE_FXE 0x108b
PCI_DEVICE_ID_HP_DIVA_HALFDOME  macro  include/linux/pci_ids.h  741  #define PCI_DEVICE_ID_HP_DIVA_HALFDOME 0x1223
PCI_DEVICE_ID_HP_DIVA_KEYSTONE  macro  include/linux/pci_ids.h  742  #define PCI_DEVICE_ID_HP_DIVA_KEYSTONE 0x1226
PCI_DEVICE_ID_HP_DIVA_POWERBAR  macro  include/linux/pci_ids.h  743  #define PCI_DEVICE_ID_HP_DIVA_POWERBAR 0x1227
PCI_DEVICE_ID_HP_ZX1_IOC  macro  include/linux/pci_ids.h  744  #define PCI_DEVICE_ID_HP_ZX1_IOC 0x122a
PCI_DEVICE_ID_HP_PCIX_LBA  macro  include/linux/pci_ids.h  745  #define PCI_DEVICE_ID_HP_PCIX_LBA 0x122e
PCI_DEVICE_ID_HP_SX1000_IOC  macro  include/linux/pci_ids.h  746  #define PCI_DEVICE_ID_HP_SX1000_IOC 0x127c
PCI_DEVICE_ID_HP_DIVA_EVEREST  macro  include/linux/pci_ids.h  747  #define PCI_DEVICE_ID_HP_DIVA_EVEREST 0x1282
PCI_DEVICE_ID_HP_DIVA_AUX  macro  include/linux/pci_ids.h  748  #define PCI_DEVICE_ID_HP_DIVA_AUX 0x1290
PCI_DEVICE_ID_HP_DIVA_RMP3  macro  include/linux/pci_ids.h  749  #define PCI_DEVICE_ID_HP_DIVA_RMP3 0x1301
PCI_DEVICE_ID_HP_DIVA_HURRICANE  macro  include/linux/pci_ids.h  750  #define PCI_DEVICE_ID_HP_DIVA_HURRICANE 0x132a
PCI_DEVICE_ID_HP_CISSA  macro  include/linux/pci_ids.h  751  #define PCI_DEVICE_ID_HP_CISSA 0x3220
PCI_DEVICE_ID_HP_CISSC  macro  include/linux/pci_ids.h  752  #define PCI_DEVICE_ID_HP_CISSC 0x3230
PCI_DEVICE_ID_HP_CISSD  macro  include/linux/pci_ids.h  753  #define PCI_DEVICE_ID_HP_CISSD 0x3238
PCI_DEVICE_ID_HP_CISSE  macro  include/linux/pci_ids.h  754  #define PCI_DEVICE_ID_HP_CISSE 0x323a
PCI_DEVICE_ID_HP_CISSF  macro  include/linux/pci_ids.h  755  #define PCI_DEVICE_ID_HP_CISSF 0x323b
PCI_DEVICE_ID_HP_CISSH  macro  include/linux/pci_ids.h  756  #define PCI_DEVICE_ID_HP_CISSH 0x323c
PCI_DEVICE_ID_HP_ZX2_IOC  macro  include/linux/pci_ids.h  757  #define PCI_DEVICE_ID_HP_ZX2_IOC 0x4031
PCI_VENDOR_ID_PCTECH  macro  include/linux/pci_ids.h  759  #define PCI_VENDOR_ID_PCTECH 0x1042
PCI_DEVICE_ID_PCTECH_RZ1000  macro  include/linux/pci_ids.h  760  #define PCI_DEVICE_ID_PCTECH_RZ1000 0x1000
PCI_DEVICE_ID_PCTECH_RZ1001  macro  include/linux/pci_ids.h  761  #define PCI_DEVICE_ID_PCTECH_RZ1001 0x1001
PCI_DEVICE_ID_PCTECH_SAMURAI_IDE  macro  include/linux/pci_ids.h  762  #define PCI_DEVICE_ID_PCTECH_SAMURAI_IDE 0x3020
PCI_VENDOR_ID_ASUSTEK  macro  include/linux/pci_ids.h  764  #define PCI_VENDOR_ID_ASUSTEK 0x1043
PCI_DEVICE_ID_ASUSTEK_0675  macro  include/linux/pci_ids.h  765  #define PCI_DEVICE_ID_ASUSTEK_0675 0x0675
PCI_VENDOR_ID_DPT  macro  include/linux/pci_ids.h  767  #define PCI_VENDOR_ID_DPT 0x1044
PCI_DEVICE_ID_DPT  macro  include/linux/pci_ids.h  768  #define PCI_DEVICE_ID_DPT 0xa400
PCI_VENDOR_ID_OPTI  macro  include/linux/pci_ids.h  770  #define PCI_VENDOR_ID_OPTI 0x1045
PCI_DEVICE_ID_OPTI_82C558  macro  include/linux/pci_ids.h  771  #define PCI_DEVICE_ID_OPTI_82C558 0xc558
PCI_DEVICE_ID_OPTI_82C621  macro  include/linux/pci_ids.h  772  #define PCI_DEVICE_ID_OPTI_82C621 0xc621
PCI_DEVICE_ID_OPTI_82C700  macro  include/linux/pci_ids.h  773  #define PCI_DEVICE_ID_OPTI_82C700 0xc700
PCI_DEVICE_ID_OPTI_82C825  macro  include/linux/pci_ids.h  774  #define PCI_DEVICE_ID_OPTI_82C825 0xd568
PCI_VENDOR_ID_ELSA  macro  include/linux/pci_ids.h  776  #define PCI_VENDOR_ID_ELSA 0x1048
PCI_DEVICE_ID_ELSA_MICROLINK  macro  include/linux/pci_ids.h  777  #define PCI_DEVICE_ID_ELSA_MICROLINK 0x1000
PCI_DEVICE_ID_ELSA_QS3000  macro  include/linux/pci_ids.h  778  #define PCI_DEVICE_ID_ELSA_QS3000 0x3000
PCI_VENDOR_ID_STMICRO  macro  include/linux/pci_ids.h  780  #define PCI_VENDOR_ID_STMICRO 0x104A
PCI_DEVICE_ID_STMICRO_USB_HOST  macro  include/linux/pci_ids.h  781  #define PCI_DEVICE_ID_STMICRO_USB_HOST 0xCC00
PCI_DEVICE_ID_STMICRO_USB_OHCI  macro  include/linux/pci_ids.h  782  #define PCI_DEVICE_ID_STMICRO_USB_OHCI 0xCC01
PCI_DEVICE_ID_STMICRO_USB_OTG  macro  include/linux/pci_ids.h  783  #define PCI_DEVICE_ID_STMICRO_USB_OTG 0xCC02
PCI_DEVICE_ID_STMICRO_UART_HWFC  macro  include/linux/pci_ids.h  784  #define PCI_DEVICE_ID_STMICRO_UART_HWFC 0xCC03
PCI_DEVICE_ID_STMICRO_UART_NO_HWFC  macro  include/linux/pci_ids.h  785  #define PCI_DEVICE_ID_STMICRO_UART_NO_HWFC 0xCC04
PCI_DEVICE_ID_STMICRO_SOC_DMA  macro  include/linux/pci_ids.h  786  #define PCI_DEVICE_ID_STMICRO_SOC_DMA 0xCC05
PCI_DEVICE_ID_STMICRO_SATA  macro  include/linux/pci_ids.h  787  #define PCI_DEVICE_ID_STMICRO_SATA 0xCC06
PCI_DEVICE_ID_STMICRO_I2C  macro  include/linux/pci_ids.h  788  #define PCI_DEVICE_ID_STMICRO_I2C 0xCC07
PCI_DEVICE_ID_STMICRO_SPI_HS  macro  include/linux/pci_ids.h  789  #define PCI_DEVICE_ID_STMICRO_SPI_HS 0xCC08
PCI_DEVICE_ID_STMICRO_MAC  macro  include/linux/pci_ids.h  790  #define PCI_DEVICE_ID_STMICRO_MAC 0xCC09
PCI_DEVICE_ID_STMICRO_SDIO_EMMC  macro  include/linux/pci_ids.h  791  #define PCI_DEVICE_ID_STMICRO_SDIO_EMMC 0xCC0A
PCI_DEVICE_ID_STMICRO_SDIO  macro  include/linux/pci_ids.h  792  #define PCI_DEVICE_ID_STMICRO_SDIO 0xCC0B
PCI_DEVICE_ID_STMICRO_GPIO  macro  include/linux/pci_ids.h  793  #define PCI_DEVICE_ID_STMICRO_GPIO 0xCC0C
PCI_DEVICE_ID_STMICRO_VIP  macro  include/linux/pci_ids.h  794  #define PCI_DEVICE_ID_STMICRO_VIP 0xCC0D
PCI_DEVICE_ID_STMICRO_AUDIO_ROUTER_DMA  macro  include/linux/pci_ids.h  795  #define PCI_DEVICE_ID_STMICRO_AUDIO_ROUTER_DMA 0xCC0E
PCI_DEVICE_ID_STMICRO_AUDIO_ROUTER_SRCS  macro  include/linux/pci_ids.h  796  #define PCI_DEVICE_ID_STMICRO_AUDIO_ROUTER_SRCS 0xCC0F
PCI_DEVICE_ID_STMICRO_AUDIO_ROUTER_MSPS  macro  include/linux/pci_ids.h  797  #define PCI_DEVICE_ID_STMICRO_AUDIO_ROUTER_MSPS 0xCC10
PCI_DEVICE_ID_STMICRO_CAN  macro  include/linux/pci_ids.h  798  #define PCI_DEVICE_ID_STMICRO_CAN 0xCC11
PCI_DEVICE_ID_STMICRO_MLB  macro  include/linux/pci_ids.h  799  #define PCI_DEVICE_ID_STMICRO_MLB 0xCC12
PCI_DEVICE_ID_STMICRO_DBP  macro  include/linux/pci_ids.h  800  #define PCI_DEVICE_ID_STMICRO_DBP 0xCC13
PCI_DEVICE_ID_STMICRO_SATA_PHY  macro  include/linux/pci_ids.h  801  #define PCI_DEVICE_ID_STMICRO_SATA_PHY 0xCC14
PCI_DEVICE_ID_STMICRO_ESRAM  macro  include/linux/pci_ids.h  802  #define PCI_DEVICE_ID_STMICRO_ESRAM 0xCC15
PCI_DEVICE_ID_STMICRO_VIC  macro  include/linux/pci_ids.h  803  #define PCI_DEVICE_ID_STMICRO_VIC 0xCC16
PCI_VENDOR_ID_BUSLOGIC  macro  include/linux/pci_ids.h  805  #define PCI_VENDOR_ID_BUSLOGIC 0x104B
PCI_DEVICE_ID_BUSLOGIC_MULTIMASTER_NC  macro  include/linux/pci_ids.h  806  #define PCI_DEVICE_ID_BUSLOGIC_MULTIMASTER_NC 0x0140
PCI_DEVICE_ID_BUSLOGIC_MULTIMASTER  macro  include/linux/pci_ids.h  807  #define PCI_DEVICE_ID_BUSLOGIC_MULTIMASTER 0x1040
PCI_DEVICE_ID_BUSLOGIC_FLASHPOINT  macro  include/linux/pci_ids.h  808  #define PCI_DEVICE_ID_BUSLOGIC_FLASHPOINT 0x8130
PCI_VENDOR_ID_TI  macro  include/linux/pci_ids.h  810  #define PCI_VENDOR_ID_TI 0x104c
PCI_DEVICE_ID_TI_TVP4020  macro  include/linux/pci_ids.h  811  #define PCI_DEVICE_ID_TI_TVP4020 0x3d07
PCI_DEVICE_ID_TI_4450  macro  include/linux/pci_ids.h  812  #define PCI_DEVICE_ID_TI_4450 0x8011
PCI_DEVICE_ID_TI_XX21_XX11  macro  include/linux/pci_ids.h  813  #define PCI_DEVICE_ID_TI_XX21_XX11 0x8031
PCI_DEVICE_ID_TI_XX21_XX11_FM  macro  include/linux/pci_ids.h  814  #define PCI_DEVICE_ID_TI_XX21_XX11_FM 0x8033
PCI_DEVICE_ID_TI_XX21_XX11_SD  macro  include/linux/pci_ids.h  815  #define PCI_DEVICE_ID_TI_XX21_XX11_SD 0x8034
PCI_DEVICE_ID_TI_X515  macro  include/linux/pci_ids.h  816  #define PCI_DEVICE_ID_TI_X515 0x8036
PCI_DEVICE_ID_TI_XX12  macro  include/linux/pci_ids.h  817  #define PCI_DEVICE_ID_TI_XX12 0x8039
PCI_DEVICE_ID_TI_XX12_FM  macro  include/linux/pci_ids.h  818  #define PCI_DEVICE_ID_TI_XX12_FM 0x803b
PCI_DEVICE_ID_TI_XIO2000A  macro  include/linux/pci_ids.h  819  #define PCI_DEVICE_ID_TI_XIO2000A 0x8231
PCI_DEVICE_ID_TI_1130  macro  include/linux/pci_ids.h  820  #define PCI_DEVICE_ID_TI_1130 0xac12
PCI_DEVICE_ID_TI_1031  macro  include/linux/pci_ids.h  821  #define PCI_DEVICE_ID_TI_1031 0xac13
PCI_DEVICE_ID_TI_1131  macro  include/linux/pci_ids.h  822  #define PCI_DEVICE_ID_TI_1131 0xac15
PCI_DEVICE_ID_TI_1250  macro  include/linux/pci_ids.h  823  #define PCI_DEVICE_ID_TI_1250 0xac16
PCI_DEVICE_ID_TI_1220  macro  include/linux/pci_ids.h  824  #define PCI_DEVICE_ID_TI_1220 0xac17
PCI_DEVICE_ID_TI_1221  macro  include/linux/pci_ids.h  825  #define PCI_DEVICE_ID_TI_1221 0xac19
PCI_DEVICE_ID_TI_1210  macro  include/linux/pci_ids.h  826  #define PCI_DEVICE_ID_TI_1210 0xac1a
PCI_DEVICE_ID_TI_1450  macro  include/linux/pci_ids.h  827  #define PCI_DEVICE_ID_TI_1450 0xac1b
PCI_DEVICE_ID_TI_1225  macro  include/linux/pci_ids.h  828  #define PCI_DEVICE_ID_TI_1225 0xac1c
PCI_DEVICE_ID_TI_1251A  macro  include/linux/pci_ids.h  829  #define PCI_DEVICE_ID_TI_1251A 0xac1d
PCI_DEVICE_ID_TI_1211  macro  include/linux/pci_ids.h  830  #define PCI_DEVICE_ID_TI_1211 0xac1e
PCI_DEVICE_ID_TI_1251B  macro  include/linux/pci_ids.h  831  #define PCI_DEVICE_ID_TI_1251B 0xac1f
PCI_DEVICE_ID_TI_4410  macro  include/linux/pci_ids.h  832  #define PCI_DEVICE_ID_TI_4410 0xac41
PCI_DEVICE_ID_TI_4451  macro  include/linux/pci_ids.h  833  #define PCI_DEVICE_ID_TI_4451 0xac42
PCI_DEVICE_ID_TI_4510  macro  include/linux/pci_ids.h  834  #define PCI_DEVICE_ID_TI_4510 0xac44
PCI_DEVICE_ID_TI_4520  macro  include/linux/pci_ids.h  835  #define PCI_DEVICE_ID_TI_4520 0xac46
PCI_DEVICE_ID_TI_7510  macro  include/linux/pci_ids.h  836  #define PCI_DEVICE_ID_TI_7510 0xac47
PCI_DEVICE_ID_TI_7610  macro  include/linux/pci_ids.h  837  #define PCI_DEVICE_ID_TI_7610 0xac48
PCI_DEVICE_ID_TI_7410  macro  include/linux/pci_ids.h  838  #define PCI_DEVICE_ID_TI_7410 0xac49
PCI_DEVICE_ID_TI_1410  macro  include/linux/pci_ids.h  839  #define PCI_DEVICE_ID_TI_1410 0xac50
PCI_DEVICE_ID_TI_1420  macro  include/linux/pci_ids.h  840  #define PCI_DEVICE_ID_TI_1420 0xac51
PCI_DEVICE_ID_TI_1451A  macro  include/linux/pci_ids.h  841  #define PCI_DEVICE_ID_TI_1451A 0xac52
PCI_DEVICE_ID_TI_1620  macro  include/linux/pci_ids.h  842  #define PCI_DEVICE_ID_TI_1620 0xac54
PCI_DEVICE_ID_TI_1520  macro  include/linux/pci_ids.h  843  #define PCI_DEVICE_ID_TI_1520 0xac55
PCI_DEVICE_ID_TI_1510  macro  include/linux/pci_ids.h  844  #define PCI_DEVICE_ID_TI_1510 0xac56
PCI_DEVICE_ID_TI_X620  macro  include/linux/pci_ids.h  845  #define PCI_DEVICE_ID_TI_X620 0xac8d
PCI_DEVICE_ID_TI_X420  macro  include/linux/pci_ids.h  846  #define PCI_DEVICE_ID_TI_X420 0xac8e
PCI_DEVICE_ID_TI_XX20_FM  macro  include/linux/pci_ids.h  847  #define PCI_DEVICE_ID_TI_XX20_FM 0xac8f
PCI_VENDOR_ID_SONY  macro  include/linux/pci_ids.h  849  #define PCI_VENDOR_ID_SONY 0x104d
PCI_VENDOR_ID_WINBOND2  macro  include/linux/pci_ids.h  852  #define PCI_VENDOR_ID_WINBOND2 0x1050
PCI_DEVICE_ID_WINBOND2_89C940F  macro  include/linux/pci_ids.h  853  #define PCI_DEVICE_ID_WINBOND2_89C940F 0x5a5a
PCI_DEVICE_ID_WINBOND2_6692  macro  include/linux/pci_ids.h  854  #define PCI_DEVICE_ID_WINBOND2_6692 0x6692
PCI_VENDOR_ID_ANIGMA  macro  include/linux/pci_ids.h  856  #define PCI_VENDOR_ID_ANIGMA 0x1051
PCI_DEVICE_ID_ANIGMA_MC145575  macro  include/linux/pci_ids.h  857  #define PCI_DEVICE_ID_ANIGMA_MC145575 0x0100
PCI_VENDOR_ID_EFAR  macro  include/linux/pci_ids.h  859  #define PCI_VENDOR_ID_EFAR 0x1055
PCI_DEVICE_ID_EFAR_SLC90E66_1  macro  include/linux/pci_ids.h  860  #define PCI_DEVICE_ID_EFAR_SLC90E66_1 0x9130
PCI_DEVICE_ID_EFAR_SLC90E66_3  macro  include/linux/pci_ids.h  861  #define PCI_DEVICE_ID_EFAR_SLC90E66_3 0x9463
PCI_VENDOR_ID_MOTOROLA  macro  include/linux/pci_ids.h  863  #define PCI_VENDOR_ID_MOTOROLA 0x1057
PCI_DEVICE_ID_MOTOROLA_MPC105  macro  include/linux/pci_ids.h  864  #define PCI_DEVICE_ID_MOTOROLA_MPC105 0x0001
PCI_DEVICE_ID_MOTOROLA_MPC106  macro  include/linux/pci_ids.h  865  #define PCI_DEVICE_ID_MOTOROLA_MPC106 0x0002
PCI_DEVICE_ID_MOTOROLA_MPC107  macro  include/linux/pci_ids.h  866  #define PCI_DEVICE_ID_MOTOROLA_MPC107 0x0004
PCI_DEVICE_ID_MOTOROLA_RAVEN  macro  include/linux/pci_ids.h  867  #define PCI_DEVICE_ID_MOTOROLA_RAVEN 0x4801
PCI_DEVICE_ID_MOTOROLA_FALCON  macro  include/linux/pci_ids.h  868  #define PCI_DEVICE_ID_MOTOROLA_FALCON 0x4802
PCI_DEVICE_ID_MOTOROLA_HAWK  macro  include/linux/pci_ids.h  869  #define PCI_DEVICE_ID_MOTOROLA_HAWK 0x4803
PCI_DEVICE_ID_MOTOROLA_HARRIER  macro  include/linux/pci_ids.h  870  #define PCI_DEVICE_ID_MOTOROLA_HARRIER 0x480b
PCI_DEVICE_ID_MOTOROLA_MPC5200  macro  include/linux/pci_ids.h  871  #define PCI_DEVICE_ID_MOTOROLA_MPC5200 0x5803
PCI_DEVICE_ID_MOTOROLA_MPC5200B  macro  include/linux/pci_ids.h  872  #define PCI_DEVICE_ID_MOTOROLA_MPC5200B 0x5809
PCI_VENDOR_ID_PROMISE  macro  include/linux/pci_ids.h  874  #define PCI_VENDOR_ID_PROMISE 0x105a
PCI_DEVICE_ID_PROMISE_20265  macro  include/linux/pci_ids.h  875  #define PCI_DEVICE_ID_PROMISE_20265 0x0d30
PCI_DEVICE_ID_PROMISE_20267  macro  include/linux/pci_ids.h  876  #define PCI_DEVICE_ID_PROMISE_20267 0x4d30
PCI_DEVICE_ID_PROMISE_20246  macro  include/linux/pci_ids.h  877  #define PCI_DEVICE_ID_PROMISE_20246 0x4d33
PCI_DEVICE_ID_PROMISE_20262  macro  include/linux/pci_ids.h  878  #define PCI_DEVICE_ID_PROMISE_20262 0x4d38
PCI_DEVICE_ID_PROMISE_20263  macro  include/linux/pci_ids.h  879  #define PCI_DEVICE_ID_PROMISE_20263 0x0D38
PCI_DEVICE_ID_PROMISE_20268  macro  include/linux/pci_ids.h  880  #define PCI_DEVICE_ID_PROMISE_20268 0x4d68
PCI_DEVICE_ID_PROMISE_20269  macro  include/linux/pci_ids.h  881  #define PCI_DEVICE_ID_PROMISE_20269 0x4d69
PCI_DEVICE_ID_PROMISE_20270  macro  include/linux/pci_ids.h  882  #define PCI_DEVICE_ID_PROMISE_20270 0x6268
PCI_DEVICE_ID_PROMISE_20271  macro  include/linux/pci_ids.h  883  #define PCI_DEVICE_ID_PROMISE_20271 0x6269
PCI_DEVICE_ID_PROMISE_20275  macro  include/linux/pci_ids.h  884  #define PCI_DEVICE_ID_PROMISE_20275 0x1275
PCI_DEVICE_ID_PROMISE_20276  macro  include/linux/pci_ids.h  885  #define PCI_DEVICE_ID_PROMISE_20276 0x5275
PCI_DEVICE_ID_PROMISE_20277  macro  include/linux/pci_ids.h  886  #define PCI_DEVICE_ID_PROMISE_20277 0x7275
PCI_VENDOR_ID_FOXCONN  macro  include/linux/pci_ids.h  888  #define PCI_VENDOR_ID_FOXCONN 0x105b
PCI_VENDOR_ID_UMC  macro  include/linux/pci_ids.h  890  #define PCI_VENDOR_ID_UMC 0x1060
PCI_DEVICE_ID_UMC_UM8673F  macro  include/linux/pci_ids.h  891  #define PCI_DEVICE_ID_UMC_UM8673F 0x0101
PCI_DEVICE_ID_UMC_UM8886BF  macro  include/linux/pci_ids.h  892  #define PCI_DEVICE_ID_UMC_UM8886BF 0x673a
PCI_DEVICE_ID_UMC_UM8886A  macro  include/linux/pci_ids.h  893  #define PCI_DEVICE_ID_UMC_UM8886A 0x886a
PCI_VENDOR_ID_PICOPOWER  macro  include/linux/pci_ids.h  895  #define PCI_VENDOR_ID_PICOPOWER 0x1066
PCI_DEVICE_ID_PICOPOWER_PT86C523  macro  include/linux/pci_ids.h  896  #define PCI_DEVICE_ID_PICOPOWER_PT86C523 0x0002
PCI_DEVICE_ID_PICOPOWER_PT86C523BBP  macro  include/linux/pci_ids.h  897  #define PCI_DEVICE_ID_PICOPOWER_PT86C523BBP 0x8002
PCI_VENDOR_ID_MYLEX  macro  include/linux/pci_ids.h  899  #define PCI_VENDOR_ID_MYLEX 0x1069
PCI_DEVICE_ID_MYLEX_DAC960_P  macro  include/linux/pci_ids.h  900  #define PCI_DEVICE_ID_MYLEX_DAC960_P 0x0001
PCI_DEVICE_ID_MYLEX_DAC960_PD  macro  include/linux/pci_ids.h  901  #define PCI_DEVICE_ID_MYLEX_DAC960_PD 0x0002
PCI_DEVICE_ID_MYLEX_DAC960_PG  macro  include/linux/pci_ids.h  902  #define PCI_DEVICE_ID_MYLEX_DAC960_PG 0x0010
PCI_DEVICE_ID_MYLEX_DAC960_LA  macro  include/linux/pci_ids.h  903  #define PCI_DEVICE_ID_MYLEX_DAC960_LA 0x0020
PCI_DEVICE_ID_MYLEX_DAC960_LP  macro  include/linux/pci_ids.h  904  #define PCI_DEVICE_ID_MYLEX_DAC960_LP 0x0050
PCI_DEVICE_ID_MYLEX_DAC960_BA  macro  include/linux/pci_ids.h  905  #define PCI_DEVICE_ID_MYLEX_DAC960_BA 0xBA56
PCI_DEVICE_ID_MYLEX_DAC960_GEM  macro  include/linux/pci_ids.h  906  #define PCI_DEVICE_ID_MYLEX_DAC960_GEM 0xB166
PCI_VENDOR_ID_APPLE  macro  include/linux/pci_ids.h  908  #define PCI_VENDOR_ID_APPLE 0x106b
PCI_DEVICE_ID_APPLE_BANDIT  macro  include/linux/pci_ids.h  909  #define PCI_DEVICE_ID_APPLE_BANDIT 0x0001
PCI_DEVICE_ID_APPLE_HYDRA  macro  include/linux/pci_ids.h  910  #define PCI_DEVICE_ID_APPLE_HYDRA 0x000e
PCI_DEVICE_ID_APPLE_UNI_N_FW  macro  include/linux/pci_ids.h  911  #define PCI_DEVICE_ID_APPLE_UNI_N_FW 0x0018
PCI_DEVICE_ID_APPLE_UNI_N_AGP  macro  include/linux/pci_ids.h  912  #define PCI_DEVICE_ID_APPLE_UNI_N_AGP 0x0020
PCI_DEVICE_ID_APPLE_UNI_N_GMAC  macro  include/linux/pci_ids.h  913  #define PCI_DEVICE_ID_APPLE_UNI_N_GMAC 0x0021
PCI_DEVICE_ID_APPLE_UNI_N_GMACP  macro  include/linux/pci_ids.h  914  #define PCI_DEVICE_ID_APPLE_UNI_N_GMACP 0x0024
PCI_DEVICE_ID_APPLE_UNI_N_AGP_P  macro  include/linux/pci_ids.h  915  #define PCI_DEVICE_ID_APPLE_UNI_N_AGP_P 0x0027
PCI_DEVICE_ID_APPLE_UNI_N_AGP15  macro  include/linux/pci_ids.h  916  #define PCI_DEVICE_ID_APPLE_UNI_N_AGP15 0x002d
PCI_DEVICE_ID_APPLE_UNI_N_PCI15  macro  include/linux/pci_ids.h  917  #define PCI_DEVICE_ID_APPLE_UNI_N_PCI15 0x002e
PCI_DEVICE_ID_APPLE_UNI_N_GMAC2  macro  include/linux/pci_ids.h  918  #define PCI_DEVICE_ID_APPLE_UNI_N_GMAC2 0x0032
PCI_DEVICE_ID_APPLE_UNI_N_ATA  macro  include/linux/pci_ids.h  919  #define PCI_DEVICE_ID_APPLE_UNI_N_ATA 0x0033
PCI_DEVICE_ID_APPLE_UNI_N_AGP2  macro  include/linux/pci_ids.h  920  #define PCI_DEVICE_ID_APPLE_UNI_N_AGP2 0x0034
PCI_DEVICE_ID_APPLE_IPID_ATA100  macro  include/linux/pci_ids.h  921  #define PCI_DEVICE_ID_APPLE_IPID_ATA100 0x003b
PCI_DEVICE_ID_APPLE_K2_ATA100  macro  include/linux/pci_ids.h  922  #define PCI_DEVICE_ID_APPLE_K2_ATA100 0x0043
PCI_DEVICE_ID_APPLE_U3_AGP  macro  include/linux/pci_ids.h  923  #define PCI_DEVICE_ID_APPLE_U3_AGP 0x004b
PCI_DEVICE_ID_APPLE_K2_GMAC  macro  include/linux/pci_ids.h  924  #define PCI_DEVICE_ID_APPLE_K2_GMAC 0x004c
PCI_DEVICE_ID_APPLE_SH_ATA  macro  include/linux/pci_ids.h  925  #define PCI_DEVICE_ID_APPLE_SH_ATA 0x0050
PCI_DEVICE_ID_APPLE_SH_SUNGEM  macro  include/linux/pci_ids.h  926  #define PCI_DEVICE_ID_APPLE_SH_SUNGEM 0x0051
PCI_DEVICE_ID_APPLE_U3L_AGP  macro  include/linux/pci_ids.h  927  #define PCI_DEVICE_ID_APPLE_U3L_AGP 0x0058
PCI_DEVICE_ID_APPLE_U3H_AGP  macro  include/linux/pci_ids.h  928  #define PCI_DEVICE_ID_APPLE_U3H_AGP 0x0059
PCI_DEVICE_ID_APPLE_U4_PCIE  macro  include/linux/pci_ids.h  929  #define PCI_DEVICE_ID_APPLE_U4_PCIE 0x005b
PCI_DEVICE_ID_APPLE_IPID2_AGP  macro  include/linux/pci_ids.h  930  #define PCI_DEVICE_ID_APPLE_IPID2_AGP 0x0066
PCI_DEVICE_ID_APPLE_IPID2_ATA  macro  include/linux/pci_ids.h  931  #define PCI_DEVICE_ID_APPLE_IPID2_ATA 0x0069
PCI_DEVICE_ID_APPLE_IPID2_FW  macro  include/linux/pci_ids.h  932  #define PCI_DEVICE_ID_APPLE_IPID2_FW 0x006a
PCI_DEVICE_ID_APPLE_IPID2_GMAC  macro  include/linux/pci_ids.h  933  #define PCI_DEVICE_ID_APPLE_IPID2_GMAC 0x006b
PCI_DEVICE_ID_APPLE_TIGON3  macro  include/linux/pci_ids.h  934  #define PCI_DEVICE_ID_APPLE_TIGON3 0x1645
PCI_VENDOR_ID_YAMAHA  macro  include/linux/pci_ids.h  936  #define PCI_VENDOR_ID_YAMAHA 0x1073
PCI_DEVICE_ID_YAMAHA_724  macro  include/linux/pci_ids.h  937  #define PCI_DEVICE_ID_YAMAHA_724 0x0004
PCI_DEVICE_ID_YAMAHA_724F  macro  include/linux/pci_ids.h  938  #define PCI_DEVICE_ID_YAMAHA_724F 0x000d
PCI_DEVICE_ID_YAMAHA_740  macro  include/linux/pci_ids.h  939  #define PCI_DEVICE_ID_YAMAHA_740 0x000a
PCI_DEVICE_ID_YAMAHA_740C  macro  include/linux/pci_ids.h  940  #define PCI_DEVICE_ID_YAMAHA_740C 0x000c
PCI_DEVICE_ID_YAMAHA_744  macro  include/linux/pci_ids.h  941  #define PCI_DEVICE_ID_YAMAHA_744 0x0010
PCI_DEVICE_ID_YAMAHA_754  macro  include/linux/pci_ids.h  942  #define PCI_DEVICE_ID_YAMAHA_754 0x0012
PCI_VENDOR_ID_QLOGIC  macro  include/linux/pci_ids.h  944  #define PCI_VENDOR_ID_QLOGIC 0x1077
PCI_DEVICE_ID_QLOGIC_ISP10160  macro  include/linux/pci_ids.h  945  #define PCI_DEVICE_ID_QLOGIC_ISP10160 0x1016
PCI_DEVICE_ID_QLOGIC_ISP1020  macro  include/linux/pci_ids.h  946  #define PCI_DEVICE_ID_QLOGIC_ISP1020 0x1020
PCI_DEVICE_ID_QLOGIC_ISP1080  macro  include/linux/pci_ids.h  947  #define PCI_DEVICE_ID_QLOGIC_ISP1080 0x1080
PCI_DEVICE_ID_QLOGIC_ISP12160  macro  include/linux/pci_ids.h  948  #define PCI_DEVICE_ID_QLOGIC_ISP12160 0x1216
PCI_DEVICE_ID_QLOGIC_ISP1240  macro  include/linux/pci_ids.h  949  #define PCI_DEVICE_ID_QLOGIC_ISP1240 0x1240
PCI_DEVICE_ID_QLOGIC_ISP1280  macro  include/linux/pci_ids.h  950  #define PCI_DEVICE_ID_QLOGIC_ISP1280 0x1280
PCI_DEVICE_ID_QLOGIC_ISP2100  macro  include/linux/pci_ids.h  951  #define PCI_DEVICE_ID_QLOGIC_ISP2100 0x2100
PCI_DEVICE_ID_QLOGIC_ISP2200  macro  include/linux/pci_ids.h  952  #define PCI_DEVICE_ID_QLOGIC_ISP2200 0x2200
PCI_DEVICE_ID_QLOGIC_ISP2300  macro  include/linux/pci_ids.h  953  #define PCI_DEVICE_ID_QLOGIC_ISP2300 0x2300
PCI_DEVICE_ID_QLOGIC_ISP2312  macro  include/linux/pci_ids.h  954  #define PCI_DEVICE_ID_QLOGIC_ISP2312 0x2312
PCI_DEVICE_ID_QLOGIC_ISP2322  macro  include/linux/pci_ids.h  955  #define PCI_DEVICE_ID_QLOGIC_ISP2322 0x2322
PCI_DEVICE_ID_QLOGIC_ISP6312  macro  include/linux/pci_ids.h  956  #define PCI_DEVICE_ID_QLOGIC_ISP6312 0x6312
PCI_DEVICE_ID_QLOGIC_ISP6322  macro  include/linux/pci_ids.h  957  #define PCI_DEVICE_ID_QLOGIC_ISP6322 0x6322
PCI_DEVICE_ID_QLOGIC_ISP2422  macro  include/linux/pci_ids.h  958  #define PCI_DEVICE_ID_QLOGIC_ISP2422 0x2422
PCI_DEVICE_ID_QLOGIC_ISP2432  macro  include/linux/pci_ids.h  959  #define PCI_DEVICE_ID_QLOGIC_ISP2432 0x2432
PCI_DEVICE_ID_QLOGIC_ISP2512  macro  include/linux/pci_ids.h  960  #define PCI_DEVICE_ID_QLOGIC_ISP2512 0x2512
PCI_DEVICE_ID_QLOGIC_ISP2522  macro  include/linux/pci_ids.h  961  #define PCI_DEVICE_ID_QLOGIC_ISP2522 0x2522
PCI_DEVICE_ID_QLOGIC_ISP5422  macro  include/linux/pci_ids.h  962  #define PCI_DEVICE_ID_QLOGIC_ISP5422 0x5422
PCI_DEVICE_ID_QLOGIC_ISP5432  macro  include/linux/pci_ids.h  963  #define PCI_DEVICE_ID_QLOGIC_ISP5432 0x5432
PCI_VENDOR_ID_CYRIX  macro  include/linux/pci_ids.h  965  #define PCI_VENDOR_ID_CYRIX 0x1078
PCI_DEVICE_ID_CYRIX_5510  macro  include/linux/pci_ids.h  966  #define PCI_DEVICE_ID_CYRIX_5510 0x0000
PCI_DEVICE_ID_CYRIX_PCI_MASTER  macro  include/linux/pci_ids.h  967  #define PCI_DEVICE_ID_CYRIX_PCI_MASTER 0x0001
PCI_DEVICE_ID_CYRIX_5520  macro  include/linux/pci_ids.h  968  #define PCI_DEVICE_ID_CYRIX_5520 0x0002
PCI_DEVICE_ID_CYRIX_5530_LEGACY  macro  include/linux/pci_ids.h  969  #define PCI_DEVICE_ID_CYRIX_5530_LEGACY 0x0100
PCI_DEVICE_ID_CYRIX_5530_IDE  macro  include/linux/pci_ids.h  970  #define PCI_DEVICE_ID_CYRIX_5530_IDE 0x0102
PCI_DEVICE_ID_CYRIX_5530_AUDIO  macro  include/linux/pci_ids.h  971  #define PCI_DEVICE_ID_CYRIX_5530_AUDIO 0x0103
PCI_DEVICE_ID_CYRIX_5530_VIDEO  macro  include/linux/pci_ids.h  972  #define PCI_DEVICE_ID_CYRIX_5530_VIDEO 0x0104
PCI_VENDOR_ID_CONTAQ  macro  include/linux/pci_ids.h  974  #define PCI_VENDOR_ID_CONTAQ 0x1080
PCI_DEVICE_ID_CONTAQ_82C693  macro  include/linux/pci_ids.h  975  #define PCI_DEVICE_ID_CONTAQ_82C693 0xc693
PCI_VENDOR_ID_OLICOM  macro  include/linux/pci_ids.h  977  #define PCI_VENDOR_ID_OLICOM 0x108d
PCI_DEVICE_ID_OLICOM_OC2325  macro  include/linux/pci_ids.h  978  #define PCI_DEVICE_ID_OLICOM_OC2325 0x0012
PCI_DEVICE_ID_OLICOM_OC2183  macro  include/linux/pci_ids.h  979  #define PCI_DEVICE_ID_OLICOM_OC2183 0x0013
PCI_DEVICE_ID_OLICOM_OC2326  macro  include/linux/pci_ids.h  980  #define PCI_DEVICE_ID_OLICOM_OC2326 0x0014
PCI_VENDOR_ID_SUN  macro  include/linux/pci_ids.h  982  #define PCI_VENDOR_ID_SUN 0x108e
PCI_DEVICE_ID_SUN_EBUS  macro  include/linux/pci_ids.h  983  #define PCI_DEVICE_ID_SUN_EBUS 0x1000
PCI_DEVICE_ID_SUN_HAPPYMEAL  macro  include/linux/pci_ids.h  984  #define PCI_DEVICE_ID_SUN_HAPPYMEAL 0x1001
PCI_DEVICE_ID_SUN_RIO_EBUS  macro  include/linux/pci_ids.h  985  #define PCI_DEVICE_ID_SUN_RIO_EBUS 0x1100
PCI_DEVICE_ID_SUN_RIO_GEM  macro  include/linux/pci_ids.h  986  #define PCI_DEVICE_ID_SUN_RIO_GEM 0x1101
PCI_DEVICE_ID_SUN_RIO_1394  macro  include/linux/pci_ids.h  987  #define PCI_DEVICE_ID_SUN_RIO_1394 0x1102
PCI_DEVICE_ID_SUN_RIO_USB  macro  include/linux/pci_ids.h  988  #define PCI_DEVICE_ID_SUN_RIO_USB 0x1103
PCI_DEVICE_ID_SUN_GEM  macro  include/linux/pci_ids.h  989  #define PCI_DEVICE_ID_SUN_GEM 0x2bad
PCI_DEVICE_ID_SUN_SIMBA  macro  include/linux/pci_ids.h  990  #define PCI_DEVICE_ID_SUN_SIMBA 0x5000
PCI_DEVICE_ID_SUN_PBM  macro  include/linux/pci_ids.h  991  #define PCI_DEVICE_ID_SUN_PBM 0x8000
PCI_DEVICE_ID_SUN_SCHIZO  macro  include/linux/pci_ids.h  992  #define PCI_DEVICE_ID_SUN_SCHIZO 0x8001
PCI_DEVICE_ID_SUN_SABRE  macro  include/linux/pci_ids.h  993  #define PCI_DEVICE_ID_SUN_SABRE 0xa000
PCI_DEVICE_ID_SUN_HUMMINGBIRD  macro  include/linux/pci_ids.h  994  #define PCI_DEVICE_ID_SUN_HUMMINGBIRD 0xa001
PCI_DEVICE_ID_SUN_TOMATILLO  macro  include/linux/pci_ids.h  995  #define PCI_DEVICE_ID_SUN_TOMATILLO 0xa801
PCI_DEVICE_ID_SUN_CASSINI  macro  include/linux/pci_ids.h  996  #define PCI_DEVICE_ID_SUN_CASSINI 0xabba
PCI_VENDOR_ID_NI  macro  include/linux/pci_ids.h  998  #define PCI_VENDOR_ID_NI 0x1093
PCI_DEVICE_ID_NI_PCI2322  macro  include/linux/pci_ids.h  999  #define PCI_DEVICE_ID_NI_PCI2322 0xd130
PCI_DEVICE_ID_NI_PCI2324  macro  include/linux/pci_ids.h  1000  #define PCI_DEVICE_ID_NI_PCI2324 0xd140
PCI_DEVICE_ID_NI_PCI2328  macro  include/linux/pci_ids.h  1001  #define PCI_DEVICE_ID_NI_PCI2328 0xd150
PCI_DEVICE_ID_NI_PXI8422_2322  macro  include/linux/pci_ids.h  1002  #define PCI_DEVICE_ID_NI_PXI8422_2322 0xd190
PCI_DEVICE_ID_NI_PXI8422_2324  macro  include/linux/pci_ids.h  1003  #define PCI_DEVICE_ID_NI_PXI8422_2324 0xd1a0
PCI_DEVICE_ID_NI_PXI8420_2322  macro  include/linux/pci_ids.h  1004  #define PCI_DEVICE_ID_NI_PXI8420_2322 0xd1d0
PCI_DEVICE_ID_NI_PXI8420_2324  macro  include/linux/pci_ids.h  1005  #define PCI_DEVICE_ID_NI_PXI8420_2324 0xd1e0
PCI_DEVICE_ID_NI_PXI8420_2328  macro  include/linux/pci_ids.h  1006  #define PCI_DEVICE_ID_NI_PXI8420_2328 0xd1f0
PCI_DEVICE_ID_NI_PXI8420_23216  macro  include/linux/pci_ids.h  1007  #define PCI_DEVICE_ID_NI_PXI8420_23216 0xd1f1
PCI_DEVICE_ID_NI_PCI2322I  macro  include/linux/pci_ids.h  1008  #define PCI_DEVICE_ID_NI_PCI2322I 0xd250
PCI_DEVICE_ID_NI_PCI2324I  macro  include/linux/pci_ids.h  1009  #define PCI_DEVICE_ID_NI_PCI2324I 0xd270
PCI_DEVICE_ID_NI_PCI23216  macro  include/linux/pci_ids.h  1010  #define PCI_DEVICE_ID_NI_PCI23216 0xd2b0
PCI_DEVICE_ID_NI_PXI8430_2322  macro  include/linux/pci_ids.h  1011  #define PCI_DEVICE_ID_NI_PXI8430_2322 0x7080
PCI_DEVICE_ID_NI_PCI8430_2322  macro  include/linux/pci_ids.h  1012  #define PCI_DEVICE_ID_NI_PCI8430_2322 0x70db
PCI_DEVICE_ID_NI_PXI8430_2324  macro  include/linux/pci_ids.h  1013  #define PCI_DEVICE_ID_NI_PXI8430_2324 0x70dd
PCI_DEVICE_ID_NI_PCI8430_2324  macro  include/linux/pci_ids.h  1014  #define PCI_DEVICE_ID_NI_PCI8430_2324 0x70df
PCI_DEVICE_ID_NI_PXI8430_2328  macro  include/linux/pci_ids.h  1015  #define PCI_DEVICE_ID_NI_PXI8430_2328 0x70e2
PCI_DEVICE_ID_NI_PCI8430_2328  macro  include/linux/pci_ids.h  1016  #define PCI_DEVICE_ID_NI_PCI8430_2328 0x70e4
PCI_DEVICE_ID_NI_PXI8430_23216  macro  include/linux/pci_ids.h  1017  #define PCI_DEVICE_ID_NI_PXI8430_23216 0x70e6
PCI_DEVICE_ID_NI_PCI8430_23216  macro  include/linux/pci_ids.h  1018  #define PCI_DEVICE_ID_NI_PCI8430_23216 0x70e7
PCI_DEVICE_ID_NI_PXI8432_2322  macro  include/linux/pci_ids.h  1019  #define PCI_DEVICE_ID_NI_PXI8432_2322 0x70e8
PCI_DEVICE_ID_NI_PCI8432_2322  macro  include/linux/pci_ids.h  1020  #define PCI_DEVICE_ID_NI_PCI8432_2322 0x70ea
PCI_DEVICE_ID_NI_PXI8432_2324  macro  include/linux/pci_ids.h  1021  #define PCI_DEVICE_ID_NI_PXI8432_2324 0x70ec
PCI_DEVICE_ID_NI_PCI8432_2324  macro  include/linux/pci_ids.h  1022  #define PCI_DEVICE_ID_NI_PCI8432_2324 0x70ee
PCI_VENDOR_ID_CMD  macro  include/linux/pci_ids.h  1024  #define PCI_VENDOR_ID_CMD 0x1095
PCI_DEVICE_ID_CMD_643  macro  include/linux/pci_ids.h  1025  #define PCI_DEVICE_ID_CMD_643 0x0643
PCI_DEVICE_ID_CMD_646  macro  include/linux/pci_ids.h  1026  #define PCI_DEVICE_ID_CMD_646 0x0646
PCI_DEVICE_ID_CMD_648  macro  include/linux/pci_ids.h  1027  #define PCI_DEVICE_ID_CMD_648 0x0648
PCI_DEVICE_ID_CMD_649  macro  include/linux/pci_ids.h  1028  #define PCI_DEVICE_ID_CMD_649 0x0649
PCI_DEVICE_ID_SII_680  macro  include/linux/pci_ids.h  1030  #define PCI_DEVICE_ID_SII_680 0x0680
PCI_DEVICE_ID_SII_3112  macro  include/linux/pci_ids.h  1031  #define PCI_DEVICE_ID_SII_3112 0x3112
PCI_DEVICE_ID_SII_1210SA  macro  include/linux/pci_ids.h  1032  #define PCI_DEVICE_ID_SII_1210SA 0x0240
PCI_VENDOR_ID_BROOKTREE  macro  include/linux/pci_ids.h  1034  #define PCI_VENDOR_ID_BROOKTREE 0x109e
PCI_DEVICE_ID_BROOKTREE_878  macro  include/linux/pci_ids.h  1035  #define PCI_DEVICE_ID_BROOKTREE_878 0x0878
PCI_DEVICE_ID_BROOKTREE_879  macro  include/linux/pci_ids.h  1036  #define PCI_DEVICE_ID_BROOKTREE_879 0x0879
PCI_VENDOR_ID_SGI  macro  include/linux/pci_ids.h  1038  #define PCI_VENDOR_ID_SGI 0x10a9
PCI_DEVICE_ID_SGI_IOC3  macro  include/linux/pci_ids.h  1039  #define PCI_DEVICE_ID_SGI_IOC3 0x0003
PCI_DEVICE_ID_SGI_LITHIUM  macro  include/linux/pci_ids.h  1040  #define PCI_DEVICE_ID_SGI_LITHIUM 0x1002
PCI_DEVICE_ID_SGI_IOC4  macro  include/linux/pci_ids.h  1041  #define PCI_DEVICE_ID_SGI_IOC4 0x100a
PCI_VENDOR_ID_WINBOND  macro  include/linux/pci_ids.h  1043  #define PCI_VENDOR_ID_WINBOND 0x10ad
PCI_DEVICE_ID_WINBOND_82C105  macro  include/linux/pci_ids.h  1044  #define PCI_DEVICE_ID_WINBOND_82C105 0x0105
PCI_DEVICE_ID_WINBOND_83C553  macro  include/linux/pci_ids.h  1045  #define PCI_DEVICE_ID_WINBOND_83C553 0x0565
PCI_VENDOR_ID_PLX  macro  include/linux/pci_ids.h  1047  #define PCI_VENDOR_ID_PLX 0x10b5
PCI_DEVICE_ID_PLX_R685  macro  include/linux/pci_ids.h  1048  #define PCI_DEVICE_ID_PLX_R685 0x1030
PCI_DEVICE_ID_PLX_ROMULUS  macro  include/linux/pci_ids.h  1049  #define PCI_DEVICE_ID_PLX_ROMULUS 0x106a
PCI_DEVICE_ID_PLX_SPCOM800  macro  include/linux/pci_ids.h  1050  #define PCI_DEVICE_ID_PLX_SPCOM800 0x1076
PCI_DEVICE_ID_PLX_1077  macro  include/linux/pci_ids.h  1051  #define PCI_DEVICE_ID_PLX_1077 0x1077
PCI_DEVICE_ID_PLX_SPCOM200  macro  include/linux/pci_ids.h  1052  #define PCI_DEVICE_ID_PLX_SPCOM200 0x1103
PCI_DEVICE_ID_PLX_DJINN_ITOO  macro  include/linux/pci_ids.h  1053  #define PCI_DEVICE_ID_PLX_DJINN_ITOO 0x1151
PCI_DEVICE_ID_PLX_R753  macro  include/linux/pci_ids.h  1054  #define PCI_DEVICE_ID_PLX_R753 0x1152
PCI_DEVICE_ID_PLX_OLITEC  macro  include/linux/pci_ids.h  1055  #define PCI_DEVICE_ID_PLX_OLITEC 0x1187
PCI_DEVICE_ID_PLX_PCI200SYN  macro  include/linux/pci_ids.h  1056  #define PCI_DEVICE_ID_PLX_PCI200SYN 0x3196
PCI_DEVICE_ID_PLX_9030  macro  include/linux/pci_ids.h  1057  #define PCI_DEVICE_ID_PLX_9030 0x9030
PCI_DEVICE_ID_PLX_9050  macro  include/linux/pci_ids.h  1058  #define PCI_DEVICE_ID_PLX_9050 0x9050
PCI_DEVICE_ID_PLX_9056  macro  include/linux/pci_ids.h  1059  #define PCI_DEVICE_ID_PLX_9056 0x9056
PCI_DEVICE_ID_PLX_9080  macro  include/linux/pci_ids.h  1060  #define PCI_DEVICE_ID_PLX_9080 0x9080
PCI_DEVICE_ID_PLX_GTEK_SERIAL2  macro  include/linux/pci_ids.h  1061  #define PCI_DEVICE_ID_PLX_GTEK_SERIAL2 0xa001
PCI_VENDOR_ID_MADGE  macro  include/linux/pci_ids.h  1063  #define PCI_VENDOR_ID_MADGE 0x10b6
PCI_DEVICE_ID_MADGE_MK2  macro  include/linux/pci_ids.h  1064  #define PCI_DEVICE_ID_MADGE_MK2 0x0002
PCI_VENDOR_ID_3COM  macro  include/linux/pci_ids.h  1066  #define PCI_VENDOR_ID_3COM 0x10b7
PCI_DEVICE_ID_3COM_3C985  macro  include/linux/pci_ids.h  1067  #define PCI_DEVICE_ID_3COM_3C985 0x0001
PCI_DEVICE_ID_3COM_3C940  macro  include/linux/pci_ids.h  1068  #define PCI_DEVICE_ID_3COM_3C940 0x1700
PCI_DEVICE_ID_3COM_3C339  macro  include/linux/pci_ids.h  1069  #define PCI_DEVICE_ID_3COM_3C339 0x3390
PCI_DEVICE_ID_3COM_3C359  macro  include/linux/pci_ids.h  1070  #define PCI_DEVICE_ID_3COM_3C359 0x3590
PCI_DEVICE_ID_3COM_3C940B  macro  include/linux/pci_ids.h  1071  #define PCI_DEVICE_ID_3COM_3C940B 0x80eb
PCI_DEVICE_ID_3COM_3CR990  macro  include/linux/pci_ids.h  1072  #define PCI_DEVICE_ID_3COM_3CR990 0x9900
PCI_DEVICE_ID_3COM_3CR990_TX_95  macro  include/linux/pci_ids.h  1073  #define PCI_DEVICE_ID_3COM_3CR990_TX_95 0x9902
PCI_DEVICE_ID_3COM_3CR990_TX_97  macro  include/linux/pci_ids.h  1074  #define PCI_DEVICE_ID_3COM_3CR990_TX_97 0x9903
PCI_DEVICE_ID_3COM_3CR990B  macro  include/linux/pci_ids.h  1075  #define PCI_DEVICE_ID_3COM_3CR990B 0x9904
PCI_DEVICE_ID_3COM_3CR990_FX  macro  include/linux/pci_ids.h  1076  #define PCI_DEVICE_ID_3COM_3CR990_FX 0x9905
PCI_DEVICE_ID_3COM_3CR990SVR95  macro  include/linux/pci_ids.h  1077  #define PCI_DEVICE_ID_3COM_3CR990SVR95 0x9908
PCI_DEVICE_ID_3COM_3CR990SVR97  macro  include/linux/pci_ids.h  1078  #define PCI_DEVICE_ID_3COM_3CR990SVR97 0x9909
PCI_DEVICE_ID_3COM_3CR990SVR  macro  include/linux/pci_ids.h  1079  #define PCI_DEVICE_ID_3COM_3CR990SVR 0x990a
PCI_VENDOR_ID_AL  macro  include/linux/pci_ids.h  1081  #define PCI_VENDOR_ID_AL 0x10b9
PCI_DEVICE_ID_AL_M1533  macro  include/linux/pci_ids.h  1082  #define PCI_DEVICE_ID_AL_M1533 0x1533
PCI_DEVICE_ID_AL_M1535  macro  include/linux/pci_ids.h  1083  #define PCI_DEVICE_ID_AL_M1535 0x1535
PCI_DEVICE_ID_AL_M1541  macro  include/linux/pci_ids.h  1084  #define PCI_DEVICE_ID_AL_M1541 0x1541
PCI_DEVICE_ID_AL_M1563  macro  include/linux/pci_ids.h  1085  #define PCI_DEVICE_ID_AL_M1563 0x1563
PCI_DEVICE_ID_AL_M1621  macro  include/linux/pci_ids.h  1086  #define PCI_DEVICE_ID_AL_M1621 0x1621
PCI_DEVICE_ID_AL_M1631  macro  include/linux/pci_ids.h  1087  #define PCI_DEVICE_ID_AL_M1631 0x1631
PCI_DEVICE_ID_AL_M1632  macro  include/linux/pci_ids.h  1088  #define PCI_DEVICE_ID_AL_M1632 0x1632
PCI_DEVICE_ID_AL_M1641  macro  include/linux/pci_ids.h  1089  #define PCI_DEVICE_ID_AL_M1641 0x1641
PCI_DEVICE_ID_AL_M1644  macro  include/linux/pci_ids.h  1090  #define PCI_DEVICE_ID_AL_M1644 0x1644
PCI_DEVICE_ID_AL_M1647  macro  include/linux/pci_ids.h  1091  #define PCI_DEVICE_ID_AL_M1647 0x1647
PCI_DEVICE_ID_AL_M1651  macro  include/linux/pci_ids.h  1092  #define PCI_DEVICE_ID_AL_M1651 0x1651
PCI_DEVICE_ID_AL_M1671  macro  include/linux/pci_ids.h  1093  #define PCI_DEVICE_ID_AL_M1671 0x1671
PCI_DEVICE_ID_AL_M1681  macro  include/linux/pci_ids.h  1094  #define PCI_DEVICE_ID_AL_M1681 0x1681
PCI_DEVICE_ID_AL_M1683  macro  include/linux/pci_ids.h  1095  #define PCI_DEVICE_ID_AL_M1683 0x1683
PCI_DEVICE_ID_AL_M1689  macro  include/linux/pci_ids.h  1096  #define PCI_DEVICE_ID_AL_M1689 0x1689
PCI_DEVICE_ID_AL_M5219  macro  include/linux/pci_ids.h  1097  #define PCI_DEVICE_ID_AL_M5219 0x5219
PCI_DEVICE_ID_AL_M5228  macro  include/linux/pci_ids.h  1098  #define PCI_DEVICE_ID_AL_M5228 0x5228
PCI_DEVICE_ID_AL_M5229  macro  include/linux/pci_ids.h  1099  #define PCI_DEVICE_ID_AL_M5229 0x5229
PCI_DEVICE_ID_AL_M5451  macro  include/linux/pci_ids.h  1100  #define PCI_DEVICE_ID_AL_M5451 0x5451
PCI_DEVICE_ID_AL_M7101  macro  include/linux/pci_ids.h  1101  #define PCI_DEVICE_ID_AL_M7101 0x7101
PCI_VENDOR_ID_NEOMAGIC  macro  include/linux/pci_ids.h  1103  #define PCI_VENDOR_ID_NEOMAGIC 0x10c8
PCI_DEVICE_ID_NEOMAGIC_NM256AV_AUDIO  macro  include/linux/pci_ids.h  1104  #define PCI_DEVICE_ID_NEOMAGIC_NM256AV_AUDIO 0x8005
PCI_DEVICE_ID_NEOMAGIC_NM256ZX_AUDIO  macro  include/linux/pci_ids.h  1105  #define PCI_DEVICE_ID_NEOMAGIC_NM256ZX_AUDIO 0x8006
PCI_DEVICE_ID_NEOMAGIC_NM256XL_PLUS_AUDIO  macro  include/linux/pci_ids.h  1106  #define PCI_DEVICE_ID_NEOMAGIC_NM256XL_PLUS_AUDIO 0x8016
PCI_VENDOR_ID_TCONRAD  macro  include/linux/pci_ids.h  1108  #define PCI_VENDOR_ID_TCONRAD 0x10da
PCI_DEVICE_ID_TCONRAD_TOKENRING  macro  include/linux/pci_ids.h  1109  #define PCI_DEVICE_ID_TCONRAD_TOKENRING 0x0508
PCI_VENDOR_ID_NVIDIA  macro  include/linux/pci_ids.h  1111  #define PCI_VENDOR_ID_NVIDIA 0x10de
PCI_DEVICE_ID_NVIDIA_TNT  macro  include/linux/pci_ids.h  1112  #define PCI_DEVICE_ID_NVIDIA_TNT 0x0020
PCI_DEVICE_ID_NVIDIA_TNT2  macro  include/linux/pci_ids.h  1113  #define PCI_DEVICE_ID_NVIDIA_TNT2 0x0028
PCI_DEVICE_ID_NVIDIA_UTNT2  macro  include/linux/pci_ids.h  1114  #define PCI_DEVICE_ID_NVIDIA_UTNT2 0x0029
PCI_DEVICE_ID_NVIDIA_TNT_UNKNOWN  macro  include/linux/pci_ids.h  1115  #define PCI_DEVICE_ID_NVIDIA_TNT_UNKNOWN 0x002a
PCI_DEVICE_ID_NVIDIA_VTNT2  macro  include/linux/pci_ids.h  1116  #define PCI_DEVICE_ID_NVIDIA_VTNT2 0x002C
PCI_DEVICE_ID_NVIDIA_UVTNT2  macro  include/linux/pci_ids.h  1117  #define PCI_DEVICE_ID_NVIDIA_UVTNT2 0x002D
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP04_SMBUS  macro  include/linux/pci_ids.h  1118  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP04_SMBUS 0x0034
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP04_IDE  macro  include/linux/pci_ids.h  1119  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP04_IDE 0x0035
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP04_SATA  macro  include/linux/pci_ids.h  1120  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP04_SATA 0x0036
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP04_SATA2  macro  include/linux/pci_ids.h  1121  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP04_SATA2 0x003e
PCI_DEVICE_ID_NVIDIA_GEFORCE_6800_ULTRA  macro  include/linux/pci_ids.h  1122  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_6800_ULTRA 0x0040
PCI_DEVICE_ID_NVIDIA_GEFORCE_6800  macro  include/linux/pci_ids.h  1123  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_6800 0x0041
PCI_DEVICE_ID_NVIDIA_GEFORCE_6800_LE  macro  include/linux/pci_ids.h  1124  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_6800_LE 0x0042
PCI_DEVICE_ID_NVIDIA_GEFORCE_6800_GT  macro  include/linux/pci_ids.h  1125  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_6800_GT 0x0045
PCI_DEVICE_ID_NVIDIA_QUADRO_FX_4000  macro  include/linux/pci_ids.h  1126  #define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_4000 0x004E
PCI_DEVICE_ID_NVIDIA_NFORCE4_SMBUS  macro  include/linux/pci_ids.h  1127  #define PCI_DEVICE_ID_NVIDIA_NFORCE4_SMBUS 0x0052
PCI_DEVICE_ID_NVIDIA_NFORCE_CK804_IDE  macro  include/linux/pci_ids.h  1128  #define PCI_DEVICE_ID_NVIDIA_NFORCE_CK804_IDE 0x0053
PCI_DEVICE_ID_NVIDIA_NFORCE_CK804_SATA  macro  include/linux/pci_ids.h  1129  #define PCI_DEVICE_ID_NVIDIA_NFORCE_CK804_SATA 0x0054
PCI_DEVICE_ID_NVIDIA_NFORCE_CK804_SATA2  macro  include/linux/pci_ids.h  1130  #define PCI_DEVICE_ID_NVIDIA_NFORCE_CK804_SATA2 0x0055
PCI_DEVICE_ID_NVIDIA_CK804_AUDIO  macro  include/linux/pci_ids.h  1131  #define PCI_DEVICE_ID_NVIDIA_CK804_AUDIO 0x0059
PCI_DEVICE_ID_NVIDIA_CK804_PCIE  macro  include/linux/pci_ids.h  1132  #define PCI_DEVICE_ID_NVIDIA_CK804_PCIE 0x005d
PCI_DEVICE_ID_NVIDIA_NFORCE2_SMBUS  macro  include/linux/pci_ids.h  1133  #define PCI_DEVICE_ID_NVIDIA_NFORCE2_SMBUS 0x0064
PCI_DEVICE_ID_NVIDIA_NFORCE2_IDE  macro  include/linux/pci_ids.h  1134  #define PCI_DEVICE_ID_NVIDIA_NFORCE2_IDE 0x0065
PCI_DEVICE_ID_NVIDIA_MCP2_MODEM  macro  include/linux/pci_ids.h  1135  #define PCI_DEVICE_ID_NVIDIA_MCP2_MODEM 0x0069
PCI_DEVICE_ID_NVIDIA_MCP2_AUDIO  macro  include/linux/pci_ids.h  1136  #define PCI_DEVICE_ID_NVIDIA_MCP2_AUDIO 0x006a
PCI_DEVICE_ID_NVIDIA_NFORCE2S_SMBUS  macro  include/linux/pci_ids.h  1137  #define PCI_DEVICE_ID_NVIDIA_NFORCE2S_SMBUS 0x0084
PCI_DEVICE_ID_NVIDIA_NFORCE2S_IDE  macro  include/linux/pci_ids.h  1138  #define PCI_DEVICE_ID_NVIDIA_NFORCE2S_IDE 0x0085
PCI_DEVICE_ID_NVIDIA_MCP2S_MODEM  macro  include/linux/pci_ids.h  1139  #define PCI_DEVICE_ID_NVIDIA_MCP2S_MODEM 0x0089
PCI_DEVICE_ID_NVIDIA_CK8_AUDIO  macro  include/linux/pci_ids.h  1140  #define PCI_DEVICE_ID_NVIDIA_CK8_AUDIO 0x008a
PCI_DEVICE_ID_NVIDIA_NFORCE2S_SATA  macro  include/linux/pci_ids.h  1141  #define PCI_DEVICE_ID_NVIDIA_NFORCE2S_SATA 0x008e
PCI_DEVICE_ID_NVIDIA_GEFORCE_7800_GT  macro  include/linux/pci_ids.h  1142  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_7800_GT 0x0090
PCI_DEVICE_ID_NVIDIA_GEFORCE_7800_GTX  macro  include/linux/pci_ids.h  1143  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_7800_GTX 0x0091
PCI_DEVICE_ID_NVIDIA_GEFORCE_GO_7800  macro  include/linux/pci_ids.h  1144  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_GO_7800 0x0098
PCI_DEVICE_ID_NVIDIA_GEFORCE_GO_7800_GTX  macro  include/linux/pci_ids.h  1145  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_GO_7800_GTX 0x0099
PCI_DEVICE_ID_NVIDIA_ITNT2  macro  include/linux/pci_ids.h  1146  #define PCI_DEVICE_ID_NVIDIA_ITNT2 0x00A0
PCI_DEVICE_ID_GEFORCE_6800A  macro  include/linux/pci_ids.h  1147  #define PCI_DEVICE_ID_GEFORCE_6800A 0x00c1
PCI_DEVICE_ID_GEFORCE_6800A_LE  macro  include/linux/pci_ids.h  1148  #define PCI_DEVICE_ID_GEFORCE_6800A_LE 0x00c2
PCI_DEVICE_ID_GEFORCE_GO_6800  macro  include/linux/pci_ids.h  1149  #define PCI_DEVICE_ID_GEFORCE_GO_6800 0x00c8
PCI_DEVICE_ID_GEFORCE_GO_6800_ULTRA  macro  include/linux/pci_ids.h  1150  #define PCI_DEVICE_ID_GEFORCE_GO_6800_ULTRA 0x00c9
PCI_DEVICE_ID_QUADRO_FX_GO1400  macro  include/linux/pci_ids.h  1151  #define PCI_DEVICE_ID_QUADRO_FX_GO1400 0x00cc
PCI_DEVICE_ID_QUADRO_FX_1400  macro  include/linux/pci_ids.h  1152  #define PCI_DEVICE_ID_QUADRO_FX_1400 0x00ce
PCI_DEVICE_ID_NVIDIA_NFORCE3  macro  include/linux/pci_ids.h  1153  #define PCI_DEVICE_ID_NVIDIA_NFORCE3 0x00d1
PCI_DEVICE_ID_NVIDIA_NFORCE3_SMBUS  macro  include/linux/pci_ids.h  1154  #define PCI_DEVICE_ID_NVIDIA_NFORCE3_SMBUS 0x00d4
PCI_DEVICE_ID_NVIDIA_NFORCE3_IDE  macro  include/linux/pci_ids.h  1155  #define PCI_DEVICE_ID_NVIDIA_NFORCE3_IDE 0x00d5
PCI_DEVICE_ID_NVIDIA_MCP3_MODEM  macro  include/linux/pci_ids.h  1156  #define PCI_DEVICE_ID_NVIDIA_MCP3_MODEM 0x00d9
PCI_DEVICE_ID_NVIDIA_MCP3_AUDIO  macro  include/linux/pci_ids.h  1157  #define PCI_DEVICE_ID_NVIDIA_MCP3_AUDIO 0x00da
PCI_DEVICE_ID_NVIDIA_NFORCE3S  macro  include/linux/pci_ids.h  1158  #define PCI_DEVICE_ID_NVIDIA_NFORCE3S 0x00e1
PCI_DEVICE_ID_NVIDIA_NFORCE3S_SATA  macro  include/linux/pci_ids.h  1159  #define PCI_DEVICE_ID_NVIDIA_NFORCE3S_SATA 0x00e3
PCI_DEVICE_ID_NVIDIA_NFORCE3S_SMBUS  macro  include/linux/pci_ids.h  1160  #define PCI_DEVICE_ID_NVIDIA_NFORCE3S_SMBUS 0x00e4
PCI_DEVICE_ID_NVIDIA_NFORCE3S_IDE  macro  include/linux/pci_ids.h  1161  #define PCI_DEVICE_ID_NVIDIA_NFORCE3S_IDE 0x00e5
PCI_DEVICE_ID_NVIDIA_CK8S_AUDIO  macro  include/linux/pci_ids.h  1162  #define PCI_DEVICE_ID_NVIDIA_CK8S_AUDIO 0x00ea
PCI_DEVICE_ID_NVIDIA_NFORCE3S_SATA2  macro  include/linux/pci_ids.h  1163  #define PCI_DEVICE_ID_NVIDIA_NFORCE3S_SATA2 0x00ee
PCIE_DEVICE_ID_NVIDIA_GEFORCE_6800_ALT1  macro  include/linux/pci_ids.h  1164  #define PCIE_DEVICE_ID_NVIDIA_GEFORCE_6800_ALT1 0x00f0
PCIE_DEVICE_ID_NVIDIA_GEFORCE_6600_ALT1  macro  include/linux/pci_ids.h  1165  #define PCIE_DEVICE_ID_NVIDIA_GEFORCE_6600_ALT1 0x00f1
PCIE_DEVICE_ID_NVIDIA_GEFORCE_6600_ALT2  macro  include/linux/pci_ids.h  1166  #define PCIE_DEVICE_ID_NVIDIA_GEFORCE_6600_ALT2 0x00f2
PCIE_DEVICE_ID_NVIDIA_GEFORCE_6200_ALT1  macro  include/linux/pci_ids.h  1167  #define PCIE_DEVICE_ID_NVIDIA_GEFORCE_6200_ALT1 0x00f3
PCIE_DEVICE_ID_NVIDIA_GEFORCE_6800_GT  macro  include/linux/pci_ids.h  1168  #define PCIE_DEVICE_ID_NVIDIA_GEFORCE_6800_GT 0x00f9
PCIE_DEVICE_ID_NVIDIA_QUADRO_NVS280  macro  include/linux/pci_ids.h  1169  #define PCIE_DEVICE_ID_NVIDIA_QUADRO_NVS280 0x00fd
PCI_DEVICE_ID_NVIDIA_GEFORCE_SDR  macro  include/linux/pci_ids.h  1170  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_SDR 0x0100
PCI_DEVICE_ID_NVIDIA_GEFORCE_DDR  macro  include/linux/pci_ids.h  1171  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_DDR 0x0101
PCI_DEVICE_ID_NVIDIA_QUADRO  macro  include/linux/pci_ids.h  1172  #define PCI_DEVICE_ID_NVIDIA_QUADRO 0x0103
PCI_DEVICE_ID_NVIDIA_GEFORCE2_MX  macro  include/linux/pci_ids.h  1173  #define PCI_DEVICE_ID_NVIDIA_GEFORCE2_MX 0x0110
PCI_DEVICE_ID_NVIDIA_GEFORCE2_MX2  macro  include/linux/pci_ids.h  1174  #define PCI_DEVICE_ID_NVIDIA_GEFORCE2_MX2 0x0111
PCI_DEVICE_ID_NVIDIA_GEFORCE2_GO  macro  include/linux/pci_ids.h  1175  #define PCI_DEVICE_ID_NVIDIA_GEFORCE2_GO 0x0112
PCI_DEVICE_ID_NVIDIA_QUADRO2_MXR  macro  include/linux/pci_ids.h  1176  #define PCI_DEVICE_ID_NVIDIA_QUADRO2_MXR 0x0113
PCI_DEVICE_ID_NVIDIA_GEFORCE_6600_GT  macro  include/linux/pci_ids.h  1177  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_6600_GT 0x0140
PCI_DEVICE_ID_NVIDIA_GEFORCE_6600  macro  include/linux/pci_ids.h  1178  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_6600 0x0141
PCI_DEVICE_ID_NVIDIA_GEFORCE_6610_XL  macro  include/linux/pci_ids.h  1179  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_6610_XL 0x0145
PCI_DEVICE_ID_NVIDIA_QUADRO_FX_540  macro  include/linux/pci_ids.h  1180  #define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_540 0x014E
PCI_DEVICE_ID_NVIDIA_GEFORCE_6200  macro  include/linux/pci_ids.h  1181  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_6200 0x014F
PCI_DEVICE_ID_NVIDIA_GEFORCE2_GTS  macro  include/linux/pci_ids.h  1182  #define PCI_DEVICE_ID_NVIDIA_GEFORCE2_GTS 0x0150
PCI_DEVICE_ID_NVIDIA_GEFORCE2_GTS2  macro  include/linux/pci_ids.h  1183  #define PCI_DEVICE_ID_NVIDIA_GEFORCE2_GTS2 0x0151
PCI_DEVICE_ID_NVIDIA_GEFORCE2_ULTRA  macro  include/linux/pci_ids.h  1184  #define PCI_DEVICE_ID_NVIDIA_GEFORCE2_ULTRA 0x0152
PCI_DEVICE_ID_NVIDIA_QUADRO2_PRO  macro  include/linux/pci_ids.h  1185  #define PCI_DEVICE_ID_NVIDIA_QUADRO2_PRO 0x0153
PCI_DEVICE_ID_NVIDIA_GEFORCE_6200_TURBOCACHE  macro  include/linux/pci_ids.h  1186  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_6200_TURBOCACHE 0x0161
PCI_DEVICE_ID_NVIDIA_GEFORCE_GO_6200  macro  include/linux/pci_ids.h  1187  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_GO_6200 0x0164
PCI_DEVICE_ID_NVIDIA_GEFORCE_GO_6250  macro  include/linux/pci_ids.h  1188  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_GO_6250 0x0166
PCI_DEVICE_ID_NVIDIA_GEFORCE_GO_6200_1  macro  include/linux/pci_ids.h  1189  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_GO_6200_1 0x0167
PCI_DEVICE_ID_NVIDIA_GEFORCE_GO_6250_1  macro  include/linux/pci_ids.h  1190  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_GO_6250_1 0x0168
PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_460  macro  include/linux/pci_ids.h  1191  #define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_460 0x0170
PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_440  macro  include/linux/pci_ids.h  1192  #define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_440 0x0171
PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_420  macro  include/linux/pci_ids.h  1193  #define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_420 0x0172
PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_440_SE  macro  include/linux/pci_ids.h  1194  #define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_440_SE 0x0173
PCI_DEVICE_ID_NVIDIA_GEFORCE4_440_GO  macro  include/linux/pci_ids.h  1195  #define PCI_DEVICE_ID_NVIDIA_GEFORCE4_440_GO 0x0174
PCI_DEVICE_ID_NVIDIA_GEFORCE4_420_GO  macro  include/linux/pci_ids.h  1196  #define PCI_DEVICE_ID_NVIDIA_GEFORCE4_420_GO 0x0175
PCI_DEVICE_ID_NVIDIA_GEFORCE4_420_GO_M32  macro  include/linux/pci_ids.h  1197  #define PCI_DEVICE_ID_NVIDIA_GEFORCE4_420_GO_M32 0x0176
PCI_DEVICE_ID_NVIDIA_GEFORCE4_460_GO  macro  include/linux/pci_ids.h  1198  #define PCI_DEVICE_ID_NVIDIA_GEFORCE4_460_GO 0x0177
PCI_DEVICE_ID_NVIDIA_QUADRO4_500XGL  macro  include/linux/pci_ids.h  1199  #define PCI_DEVICE_ID_NVIDIA_QUADRO4_500XGL 0x0178
PCI_DEVICE_ID_NVIDIA_GEFORCE4_440_GO_M64  macro  include/linux/pci_ids.h  1200  #define PCI_DEVICE_ID_NVIDIA_GEFORCE4_440_GO_M64 0x0179
PCI_DEVICE_ID_NVIDIA_QUADRO4_200  macro  include/linux/pci_ids.h  1201  #define PCI_DEVICE_ID_NVIDIA_QUADRO4_200 0x017A
PCI_DEVICE_ID_NVIDIA_QUADRO4_550XGL  macro  include/linux/pci_ids.h  1202  #define PCI_DEVICE_ID_NVIDIA_QUADRO4_550XGL 0x017B
PCI_DEVICE_ID_NVIDIA_QUADRO4_500_GOGL  macro  include/linux/pci_ids.h  1203  #define PCI_DEVICE_ID_NVIDIA_QUADRO4_500_GOGL 0x017C
PCI_DEVICE_ID_NVIDIA_GEFORCE4_410_GO_M16  macro  include/linux/pci_ids.h  1204  #define PCI_DEVICE_ID_NVIDIA_GEFORCE4_410_GO_M16 0x017D
PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_440_8X  macro  include/linux/pci_ids.h  1205  #define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_440_8X 0x0181
PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_440SE_8X  macro  include/linux/pci_ids.h  1206  #define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_440SE_8X 0x0182
PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_420_8X  macro  include/linux/pci_ids.h  1207  #define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_420_8X 0x0183
PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_4000  macro  include/linux/pci_ids.h  1208  #define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_4000 0x0185
PCI_DEVICE_ID_NVIDIA_GEFORCE4_448_GO  macro  include/linux/pci_ids.h  1209  #define PCI_DEVICE_ID_NVIDIA_GEFORCE4_448_GO 0x0186
PCI_DEVICE_ID_NVIDIA_GEFORCE4_488_GO  macro  include/linux/pci_ids.h  1210  #define PCI_DEVICE_ID_NVIDIA_GEFORCE4_488_GO 0x0187
PCI_DEVICE_ID_NVIDIA_QUADRO4_580_XGL  macro  include/linux/pci_ids.h  1211  #define PCI_DEVICE_ID_NVIDIA_QUADRO4_580_XGL 0x0188
PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_MAC  macro  include/linux/pci_ids.h  1212  #define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_MAC 0x0189
PCI_DEVICE_ID_NVIDIA_QUADRO4_280_NVS  macro  include/linux/pci_ids.h  1213  #define PCI_DEVICE_ID_NVIDIA_QUADRO4_280_NVS 0x018A
PCI_DEVICE_ID_NVIDIA_QUADRO4_380_XGL  macro  include/linux/pci_ids.h  1214  #define PCI_DEVICE_ID_NVIDIA_QUADRO4_380_XGL 0x018B
PCI_DEVICE_ID_NVIDIA_IGEFORCE2  macro  include/linux/pci_ids.h  1215  #define PCI_DEVICE_ID_NVIDIA_IGEFORCE2 0x01a0
PCI_DEVICE_ID_NVIDIA_NFORCE  macro  include/linux/pci_ids.h  1216  #define PCI_DEVICE_ID_NVIDIA_NFORCE 0x01a4
PCI_DEVICE_ID_NVIDIA_MCP1_AUDIO  macro  include/linux/pci_ids.h  1217  #define PCI_DEVICE_ID_NVIDIA_MCP1_AUDIO 0x01b1
PCI_DEVICE_ID_NVIDIA_NFORCE_SMBUS  macro  include/linux/pci_ids.h  1218  #define PCI_DEVICE_ID_NVIDIA_NFORCE_SMBUS 0x01b4
PCI_DEVICE_ID_NVIDIA_NFORCE_IDE  macro  include/linux/pci_ids.h  1219  #define PCI_DEVICE_ID_NVIDIA_NFORCE_IDE 0x01bc
PCI_DEVICE_ID_NVIDIA_MCP1_MODEM  macro  include/linux/pci_ids.h  1220  #define PCI_DEVICE_ID_NVIDIA_MCP1_MODEM 0x01c1
PCI_DEVICE_ID_NVIDIA_NFORCE2  macro  include/linux/pci_ids.h  1221  #define PCI_DEVICE_ID_NVIDIA_NFORCE2 0x01e0
PCI_DEVICE_ID_NVIDIA_GEFORCE3  macro  include/linux/pci_ids.h  1222  #define PCI_DEVICE_ID_NVIDIA_GEFORCE3 0x0200
PCI_DEVICE_ID_NVIDIA_GEFORCE3_1  macro  include/linux/pci_ids.h  1223  #define PCI_DEVICE_ID_NVIDIA_GEFORCE3_1 0x0201
PCI_DEVICE_ID_NVIDIA_GEFORCE3_2  macro  include/linux/pci_ids.h  1224  #define PCI_DEVICE_ID_NVIDIA_GEFORCE3_2 0x0202
PCI_DEVICE_ID_NVIDIA_QUADRO_DDC  macro  include/linux/pci_ids.h  1225  #define PCI_DEVICE_ID_NVIDIA_QUADRO_DDC 0x0203
PCI_DEVICE_ID_NVIDIA_GEFORCE_6800B  macro  include/linux/pci_ids.h  1226  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_6800B 0x0211
PCI_DEVICE_ID_NVIDIA_GEFORCE_6800B_LE  macro  include/linux/pci_ids.h  1227  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_6800B_LE 0x0212
PCI_DEVICE_ID_NVIDIA_GEFORCE_6800B_GT  macro  include/linux/pci_ids.h  1228  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_6800B_GT 0x0215
PCI_DEVICE_ID_NVIDIA_GEFORCE4_TI_4600  macro  include/linux/pci_ids.h  1229  #define PCI_DEVICE_ID_NVIDIA_GEFORCE4_TI_4600 0x0250
PCI_DEVICE_ID_NVIDIA_GEFORCE4_TI_4400  macro  include/linux/pci_ids.h  1230  #define PCI_DEVICE_ID_NVIDIA_GEFORCE4_TI_4400 0x0251
PCI_DEVICE_ID_NVIDIA_GEFORCE4_TI_4200  macro  include/linux/pci_ids.h  1231  #define PCI_DEVICE_ID_NVIDIA_GEFORCE4_TI_4200 0x0253
PCI_DEVICE_ID_NVIDIA_QUADRO4_900XGL  macro  include/linux/pci_ids.h  1232  #define PCI_DEVICE_ID_NVIDIA_QUADRO4_900XGL 0x0258
PCI_DEVICE_ID_NVIDIA_QUADRO4_750XGL  macro  include/linux/pci_ids.h  1233  #define PCI_DEVICE_ID_NVIDIA_QUADRO4_750XGL 0x0259
PCI_DEVICE_ID_NVIDIA_QUADRO4_700XGL  macro  include/linux/pci_ids.h  1234  #define PCI_DEVICE_ID_NVIDIA_QUADRO4_700XGL 0x025B
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP51_SMBUS  macro  include/linux/pci_ids.h  1235  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP51_SMBUS 0x0264
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP51_IDE  macro  include/linux/pci_ids.h  1236  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP51_IDE 0x0265
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP51_SATA  macro  include/linux/pci_ids.h  1237  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP51_SATA 0x0266
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP51_SATA2  macro  include/linux/pci_ids.h  1238  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP51_SATA2 0x0267
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP55_SMBUS  macro  include/linux/pci_ids.h  1239  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP55_SMBUS 0x0368
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP55_IDE  macro  include/linux/pci_ids.h  1240  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP55_IDE 0x036E
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP55_SATA  macro  include/linux/pci_ids.h  1241  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP55_SATA 0x037E
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP55_SATA2  macro  include/linux/pci_ids.h  1242  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP55_SATA2 0x037F
PCI_DEVICE_ID_NVIDIA_GEFORCE4_TI_4800  macro  include/linux/pci_ids.h  1243  #define PCI_DEVICE_ID_NVIDIA_GEFORCE4_TI_4800 0x0280
PCI_DEVICE_ID_NVIDIA_GEFORCE4_TI_4800_8X  macro  include/linux/pci_ids.h  1244  #define PCI_DEVICE_ID_NVIDIA_GEFORCE4_TI_4800_8X 0x0281
PCI_DEVICE_ID_NVIDIA_GEFORCE4_TI_4800SE  macro  include/linux/pci_ids.h  1245  #define PCI_DEVICE_ID_NVIDIA_GEFORCE4_TI_4800SE 0x0282
PCI_DEVICE_ID_NVIDIA_GEFORCE4_4200_GO  macro  include/linux/pci_ids.h  1246  #define PCI_DEVICE_ID_NVIDIA_GEFORCE4_4200_GO 0x0286
PCI_DEVICE_ID_NVIDIA_QUADRO4_980_XGL  macro  include/linux/pci_ids.h  1247  #define PCI_DEVICE_ID_NVIDIA_QUADRO4_980_XGL 0x0288
PCI_DEVICE_ID_NVIDIA_QUADRO4_780_XGL  macro  include/linux/pci_ids.h  1248  #define PCI_DEVICE_ID_NVIDIA_QUADRO4_780_XGL 0x0289
PCI_DEVICE_ID_NVIDIA_QUADRO4_700_GOGL  macro  include/linux/pci_ids.h  1249  #define PCI_DEVICE_ID_NVIDIA_QUADRO4_700_GOGL 0x028C
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5800_ULTRA  macro  include/linux/pci_ids.h  1250  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5800_ULTRA 0x0301
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5800  macro  include/linux/pci_ids.h  1251  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5800 0x0302
PCI_DEVICE_ID_NVIDIA_QUADRO_FX_2000  macro  include/linux/pci_ids.h  1252  #define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_2000 0x0308
PCI_DEVICE_ID_NVIDIA_QUADRO_FX_1000  macro  include/linux/pci_ids.h  1253  #define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_1000 0x0309
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5600_ULTRA  macro  include/linux/pci_ids.h  1254  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5600_ULTRA 0x0311
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5600  macro  include/linux/pci_ids.h  1255  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5600 0x0312
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5600SE  macro  include/linux/pci_ids.h  1256  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5600SE 0x0314
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5600  macro  include/linux/pci_ids.h  1257  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5600 0x031A
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5650  macro  include/linux/pci_ids.h  1258  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5650 0x031B
PCI_DEVICE_ID_NVIDIA_QUADRO_FX_GO700  macro  include/linux/pci_ids.h  1259  #define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_GO700 0x031C
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5200  macro  include/linux/pci_ids.h  1260  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5200 0x0320
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5200_ULTRA  macro  include/linux/pci_ids.h  1261  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5200_ULTRA 0x0321
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5200_1  macro  include/linux/pci_ids.h  1262  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5200_1 0x0322
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5200SE  macro  include/linux/pci_ids.h  1263  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5200SE 0x0323
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5200  macro  include/linux/pci_ids.h  1264  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5200 0x0324
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5250  macro  include/linux/pci_ids.h  1265  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5250 0x0325
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5500  macro  include/linux/pci_ids.h  1266  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5500 0x0326
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5100  macro  include/linux/pci_ids.h  1267  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5100 0x0327
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5250_32  macro  include/linux/pci_ids.h  1268  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5250_32 0x0328
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO_5200  macro  include/linux/pci_ids.h  1269  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO_5200 0x0329
PCI_DEVICE_ID_NVIDIA_QUADRO_NVS_280_PCI  macro  include/linux/pci_ids.h  1270  #define PCI_DEVICE_ID_NVIDIA_QUADRO_NVS_280_PCI 0x032A
PCI_DEVICE_ID_NVIDIA_QUADRO_FX_500  macro  include/linux/pci_ids.h  1271  #define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_500 0x032B
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5300  macro  include/linux/pci_ids.h  1272  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5300 0x032C
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5100  macro  include/linux/pci_ids.h  1273  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5100 0x032D
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5900_ULTRA  macro  include/linux/pci_ids.h  1274  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5900_ULTRA 0x0330
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5900  macro  include/linux/pci_ids.h  1275  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5900 0x0331
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5900XT  macro  include/linux/pci_ids.h  1276  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5900XT 0x0332
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5950_ULTRA  macro  include/linux/pci_ids.h  1277  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5950_ULTRA 0x0333
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5900ZT  macro  include/linux/pci_ids.h  1278  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5900ZT 0x0334
PCI_DEVICE_ID_NVIDIA_QUADRO_FX_3000  macro  include/linux/pci_ids.h  1279  #define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_3000 0x0338
PCI_DEVICE_ID_NVIDIA_QUADRO_FX_700  macro  include/linux/pci_ids.h  1280  #define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_700 0x033F
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5700_ULTRA  macro  include/linux/pci_ids.h  1281  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5700_ULTRA 0x0341
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5700  macro  include/linux/pci_ids.h  1282  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5700 0x0342
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5700LE  macro  include/linux/pci_ids.h  1283  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5700LE 0x0343
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5700VE  macro  include/linux/pci_ids.h  1284  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5700VE 0x0344
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5700_1  macro  include/linux/pci_ids.h  1285  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5700_1 0x0347
PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5700_2  macro  include/linux/pci_ids.h  1286  #define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5700_2 0x0348
PCI_DEVICE_ID_NVIDIA_QUADRO_FX_GO1000  macro  include/linux/pci_ids.h  1287  #define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_GO1000 0x034C
PCI_DEVICE_ID_NVIDIA_QUADRO_FX_1100  macro  include/linux/pci_ids.h  1288  #define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_1100 0x034E
PCI_DEVICE_ID_NVIDIA_MCP55_BRIDGE_V0  macro  include/linux/pci_ids.h  1289  #define PCI_DEVICE_ID_NVIDIA_MCP55_BRIDGE_V0 0x0360
PCI_DEVICE_ID_NVIDIA_MCP55_BRIDGE_V4  macro  include/linux/pci_ids.h  1290  #define PCI_DEVICE_ID_NVIDIA_MCP55_BRIDGE_V4 0x0364
PCI_DEVICE_ID_NVIDIA_NVENET_15  macro  include/linux/pci_ids.h  1291  #define PCI_DEVICE_ID_NVIDIA_NVENET_15 0x0373
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP61_SATA  macro  include/linux/pci_ids.h  1292  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP61_SATA 0x03E7
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP61_SMBUS  macro  include/linux/pci_ids.h  1293  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP61_SMBUS 0x03EB
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP61_IDE  macro  include/linux/pci_ids.h  1294  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP61_IDE 0x03EC
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP61_SATA2  macro  include/linux/pci_ids.h  1295  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP61_SATA2 0x03F6
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP61_SATA3  macro  include/linux/pci_ids.h  1296  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP61_SATA3 0x03F7
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP65_SMBUS  macro  include/linux/pci_ids.h  1297  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP65_SMBUS 0x0446
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP65_IDE  macro  include/linux/pci_ids.h  1298  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP65_IDE 0x0448
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP67_SMBUS  macro  include/linux/pci_ids.h  1299  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP67_SMBUS 0x0542
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP67_IDE  macro  include/linux/pci_ids.h  1300  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP67_IDE 0x0560
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP73_IDE  macro  include/linux/pci_ids.h  1301  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP73_IDE 0x056C
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP78S_SMBUS  macro  include/linux/pci_ids.h  1302  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP78S_SMBUS 0x0752
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP77_IDE  macro  include/linux/pci_ids.h  1303  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP77_IDE 0x0759
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP73_SMBUS  macro  include/linux/pci_ids.h  1304  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP73_SMBUS 0x07D8
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP79_SMBUS  macro  include/linux/pci_ids.h  1305  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP79_SMBUS 0x0AA2
PCI_DEVICE_ID_NVIDIA_NFORCE_MCP89_SATA  macro  include/linux/pci_ids.h  1306  #define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP89_SATA 0x0D85
PCI_VENDOR_ID_IMS  macro  include/linux/pci_ids.h  1308  #define PCI_VENDOR_ID_IMS 0x10e0
PCI_DEVICE_ID_IMS_TT128  macro  include/linux/pci_ids.h  1309  #define PCI_DEVICE_ID_IMS_TT128 0x9128
PCI_DEVICE_ID_IMS_TT3D  macro  include/linux/pci_ids.h  1310  #define PCI_DEVICE_ID_IMS_TT3D 0x9135
PCI_VENDOR_ID_INTERG  macro  include/linux/pci_ids.h  1312  #define PCI_VENDOR_ID_INTERG 0x10ea
PCI_DEVICE_ID_INTERG_1682  macro  include/linux/pci_ids.h  1313  #define PCI_DEVICE_ID_INTERG_1682 0x1682
PCI_DEVICE_ID_INTERG_2000  macro  include/linux/pci_ids.h  1314  #define PCI_DEVICE_ID_INTERG_2000 0x2000
PCI_DEVICE_ID_INTERG_2010  macro  include/linux/pci_ids.h  1315  #define PCI_DEVICE_ID_INTERG_2010 0x2010
PCI_DEVICE_ID_INTERG_5000  macro  include/linux/pci_ids.h  1316  #define PCI_DEVICE_ID_INTERG_5000 0x5000
PCI_DEVICE_ID_INTERG_5050  macro  include/linux/pci_ids.h  1317  #define PCI_DEVICE_ID_INTERG_5050 0x5050
PCI_VENDOR_ID_REALTEK  macro  include/linux/pci_ids.h  1319  #define PCI_VENDOR_ID_REALTEK 0x10ec
PCI_DEVICE_ID_REALTEK_8139  macro  include/linux/pci_ids.h  1320  #define PCI_DEVICE_ID_REALTEK_8139 0x8139
PCI_VENDOR_ID_XILINX  macro  include/linux/pci_ids.h  1322  #define PCI_VENDOR_ID_XILINX 0x10ee
PCI_DEVICE_ID_RME_DIGI96  macro  include/linux/pci_ids.h  1323  #define PCI_DEVICE_ID_RME_DIGI96 0x3fc0
PCI_DEVICE_ID_RME_DIGI96_8  macro  include/linux/pci_ids.h  1324  #define PCI_DEVICE_ID_RME_DIGI96_8 0x3fc1
PCI_DEVICE_ID_RME_DIGI96_8_PRO  macro  include/linux/pci_ids.h  1325  #define PCI_DEVICE_ID_RME_DIGI96_8_PRO 0x3fc2
PCI_DEVICE_ID_RME_DIGI96_8_PAD_OR_PST  macro  include/linux/pci_ids.h  1326  #define PCI_DEVICE_ID_RME_DIGI96_8_PAD_OR_PST 0x3fc3
PCI_DEVICE_ID_XILINX_HAMMERFALL_DSP  macro  include/linux/pci_ids.h  1327  #define PCI_DEVICE_ID_XILINX_HAMMERFALL_DSP 0x3fc5
PCI_DEVICE_ID_XILINX_HAMMERFALL_DSP_MADI  macro  include/linux/pci_ids.h  1328  #define PCI_DEVICE_ID_XILINX_HAMMERFALL_DSP_MADI 0x3fc6
PCI_VENDOR_ID_INIT  macro  include/linux/pci_ids.h  1330  #define PCI_VENDOR_ID_INIT 0x1101
PCI_VENDOR_ID_CREATIVE  macro  include/linux/pci_ids.h  1332  #define PCI_VENDOR_ID_CREATIVE 0x1102
PCI_DEVICE_ID_CREATIVE_EMU10K1  macro  include/linux/pci_ids.h  1333  #define PCI_DEVICE_ID_CREATIVE_EMU10K1 0x0002
PCI_DEVICE_ID_CREATIVE_20K1  macro  include/linux/pci_ids.h  1334  #define PCI_DEVICE_ID_CREATIVE_20K1 0x0005
PCI_DEVICE_ID_CREATIVE_20K2  macro  include/linux/pci_ids.h  1335  #define PCI_DEVICE_ID_CREATIVE_20K2 0x000b
PCI_SUBDEVICE_ID_CREATIVE_SB0760  macro  include/linux/pci_ids.h  1336  #define PCI_SUBDEVICE_ID_CREATIVE_SB0760 0x0024
PCI_SUBDEVICE_ID_CREATIVE_SB08801  macro  include/linux/pci_ids.h  1337  #define PCI_SUBDEVICE_ID_CREATIVE_SB08801 0x0041
PCI_SUBDEVICE_ID_CREATIVE_SB08802  macro  include/linux/pci_ids.h  1338  #define PCI_SUBDEVICE_ID_CREATIVE_SB08802 0x0042
PCI_SUBDEVICE_ID_CREATIVE_SB08803  macro  include/linux/pci_ids.h  1339  #define PCI_SUBDEVICE_ID_CREATIVE_SB08803 0x0043
PCI_SUBDEVICE_ID_CREATIVE_SB1270  macro  include/linux/pci_ids.h  1340  #define PCI_SUBDEVICE_ID_CREATIVE_SB1270 0x0062
PCI_SUBDEVICE_ID_CREATIVE_HENDRIX  macro  include/linux/pci_ids.h  1341  #define PCI_SUBDEVICE_ID_CREATIVE_HENDRIX 0x6000
PCI_VENDOR_ID_ECTIVA  macro  include/linux/pci_ids.h  1343  #define PCI_VENDOR_ID_ECTIVA 0x1102
PCI_DEVICE_ID_ECTIVA_EV1938  macro  include/linux/pci_ids.h  1344  #define PCI_DEVICE_ID_ECTIVA_EV1938 0x8938
PCI_VENDOR_ID_TTI  macro  include/linux/pci_ids.h  1346  #define PCI_VENDOR_ID_TTI 0x1103
PCI_DEVICE_ID_TTI_HPT343  macro  include/linux/pci_ids.h  1347  #define PCI_DEVICE_ID_TTI_HPT343 0x0003
PCI_DEVICE_ID_TTI_HPT366  macro  include/linux/pci_ids.h  1348  #define PCI_DEVICE_ID_TTI_HPT366 0x0004
PCI_DEVICE_ID_TTI_HPT372  macro  include/linux/pci_ids.h  1349  #define PCI_DEVICE_ID_TTI_HPT372 0x0005
PCI_DEVICE_ID_TTI_HPT302  macro  include/linux/pci_ids.h  1350  #define PCI_DEVICE_ID_TTI_HPT302 0x0006
PCI_DEVICE_ID_TTI_HPT371  macro  include/linux/pci_ids.h  1351  #define PCI_DEVICE_ID_TTI_HPT371 0x0007
PCI_DEVICE_ID_TTI_HPT374  macro  include/linux/pci_ids.h  1352  #define PCI_DEVICE_ID_TTI_HPT374 0x0008
PCI_DEVICE_ID_TTI_HPT372N  macro  include/linux/pci_ids.h  1353  #define PCI_DEVICE_ID_TTI_HPT372N 0x0009
PCI_VENDOR_ID_VIA  macro  include/linux/pci_ids.h  1355  #define PCI_VENDOR_ID_VIA 0x1106
PCI_DEVICE_ID_VIA_8763_0  macro  include/linux/pci_ids.h  1356  #define PCI_DEVICE_ID_VIA_8763_0 0x0198
PCI_DEVICE_ID_VIA_8380_0  macro  include/linux/pci_ids.h  1357  #define PCI_DEVICE_ID_VIA_8380_0 0x0204
PCI_DEVICE_ID_VIA_3238_0  macro  include/linux/pci_ids.h  1358  #define PCI_DEVICE_ID_VIA_3238_0 0x0238
PCI_DEVICE_ID_VIA_PT880  macro  include/linux/pci_ids.h  1359  #define PCI_DEVICE_ID_VIA_PT880 0x0258
PCI_DEVICE_ID_VIA_PT880ULTRA  macro  include/linux/pci_ids.h  1360  #define PCI_DEVICE_ID_VIA_PT880ULTRA 0x0308
PCI_DEVICE_ID_VIA_PX8X0_0  macro  include/linux/pci_ids.h  1361  #define PCI_DEVICE_ID_VIA_PX8X0_0 0x0259
PCI_DEVICE_ID_VIA_3269_0  macro  include/linux/pci_ids.h  1362  #define PCI_DEVICE_ID_VIA_3269_0 0x0269
PCI_DEVICE_ID_VIA_K8T800PRO_0  macro  include/linux/pci_ids.h  1363  #define PCI_DEVICE_ID_VIA_K8T800PRO_0 0x0282
PCI_DEVICE_ID_VIA_3296_0  macro  include/linux/pci_ids.h  1364  #define PCI_DEVICE_ID_VIA_3296_0 0x0296
PCI_DEVICE_ID_VIA_8363_0  macro  include/linux/pci_ids.h  1365  #define PCI_DEVICE_ID_VIA_8363_0 0x0305
PCI_DEVICE_ID_VIA_P4M800CE  macro  include/linux/pci_ids.h  1366  #define PCI_DEVICE_ID_VIA_P4M800CE 0x0314
PCI_DEVICE_ID_VIA_P4M890  macro  include/linux/pci_ids.h  1367  #define PCI_DEVICE_ID_VIA_P4M890 0x0327
PCI_DEVICE_ID_VIA_VT3324  macro  include/linux/pci_ids.h  1368  #define PCI_DEVICE_ID_VIA_VT3324 0x0324
PCI_DEVICE_ID_VIA_VT3336  macro  include/linux/pci_ids.h  1369  #define PCI_DEVICE_ID_VIA_VT3336 0x0336
PCI_DEVICE_ID_VIA_VT3351  macro  include/linux/pci_ids.h  1370  #define PCI_DEVICE_ID_VIA_VT3351 0x0351
PCI_DEVICE_ID_VIA_VT3364  macro  include/linux/pci_ids.h  1371  #define PCI_DEVICE_ID_VIA_VT3364 0x0364
PCI_DEVICE_ID_VIA_8371_0  macro  include/linux/pci_ids.h  1372  #define PCI_DEVICE_ID_VIA_8371_0 0x0391
PCI_DEVICE_ID_VIA_6415  macro  include/linux/pci_ids.h  1373  #define PCI_DEVICE_ID_VIA_6415 0x0415
PCI_DEVICE_ID_VIA_8501_0  macro  include/linux/pci_ids.h  1374  #define PCI_DEVICE_ID_VIA_8501_0 0x0501
PCI_DEVICE_ID_VIA_82C561  macro  include/linux/pci_ids.h  1375  #define PCI_DEVICE_ID_VIA_82C561 0x0561
PCI_DEVICE_ID_VIA_82C586_1  macro  include/linux/pci_ids.h  1376  #define PCI_DEVICE_ID_VIA_82C586_1 0x0571
PCI_DEVICE_ID_VIA_82C576  macro  include/linux/pci_ids.h  1377  #define PCI_DEVICE_ID_VIA_82C576 0x0576
PCI_DEVICE_ID_VIA_82C586_0  macro  include/linux/pci_ids.h  1378  #define PCI_DEVICE_ID_VIA_82C586_0 0x0586
PCI_DEVICE_ID_VIA_82C596  macro  include/linux/pci_ids.h  1379  #define PCI_DEVICE_ID_VIA_82C596 0x0596
PCI_DEVICE_ID_VIA_82C597_0  macro  include/linux/pci_ids.h  1380  #define PCI_DEVICE_ID_VIA_82C597_0 0x0597
PCI_DEVICE_ID_VIA_82C598_0  macro  include/linux/pci_ids.h  1381  #define PCI_DEVICE_ID_VIA_82C598_0 0x0598
PCI_DEVICE_ID_VIA_8601_0  macro  include/linux/pci_ids.h  1382  #define PCI_DEVICE_ID_VIA_8601_0 0x0601
PCI_DEVICE_ID_VIA_8605_0  macro  include/linux/pci_ids.h  1383  #define PCI_DEVICE_ID_VIA_8605_0 0x0605
PCI_DEVICE_ID_VIA_82C686  macro  include/linux/pci_ids.h  1384  #define PCI_DEVICE_ID_VIA_82C686 0x0686
PCI_DEVICE_ID_VIA_82C691_0  macro  include/linux/pci_ids.h  1385  #define PCI_DEVICE_ID_VIA_82C691_0 0x0691
PCI_DEVICE_ID_VIA_82C576_1  macro  include/linux/pci_ids.h  1386  #define PCI_DEVICE_ID_VIA_82C576_1 0x1571
PCI_DEVICE_ID_VIA_82C586_2  macro  include/linux/pci_ids.h  1387  #define PCI_DEVICE_ID_VIA_82C586_2 0x3038
PCI_DEVICE_ID_VIA_82C586_3  macro  include/linux/pci_ids.h  1388  #define PCI_DEVICE_ID_VIA_82C586_3 0x3040
PCI_DEVICE_ID_VIA_82C596_3  macro  include/linux/pci_ids.h  1389  #define PCI_DEVICE_ID_VIA_82C596_3 0x3050
PCI_DEVICE_ID_VIA_82C596B_3  macro  include/linux/pci_ids.h  1390  #define PCI_DEVICE_ID_VIA_82C596B_3 0x3051
PCI_DEVICE_ID_VIA_82C686_4  macro  include/linux/pci_ids.h  1391  #define PCI_DEVICE_ID_VIA_82C686_4 0x3057
PCI_DEVICE_ID_VIA_82C686_5  macro  include/linux/pci_ids.h  1392  #define PCI_DEVICE_ID_VIA_82C686_5 0x3058
PCI_DEVICE_ID_VIA_8233_5  macro  include/linux/pci_ids.h  1393  #define PCI_DEVICE_ID_VIA_8233_5 0x3059
PCI_DEVICE_ID_VIA_8233_0  macro  include/linux/pci_ids.h  1394  #define PCI_DEVICE_ID_VIA_8233_0 0x3074
PCI_DEVICE_ID_VIA_8633_0  macro  include/linux/pci_ids.h  1395  #define PCI_DEVICE_ID_VIA_8633_0 0x3091
PCI_DEVICE_ID_VIA_8367_0  macro  include/linux/pci_ids.h  1396  #define PCI_DEVICE_ID_VIA_8367_0 0x3099
PCI_DEVICE_ID_VIA_8653_0  macro  include/linux/pci_ids.h  1397  #define PCI_DEVICE_ID_VIA_8653_0 0x3101
PCI_DEVICE_ID_VIA_8622  macro  include/linux/pci_ids.h  1398  #define PCI_DEVICE_ID_VIA_8622 0x3102
PCI_DEVICE_ID_VIA_8235_USB_2  macro  include/linux/pci_ids.h  1399  #define PCI_DEVICE_ID_VIA_8235_USB_2 0x3104
PCI_DEVICE_ID_VIA_8233C_0  macro  include/linux/pci_ids.h  1400  #define PCI_DEVICE_ID_VIA_8233C_0 0x3109
PCI_DEVICE_ID_VIA_8361  macro  include/linux/pci_ids.h  1401  #define PCI_DEVICE_ID_VIA_8361 0x3112
PCI_DEVICE_ID_VIA_XM266  macro  include/linux/pci_ids.h  1402  #define PCI_DEVICE_ID_VIA_XM266 0x3116
PCI_DEVICE_ID_VIA_612X  macro  include/linux/pci_ids.h  1403  #define PCI_DEVICE_ID_VIA_612X 0x3119
PCI_DEVICE_ID_VIA_862X_0  macro  include/linux/pci_ids.h  1404  #define PCI_DEVICE_ID_VIA_862X_0 0x3123
PCI_DEVICE_ID_VIA_8753_0  macro  include/linux/pci_ids.h  1405  #define PCI_DEVICE_ID_VIA_8753_0 0x3128
PCI_DEVICE_ID_VIA_8233A  macro  include/linux/pci_ids.h  1406  #define PCI_DEVICE_ID_VIA_8233A 0x3147
PCI_DEVICE_ID_VIA_8703_51_0  macro  include/linux/pci_ids.h  1407  #define PCI_DEVICE_ID_VIA_8703_51_0 0x3148
PCI_DEVICE_ID_VIA_8237_SATA  macro  include/linux/pci_ids.h  1408  #define PCI_DEVICE_ID_VIA_8237_SATA 0x3149
PCI_DEVICE_ID_VIA_XN266  macro  include/linux/pci_ids.h  1409  #define PCI_DEVICE_ID_VIA_XN266 0x3156
PCI_DEVICE_ID_VIA_6410  macro  include/linux/pci_ids.h  1410  #define PCI_DEVICE_ID_VIA_6410 0x3164
PCI_DEVICE_ID_VIA_8754C_0  macro  include/linux/pci_ids.h  1411  #define PCI_DEVICE_ID_VIA_8754C_0 0x3168
PCI_DEVICE_ID_VIA_8235  macro  include/linux/pci_ids.h  1412  #define PCI_DEVICE_ID_VIA_8235 0x3177
PCI_DEVICE_ID_VIA_8385_0  macro  include/linux/pci_ids.h  1413  #define PCI_DEVICE_ID_VIA_8385_0 0x3188
PCI_DEVICE_ID_VIA_8377_0  macro  include/linux/pci_ids.h  1414  #define PCI_DEVICE_ID_VIA_8377_0 0x3189
PCI_DEVICE_ID_VIA_8378_0  macro  include/linux/pci_ids.h  1415  #define PCI_DEVICE_ID_VIA_8378_0 0x3205
PCI_DEVICE_ID_VIA_8783_0  macro  include/linux/pci_ids.h  1416  #define PCI_DEVICE_ID_VIA_8783_0 0x3208
PCI_DEVICE_ID_VIA_8237  macro  include/linux/pci_ids.h  1417  #define PCI_DEVICE_ID_VIA_8237 0x3227
PCI_DEVICE_ID_VIA_8251  macro  include/linux/pci_ids.h  1418  #define PCI_DEVICE_ID_VIA_8251 0x3287
PCI_DEVICE_ID_VIA_8261  macro  include/linux/pci_ids.h  1419  #define PCI_DEVICE_ID_VIA_8261 0x3402
PCI_DEVICE_ID_VIA_8237A  macro  include/linux/pci_ids.h  1420  #define PCI_DEVICE_ID_VIA_8237A 0x3337
PCI_DEVICE_ID_VIA_8237S  macro  include/linux/pci_ids.h  1421  #define PCI_DEVICE_ID_VIA_8237S 0x3372
PCI_DEVICE_ID_VIA_SATA_EIDE  macro  include/linux/pci_ids.h  1422  #define PCI_DEVICE_ID_VIA_SATA_EIDE 0x5324
PCI_DEVICE_ID_VIA_8231  macro  include/linux/pci_ids.h  1423  #define PCI_DEVICE_ID_VIA_8231 0x8231
PCI_DEVICE_ID_VIA_8231_4  macro  include/linux/pci_ids.h  1424  #define PCI_DEVICE_ID_VIA_8231_4 0x8235
PCI_DEVICE_ID_VIA_8365_1  macro  include/linux/pci_ids.h  1425  #define PCI_DEVICE_ID_VIA_8365_1 0x8305
PCI_DEVICE_ID_VIA_CX700  macro  include/linux/pci_ids.h  1426  #define PCI_DEVICE_ID_VIA_CX700 0x8324
PCI_DEVICE_ID_VIA_CX700_IDE  macro  include/linux/pci_ids.h  1427  #define PCI_DEVICE_ID_VIA_CX700_IDE 0x0581
PCI_DEVICE_ID_VIA_VX800  macro  include/linux/pci_ids.h  1428  #define PCI_DEVICE_ID_VIA_VX800 0x8353
PCI_DEVICE_ID_VIA_VX855  macro  include/linux/pci_ids.h  1429  #define PCI_DEVICE_ID_VIA_VX855 0x8409
PCI_DEVICE_ID_VIA_VX900  macro  include/linux/pci_ids.h  1430  #define PCI_DEVICE_ID_VIA_VX900 0x8410
PCI_DEVICE_ID_VIA_8371_1  macro  include/linux/pci_ids.h  1431  #define PCI_DEVICE_ID_VIA_8371_1 0x8391
PCI_DEVICE_ID_VIA_82C598_1  macro  include/linux/pci_ids.h  1432  #define PCI_DEVICE_ID_VIA_82C598_1 0x8598
PCI_DEVICE_ID_VIA_838X_1  macro  include/linux/pci_ids.h  1433  #define PCI_DEVICE_ID_VIA_838X_1 0xB188
PCI_DEVICE_ID_VIA_83_87XX_1  macro  include/linux/pci_ids.h  1434  #define PCI_DEVICE_ID_VIA_83_87XX_1 0xB198
PCI_DEVICE_ID_VIA_VX855_IDE  macro  include/linux/pci_ids.h  1435  #define PCI_DEVICE_ID_VIA_VX855_IDE 0xC409
PCI_DEVICE_ID_VIA_ANON  macro  include/linux/pci_ids.h  1436  #define PCI_DEVICE_ID_VIA_ANON 0xFFFF
PCI_VENDOR_ID_SIEMENS  macro  include/linux/pci_ids.h  1438  #define PCI_VENDOR_ID_SIEMENS 0x110A
PCI_DEVICE_ID_SIEMENS_DSCC4  macro  include/linux/pci_ids.h  1439  #define PCI_DEVICE_ID_SIEMENS_DSCC4 0x2102
PCI_VENDOR_ID_VORTEX  macro  include/linux/pci_ids.h  1441  #define PCI_VENDOR_ID_VORTEX 0x1119
PCI_DEVICE_ID_VORTEX_GDT60x0  macro  include/linux/pci_ids.h  1442  #define PCI_DEVICE_ID_VORTEX_GDT60x0 0x0000
PCI_DEVICE_ID_VORTEX_GDT6000B  macro  include/linux/pci_ids.h  1443  #define PCI_DEVICE_ID_VORTEX_GDT6000B 0x0001
PCI_DEVICE_ID_VORTEX_GDT6x10  macro  include/linux/pci_ids.h  1444  #define PCI_DEVICE_ID_VORTEX_GDT6x10 0x0002
PCI_DEVICE_ID_VORTEX_GDT6x20  macro  include/linux/pci_ids.h  1445  #define PCI_DEVICE_ID_VORTEX_GDT6x20 0x0003
PCI_DEVICE_ID_VORTEX_GDT6530  macro  include/linux/pci_ids.h  1446  #define PCI_DEVICE_ID_VORTEX_GDT6530 0x0004
PCI_DEVICE_ID_VORTEX_GDT6550  macro  include/linux/pci_ids.h  1447  #define PCI_DEVICE_ID_VORTEX_GDT6550 0x0005
PCI_DEVICE_ID_VORTEX_GDT6x17  macro  include/linux/pci_ids.h  1448  #define PCI_DEVICE_ID_VORTEX_GDT6x17 0x0006
PCI_DEVICE_ID_VORTEX_GDT6x27  macro  include/linux/pci_ids.h  1449  #define PCI_DEVICE_ID_VORTEX_GDT6x27 0x0007
PCI_DEVICE_ID_VORTEX_GDT6537  macro  include/linux/pci_ids.h  1450  #define PCI_DEVICE_ID_VORTEX_GDT6537 0x0008
PCI_DEVICE_ID_VORTEX_GDT6557  macro  include/linux/pci_ids.h  1451  #define PCI_DEVICE_ID_VORTEX_GDT6557 0x0009
PCI_DEVICE_ID_VORTEX_GDT6x15  macro  include/linux/pci_ids.h  1452  #define PCI_DEVICE_ID_VORTEX_GDT6x15 0x000a
PCI_DEVICE_ID_VORTEX_GDT6x25  macro  include/linux/pci_ids.h  1453  #define PCI_DEVICE_ID_VORTEX_GDT6x25 0x000b
PCI_DEVICE_ID_VORTEX_GDT6535  macro  include/linux/pci_ids.h  1454  #define PCI_DEVICE_ID_VORTEX_GDT6535 0x000c
PCI_DEVICE_ID_VORTEX_GDT6555  macro  include/linux/pci_ids.h  1455  #define PCI_DEVICE_ID_VORTEX_GDT6555 0x000d
PCI_DEVICE_ID_VORTEX_GDT6x17RP  macro  include/linux/pci_ids.h  1456  #define PCI_DEVICE_ID_VORTEX_GDT6x17RP 0x0100
PCI_DEVICE_ID_VORTEX_GDT6x27RP  macro  include/linux/pci_ids.h  1457  #define PCI_DEVICE_ID_VORTEX_GDT6x27RP 0x0101
PCI_DEVICE_ID_VORTEX_GDT6537RP  macro  include/linux/pci_ids.h  1458  #define PCI_DEVICE_ID_VORTEX_GDT6537RP 0x0102
PCI_DEVICE_ID_VORTEX_GDT6557RP  macro  include/linux/pci_ids.h  1459  #define PCI_DEVICE_ID_VORTEX_GDT6557RP 0x0103
PCI_DEVICE_ID_VORTEX_GDT6x11RP  macro  include/linux/pci_ids.h  1460  #define PCI_DEVICE_ID_VORTEX_GDT6x11RP 0x0104
PCI_DEVICE_ID_VORTEX_GDT6x21RP  macro  include/linux/pci_ids.h  1461  #define PCI_DEVICE_ID_VORTEX_GDT6x21RP 0x0105
PCI_VENDOR_ID_EF  macro  include/linux/pci_ids.h  1463  #define PCI_VENDOR_ID_EF 0x111a
PCI_DEVICE_ID_EF_ATM_FPGA  macro  include/linux/pci_ids.h  1464  #define PCI_DEVICE_ID_EF_ATM_FPGA 0x0000
PCI_DEVICE_ID_EF_ATM_ASIC  macro  include/linux/pci_ids.h  1465  #define PCI_DEVICE_ID_EF_ATM_ASIC 0x0002
PCI_DEVICE_ID_EF_ATM_LANAI2  macro  include/linux/pci_ids.h  1466  #define PCI_DEVICE_ID_EF_ATM_LANAI2 0x0003
PCI_DEVICE_ID_EF_ATM_LANAIHB  macro  include/linux/pci_ids.h  1467  #define PCI_DEVICE_ID_EF_ATM_LANAIHB 0x0005
PCI_VENDOR_ID_IDT  macro  include/linux/pci_ids.h  1469  #define PCI_VENDOR_ID_IDT 0x111d
PCI_DEVICE_ID_IDT_IDT77201  macro  include/linux/pci_ids.h  1470  #define PCI_DEVICE_ID_IDT_IDT77201 0x0001
PCI_VENDOR_ID_FORE  macro  include/linux/pci_ids.h  1472  #define PCI_VENDOR_ID_FORE 0x1127
PCI_DEVICE_ID_FORE_PCA200E  macro  include/linux/pci_ids.h  1473  #define PCI_DEVICE_ID_FORE_PCA200E 0x0300
PCI_VENDOR_ID_PHILIPS  macro  include/linux/pci_ids.h  1475  #define PCI_VENDOR_ID_PHILIPS 0x1131
PCI_DEVICE_ID_PHILIPS_SAA7146  macro  include/linux/pci_ids.h  1476  #define PCI_DEVICE_ID_PHILIPS_SAA7146 0x7146
PCI_DEVICE_ID_PHILIPS_SAA9730  macro  include/linux/pci_ids.h  1477  #define PCI_DEVICE_ID_PHILIPS_SAA9730 0x9730
PCI_VENDOR_ID_EICON  macro  include/linux/pci_ids.h  1479  #define PCI_VENDOR_ID_EICON 0x1133
PCI_DEVICE_ID_EICON_DIVA20  macro  include/linux/pci_ids.h  1480  #define PCI_DEVICE_ID_EICON_DIVA20 0xe002
PCI_DEVICE_ID_EICON_DIVA20_U  macro  include/linux/pci_ids.h  1481  #define PCI_DEVICE_ID_EICON_DIVA20_U 0xe004
PCI_DEVICE_ID_EICON_DIVA201  macro  include/linux/pci_ids.h  1482  #define PCI_DEVICE_ID_EICON_DIVA201 0xe005
PCI_DEVICE_ID_EICON_DIVA202  macro  include/linux/pci_ids.h  1483  #define PCI_DEVICE_ID_EICON_DIVA202 0xe00b
PCI_DEVICE_ID_EICON_MAESTRA  macro  include/linux/pci_ids.h  1484  #define PCI_DEVICE_ID_EICON_MAESTRA 0xe010
PCI_DEVICE_ID_EICON_MAESTRAQ  macro  include/linux/pci_ids.h  1485  #define PCI_DEVICE_ID_EICON_MAESTRAQ 0xe012
PCI_DEVICE_ID_EICON_MAESTRAQ_U  macro  include/linux/pci_ids.h  1486  #define PCI_DEVICE_ID_EICON_MAESTRAQ_U 0xe013
PCI_DEVICE_ID_EICON_MAESTRAP  macro  include/linux/pci_ids.h  1487  #define PCI_DEVICE_ID_EICON_MAESTRAP 0xe014
PCI_VENDOR_ID_CISCO  macro  include/linux/pci_ids.h  1489  #define PCI_VENDOR_ID_CISCO 0x1137
PCI_VENDOR_ID_ZIATECH  macro  include/linux/pci_ids.h  1491  #define PCI_VENDOR_ID_ZIATECH 0x1138
PCI_DEVICE_ID_ZIATECH_5550_HC  macro  include/linux/pci_ids.h  1492  #define PCI_DEVICE_ID_ZIATECH_5550_HC 0x5550
PCI_VENDOR_ID_SYSKONNECT  macro  include/linux/pci_ids.h  1495  #define PCI_VENDOR_ID_SYSKONNECT 0x1148
PCI_DEVICE_ID_SYSKONNECT_TR  macro  include/linux/pci_ids.h  1496  #define PCI_DEVICE_ID_SYSKONNECT_TR 0x4200
PCI_DEVICE_ID_SYSKONNECT_GE  macro  include/linux/pci_ids.h  1497  #define PCI_DEVICE_ID_SYSKONNECT_GE 0x4300
PCI_DEVICE_ID_SYSKONNECT_YU  macro  include/linux/pci_ids.h  1498  #define PCI_DEVICE_ID_SYSKONNECT_YU 0x4320
PCI_DEVICE_ID_SYSKONNECT_9DXX  macro  include/linux/pci_ids.h  1499  #define PCI_DEVICE_ID_SYSKONNECT_9DXX 0x4400
PCI_DEVICE_ID_SYSKONNECT_9MXX  macro  include/linux/pci_ids.h  1500  #define PCI_DEVICE_ID_SYSKONNECT_9MXX 0x4500
PCI_VENDOR_ID_DIGI  macro  include/linux/pci_ids.h  1502  #define PCI_VENDOR_ID_DIGI 0x114f
PCI_DEVICE_ID_DIGI_DF_M_IOM2_E  macro  include/linux/pci_ids.h  1503  #define PCI_DEVICE_ID_DIGI_DF_M_IOM2_E 0x0070
PCI_DEVICE_ID_DIGI_DF_M_E  macro  include/linux/pci_ids.h  1504  #define PCI_DEVICE_ID_DIGI_DF_M_E 0x0071
PCI_DEVICE_ID_DIGI_DF_M_IOM2_A  macro  include/linux/pci_ids.h  1505  #define PCI_DEVICE_ID_DIGI_DF_M_IOM2_A 0x0072
PCI_DEVICE_ID_DIGI_DF_M_A  macro  include/linux/pci_ids.h  1506  #define PCI_DEVICE_ID_DIGI_DF_M_A 0x0073
PCI_DEVICE_ID_DIGI_NEO_8  macro  include/linux/pci_ids.h  1507  #define PCI_DEVICE_ID_DIGI_NEO_8 0x00B1
PCI_DEVICE_ID_NEO_2DB9  macro  include/linux/pci_ids.h  1508  #define PCI_DEVICE_ID_NEO_2DB9 0x00C8
PCI_DEVICE_ID_NEO_2DB9PRI  macro  include/linux/pci_ids.h  1509  #define PCI_DEVICE_ID_NEO_2DB9PRI 0x00C9
PCI_DEVICE_ID_NEO_2RJ45  macro  include/linux/pci_ids.h  1510  #define PCI_DEVICE_ID_NEO_2RJ45 0x00CA
PCI_DEVICE_ID_NEO_2RJ45PRI  macro  include/linux/pci_ids.h  1511  #define PCI_DEVICE_ID_NEO_2RJ45PRI 0x00CB
PCIE_DEVICE_ID_NEO_4_IBM  macro  include/linux/pci_ids.h  1512  #define PCIE_DEVICE_ID_NEO_4_IBM 0x00F4
PCI_VENDOR_ID_XIRCOM  macro  include/linux/pci_ids.h  1514  #define PCI_VENDOR_ID_XIRCOM 0x115d
PCI_DEVICE_ID_XIRCOM_RBM56G  macro  include/linux/pci_ids.h  1515  #define PCI_DEVICE_ID_XIRCOM_RBM56G 0x0101
PCI_DEVICE_ID_XIRCOM_X3201_MDM  macro  include/linux/pci_ids.h  1516  #define PCI_DEVICE_ID_XIRCOM_X3201_MDM 0x0103
PCI_VENDOR_ID_SERVERWORKS  macro  include/linux/pci_ids.h  1518  #define PCI_VENDOR_ID_SERVERWORKS 0x1166
PCI_DEVICE_ID_SERVERWORKS_HE  macro  include/linux/pci_ids.h  1519  #define PCI_DEVICE_ID_SERVERWORKS_HE 0x0008
PCI_DEVICE_ID_SERVERWORKS_LE  macro  include/linux/pci_ids.h  1520  #define PCI_DEVICE_ID_SERVERWORKS_LE 0x0009
PCI_DEVICE_ID_SERVERWORKS_GCNB_LE  macro  include/linux/pci_ids.h  1521  #define PCI_DEVICE_ID_SERVERWORKS_GCNB_LE 0x0017
PCI_DEVICE_ID_SERVERWORKS_HT1000_PXB  macro  include/linux/pci_ids.h  1522  #define PCI_DEVICE_ID_SERVERWORKS_HT1000_PXB 0x0036
PCI_DEVICE_ID_SERVERWORKS_EPB  macro  include/linux/pci_ids.h  1523  #define PCI_DEVICE_ID_SERVERWORKS_EPB 0x0103
PCI_DEVICE_ID_SERVERWORKS_HT2000_PCIE  macro  include/linux/pci_ids.h  1524  #define PCI_DEVICE_ID_SERVERWORKS_HT2000_PCIE 0x0132
PCI_DEVICE_ID_SERVERWORKS_OSB4  macro  include/linux/pci_ids.h  1525  #define PCI_DEVICE_ID_SERVERWORKS_OSB4 0x0200
PCI_DEVICE_ID_SERVERWORKS_CSB5  macro  include/linux/pci_ids.h  1526  #define PCI_DEVICE_ID_SERVERWORKS_CSB5 0x0201
PCI_DEVICE_ID_SERVERWORKS_CSB6  macro  include/linux/pci_ids.h  1527  #define PCI_DEVICE_ID_SERVERWORKS_CSB6 0x0203
PCI_DEVICE_ID_SERVERWORKS_HT1000SB  macro  include/linux/pci_ids.h  1528  #define PCI_DEVICE_ID_SERVERWORKS_HT1000SB 0x0205
PCI_DEVICE_ID_SERVERWORKS_OSB4IDE  macro  include/linux/pci_ids.h  1529  #define PCI_DEVICE_ID_SERVERWORKS_OSB4IDE 0x0211
PCI_DEVICE_ID_SERVERWORKS_CSB5IDE  macro  include/linux/pci_ids.h  1530  #define PCI_DEVICE_ID_SERVERWORKS_CSB5IDE 0x0212
PCI_DEVICE_ID_SERVERWORKS_CSB6IDE  macro  include/linux/pci_ids.h  1531  #define PCI_DEVICE_ID_SERVERWORKS_CSB6IDE 0x0213
PCI_DEVICE_ID_SERVERWORKS_HT1000IDE  macro  include/linux/pci_ids.h  1532  #define PCI_DEVICE_ID_SERVERWORKS_HT1000IDE 0x0214
PCI_DEVICE_ID_SERVERWORKS_CSB6IDE2  macro  include/linux/pci_ids.h  1533  #define PCI_DEVICE_ID_SERVERWORKS_CSB6IDE2 0x0217
PCI_DEVICE_ID_SERVERWORKS_CSB6LPC  macro  include/linux/pci_ids.h  1534  #define PCI_DEVICE_ID_SERVERWORKS_CSB6LPC 0x0227
PCI_DEVICE_ID_SERVERWORKS_HT1100LD  macro  include/linux/pci_ids.h  1535  #define PCI_DEVICE_ID_SERVERWORKS_HT1100LD 0x0408
PCI_VENDOR_ID_SBE  macro  include/linux/pci_ids.h  1537  #define PCI_VENDOR_ID_SBE 0x1176
PCI_DEVICE_ID_SBE_WANXL100  macro  include/linux/pci_ids.h  1538  #define PCI_DEVICE_ID_SBE_WANXL100 0x0301
PCI_DEVICE_ID_SBE_WANXL200  macro  include/linux/pci_ids.h  1539  #define PCI_DEVICE_ID_SBE_WANXL200 0x0302
PCI_DEVICE_ID_SBE_WANXL400  macro  include/linux/pci_ids.h  1540  #define PCI_DEVICE_ID_SBE_WANXL400 0x0104
PCI_SUBDEVICE_ID_SBE_T3E3  macro  include/linux/pci_ids.h  1541  #define PCI_SUBDEVICE_ID_SBE_T3E3 0x0009
PCI_SUBDEVICE_ID_SBE_2T3E3_P0  macro  include/linux/pci_ids.h  1542  #define PCI_SUBDEVICE_ID_SBE_2T3E3_P0 0x0901
PCI_SUBDEVICE_ID_SBE_2T3E3_P1  macro  include/linux/pci_ids.h  1543  #define PCI_SUBDEVICE_ID_SBE_2T3E3_P1 0x0902
PCI_VENDOR_ID_TOSHIBA  macro  include/linux/pci_ids.h  1545  #define PCI_VENDOR_ID_TOSHIBA 0x1179
PCI_DEVICE_ID_TOSHIBA_PICCOLO_1  macro  include/linux/pci_ids.h  1546  #define PCI_DEVICE_ID_TOSHIBA_PICCOLO_1 0x0101
PCI_DEVICE_ID_TOSHIBA_PICCOLO_2  macro  include/linux/pci_ids.h  1547  #define PCI_DEVICE_ID_TOSHIBA_PICCOLO_2 0x0102
PCI_DEVICE_ID_TOSHIBA_PICCOLO_3  macro  include/linux/pci_ids.h  1548  #define PCI_DEVICE_ID_TOSHIBA_PICCOLO_3 0x0103
PCI_DEVICE_ID_TOSHIBA_PICCOLO_5  macro  include/linux/pci_ids.h  1549  #define PCI_DEVICE_ID_TOSHIBA_PICCOLO_5 0x0105
PCI_DEVICE_ID_TOSHIBA_TOPIC95  macro  include/linux/pci_ids.h  1550  #define PCI_DEVICE_ID_TOSHIBA_TOPIC95 0x060a
PCI_DEVICE_ID_TOSHIBA_TOPIC97  macro  include/linux/pci_ids.h  1551  #define PCI_DEVICE_ID_TOSHIBA_TOPIC97 0x060f
PCI_DEVICE_ID_TOSHIBA_TOPIC100  macro  include/linux/pci_ids.h  1552  #define PCI_DEVICE_ID_TOSHIBA_TOPIC100 0x0617
PCI_VENDOR_ID_TOSHIBA_2  macro  include/linux/pci_ids.h  1554  #define PCI_VENDOR_ID_TOSHIBA_2 0x102f
PCI_DEVICE_ID_TOSHIBA_TC35815CF  macro  include/linux/pci_ids.h  1555  #define PCI_DEVICE_ID_TOSHIBA_TC35815CF 0x0030
PCI_DEVICE_ID_TOSHIBA_TC35815_NWU  macro  include/linux/pci_ids.h  1556  #define PCI_DEVICE_ID_TOSHIBA_TC35815_NWU 0x0031
PCI_DEVICE_ID_TOSHIBA_TC35815_TX4939  macro  include/linux/pci_ids.h  1557  #define PCI_DEVICE_ID_TOSHIBA_TC35815_TX4939 0x0032
PCI_DEVICE_ID_TOSHIBA_TC86C001_IDE  macro  include/linux/pci_ids.h  1558  #define PCI_DEVICE_ID_TOSHIBA_TC86C001_IDE 0x0105
PCI_DEVICE_ID_TOSHIBA_TC86C001_MISC  macro  include/linux/pci_ids.h  1559  #define PCI_DEVICE_ID_TOSHIBA_TC86C001_MISC 0x0108
PCI_DEVICE_ID_TOSHIBA_SPIDER_NET  macro  include/linux/pci_ids.h  1560  #define PCI_DEVICE_ID_TOSHIBA_SPIDER_NET 0x01b3
PCI_VENDOR_ID_ATTO  macro  include/linux/pci_ids.h  1562  #define PCI_VENDOR_ID_ATTO 0x117c
PCI_VENDOR_ID_RICOH  macro  include/linux/pci_ids.h  1564  #define PCI_VENDOR_ID_RICOH 0x1180
PCI_DEVICE_ID_RICOH_RL5C465  macro  include/linux/pci_ids.h  1565  #define PCI_DEVICE_ID_RICOH_RL5C465 0x0465
PCI_DEVICE_ID_RICOH_RL5C466  macro  include/linux/pci_ids.h  1566  #define PCI_DEVICE_ID_RICOH_RL5C466 0x0466
PCI_DEVICE_ID_RICOH_RL5C475  macro  include/linux/pci_ids.h  1567  #define PCI_DEVICE_ID_RICOH_RL5C475 0x0475
PCI_DEVICE_ID_RICOH_RL5C476  macro  include/linux/pci_ids.h  1568  #define PCI_DEVICE_ID_RICOH_RL5C476 0x0476
PCI_DEVICE_ID_RICOH_RL5C478  macro  include/linux/pci_ids.h  1569  #define PCI_DEVICE_ID_RICOH_RL5C478 0x0478
PCI_DEVICE_ID_RICOH_R5C822  macro  include/linux/pci_ids.h  1570  #define PCI_DEVICE_ID_RICOH_R5C822 0x0822
PCI_DEVICE_ID_RICOH_R5CE822  macro  include/linux/pci_ids.h  1571  #define PCI_DEVICE_ID_RICOH_R5CE822 0xe822
PCI_DEVICE_ID_RICOH_R5CE823  macro  include/linux/pci_ids.h  1572  #define PCI_DEVICE_ID_RICOH_R5CE823 0xe823
PCI_DEVICE_ID_RICOH_R5C832  macro  include/linux/pci_ids.h  1573  #define PCI_DEVICE_ID_RICOH_R5C832 0x0832
PCI_DEVICE_ID_RICOH_R5C843  macro  include/linux/pci_ids.h  1574  #define PCI_DEVICE_ID_RICOH_R5C843 0x0843
PCI_VENDOR_ID_DLINK  macro  include/linux/pci_ids.h  1576  #define PCI_VENDOR_ID_DLINK 0x1186
PCI_DEVICE_ID_DLINK_DGE510T  macro  include/linux/pci_ids.h  1577  #define PCI_DEVICE_ID_DLINK_DGE510T 0x4c00
PCI_VENDOR_ID_ARTOP  macro  include/linux/pci_ids.h  1579  #define PCI_VENDOR_ID_ARTOP 0x1191
PCI_DEVICE_ID_ARTOP_ATP850UF  macro  include/linux/pci_ids.h  1580  #define PCI_DEVICE_ID_ARTOP_ATP850UF 0x0005
PCI_DEVICE_ID_ARTOP_ATP860  macro  include/linux/pci_ids.h  1581  #define PCI_DEVICE_ID_ARTOP_ATP860 0x0006
PCI_DEVICE_ID_ARTOP_ATP860R  macro  include/linux/pci_ids.h  1582  #define PCI_DEVICE_ID_ARTOP_ATP860R 0x0007
PCI_DEVICE_ID_ARTOP_ATP865  macro  include/linux/pci_ids.h  1583  #define PCI_DEVICE_ID_ARTOP_ATP865 0x0008
PCI_DEVICE_ID_ARTOP_ATP865R  macro  include/linux/pci_ids.h  1584  #define PCI_DEVICE_ID_ARTOP_ATP865R 0x0009
PCI_DEVICE_ID_ARTOP_ATP867A  macro  include/linux/pci_ids.h  1585  #define PCI_DEVICE_ID_ARTOP_ATP867A 0x000A
PCI_DEVICE_ID_ARTOP_ATP867B  macro  include/linux/pci_ids.h  1586  #define PCI_DEVICE_ID_ARTOP_ATP867B 0x000B
PCI_DEVICE_ID_ARTOP_AEC7610  macro  include/linux/pci_ids.h  1587  #define PCI_DEVICE_ID_ARTOP_AEC7610 0x8002
PCI_DEVICE_ID_ARTOP_AEC7612UW  macro  include/linux/pci_ids.h  1588  #define PCI_DEVICE_ID_ARTOP_AEC7612UW 0x8010
PCI_DEVICE_ID_ARTOP_AEC7612U  macro  include/linux/pci_ids.h  1589  #define PCI_DEVICE_ID_ARTOP_AEC7612U 0x8020
PCI_DEVICE_ID_ARTOP_AEC7612S  macro  include/linux/pci_ids.h  1590  #define PCI_DEVICE_ID_ARTOP_AEC7612S 0x8030
PCI_DEVICE_ID_ARTOP_AEC7612D  macro  include/linux/pci_ids.h  1591  #define PCI_DEVICE_ID_ARTOP_AEC7612D 0x8040
PCI_DEVICE_ID_ARTOP_AEC7612SUW  macro  include/linux/pci_ids.h  1592  #define PCI_DEVICE_ID_ARTOP_AEC7612SUW 0x8050
PCI_DEVICE_ID_ARTOP_8060  macro  include/linux/pci_ids.h  1593  #define PCI_DEVICE_ID_ARTOP_8060 0x8060
PCI_VENDOR_ID_ZEITNET  macro  include/linux/pci_ids.h  1595  #define PCI_VENDOR_ID_ZEITNET 0x1193
PCI_DEVICE_ID_ZEITNET_1221  macro  include/linux/pci_ids.h  1596  #define PCI_DEVICE_ID_ZEITNET_1221 0x0001
PCI_DEVICE_ID_ZEITNET_1225  macro  include/linux/pci_ids.h  1597  #define PCI_DEVICE_ID_ZEITNET_1225 0x0002
PCI_VENDOR_ID_FUJITSU_ME  macro  include/linux/pci_ids.h  1599  #define PCI_VENDOR_ID_FUJITSU_ME 0x119e
PCI_DEVICE_ID_FUJITSU_FS155  macro  include/linux/pci_ids.h  1600  #define PCI_DEVICE_ID_FUJITSU_FS155 0x0001
PCI_DEVICE_ID_FUJITSU_FS50  macro  include/linux/pci_ids.h  1601  #define PCI_DEVICE_ID_FUJITSU_FS50 0x0003
PCI_SUBVENDOR_ID_KEYSPAN  macro  include/linux/pci_ids.h  1603  #define PCI_SUBVENDOR_ID_KEYSPAN 0x11a9
PCI_SUBDEVICE_ID_KEYSPAN_SX2  macro  include/linux/pci_ids.h  1604  #define PCI_SUBDEVICE_ID_KEYSPAN_SX2 0x5334
PCI_VENDOR_ID_MARVELL  macro  include/linux/pci_ids.h  1606  #define PCI_VENDOR_ID_MARVELL 0x11ab
PCI_DEVICE_ID_MARVELL_GT64111  macro  include/linux/pci_ids.h  1607  #define PCI_DEVICE_ID_MARVELL_GT64111 0x4146
PCI_DEVICE_ID_MARVELL_GT64260  macro  include/linux/pci_ids.h  1608  #define PCI_DEVICE_ID_MARVELL_GT64260 0x6430
PCI_DEVICE_ID_MARVELL_MV64360  macro  include/linux/pci_ids.h  1609  #define PCI_DEVICE_ID_MARVELL_MV64360 0x6460
PCI_DEVICE_ID_MARVELL_MV64460  macro  include/linux/pci_ids.h  1610  #define PCI_DEVICE_ID_MARVELL_MV64460 0x6480
PCI_DEVICE_ID_MARVELL_88ALP01_NAND  macro  include/linux/pci_ids.h  1611  #define PCI_DEVICE_ID_MARVELL_88ALP01_NAND 0x4100
PCI_DEVICE_ID_MARVELL_88ALP01_SD  macro  include/linux/pci_ids.h  1612  #define PCI_DEVICE_ID_MARVELL_88ALP01_SD 0x4101
PCI_DEVICE_ID_MARVELL_88ALP01_CCIC  macro  include/linux/pci_ids.h  1613  #define PCI_DEVICE_ID_MARVELL_88ALP01_CCIC 0x4102
PCI_VENDOR_ID_V3  macro  include/linux/pci_ids.h  1615  #define PCI_VENDOR_ID_V3 0x11b0
PCI_DEVICE_ID_V3_V960  macro  include/linux/pci_ids.h  1616  #define PCI_DEVICE_ID_V3_V960 0x0001
PCI_DEVICE_ID_V3_V351  macro  include/linux/pci_ids.h  1617  #define PCI_DEVICE_ID_V3_V351 0x0002
PCI_VENDOR_ID_ATT  macro  include/linux/pci_ids.h  1619  #define PCI_VENDOR_ID_ATT 0x11c1
PCI_DEVICE_ID_ATT_VENUS_MODEM  macro  include/linux/pci_ids.h  1620  #define PCI_DEVICE_ID_ATT_VENUS_MODEM 0x480
PCI_VENDOR_ID_SPECIALIX  macro  include/linux/pci_ids.h  1622  #define PCI_VENDOR_ID_SPECIALIX 0x11cb
PCI_DEVICE_ID_SPECIALIX_IO8  macro  include/linux/pci_ids.h  1623  #define PCI_DEVICE_ID_SPECIALIX_IO8 0x2000
PCI_DEVICE_ID_SPECIALIX_RIO  macro  include/linux/pci_ids.h  1624  #define PCI_DEVICE_ID_SPECIALIX_RIO 0x8000
PCI_SUBDEVICE_ID_SPECIALIX_SPEED4  macro  include/linux/pci_ids.h  1625  #define PCI_SUBDEVICE_ID_SPECIALIX_SPEED4 0xa004
PCI_VENDOR_ID_ANALOG_DEVICES  macro  include/linux/pci_ids.h  1627  #define PCI_VENDOR_ID_ANALOG_DEVICES 0x11d4
PCI_DEVICE_ID_AD1889JS  macro  include/linux/pci_ids.h  1628  #define PCI_DEVICE_ID_AD1889JS 0x1889
PCI_DEVICE_ID_SEGA_BBA  macro  include/linux/pci_ids.h  1630  #define PCI_DEVICE_ID_SEGA_BBA 0x1234
PCI_VENDOR_ID_ZORAN  macro  include/linux/pci_ids.h  1632  #define PCI_VENDOR_ID_ZORAN 0x11de
PCI_DEVICE_ID_ZORAN_36057  macro  include/linux/pci_ids.h  1633  #define PCI_DEVICE_ID_ZORAN_36057 0x6057
PCI_DEVICE_ID_ZORAN_36120  macro  include/linux/pci_ids.h  1634  #define PCI_DEVICE_ID_ZORAN_36120 0x6120
PCI_VENDOR_ID_COMPEX  macro  include/linux/pci_ids.h  1636  #define PCI_VENDOR_ID_COMPEX 0x11f6
PCI_DEVICE_ID_COMPEX_ENET100VG4  macro  include/linux/pci_ids.h  1637  #define PCI_DEVICE_ID_COMPEX_ENET100VG4 0x0112
PCI_VENDOR_ID_PMC_Sierra  macro  include/linux/pci_ids.h  1639  #define PCI_VENDOR_ID_PMC_Sierra 0x11f8
PCI_VENDOR_ID_RP  macro  include/linux/pci_ids.h  1641  #define PCI_VENDOR_ID_RP 0x11fe
PCI_DEVICE_ID_RP32INTF  macro  include/linux/pci_ids.h  1642  #define PCI_DEVICE_ID_RP32INTF 0x0001
PCI_DEVICE_ID_RP8INTF  macro  include/linux/pci_ids.h  1643  #define PCI_DEVICE_ID_RP8INTF 0x0002
PCI_DEVICE_ID_RP16INTF  macro  include/linux/pci_ids.h  1644  #define PCI_DEVICE_ID_RP16INTF 0x0003
PCI_DEVICE_ID_RP4QUAD  macro  include/linux/pci_ids.h  1645  #define PCI_DEVICE_ID_RP4QUAD 0x0004
PCI_DEVICE_ID_RP8OCTA  macro  include/linux/pci_ids.h  1646  #define PCI_DEVICE_ID_RP8OCTA 0x0005
PCI_DEVICE_ID_RP8J  macro  include/linux/pci_ids.h  1647  #define PCI_DEVICE_ID_RP8J 0x0006
PCI_DEVICE_ID_RP4J  macro  include/linux/pci_ids.h  1648  #define PCI_DEVICE_ID_RP4J 0x0007
PCI_DEVICE_ID_RP8SNI  macro  include/linux/pci_ids.h  1649  #define PCI_DEVICE_ID_RP8SNI 0x0008
PCI_DEVICE_ID_RP16SNI  macro  include/linux/pci_ids.h  1650  #define PCI_DEVICE_ID_RP16SNI 0x0009
PCI_DEVICE_ID_RPP4  macro  include/linux/pci_ids.h  1651  #define PCI_DEVICE_ID_RPP4 0x000A
PCI_DEVICE_ID_RPP8  macro  include/linux/pci_ids.h  1652  #define PCI_DEVICE_ID_RPP8 0x000B
PCI_DEVICE_ID_RP4M  macro  include/linux/pci_ids.h  1653  #define PCI_DEVICE_ID_RP4M 0x000D
PCI_DEVICE_ID_RP2_232  macro  include/linux/pci_ids.h  1654  #define PCI_DEVICE_ID_RP2_232 0x000E
PCI_DEVICE_ID_RP2_422  macro  include/linux/pci_ids.h  1655  #define PCI_DEVICE_ID_RP2_422 0x000F
PCI_DEVICE_ID_URP32INTF  macro  include/linux/pci_ids.h  1656  #define PCI_DEVICE_ID_URP32INTF 0x0801
PCI_DEVICE_ID_URP8INTF  macro  include/linux/pci_ids.h  1657  #define PCI_DEVICE_ID_URP8INTF 0x0802
PCI_DEVICE_ID_URP16INTF  macro  include/linux/pci_ids.h  1658  #define PCI_DEVICE_ID_URP16INTF 0x0803
PCI_DEVICE_ID_URP8OCTA  macro  include/linux/pci_ids.h  1659  #define PCI_DEVICE_ID_URP8OCTA 0x0805
PCI_DEVICE_ID_UPCI_RM3_8PORT  macro  include/linux/pci_ids.h  1660  #define PCI_DEVICE_ID_UPCI_RM3_8PORT 0x080C
PCI_DEVICE_ID_UPCI_RM3_4PORT  macro  include/linux/pci_ids.h  1661  #define PCI_DEVICE_ID_UPCI_RM3_4PORT 0x080D
PCI_DEVICE_ID_CRP16INTF  macro  include/linux/pci_ids.h  1662  #define PCI_DEVICE_ID_CRP16INTF 0x0903
PCI_VENDOR_ID_CYCLADES  macro  include/linux/pci_ids.h  1664  #define PCI_VENDOR_ID_CYCLADES 0x120e
PCI_DEVICE_ID_CYCLOM_Y_Lo  macro  include/linux/pci_ids.h  1665  #define PCI_DEVICE_ID_CYCLOM_Y_Lo 0x0100
PCI_DEVICE_ID_CYCLOM_Y_Hi  macro  include/linux/pci_ids.h  1666  #define PCI_DEVICE_ID_CYCLOM_Y_Hi 0x0101
PCI_DEVICE_ID_CYCLOM_4Y_Lo  macro  include/linux/pci_ids.h  1667  #define PCI_DEVICE_ID_CYCLOM_4Y_Lo 0x0102
PCI_DEVICE_ID_CYCLOM_4Y_Hi  macro  include/linux/pci_ids.h  1668  #define PCI_DEVICE_ID_CYCLOM_4Y_Hi 0x0103
PCI_DEVICE_ID_CYCLOM_8Y_Lo  macro  include/linux/pci_ids.h  1669  #define PCI_DEVICE_ID_CYCLOM_8Y_Lo 0x0104
PCI_DEVICE_ID_CYCLOM_8Y_Hi  macro  include/linux/pci_ids.h  1670  #define PCI_DEVICE_ID_CYCLOM_8Y_Hi 0x0105
PCI_DEVICE_ID_CYCLOM_Z_Lo  macro  include/linux/pci_ids.h  1671  #define PCI_DEVICE_ID_CYCLOM_Z_Lo 0x0200
PCI_DEVICE_ID_CYCLOM_Z_Hi  macro  include/linux/pci_ids.h  1672  #define PCI_DEVICE_ID_CYCLOM_Z_Hi 0x0201
PCI_DEVICE_ID_PC300_RX_2  macro  include/linux/pci_ids.h  1673  #define PCI_DEVICE_ID_PC300_RX_2 0x0300
PCI_DEVICE_ID_PC300_RX_1  macro  include/linux/pci_ids.h  1674  #define PCI_DEVICE_ID_PC300_RX_1 0x0301
PCI_DEVICE_ID_PC300_TE_2  macro  include/linux/pci_ids.h  1675  #define PCI_DEVICE_ID_PC300_TE_2 0x0310
PCI_DEVICE_ID_PC300_TE_1  macro  include/linux/pci_ids.h  1676  #define PCI_DEVICE_ID_PC300_TE_1 0x0311
PCI_DEVICE_ID_PC300_TE_M_2  macro  include/linux/pci_ids.h  1677  #define PCI_DEVICE_ID_PC300_TE_M_2 0x0320
PCI_DEVICE_ID_PC300_TE_M_1  macro  include/linux/pci_ids.h  1678  #define PCI_DEVICE_ID_PC300_TE_M_1 0x0321
PCI_VENDOR_ID_ESSENTIAL  macro  include/linux/pci_ids.h  1680  #define PCI_VENDOR_ID_ESSENTIAL 0x120f
PCI_DEVICE_ID_ESSENTIAL_ROADRUNNER  macro  include/linux/pci_ids.h  1681  #define PCI_DEVICE_ID_ESSENTIAL_ROADRUNNER 0x0001
PCI_VENDOR_ID_O2  macro  include/linux/pci_ids.h  1683  #define PCI_VENDOR_ID_O2 0x1217
PCI_DEVICE_ID_O2_6729  macro  include/linux/pci_ids.h  1684  #define PCI_DEVICE_ID_O2_6729 0x6729
PCI_DEVICE_ID_O2_6730  macro  include/linux/pci_ids.h  1685  #define PCI_DEVICE_ID_O2_6730 0x673a
PCI_DEVICE_ID_O2_6832  macro  include/linux/pci_ids.h  1686  #define PCI_DEVICE_ID_O2_6832 0x6832
PCI_DEVICE_ID_O2_6836  macro  include/linux/pci_ids.h  1687  #define PCI_DEVICE_ID_O2_6836 0x6836
PCI_DEVICE_ID_O2_6812  macro  include/linux/pci_ids.h  1688  #define PCI_DEVICE_ID_O2_6812 0x6872
PCI_DEVICE_ID_O2_6933  macro  include/linux/pci_ids.h  1689  #define PCI_DEVICE_ID_O2_6933 0x6933
PCI_DEVICE_ID_O2_8120  macro  include/linux/pci_ids.h  1690  #define PCI_DEVICE_ID_O2_8120 0x8120
PCI_DEVICE_ID_O2_8220  macro  include/linux/pci_ids.h  1691  #define PCI_DEVICE_ID_O2_8220 0x8220
PCI_DEVICE_ID_O2_8221  macro  include/linux/pci_ids.h  1692  #define PCI_DEVICE_ID_O2_8221 0x8221
PCI_DEVICE_ID_O2_8320  macro  include/linux/pci_ids.h  1693  #define PCI_DEVICE_ID_O2_8320 0x8320
PCI_DEVICE_ID_O2_8321  macro  include/linux/pci_ids.h  1694  #define PCI_DEVICE_ID_O2_8321 0x8321
PCI_VENDOR_ID_3DFX  macro  include/linux/pci_ids.h  1696  #define PCI_VENDOR_ID_3DFX 0x121a
PCI_DEVICE_ID_3DFX_VOODOO  macro  include/linux/pci_ids.h  1697  #define PCI_DEVICE_ID_3DFX_VOODOO 0x0001
PCI_DEVICE_ID_3DFX_VOODOO2  macro  include/linux/pci_ids.h  1698  #define PCI_DEVICE_ID_3DFX_VOODOO2 0x0002
PCI_DEVICE_ID_3DFX_BANSHEE  macro  include/linux/pci_ids.h  1699  #define PCI_DEVICE_ID_3DFX_BANSHEE 0x0003
PCI_DEVICE_ID_3DFX_VOODOO3  macro  include/linux/pci_ids.h  1700  #define PCI_DEVICE_ID_3DFX_VOODOO3 0x0005
PCI_DEVICE_ID_3DFX_VOODOO5  macro  include/linux/pci_ids.h  1701  #define PCI_DEVICE_ID_3DFX_VOODOO5 0x0009
PCI_VENDOR_ID_AVM  macro  include/linux/pci_ids.h  1703  #define PCI_VENDOR_ID_AVM 0x1244
PCI_DEVICE_ID_AVM_B1  macro  include/linux/pci_ids.h  1704  #define PCI_DEVICE_ID_AVM_B1 0x0700
PCI_DEVICE_ID_AVM_C4  macro  include/linux/pci_ids.h  1705  #define PCI_DEVICE_ID_AVM_C4 0x0800
PCI_DEVICE_ID_AVM_A1  macro  include/linux/pci_ids.h  1706  #define PCI_DEVICE_ID_AVM_A1 0x0a00
PCI_DEVICE_ID_AVM_A1_V2  macro  include/linux/pci_ids.h  1707  #define PCI_DEVICE_ID_AVM_A1_V2 0x0e00
PCI_DEVICE_ID_AVM_C2  macro  include/linux/pci_ids.h  1708  #define PCI_DEVICE_ID_AVM_C2 0x1100
PCI_DEVICE_ID_AVM_T1  macro  include/linux/pci_ids.h  1709  #define PCI_DEVICE_ID_AVM_T1 0x1200
PCI_VENDOR_ID_STALLION  macro  include/linux/pci_ids.h  1711  #define PCI_VENDOR_ID_STALLION 0x124d
PCI_VENDOR_ID_AT  macro  include/linux/pci_ids.h  1714  #define PCI_VENDOR_ID_AT 0x1259
PCI_SUBDEVICE_ID_AT_2700FX  macro  include/linux/pci_ids.h  1715  #define PCI_SUBDEVICE_ID_AT_2700FX 0x2701
PCI_SUBDEVICE_ID_AT_2701FX  macro  include/linux/pci_ids.h  1716  #define PCI_SUBDEVICE_ID_AT_2701FX 0x2703
PCI_VENDOR_ID_ESS  macro  include/linux/pci_ids.h  1718  #define PCI_VENDOR_ID_ESS 0x125d
PCI_DEVICE_ID_ESS_ESS1968  macro  include/linux/pci_ids.h  1719  #define PCI_DEVICE_ID_ESS_ESS1968 0x1968
PCI_DEVICE_ID_ESS_ESS1978  macro  include/linux/pci_ids.h  1720  #define PCI_DEVICE_ID_ESS_ESS1978 0x1978
PCI_DEVICE_ID_ESS_ALLEGRO_1  macro  include/linux/pci_ids.h  1721  #define PCI_DEVICE_ID_ESS_ALLEGRO_1 0x1988
PCI_DEVICE_ID_ESS_ALLEGRO  macro  include/linux/pci_ids.h  1722  #define PCI_DEVICE_ID_ESS_ALLEGRO 0x1989
PCI_DEVICE_ID_ESS_CANYON3D_2LE  macro  include/linux/pci_ids.h  1723  #define PCI_DEVICE_ID_ESS_CANYON3D_2LE 0x1990
PCI_DEVICE_ID_ESS_CANYON3D_2  macro  include/linux/pci_ids.h  1724  #define PCI_DEVICE_ID_ESS_CANYON3D_2 0x1992
PCI_DEVICE_ID_ESS_MAESTRO3  macro  include/linux/pci_ids.h  1725  #define PCI_DEVICE_ID_ESS_MAESTRO3 0x1998
PCI_DEVICE_ID_ESS_MAESTRO3_1  macro  include/linux/pci_ids.h  1726  #define PCI_DEVICE_ID_ESS_MAESTRO3_1 0x1999
PCI_DEVICE_ID_ESS_MAESTRO3_HW  macro  include/linux/pci_ids.h  1727  #define PCI_DEVICE_ID_ESS_MAESTRO3_HW 0x199a
PCI_DEVICE_ID_ESS_MAESTRO3_2  macro  include/linux/pci_ids.h  1728  #define PCI_DEVICE_ID_ESS_MAESTRO3_2 0x199b
PCI_VENDOR_ID_SATSAGEM  macro  include/linux/pci_ids.h  1730  #define PCI_VENDOR_ID_SATSAGEM 0x1267
PCI_DEVICE_ID_SATSAGEM_NICCY  macro  include/linux/pci_ids.h  1731  #define PCI_DEVICE_ID_SATSAGEM_NICCY 0x1016
PCI_VENDOR_ID_ENSONIQ  macro  include/linux/pci_ids.h  1733  #define PCI_VENDOR_ID_ENSONIQ 0x1274
PCI_DEVICE_ID_ENSONIQ_CT5880  macro  include/linux/pci_ids.h  1734  #define PCI_DEVICE_ID_ENSONIQ_CT5880 0x5880
PCI_DEVICE_ID_ENSONIQ_ES1370  macro  include/linux/pci_ids.h  1735  #define PCI_DEVICE_ID_ENSONIQ_ES1370 0x5000
PCI_DEVICE_ID_ENSONIQ_ES1371  macro  include/linux/pci_ids.h  1736  #define PCI_DEVICE_ID_ENSONIQ_ES1371 0x1371
PCI_VENDOR_ID_TRANSMETA  macro  include/linux/pci_ids.h  1738  #define PCI_VENDOR_ID_TRANSMETA 0x1279
PCI_DEVICE_ID_EFFICEON  macro  include/linux/pci_ids.h  1739  #define PCI_DEVICE_ID_EFFICEON 0x0060
PCI_VENDOR_ID_ROCKWELL  macro  include/linux/pci_ids.h  1741  #define PCI_VENDOR_ID_ROCKWELL 0x127A
PCI_VENDOR_ID_ITE  macro  include/linux/pci_ids.h  1743  #define PCI_VENDOR_ID_ITE 0x1283
PCI_DEVICE_ID_ITE_8172  macro  include/linux/pci_ids.h  1744  #define PCI_DEVICE_ID_ITE_8172 0x8172
PCI_DEVICE_ID_ITE_8211  macro  include/linux/pci_ids.h  1745  #define PCI_DEVICE_ID_ITE_8211 0x8211
PCI_DEVICE_ID_ITE_8212  macro  include/linux/pci_ids.h  1746  #define PCI_DEVICE_ID_ITE_8212 0x8212
PCI_DEVICE_ID_ITE_8213  macro  include/linux/pci_ids.h  1747  #define PCI_DEVICE_ID_ITE_8213 0x8213
PCI_DEVICE_ID_ITE_8152  macro  include/linux/pci_ids.h  1748  #define PCI_DEVICE_ID_ITE_8152 0x8152
PCI_DEVICE_ID_ITE_8872  macro  include/linux/pci_ids.h  1749  #define PCI_DEVICE_ID_ITE_8872 0x8872
PCI_DEVICE_ID_ITE_IT8330G_0  macro  include/linux/pci_ids.h  1750  #define PCI_DEVICE_ID_ITE_IT8330G_0 0xe886
PCI_DEVICE_ID_ESS_ESS0100  macro  include/linux/pci_ids.h  1753  #define PCI_DEVICE_ID_ESS_ESS0100 0x0100
PCI_VENDOR_ID_ALTEON  macro  include/linux/pci_ids.h  1755  #define PCI_VENDOR_ID_ALTEON 0x12ae
PCI_SUBVENDOR_ID_CONNECT_TECH  macro  include/linux/pci_ids.h  1757  #define PCI_SUBVENDOR_ID_CONNECT_TECH 0x12c4
PCI_SUBDEVICE_ID_CONNECT_TECH_BH8_232  macro  include/linux/pci_ids.h  1758  #define PCI_SUBDEVICE_ID_CONNECT_TECH_BH8_232 0x0001
PCI_SUBDEVICE_ID_CONNECT_TECH_BH4_232  macro  include/linux/pci_ids.h  1759  #define PCI_SUBDEVICE_ID_CONNECT_TECH_BH4_232 0x0002
PCI_SUBDEVICE_ID_CONNECT_TECH_BH2_232  macro  include/linux/pci_ids.h  1760  #define PCI_SUBDEVICE_ID_CONNECT_TECH_BH2_232 0x0003
PCI_SUBDEVICE_ID_CONNECT_TECH_BH8_485  macro  include/linux/pci_ids.h  1761  #define PCI_SUBDEVICE_ID_CONNECT_TECH_BH8_485 0x0004
PCI_SUBDEVICE_ID_CONNECT_TECH_BH8_485_4_4  macro  include/linux/pci_ids.h  1762  #define PCI_SUBDEVICE_ID_CONNECT_TECH_BH8_485_4_4 0x0005
PCI_SUBDEVICE_ID_CONNECT_TECH_BH4_485  macro  include/linux/pci_ids.h  1763  #define PCI_SUBDEVICE_ID_CONNECT_TECH_BH4_485 0x0006
PCI_SUBDEVICE_ID_CONNECT_TECH_BH4_485_2_2  macro  include/linux/pci_ids.h  1764  #define PCI_SUBDEVICE_ID_CONNECT_TECH_BH4_485_2_2 0x0007
PCI_SUBDEVICE_ID_CONNECT_TECH_BH2_485  macro  include/linux/pci_ids.h  1765  #define PCI_SUBDEVICE_ID_CONNECT_TECH_BH2_485 0x0008
PCI_SUBDEVICE_ID_CONNECT_TECH_BH8_485_2_6  macro  include/linux/pci_ids.h  1766  #define PCI_SUBDEVICE_ID_CONNECT_TECH_BH8_485_2_6 0x0009
PCI_SUBDEVICE_ID_CONNECT_TECH_BH081101V1  macro  include/linux/pci_ids.h  1767  #define PCI_SUBDEVICE_ID_CONNECT_TECH_BH081101V1 0x000A
PCI_SUBDEVICE_ID_CONNECT_TECH_BH041101V1  macro  include/linux/pci_ids.h  1768  #define PCI_SUBDEVICE_ID_CONNECT_TECH_BH041101V1 0x000B
PCI_SUBDEVICE_ID_CONNECT_TECH_BH2_20MHZ  macro  include/linux/pci_ids.h  1769  #define PCI_SUBDEVICE_ID_CONNECT_TECH_BH2_20MHZ 0x000C
PCI_SUBDEVICE_ID_CONNECT_TECH_BH2_PTM  macro  include/linux/pci_ids.h  1770  #define PCI_SUBDEVICE_ID_CONNECT_TECH_BH2_PTM 0x000D
PCI_SUBDEVICE_ID_CONNECT_TECH_NT960PCI  macro  include/linux/pci_ids.h  1771  #define PCI_SUBDEVICE_ID_CONNECT_TECH_NT960PCI 0x0100
PCI_SUBDEVICE_ID_CONNECT_TECH_TITAN_2  macro  include/linux/pci_ids.h  1772  #define PCI_SUBDEVICE_ID_CONNECT_TECH_TITAN_2 0x0201
PCI_SUBDEVICE_ID_CONNECT_TECH_TITAN_4  macro  include/linux/pci_ids.h  1773  #define PCI_SUBDEVICE_ID_CONNECT_TECH_TITAN_4 0x0202
PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_2_232  macro  include/linux/pci_ids.h  1774  #define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_2_232 0x0300
PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_4_232  macro  include/linux/pci_ids.h  1775  #define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_4_232 0x0301
PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_8_232  macro  include/linux/pci_ids.h  1776  #define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_8_232 0x0302
PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_1_1  macro  include/linux/pci_ids.h  1777  #define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_1_1 0x0310
PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_2_2  macro  include/linux/pci_ids.h  1778  #define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_2_2 0x0311
PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_4_4  macro  include/linux/pci_ids.h  1779  #define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_4_4 0x0312
PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_2  macro  include/linux/pci_ids.h  1780  #define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_2 0x0320
PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_4  macro  include/linux/pci_ids.h  1781  #define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_4 0x0321
PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_8  macro  include/linux/pci_ids.h  1782  #define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_8 0x0322
PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_2_485  macro  include/linux/pci_ids.h  1783  #define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_2_485 0x0330
PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_4_485  macro  include/linux/pci_ids.h  1784  #define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_4_485 0x0331
PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_8_485  macro  include/linux/pci_ids.h  1785  #define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_8_485 0x0332
PCI_VENDOR_ID_NVIDIA_SGS  macro  include/linux/pci_ids.h  1787  #define PCI_VENDOR_ID_NVIDIA_SGS 0x12d2
PCI_DEVICE_ID_NVIDIA_SGS_RIVA128  macro  include/linux/pci_ids.h  1788  #define PCI_DEVICE_ID_NVIDIA_SGS_RIVA128 0x0018
PCI_SUBVENDOR_ID_CHASE_PCIFAST  macro  include/linux/pci_ids.h  1790  #define PCI_SUBVENDOR_ID_CHASE_PCIFAST 0x12E0
PCI_SUBDEVICE_ID_CHASE_PCIFAST4  macro  include/linux/pci_ids.h  1791  #define PCI_SUBDEVICE_ID_CHASE_PCIFAST4 0x0031
PCI_SUBDEVICE_ID_CHASE_PCIFAST8  macro  include/linux/pci_ids.h  1792  #define PCI_SUBDEVICE_ID_CHASE_PCIFAST8 0x0021
PCI_SUBDEVICE_ID_CHASE_PCIFAST16  macro  include/linux/pci_ids.h  1793  #define PCI_SUBDEVICE_ID_CHASE_PCIFAST16 0x0011
PCI_SUBDEVICE_ID_CHASE_PCIFAST16FMC  macro  include/linux/pci_ids.h  1794  #define PCI_SUBDEVICE_ID_CHASE_PCIFAST16FMC 0x0041
PCI_SUBVENDOR_ID_CHASE_PCIRAS  macro  include/linux/pci_ids.h  1795  #define PCI_SUBVENDOR_ID_CHASE_PCIRAS 0x124D
PCI_SUBDEVICE_ID_CHASE_PCIRAS4  macro  include/linux/pci_ids.h  1796  #define PCI_SUBDEVICE_ID_CHASE_PCIRAS4 0xF001
PCI_SUBDEVICE_ID_CHASE_PCIRAS8  macro  include/linux/pci_ids.h  1797  #define PCI_SUBDEVICE_ID_CHASE_PCIRAS8 0xF010
PCI_VENDOR_ID_AUREAL  macro  include/linux/pci_ids.h  1799  #define PCI_VENDOR_ID_AUREAL 0x12eb
PCI_DEVICE_ID_AUREAL_VORTEX_1  macro  include/linux/pci_ids.h  1800  #define PCI_DEVICE_ID_AUREAL_VORTEX_1 0x0001
PCI_DEVICE_ID_AUREAL_VORTEX_2  macro  include/linux/pci_ids.h  1801  #define PCI_DEVICE_ID_AUREAL_VORTEX_2 0x0002
PCI_DEVICE_ID_AUREAL_ADVANTAGE  macro  include/linux/pci_ids.h  1802  #define PCI_DEVICE_ID_AUREAL_ADVANTAGE 0x0003
PCI_VENDOR_ID_ELECTRONICDESIGNGMBH  macro  include/linux/pci_ids.h  1804  #define PCI_VENDOR_ID_ELECTRONICDESIGNGMBH 0x12f8
PCI_DEVICE_ID_LML_33R10  macro  include/linux/pci_ids.h  1805  #define PCI_DEVICE_ID_LML_33R10 0x8a02
PCI_VENDOR_ID_ESDGMBH  macro  include/linux/pci_ids.h  1807  #define PCI_VENDOR_ID_ESDGMBH 0x12fe
PCI_DEVICE_ID_ESDGMBH_CPCIASIO4  macro  include/linux/pci_ids.h  1808  #define PCI_DEVICE_ID_ESDGMBH_CPCIASIO4 0x0111
PCI_VENDOR_ID_SIIG  macro  include/linux/pci_ids.h  1810  #define PCI_VENDOR_ID_SIIG 0x131f
PCI_SUBVENDOR_ID_SIIG  macro  include/linux/pci_ids.h  1811  #define PCI_SUBVENDOR_ID_SIIG 0x131f
PCI_DEVICE_ID_SIIG_1S_10x_550  macro  include/linux/pci_ids.h  1812  #define PCI_DEVICE_ID_SIIG_1S_10x_550 0x1000
PCI_DEVICE_ID_SIIG_1S_10x_650  macro  include/linux/pci_ids.h  1813  #define PCI_DEVICE_ID_SIIG_1S_10x_650 0x1001
PCI_DEVICE_ID_SIIG_1S_10x_850  macro  include/linux/pci_ids.h  1814  #define PCI_DEVICE_ID_SIIG_1S_10x_850 0x1002
PCI_DEVICE_ID_SIIG_1S1P_10x_550  macro  include/linux/pci_ids.h  1815  #define PCI_DEVICE_ID_SIIG_1S1P_10x_550 0x1010
PCI_DEVICE_ID_SIIG_1S1P_10x_650  macro  include/linux/pci_ids.h  1816  #define PCI_DEVICE_ID_SIIG_1S1P_10x_650 0x1011
PCI_DEVICE_ID_SIIG_1S1P_10x_850  macro  include/linux/pci_ids.h  1817  #define PCI_DEVICE_ID_SIIG_1S1P_10x_850 0x1012
PCI_DEVICE_ID_SIIG_1P_10x  macro  include/linux/pci_ids.h  1818  #define PCI_DEVICE_ID_SIIG_1P_10x 0x1020
PCI_DEVICE_ID_SIIG_2P_10x  macro  include/linux/pci_ids.h  1819  #define PCI_DEVICE_ID_SIIG_2P_10x 0x1021
PCI_DEVICE_ID_SIIG_2S_10x_550  macro  include/linux/pci_ids.h  1820  #define PCI_DEVICE_ID_SIIG_2S_10x_550 0x1030
PCI_DEVICE_ID_SIIG_2S_10x_650  macro  include/linux/pci_ids.h  1821  #define PCI_DEVICE_ID_SIIG_2S_10x_650 0x1031
PCI_DEVICE_ID_SIIG_2S_10x_850  macro  include/linux/pci_ids.h  1822  #define PCI_DEVICE_ID_SIIG_2S_10x_850 0x1032
PCI_DEVICE_ID_SIIG_2S1P_10x_550  macro  include/linux/pci_ids.h  1823  #define PCI_DEVICE_ID_SIIG_2S1P_10x_550 0x1034
PCI_DEVICE_ID_SIIG_2S1P_10x_650  macro  include/linux/pci_ids.h  1824  #define PCI_DEVICE_ID_SIIG_2S1P_10x_650 0x1035
PCI_DEVICE_ID_SIIG_2S1P_10x_850  macro  include/linux/pci_ids.h  1825  #define PCI_DEVICE_ID_SIIG_2S1P_10x_850 0x1036
PCI_DEVICE_ID_SIIG_4S_10x_550  macro  include/linux/pci_ids.h  1826  #define PCI_DEVICE_ID_SIIG_4S_10x_550 0x1050
PCI_DEVICE_ID_SIIG_4S_10x_650  macro  include/linux/pci_ids.h  1827  #define PCI_DEVICE_ID_SIIG_4S_10x_650 0x1051
PCI_DEVICE_ID_SIIG_4S_10x_850  macro  include/linux/pci_ids.h  1828  #define PCI_DEVICE_ID_SIIG_4S_10x_850 0x1052
PCI_DEVICE_ID_SIIG_1S_20x_550  macro  include/linux/pci_ids.h  1829  #define PCI_DEVICE_ID_SIIG_1S_20x_550 0x2000
PCI_DEVICE_ID_SIIG_1S_20x_650  macro  include/linux/pci_ids.h  1830  #define PCI_DEVICE_ID_SIIG_1S_20x_650 0x2001
PCI_DEVICE_ID_SIIG_1S_20x_850  macro  include/linux/pci_ids.h  1831  #define PCI_DEVICE_ID_SIIG_1S_20x_850 0x2002
PCI_DEVICE_ID_SIIG_1P_20x  macro  include/linux/pci_ids.h  1832  #define PCI_DEVICE_ID_SIIG_1P_20x 0x2020
PCI_DEVICE_ID_SIIG_2P_20x  macro  include/linux/pci_ids.h  1833  #define PCI_DEVICE_ID_SIIG_2P_20x 0x2021
PCI_DEVICE_ID_SIIG_2S_20x_550  macro  include/linux/pci_ids.h  1834  #define PCI_DEVICE_ID_SIIG_2S_20x_550 0x2030
PCI_DEVICE_ID_SIIG_2S_20x_650  macro  include/linux/pci_ids.h  1835  #define PCI_DEVICE_ID_SIIG_2S_20x_650 0x2031
PCI_DEVICE_ID_SIIG_2S_20x_850  macro  include/linux/pci_ids.h  1836  #define PCI_DEVICE_ID_SIIG_2S_20x_850 0x2032
PCI_DEVICE_ID_SIIG_2P1S_20x_550  macro  include/linux/pci_ids.h  1837  #define PCI_DEVICE_ID_SIIG_2P1S_20x_550 0x2040
PCI_DEVICE_ID_SIIG_2P1S_20x_650  macro  include/linux/pci_ids.h  1838  #define PCI_DEVICE_ID_SIIG_2P1S_20x_650 0x2041
PCI_DEVICE_ID_SIIG_2P1S_20x_850  macro  include/linux/pci_ids.h  1839  #define PCI_DEVICE_ID_SIIG_2P1S_20x_850 0x2042
PCI_DEVICE_ID_SIIG_1S1P_20x_550  macro  include/linux/pci_ids.h  1840  #define PCI_DEVICE_ID_SIIG_1S1P_20x_550 0x2010
PCI_DEVICE_ID_SIIG_1S1P_20x_650  macro  include/linux/pci_ids.h  1841  #define PCI_DEVICE_ID_SIIG_1S1P_20x_650 0x2011
PCI_DEVICE_ID_SIIG_1S1P_20x_850  macro  include/linux/pci_ids.h  1842  #define PCI_DEVICE_ID_SIIG_1S1P_20x_850 0x2012
PCI_DEVICE_ID_SIIG_4S_20x_550  macro  include/linux/pci_ids.h  1843  #define PCI_DEVICE_ID_SIIG_4S_20x_550 0x2050
PCI_DEVICE_ID_SIIG_4S_20x_650  macro  include/linux/pci_ids.h  1844  #define PCI_DEVICE_ID_SIIG_4S_20x_650 0x2051
PCI_DEVICE_ID_SIIG_4S_20x_850  macro  include/linux/pci_ids.h  1845  #define PCI_DEVICE_ID_SIIG_4S_20x_850 0x2052
PCI_DEVICE_ID_SIIG_2S1P_20x_550  macro  include/linux/pci_ids.h  1846  #define PCI_DEVICE_ID_SIIG_2S1P_20x_550 0x2060
PCI_DEVICE_ID_SIIG_2S1P_20x_650  macro  include/linux/pci_ids.h  1847  #define PCI_DEVICE_ID_SIIG_2S1P_20x_650 0x2061
PCI_DEVICE_ID_SIIG_2S1P_20x_850  macro  include/linux/pci_ids.h  1848  #define PCI_DEVICE_ID_SIIG_2S1P_20x_850 0x2062
PCI_DEVICE_ID_SIIG_8S_20x_550  macro  include/linux/pci_ids.h  1849  #define PCI_DEVICE_ID_SIIG_8S_20x_550 0x2080
PCI_DEVICE_ID_SIIG_8S_20x_650  macro  include/linux/pci_ids.h  1850  #define PCI_DEVICE_ID_SIIG_8S_20x_650 0x2081
PCI_DEVICE_ID_SIIG_8S_20x_850  macro  include/linux/pci_ids.h  1851  #define PCI_DEVICE_ID_SIIG_8S_20x_850 0x2082
PCI_SUBDEVICE_ID_SIIG_QUARTET_SERIAL  macro  include/linux/pci_ids.h  1852  #define PCI_SUBDEVICE_ID_SIIG_QUARTET_SERIAL 0x2050
PCI_VENDOR_ID_RADISYS  macro  include/linux/pci_ids.h  1854  #define PCI_VENDOR_ID_RADISYS 0x1331
PCI_VENDOR_ID_MICRO_MEMORY  macro  include/linux/pci_ids.h  1856  #define PCI_VENDOR_ID_MICRO_MEMORY 0x1332
PCI_DEVICE_ID_MICRO_MEMORY_5415CN  macro  include/linux/pci_ids.h  1857  #define PCI_DEVICE_ID_MICRO_MEMORY_5415CN 0x5415
PCI_DEVICE_ID_MICRO_MEMORY_5425CN  macro  include/linux/pci_ids.h  1858  #define PCI_DEVICE_ID_MICRO_MEMORY_5425CN 0x5425
PCI_DEVICE_ID_MICRO_MEMORY_6155  macro  include/linux/pci_ids.h  1859  #define PCI_DEVICE_ID_MICRO_MEMORY_6155 0x6155
PCI_VENDOR_ID_DOMEX  macro  include/linux/pci_ids.h  1861  #define PCI_VENDOR_ID_DOMEX 0x134a
PCI_DEVICE_ID_DOMEX_DMX3191D  macro  include/linux/pci_ids.h  1862  #define PCI_DEVICE_ID_DOMEX_DMX3191D 0x0001
PCI_VENDOR_ID_INTASHIELD  macro  include/linux/pci_ids.h  1864  #define PCI_VENDOR_ID_INTASHIELD 0x135a
PCI_DEVICE_ID_INTASHIELD_IS200  macro  include/linux/pci_ids.h  1865  #define PCI_DEVICE_ID_INTASHIELD_IS200 0x0d80
PCI_DEVICE_ID_INTASHIELD_IS400  macro  include/linux/pci_ids.h  1866  #define PCI_DEVICE_ID_INTASHIELD_IS400 0x0dc0
PCI_VENDOR_ID_QUATECH  macro  include/linux/pci_ids.h  1868  #define PCI_VENDOR_ID_QUATECH 0x135C
PCI_DEVICE_ID_QUATECH_QSC100  macro  include/linux/pci_ids.h  1869  #define PCI_DEVICE_ID_QUATECH_QSC100 0x0010
PCI_DEVICE_ID_QUATECH_DSC100  macro  include/linux/pci_ids.h  1870  #define PCI_DEVICE_ID_QUATECH_DSC100 0x0020
PCI_DEVICE_ID_QUATECH_ESC100D  macro  include/linux/pci_ids.h  1871  #define PCI_DEVICE_ID_QUATECH_ESC100D 0x0050
PCI_DEVICE_ID_QUATECH_ESC100M  macro  include/linux/pci_ids.h  1872  #define PCI_DEVICE_ID_QUATECH_ESC100M 0x0060
PCI_DEVICE_ID_QUATECH_SPPXP_100  macro  include/linux/pci_ids.h  1873  #define PCI_DEVICE_ID_QUATECH_SPPXP_100 0x0278
PCI_VENDOR_ID_SEALEVEL  macro  include/linux/pci_ids.h  1875  #define PCI_VENDOR_ID_SEALEVEL 0x135e
PCI_DEVICE_ID_SEALEVEL_U530  macro  include/linux/pci_ids.h  1876  #define PCI_DEVICE_ID_SEALEVEL_U530 0x7101
PCI_DEVICE_ID_SEALEVEL_UCOMM2  macro  include/linux/pci_ids.h  1877  #define PCI_DEVICE_ID_SEALEVEL_UCOMM2 0x7201
PCI_DEVICE_ID_SEALEVEL_UCOMM422  macro  include/linux/pci_ids.h  1878  #define PCI_DEVICE_ID_SEALEVEL_UCOMM422 0x7402
PCI_DEVICE_ID_SEALEVEL_UCOMM232  macro  include/linux/pci_ids.h  1879  #define PCI_DEVICE_ID_SEALEVEL_UCOMM232 0x7202
PCI_DEVICE_ID_SEALEVEL_COMM4  macro  include/linux/pci_ids.h  1880  #define PCI_DEVICE_ID_SEALEVEL_COMM4 0x7401
PCI_DEVICE_ID_SEALEVEL_COMM8  macro  include/linux/pci_ids.h  1881  #define PCI_DEVICE_ID_SEALEVEL_COMM8 0x7801
PCI_DEVICE_ID_SEALEVEL_7803  macro  include/linux/pci_ids.h  1882  #define PCI_DEVICE_ID_SEALEVEL_7803 0x7803
PCI_DEVICE_ID_SEALEVEL_UCOMM8  macro  include/linux/pci_ids.h  1883  #define PCI_DEVICE_ID_SEALEVEL_UCOMM8 0x7804
PCI_VENDOR_ID_HYPERCOPE  macro  include/linux/pci_ids.h  1885  #define PCI_VENDOR_ID_HYPERCOPE 0x1365
PCI_DEVICE_ID_HYPERCOPE_PLX  macro  include/linux/pci_ids.h  1886  #define PCI_DEVICE_ID_HYPERCOPE_PLX 0x9050
PCI_SUBDEVICE_ID_HYPERCOPE_OLD_ERGO  macro  include/linux/pci_ids.h  1887  #define PCI_SUBDEVICE_ID_HYPERCOPE_OLD_ERGO 0x0104
PCI_SUBDEVICE_ID_HYPERCOPE_ERGO  macro  include/linux/pci_ids.h  1888  #define PCI_SUBDEVICE_ID_HYPERCOPE_ERGO 0x0106
PCI_SUBDEVICE_ID_HYPERCOPE_METRO  macro  include/linux/pci_ids.h  1889  #define PCI_SUBDEVICE_ID_HYPERCOPE_METRO 0x0107
PCI_SUBDEVICE_ID_HYPERCOPE_CHAMP2  macro  include/linux/pci_ids.h  1890  #define PCI_SUBDEVICE_ID_HYPERCOPE_CHAMP2 0x0108
PCI_VENDOR_ID_DIGIGRAM  macro  include/linux/pci_ids.h  1892  #define PCI_VENDOR_ID_DIGIGRAM 0x1369
PCI_SUBDEVICE_ID_DIGIGRAM_LX6464ES_SERIAL_SUBSYSTEM  macro  include/linux/pci_ids.h  1893  #define PCI_SUBDEVICE_ID_DIGIGRAM_LX6464ES_SERIAL_SUBSYSTEM 0xc001
PCI_SUBDEVICE_ID_DIGIGRAM_LX6464ES_CAE_SERIAL_SUBSYSTEM  macro  include/linux/pci_ids.h  1894  #define PCI_SUBDEVICE_ID_DIGIGRAM_LX6464ES_CAE_SERIAL_SUBSYSTEM 0xc002
PCI_VENDOR_ID_KAWASAKI  macro  include/linux/pci_ids.h  1896  #define PCI_VENDOR_ID_KAWASAKI 0x136b
PCI_DEVICE_ID_MCHIP_KL5A72002  macro  include/linux/pci_ids.h  1897  #define PCI_DEVICE_ID_MCHIP_KL5A72002 0xff01
PCI_VENDOR_ID_CNET  macro  include/linux/pci_ids.h  1899  #define PCI_VENDOR_ID_CNET 0x1371
PCI_DEVICE_ID_CNET_GIGACARD  macro  include/linux/pci_ids.h  1900  #define PCI_DEVICE_ID_CNET_GIGACARD 0x434e
PCI_VENDOR_ID_LMC  macro  include/linux/pci_ids.h  1902  #define PCI_VENDOR_ID_LMC 0x1376
PCI_DEVICE_ID_LMC_HSSI  macro  include/linux/pci_ids.h  1903  #define PCI_DEVICE_ID_LMC_HSSI 0x0003
PCI_DEVICE_ID_LMC_DS3  macro  include/linux/pci_ids.h  1904  #define PCI_DEVICE_ID_LMC_DS3 0x0004
PCI_DEVICE_ID_LMC_SSI  macro  include/linux/pci_ids.h  1905  #define PCI_DEVICE_ID_LMC_SSI 0x0005
PCI_DEVICE_ID_LMC_T1  macro  include/linux/pci_ids.h  1906  #define PCI_DEVICE_ID_LMC_T1 0x0006
PCI_VENDOR_ID_NETGEAR  macro  include/linux/pci_ids.h  1908  #define PCI_VENDOR_ID_NETGEAR 0x1385
PCI_DEVICE_ID_NETGEAR_GA620  macro  include/linux/pci_ids.h  1909  #define PCI_DEVICE_ID_NETGEAR_GA620 0x620a
PCI_VENDOR_ID_APPLICOM  macro  include/linux/pci_ids.h  1911  #define PCI_VENDOR_ID_APPLICOM 0x1389
PCI_DEVICE_ID_APPLICOM_PCIGENERIC  macro  include/linux/pci_ids.h  1912  #define PCI_DEVICE_ID_APPLICOM_PCIGENERIC 0x0001
PCI_DEVICE_ID_APPLICOM_PCI2000IBS_CAN  macro  include/linux/pci_ids.h  1913  #define PCI_DEVICE_ID_APPLICOM_PCI2000IBS_CAN 0x0002
PCI_DEVICE_ID_APPLICOM_PCI2000PFB  macro  include/linux/pci_ids.h  1914  #define PCI_DEVICE_ID_APPLICOM_PCI2000PFB 0x0003
PCI_VENDOR_ID_MOXA  macro  include/linux/pci_ids.h  1916  #define PCI_VENDOR_ID_MOXA 0x1393
PCI_DEVICE_ID_MOXA_RC7000  macro  include/linux/pci_ids.h  1917  #define PCI_DEVICE_ID_MOXA_RC7000 0x0001
PCI_DEVICE_ID_MOXA_CP102  macro  include/linux/pci_ids.h  1918  #define PCI_DEVICE_ID_MOXA_CP102 0x1020
PCI_DEVICE_ID_MOXA_CP102UL  macro  include/linux/pci_ids.h  1919  #define PCI_DEVICE_ID_MOXA_CP102UL 0x1021
PCI_DEVICE_ID_MOXA_CP102U  macro  include/linux/pci_ids.h  1920  #define PCI_DEVICE_ID_MOXA_CP102U 0x1022
PCI_DEVICE_ID_MOXA_C104  macro  include/linux/pci_ids.h  1921  #define PCI_DEVICE_ID_MOXA_C104 0x1040
PCI_DEVICE_ID_MOXA_CP104U  macro  include/linux/pci_ids.h  1922  #define PCI_DEVICE_ID_MOXA_CP104U 0x1041
PCI_DEVICE_ID_MOXA_CP104JU  macro  include/linux/pci_ids.h  1923  #define PCI_DEVICE_ID_MOXA_CP104JU 0x1042
PCI_DEVICE_ID_MOXA_CP104EL  macro  include/linux/pci_ids.h  1924  #define PCI_DEVICE_ID_MOXA_CP104EL 0x1043
PCI_DEVICE_ID_MOXA_CT114  macro  include/linux/pci_ids.h  1925  #define PCI_DEVICE_ID_MOXA_CT114 0x1140
PCI_DEVICE_ID_MOXA_CP114  macro  include/linux/pci_ids.h  1926  #define PCI_DEVICE_ID_MOXA_CP114 0x1141
PCI_DEVICE_ID_MOXA_CP118U  macro  include/linux/pci_ids.h  1927  #define PCI_DEVICE_ID_MOXA_CP118U 0x1180
PCI_DEVICE_ID_MOXA_CP118EL  macro  include/linux/pci_ids.h  1928  #define PCI_DEVICE_ID_MOXA_CP118EL 0x1181
PCI_DEVICE_ID_MOXA_CP132  macro  include/linux/pci_ids.h  1929  #define PCI_DEVICE_ID_MOXA_CP132 0x1320
PCI_DEVICE_ID_MOXA_CP132U  macro  include/linux/pci_ids.h  1930  #define PCI_DEVICE_ID_MOXA_CP132U 0x1321
PCI_DEVICE_ID_MOXA_CP134U  macro  include/linux/pci_ids.h  1931  #define PCI_DEVICE_ID_MOXA_CP134U 0x1340
PCI_DEVICE_ID_MOXA_C168  macro  include/linux/pci_ids.h  1932  #define PCI_DEVICE_ID_MOXA_C168 0x1680
PCI_DEVICE_ID_MOXA_CP168U  macro  include/linux/pci_ids.h  1933  #define PCI_DEVICE_ID_MOXA_CP168U 0x1681
PCI_DEVICE_ID_MOXA_CP168EL  macro  include/linux/pci_ids.h  1934  #define PCI_DEVICE_ID_MOXA_CP168EL 0x1682
PCI_DEVICE_ID_MOXA_CP204J  macro  include/linux/pci_ids.h  1935  #define PCI_DEVICE_ID_MOXA_CP204J 0x2040
PCI_DEVICE_ID_MOXA_C218  macro  include/linux/pci_ids.h  1936  #define PCI_DEVICE_ID_MOXA_C218 0x2180
PCI_DEVICE_ID_MOXA_C320  macro  include/linux/pci_ids.h  1937  #define PCI_DEVICE_ID_MOXA_C320 0x3200
PCI_VENDOR_ID_CCD  macro  include/linux/pci_ids.h  1939  #define PCI_VENDOR_ID_CCD 0x1397
PCI_DEVICE_ID_CCD_HFC4S  macro  include/linux/pci_ids.h  1940  #define PCI_DEVICE_ID_CCD_HFC4S 0x08B4
PCI_SUBDEVICE_ID_CCD_PMX2S  macro  include/linux/pci_ids.h  1941  #define PCI_SUBDEVICE_ID_CCD_PMX2S 0x1234
PCI_DEVICE_ID_CCD_HFC8S  macro  include/linux/pci_ids.h  1942  #define PCI_DEVICE_ID_CCD_HFC8S 0x16B8
PCI_DEVICE_ID_CCD_2BD0  macro  include/linux/pci_ids.h  1943  #define PCI_DEVICE_ID_CCD_2BD0 0x2bd0
PCI_DEVICE_ID_CCD_HFCE1  macro  include/linux/pci_ids.h  1944  #define PCI_DEVICE_ID_CCD_HFCE1 0x30B1
PCI_SUBDEVICE_ID_CCD_SPD4S  macro  include/linux/pci_ids.h  1945  #define PCI_SUBDEVICE_ID_CCD_SPD4S 0x3136
PCI_SUBDEVICE_ID_CCD_SPDE1  macro  include/linux/pci_ids.h  1946  #define PCI_SUBDEVICE_ID_CCD_SPDE1 0x3137
PCI_DEVICE_ID_CCD_B000  macro  include/linux/pci_ids.h  1947  #define PCI_DEVICE_ID_CCD_B000 0xb000
PCI_DEVICE_ID_CCD_B006  macro  include/linux/pci_ids.h  1948  #define PCI_DEVICE_ID_CCD_B006 0xb006
PCI_DEVICE_ID_CCD_B007  macro  include/linux/pci_ids.h  1949  #define PCI_DEVICE_ID_CCD_B007 0xb007
PCI_DEVICE_ID_CCD_B008  macro  include/linux/pci_ids.h  1950  #define PCI_DEVICE_ID_CCD_B008 0xb008
PCI_DEVICE_ID_CCD_B009  macro  include/linux/pci_ids.h  1951  #define PCI_DEVICE_ID_CCD_B009 0xb009
PCI_DEVICE_ID_CCD_B00A  macro  include/linux/pci_ids.h  1952  #define PCI_DEVICE_ID_CCD_B00A 0xb00a
PCI_DEVICE_ID_CCD_B00B  macro  include/linux/pci_ids.h  1953  #define PCI_DEVICE_ID_CCD_B00B 0xb00b
PCI_DEVICE_ID_CCD_B00C  macro  include/linux/pci_ids.h  1954  #define PCI_DEVICE_ID_CCD_B00C 0xb00c
PCI_DEVICE_ID_CCD_B100  macro  include/linux/pci_ids.h  1955  #define PCI_DEVICE_ID_CCD_B100 0xb100
PCI_SUBDEVICE_ID_CCD_IOB4ST  macro  include/linux/pci_ids.h  1956  #define PCI_SUBDEVICE_ID_CCD_IOB4ST 0xB520
PCI_SUBDEVICE_ID_CCD_IOB8STR  macro  include/linux/pci_ids.h  1957  #define PCI_SUBDEVICE_ID_CCD_IOB8STR 0xB521
PCI_SUBDEVICE_ID_CCD_IOB8ST  macro  include/linux/pci_ids.h  1958  #define PCI_SUBDEVICE_ID_CCD_IOB8ST 0xB522
PCI_SUBDEVICE_ID_CCD_IOB1E1  macro  include/linux/pci_ids.h  1959  #define PCI_SUBDEVICE_ID_CCD_IOB1E1 0xB523
PCI_SUBDEVICE_ID_CCD_SWYX4S  macro  include/linux/pci_ids.h  1960  #define PCI_SUBDEVICE_ID_CCD_SWYX4S 0xB540
PCI_SUBDEVICE_ID_CCD_JH4S20  macro  include/linux/pci_ids.h  1961  #define PCI_SUBDEVICE_ID_CCD_JH4S20 0xB550
PCI_SUBDEVICE_ID_CCD_IOB8ST_1  macro  include/linux/pci_ids.h  1962  #define PCI_SUBDEVICE_ID_CCD_IOB8ST_1 0xB552
PCI_SUBDEVICE_ID_CCD_JHSE1  macro  include/linux/pci_ids.h  1963  #define PCI_SUBDEVICE_ID_CCD_JHSE1 0xB553
PCI_SUBDEVICE_ID_CCD_JH8S  macro  include/linux/pci_ids.h  1964  #define PCI_SUBDEVICE_ID_CCD_JH8S 0xB55B
PCI_SUBDEVICE_ID_CCD_BN4S  macro  include/linux/pci_ids.h  1965  #define PCI_SUBDEVICE_ID_CCD_BN4S 0xB560
PCI_SUBDEVICE_ID_CCD_BN8S  macro  include/linux/pci_ids.h  1966  #define PCI_SUBDEVICE_ID_CCD_BN8S 0xB562
PCI_SUBDEVICE_ID_CCD_BNE1  macro  include/linux/pci_ids.h  1967  #define PCI_SUBDEVICE_ID_CCD_BNE1 0xB563
PCI_SUBDEVICE_ID_CCD_BNE1D  macro  include/linux/pci_ids.h  1968  #define PCI_SUBDEVICE_ID_CCD_BNE1D 0xB564
PCI_SUBDEVICE_ID_CCD_BNE1DP  macro  include/linux/pci_ids.h  1969  #define PCI_SUBDEVICE_ID_CCD_BNE1DP 0xB565
PCI_SUBDEVICE_ID_CCD_BN2S  macro  include/linux/pci_ids.h  1970  #define PCI_SUBDEVICE_ID_CCD_BN2S 0xB566
PCI_SUBDEVICE_ID_CCD_BN1SM  macro  include/linux/pci_ids.h  1971  #define PCI_SUBDEVICE_ID_CCD_BN1SM 0xB567
PCI_SUBDEVICE_ID_CCD_BN4SM  macro  include/linux/pci_ids.h  1972  #define PCI_SUBDEVICE_ID_CCD_BN4SM 0xB568
PCI_SUBDEVICE_ID_CCD_BN2SM  macro  include/linux/pci_ids.h  1973  #define PCI_SUBDEVICE_ID_CCD_BN2SM 0xB569
PCI_SUBDEVICE_ID_CCD_BNE1M  macro  include/linux/pci_ids.h  1974  #define PCI_SUBDEVICE_ID_CCD_BNE1M 0xB56A
PCI_SUBDEVICE_ID_CCD_BN8SP  macro  include/linux/pci_ids.h  1975  #define PCI_SUBDEVICE_ID_CCD_BN8SP 0xB56B
PCI_SUBDEVICE_ID_CCD_HFC4S  macro  include/linux/pci_ids.h  1976  #define PCI_SUBDEVICE_ID_CCD_HFC4S 0xB620
PCI_SUBDEVICE_ID_CCD_HFC8S  macro  include/linux/pci_ids.h  1977  #define PCI_SUBDEVICE_ID_CCD_HFC8S 0xB622
PCI_DEVICE_ID_CCD_B700  macro  include/linux/pci_ids.h  1978  #define PCI_DEVICE_ID_CCD_B700 0xb700
PCI_DEVICE_ID_CCD_B701  macro  include/linux/pci_ids.h  1979  #define PCI_DEVICE_ID_CCD_B701 0xb701
PCI_SUBDEVICE_ID_CCD_HFCE1  macro  include/linux/pci_ids.h  1980  #define PCI_SUBDEVICE_ID_CCD_HFCE1 0xC523
PCI_SUBDEVICE_ID_CCD_OV2S  macro  include/linux/pci_ids.h  1981  #define PCI_SUBDEVICE_ID_CCD_OV2S 0xE884
PCI_SUBDEVICE_ID_CCD_OV4S  macro  include/linux/pci_ids.h  1982  #define PCI_SUBDEVICE_ID_CCD_OV4S 0xE888
PCI_SUBDEVICE_ID_CCD_OV8S  macro  include/linux/pci_ids.h  1983  #define PCI_SUBDEVICE_ID_CCD_OV8S 0xE998
PCI_VENDOR_ID_EXAR  macro  include/linux/pci_ids.h  1985  #define PCI_VENDOR_ID_EXAR 0x13a8
PCI_DEVICE_ID_EXAR_XR17C152  macro  include/linux/pci_ids.h  1986  #define PCI_DEVICE_ID_EXAR_XR17C152 0x0152
PCI_DEVICE_ID_EXAR_XR17C154  macro  include/linux/pci_ids.h  1987  #define PCI_DEVICE_ID_EXAR_XR17C154 0x0154
PCI_DEVICE_ID_EXAR_XR17C158  macro  include/linux/pci_ids.h  1988  #define PCI_DEVICE_ID_EXAR_XR17C158 0x0158
PCI_DEVICE_ID_EXAR_XR17V352  macro  include/linux/pci_ids.h  1989  #define PCI_DEVICE_ID_EXAR_XR17V352 0x0352
PCI_DEVICE_ID_EXAR_XR17V354  macro  include/linux/pci_ids.h  1990  #define PCI_DEVICE_ID_EXAR_XR17V354 0x0354
PCI_DEVICE_ID_EXAR_XR17V358  macro  include/linux/pci_ids.h  1991  #define PCI_DEVICE_ID_EXAR_XR17V358 0x0358
PCI_VENDOR_ID_MICROGATE  macro  include/linux/pci_ids.h  1993  #define PCI_VENDOR_ID_MICROGATE 0x13c0
PCI_DEVICE_ID_MICROGATE_USC  macro  include/linux/pci_ids.h  1994  #define PCI_DEVICE_ID_MICROGATE_USC 0x0010
PCI_DEVICE_ID_MICROGATE_SCA  macro  include/linux/pci_ids.h  1995  #define PCI_DEVICE_ID_MICROGATE_SCA 0x0030
PCI_VENDOR_ID_3WARE  macro  include/linux/pci_ids.h  1997  #define PCI_VENDOR_ID_3WARE 0x13C1
PCI_DEVICE_ID_3WARE_1000  macro  include/linux/pci_ids.h  1998  #define PCI_DEVICE_ID_3WARE_1000 0x1000
PCI_DEVICE_ID_3WARE_7000  macro  include/linux/pci_ids.h  1999  #define PCI_DEVICE_ID_3WARE_7000 0x1001
PCI_DEVICE_ID_3WARE_9000  macro  include/linux/pci_ids.h  2000  #define PCI_DEVICE_ID_3WARE_9000 0x1002
PCI_VENDOR_ID_IOMEGA  macro  include/linux/pci_ids.h  2002  #define PCI_VENDOR_ID_IOMEGA 0x13ca
PCI_DEVICE_ID_IOMEGA_BUZ  macro  include/linux/pci_ids.h  2003  #define PCI_DEVICE_ID_IOMEGA_BUZ 0x4231
PCI_VENDOR_ID_ABOCOM  macro  include/linux/pci_ids.h  2005  #define PCI_VENDOR_ID_ABOCOM 0x13D1
PCI_DEVICE_ID_ABOCOM_2BD1  macro  include/linux/pci_ids.h  2006  #define PCI_DEVICE_ID_ABOCOM_2BD1 0x2BD1
PCI_VENDOR_ID_SUNDANCE  macro  include/linux/pci_ids.h  2008  #define PCI_VENDOR_ID_SUNDANCE 0x13f0
PCI_VENDOR_ID_CMEDIA  macro  include/linux/pci_ids.h  2010  #define PCI_VENDOR_ID_CMEDIA 0x13f6
PCI_DEVICE_ID_CMEDIA_CM8338A  macro  include/linux/pci_ids.h  2011  #define PCI_DEVICE_ID_CMEDIA_CM8338A 0x0100
PCI_DEVICE_ID_CMEDIA_CM8338B  macro  include/linux/pci_ids.h  2012  #define PCI_DEVICE_ID_CMEDIA_CM8338B 0x0101
PCI_DEVICE_ID_CMEDIA_CM8738  macro  include/linux/pci_ids.h  2013  #define PCI_DEVICE_ID_CMEDIA_CM8738 0x0111
PCI_DEVICE_ID_CMEDIA_CM8738B  macro  include/linux/pci_ids.h  2014  #define PCI_DEVICE_ID_CMEDIA_CM8738B 0x0112
PCI_VENDOR_ID_LAVA  macro  include/linux/pci_ids.h  2016  #define PCI_VENDOR_ID_LAVA 0x1407
PCI_DEVICE_ID_LAVA_DSERIAL  macro  include/linux/pci_ids.h  2017  #define PCI_DEVICE_ID_LAVA_DSERIAL 0x0100
PCI_DEVICE_ID_LAVA_QUATRO_A  macro  include/linux/pci_ids.h  2018  #define PCI_DEVICE_ID_LAVA_QUATRO_A 0x0101
PCI_DEVICE_ID_LAVA_QUATRO_B  macro  include/linux/pci_ids.h  2019  #define PCI_DEVICE_ID_LAVA_QUATRO_B 0x0102
PCI_DEVICE_ID_LAVA_QUATTRO_A  macro  include/linux/pci_ids.h  2020  #define PCI_DEVICE_ID_LAVA_QUATTRO_A 0x0120
PCI_DEVICE_ID_LAVA_QUATTRO_B  macro  include/linux/pci_ids.h  2021  #define PCI_DEVICE_ID_LAVA_QUATTRO_B 0x0121
PCI_DEVICE_ID_LAVA_OCTO_A  macro  include/linux/pci_ids.h  2022  #define PCI_DEVICE_ID_LAVA_OCTO_A 0x0180
PCI_DEVICE_ID_LAVA_OCTO_B  macro  include/linux/pci_ids.h  2023  #define PCI_DEVICE_ID_LAVA_OCTO_B 0x0181
PCI_DEVICE_ID_LAVA_PORT_PLUS  macro  include/linux/pci_ids.h  2024  #define PCI_DEVICE_ID_LAVA_PORT_PLUS 0x0200
PCI_DEVICE_ID_LAVA_QUAD_A  macro  include/linux/pci_ids.h  2025  #define PCI_DEVICE_ID_LAVA_QUAD_A 0x0201
PCI_DEVICE_ID_LAVA_QUAD_B  macro  include/linux/pci_ids.h  2026  #define PCI_DEVICE_ID_LAVA_QUAD_B 0x0202
PCI_DEVICE_ID_LAVA_SSERIAL  macro  include/linux/pci_ids.h  2027  #define PCI_DEVICE_ID_LAVA_SSERIAL 0x0500
PCI_DEVICE_ID_LAVA_PORT_650  macro  include/linux/pci_ids.h  2028  #define PCI_DEVICE_ID_LAVA_PORT_650 0x0600
PCI_DEVICE_ID_LAVA_PARALLEL  macro  include/linux/pci_ids.h  2029  #define PCI_DEVICE_ID_LAVA_PARALLEL 0x8000
PCI_DEVICE_ID_LAVA_DUAL_PAR_A  macro  include/linux/pci_ids.h  2030  #define PCI_DEVICE_ID_LAVA_DUAL_PAR_A 0x8002
PCI_DEVICE_ID_LAVA_DUAL_PAR_B  macro  include/linux/pci_ids.h  2031  #define PCI_DEVICE_ID_LAVA_DUAL_PAR_B 0x8003
PCI_DEVICE_ID_LAVA_BOCA_IOPPAR  macro  include/linux/pci_ids.h  2032  #define PCI_DEVICE_ID_LAVA_BOCA_IOPPAR 0x8800
PCI_VENDOR_ID_TIMEDIA  macro  include/linux/pci_ids.h  2034  #define PCI_VENDOR_ID_TIMEDIA 0x1409
PCI_DEVICE_ID_TIMEDIA_1889  macro  include/linux/pci_ids.h  2035  #define PCI_DEVICE_ID_TIMEDIA_1889 0x7168
PCI_VENDOR_ID_ICE  macro  include/linux/pci_ids.h  2037  #define PCI_VENDOR_ID_ICE 0x1412
PCI_DEVICE_ID_ICE_1712  macro  include/linux/pci_ids.h  2038  #define PCI_DEVICE_ID_ICE_1712 0x1712
PCI_DEVICE_ID_VT1724  macro  include/linux/pci_ids.h  2039  #define PCI_DEVICE_ID_VT1724 0x1724
PCI_VENDOR_ID_OXSEMI  macro  include/linux/pci_ids.h  2041  #define PCI_VENDOR_ID_OXSEMI 0x1415
PCI_DEVICE_ID_OXSEMI_12PCI840  macro  include/linux/pci_ids.h  2042  #define PCI_DEVICE_ID_OXSEMI_12PCI840 0x8403
PCI_DEVICE_ID_OXSEMI_PCIe840  macro  include/linux/pci_ids.h  2043  #define PCI_DEVICE_ID_OXSEMI_PCIe840 0xC000
PCI_DEVICE_ID_OXSEMI_PCIe840_G  macro  include/linux/pci_ids.h  2044  #define PCI_DEVICE_ID_OXSEMI_PCIe840_G 0xC004
PCI_DEVICE_ID_OXSEMI_PCIe952_0  macro  include/linux/pci_ids.h  2045  #define PCI_DEVICE_ID_OXSEMI_PCIe952_0 0xC100
PCI_DEVICE_ID_OXSEMI_PCIe952_0_G  macro  include/linux/pci_ids.h  2046  #define PCI_DEVICE_ID_OXSEMI_PCIe952_0_G 0xC104
PCI_DEVICE_ID_OXSEMI_PCIe952_1  macro  include/linux/pci_ids.h  2047  #define PCI_DEVICE_ID_OXSEMI_PCIe952_1 0xC110
PCI_DEVICE_ID_OXSEMI_PCIe952_1_G  macro  include/linux/pci_ids.h  2048  #define PCI_DEVICE_ID_OXSEMI_PCIe952_1_G 0xC114
PCI_DEVICE_ID_OXSEMI_PCIe952_1_U  macro  include/linux/pci_ids.h  2049  #define PCI_DEVICE_ID_OXSEMI_PCIe952_1_U 0xC118
PCI_DEVICE_ID_OXSEMI_PCIe952_1_GU  macro  include/linux/pci_ids.h  2050  #define PCI_DEVICE_ID_OXSEMI_PCIe952_1_GU 0xC11C
PCI_DEVICE_ID_OXSEMI_16PCI954  macro  include/linux/pci_ids.h  2051  #define PCI_DEVICE_ID_OXSEMI_16PCI954 0x9501
PCI_DEVICE_ID_OXSEMI_C950  macro  include/linux/pci_ids.h  2052  #define PCI_DEVICE_ID_OXSEMI_C950 0x950B
PCI_DEVICE_ID_OXSEMI_16PCI95N  macro  include/linux/pci_ids.h  2053  #define PCI_DEVICE_ID_OXSEMI_16PCI95N 0x9511
PCI_DEVICE_ID_OXSEMI_16PCI954PP  macro  include/linux/pci_ids.h  2054  #define PCI_DEVICE_ID_OXSEMI_16PCI954PP 0x9513
PCI_DEVICE_ID_OXSEMI_16PCI952  macro  include/linux/pci_ids.h  2055  #define PCI_DEVICE_ID_OXSEMI_16PCI952 0x9521
PCI_DEVICE_ID_OXSEMI_16PCI952PP  macro  include/linux/pci_ids.h  2056  #define PCI_DEVICE_ID_OXSEMI_16PCI952PP 0x9523
PCI_SUBDEVICE_ID_OXSEMI_C950  macro  include/linux/pci_ids.h  2057  #define PCI_SUBDEVICE_ID_OXSEMI_C950 0x0001
PCI_VENDOR_ID_CHELSIO  macro  include/linux/pci_ids.h  2059  #define PCI_VENDOR_ID_CHELSIO 0x1425
PCI_VENDOR_ID_SAMSUNG  macro  include/linux/pci_ids.h  2061  #define PCI_VENDOR_ID_SAMSUNG 0x144d
PCI_VENDOR_ID_GIGABYTE  macro  include/linux/pci_ids.h  2063  #define PCI_VENDOR_ID_GIGABYTE 0x1458
PCI_VENDOR_ID_AMBIT  macro  include/linux/pci_ids.h  2065  #define PCI_VENDOR_ID_AMBIT 0x1468
PCI_VENDOR_ID_MYRICOM  macro  include/linux/pci_ids.h  2067  #define PCI_VENDOR_ID_MYRICOM 0x14c1
PCI_VENDOR_ID_TITAN  macro  include/linux/pci_ids.h  2069  #define PCI_VENDOR_ID_TITAN 0x14D2
PCI_DEVICE_ID_TITAN_010L  macro  include/linux/pci_ids.h  2070  #define PCI_DEVICE_ID_TITAN_010L 0x8001
PCI_DEVICE_ID_TITAN_100L  macro  include/linux/pci_ids.h  2071  #define PCI_DEVICE_ID_TITAN_100L 0x8010
PCI_DEVICE_ID_TITAN_110L  macro  include/linux/pci_ids.h  2072  #define PCI_DEVICE_ID_TITAN_110L 0x8011
PCI_DEVICE_ID_TITAN_200L  macro  include/linux/pci_ids.h  2073  #define PCI_DEVICE_ID_TITAN_200L 0x8020
PCI_DEVICE_ID_TITAN_210L  macro  include/linux/pci_ids.h  2074  #define PCI_DEVICE_ID_TITAN_210L 0x8021
PCI_DEVICE_ID_TITAN_400L  macro  include/linux/pci_ids.h  2075  #define PCI_DEVICE_ID_TITAN_400L 0x8040
PCI_DEVICE_ID_TITAN_800L  macro  include/linux/pci_ids.h  2076  #define PCI_DEVICE_ID_TITAN_800L 0x8080
PCI_DEVICE_ID_TITAN_100  macro  include/linux/pci_ids.h  2077  #define PCI_DEVICE_ID_TITAN_100 0xA001
PCI_DEVICE_ID_TITAN_200  macro  include/linux/pci_ids.h  2078  #define PCI_DEVICE_ID_TITAN_200 0xA005
PCI_DEVICE_ID_TITAN_400  macro  include/linux/pci_ids.h  2079  #define PCI_DEVICE_ID_TITAN_400 0xA003
PCI_DEVICE_ID_TITAN_800B  macro  include/linux/pci_ids.h  2080  #define PCI_DEVICE_ID_TITAN_800B 0xA004
PCI_VENDOR_ID_PANACOM  macro  include/linux/pci_ids.h  2082  #define PCI_VENDOR_ID_PANACOM 0x14d4
PCI_DEVICE_ID_PANACOM_QUADMODEM  macro  include/linux/pci_ids.h  2083  #define PCI_DEVICE_ID_PANACOM_QUADMODEM 0x0400
PCI_DEVICE_ID_PANACOM_DUALMODEM  macro  include/linux/pci_ids.h  2084  #define PCI_DEVICE_ID_PANACOM_DUALMODEM 0x0402
PCI_VENDOR_ID_SIPACKETS  macro  include/linux/pci_ids.h  2086  #define PCI_VENDOR_ID_SIPACKETS 0x14d9
PCI_DEVICE_ID_SP1011  macro  include/linux/pci_ids.h  2087  #define PCI_DEVICE_ID_SP1011 0x0010
PCI_VENDOR_ID_AFAVLAB  macro  include/linux/pci_ids.h  2089  #define PCI_VENDOR_ID_AFAVLAB 0x14db
PCI_DEVICE_ID_AFAVLAB_P028  macro  include/linux/pci_ids.h  2090  #define PCI_DEVICE_ID_AFAVLAB_P028 0x2180
PCI_DEVICE_ID_AFAVLAB_P030  macro  include/linux/pci_ids.h  2091  #define PCI_DEVICE_ID_AFAVLAB_P030 0x2182
PCI_SUBDEVICE_ID_AFAVLAB_P061  macro  include/linux/pci_ids.h  2092  #define PCI_SUBDEVICE_ID_AFAVLAB_P061 0x2150
PCI_VENDOR_ID_BCM_GVC  macro  include/linux/pci_ids.h  2094  #define PCI_VENDOR_ID_BCM_GVC 0x14a4
PCI_VENDOR_ID_BROADCOM  macro  include/linux/pci_ids.h  2095  #define PCI_VENDOR_ID_BROADCOM 0x14e4
PCI_DEVICE_ID_TIGON3_5752  macro  include/linux/pci_ids.h  2096  #define PCI_DEVICE_ID_TIGON3_5752 0x1600
PCI_DEVICE_ID_TIGON3_5752M  macro  include/linux/pci_ids.h  2097  #define PCI_DEVICE_ID_TIGON3_5752M 0x1601
PCI_DEVICE_ID_NX2_5709  macro  include/linux/pci_ids.h  2098  #define PCI_DEVICE_ID_NX2_5709 0x1639
PCI_DEVICE_ID_NX2_5709S  macro  include/linux/pci_ids.h  2099  #define PCI_DEVICE_ID_NX2_5709S 0x163a
PCI_DEVICE_ID_TIGON3_5700  macro  include/linux/pci_ids.h  2100  #define PCI_DEVICE_ID_TIGON3_5700 0x1644
PCI_DEVICE_ID_TIGON3_5701  macro  include/linux/pci_ids.h  2101  #define PCI_DEVICE_ID_TIGON3_5701 0x1645
PCI_DEVICE_ID_TIGON3_5702  macro  include/linux/pci_ids.h  2102  #define PCI_DEVICE_ID_TIGON3_5702 0x1646
PCI_DEVICE_ID_TIGON3_5703  macro  include/linux/pci_ids.h  2103  #define PCI_DEVICE_ID_TIGON3_5703 0x1647
PCI_DEVICE_ID_TIGON3_5704  macro  include/linux/pci_ids.h  2104  #define PCI_DEVICE_ID_TIGON3_5704 0x1648
PCI_DEVICE_ID_TIGON3_5704S_2  macro  include/linux/pci_ids.h  2105  #define PCI_DEVICE_ID_TIGON3_5704S_2 0x1649
PCI_DEVICE_ID_NX2_5706  macro  include/linux/pci_ids.h  2106  #define PCI_DEVICE_ID_NX2_5706 0x164a
PCI_DEVICE_ID_NX2_5708  macro  include/linux/pci_ids.h  2107  #define PCI_DEVICE_ID_NX2_5708 0x164c
PCI_DEVICE_ID_TIGON3_5702FE  macro  include/linux/pci_ids.h  2108  #define PCI_DEVICE_ID_TIGON3_5702FE 0x164d
PCI_DEVICE_ID_NX2_57710  macro  include/linux/pci_ids.h  2109  #define PCI_DEVICE_ID_NX2_57710 0x164e
PCI_DEVICE_ID_NX2_57711  macro  include/linux/pci_ids.h  2110  #define PCI_DEVICE_ID_NX2_57711 0x164f
PCI_DEVICE_ID_NX2_57711E  macro  include/linux/pci_ids.h  2111  #define PCI_DEVICE_ID_NX2_57711E 0x1650
PCI_DEVICE_ID_TIGON3_5705  macro  include/linux/pci_ids.h  2112  #define PCI_DEVICE_ID_TIGON3_5705 0x1653
PCI_DEVICE_ID_TIGON3_5705_2  macro  include/linux/pci_ids.h  2113  #define PCI_DEVICE_ID_TIGON3_5705_2 0x1654
PCI_DEVICE_ID_TIGON3_5719  macro  include/linux/pci_ids.h  2114  #define PCI_DEVICE_ID_TIGON3_5719 0x1657
PCI_DEVICE_ID_TIGON3_5721  macro  include/linux/pci_ids.h  2115  #define PCI_DEVICE_ID_TIGON3_5721 0x1659
PCI_DEVICE_ID_TIGON3_5722  macro  include/linux/pci_ids.h  2116  #define PCI_DEVICE_ID_TIGON3_5722 0x165a
PCI_DEVICE_ID_TIGON3_5723  macro  include/linux/pci_ids.h  2117  #define PCI_DEVICE_ID_TIGON3_5723 0x165b
PCI_DEVICE_ID_TIGON3_5705M  macro  include/linux/pci_ids.h  2118  #define PCI_DEVICE_ID_TIGON3_5705M 0x165d
PCI_DEVICE_ID_TIGON3_5705M_2  macro  include/linux/pci_ids.h  2119  #define PCI_DEVICE_ID_TIGON3_5705M_2 0x165e
PCI_DEVICE_ID_NX2_57712  macro  include/linux/pci_ids.h  2120  #define PCI_DEVICE_ID_NX2_57712 0x1662
PCI_DEVICE_ID_NX2_57712E  macro  include/linux/pci_ids.h  2121  #define PCI_DEVICE_ID_NX2_57712E 0x1663
PCI_DEVICE_ID_TIGON3_5714  macro  include/linux/pci_ids.h  2122  #define PCI_DEVICE_ID_TIGON3_5714 0x1668
PCI_DEVICE_ID_TIGON3_5714S  macro  include/linux/pci_ids.h  2123  #define PCI_DEVICE_ID_TIGON3_5714S 0x1669
PCI_DEVICE_ID_TIGON3_5780  macro  include/linux/pci_ids.h  2124  #define PCI_DEVICE_ID_TIGON3_5780 0x166a
PCI_DEVICE_ID_TIGON3_5780S  macro  include/linux/pci_ids.h  2125  #define PCI_DEVICE_ID_TIGON3_5780S 0x166b
PCI_DEVICE_ID_TIGON3_5705F  macro  include/linux/pci_ids.h  2126  #define PCI_DEVICE_ID_TIGON3_5705F 0x166e
PCI_DEVICE_ID_TIGON3_5754M  macro  include/linux/pci_ids.h  2127  #define PCI_DEVICE_ID_TIGON3_5754M 0x1672
PCI_DEVICE_ID_TIGON3_5755M  macro  include/linux/pci_ids.h  2128  #define PCI_DEVICE_ID_TIGON3_5755M 0x1673
PCI_DEVICE_ID_TIGON3_5756  macro  include/linux/pci_ids.h  2129  #define PCI_DEVICE_ID_TIGON3_5756 0x1674
PCI_DEVICE_ID_TIGON3_5751  macro  include/linux/pci_ids.h  2130  #define PCI_DEVICE_ID_TIGON3_5751 0x1677
PCI_DEVICE_ID_TIGON3_5715  macro  include/linux/pci_ids.h  2131  #define PCI_DEVICE_ID_TIGON3_5715 0x1678
PCI_DEVICE_ID_TIGON3_5715S  macro  include/linux/pci_ids.h  2132  #define PCI_DEVICE_ID_TIGON3_5715S 0x1679
PCI_DEVICE_ID_TIGON3_5754  macro  include/linux/pci_ids.h  2133  #define PCI_DEVICE_ID_TIGON3_5754 0x167a
PCI_DEVICE_ID_TIGON3_5755  macro  include/linux/pci_ids.h  2134  #define PCI_DEVICE_ID_TIGON3_5755 0x167b
PCI_DEVICE_ID_TIGON3_5751M  macro  include/linux/pci_ids.h  2135  #define PCI_DEVICE_ID_TIGON3_5751M 0x167d
PCI_DEVICE_ID_TIGON3_5751F  macro  include/linux/pci_ids.h  2136  #define PCI_DEVICE_ID_TIGON3_5751F 0x167e
PCI_DEVICE_ID_TIGON3_5787F  macro  include/linux/pci_ids.h  2137  #define PCI_DEVICE_ID_TIGON3_5787F 0x167f
PCI_DEVICE_ID_TIGON3_5761E  macro  include/linux/pci_ids.h  2138  #define PCI_DEVICE_ID_TIGON3_5761E 0x1680
PCI_DEVICE_ID_TIGON3_5761  macro  include/linux/pci_ids.h  2139  #define PCI_DEVICE_ID_TIGON3_5761 0x1681
PCI_DEVICE_ID_TIGON3_5764  macro  include/linux/pci_ids.h  2140  #define PCI_DEVICE_ID_TIGON3_5764 0x1684
PCI_DEVICE_ID_NX2_57800  macro  include/linux/pci_ids.h  2141  #define PCI_DEVICE_ID_NX2_57800 0x168a
PCI_DEVICE_ID_NX2_57840  macro  include/linux/pci_ids.h  2142  #define PCI_DEVICE_ID_NX2_57840 0x168d
PCI_DEVICE_ID_NX2_57810  macro  include/linux/pci_ids.h  2143  #define PCI_DEVICE_ID_NX2_57810 0x168e
PCI_DEVICE_ID_TIGON3_5787M  macro  include/linux/pci_ids.h  2144  #define PCI_DEVICE_ID_TIGON3_5787M 0x1693
PCI_DEVICE_ID_TIGON3_5782  macro  include/linux/pci_ids.h  2145  #define PCI_DEVICE_ID_TIGON3_5782 0x1696
PCI_DEVICE_ID_TIGON3_5784  macro  include/linux/pci_ids.h  2146  #define PCI_DEVICE_ID_TIGON3_5784 0x1698
PCI_DEVICE_ID_TIGON3_5786  macro  include/linux/pci_ids.h  2147  #define PCI_DEVICE_ID_TIGON3_5786 0x169a
PCI_DEVICE_ID_TIGON3_5787  macro  include/linux/pci_ids.h  2148  #define PCI_DEVICE_ID_TIGON3_5787 0x169b
PCI_DEVICE_ID_TIGON3_5788  macro  include/linux/pci_ids.h  2149  #define PCI_DEVICE_ID_TIGON3_5788 0x169c
PCI_DEVICE_ID_TIGON3_5789  macro  include/linux/pci_ids.h  2150  #define PCI_DEVICE_ID_TIGON3_5789 0x169d
PCI_DEVICE_ID_NX2_57800_MF  macro  include/linux/pci_ids.h  2151  #define PCI_DEVICE_ID_NX2_57800_MF 0x16a5
PCI_DEVICE_ID_TIGON3_5702X  macro  include/linux/pci_ids.h  2152  #define PCI_DEVICE_ID_TIGON3_5702X 0x16a6
PCI_DEVICE_ID_TIGON3_5703X  macro  include/linux/pci_ids.h  2153  #define PCI_DEVICE_ID_TIGON3_5703X 0x16a7
PCI_DEVICE_ID_TIGON3_5704S  macro  include/linux/pci_ids.h  2154  #define PCI_DEVICE_ID_TIGON3_5704S 0x16a8
PCI_DEVICE_ID_NX2_57800_VF  macro  include/linux/pci_ids.h  2155  #define PCI_DEVICE_ID_NX2_57800_VF 0x16a9
PCI_DEVICE_ID_NX2_5706S  macro  include/linux/pci_ids.h  2156  #define PCI_DEVICE_ID_NX2_5706S 0x16aa
PCI_DEVICE_ID_NX2_57840_MF  macro  include/linux/pci_ids.h  2157  #define PCI_DEVICE_ID_NX2_57840_MF 0x16a4
PCI_DEVICE_ID_NX2_5708S  macro  include/linux/pci_ids.h  2158  #define PCI_DEVICE_ID_NX2_5708S 0x16ac
PCI_DEVICE_ID_NX2_57840_VF  macro  include/linux/pci_ids.h  2159  #define PCI_DEVICE_ID_NX2_57840_VF 0x16ad
PCI_DEVICE_ID_NX2_57810_MF  macro  include/linux/pci_ids.h  2160  #define PCI_DEVICE_ID_NX2_57810_MF 0x16ae
PCI_DEVICE_ID_NX2_57810_VF  macro  include/linux/pci_ids.h  2161  #define PCI_DEVICE_ID_NX2_57810_VF 0x16af
PCI_DEVICE_ID_TIGON3_5702A3  macro  include/linux/pci_ids.h  2162  #define PCI_DEVICE_ID_TIGON3_5702A3 0x16c6
PCI_DEVICE_ID_TIGON3_5703A3  macro  include/linux/pci_ids.h  2163  #define PCI_DEVICE_ID_TIGON3_5703A3 0x16c7
PCI_DEVICE_ID_TIGON3_5781  macro  include/linux/pci_ids.h  2164  #define PCI_DEVICE_ID_TIGON3_5781 0x16dd
PCI_DEVICE_ID_TIGON3_5753  macro  include/linux/pci_ids.h  2165  #define PCI_DEVICE_ID_TIGON3_5753 0x16f7
PCI_DEVICE_ID_TIGON3_5753M  macro  include/linux/pci_ids.h  2166  #define PCI_DEVICE_ID_TIGON3_5753M 0x16fd
PCI_DEVICE_ID_TIGON3_5753F  macro  include/linux/pci_ids.h  2167  #define PCI_DEVICE_ID_TIGON3_5753F 0x16fe
PCI_DEVICE_ID_TIGON3_5901  macro  include/linux/pci_ids.h  2168  #define PCI_DEVICE_ID_TIGON3_5901 0x170d
PCI_DEVICE_ID_BCM4401B1  macro  include/linux/pci_ids.h  2169  #define PCI_DEVICE_ID_BCM4401B1 0x170c
PCI_DEVICE_ID_TIGON3_5901_2  macro  include/linux/pci_ids.h  2170  #define PCI_DEVICE_ID_TIGON3_5901_2 0x170e
PCI_DEVICE_ID_TIGON3_5906  macro  include/linux/pci_ids.h  2171  #define PCI_DEVICE_ID_TIGON3_5906 0x1712
PCI_DEVICE_ID_TIGON3_5906M  macro  include/linux/pci_ids.h  2172  #define PCI_DEVICE_ID_TIGON3_5906M 0x1713
PCI_DEVICE_ID_BCM4401  macro  include/linux/pci_ids.h  2173  #define PCI_DEVICE_ID_BCM4401 0x4401
PCI_DEVICE_ID_BCM4401B0  macro  include/linux/pci_ids.h  2174  #define PCI_DEVICE_ID_BCM4401B0 0x4402
PCI_VENDOR_ID_TOPIC  macro  include/linux/pci_ids.h  2176  #define PCI_VENDOR_ID_TOPIC 0x151f
PCI_DEVICE_ID_TOPIC_TP560  macro  include/linux/pci_ids.h  2177  #define PCI_DEVICE_ID_TOPIC_TP560 0x0000
PCI_VENDOR_ID_MAINPINE  macro  include/linux/pci_ids.h  2179  #define PCI_VENDOR_ID_MAINPINE 0x1522
PCI_DEVICE_ID_MAINPINE_PBRIDGE  macro  include/linux/pci_ids.h  2180  #define PCI_DEVICE_ID_MAINPINE_PBRIDGE 0x0100
PCI_VENDOR_ID_ENE  macro  include/linux/pci_ids.h  2181  #define PCI_VENDOR_ID_ENE 0x1524
PCI_DEVICE_ID_ENE_CB710_FLASH  macro  include/linux/pci_ids.h  2182  #define PCI_DEVICE_ID_ENE_CB710_FLASH 0x0510
PCI_DEVICE_ID_ENE_CB712_SD  macro  include/linux/pci_ids.h  2183  #define PCI_DEVICE_ID_ENE_CB712_SD 0x0550
PCI_DEVICE_ID_ENE_CB712_SD_2  macro  include/linux/pci_ids.h  2184  #define PCI_DEVICE_ID_ENE_CB712_SD_2 0x0551
PCI_DEVICE_ID_ENE_CB714_SD  macro  include/linux/pci_ids.h  2185  #define PCI_DEVICE_ID_ENE_CB714_SD 0x0750
PCI_DEVICE_ID_ENE_CB714_SD_2  macro  include/linux/pci_ids.h  2186  #define PCI_DEVICE_ID_ENE_CB714_SD_2 0x0751
PCI_DEVICE_ID_ENE_1211  macro  include/linux/pci_ids.h  2187  #define PCI_DEVICE_ID_ENE_1211 0x1211
PCI_DEVICE_ID_ENE_1225  macro  include/linux/pci_ids.h  2188  #define PCI_DEVICE_ID_ENE_1225 0x1225
PCI_DEVICE_ID_ENE_1410  macro  include/linux/pci_ids.h  2189  #define PCI_DEVICE_ID_ENE_1410 0x1410
PCI_DEVICE_ID_ENE_710  macro  include/linux/pci_ids.h  2190  #define PCI_DEVICE_ID_ENE_710 0x1411
PCI_DEVICE_ID_ENE_712  macro  include/linux/pci_ids.h  2191  #define PCI_DEVICE_ID_ENE_712 0x1412
PCI_DEVICE_ID_ENE_1420  macro  include/linux/pci_ids.h  2192  #define PCI_DEVICE_ID_ENE_1420 0x1420
PCI_DEVICE_ID_ENE_720  macro  include/linux/pci_ids.h  2193  #define PCI_DEVICE_ID_ENE_720 0x1421
PCI_DEVICE_ID_ENE_722  macro  include/linux/pci_ids.h  2194  #define PCI_DEVICE_ID_ENE_722 0x1422
PCI_SUBVENDOR_ID_PERLE  macro  include/linux/pci_ids.h  2196  #define PCI_SUBVENDOR_ID_PERLE 0x155f
PCI_SUBDEVICE_ID_PCI_RAS4  macro  include/linux/pci_ids.h  2197  #define PCI_SUBDEVICE_ID_PCI_RAS4 0xf001
PCI_SUBDEVICE_ID_PCI_RAS8  macro  include/linux/pci_ids.h  2198  #define PCI_SUBDEVICE_ID_PCI_RAS8 0xf010
PCI_VENDOR_ID_SYBA  macro  include/linux/pci_ids.h  2200  #define PCI_VENDOR_ID_SYBA 0x1592
PCI_DEVICE_ID_SYBA_2P_EPP  macro  include/linux/pci_ids.h  2201  #define PCI_DEVICE_ID_SYBA_2P_EPP 0x0782
PCI_DEVICE_ID_SYBA_1P_ECP  macro  include/linux/pci_ids.h  2202  #define PCI_DEVICE_ID_SYBA_1P_ECP 0x0783
PCI_VENDOR_ID_MORETON  macro  include/linux/pci_ids.h  2204  #define PCI_VENDOR_ID_MORETON 0x15aa
PCI_DEVICE_ID_RASTEL_2PORT  macro  include/linux/pci_ids.h  2205  #define PCI_DEVICE_ID_RASTEL_2PORT 0x2000
PCI_VENDOR_ID_ZOLTRIX  macro  include/linux/pci_ids.h  2207  #define PCI_VENDOR_ID_ZOLTRIX 0x15b0
PCI_DEVICE_ID_ZOLTRIX_2BD0  macro  include/linux/pci_ids.h  2208  #define PCI_DEVICE_ID_ZOLTRIX_2BD0 0x2bd0
PCI_VENDOR_ID_MELLANOX  macro  include/linux/pci_ids.h  2210  #define PCI_VENDOR_ID_MELLANOX 0x15b3
PCI_DEVICE_ID_MELLANOX_TAVOR  macro  include/linux/pci_ids.h  2211  #define PCI_DEVICE_ID_MELLANOX_TAVOR 0x5a44
PCI_DEVICE_ID_MELLANOX_TAVOR_BRIDGE  macro  include/linux/pci_ids.h  2212  #define PCI_DEVICE_ID_MELLANOX_TAVOR_BRIDGE 0x5a46
PCI_DEVICE_ID_MELLANOX_ARBEL_COMPAT  macro  include/linux/pci_ids.h  2213  #define PCI_DEVICE_ID_MELLANOX_ARBEL_COMPAT 0x6278
PCI_DEVICE_ID_MELLANOX_ARBEL  macro  include/linux/pci_ids.h  2214  #define PCI_DEVICE_ID_MELLANOX_ARBEL 0x6282
PCI_DEVICE_ID_MELLANOX_SINAI_OLD  macro  include/linux/pci_ids.h  2215  #define PCI_DEVICE_ID_MELLANOX_SINAI_OLD 0x5e8c
PCI_DEVICE_ID_MELLANOX_SINAI  macro  include/linux/pci_ids.h  2216  #define PCI_DEVICE_ID_MELLANOX_SINAI 0x6274
PCI_VENDOR_ID_DFI  macro  include/linux/pci_ids.h  2218  #define PCI_VENDOR_ID_DFI 0x15bd
PCI_VENDOR_ID_QUICKNET  macro  include/linux/pci_ids.h  2220  #define PCI_VENDOR_ID_QUICKNET 0x15e2
PCI_DEVICE_ID_QUICKNET_XJ  macro  include/linux/pci_ids.h  2221  #define PCI_DEVICE_ID_QUICKNET_XJ 0x0500
PCI_VENDOR_ID_ADDIDATA_OLD  macro  include/linux/pci_ids.h  2226  #define PCI_VENDOR_ID_ADDIDATA_OLD 0x10E8
PCI_VENDOR_ID_ADDIDATA  macro  include/linux/pci_ids.h  2227  #define PCI_VENDOR_ID_ADDIDATA 0x15B8
PCI_DEVICE_ID_ADDIDATA_APCI7500  macro  include/linux/pci_ids.h  2228  #define PCI_DEVICE_ID_ADDIDATA_APCI7500 0x7000
PCI_DEVICE_ID_ADDIDATA_APCI7420  macro  include/linux/pci_ids.h  2229  #define PCI_DEVICE_ID_ADDIDATA_APCI7420 0x7001
PCI_DEVICE_ID_ADDIDATA_APCI7300  macro  include/linux/pci_ids.h  2230  #define PCI_DEVICE_ID_ADDIDATA_APCI7300 0x7002
PCI_DEVICE_ID_ADDIDATA_APCI7800  macro  include/linux/pci_ids.h  2231  #define PCI_DEVICE_ID_ADDIDATA_APCI7800 0x818E
PCI_DEVICE_ID_ADDIDATA_APCI7500_2  macro  include/linux/pci_ids.h  2232  #define PCI_DEVICE_ID_ADDIDATA_APCI7500_2 0x7009
PCI_DEVICE_ID_ADDIDATA_APCI7420_2  macro  include/linux/pci_ids.h  2233  #define PCI_DEVICE_ID_ADDIDATA_APCI7420_2 0x700A
PCI_DEVICE_ID_ADDIDATA_APCI7300_2  macro  include/linux/pci_ids.h  2234  #define PCI_DEVICE_ID_ADDIDATA_APCI7300_2 0x700B
PCI_DEVICE_ID_ADDIDATA_APCI7500_3  macro  include/linux/pci_ids.h  2235  #define PCI_DEVICE_ID_ADDIDATA_APCI7500_3 0x700C
PCI_DEVICE_ID_ADDIDATA_APCI7420_3  macro  include/linux/pci_ids.h  2236  #define PCI_DEVICE_ID_ADDIDATA_APCI7420_3 0x700D
PCI_DEVICE_ID_ADDIDATA_APCI7300_3  macro  include/linux/pci_ids.h  2237  #define PCI_DEVICE_ID_ADDIDATA_APCI7300_3 0x700E
PCI_DEVICE_ID_ADDIDATA_APCI7800_3  macro  include/linux/pci_ids.h  2238  #define PCI_DEVICE_ID_ADDIDATA_APCI7800_3 0x700F
PCI_DEVICE_ID_ADDIDATA_APCIe7300  macro  include/linux/pci_ids.h  2239  #define PCI_DEVICE_ID_ADDIDATA_APCIe7300 0x7010
PCI_DEVICE_ID_ADDIDATA_APCIe7420  macro  include/linux/pci_ids.h  2240  #define PCI_DEVICE_ID_ADDIDATA_APCIe7420 0x7011
PCI_DEVICE_ID_ADDIDATA_APCIe7500  macro  include/linux/pci_ids.h  2241  #define PCI_DEVICE_ID_ADDIDATA_APCIe7500 0x7012
PCI_DEVICE_ID_ADDIDATA_APCIe7800  macro  include/linux/pci_ids.h  2242  #define PCI_DEVICE_ID_ADDIDATA_APCIe7800 0x7013
PCI_VENDOR_ID_PDC  macro  include/linux/pci_ids.h  2244  #define PCI_VENDOR_ID_PDC 0x15e9
PCI_VENDOR_ID_FARSITE  macro  include/linux/pci_ids.h  2246  #define PCI_VENDOR_ID_FARSITE 0x1619
PCI_DEVICE_ID_FARSITE_T2P  macro  include/linux/pci_ids.h  2247  #define PCI_DEVICE_ID_FARSITE_T2P 0x0400
PCI_DEVICE_ID_FARSITE_T4P  macro  include/linux/pci_ids.h  2248  #define PCI_DEVICE_ID_FARSITE_T4P 0x0440
PCI_DEVICE_ID_FARSITE_T1U  macro  include/linux/pci_ids.h  2249  #define PCI_DEVICE_ID_FARSITE_T1U 0x0610
PCI_DEVICE_ID_FARSITE_T2U  macro  include/linux/pci_ids.h  2250  #define PCI_DEVICE_ID_FARSITE_T2U 0x0620
PCI_DEVICE_ID_FARSITE_T4U  macro  include/linux/pci_ids.h  2251  #define PCI_DEVICE_ID_FARSITE_T4U 0x0640
PCI_DEVICE_ID_FARSITE_TE1  macro  include/linux/pci_ids.h  2252  #define PCI_DEVICE_ID_FARSITE_TE1 0x1610
PCI_DEVICE_ID_FARSITE_TE1C  macro  include/linux/pci_ids.h  2253  #define PCI_DEVICE_ID_FARSITE_TE1C 0x1612
PCI_VENDOR_ID_ARIMA  macro  include/linux/pci_ids.h  2255  #define PCI_VENDOR_ID_ARIMA 0x161f
PCI_VENDOR_ID_BROCADE  macro  include/linux/pci_ids.h  2257  #define PCI_VENDOR_ID_BROCADE 0x1657
PCI_DEVICE_ID_BROCADE_CT  macro  include/linux/pci_ids.h  2258  #define PCI_DEVICE_ID_BROCADE_CT 0x0014
PCI_DEVICE_ID_BROCADE_FC_8G1P  macro  include/linux/pci_ids.h  2259  #define PCI_DEVICE_ID_BROCADE_FC_8G1P 0x0017
PCI_DEVICE_ID_BROCADE_CT_FC  macro  include/linux/pci_ids.h  2260  #define PCI_DEVICE_ID_BROCADE_CT_FC 0x0021
PCI_VENDOR_ID_SIBYTE  macro  include/linux/pci_ids.h  2262  #define PCI_VENDOR_ID_SIBYTE 0x166d
PCI_DEVICE_ID_BCM1250_PCI  macro  include/linux/pci_ids.h  2263  #define PCI_DEVICE_ID_BCM1250_PCI 0x0001
PCI_DEVICE_ID_BCM1250_HT  macro  include/linux/pci_ids.h  2264  #define PCI_DEVICE_ID_BCM1250_HT 0x0002
PCI_VENDOR_ID_ATHEROS  macro  include/linux/pci_ids.h  2266  #define PCI_VENDOR_ID_ATHEROS 0x168c
PCI_VENDOR_ID_NETCELL  macro  include/linux/pci_ids.h  2268  #define PCI_VENDOR_ID_NETCELL 0x169c
PCI_DEVICE_ID_REVOLUTION  macro  include/linux/pci_ids.h  2269  #define PCI_DEVICE_ID_REVOLUTION 0x0044
PCI_VENDOR_ID_CENATEK  macro  include/linux/pci_ids.h  2271  #define PCI_VENDOR_ID_CENATEK 0x16CA
PCI_DEVICE_ID_CENATEK_IDE  macro  include/linux/pci_ids.h  2272  #define PCI_DEVICE_ID_CENATEK_IDE 0x0001
PCI_VENDOR_ID_VITESSE  macro  include/linux/pci_ids.h  2274  #define PCI_VENDOR_ID_VITESSE 0x1725
PCI_DEVICE_ID_VITESSE_VSC7174  macro  include/linux/pci_ids.h  2275  #define PCI_DEVICE_ID_VITESSE_VSC7174 0x7174
PCI_VENDOR_ID_LINKSYS  macro  include/linux/pci_ids.h  2277  #define PCI_VENDOR_ID_LINKSYS 0x1737
PCI_DEVICE_ID_LINKSYS_EG1064  macro  include/linux/pci_ids.h  2278  #define PCI_DEVICE_ID_LINKSYS_EG1064 0x1064
PCI_VENDOR_ID_ALTIMA  macro  include/linux/pci_ids.h  2280  #define PCI_VENDOR_ID_ALTIMA 0x173b
PCI_DEVICE_ID_ALTIMA_AC1000  macro  include/linux/pci_ids.h  2281  #define PCI_DEVICE_ID_ALTIMA_AC1000 0x03e8
PCI_DEVICE_ID_ALTIMA_AC1001  macro  include/linux/pci_ids.h  2282  #define PCI_DEVICE_ID_ALTIMA_AC1001 0x03e9
PCI_DEVICE_ID_ALTIMA_AC9100  macro  include/linux/pci_ids.h  2283  #define PCI_DEVICE_ID_ALTIMA_AC9100 0x03ea
PCI_DEVICE_ID_ALTIMA_AC1003  macro  include/linux/pci_ids.h  2284  #define PCI_DEVICE_ID_ALTIMA_AC1003 0x03eb
PCI_VENDOR_ID_BELKIN  macro  include/linux/pci_ids.h  2286  #define PCI_VENDOR_ID_BELKIN 0x1799
PCI_DEVICE_ID_BELKIN_F5D7010V7  macro  include/linux/pci_ids.h  2287  #define PCI_DEVICE_ID_BELKIN_F5D7010V7 0x701f
PCI_VENDOR_ID_RDC  macro  include/linux/pci_ids.h  2289  #define PCI_VENDOR_ID_RDC 0x17f3
PCI_DEVICE_ID_RDC_R6020  macro  include/linux/pci_ids.h  2290  #define PCI_DEVICE_ID_RDC_R6020 0x6020
PCI_DEVICE_ID_RDC_R6030  macro  include/linux/pci_ids.h  2291  #define PCI_DEVICE_ID_RDC_R6030 0x6030
PCI_DEVICE_ID_RDC_R6040  macro  include/linux/pci_ids.h  2292  #define PCI_DEVICE_ID_RDC_R6040 0x6040
PCI_DEVICE_ID_RDC_R6060  macro  include/linux/pci_ids.h  2293  #define PCI_DEVICE_ID_RDC_R6060 0x6060
PCI_DEVICE_ID_RDC_R6061  macro  include/linux/pci_ids.h  2294  #define PCI_DEVICE_ID_RDC_R6061 0x6061
PCI_DEVICE_ID_RDC_D1010  macro  include/linux/pci_ids.h  2295  #define PCI_DEVICE_ID_RDC_D1010 0x1010
PCI_VENDOR_ID_LENOVO  macro  include/linux/pci_ids.h  2297  #define PCI_VENDOR_ID_LENOVO 0x17aa
PCI_VENDOR_ID_ARECA  macro  include/linux/pci_ids.h  2299  #define PCI_VENDOR_ID_ARECA 0x17d3
PCI_DEVICE_ID_ARECA_1110  macro  include/linux/pci_ids.h  2300  #define PCI_DEVICE_ID_ARECA_1110 0x1110
PCI_DEVICE_ID_ARECA_1120  macro  include/linux/pci_ids.h  2301  #define PCI_DEVICE_ID_ARECA_1120 0x1120
PCI_DEVICE_ID_ARECA_1130  macro  include/linux/pci_ids.h  2302  #define PCI_DEVICE_ID_ARECA_1130 0x1130
PCI_DEVICE_ID_ARECA_1160  macro  include/linux/pci_ids.h  2303  #define PCI_DEVICE_ID_ARECA_1160 0x1160
PCI_DEVICE_ID_ARECA_1170  macro  include/linux/pci_ids.h  2304  #define PCI_DEVICE_ID_ARECA_1170 0x1170
PCI_DEVICE_ID_ARECA_1200  macro  include/linux/pci_ids.h  2305  #define PCI_DEVICE_ID_ARECA_1200 0x1200
PCI_DEVICE_ID_ARECA_1201  macro  include/linux/pci_ids.h  2306  #define PCI_DEVICE_ID_ARECA_1201 0x1201
PCI_DEVICE_ID_ARECA_1202  macro  include/linux/pci_ids.h  2307  #define PCI_DEVICE_ID_ARECA_1202 0x1202
PCI_DEVICE_ID_ARECA_1210  macro  include/linux/pci_ids.h  2308  #define PCI_DEVICE_ID_ARECA_1210 0x1210
PCI_DEVICE_ID_ARECA_1220  macro  include/linux/pci_ids.h  2309  #define PCI_DEVICE_ID_ARECA_1220 0x1220
PCI_DEVICE_ID_ARECA_1230  macro  include/linux/pci_ids.h  2310  #define PCI_DEVICE_ID_ARECA_1230 0x1230
PCI_DEVICE_ID_ARECA_1260  macro  include/linux/pci_ids.h  2311  #define PCI_DEVICE_ID_ARECA_1260 0x1260
PCI_DEVICE_ID_ARECA_1270  macro  include/linux/pci_ids.h  2312  #define PCI_DEVICE_ID_ARECA_1270 0x1270
PCI_DEVICE_ID_ARECA_1280  macro  include/linux/pci_ids.h  2313  #define PCI_DEVICE_ID_ARECA_1280 0x1280
PCI_DEVICE_ID_ARECA_1380  macro  include/linux/pci_ids.h  2314  #define PCI_DEVICE_ID_ARECA_1380 0x1380
PCI_DEVICE_ID_ARECA_1381  macro  include/linux/pci_ids.h  2315  #define PCI_DEVICE_ID_ARECA_1381 0x1381
PCI_DEVICE_ID_ARECA_1680  macro  include/linux/pci_ids.h  2316  #define PCI_DEVICE_ID_ARECA_1680 0x1680
PCI_DEVICE_ID_ARECA_1681  macro  include/linux/pci_ids.h  2317  #define PCI_DEVICE_ID_ARECA_1681 0x1681
PCI_VENDOR_ID_S2IO  macro  include/linux/pci_ids.h  2319  #define PCI_VENDOR_ID_S2IO 0x17d5
PCI_DEVICE_ID_S2IO_WIN  macro  include/linux/pci_ids.h  2320  #define PCI_DEVICE_ID_S2IO_WIN 0x5731
PCI_DEVICE_ID_S2IO_UNI  macro  include/linux/pci_ids.h  2321  #define PCI_DEVICE_ID_S2IO_UNI 0x5831
PCI_DEVICE_ID_HERC_WIN  macro  include/linux/pci_ids.h  2322  #define PCI_DEVICE_ID_HERC_WIN 0x5732
PCI_DEVICE_ID_HERC_UNI  macro  include/linux/pci_ids.h  2323  #define PCI_DEVICE_ID_HERC_UNI 0x5832
PCI_VENDOR_ID_SITECOM  macro  include/linux/pci_ids.h  2325  #define PCI_VENDOR_ID_SITECOM 0x182d
PCI_DEVICE_ID_SITECOM_DC105V2  macro  include/linux/pci_ids.h  2326  #define PCI_DEVICE_ID_SITECOM_DC105V2 0x3069
PCI_VENDOR_ID_TOPSPIN  macro  include/linux/pci_ids.h  2328  #define PCI_VENDOR_ID_TOPSPIN 0x1867
PCI_VENDOR_ID_COMMTECH  macro  include/linux/pci_ids.h  2330  #define PCI_VENDOR_ID_COMMTECH 0x18f7
PCI_VENDOR_ID_SILAN  macro  include/linux/pci_ids.h  2332  #define PCI_VENDOR_ID_SILAN 0x1904
PCI_VENDOR_ID_RENESAS  macro  include/linux/pci_ids.h  2334  #define PCI_VENDOR_ID_RENESAS 0x1912
PCI_DEVICE_ID_RENESAS_SH7781  macro  include/linux/pci_ids.h  2335  #define PCI_DEVICE_ID_RENESAS_SH7781 0x0001
PCI_DEVICE_ID_RENESAS_SH7780  macro  include/linux/pci_ids.h  2336  #define PCI_DEVICE_ID_RENESAS_SH7780 0x0002
PCI_DEVICE_ID_RENESAS_SH7763  macro  include/linux/pci_ids.h  2337  #define PCI_DEVICE_ID_RENESAS_SH7763 0x0004
PCI_DEVICE_ID_RENESAS_SH7785  macro  include/linux/pci_ids.h  2338  #define PCI_DEVICE_ID_RENESAS_SH7785 0x0007
PCI_DEVICE_ID_RENESAS_SH7786  macro  include/linux/pci_ids.h  2339  #define PCI_DEVICE_ID_RENESAS_SH7786 0x0010
PCI_VENDOR_ID_SOLARFLARE  macro  include/linux/pci_ids.h  2341  #define PCI_VENDOR_ID_SOLARFLARE 0x1924
PCI_DEVICE_ID_SOLARFLARE_SFC4000A_0  macro  include/linux/pci_ids.h  2342  #define PCI_DEVICE_ID_SOLARFLARE_SFC4000A_0 0x0703
PCI_DEVICE_ID_SOLARFLARE_SFC4000A_1  macro  include/linux/pci_ids.h  2343  #define PCI_DEVICE_ID_SOLARFLARE_SFC4000A_1 0x6703
PCI_DEVICE_ID_SOLARFLARE_SFC4000B  macro  include/linux/pci_ids.h  2344  #define PCI_DEVICE_ID_SOLARFLARE_SFC4000B 0x0710
PCI_VENDOR_ID_TDI  macro  include/linux/pci_ids.h  2346  #define PCI_VENDOR_ID_TDI 0x192E
PCI_DEVICE_ID_TDI_EHCI  macro  include/linux/pci_ids.h  2347  #define PCI_DEVICE_ID_TDI_EHCI 0x0101
PCI_VENDOR_ID_FREESCALE  macro  include/linux/pci_ids.h  2349  #define PCI_VENDOR_ID_FREESCALE 0x1957
PCI_DEVICE_ID_MPC8308  macro  include/linux/pci_ids.h  2350  #define PCI_DEVICE_ID_MPC8308 0xc006
PCI_DEVICE_ID_MPC8315E  macro  include/linux/pci_ids.h  2351  #define PCI_DEVICE_ID_MPC8315E 0x00b4
PCI_DEVICE_ID_MPC8315  macro  include/linux/pci_ids.h  2352  #define PCI_DEVICE_ID_MPC8315 0x00b5
PCI_DEVICE_ID_MPC8314E  macro  include/linux/pci_ids.h  2353  #define PCI_DEVICE_ID_MPC8314E 0x00b6
PCI_DEVICE_ID_MPC8314  macro  include/linux/pci_ids.h  2354  #define PCI_DEVICE_ID_MPC8314 0x00b7
PCI_DEVICE_ID_MPC8378E  macro  include/linux/pci_ids.h  2355  #define PCI_DEVICE_ID_MPC8378E 0x00c4
PCI_DEVICE_ID_MPC8378  macro  include/linux/pci_ids.h  2356  #define PCI_DEVICE_ID_MPC8378 0x00c5
PCI_DEVICE_ID_MPC8377E  macro  include/linux/pci_ids.h  2357  #define PCI_DEVICE_ID_MPC8377E 0x00c6
PCI_DEVICE_ID_MPC8377  macro  include/linux/pci_ids.h  2358  #define PCI_DEVICE_ID_MPC8377 0x00c7
PCI_DEVICE_ID_MPC8548E  macro  include/linux/pci_ids.h  2359  #define PCI_DEVICE_ID_MPC8548E 0x0012
PCI_DEVICE_ID_MPC8548  macro  include/linux/pci_ids.h  2360  #define PCI_DEVICE_ID_MPC8548 0x0013
PCI_DEVICE_ID_MPC8543E  macro  include/linux/pci_ids.h  2361  #define PCI_DEVICE_ID_MPC8543E 0x0014
PCI_DEVICE_ID_MPC8543  macro  include/linux/pci_ids.h  2362  #define PCI_DEVICE_ID_MPC8543 0x0015
PCI_DEVICE_ID_MPC8547E  macro  include/linux/pci_ids.h  2363  #define PCI_DEVICE_ID_MPC8547E 0x0018
PCI_DEVICE_ID_MPC8545E  macro  include/linux/pci_ids.h  2364  #define PCI_DEVICE_ID_MPC8545E 0x0019
PCI_DEVICE_ID_MPC8545  macro  include/linux/pci_ids.h  2365  #define PCI_DEVICE_ID_MPC8545 0x001a
PCI_DEVICE_ID_MPC8569E  macro  include/linux/pci_ids.h  2366  #define PCI_DEVICE_ID_MPC8569E 0x0061
PCI_DEVICE_ID_MPC8569  macro  include/linux/pci_ids.h  2367  #define PCI_DEVICE_ID_MPC8569 0x0060
PCI_DEVICE_ID_MPC8568E  macro  include/linux/pci_ids.h  2368  #define PCI_DEVICE_ID_MPC8568E 0x0020
PCI_DEVICE_ID_MPC8568  macro  include/linux/pci_ids.h  2369  #define PCI_DEVICE_ID_MPC8568 0x0021
PCI_DEVICE_ID_MPC8567E  macro  include/linux/pci_ids.h  2370  #define PCI_DEVICE_ID_MPC8567E 0x0022
PCI_DEVICE_ID_MPC8567  macro  include/linux/pci_ids.h  2371  #define PCI_DEVICE_ID_MPC8567 0x0023
PCI_DEVICE_ID_MPC8533E  macro  include/linux/pci_ids.h  2372  #define PCI_DEVICE_ID_MPC8533E 0x0030
PCI_DEVICE_ID_MPC8533  macro  include/linux/pci_ids.h  2373  #define PCI_DEVICE_ID_MPC8533 0x0031
PCI_DEVICE_ID_MPC8544E  macro  include/linux/pci_ids.h  2374  #define PCI_DEVICE_ID_MPC8544E 0x0032
PCI_DEVICE_ID_MPC8544  macro  include/linux/pci_ids.h  2375  #define PCI_DEVICE_ID_MPC8544 0x0033
PCI_DEVICE_ID_MPC8572E  macro  include/linux/pci_ids.h  2376  #define PCI_DEVICE_ID_MPC8572E 0x0040
PCI_DEVICE_ID_MPC8572  macro  include/linux/pci_ids.h  2377  #define PCI_DEVICE_ID_MPC8572 0x0041
PCI_DEVICE_ID_MPC8536E  macro  include/linux/pci_ids.h  2378  #define PCI_DEVICE_ID_MPC8536E 0x0050
PCI_DEVICE_ID_MPC8536  macro  include/linux/pci_ids.h  2379  #define PCI_DEVICE_ID_MPC8536 0x0051
PCI_DEVICE_ID_P2020E  macro  include/linux/pci_ids.h  2380  #define PCI_DEVICE_ID_P2020E 0x0070
PCI_DEVICE_ID_P2020  macro  include/linux/pci_ids.h  2381  #define PCI_DEVICE_ID_P2020 0x0071
PCI_DEVICE_ID_P2010E  macro  include/linux/pci_ids.h  2382  #define PCI_DEVICE_ID_P2010E 0x0078
PCI_DEVICE_ID_P2010  macro  include/linux/pci_ids.h  2383  #define PCI_DEVICE_ID_P2010 0x0079
PCI_DEVICE_ID_P1020E  macro  include/linux/pci_ids.h  2384  #define PCI_DEVICE_ID_P1020E 0x0100
PCI_DEVICE_ID_P1020  macro  include/linux/pci_ids.h  2385  #define PCI_DEVICE_ID_P1020 0x0101
PCI_DEVICE_ID_P1021E  macro  include/linux/pci_ids.h  2386  #define PCI_DEVICE_ID_P1021E 0x0102
PCI_DEVICE_ID_P1021  macro  include/linux/pci_ids.h  2387  #define PCI_DEVICE_ID_P1021 0x0103
PCI_DEVICE_ID_P1011E  macro  include/linux/pci_ids.h  2388  #define PCI_DEVICE_ID_P1011E 0x0108
PCI_DEVICE_ID_P1011  macro  include/linux/pci_ids.h  2389  #define PCI_DEVICE_ID_P1011 0x0109
PCI_DEVICE_ID_P1022E  macro  include/linux/pci_ids.h  2390  #define PCI_DEVICE_ID_P1022E 0x0110
PCI_DEVICE_ID_P1022  macro  include/linux/pci_ids.h  2391  #define PCI_DEVICE_ID_P1022 0x0111
PCI_DEVICE_ID_P1013E  macro  include/linux/pci_ids.h  2392  #define PCI_DEVICE_ID_P1013E 0x0118
PCI_DEVICE_ID_P1013  macro  include/linux/pci_ids.h  2393  #define PCI_DEVICE_ID_P1013 0x0119
PCI_DEVICE_ID_P4080E  macro  include/linux/pci_ids.h  2394  #define PCI_DEVICE_ID_P4080E 0x0400
PCI_DEVICE_ID_P4080  macro  include/linux/pci_ids.h  2395  #define PCI_DEVICE_ID_P4080 0x0401
PCI_DEVICE_ID_P4040E  macro  include/linux/pci_ids.h  2396  #define PCI_DEVICE_ID_P4040E 0x0408
PCI_DEVICE_ID_P4040  macro  include/linux/pci_ids.h  2397  #define PCI_DEVICE_ID_P4040 0x0409
PCI_DEVICE_ID_P2040E  macro  include/linux/pci_ids.h  2398  #define PCI_DEVICE_ID_P2040E 0x0410
PCI_DEVICE_ID_P2040  macro  include/linux/pci_ids.h  2399  #define PCI_DEVICE_ID_P2040 0x0411
PCI_DEVICE_ID_P3041E  macro  include/linux/pci_ids.h  2400  #define PCI_DEVICE_ID_P3041E 0x041E
PCI_DEVICE_ID_P3041  macro  include/linux/pci_ids.h  2401  #define PCI_DEVICE_ID_P3041 0x041F
PCI_DEVICE_ID_P5020E  macro  include/linux/pci_ids.h  2402  #define PCI_DEVICE_ID_P5020E 0x0420
PCI_DEVICE_ID_P5020  macro  include/linux/pci_ids.h  2403  #define PCI_DEVICE_ID_P5020 0x0421
PCI_DEVICE_ID_P5010E  macro  include/linux/pci_ids.h  2404  #define PCI_DEVICE_ID_P5010E 0x0428
PCI_DEVICE_ID_P5010  macro  include/linux/pci_ids.h  2405  #define PCI_DEVICE_ID_P5010 0x0429
PCI_DEVICE_ID_MPC8641  macro  include/linux/pci_ids.h  2406  #define PCI_DEVICE_ID_MPC8641 0x7010
PCI_DEVICE_ID_MPC8641D  macro  include/linux/pci_ids.h  2407  #define PCI_DEVICE_ID_MPC8641D 0x7011
PCI_DEVICE_ID_MPC8610  macro  include/linux/pci_ids.h  2408  #define PCI_DEVICE_ID_MPC8610 0x7018
PCI_VENDOR_ID_PASEMI  macro  include/linux/pci_ids.h  2410  #define PCI_VENDOR_ID_PASEMI 0x1959
PCI_VENDOR_ID_ATTANSIC  macro  include/linux/pci_ids.h  2412  #define PCI_VENDOR_ID_ATTANSIC 0x1969
PCI_DEVICE_ID_ATTANSIC_L1  macro  include/linux/pci_ids.h  2413  #define PCI_DEVICE_ID_ATTANSIC_L1 0x1048
PCI_DEVICE_ID_ATTANSIC_L2  macro  include/linux/pci_ids.h  2414  #define PCI_DEVICE_ID_ATTANSIC_L2 0x2048
PCI_VENDOR_ID_JMICRON  macro  include/linux/pci_ids.h  2416  #define PCI_VENDOR_ID_JMICRON 0x197B
PCI_DEVICE_ID_JMICRON_JMB360  macro  include/linux/pci_ids.h  2417  #define PCI_DEVICE_ID_JMICRON_JMB360 0x2360
PCI_DEVICE_ID_JMICRON_JMB361  macro  include/linux/pci_ids.h  2418  #define PCI_DEVICE_ID_JMICRON_JMB361 0x2361
PCI_DEVICE_ID_JMICRON_JMB362  macro  include/linux/pci_ids.h  2419  #define PCI_DEVICE_ID_JMICRON_JMB362 0x2362
PCI_DEVICE_ID_JMICRON_JMB363  macro  include/linux/pci_ids.h  2420  #define PCI_DEVICE_ID_JMICRON_JMB363 0x2363
PCI_DEVICE_ID_JMICRON_JMB364  macro  include/linux/pci_ids.h  2421  #define PCI_DEVICE_ID_JMICRON_JMB364 0x2364
PCI_DEVICE_ID_JMICRON_JMB365  macro  include/linux/pci_ids.h  2422  #define PCI_DEVICE_ID_JMICRON_JMB365 0x2365
PCI_DEVICE_ID_JMICRON_JMB366  macro  include/linux/pci_ids.h  2423  #define PCI_DEVICE_ID_JMICRON_JMB366 0x2366
PCI_DEVICE_ID_JMICRON_JMB368  macro  include/linux/pci_ids.h  2424  #define PCI_DEVICE_ID_JMICRON_JMB368 0x2368
PCI_DEVICE_ID_JMICRON_JMB369  macro  include/linux/pci_ids.h  2425  #define PCI_DEVICE_ID_JMICRON_JMB369 0x2369
PCI_DEVICE_ID_JMICRON_JMB38X_SD  macro  include/linux/pci_ids.h  2426  #define PCI_DEVICE_ID_JMICRON_JMB38X_SD 0x2381
PCI_DEVICE_ID_JMICRON_JMB38X_MMC  macro  include/linux/pci_ids.h  2427  #define PCI_DEVICE_ID_JMICRON_JMB38X_MMC 0x2382
PCI_DEVICE_ID_JMICRON_JMB38X_MS  macro  include/linux/pci_ids.h  2428  #define PCI_DEVICE_ID_JMICRON_JMB38X_MS 0x2383
PCI_DEVICE_ID_JMICRON_JMB385_MS  macro  include/linux/pci_ids.h  2429  #define PCI_DEVICE_ID_JMICRON_JMB385_MS 0x2388
PCI_DEVICE_ID_JMICRON_JMB388_SD  macro  include/linux/pci_ids.h  2430  #define PCI_DEVICE_ID_JMICRON_JMB388_SD 0x2391
PCI_DEVICE_ID_JMICRON_JMB388_ESD  macro  include/linux/pci_ids.h  2431  #define PCI_DEVICE_ID_JMICRON_JMB388_ESD 0x2392
PCI_DEVICE_ID_JMICRON_JMB390_MS  macro  include/linux/pci_ids.h  2432  #define PCI_DEVICE_ID_JMICRON_JMB390_MS 0x2393
PCI_VENDOR_ID_KORENIX  macro  include/linux/pci_ids.h  2434  #define PCI_VENDOR_ID_KORENIX 0x1982
PCI_DEVICE_ID_KORENIX_JETCARDF0  macro  include/linux/pci_ids.h  2435  #define PCI_DEVICE_ID_KORENIX_JETCARDF0 0x1600
PCI_DEVICE_ID_KORENIX_JETCARDF1  macro  include/linux/pci_ids.h  2436  #define PCI_DEVICE_ID_KORENIX_JETCARDF1 0x16ff
PCI_DEVICE_ID_KORENIX_JETCARDF2  macro  include/linux/pci_ids.h  2437  #define PCI_DEVICE_ID_KORENIX_JETCARDF2 0x1700
PCI_DEVICE_ID_KORENIX_JETCARDF3  macro  include/linux/pci_ids.h  2438  #define PCI_DEVICE_ID_KORENIX_JETCARDF3 0x17ff
PCI_VENDOR_ID_QMI  macro  include/linux/pci_ids.h  2440  #define PCI_VENDOR_ID_QMI 0x1a32
PCI_VENDOR_ID_AZWAVE  macro  include/linux/pci_ids.h  2442  #define PCI_VENDOR_ID_AZWAVE 0x1a3b
PCI_VENDOR_ID_ASMEDIA  macro  include/linux/pci_ids.h  2444  #define PCI_VENDOR_ID_ASMEDIA 0x1b21
PCI_VENDOR_ID_TEKRAM  macro  include/linux/pci_ids.h  2446  #define PCI_VENDOR_ID_TEKRAM 0x1de1
PCI_DEVICE_ID_TEKRAM_DC290  macro  include/linux/pci_ids.h  2447  #define PCI_DEVICE_ID_TEKRAM_DC290 0xdc29
PCI_VENDOR_ID_TEHUTI  macro  include/linux/pci_ids.h  2449  #define PCI_VENDOR_ID_TEHUTI 0x1fc9
PCI_DEVICE_ID_TEHUTI_3009  macro  include/linux/pci_ids.h  2450  #define PCI_DEVICE_ID_TEHUTI_3009 0x3009
PCI_DEVICE_ID_TEHUTI_3010  macro  include/linux/pci_ids.h  2451  #define PCI_DEVICE_ID_TEHUTI_3010 0x3010
PCI_DEVICE_ID_TEHUTI_3014  macro  include/linux/pci_ids.h  2452  #define PCI_DEVICE_ID_TEHUTI_3014 0x3014
PCI_VENDOR_ID_HINT  macro  include/linux/pci_ids.h  2454  #define PCI_VENDOR_ID_HINT 0x3388
PCI_DEVICE_ID_HINT_VXPROII_IDE  macro  include/linux/pci_ids.h  2455  #define PCI_DEVICE_ID_HINT_VXPROII_IDE 0x8013
PCI_VENDOR_ID_3DLABS  macro  include/linux/pci_ids.h  2457  #define PCI_VENDOR_ID_3DLABS 0x3d3d
PCI_DEVICE_ID_3DLABS_PERMEDIA2  macro  include/linux/pci_ids.h  2458  #define PCI_DEVICE_ID_3DLABS_PERMEDIA2 0x0007
PCI_DEVICE_ID_3DLABS_PERMEDIA2V  macro  include/linux/pci_ids.h  2459  #define PCI_DEVICE_ID_3DLABS_PERMEDIA2V 0x0009
PCI_VENDOR_ID_NETXEN  macro  include/linux/pci_ids.h  2461  #define PCI_VENDOR_ID_NETXEN 0x4040
PCI_DEVICE_ID_NX2031_10GXSR  macro  include/linux/pci_ids.h  2462  #define PCI_DEVICE_ID_NX2031_10GXSR 0x0001
PCI_DEVICE_ID_NX2031_10GCX4  macro  include/linux/pci_ids.h  2463  #define PCI_DEVICE_ID_NX2031_10GCX4 0x0002
PCI_DEVICE_ID_NX2031_4GCU  macro  include/linux/pci_ids.h  2464  #define PCI_DEVICE_ID_NX2031_4GCU 0x0003
PCI_DEVICE_ID_NX2031_IMEZ  macro  include/linux/pci_ids.h  2465  #define PCI_DEVICE_ID_NX2031_IMEZ 0x0004
PCI_DEVICE_ID_NX2031_HMEZ  macro  include/linux/pci_ids.h  2466  #define PCI_DEVICE_ID_NX2031_HMEZ 0x0005
PCI_DEVICE_ID_NX2031_XG_MGMT  macro  include/linux/pci_ids.h  2467  #define PCI_DEVICE_ID_NX2031_XG_MGMT 0x0024
PCI_DEVICE_ID_NX2031_XG_MGMT2  macro  include/linux/pci_ids.h  2468  #define PCI_DEVICE_ID_NX2031_XG_MGMT2 0x0025
PCI_DEVICE_ID_NX3031  macro  include/linux/pci_ids.h  2469  #define PCI_DEVICE_ID_NX3031 0x0100
PCI_VENDOR_ID_AKS  macro  include/linux/pci_ids.h  2471  #define PCI_VENDOR_ID_AKS 0x416c
PCI_DEVICE_ID_AKS_ALADDINCARD  macro  include/linux/pci_ids.h  2472  #define PCI_DEVICE_ID_AKS_ALADDINCARD 0x0100
PCI_VENDOR_ID_ACCESSIO  macro  include/linux/pci_ids.h  2474  #define PCI_VENDOR_ID_ACCESSIO 0x494f
PCI_DEVICE_ID_ACCESSIO_WDG_CSM  macro  include/linux/pci_ids.h  2475  #define PCI_DEVICE_ID_ACCESSIO_WDG_CSM 0x22c0
PCI_VENDOR_ID_S3  macro  include/linux/pci_ids.h  2477  #define PCI_VENDOR_ID_S3 0x5333
PCI_DEVICE_ID_S3_TRIO  macro  include/linux/pci_ids.h  2478  #define PCI_DEVICE_ID_S3_TRIO 0x8811
PCI_DEVICE_ID_S3_868  macro  include/linux/pci_ids.h  2479  #define PCI_DEVICE_ID_S3_868 0x8880
PCI_DEVICE_ID_S3_968  macro  include/linux/pci_ids.h  2480  #define PCI_DEVICE_ID_S3_968 0x88f0
PCI_DEVICE_ID_S3_SAVAGE4  macro  include/linux/pci_ids.h  2481  #define PCI_DEVICE_ID_S3_SAVAGE4 0x8a25
PCI_DEVICE_ID_S3_PROSAVAGE8  macro  include/linux/pci_ids.h  2482  #define PCI_DEVICE_ID_S3_PROSAVAGE8 0x8d04
PCI_DEVICE_ID_S3_SONICVIBES  macro  include/linux/pci_ids.h  2483  #define PCI_DEVICE_ID_S3_SONICVIBES 0xca00
PCI_VENDOR_ID_DUNORD  macro  include/linux/pci_ids.h  2485  #define PCI_VENDOR_ID_DUNORD 0x5544
PCI_DEVICE_ID_DUNORD_I3000  macro  include/linux/pci_ids.h  2486  #define PCI_DEVICE_ID_DUNORD_I3000 0x0001
PCI_VENDOR_ID_DCI  macro  include/linux/pci_ids.h  2488  #define PCI_VENDOR_ID_DCI 0x6666
PCI_DEVICE_ID_DCI_PCCOM4  macro  include/linux/pci_ids.h  2489  #define PCI_DEVICE_ID_DCI_PCCOM4 0x0001
PCI_DEVICE_ID_DCI_PCCOM8  macro  include/linux/pci_ids.h  2490  #define PCI_DEVICE_ID_DCI_PCCOM8 0x0002
PCI_DEVICE_ID_DCI_PCCOM2  macro  include/linux/pci_ids.h  2491  #define PCI_DEVICE_ID_DCI_PCCOM2 0x0004
PCI_VENDOR_ID_INTEL  macro  include/linux/pci_ids.h  2493  #define PCI_VENDOR_ID_INTEL 0x8086
PCI_DEVICE_ID_INTEL_EESSC  macro  include/linux/pci_ids.h  2494  #define PCI_DEVICE_ID_INTEL_EESSC 0x0008
PCI_DEVICE_ID_INTEL_PXHD_0  macro  include/linux/pci_ids.h  2495  #define PCI_DEVICE_ID_INTEL_PXHD_0 0x0320
PCI_DEVICE_ID_INTEL_PXHD_1  macro  include/linux/pci_ids.h  2496  #define PCI_DEVICE_ID_INTEL_PXHD_1 0x0321
PCI_DEVICE_ID_INTEL_PXH_0  macro  include/linux/pci_ids.h  2497  #define PCI_DEVICE_ID_INTEL_PXH_0 0x0329
PCI_DEVICE_ID_INTEL_PXH_1  macro  include/linux/pci_ids.h  2498  #define PCI_DEVICE_ID_INTEL_PXH_1 0x032A
PCI_DEVICE_ID_INTEL_PXHV  macro  include/linux/pci_ids.h  2499  #define PCI_DEVICE_ID_INTEL_PXHV 0x032C
PCI_DEVICE_ID_INTEL_80332_0  macro  include/linux/pci_ids.h  2500  #define PCI_DEVICE_ID_INTEL_80332_0 0x0330
PCI_DEVICE_ID_INTEL_80332_1  macro  include/linux/pci_ids.h  2501  #define PCI_DEVICE_ID_INTEL_80332_1 0x0332
PCI_DEVICE_ID_INTEL_80333_0  macro  include/linux/pci_ids.h  2502  #define PCI_DEVICE_ID_INTEL_80333_0 0x0370
PCI_DEVICE_ID_INTEL_80333_1  macro  include/linux/pci_ids.h  2503  #define PCI_DEVICE_ID_INTEL_80333_1 0x0372
PCI_DEVICE_ID_INTEL_82375  macro  include/linux/pci_ids.h  2504  #define PCI_DEVICE_ID_INTEL_82375 0x0482
PCI_DEVICE_ID_INTEL_82424  macro  include/linux/pci_ids.h  2505  #define PCI_DEVICE_ID_INTEL_82424 0x0483
PCI_DEVICE_ID_INTEL_82378  macro  include/linux/pci_ids.h  2506  #define PCI_DEVICE_ID_INTEL_82378 0x0484
PCI_DEVICE_ID_INTEL_MRST_SD0  macro  include/linux/pci_ids.h  2507  #define PCI_DEVICE_ID_INTEL_MRST_SD0 0x0807
PCI_DEVICE_ID_INTEL_MRST_SD1  macro  include/linux/pci_ids.h  2508  #define PCI_DEVICE_ID_INTEL_MRST_SD1 0x0808
PCI_DEVICE_ID_INTEL_MFD_SD  macro  include/linux/pci_ids.h  2509  #define PCI_DEVICE_ID_INTEL_MFD_SD 0x0820
PCI_DEVICE_ID_INTEL_MFD_SDIO1  macro  include/linux/pci_ids.h  2510  #define PCI_DEVICE_ID_INTEL_MFD_SDIO1 0x0821
PCI_DEVICE_ID_INTEL_MFD_SDIO2  macro  include/linux/pci_ids.h  2511  #define PCI_DEVICE_ID_INTEL_MFD_SDIO2 0x0822
PCI_DEVICE_ID_INTEL_MFD_EMMC0  macro  include/linux/pci_ids.h  2512  #define PCI_DEVICE_ID_INTEL_MFD_EMMC0 0x0823
PCI_DEVICE_ID_INTEL_MFD_EMMC1  macro  include/linux/pci_ids.h  2513  #define PCI_DEVICE_ID_INTEL_MFD_EMMC1 0x0824
PCI_DEVICE_ID_INTEL_MRST_SD2  macro  include/linux/pci_ids.h  2514  #define PCI_DEVICE_ID_INTEL_MRST_SD2 0x084F
PCI_DEVICE_ID_INTEL_I960  macro  include/linux/pci_ids.h  2515  #define PCI_DEVICE_ID_INTEL_I960 0x0960
PCI_DEVICE_ID_INTEL_I960RM  macro  include/linux/pci_ids.h  2516  #define PCI_DEVICE_ID_INTEL_I960RM 0x0962
PCI_DEVICE_ID_INTEL_CENTERTON_ILB  macro  include/linux/pci_ids.h  2517  #define PCI_DEVICE_ID_INTEL_CENTERTON_ILB 0x0c60
PCI_DEVICE_ID_INTEL_8257X_SOL  macro  include/linux/pci_ids.h  2518  #define PCI_DEVICE_ID_INTEL_8257X_SOL 0x1062
PCI_DEVICE_ID_INTEL_82573E_SOL  macro  include/linux/pci_ids.h  2519  #define PCI_DEVICE_ID_INTEL_82573E_SOL 0x1085
PCI_DEVICE_ID_INTEL_82573L_SOL  macro  include/linux/pci_ids.h  2520  #define PCI_DEVICE_ID_INTEL_82573L_SOL 0x108F
PCI_DEVICE_ID_INTEL_82815_MC  macro  include/linux/pci_ids.h  2521  #define PCI_DEVICE_ID_INTEL_82815_MC 0x1130
PCI_DEVICE_ID_INTEL_82815_CGC  macro  include/linux/pci_ids.h  2522  #define PCI_DEVICE_ID_INTEL_82815_CGC 0x1132
PCI_DEVICE_ID_INTEL_82092AA_0  macro  include/linux/pci_ids.h  2523  #define PCI_DEVICE_ID_INTEL_82092AA_0 0x1221
PCI_DEVICE_ID_INTEL_7505_0  macro  include/linux/pci_ids.h  2524  #define PCI_DEVICE_ID_INTEL_7505_0 0x2550
PCI_DEVICE_ID_INTEL_7205_0  macro  include/linux/pci_ids.h  2525  #define PCI_DEVICE_ID_INTEL_7205_0 0x255d
PCI_DEVICE_ID_INTEL_82437  macro  include/linux/pci_ids.h  2526  #define PCI_DEVICE_ID_INTEL_82437 0x122d
PCI_DEVICE_ID_INTEL_82371FB_0  macro  include/linux/pci_ids.h  2527  #define PCI_DEVICE_ID_INTEL_82371FB_0 0x122e
PCI_DEVICE_ID_INTEL_82371FB_1  macro  include/linux/pci_ids.h  2528  #define PCI_DEVICE_ID_INTEL_82371FB_1 0x1230
PCI_DEVICE_ID_INTEL_82371MX  macro  include/linux/pci_ids.h  2529  #define PCI_DEVICE_ID_INTEL_82371MX 0x1234
PCI_DEVICE_ID_INTEL_82441  macro  include/linux/pci_ids.h  2530  #define PCI_DEVICE_ID_INTEL_82441 0x1237
PCI_DEVICE_ID_INTEL_82380FB  macro  include/linux/pci_ids.h  2531  #define PCI_DEVICE_ID_INTEL_82380FB 0x124b
PCI_DEVICE_ID_INTEL_82439  macro  include/linux/pci_ids.h  2532  #define PCI_DEVICE_ID_INTEL_82439 0x1250
PCI_DEVICE_ID_INTEL_80960_RP  macro  include/linux/pci_ids.h  2533  #define PCI_DEVICE_ID_INTEL_80960_RP 0x1960
PCI_DEVICE_ID_INTEL_82840_HB  macro  include/linux/pci_ids.h  2534  #define PCI_DEVICE_ID_INTEL_82840_HB 0x1a21
PCI_DEVICE_ID_INTEL_82845_HB  macro  include/linux/pci_ids.h  2535  #define PCI_DEVICE_ID_INTEL_82845_HB 0x1a30
PCI_DEVICE_ID_INTEL_IOAT  macro  include/linux/pci_ids.h  2536  #define PCI_DEVICE_ID_INTEL_IOAT 0x1a38
PCI_DEVICE_ID_INTEL_COUGARPOINT_LPC_MIN  macro  include/linux/pci_ids.h  2537  #define PCI_DEVICE_ID_INTEL_COUGARPOINT_LPC_MIN 0x1c41
PCI_DEVICE_ID_INTEL_COUGARPOINT_LPC_MAX  macro  include/linux/pci_ids.h  2538  #define PCI_DEVICE_ID_INTEL_COUGARPOINT_LPC_MAX 0x1c5f
PCI_DEVICE_ID_INTEL_PATSBURG_LPC_0  macro  include/linux/pci_ids.h  2539  #define PCI_DEVICE_ID_INTEL_PATSBURG_LPC_0 0x1d40
PCI_DEVICE_ID_INTEL_PATSBURG_LPC_1  macro  include/linux/pci_ids.h  2540  #define PCI_DEVICE_ID_INTEL_PATSBURG_LPC_1 0x1d41
PCI_DEVICE_ID_INTEL_PANTHERPOINT_XHCI  macro  include/linux/pci_ids.h  2541  #define PCI_DEVICE_ID_INTEL_PANTHERPOINT_XHCI 0x1e31
PCI_DEVICE_ID_INTEL_PANTHERPOINT_LPC_MIN  macro  include/linux/pci_ids.h  2542  #define PCI_DEVICE_ID_INTEL_PANTHERPOINT_LPC_MIN 0x1e40
PCI_DEVICE_ID_INTEL_PANTHERPOINT_LPC_MAX  macro  include/linux/pci_ids.h  2543  #define PCI_DEVICE_ID_INTEL_PANTHERPOINT_LPC_MAX 0x1e5f
PCI_DEVICE_ID_INTEL_DH89XXCC_LPC_MIN  macro  include/linux/pci_ids.h  2544  #define PCI_DEVICE_ID_INTEL_DH89XXCC_LPC_MIN 0x2310
PCI_DEVICE_ID_INTEL_DH89XXCC_LPC_MAX  macro  include/linux/pci_ids.h  2545  #define PCI_DEVICE_ID_INTEL_DH89XXCC_LPC_MAX 0x231f
PCI_DEVICE_ID_INTEL_82801AA_0  macro  include/linux/pci_ids.h  2546  #define PCI_DEVICE_ID_INTEL_82801AA_0 0x2410
PCI_DEVICE_ID_INTEL_82801AA_1  macro  include/linux/pci_ids.h  2547  #define PCI_DEVICE_ID_INTEL_82801AA_1 0x2411
PCI_DEVICE_ID_INTEL_82801AA_3  macro  include/linux/pci_ids.h  2548  #define PCI_DEVICE_ID_INTEL_82801AA_3 0x2413
PCI_DEVICE_ID_INTEL_82801AA_5  macro  include/linux/pci_ids.h  2549  #define PCI_DEVICE_ID_INTEL_82801AA_5 0x2415
PCI_DEVICE_ID_INTEL_82801AA_6  macro  include/linux/pci_ids.h  2550  #define PCI_DEVICE_ID_INTEL_82801AA_6 0x2416
PCI_DEVICE_ID_INTEL_82801AA_8  macro  include/linux/pci_ids.h  2551  #define PCI_DEVICE_ID_INTEL_82801AA_8 0x2418
PCI_DEVICE_ID_INTEL_82801AB_0  macro  include/linux/pci_ids.h  2552  #define PCI_DEVICE_ID_INTEL_82801AB_0 0x2420
PCI_DEVICE_ID_INTEL_82801AB_1  macro  include/linux/pci_ids.h  2553  #define PCI_DEVICE_ID_INTEL_82801AB_1 0x2421
PCI_DEVICE_ID_INTEL_82801AB_3  macro  include/linux/pci_ids.h  2554  #define PCI_DEVICE_ID_INTEL_82801AB_3 0x2423
PCI_DEVICE_ID_INTEL_82801AB_5  macro  include/linux/pci_ids.h  2555  #define PCI_DEVICE_ID_INTEL_82801AB_5 0x2425
PCI_DEVICE_ID_INTEL_82801AB_6  macro  include/linux/pci_ids.h  2556  #define PCI_DEVICE_ID_INTEL_82801AB_6 0x2426
PCI_DEVICE_ID_INTEL_82801AB_8  macro  include/linux/pci_ids.h  2557  #define PCI_DEVICE_ID_INTEL_82801AB_8 0x2428
PCI_DEVICE_ID_INTEL_82801BA_0  macro  include/linux/pci_ids.h  2558  #define PCI_DEVICE_ID_INTEL_82801BA_0 0x2440
PCI_DEVICE_ID_INTEL_82801BA_2  macro  include/linux/pci_ids.h  2559  #define PCI_DEVICE_ID_INTEL_82801BA_2 0x2443
PCI_DEVICE_ID_INTEL_82801BA_4  macro  include/linux/pci_ids.h  2560  #define PCI_DEVICE_ID_INTEL_82801BA_4 0x2445
PCI_DEVICE_ID_INTEL_82801BA_6  macro  include/linux/pci_ids.h  2561  #define PCI_DEVICE_ID_INTEL_82801BA_6 0x2448
PCI_DEVICE_ID_INTEL_82801BA_8  macro  include/linux/pci_ids.h  2562  #define PCI_DEVICE_ID_INTEL_82801BA_8 0x244a
PCI_DEVICE_ID_INTEL_82801BA_9  macro  include/linux/pci_ids.h  2563  #define PCI_DEVICE_ID_INTEL_82801BA_9 0x244b
PCI_DEVICE_ID_INTEL_82801BA_10  macro  include/linux/pci_ids.h  2564  #define PCI_DEVICE_ID_INTEL_82801BA_10 0x244c
PCI_DEVICE_ID_INTEL_82801BA_11  macro  include/linux/pci_ids.h  2565  #define PCI_DEVICE_ID_INTEL_82801BA_11 0x244e
PCI_DEVICE_ID_INTEL_82801E_0  macro  include/linux/pci_ids.h  2566  #define PCI_DEVICE_ID_INTEL_82801E_0 0x2450
PCI_DEVICE_ID_INTEL_82801E_11  macro  include/linux/pci_ids.h  2567  #define PCI_DEVICE_ID_INTEL_82801E_11 0x245b
PCI_DEVICE_ID_INTEL_82801CA_0  macro  include/linux/pci_ids.h  2568  #define PCI_DEVICE_ID_INTEL_82801CA_0 0x2480
PCI_DEVICE_ID_INTEL_82801CA_3  macro  include/linux/pci_ids.h  2569  #define PCI_DEVICE_ID_INTEL_82801CA_3 0x2483
PCI_DEVICE_ID_INTEL_82801CA_5  macro  include/linux/pci_ids.h  2570  #define PCI_DEVICE_ID_INTEL_82801CA_5 0x2485
PCI_DEVICE_ID_INTEL_82801CA_6  macro  include/linux/pci_ids.h  2571  #define PCI_DEVICE_ID_INTEL_82801CA_6 0x2486
PCI_DEVICE_ID_INTEL_82801CA_10  macro  include/linux/pci_ids.h  2572  #define PCI_DEVICE_ID_INTEL_82801CA_10 0x248a
PCI_DEVICE_ID_INTEL_82801CA_11  macro  include/linux/pci_ids.h  2573  #define PCI_DEVICE_ID_INTEL_82801CA_11 0x248b
PCI_DEVICE_ID_INTEL_82801CA_12  macro  include/linux/pci_ids.h  2574  #define PCI_DEVICE_ID_INTEL_82801CA_12 0x248c
PCI_DEVICE_ID_INTEL_82801DB_0  macro  include/linux/pci_ids.h  2575  #define PCI_DEVICE_ID_INTEL_82801DB_0 0x24c0
PCI_DEVICE_ID_INTEL_82801DB_1  macro  include/linux/pci_ids.h  2576  #define PCI_DEVICE_ID_INTEL_82801DB_1 0x24c1
PCI_DEVICE_ID_INTEL_82801DB_2  macro  include/linux/pci_ids.h  2577  #define PCI_DEVICE_ID_INTEL_82801DB_2 0x24c2
PCI_DEVICE_ID_INTEL_82801DB_3  macro  include/linux/pci_ids.h  2578  #define PCI_DEVICE_ID_INTEL_82801DB_3 0x24c3
PCI_DEVICE_ID_INTEL_82801DB_5  macro  include/linux/pci_ids.h  2579  #define PCI_DEVICE_ID_INTEL_82801DB_5 0x24c5
PCI_DEVICE_ID_INTEL_82801DB_6  macro  include/linux/pci_ids.h  2580  #define PCI_DEVICE_ID_INTEL_82801DB_6 0x24c6
PCI_DEVICE_ID_INTEL_82801DB_9  macro  include/linux/pci_ids.h  2581  #define PCI_DEVICE_ID_INTEL_82801DB_9 0x24c9
PCI_DEVICE_ID_INTEL_82801DB_10  macro  include/linux/pci_ids.h  2582  #define PCI_DEVICE_ID_INTEL_82801DB_10 0x24ca
PCI_DEVICE_ID_INTEL_82801DB_11  macro  include/linux/pci_ids.h  2583  #define PCI_DEVICE_ID_INTEL_82801DB_11 0x24cb
PCI_DEVICE_ID_INTEL_82801DB_12  macro  include/linux/pci_ids.h  2584  #define PCI_DEVICE_ID_INTEL_82801DB_12 0x24cc
PCI_DEVICE_ID_INTEL_82801EB_0  macro  include/linux/pci_ids.h  2585  #define PCI_DEVICE_ID_INTEL_82801EB_0 0x24d0
PCI_DEVICE_ID_INTEL_82801EB_1  macro  include/linux/pci_ids.h  2586  #define PCI_DEVICE_ID_INTEL_82801EB_1 0x24d1
PCI_DEVICE_ID_INTEL_82801EB_3  macro  include/linux/pci_ids.h  2587  #define PCI_DEVICE_ID_INTEL_82801EB_3 0x24d3
PCI_DEVICE_ID_INTEL_82801EB_5  macro  include/linux/pci_ids.h  2588  #define PCI_DEVICE_ID_INTEL_82801EB_5 0x24d5
PCI_DEVICE_ID_INTEL_82801EB_6  macro  include/linux/pci_ids.h  2589  #define PCI_DEVICE_ID_INTEL_82801EB_6 0x24d6
PCI_DEVICE_ID_INTEL_82801EB_11  macro  include/linux/pci_ids.h  2590  #define PCI_DEVICE_ID_INTEL_82801EB_11 0x24db
PCI_DEVICE_ID_INTEL_82801EB_12  macro  include/linux/pci_ids.h  2591  #define PCI_DEVICE_ID_INTEL_82801EB_12 0x24dc
PCI_DEVICE_ID_INTEL_82801EB_13  macro  include/linux/pci_ids.h  2592  #define PCI_DEVICE_ID_INTEL_82801EB_13 0x24dd
PCI_DEVICE_ID_INTEL_ESB_1  macro  include/linux/pci_ids.h  2593  #define PCI_DEVICE_ID_INTEL_ESB_1 0x25a1
PCI_DEVICE_ID_INTEL_ESB_2  macro  include/linux/pci_ids.h  2594  #define PCI_DEVICE_ID_INTEL_ESB_2 0x25a2
PCI_DEVICE_ID_INTEL_ESB_4  macro  include/linux/pci_ids.h  2595  #define PCI_DEVICE_ID_INTEL_ESB_4 0x25a4
PCI_DEVICE_ID_INTEL_ESB_5  macro  include/linux/pci_ids.h  2596  #define PCI_DEVICE_ID_INTEL_ESB_5 0x25a6
PCI_DEVICE_ID_INTEL_ESB_9  macro  include/linux/pci_ids.h  2597  #define PCI_DEVICE_ID_INTEL_ESB_9 0x25ab
PCI_DEVICE_ID_INTEL_ESB_10  macro  include/linux/pci_ids.h  2598  #define PCI_DEVICE_ID_INTEL_ESB_10 0x25ac
PCI_DEVICE_ID_INTEL_82820_HB  macro  include/linux/pci_ids.h  2599  #define PCI_DEVICE_ID_INTEL_82820_HB 0x2500
PCI_DEVICE_ID_INTEL_82820_UP_HB  macro  include/linux/pci_ids.h  2600  #define PCI_DEVICE_ID_INTEL_82820_UP_HB 0x2501
PCI_DEVICE_ID_INTEL_82850_HB  macro  include/linux/pci_ids.h  2601  #define PCI_DEVICE_ID_INTEL_82850_HB 0x2530
PCI_DEVICE_ID_INTEL_82860_HB  macro  include/linux/pci_ids.h  2602  #define PCI_DEVICE_ID_INTEL_82860_HB 0x2531
PCI_DEVICE_ID_INTEL_E7501_MCH  macro  include/linux/pci_ids.h  2603  #define PCI_DEVICE_ID_INTEL_E7501_MCH 0x254c
PCI_DEVICE_ID_INTEL_82845G_HB  macro  include/linux/pci_ids.h  2604  #define PCI_DEVICE_ID_INTEL_82845G_HB 0x2560
PCI_DEVICE_ID_INTEL_82845G_IG  macro  include/linux/pci_ids.h  2605  #define PCI_DEVICE_ID_INTEL_82845G_IG 0x2562
PCI_DEVICE_ID_INTEL_82865_HB  macro  include/linux/pci_ids.h  2606  #define PCI_DEVICE_ID_INTEL_82865_HB 0x2570
PCI_DEVICE_ID_INTEL_82865_IG  macro  include/linux/pci_ids.h  2607  #define PCI_DEVICE_ID_INTEL_82865_IG 0x2572
PCI_DEVICE_ID_INTEL_82875_HB  macro  include/linux/pci_ids.h  2608  #define PCI_DEVICE_ID_INTEL_82875_HB 0x2578
PCI_DEVICE_ID_INTEL_82915G_HB  macro  include/linux/pci_ids.h  2609  #define PCI_DEVICE_ID_INTEL_82915G_HB 0x2580
PCI_DEVICE_ID_INTEL_82915G_IG  macro  include/linux/pci_ids.h  2610  #define PCI_DEVICE_ID_INTEL_82915G_IG 0x2582
PCI_DEVICE_ID_INTEL_82915GM_HB  macro  include/linux/pci_ids.h  2611  #define PCI_DEVICE_ID_INTEL_82915GM_HB 0x2590
PCI_DEVICE_ID_INTEL_82915GM_IG  macro  include/linux/pci_ids.h  2612  #define PCI_DEVICE_ID_INTEL_82915GM_IG 0x2592
PCI_DEVICE_ID_INTEL_5000_ERR  macro  include/linux/pci_ids.h  2613  #define PCI_DEVICE_ID_INTEL_5000_ERR 0x25F0
PCI_DEVICE_ID_INTEL_5000_FBD0  macro  include/linux/pci_ids.h  2614  #define PCI_DEVICE_ID_INTEL_5000_FBD0 0x25F5
PCI_DEVICE_ID_INTEL_5000_FBD1  macro  include/linux/pci_ids.h  2615  #define PCI_DEVICE_ID_INTEL_5000_FBD1 0x25F6
PCI_DEVICE_ID_INTEL_82945G_HB  macro  include/linux/pci_ids.h  2616  #define PCI_DEVICE_ID_INTEL_82945G_HB 0x2770
PCI_DEVICE_ID_INTEL_82945G_IG  macro  include/linux/pci_ids.h  2617  #define PCI_DEVICE_ID_INTEL_82945G_IG 0x2772
PCI_DEVICE_ID_INTEL_3000_HB  macro  include/linux/pci_ids.h  2618  #define PCI_DEVICE_ID_INTEL_3000_HB 0x2778
PCI_DEVICE_ID_INTEL_82945GM_HB  macro  include/linux/pci_ids.h  2619  #define PCI_DEVICE_ID_INTEL_82945GM_HB 0x27A0
PCI_DEVICE_ID_INTEL_82945GM_IG  macro  include/linux/pci_ids.h  2620  #define PCI_DEVICE_ID_INTEL_82945GM_IG 0x27A2
PCI_DEVICE_ID_INTEL_ICH6_0  macro  include/linux/pci_ids.h  2621  #define PCI_DEVICE_ID_INTEL_ICH6_0 0x2640
PCI_DEVICE_ID_INTEL_ICH6_1  macro  include/linux/pci_ids.h  2622  #define PCI_DEVICE_ID_INTEL_ICH6_1 0x2641
PCI_DEVICE_ID_INTEL_ICH6_2  macro  include/linux/pci_ids.h  2623  #define PCI_DEVICE_ID_INTEL_ICH6_2 0x2642
PCI_DEVICE_ID_INTEL_ICH6_16  macro  include/linux/pci_ids.h  2624  #define PCI_DEVICE_ID_INTEL_ICH6_16 0x266a
PCI_DEVICE_ID_INTEL_ICH6_17  macro  include/linux/pci_ids.h  2625  #define PCI_DEVICE_ID_INTEL_ICH6_17 0x266d
PCI_DEVICE_ID_INTEL_ICH6_18  macro  include/linux/pci_ids.h  2626  #define PCI_DEVICE_ID_INTEL_ICH6_18 0x266e
PCI_DEVICE_ID_INTEL_ICH6_19  macro  include/linux/pci_ids.h  2627  #define PCI_DEVICE_ID_INTEL_ICH6_19 0x266f
PCI_DEVICE_ID_INTEL_ESB2_0  macro  include/linux/pci_ids.h  2628  #define PCI_DEVICE_ID_INTEL_ESB2_0 0x2670
PCI_DEVICE_ID_INTEL_ESB2_14  macro  include/linux/pci_ids.h  2629  #define PCI_DEVICE_ID_INTEL_ESB2_14 0x2698
PCI_DEVICE_ID_INTEL_ESB2_17  macro  include/linux/pci_ids.h  2630  #define PCI_DEVICE_ID_INTEL_ESB2_17 0x269b
PCI_DEVICE_ID_INTEL_ESB2_18  macro  include/linux/pci_ids.h  2631  #define PCI_DEVICE_ID_INTEL_ESB2_18 0x269e
PCI_DEVICE_ID_INTEL_ICH7_0  macro  include/linux/pci_ids.h  2632  #define PCI_DEVICE_ID_INTEL_ICH7_0 0x27b8
PCI_DEVICE_ID_INTEL_ICH7_1  macro  include/linux/pci_ids.h  2633  #define PCI_DEVICE_ID_INTEL_ICH7_1 0x27b9
PCI_DEVICE_ID_INTEL_ICH7_30  macro  include/linux/pci_ids.h  2634  #define PCI_DEVICE_ID_INTEL_ICH7_30 0x27b0
PCI_DEVICE_ID_INTEL_TGP_LPC  macro  include/linux/pci_ids.h  2635  #define PCI_DEVICE_ID_INTEL_TGP_LPC 0x27bc
PCI_DEVICE_ID_INTEL_ICH7_31  macro  include/linux/pci_ids.h  2636  #define PCI_DEVICE_ID_INTEL_ICH7_31 0x27bd
PCI_DEVICE_ID_INTEL_ICH7_17  macro  include/linux/pci_ids.h  2637  #define PCI_DEVICE_ID_INTEL_ICH7_17 0x27da
PCI_DEVICE_ID_INTEL_ICH7_19  macro  include/linux/pci_ids.h  2638  #define PCI_DEVICE_ID_INTEL_ICH7_19 0x27dd
PCI_DEVICE_ID_INTEL_ICH7_20  macro  include/linux/pci_ids.h  2639  #define PCI_DEVICE_ID_INTEL_ICH7_20 0x27de
PCI_DEVICE_ID_INTEL_ICH7_21  macro  include/linux/pci_ids.h  2640  #define PCI_DEVICE_ID_INTEL_ICH7_21 0x27df
PCI_DEVICE_ID_INTEL_ICH8_0  macro  include/linux/pci_ids.h  2641  #define PCI_DEVICE_ID_INTEL_ICH8_0 0x2810
PCI_DEVICE_ID_INTEL_ICH8_1  macro  include/linux/pci_ids.h  2642  #define PCI_DEVICE_ID_INTEL_ICH8_1 0x2811
PCI_DEVICE_ID_INTEL_ICH8_2  macro  include/linux/pci_ids.h  2643  #define PCI_DEVICE_ID_INTEL_ICH8_2 0x2812
PCI_DEVICE_ID_INTEL_ICH8_3  macro  include/linux/pci_ids.h  2644  #define PCI_DEVICE_ID_INTEL_ICH8_3 0x2814
PCI_DEVICE_ID_INTEL_ICH8_4  macro  include/linux/pci_ids.h  2645  #define PCI_DEVICE_ID_INTEL_ICH8_4 0x2815
PCI_DEVICE_ID_INTEL_ICH8_5  macro  include/linux/pci_ids.h  2646  #define PCI_DEVICE_ID_INTEL_ICH8_5 0x283e
PCI_DEVICE_ID_INTEL_ICH8_6  macro  include/linux/pci_ids.h  2647  #define PCI_DEVICE_ID_INTEL_ICH8_6 0x2850
PCI_DEVICE_ID_INTEL_ICH9_0  macro  include/linux/pci_ids.h  2648  #define PCI_DEVICE_ID_INTEL_ICH9_0 0x2910
PCI_DEVICE_ID_INTEL_ICH9_1  macro  include/linux/pci_ids.h  2649  #define PCI_DEVICE_ID_INTEL_ICH9_1 0x2917
PCI_DEVICE_ID_INTEL_ICH9_2  macro  include/linux/pci_ids.h  2650  #define PCI_DEVICE_ID_INTEL_ICH9_2 0x2912
PCI_DEVICE_ID_INTEL_ICH9_3  macro  include/linux/pci_ids.h  2651  #define PCI_DEVICE_ID_INTEL_ICH9_3 0x2913
PCI_DEVICE_ID_INTEL_ICH9_4  macro  include/linux/pci_ids.h  2652  #define PCI_DEVICE_ID_INTEL_ICH9_4 0x2914
PCI_DEVICE_ID_INTEL_ICH9_5  macro  include/linux/pci_ids.h  2653  #define PCI_DEVICE_ID_INTEL_ICH9_5 0x2919
PCI_DEVICE_ID_INTEL_ICH9_6  macro  include/linux/pci_ids.h  2654  #define PCI_DEVICE_ID_INTEL_ICH9_6 0x2930
PCI_DEVICE_ID_INTEL_ICH9_7  macro  include/linux/pci_ids.h  2655  #define PCI_DEVICE_ID_INTEL_ICH9_7 0x2916
PCI_DEVICE_ID_INTEL_ICH9_8  macro  include/linux/pci_ids.h  2656  #define PCI_DEVICE_ID_INTEL_ICH9_8 0x2918
PCI_DEVICE_ID_INTEL_I7_MCR  macro  include/linux/pci_ids.h  2657  #define PCI_DEVICE_ID_INTEL_I7_MCR 0x2c18
PCI_DEVICE_ID_INTEL_I7_MC_TAD  macro  include/linux/pci_ids.h  2658  #define PCI_DEVICE_ID_INTEL_I7_MC_TAD 0x2c19
PCI_DEVICE_ID_INTEL_I7_MC_RAS  macro  include/linux/pci_ids.h  2659  #define PCI_DEVICE_ID_INTEL_I7_MC_RAS 0x2c1a
PCI_DEVICE_ID_INTEL_I7_MC_TEST  macro  include/linux/pci_ids.h  2660  #define PCI_DEVICE_ID_INTEL_I7_MC_TEST 0x2c1c
PCI_DEVICE_ID_INTEL_I7_MC_CH0_CTRL  macro  include/linux/pci_ids.h  2661  #define PCI_DEVICE_ID_INTEL_I7_MC_CH0_CTRL 0x2c20
PCI_DEVICE_ID_INTEL_I7_MC_CH0_ADDR  macro  include/linux/pci_ids.h  2662  #define PCI_DEVICE_ID_INTEL_I7_MC_CH0_ADDR 0x2c21
PCI_DEVICE_ID_INTEL_I7_MC_CH0_RANK  macro  include/linux/pci_ids.h  2663  #define PCI_DEVICE_ID_INTEL_I7_MC_CH0_RANK 0x2c22
PCI_DEVICE_ID_INTEL_I7_MC_CH0_TC  macro  include/linux/pci_ids.h  2664  #define PCI_DEVICE_ID_INTEL_I7_MC_CH0_TC 0x2c23
PCI_DEVICE_ID_INTEL_I7_MC_CH1_CTRL  macro  include/linux/pci_ids.h  2665  #define PCI_DEVICE_ID_INTEL_I7_MC_CH1_CTRL 0x2c28
PCI_DEVICE_ID_INTEL_I7_MC_CH1_ADDR  macro  include/linux/pci_ids.h  2666  #define PCI_DEVICE_ID_INTEL_I7_MC_CH1_ADDR 0x2c29
PCI_DEVICE_ID_INTEL_I7_MC_CH1_RANK  macro  include/linux/pci_ids.h  2667  #define PCI_DEVICE_ID_INTEL_I7_MC_CH1_RANK 0x2c2a
PCI_DEVICE_ID_INTEL_I7_MC_CH1_TC  macro  include/linux/pci_ids.h  2668  #define PCI_DEVICE_ID_INTEL_I7_MC_CH1_TC 0x2c2b
PCI_DEVICE_ID_INTEL_I7_MC_CH2_CTRL  macro  include/linux/pci_ids.h  2669  #define PCI_DEVICE_ID_INTEL_I7_MC_CH2_CTRL 0x2c30
PCI_DEVICE_ID_INTEL_I7_MC_CH2_ADDR  macro  include/linux/pci_ids.h  2670  #define PCI_DEVICE_ID_INTEL_I7_MC_CH2_ADDR 0x2c31
PCI_DEVICE_ID_INTEL_I7_MC_CH2_RANK  macro  include/linux/pci_ids.h  2671  #define PCI_DEVICE_ID_INTEL_I7_MC_CH2_RANK 0x2c32
PCI_DEVICE_ID_INTEL_I7_MC_CH2_TC  macro  include/linux/pci_ids.h  2672  #define PCI_DEVICE_ID_INTEL_I7_MC_CH2_TC 0x2c33
PCI_DEVICE_ID_INTEL_I7_NONCORE  macro  include/linux/pci_ids.h  2673  #define PCI_DEVICE_ID_INTEL_I7_NONCORE 0x2c41
PCI_DEVICE_ID_INTEL_I7_NONCORE_ALT  macro  include/linux/pci_ids.h  2674  #define PCI_DEVICE_ID_INTEL_I7_NONCORE_ALT 0x2c40
PCI_DEVICE_ID_INTEL_LYNNFIELD_NONCORE  macro  include/linux/pci_ids.h  2675  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_NONCORE 0x2c50
PCI_DEVICE_ID_INTEL_LYNNFIELD_NONCORE_ALT  macro  include/linux/pci_ids.h  2676  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_NONCORE_ALT 0x2c51
PCI_DEVICE_ID_INTEL_LYNNFIELD_NONCORE_REV2  macro  include/linux/pci_ids.h  2677  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_NONCORE_REV2 0x2c70
PCI_DEVICE_ID_INTEL_LYNNFIELD_SAD  macro  include/linux/pci_ids.h  2678  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_SAD 0x2c81
PCI_DEVICE_ID_INTEL_LYNNFIELD_QPI_LINK0  macro  include/linux/pci_ids.h  2679  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_QPI_LINK0 0x2c90
PCI_DEVICE_ID_INTEL_LYNNFIELD_QPI_PHY0  macro  include/linux/pci_ids.h  2680  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_QPI_PHY0 0x2c91
PCI_DEVICE_ID_INTEL_LYNNFIELD_MCR  macro  include/linux/pci_ids.h  2681  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MCR 0x2c98
PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_TAD  macro  include/linux/pci_ids.h  2682  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_TAD 0x2c99
PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_TEST  macro  include/linux/pci_ids.h  2683  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_TEST 0x2c9C
PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH0_CTRL  macro  include/linux/pci_ids.h  2684  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH0_CTRL 0x2ca0
PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH0_ADDR  macro  include/linux/pci_ids.h  2685  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH0_ADDR 0x2ca1
PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH0_RANK  macro  include/linux/pci_ids.h  2686  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH0_RANK 0x2ca2
PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH0_TC  macro  include/linux/pci_ids.h  2687  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH0_TC 0x2ca3
PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH1_CTRL  macro  include/linux/pci_ids.h  2688  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH1_CTRL 0x2ca8
PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH1_ADDR  macro  include/linux/pci_ids.h  2689  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH1_ADDR 0x2ca9
PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH1_RANK  macro  include/linux/pci_ids.h  2690  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH1_RANK 0x2caa
PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH1_TC  macro  include/linux/pci_ids.h  2691  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH1_TC 0x2cab
PCI_DEVICE_ID_INTEL_LYNNFIELD_MCR_REV2  macro  include/linux/pci_ids.h  2692  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MCR_REV2 0x2d98
PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_TAD_REV2  macro  include/linux/pci_ids.h  2693  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_TAD_REV2 0x2d99
PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_RAS_REV2  macro  include/linux/pci_ids.h  2694  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_RAS_REV2 0x2d9a
PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_TEST_REV2  macro  include/linux/pci_ids.h  2695  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_TEST_REV2 0x2d9c
PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH0_CTRL_REV2  macro  include/linux/pci_ids.h  2696  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH0_CTRL_REV2 0x2da0
PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH0_ADDR_REV2  macro  include/linux/pci_ids.h  2697  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH0_ADDR_REV2 0x2da1
PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH0_RANK_REV2  macro  include/linux/pci_ids.h  2698  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH0_RANK_REV2 0x2da2
PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH0_TC_REV2  macro  include/linux/pci_ids.h  2699  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH0_TC_REV2 0x2da3
PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH1_CTRL_REV2  macro  include/linux/pci_ids.h  2700  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH1_CTRL_REV2 0x2da8
PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH1_ADDR_REV2  macro  include/linux/pci_ids.h  2701  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH1_ADDR_REV2 0x2da9
PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH1_RANK_REV2  macro  include/linux/pci_ids.h  2702  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH1_RANK_REV2 0x2daa
PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH1_TC_REV2  macro  include/linux/pci_ids.h  2703  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH1_TC_REV2 0x2dab
PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH2_CTRL_REV2  macro  include/linux/pci_ids.h  2704  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH2_CTRL_REV2 0x2db0
PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH2_ADDR_REV2  macro  include/linux/pci_ids.h  2705  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH2_ADDR_REV2 0x2db1
PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH2_RANK_REV2  macro  include/linux/pci_ids.h  2706  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH2_RANK_REV2 0x2db2
PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH2_TC_REV2  macro  include/linux/pci_ids.h  2707  #define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH2_TC_REV2 0x2db3
PCI_DEVICE_ID_INTEL_82855PM_HB  macro  include/linux/pci_ids.h  2708  #define PCI_DEVICE_ID_INTEL_82855PM_HB 0x3340
PCI_DEVICE_ID_INTEL_IOAT_TBG4  macro  include/linux/pci_ids.h  2709  #define PCI_DEVICE_ID_INTEL_IOAT_TBG4 0x3429
PCI_DEVICE_ID_INTEL_IOAT_TBG5  macro  include/linux/pci_ids.h  2710  #define PCI_DEVICE_ID_INTEL_IOAT_TBG5 0x342a
PCI_DEVICE_ID_INTEL_IOAT_TBG6  macro  include/linux/pci_ids.h  2711  #define PCI_DEVICE_ID_INTEL_IOAT_TBG6 0x342b
PCI_DEVICE_ID_INTEL_IOAT_TBG7  macro  include/linux/pci_ids.h  2712  #define PCI_DEVICE_ID_INTEL_IOAT_TBG7 0x342c
PCI_DEVICE_ID_INTEL_X58_HUB_MGMT  macro  include/linux/pci_ids.h  2713  #define PCI_DEVICE_ID_INTEL_X58_HUB_MGMT 0x342e
PCI_DEVICE_ID_INTEL_IOAT_TBG0  macro  include/linux/pci_ids.h  2714  #define PCI_DEVICE_ID_INTEL_IOAT_TBG0 0x3430
PCI_DEVICE_ID_INTEL_IOAT_TBG1  macro  include/linux/pci_ids.h  2715  #define PCI_DEVICE_ID_INTEL_IOAT_TBG1 0x3431
PCI_DEVICE_ID_INTEL_IOAT_TBG2  macro  include/linux/pci_ids.h  2716  #define PCI_DEVICE_ID_INTEL_IOAT_TBG2 0x3432
PCI_DEVICE_ID_INTEL_IOAT_TBG3  macro  include/linux/pci_ids.h  2717  #define PCI_DEVICE_ID_INTEL_IOAT_TBG3 0x3433
PCI_DEVICE_ID_INTEL_82830_HB  macro  include/linux/pci_ids.h  2718  #define PCI_DEVICE_ID_INTEL_82830_HB 0x3575
PCI_DEVICE_ID_INTEL_82830_CGC  macro  include/linux/pci_ids.h  2719  #define PCI_DEVICE_ID_INTEL_82830_CGC 0x3577
PCI_DEVICE_ID_INTEL_82854_HB  macro  include/linux/pci_ids.h  2720  #define PCI_DEVICE_ID_INTEL_82854_HB 0x358c
PCI_DEVICE_ID_INTEL_82854_IG  macro  include/linux/pci_ids.h  2721  #define PCI_DEVICE_ID_INTEL_82854_IG 0x358e
PCI_DEVICE_ID_INTEL_82855GM_HB  macro  include/linux/pci_ids.h  2722  #define PCI_DEVICE_ID_INTEL_82855GM_HB 0x3580
PCI_DEVICE_ID_INTEL_82855GM_IG  macro  include/linux/pci_ids.h  2723  #define PCI_DEVICE_ID_INTEL_82855GM_IG 0x3582
PCI_DEVICE_ID_INTEL_E7520_MCH  macro  include/linux/pci_ids.h  2724  #define PCI_DEVICE_ID_INTEL_E7520_MCH 0x3590
PCI_DEVICE_ID_INTEL_E7320_MCH  macro  include/linux/pci_ids.h  2725  #define PCI_DEVICE_ID_INTEL_E7320_MCH 0x3592
PCI_DEVICE_ID_INTEL_MCH_PA  macro  include/linux/pci_ids.h  2726  #define PCI_DEVICE_ID_INTEL_MCH_PA 0x3595
PCI_DEVICE_ID_INTEL_MCH_PA1  macro  include/linux/pci_ids.h  2727  #define PCI_DEVICE_ID_INTEL_MCH_PA1 0x3596
PCI_DEVICE_ID_INTEL_MCH_PB  macro  include/linux/pci_ids.h  2728  #define PCI_DEVICE_ID_INTEL_MCH_PB 0x3597
PCI_DEVICE_ID_INTEL_MCH_PB1  macro  include/linux/pci_ids.h  2729  #define PCI_DEVICE_ID_INTEL_MCH_PB1 0x3598
PCI_DEVICE_ID_INTEL_MCH_PC  macro  include/linux/pci_ids.h  2730  #define PCI_DEVICE_ID_INTEL_MCH_PC 0x3599
PCI_DEVICE_ID_INTEL_MCH_PC1  macro  include/linux/pci_ids.h  2731  #define PCI_DEVICE_ID_INTEL_MCH_PC1 0x359a
PCI_DEVICE_ID_INTEL_E7525_MCH  macro  include/linux/pci_ids.h  2732  #define PCI_DEVICE_ID_INTEL_E7525_MCH 0x359e
PCI_DEVICE_ID_INTEL_I7300_MCH_ERR  macro  include/linux/pci_ids.h  2733  #define PCI_DEVICE_ID_INTEL_I7300_MCH_ERR 0x360c
PCI_DEVICE_ID_INTEL_I7300_MCH_FB0  macro  include/linux/pci_ids.h  2734  #define PCI_DEVICE_ID_INTEL_I7300_MCH_FB0 0x360f
PCI_DEVICE_ID_INTEL_I7300_MCH_FB1  macro  include/linux/pci_ids.h  2735  #define PCI_DEVICE_ID_INTEL_I7300_MCH_FB1 0x3610
PCI_DEVICE_ID_INTEL_IOAT_CNB  macro  include/linux/pci_ids.h  2736  #define PCI_DEVICE_ID_INTEL_IOAT_CNB 0x360b
PCI_DEVICE_ID_INTEL_FBD_CNB  macro  include/linux/pci_ids.h  2737  #define PCI_DEVICE_ID_INTEL_FBD_CNB 0x360c
PCI_DEVICE_ID_INTEL_IOAT_JSF0  macro  include/linux/pci_ids.h  2738  #define PCI_DEVICE_ID_INTEL_IOAT_JSF0 0x3710
PCI_DEVICE_ID_INTEL_IOAT_JSF1  macro  include/linux/pci_ids.h  2739  #define PCI_DEVICE_ID_INTEL_IOAT_JSF1 0x3711
PCI_DEVICE_ID_INTEL_IOAT_JSF2  macro  include/linux/pci_ids.h  2740  #define PCI_DEVICE_ID_INTEL_IOAT_JSF2 0x3712
PCI_DEVICE_ID_INTEL_IOAT_JSF3  macro  include/linux/pci_ids.h  2741  #define PCI_DEVICE_ID_INTEL_IOAT_JSF3 0x3713
PCI_DEVICE_ID_INTEL_IOAT_JSF4  macro  include/linux/pci_ids.h  2742  #define PCI_DEVICE_ID_INTEL_IOAT_JSF4 0x3714
PCI_DEVICE_ID_INTEL_IOAT_JSF5  macro  include/linux/pci_ids.h  2743  #define PCI_DEVICE_ID_INTEL_IOAT_JSF5 0x3715
PCI_DEVICE_ID_INTEL_IOAT_JSF6  macro  include/linux/pci_ids.h  2744  #define PCI_DEVICE_ID_INTEL_IOAT_JSF6 0x3716
PCI_DEVICE_ID_INTEL_IOAT_JSF7  macro  include/linux/pci_ids.h  2745  #define PCI_DEVICE_ID_INTEL_IOAT_JSF7 0x3717
PCI_DEVICE_ID_INTEL_IOAT_JSF8  macro  include/linux/pci_ids.h  2746  #define PCI_DEVICE_ID_INTEL_IOAT_JSF8 0x3718
PCI_DEVICE_ID_INTEL_IOAT_JSF9  macro  include/linux/pci_ids.h  2747  #define PCI_DEVICE_ID_INTEL_IOAT_JSF9 0x3719
PCI_DEVICE_ID_INTEL_ICH10_0  macro  include/linux/pci_ids.h  2748  #define PCI_DEVICE_ID_INTEL_ICH10_0 0x3a14
PCI_DEVICE_ID_INTEL_ICH10_1  macro  include/linux/pci_ids.h  2749  #define PCI_DEVICE_ID_INTEL_ICH10_1 0x3a16
PCI_DEVICE_ID_INTEL_ICH10_2  macro  include/linux/pci_ids.h  2750  #define PCI_DEVICE_ID_INTEL_ICH10_2 0x3a18
PCI_DEVICE_ID_INTEL_ICH10_3  macro  include/linux/pci_ids.h  2751  #define PCI_DEVICE_ID_INTEL_ICH10_3 0x3a1a
PCI_DEVICE_ID_INTEL_ICH10_4  macro  include/linux/pci_ids.h  2752  #define PCI_DEVICE_ID_INTEL_ICH10_4 0x3a30
PCI_DEVICE_ID_INTEL_ICH10_5  macro  include/linux/pci_ids.h  2753  #define PCI_DEVICE_ID_INTEL_ICH10_5 0x3a60
PCI_DEVICE_ID_INTEL_5_3400_SERIES_LPC_MIN  macro  include/linux/pci_ids.h  2754  #define PCI_DEVICE_ID_INTEL_5_3400_SERIES_LPC_MIN 0x3b00
PCI_DEVICE_ID_INTEL_5_3400_SERIES_LPC_MAX  macro  include/linux/pci_ids.h  2755  #define PCI_DEVICE_ID_INTEL_5_3400_SERIES_LPC_MAX 0x3b1f
PCI_DEVICE_ID_INTEL_IOAT_SNB0  macro  include/linux/pci_ids.h  2756  #define PCI_DEVICE_ID_INTEL_IOAT_SNB0 0x3c20
PCI_DEVICE_ID_INTEL_IOAT_SNB1  macro  include/linux/pci_ids.h  2757  #define PCI_DEVICE_ID_INTEL_IOAT_SNB1 0x3c21
PCI_DEVICE_ID_INTEL_IOAT_SNB2  macro  include/linux/pci_ids.h  2758  #define PCI_DEVICE_ID_INTEL_IOAT_SNB2 0x3c22
PCI_DEVICE_ID_INTEL_IOAT_SNB3  macro  include/linux/pci_ids.h  2759  #define PCI_DEVICE_ID_INTEL_IOAT_SNB3 0x3c23
PCI_DEVICE_ID_INTEL_IOAT_SNB4  macro  include/linux/pci_ids.h  2760  #define PCI_DEVICE_ID_INTEL_IOAT_SNB4 0x3c24
PCI_DEVICE_ID_INTEL_IOAT_SNB5  macro  include/linux/pci_ids.h  2761  #define PCI_DEVICE_ID_INTEL_IOAT_SNB5 0x3c25
PCI_DEVICE_ID_INTEL_IOAT_SNB6  macro  include/linux/pci_ids.h  2762  #define PCI_DEVICE_ID_INTEL_IOAT_SNB6 0x3c26
PCI_DEVICE_ID_INTEL_IOAT_SNB7  macro  include/linux/pci_ids.h  2763  #define PCI_DEVICE_ID_INTEL_IOAT_SNB7 0x3c27
PCI_DEVICE_ID_INTEL_IOAT_SNB8  macro  include/linux/pci_ids.h  2764  #define PCI_DEVICE_ID_INTEL_IOAT_SNB8 0x3c2e
PCI_DEVICE_ID_INTEL_IOAT_SNB9  macro  include/linux/pci_ids.h  2765  #define PCI_DEVICE_ID_INTEL_IOAT_SNB9 0x3c2f
PCI_DEVICE_ID_INTEL_UNC_HA  macro  include/linux/pci_ids.h  2766  #define PCI_DEVICE_ID_INTEL_UNC_HA 0x3c46
PCI_DEVICE_ID_INTEL_UNC_IMC0  macro  include/linux/pci_ids.h  2767  #define PCI_DEVICE_ID_INTEL_UNC_IMC0 0x3cb0
PCI_DEVICE_ID_INTEL_UNC_IMC1  macro  include/linux/pci_ids.h  2768  #define PCI_DEVICE_ID_INTEL_UNC_IMC1 0x3cb1
PCI_DEVICE_ID_INTEL_UNC_IMC2  macro  include/linux/pci_ids.h  2769  #define PCI_DEVICE_ID_INTEL_UNC_IMC2 0x3cb4
PCI_DEVICE_ID_INTEL_UNC_IMC3  macro  include/linux/pci_ids.h  2770  #define PCI_DEVICE_ID_INTEL_UNC_IMC3 0x3cb5
PCI_DEVICE_ID_INTEL_UNC_QPI0  macro  include/linux/pci_ids.h  2771  #define PCI_DEVICE_ID_INTEL_UNC_QPI0 0x3c41
PCI_DEVICE_ID_INTEL_UNC_QPI1  macro  include/linux/pci_ids.h  2772  #define PCI_DEVICE_ID_INTEL_UNC_QPI1 0x3c42
PCI_DEVICE_ID_INTEL_UNC_R2PCIE  macro  include/linux/pci_ids.h  2773  #define PCI_DEVICE_ID_INTEL_UNC_R2PCIE 0x3c43
PCI_DEVICE_ID_INTEL_UNC_R3QPI0  macro  include/linux/pci_ids.h  2774  #define PCI_DEVICE_ID_INTEL_UNC_R3QPI0 0x3c44
PCI_DEVICE_ID_INTEL_UNC_R3QPI1  macro  include/linux/pci_ids.h  2775  #define PCI_DEVICE_ID_INTEL_UNC_R3QPI1 0x3c45
PCI_DEVICE_ID_INTEL_JAKETOWN_UBOX  macro  include/linux/pci_ids.h  2776  #define PCI_DEVICE_ID_INTEL_JAKETOWN_UBOX 0x3ce0
PCI_DEVICE_ID_INTEL_IOAT_SNB  macro  include/linux/pci_ids.h  2777  #define PCI_DEVICE_ID_INTEL_IOAT_SNB 0x402f
PCI_DEVICE_ID_INTEL_5100_16  macro  include/linux/pci_ids.h  2778  #define PCI_DEVICE_ID_INTEL_5100_16 0x65f0
PCI_DEVICE_ID_INTEL_5100_21  macro  include/linux/pci_ids.h  2779  #define PCI_DEVICE_ID_INTEL_5100_21 0x65f5
PCI_DEVICE_ID_INTEL_5100_22  macro  include/linux/pci_ids.h  2780  #define PCI_DEVICE_ID_INTEL_5100_22 0x65f6
PCI_DEVICE_ID_INTEL_5400_ERR  macro  include/linux/pci_ids.h  2781  #define PCI_DEVICE_ID_INTEL_5400_ERR 0x4030
PCI_DEVICE_ID_INTEL_5400_FBD0  macro  include/linux/pci_ids.h  2782  #define PCI_DEVICE_ID_INTEL_5400_FBD0 0x4035
PCI_DEVICE_ID_INTEL_5400_FBD1  macro  include/linux/pci_ids.h  2783  #define PCI_DEVICE_ID_INTEL_5400_FBD1 0x4036
PCI_DEVICE_ID_INTEL_IOAT_SCNB  macro  include/linux/pci_ids.h  2784  #define PCI_DEVICE_ID_INTEL_IOAT_SCNB 0x65ff
PCI_DEVICE_ID_INTEL_EP80579_0  macro  include/linux/pci_ids.h  2785  #define PCI_DEVICE_ID_INTEL_EP80579_0 0x5031
PCI_DEVICE_ID_INTEL_EP80579_1  macro  include/linux/pci_ids.h  2786  #define PCI_DEVICE_ID_INTEL_EP80579_1 0x5032
PCI_DEVICE_ID_INTEL_82371SB_0  macro  include/linux/pci_ids.h  2787  #define PCI_DEVICE_ID_INTEL_82371SB_0 0x7000
PCI_DEVICE_ID_INTEL_82371SB_1  macro  include/linux/pci_ids.h  2788  #define PCI_DEVICE_ID_INTEL_82371SB_1 0x7010
PCI_DEVICE_ID_INTEL_82371SB_2  macro  include/linux/pci_ids.h  2789  #define PCI_DEVICE_ID_INTEL_82371SB_2 0x7020
PCI_DEVICE_ID_INTEL_82437VX  macro  include/linux/pci_ids.h  2790  #define PCI_DEVICE_ID_INTEL_82437VX 0x7030
PCI_DEVICE_ID_INTEL_82439TX  macro  include/linux/pci_ids.h  2791  #define PCI_DEVICE_ID_INTEL_82439TX 0x7100
PCI_DEVICE_ID_INTEL_82371AB_0  macro  include/linux/pci_ids.h  2792  #define PCI_DEVICE_ID_INTEL_82371AB_0 0x7110
PCI_DEVICE_ID_INTEL_82371AB  macro  include/linux/pci_ids.h  2793  #define PCI_DEVICE_ID_INTEL_82371AB 0x7111
PCI_DEVICE_ID_INTEL_82371AB_2  macro  include/linux/pci_ids.h  2794  #define PCI_DEVICE_ID_INTEL_82371AB_2 0x7112
PCI_DEVICE_ID_INTEL_82371AB_3  macro  include/linux/pci_ids.h  2795  #define PCI_DEVICE_ID_INTEL_82371AB_3 0x7113
PCI_DEVICE_ID_INTEL_82810_MC1  macro  include/linux/pci_ids.h  2796  #define PCI_DEVICE_ID_INTEL_82810_MC1 0x7120
PCI_DEVICE_ID_INTEL_82810_IG1  macro  include/linux/pci_ids.h  2797  #define PCI_DEVICE_ID_INTEL_82810_IG1 0x7121
PCI_DEVICE_ID_INTEL_82810_MC3  macro  include/linux/pci_ids.h  2798  #define PCI_DEVICE_ID_INTEL_82810_MC3 0x7122
PCI_DEVICE_ID_INTEL_82810_IG3  macro  include/linux/pci_ids.h  2799  #define PCI_DEVICE_ID_INTEL_82810_IG3 0x7123
PCI_DEVICE_ID_INTEL_82810E_MC  macro  include/linux/pci_ids.h  2800  #define PCI_DEVICE_ID_INTEL_82810E_MC 0x7124
PCI_DEVICE_ID_INTEL_82810E_IG  macro  include/linux/pci_ids.h  2801  #define PCI_DEVICE_ID_INTEL_82810E_IG 0x7125
PCI_DEVICE_ID_INTEL_82443LX_0  macro  include/linux/pci_ids.h  2802  #define PCI_DEVICE_ID_INTEL_82443LX_0 0x7180
PCI_DEVICE_ID_INTEL_82443LX_1  macro  include/linux/pci_ids.h  2803  #define PCI_DEVICE_ID_INTEL_82443LX_1 0x7181
PCI_DEVICE_ID_INTEL_82443BX_0  macro  include/linux/pci_ids.h  2804  #define PCI_DEVICE_ID_INTEL_82443BX_0 0x7190
PCI_DEVICE_ID_INTEL_82443BX_1  macro  include/linux/pci_ids.h  2805  #define PCI_DEVICE_ID_INTEL_82443BX_1 0x7191
PCI_DEVICE_ID_INTEL_82443BX_2  macro  include/linux/pci_ids.h  2806  #define PCI_DEVICE_ID_INTEL_82443BX_2 0x7192
PCI_DEVICE_ID_INTEL_440MX  macro  include/linux/pci_ids.h  2807  #define PCI_DEVICE_ID_INTEL_440MX 0x7195
PCI_DEVICE_ID_INTEL_440MX_6  macro  include/linux/pci_ids.h  2808  #define PCI_DEVICE_ID_INTEL_440MX_6 0x7196
PCI_DEVICE_ID_INTEL_82443MX_0  macro  include/linux/pci_ids.h  2809  #define PCI_DEVICE_ID_INTEL_82443MX_0 0x7198
PCI_DEVICE_ID_INTEL_82443MX_1  macro  include/linux/pci_ids.h  2810  #define PCI_DEVICE_ID_INTEL_82443MX_1 0x7199
PCI_DEVICE_ID_INTEL_82443MX_3  macro  include/linux/pci_ids.h  2811  #define PCI_DEVICE_ID_INTEL_82443MX_3 0x719b
PCI_DEVICE_ID_INTEL_82443GX_0  macro  include/linux/pci_ids.h  2812  #define PCI_DEVICE_ID_INTEL_82443GX_0 0x71a0
PCI_DEVICE_ID_INTEL_82443GX_2  macro  include/linux/pci_ids.h  2813  #define PCI_DEVICE_ID_INTEL_82443GX_2 0x71a2
PCI_DEVICE_ID_INTEL_82372FB_1  macro  include/linux/pci_ids.h  2814  #define PCI_DEVICE_ID_INTEL_82372FB_1 0x7601
PCI_DEVICE_ID_INTEL_SCH_LPC  macro  include/linux/pci_ids.h  2815  #define PCI_DEVICE_ID_INTEL_SCH_LPC 0x8119
PCI_DEVICE_ID_INTEL_SCH_IDE  macro  include/linux/pci_ids.h  2816  #define PCI_DEVICE_ID_INTEL_SCH_IDE 0x811a
PCI_DEVICE_ID_INTEL_ITC_LPC  macro  include/linux/pci_ids.h  2817  #define PCI_DEVICE_ID_INTEL_ITC_LPC 0x8186
PCI_DEVICE_ID_INTEL_82454GX  macro  include/linux/pci_ids.h  2818  #define PCI_DEVICE_ID_INTEL_82454GX 0x84c4
PCI_DEVICE_ID_INTEL_82450GX  macro  include/linux/pci_ids.h  2819  #define PCI_DEVICE_ID_INTEL_82450GX 0x84c5
PCI_DEVICE_ID_INTEL_82451NX  macro  include/linux/pci_ids.h  2820  #define PCI_DEVICE_ID_INTEL_82451NX 0x84ca
PCI_DEVICE_ID_INTEL_82454NX  macro  include/linux/pci_ids.h  2821  #define PCI_DEVICE_ID_INTEL_82454NX 0x84cb
PCI_DEVICE_ID_INTEL_84460GX  macro  include/linux/pci_ids.h  2822  #define PCI_DEVICE_ID_INTEL_84460GX 0x84ea
PCI_DEVICE_ID_INTEL_IXP4XX  macro  include/linux/pci_ids.h  2823  #define PCI_DEVICE_ID_INTEL_IXP4XX 0x8500
PCI_DEVICE_ID_INTEL_IXP2800  macro  include/linux/pci_ids.h  2824  #define PCI_DEVICE_ID_INTEL_IXP2800 0x9004
PCI_DEVICE_ID_INTEL_S21152BB  macro  include/linux/pci_ids.h  2825  #define PCI_DEVICE_ID_INTEL_S21152BB 0xb152
PCI_VENDOR_ID_SCALEMP  macro  include/linux/pci_ids.h  2827  #define PCI_VENDOR_ID_SCALEMP 0x8686
PCI_DEVICE_ID_SCALEMP_VSMP_CTL  macro  include/linux/pci_ids.h  2828  #define PCI_DEVICE_ID_SCALEMP_VSMP_CTL 0x1010
PCI_VENDOR_ID_COMPUTONE  macro  include/linux/pci_ids.h  2830  #define PCI_VENDOR_ID_COMPUTONE 0x8e0e
PCI_DEVICE_ID_COMPUTONE_IP2EX  macro  include/linux/pci_ids.h  2831  #define PCI_DEVICE_ID_COMPUTONE_IP2EX 0x0291
PCI_DEVICE_ID_COMPUTONE_PG  macro  include/linux/pci_ids.h  2832  #define PCI_DEVICE_ID_COMPUTONE_PG 0x0302
PCI_SUBVENDOR_ID_COMPUTONE  macro  include/linux/pci_ids.h  2833  #define PCI_SUBVENDOR_ID_COMPUTONE 0x8e0e
PCI_SUBDEVICE_ID_COMPUTONE_PG4  macro  include/linux/pci_ids.h  2834  #define PCI_SUBDEVICE_ID_COMPUTONE_PG4 0x0001
PCI_SUBDEVICE_ID_COMPUTONE_PG8  macro  include/linux/pci_ids.h  2835  #define PCI_SUBDEVICE_ID_COMPUTONE_PG8 0x0002
PCI_SUBDEVICE_ID_COMPUTONE_PG6  macro  include/linux/pci_ids.h  2836  #define PCI_SUBDEVICE_ID_COMPUTONE_PG6 0x0003
PCI_VENDOR_ID_KTI  macro  include/linux/pci_ids.h  2838  #define PCI_VENDOR_ID_KTI 0x8e2e
PCI_VENDOR_ID_ADAPTEC  macro  include/linux/pci_ids.h  2840  #define PCI_VENDOR_ID_ADAPTEC 0x9004
PCI_DEVICE_ID_ADAPTEC_7810  macro  include/linux/pci_ids.h  2841  #define PCI_DEVICE_ID_ADAPTEC_7810 0x1078
PCI_DEVICE_ID_ADAPTEC_7821  macro  include/linux/pci_ids.h  2842  #define PCI_DEVICE_ID_ADAPTEC_7821 0x2178
PCI_DEVICE_ID_ADAPTEC_38602  macro  include/linux/pci_ids.h  2843  #define PCI_DEVICE_ID_ADAPTEC_38602 0x3860
PCI_DEVICE_ID_ADAPTEC_7850  macro  include/linux/pci_ids.h  2844  #define PCI_DEVICE_ID_ADAPTEC_7850 0x5078
PCI_DEVICE_ID_ADAPTEC_7855  macro  include/linux/pci_ids.h  2845  #define PCI_DEVICE_ID_ADAPTEC_7855 0x5578
PCI_DEVICE_ID_ADAPTEC_3860  macro  include/linux/pci_ids.h  2846  #define PCI_DEVICE_ID_ADAPTEC_3860 0x6038
PCI_DEVICE_ID_ADAPTEC_1480A  macro  include/linux/pci_ids.h  2847  #define PCI_DEVICE_ID_ADAPTEC_1480A 0x6075
PCI_DEVICE_ID_ADAPTEC_7860  macro  include/linux/pci_ids.h  2848  #define PCI_DEVICE_ID_ADAPTEC_7860 0x6078
PCI_DEVICE_ID_ADAPTEC_7861  macro  include/linux/pci_ids.h  2849  #define PCI_DEVICE_ID_ADAPTEC_7861 0x6178
PCI_DEVICE_ID_ADAPTEC_7870  macro  include/linux/pci_ids.h  2850  #define PCI_DEVICE_ID_ADAPTEC_7870 0x7078
PCI_DEVICE_ID_ADAPTEC_7871  macro  include/linux/pci_ids.h  2851  #define PCI_DEVICE_ID_ADAPTEC_7871 0x7178
PCI_DEVICE_ID_ADAPTEC_7872  macro  include/linux/pci_ids.h  2852  #define PCI_DEVICE_ID_ADAPTEC_7872 0x7278
PCI_DEVICE_ID_ADAPTEC_7873  macro  include/linux/pci_ids.h  2853  #define PCI_DEVICE_ID_ADAPTEC_7873 0x7378
PCI_DEVICE_ID_ADAPTEC_7874  macro  include/linux/pci_ids.h  2854  #define PCI_DEVICE_ID_ADAPTEC_7874 0x7478
PCI_DEVICE_ID_ADAPTEC_7895  macro  include/linux/pci_ids.h  2855  #define PCI_DEVICE_ID_ADAPTEC_7895 0x7895
PCI_DEVICE_ID_ADAPTEC_7880  macro  include/linux/pci_ids.h  2856  #define PCI_DEVICE_ID_ADAPTEC_7880 0x8078
PCI_DEVICE_ID_ADAPTEC_7881  macro  include/linux/pci_ids.h  2857  #define PCI_DEVICE_ID_ADAPTEC_7881 0x8178
PCI_DEVICE_ID_ADAPTEC_7882  macro  include/linux/pci_ids.h  2858  #define PCI_DEVICE_ID_ADAPTEC_7882 0x8278
PCI_DEVICE_ID_ADAPTEC_7883  macro  include/linux/pci_ids.h  2859  #define PCI_DEVICE_ID_ADAPTEC_7883 0x8378
PCI_DEVICE_ID_ADAPTEC_7884  macro  include/linux/pci_ids.h  2860  #define PCI_DEVICE_ID_ADAPTEC_7884 0x8478
PCI_DEVICE_ID_ADAPTEC_7885  macro  include/linux/pci_ids.h  2861  #define PCI_DEVICE_ID_ADAPTEC_7885 0x8578
PCI_DEVICE_ID_ADAPTEC_7886  macro  include/linux/pci_ids.h  2862  #define PCI_DEVICE_ID_ADAPTEC_7886 0x8678
PCI_DEVICE_ID_ADAPTEC_7887  macro  include/linux/pci_ids.h  2863  #define PCI_DEVICE_ID_ADAPTEC_7887 0x8778
PCI_DEVICE_ID_ADAPTEC_7888  macro  include/linux/pci_ids.h  2864  #define PCI_DEVICE_ID_ADAPTEC_7888 0x8878
PCI_VENDOR_ID_ADAPTEC2  macro  include/linux/pci_ids.h  2866  #define PCI_VENDOR_ID_ADAPTEC2 0x9005
PCI_DEVICE_ID_ADAPTEC2_2940U2  macro  include/linux/pci_ids.h  2867  #define PCI_DEVICE_ID_ADAPTEC2_2940U2 0x0010
PCI_DEVICE_ID_ADAPTEC2_2930U2  macro  include/linux/pci_ids.h  2868  #define PCI_DEVICE_ID_ADAPTEC2_2930U2 0x0011
PCI_DEVICE_ID_ADAPTEC2_7890B  macro  include/linux/pci_ids.h  2869  #define PCI_DEVICE_ID_ADAPTEC2_7890B 0x0013
PCI_DEVICE_ID_ADAPTEC2_7890  macro  include/linux/pci_ids.h  2870  #define PCI_DEVICE_ID_ADAPTEC2_7890 0x001f
PCI_DEVICE_ID_ADAPTEC2_3940U2  macro  include/linux/pci_ids.h  2871  #define PCI_DEVICE_ID_ADAPTEC2_3940U2 0x0050
PCI_DEVICE_ID_ADAPTEC2_3950U2D  macro  include/linux/pci_ids.h  2872  #define PCI_DEVICE_ID_ADAPTEC2_3950U2D 0x0051
PCI_DEVICE_ID_ADAPTEC2_7896  macro  include/linux/pci_ids.h  2873  #define PCI_DEVICE_ID_ADAPTEC2_7896 0x005f
PCI_DEVICE_ID_ADAPTEC2_7892A  macro  include/linux/pci_ids.h  2874  #define PCI_DEVICE_ID_ADAPTEC2_7892A 0x0080
PCI_DEVICE_ID_ADAPTEC2_7892B  macro  include/linux/pci_ids.h  2875  #define PCI_DEVICE_ID_ADAPTEC2_7892B 0x0081
PCI_DEVICE_ID_ADAPTEC2_7892D  macro  include/linux/pci_ids.h  2876  #define PCI_DEVICE_ID_ADAPTEC2_7892D 0x0083
PCI_DEVICE_ID_ADAPTEC2_7892P  macro  include/linux/pci_ids.h  2877  #define PCI_DEVICE_ID_ADAPTEC2_7892P 0x008f
PCI_DEVICE_ID_ADAPTEC2_7899A  macro  include/linux/pci_ids.h  2878  #define PCI_DEVICE_ID_ADAPTEC2_7899A 0x00c0
PCI_DEVICE_ID_ADAPTEC2_7899B  macro  include/linux/pci_ids.h  2879  #define PCI_DEVICE_ID_ADAPTEC2_7899B 0x00c1
PCI_DEVICE_ID_ADAPTEC2_7899D  macro  include/linux/pci_ids.h  2880  #define PCI_DEVICE_ID_ADAPTEC2_7899D 0x00c3
PCI_DEVICE_ID_ADAPTEC2_7899P  macro  include/linux/pci_ids.h  2881  #define PCI_DEVICE_ID_ADAPTEC2_7899P 0x00cf
PCI_DEVICE_ID_ADAPTEC2_OBSIDIAN  macro  include/linux/pci_ids.h  2882  #define PCI_DEVICE_ID_ADAPTEC2_OBSIDIAN 0x0500
PCI_DEVICE_ID_ADAPTEC2_SCAMP  macro  include/linux/pci_ids.h  2883  #define PCI_DEVICE_ID_ADAPTEC2_SCAMP 0x0503
PCI_VENDOR_ID_HOLTEK  macro  include/linux/pci_ids.h  2885  #define PCI_VENDOR_ID_HOLTEK 0x9412
PCI_DEVICE_ID_HOLTEK_6565  macro  include/linux/pci_ids.h  2886  #define PCI_DEVICE_ID_HOLTEK_6565 0x6565
PCI_VENDOR_ID_NETMOS  macro  include/linux/pci_ids.h  2888  #define PCI_VENDOR_ID_NETMOS 0x9710
PCI_DEVICE_ID_NETMOS_9705  macro  include/linux/pci_ids.h  2889  #define PCI_DEVICE_ID_NETMOS_9705 0x9705
PCI_DEVICE_ID_NETMOS_9715  macro  include/linux/pci_ids.h  2890  #define PCI_DEVICE_ID_NETMOS_9715 0x9715
PCI_DEVICE_ID_NETMOS_9735  macro  include/linux/pci_ids.h  2891  #define PCI_DEVICE_ID_NETMOS_9735 0x9735
PCI_DEVICE_ID_NETMOS_9745  macro  include/linux/pci_ids.h  2892  #define PCI_DEVICE_ID_NETMOS_9745 0x9745
PCI_DEVICE_ID_NETMOS_9755  macro  include/linux/pci_ids.h  2893  #define PCI_DEVICE_ID_NETMOS_9755 0x9755
PCI_DEVICE_ID_NETMOS_9805  macro  include/linux/pci_ids.h  2894  #define PCI_DEVICE_ID_NETMOS_9805 0x9805
PCI_DEVICE_ID_NETMOS_9815  macro  include/linux/pci_ids.h  2895  #define PCI_DEVICE_ID_NETMOS_9815 0x9815
PCI_DEVICE_ID_NETMOS_9835  macro  include/linux/pci_ids.h  2896  #define PCI_DEVICE_ID_NETMOS_9835 0x9835
PCI_DEVICE_ID_NETMOS_9845  macro  include/linux/pci_ids.h  2897  #define PCI_DEVICE_ID_NETMOS_9845 0x9845
PCI_DEVICE_ID_NETMOS_9855  macro  include/linux/pci_ids.h  2898  #define PCI_DEVICE_ID_NETMOS_9855 0x9855
PCI_DEVICE_ID_NETMOS_9865  macro  include/linux/pci_ids.h  2899  #define PCI_DEVICE_ID_NETMOS_9865 0x9865
PCI_DEVICE_ID_NETMOS_9900  macro  include/linux/pci_ids.h  2900  #define PCI_DEVICE_ID_NETMOS_9900 0x9900
PCI_DEVICE_ID_NETMOS_9901  macro  include/linux/pci_ids.h  2901  #define PCI_DEVICE_ID_NETMOS_9901 0x9901
PCI_DEVICE_ID_NETMOS_9904  macro  include/linux/pci_ids.h  2902  #define PCI_DEVICE_ID_NETMOS_9904 0x9904
PCI_DEVICE_ID_NETMOS_9912  macro  include/linux/pci_ids.h  2903  #define PCI_DEVICE_ID_NETMOS_9912 0x9912
PCI_DEVICE_ID_NETMOS_9922  macro  include/linux/pci_ids.h  2904  #define PCI_DEVICE_ID_NETMOS_9922 0x9922
PCI_VENDOR_ID_3COM_2  macro  include/linux/pci_ids.h  2906  #define PCI_VENDOR_ID_3COM_2 0xa727
PCI_VENDOR_ID_DIGIUM  macro  include/linux/pci_ids.h  2908  #define PCI_VENDOR_ID_DIGIUM 0xd161
PCI_DEVICE_ID_DIGIUM_HFC4S  macro  include/linux/pci_ids.h  2909  #define PCI_DEVICE_ID_DIGIUM_HFC4S 0xb410
PCI_SUBVENDOR_ID_EXSYS  macro  include/linux/pci_ids.h  2911  #define PCI_SUBVENDOR_ID_EXSYS 0xd84d
PCI_SUBDEVICE_ID_EXSYS_4014  macro  include/linux/pci_ids.h  2912  #define PCI_SUBDEVICE_ID_EXSYS_4014 0x4014
PCI_SUBDEVICE_ID_EXSYS_4055  macro  include/linux/pci_ids.h  2913  #define PCI_SUBDEVICE_ID_EXSYS_4055 0x4055
PCI_VENDOR_ID_TIGERJET  macro  include/linux/pci_ids.h  2915  #define PCI_VENDOR_ID_TIGERJET 0xe159
PCI_DEVICE_ID_TIGERJET_300  macro  include/linux/pci_ids.h  2916  #define PCI_DEVICE_ID_TIGERJET_300 0x0001
PCI_DEVICE_ID_TIGERJET_100  macro  include/linux/pci_ids.h  2917  #define PCI_DEVICE_ID_TIGERJET_100 0x0002
PCI_VENDOR_ID_XILINX_RME  macro  include/linux/pci_ids.h  2919  #define PCI_VENDOR_ID_XILINX_RME 0xea60
PCI_DEVICE_ID_RME_DIGI32  macro  include/linux/pci_ids.h  2920  #define PCI_DEVICE_ID_RME_DIGI32 0x9896
PCI_DEVICE_ID_RME_DIGI32_PRO  macro  include/linux/pci_ids.h  2921  #define PCI_DEVICE_ID_RME_DIGI32_PRO 0x9897
PCI_DEVICE_ID_RME_DIGI32_8  macro  include/linux/pci_ids.h  2922  #define PCI_DEVICE_ID_RME_DIGI32_8 0x9898
PCI_VENDOR_ID_XEN  macro  include/linux/pci_ids.h  2924  #define PCI_VENDOR_ID_XEN 0x5853
PCI_DEVICE_ID_XEN_PLATFORM  macro  include/linux/pci_ids.h  2925  #define PCI_DEVICE_ID_XEN_PLATFORM 0x0001
PCI_VENDOR_ID_OCZ  macro  include/linux/pci_ids.h  2927  #define PCI_VENDOR_ID_OCZ 0x1b85
_LINUX_PCI_DMA_H  macro  include/linux/pci-dma.h  2  #define _LINUX_PCI_DMA_H
DECLARE_PCI_UNMAP_ADDR  macro  include/linux/pci-dma.h  4  #define DECLARE_PCI_UNMAP_ADDR(ADDR_NAME) DEFINE_DMA_UNMAP_ADDR(ADDR_NAME);
DECLARE_PCI_UNMAP_LEN  macro  include/linux/pci-dma.h  5  #define DECLARE_PCI_UNMAP_LEN(LEN_NAME) DEFINE_DMA_UNMAP_LEN(LEN_NAME);
pci_unmap_addr  macro  include/linux/pci-dma.h  6  #define pci_unmap_addr dma_unmap_addr
pci_unmap_addr_set  macro  include/linux/pci-dma.h  7  #define pci_unmap_addr_set dma_unmap_addr_set
pci_unmap_len  macro  include/linux/pci-dma.h  8  #define pci_unmap_len dma_unmap_len
pci_unmap_len_set  macro  include/linux/pci-dma.h  9  #define pci_unmap_len_set dma_unmap_len_set
LINUX_DMAPOOL_H  macro  include/linux/dmapool.h  12  #define LINUX_DMAPOOL_H
dma_pool_create  prototype  include/linux/dmapool.h  18  struct dma_pool *dma_pool_create(const char *name,struct device *dev,size_t size, size_t align, size_t allocation);
dma_pool_destroy  prototype  include/linux/dmapool.h  20  void dma_pool_destroy(struct dma_pool *pool);
dma_pool_alloc  prototype  include/linux/dmapool.h  23  void *dma_pool_alloc(struct dma_pool *pool,gfp_t mem_flags,dma_addr_t *handle);
dma_pool_free  prototype  include/linux/dmapool.h  25  void dma_pool_free(struct dma_pool *pool,void *vaddr,dma_addr_t addr);
dmam_pool_create  prototype  include/linux/dmapool.h  31  struct dma_pool *dmam_pool_create(const char *name,struct device *dev,size_t size, size_t align, size_t allocation);
dmam_pool_destroy  prototype  include/linux/dmapool.h  32  void dmam_pool_destroy(struct dma_pool *pool);
_ASM_X86_PCI_H  macro  arch/x86/include/asm/pci.h  2  #define _ASM_X86_PCI_H
pci_sysdata  struct  arch/x86/include/asm/pci.h  14  struct pci_sysdata {
pci_scan_bus_on_node  prototype  arch/x86/include/asm/pci.h  28  extern struct pci_bus *pci_scan_bus_on_node(int busno,struct pci_ops *ops,int node);
pci_scan_bus_with_sysdata  prototype  arch/x86/include/asm/pci.h  29  extern struct pci_bus *pci_scan_bus_with_sysdata(int busno);
pcibios_assign_all_busses  macro  arch/x86/include/asm/pci.h  58  # define pcibios_assign_all_busses() 0
pci_legacy_init  prototype  arch/x86/include/asm/pci.h  51  extern int pci_legacy_init(void);
x86_default_pci_init  macro  arch/x86/include/asm/pci.h  59  # define x86_default_pci_init NULL
PCIBIOS_MIN_IO  macro  arch/x86/include/asm/pci.h  63  #define PCIBIOS_MIN_IO 0x1000
PCIBIOS_MIN_MEM  macro  arch/x86/include/asm/pci.h  64  #define PCIBIOS_MIN_MEM (pci_mem_start)
PCIBIOS_MIN_CARDBUS_IO  macro  arch/x86/include/asm/pci.h  66  #define PCIBIOS_MIN_CARDBUS_IO 0x4000
pcibios_config_init  prototype  arch/x86/include/asm/pci.h  69  void pcibios_config_init(void);
pcibios_scan_root  prototype  arch/x86/include/asm/pci.h  70  struct pci_bus *pcibios_scan_root(int bus);
pcibios_penalize_isa_irq  prototype  arch/x86/include/asm/pci.h  73  void pcibios_penalize_isa_irq(int irq,int active);
pcibios_get_irq_routing_table  prototype  arch/x86/include/asm/pci.h  74  struct irq_routing_table *pcibios_get_irq_routing_table(void);
pcibios_set_irq_routing  prototype  arch/x86/include/asm/pci.h  75  int pcibios_set_irq_routing(struct pci_dev *dev,int pin,int irq);
HAVE_PCI_MMAP  macro  arch/x86/include/asm/pci.h  78  #define HAVE_PCI_MMAP
pci_mmap_page_range  prototype  arch/x86/include/asm/pci.h  81  extern int pci_mmap_page_range(struct pci_dev *dev,struct vm_area_struct *vma,enum pci_mmap_state mmap_state,int write_combine);
early_quirks  function  arch/x86/include/asm/pci.h  94  static inline void early_quirks(void) { }
pci_iommu_alloc  prototype  arch/x86/include/asm/pci.h  97  extern void pci_iommu_alloc(void);
x86_setup_msi_irqs  function  arch/x86/include/asm/pci.h  101  static inline int x86_setup_msi_irqs(struct pci_dev *dev,int nvec,int type)
x86_teardown_msi_irqs  function  arch/x86/include/asm/pci.h  106  static inline void x86_teardown_msi_irqs(struct pci_dev *dev)
x86_teardown_msi_irq  function  arch/x86/include/asm/pci.h  111  static inline void x86_teardown_msi_irq(unsigned int irq)
x86_restore_msi_irqs  function  arch/x86/include/asm/pci.h  115  static inline void x86_restore_msi_irqs(struct pci_dev *dev,int irq)
arch_setup_msi_irqs  macro  arch/x86/include/asm/pci.h  119  #define arch_setup_msi_irqs x86_setup_msi_irqs
arch_teardown_msi_irqs  macro  arch/x86/include/asm/pci.h  120  #define arch_teardown_msi_irqs x86_teardown_msi_irqs
arch_teardown_msi_irq  macro  arch/x86/include/asm/pci.h  121  #define arch_teardown_msi_irq x86_teardown_msi_irq
arch_restore_msi_irqs  macro  arch/x86/include/asm/pci.h  122  #define arch_restore_msi_irqs x86_restore_msi_irqs
native_setup_msi_irqs  macro  arch/x86/include/asm/pci.h  133  #define native_setup_msi_irqs NULL
native_teardown_msi_irq  macro  arch/x86/include/asm/pci.h  134  #define native_teardown_msi_irq NULL
native_restore_msi_irqs  prototype  arch/x86/include/asm/pci.h  126  void native_restore_msi_irqs(struct pci_dev *dev,int irq);
HAVE_DEFAULT_MSI_TEARDOWN_IRQS  macro  arch/x86/include/asm/pci.h  128  #define HAVE_DEFAULT_MSI_TEARDOWN_IRQS
HAVE_DEFAULT_MSI_RESTORE_IRQS  macro  arch/x86/include/asm/pci.h  129  #define HAVE_DEFAULT_MSI_RESTORE_IRQS
default_teardown_msi_irqs  macro  arch/x86/include/asm/pci.h  135  #define default_teardown_msi_irqs NULL
default_restore_msi_irqs  macro  arch/x86/include/asm/pci.h  136  #define default_restore_msi_irqs NULL
PCI_DMA_BUS_IS_PHYS  macro  include/asm-generic/pci.h  34  #define PCI_DMA_BUS_IS_PHYS (1)
__pcibus_to_node  function  arch/x86/include/asm/pci.h  156  static inline int __pcibus_to_node(const struct pci_bus *bus)
cpumask_of_pcibus  function  arch/x86/include/asm/pci.h  164  cpumask_of_pcibus(const struct pci_bus *bus)
pci_setup_rom  struct  arch/x86/include/asm/pci.h  174  struct pci_setup_rom {
_ASM_X86_DELAY_H  macro  arch/x86/include/asm/delay.h  2  #define _ASM_X86_DELAY_H
use_tsc_delay  prototype  arch/x86/include/asm/delay.h  6  void use_tsc_delay(void);
_LINUX_COMPAT_H  macro  include/linux/compat.h  2  #define _LINUX_COMPAT_H
COMPAT_USE_64BIT_TIME  macro  arch/x86/include/asm/compat.h  274  #define COMPAT_USE_64BIT_TIME (!!(task_pt_regs(current)->orig_ax & __X32_SYSCALL_BIT))
__SC_DELOUSE  macro  include/linux/compat.h  27  #define __SC_DELOUSE(t,v) ((t)(unsigned long)(v))
__SC_CCAST1  macro  include/linux/compat.h  30  #define __SC_CCAST1(t1,a1) __SC_DELOUSE(t1,a1)
__SC_CCAST2  macro  include/linux/compat.h  31  #define __SC_CCAST2(t2,a2,...) __SC_DELOUSE(t2,a2),__SC_CCAST1(__VA_ARGS__)
__SC_CCAST3  macro  include/linux/compat.h  32  #define __SC_CCAST3(t3,a3,...) __SC_DELOUSE(t3,a3),__SC_CCAST2(__VA_ARGS__)
__SC_CCAST4  macro  include/linux/compat.h  33  #define __SC_CCAST4(t4,a4,...) __SC_DELOUSE(t4,a4),__SC_CCAST3(__VA_ARGS__)
__SC_CCAST5  macro  include/linux/compat.h  34  #define __SC_CCAST5(t5,a5,...) __SC_DELOUSE(t5,a5),__SC_CCAST4(__VA_ARGS__)
__SC_CCAST6  macro  include/linux/compat.h  35  #define __SC_CCAST6(t6,a6,...) __SC_DELOUSE(t6,a6),__SC_CCAST5(__VA_ARGS__)
COMPAT_SYSCALL_DEFINE1  macro  include/linux/compat.h  37  #define COMPAT_SYSCALL_DEFINE1(name,...) COMPAT_SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
COMPAT_SYSCALL_DEFINE2  macro  include/linux/compat.h  39  #define COMPAT_SYSCALL_DEFINE2(name,...) COMPAT_SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
COMPAT_SYSCALL_DEFINE3  macro  include/linux/compat.h  41  #define COMPAT_SYSCALL_DEFINE3(name,...) COMPAT_SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
COMPAT_SYSCALL_DEFINE4  macro  include/linux/compat.h  43  #define COMPAT_SYSCALL_DEFINE4(name,...) COMPAT_SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
COMPAT_SYSCALL_DEFINE5  macro  include/linux/compat.h  45  #define COMPAT_SYSCALL_DEFINE5(name,...) COMPAT_SYSCALL_DEFINEx(5, _##name, __VA_ARGS__)
COMPAT_SYSCALL_DEFINE6  macro  include/linux/compat.h  47  #define COMPAT_SYSCALL_DEFINE6(name,...) COMPAT_SYSCALL_DEFINEx(6, _##name, __VA_ARGS__)
COMPAT_SYSCALL_DEFINEx  macro  include/linux/compat.h  64  #define COMPAT_SYSCALL_DEFINEx(x,name,...) asmlinkage long compat_sys##name(__SC_DECL##x(__VA_ARGS__))
compat_sigaltstack  struct  include/linux/compat.h  73  typedef struct compat_sigaltstack {
compat_jiffies_to_clock_t  macro  include/linux/compat.h  82  #define compat_jiffies_to_clock_t(x) (((unsigned long)(x) * COMPAT_USER_HZ) / HZ)
compat_itimerspec  struct  include/linux/compat.h  90  struct compat_itimerspec {
compat_utimbuf  struct  include/linux/compat.h  95  struct compat_utimbuf {
compat_itimerval  struct  include/linux/compat.h  100  struct compat_itimerval {
compat_tms  struct  include/linux/compat.h  105  struct compat_tms {
compat_timex  struct  include/linux/compat.h  112  struct compat_timex {
_COMPAT_NSIG_WORDS  macro  include/linux/compat.h  139  #define _COMPAT_NSIG_WORDS (_COMPAT_NSIG / _COMPAT_NSIG_BPW)
get_compat_timespec  prototype  include/linux/compat.h  149  extern int get_compat_timespec(struct timespec *,const struct compat_timespec __user *);
put_compat_timespec  prototype  include/linux/compat.h  151  extern int put_compat_timespec(const struct timespec *,struct compat_timespec __user *);
get_compat_timeval  prototype  include/linux/compat.h  153  extern int get_compat_timeval(struct timeval *,const struct compat_timeval __user *);
put_compat_timeval  prototype  include/linux/compat.h  155  extern int put_compat_timeval(const struct timeval *,struct compat_timeval __user *);
compat_get_timespec  prototype  include/linux/compat.h  161  extern int compat_get_timespec(struct timespec *,const void __user *);
compat_put_timespec  prototype  include/linux/compat.h  162  extern int compat_put_timespec(const struct timespec *,void __user *);
compat_get_timeval  prototype  include/linux/compat.h  163  extern int compat_get_timeval(struct timeval *,const void __user *);
compat_put_timeval  prototype  include/linux/compat.h  164  extern int compat_put_timeval(const struct timeval *,void __user *);
compat_iovec  struct  include/linux/compat.h  166  struct compat_iovec {
compat_rlimit  struct  include/linux/compat.h  171  struct compat_rlimit {
compat_rusage  struct  include/linux/compat.h  176  struct compat_rusage {
put_compat_rusage  prototype  include/linux/compat.h  196  extern int put_compat_rusage(const struct rusage *,struct compat_rusage __user *);
compat_sys_waitid  prototype  include/linux/compat.h  202  extern asmlinkage long compat_sys_waitid(int,compat_pid_t,struct compat_siginfo __user *, int,struct compat_rusage __user *);
compat_dirent  struct  include/linux/compat.h  204  struct compat_dirent {
compat_ustat  struct  include/linux/compat.h  211  struct compat_ustat {
COMPAT_SIGEV_PAD_SIZE  macro  include/linux/compat.h  218  #define COMPAT_SIGEV_PAD_SIZE ((SIGEV_MAX_SIZE/sizeof(int)) - 3)
compat_sigevent  struct  include/linux/compat.h  220  typedef struct compat_sigevent {
compat_ifmap  struct  include/linux/compat.h  235  struct compat_ifmap {
compat_if_settings  struct  include/linux/compat.h  244  struct compat_if_settings {
compat_ifreq  struct  include/linux/compat.h  250  struct compat_ifreq {
compat_ifconf  struct  include/linux/compat.h  271  struct compat_ifconf {
compat_robust_list  struct  include/linux/compat.h  276  struct compat_robust_list {
compat_robust_list_head  struct  include/linux/compat.h  280  struct compat_robust_list_head {
compat_exit_robust_list  prototype  include/linux/compat.h  299  extern void compat_exit_robust_list(struct task_struct *curr);
compat_sys_set_robust_list  prototype  include/linux/compat.h  303  compat_sys_set_robust_list(struct compat_robust_list_head __user *head,compat_size_t len);
compat_sys_get_robust_list  prototype  include/linux/compat.h  306  compat_sys_get_robust_list(int pid,compat_uptr_t __user *head_ptr,compat_size_t __user *len_ptr);
compat_sys_semctl  prototype  include/linux/compat.h  316  long compat_sys_semctl(int semid,int semnum,int cmd,int arg);
compat_sys_msgsnd  prototype  include/linux/compat.h  318  long compat_sys_msgsnd(int msqid,struct compat_msgbuf __user *msgp,compat_ssize_t msgsz, int msgflg);
compat_sys_msgrcv  prototype  include/linux/compat.h  320  long compat_sys_msgrcv(int msqid,struct compat_msgbuf __user *msgp,compat_ssize_t msgsz, long msgtyp, int msgflg);
compat_sys_shmat  prototype  include/linux/compat.h  321  long compat_sys_shmat(int shmid,compat_uptr_t shmaddr,int shmflg);
compat_sys_msgctl  prototype  include/linux/compat.h  323  long compat_sys_msgctl(int first,int second,void __user *uptr);
compat_sys_shmctl  prototype  include/linux/compat.h  324  long compat_sys_shmctl(int first,int second,void __user *uptr);
compat_sys_semtimedop  prototype  include/linux/compat.h  326  long compat_sys_semtimedop(int semid,struct sembuf __user *tsems,unsigned nsems, const struct compat_timespec __user *timeout);
compat_sys_keyctl  prototype  include/linux/compat.h  328  asmlinkage long compat_sys_keyctl(u32 option,u32 arg2, u32 arg3, u32 arg4, u32 arg5);
compat_sys_ustat  prototype  include/linux/compat.h  329  asmlinkage long compat_sys_ustat(unsigned dev,struct compat_ustat __user *u32);
compat_sys_readv  prototype  include/linux/compat.h  332  asmlinkage ssize_t compat_sys_readv(unsigned long fd,const struct compat_iovec __user *vec, unsigned long vlen);
compat_sys_writev  prototype  include/linux/compat.h  334  asmlinkage ssize_t compat_sys_writev(unsigned long fd,const struct compat_iovec __user *vec, unsigned long vlen);
compat_sys_preadv  prototype  include/linux/compat.h  337  asmlinkage ssize_t compat_sys_preadv(unsigned long fd,const struct compat_iovec __user *vec,unsigned long vlen, u32 pos_low, u32 pos_high);
compat_sys_pwritev  prototype  include/linux/compat.h  340  asmlinkage ssize_t compat_sys_pwritev(unsigned long fd,const struct compat_iovec __user *vec,unsigned long vlen, u32 pos_low, u32 pos_high);
compat_sys_execve  prototype  include/linux/compat.h  343  asmlinkage long compat_sys_execve(const char __user *filename,const compat_uptr_t __user *argv,const compat_uptr_t __user *envp);
compat_sys_select  prototype  include/linux/compat.h  347  asmlinkage long compat_sys_select(int n,compat_ulong_t __user *inp,compat_ulong_t __user *outp, compat_ulong_t __user *exp,struct compat_timeval __user *tvp);
compat_sys_old_select  prototype  include/linux/compat.h  349  asmlinkage long compat_sys_old_select(struct compat_sel_arg_struct __user *arg);
compat_sys_wait4  prototype  include/linux/compat.h  353  asmlinkage long compat_sys_wait4(compat_pid_t pid,compat_uint_t __user *stat_addr, int options,struct compat_rusage __user *ru);
BITS_PER_COMPAT_LONG  macro  include/linux/compat.h  355  #define BITS_PER_COMPAT_LONG (8*sizeof(compat_long_t))
BITS_TO_COMPAT_LONGS  macro  include/linux/compat.h  358  #define BITS_TO_COMPAT_LONGS(bits) (((bits)+BITS_PER_COMPAT_LONG-1)/BITS_PER_COMPAT_LONG)
compat_get_bitmap  prototype  include/linux/compat.h  361  long compat_get_bitmap(unsigned long *mask,const compat_ulong_t __user *umask,unsigned long bitmap_size);
compat_put_bitmap  prototype  include/linux/compat.h  363  long compat_put_bitmap(compat_ulong_t __user *umask,unsigned long *mask,unsigned long bitmap_size);
copy_siginfo_from_user32  prototype  include/linux/compat.h  364  int copy_siginfo_from_user32(siginfo_t *to,struct compat_siginfo __user *from);
copy_siginfo_to_user32  prototype  include/linux/compat.h  365  int copy_siginfo_to_user32(struct compat_siginfo __user *to,siginfo_t *from);
get_compat_sigevent  prototype  include/linux/compat.h  367  int get_compat_sigevent(struct sigevent *event,const struct compat_sigevent __user *u_event);
compat_sys_rt_tgsigqueueinfo  prototype  include/linux/compat.h  369  long compat_sys_rt_tgsigqueueinfo(compat_pid_t tgid,compat_pid_t pid,int sig,struct compat_siginfo __user *uinfo);
compat_timeval_compare  function  include/linux/compat.h  372  static inline int compat_timeval_compare(struct compat_timeval *lhs,struct compat_timeval *rhs)
compat_timespec_compare  function  include/linux/compat.h  382  static inline int compat_timespec_compare(struct compat_timespec *lhs,struct compat_timespec *rhs)
get_compat_itimerspec  prototype  include/linux/compat.h  392  extern int get_compat_itimerspec(struct itimerspec *dst,const struct compat_itimerspec __user *src);
put_compat_itimerspec  prototype  include/linux/compat.h  394  extern int put_compat_itimerspec(struct compat_itimerspec __user *dst,const struct itimerspec *src);
compat_sys_gettimeofday  prototype  include/linux/compat.h  397  asmlinkage long compat_sys_gettimeofday(struct compat_timeval __user *tv,struct timezone __user *tz);
compat_sys_settimeofday  prototype  include/linux/compat.h  399  asmlinkage long compat_sys_settimeofday(struct compat_timeval __user *tv,struct timezone __user *tz);
compat_sys_adjtimex  prototype  include/linux/compat.h  401  asmlinkage long compat_sys_adjtimex(struct compat_timex __user *utp);
compat_printk  prototype  include/linux/compat.h  403  extern int compat_printk(const char *fmt,...);
sigset_from_compat  prototype  include/linux/compat.h  404  extern void sigset_from_compat(sigset_t *set,compat_sigset_t *compat);
compat_sys_migrate_pages  prototype  include/linux/compat.h  408  asmlinkage long compat_sys_migrate_pages(compat_pid_t pid,compat_ulong_t maxnode, const compat_ulong_t __user *old_nodes,const compat_ulong_t __user *new_nodes);
compat_ptrace_request  prototype  include/linux/compat.h  412  extern int compat_ptrace_request(struct task_struct *child,compat_long_t request,compat_ulong_t addr, compat_ulong_t data);
compat_arch_ptrace  prototype  include/linux/compat.h  415  extern long compat_arch_ptrace(struct task_struct *child,compat_long_t request,compat_ulong_t addr, compat_ulong_t data);
compat_sys_ptrace  prototype  include/linux/compat.h  417  asmlinkage long compat_sys_ptrace(compat_long_t request,compat_long_t pid,compat_long_t addr, compat_long_t data);
compat_epoll_event  macro  include/linux/compat.h  423  #define compat_epoll_event epoll_event
compat_sys_epoll_pwait  prototype  include/linux/compat.h  428  asmlinkage long compat_sys_epoll_pwait(int epfd,struct compat_epoll_event __user *events,int maxevents, int timeout,const compat_sigset_t __user *sigmask,compat_size_t sigsetsize);
compat_sys_utime  prototype  include/linux/compat.h  431  asmlinkage long compat_sys_utime(const char __user *filename,struct compat_utimbuf __user *t);
compat_sys_utimensat  prototype  include/linux/compat.h  435  asmlinkage long compat_sys_utimensat(unsigned int dfd,const char __user *filename,struct compat_timespec __user *t,int flags);
compat_sys_time  prototype  include/linux/compat.h  437  asmlinkage long compat_sys_time(compat_time_t __user *tloc);
compat_sys_stime  prototype  include/linux/compat.h  438  asmlinkage long compat_sys_stime(compat_time_t __user *tptr);
compat_sys_signalfd  prototype  include/linux/compat.h  441  asmlinkage long compat_sys_signalfd(int ufd,const compat_sigset_t __user *sigmask,compat_size_t sigsetsize);
compat_sys_timerfd_settime  prototype  include/linux/compat.h  444  asmlinkage long compat_sys_timerfd_settime(int ufd,int flags,const struct compat_itimerspec __user *utmr,struct compat_itimerspec __user *otmr);
compat_sys_timerfd_gettime  prototype  include/linux/compat.h  446  asmlinkage long compat_sys_timerfd_gettime(int ufd,struct compat_itimerspec __user *otmr);
compat_sys_move_pages  prototype  include/linux/compat.h  452  asmlinkage long compat_sys_move_pages(pid_t pid,unsigned long nr_page,__u32 __user *pages,const int __user *nodes,int __user *status,int flags);
compat_sys_futimesat  prototype  include/linux/compat.h  455  asmlinkage long compat_sys_futimesat(unsigned int dfd,const char __user *filename,struct compat_timeval __user *t);
compat_sys_utimes  prototype  include/linux/compat.h  457  asmlinkage long compat_sys_utimes(const char __user *filename,struct compat_timeval __user *t);
compat_sys_newstat  prototype  include/linux/compat.h  459  asmlinkage long compat_sys_newstat(const char __user *filename,struct compat_stat __user *statbuf);
compat_sys_newlstat  prototype  include/linux/compat.h  461  asmlinkage long compat_sys_newlstat(const char __user *filename,struct compat_stat __user *statbuf);
compat_sys_newfstatat  prototype  include/linux/compat.h  465  asmlinkage long compat_sys_newfstatat(unsigned int dfd,const char __user *filename,struct compat_stat __user *statbuf,int flag);
compat_sys_newfstat  prototype  include/linux/compat.h  467  asmlinkage long compat_sys_newfstat(unsigned int fd,struct compat_stat __user *statbuf);
compat_sys_statfs  prototype  include/linux/compat.h  469  asmlinkage long compat_sys_statfs(const char __user *pathname,struct compat_statfs __user *buf);
compat_sys_fstatfs  prototype  include/linux/compat.h  471  asmlinkage long compat_sys_fstatfs(unsigned int fd,struct compat_statfs __user *buf);
compat_sys_statfs64  prototype  include/linux/compat.h  474  asmlinkage long compat_sys_statfs64(const char __user *pathname,compat_size_t sz,struct compat_statfs64 __user *buf);
compat_sys_fstatfs64  prototype  include/linux/compat.h  476  asmlinkage long compat_sys_fstatfs64(unsigned int fd,compat_size_t sz,struct compat_statfs64 __user *buf);
compat_sys_fcntl64  prototype  include/linux/compat.h  478  asmlinkage long compat_sys_fcntl64(unsigned int fd,unsigned int cmd,unsigned long arg);
compat_sys_fcntl  prototype  include/linux/compat.h  480  asmlinkage long compat_sys_fcntl(unsigned int fd,unsigned int cmd,unsigned long arg);
compat_sys_io_setup  prototype  include/linux/compat.h  481  asmlinkage long compat_sys_io_setup(unsigned nr_reqs,u32 __user *ctx32p);
compat_sys_io_getevents  prototype  include/linux/compat.h  486  asmlinkage long compat_sys_io_getevents(aio_context_t ctx_id,unsigned long min_nr,unsigned long nr,struct io_event __user *events,struct compat_timespec __user *timeout);
compat_sys_io_submit  prototype  include/linux/compat.h  488  asmlinkage long compat_sys_io_submit(aio_context_t ctx_id,int nr,u32 __user *iocb);
compat_sys_mount  prototype  include/linux/compat.h  492  asmlinkage long compat_sys_mount(const char __user *dev_name,const char __user *dir_name,const char __user *type, unsigned long flags,const void __user *data);
compat_sys_old_readdir  prototype  include/linux/compat.h  495  asmlinkage long compat_sys_old_readdir(unsigned int fd,struct compat_old_linux_dirent __user *,unsigned int count);
compat_sys_getdents  prototype  include/linux/compat.h  498  asmlinkage long compat_sys_getdents(unsigned int fd,struct compat_linux_dirent __user *dirent,unsigned int count);
compat_sys_getdents64  prototype  include/linux/compat.h  501  asmlinkage long compat_sys_getdents64(unsigned int fd,struct linux_dirent64 __user *dirent,unsigned int count);
compat_sys_vmsplice  prototype  include/linux/compat.h  503  asmlinkage long compat_sys_vmsplice(int fd,const struct compat_iovec __user *,unsigned int nr_segs, unsigned int flags);
compat_sys_open  prototype  include/linux/compat.h  505  asmlinkage long compat_sys_open(const char __user *filename,int flags,umode_t mode);
compat_sys_openat  prototype  include/linux/compat.h  507  asmlinkage long compat_sys_openat(unsigned int dfd,const char __user *filename,int flags, umode_t mode);
compat_sys_open_by_handle_at  prototype  include/linux/compat.h  510  asmlinkage long compat_sys_open_by_handle_at(int mountdirfd,struct file_handle __user *handle,int flags);
compat_sys_pselect6  prototype  include/linux/compat.h  515  asmlinkage long compat_sys_pselect6(int n,compat_ulong_t __user *inp,compat_ulong_t __user *outp,compat_ulong_t __user *exp,struct compat_timespec __user *tsp,void __user *sig);
compat_sys_ppoll  prototype  include/linux/compat.h  520  asmlinkage long compat_sys_ppoll(struct pollfd __user *ufds,unsigned int nfds,struct compat_timespec __user *tsp,const compat_sigset_t __user *sigmask,compat_size_t sigsetsize);
compat_sys_signalfd4  prototype  include/linux/compat.h  523  asmlinkage long compat_sys_signalfd4(int ufd,const compat_sigset_t __user *sigmask,compat_size_t sigsetsize, int flags);
compat_sys_get_mempolicy  prototype  include/linux/compat.h  528  asmlinkage long compat_sys_get_mempolicy(int __user *policy,compat_ulong_t __user *nmask,compat_ulong_t maxnode,compat_ulong_t addr,compat_ulong_t flags);
compat_sys_set_mempolicy  prototype  include/linux/compat.h  530  asmlinkage long compat_sys_set_mempolicy(int mode,compat_ulong_t __user *nmask,compat_ulong_t maxnode);
compat_sys_mbind  prototype  include/linux/compat.h  534  asmlinkage long compat_sys_mbind(compat_ulong_t start,compat_ulong_t len,compat_ulong_t mode,compat_ulong_t __user *nmask,compat_ulong_t maxnode, compat_ulong_t flags);
compat_sys_setsockopt  prototype  include/linux/compat.h  537  asmlinkage long compat_sys_setsockopt(int fd,int level,int optname,char __user *optval, unsigned int optlen);
compat_sys_sendmsg  prototype  include/linux/compat.h  539  asmlinkage long compat_sys_sendmsg(int fd,struct compat_msghdr __user *msg,unsigned flags);
compat_sys_sendmmsg  prototype  include/linux/compat.h  541  asmlinkage long compat_sys_sendmmsg(int fd,struct compat_mmsghdr __user *mmsg,unsigned vlen, unsigned int flags);
compat_sys_recvmsg  prototype  include/linux/compat.h  543  asmlinkage long compat_sys_recvmsg(int fd,struct compat_msghdr __user *msg,unsigned int flags);
compat_sys_recv  prototype  include/linux/compat.h  545  asmlinkage long compat_sys_recv(int fd,void __user *buf,size_t len,unsigned flags);
compat_sys_recvfrom  prototype  include/linux/compat.h  548  asmlinkage long compat_sys_recvfrom(int fd,void __user *buf,size_t len,unsigned flags, struct sockaddr __user *addr,int __user *addrlen);
compat_sys_recvmmsg  prototype  include/linux/compat.h  551  asmlinkage long compat_sys_recvmmsg(int fd,struct compat_mmsghdr __user *mmsg,unsigned vlen, unsigned int flags,struct compat_timespec __user *timeout);
compat_sys_nanosleep  prototype  include/linux/compat.h  553  asmlinkage long compat_sys_nanosleep(struct compat_timespec __user *rqtp,struct compat_timespec __user *rmtp);
compat_sys_getitimer  prototype  include/linux/compat.h  555  asmlinkage long compat_sys_getitimer(int which,struct compat_itimerval __user *it);
compat_sys_setitimer  prototype  include/linux/compat.h  558  asmlinkage long compat_sys_setitimer(int which,struct compat_itimerval __user *in,struct compat_itimerval __user *out);
compat_sys_times  prototype  include/linux/compat.h  559  asmlinkage long compat_sys_times(struct compat_tms __user *tbuf);
compat_sys_setrlimit  prototype  include/linux/compat.h  561  asmlinkage long compat_sys_setrlimit(unsigned int resource,struct compat_rlimit __user *rlim);
compat_sys_getrlimit  prototype  include/linux/compat.h  563  asmlinkage long compat_sys_getrlimit(unsigned int resource,struct compat_rlimit __user *rlim);
compat_sys_getrusage  prototype  include/linux/compat.h  564  asmlinkage long compat_sys_getrusage(int who,struct compat_rusage __user *ru);
compat_sys_sched_setaffinity  prototype  include/linux/compat.h  567  asmlinkage long compat_sys_sched_setaffinity(compat_pid_t pid,unsigned int len,compat_ulong_t __user *user_mask_ptr);
compat_sys_sched_getaffinity  prototype  include/linux/compat.h  570  asmlinkage long compat_sys_sched_getaffinity(compat_pid_t pid,unsigned int len,compat_ulong_t __user *user_mask_ptr);
compat_sys_timer_create  prototype  include/linux/compat.h  573  asmlinkage long compat_sys_timer_create(clockid_t which_clock,struct compat_sigevent __user *timer_event_spec,timer_t __user *created_timer_id);
compat_sys_timer_settime  prototype  include/linux/compat.h  576  asmlinkage long compat_sys_timer_settime(timer_t timer_id,int flags,struct compat_itimerspec __user *new,struct compat_itimerspec __user *old);
compat_sys_timer_gettime  prototype  include/linux/compat.h  578  asmlinkage long compat_sys_timer_gettime(timer_t timer_id,struct compat_itimerspec __user *setting);
compat_sys_clock_settime  prototype  include/linux/compat.h  580  asmlinkage long compat_sys_clock_settime(clockid_t which_clock,struct compat_timespec __user *tp);
compat_sys_clock_gettime  prototype  include/linux/compat.h  582  asmlinkage long compat_sys_clock_gettime(clockid_t which_clock,struct compat_timespec __user *tp);
compat_sys_clock_adjtime  prototype  include/linux/compat.h  584  asmlinkage long compat_sys_clock_adjtime(clockid_t which_clock,struct compat_timex __user *tp);
compat_sys_clock_getres  prototype  include/linux/compat.h  586  asmlinkage long compat_sys_clock_getres(clockid_t which_clock,struct compat_timespec __user *tp);
compat_sys_clock_nanosleep  prototype  include/linux/compat.h  589  asmlinkage long compat_sys_clock_nanosleep(clockid_t which_clock,int flags,struct compat_timespec __user *rqtp,struct compat_timespec __user *rmtp);
compat_sys_rt_sigtimedwait  prototype  include/linux/compat.h  592  asmlinkage long compat_sys_rt_sigtimedwait(compat_sigset_t __user *uthese,struct compat_siginfo __user *uinfo,struct compat_timespec __user *uts, compat_size_t sigsetsize);
compat_sys_rt_sigsuspend  prototype  include/linux/compat.h  594  asmlinkage long compat_sys_rt_sigsuspend(compat_sigset_t __user *unewset,compat_size_t sigsetsize);
compat_sys_sysinfo  prototype  include/linux/compat.h  595  asmlinkage long compat_sys_sysinfo(struct compat_sysinfo __user *info);
compat_sys_ioctl  prototype  include/linux/compat.h  597  asmlinkage long compat_sys_ioctl(unsigned int fd,unsigned int cmd,unsigned long arg);
compat_sys_futex  prototype  include/linux/compat.h  600  asmlinkage long compat_sys_futex(u32 __user *uaddr,int op,u32 val,struct compat_timespec __user *utime, u32 __user *uaddr2,u32 val3);
compat_sys_getsockopt  prototype  include/linux/compat.h  602  asmlinkage long compat_sys_getsockopt(int fd,int level,int optname,char __user *optval, int __user *optlen);
compat_sys_kexec_load  prototype  include/linux/compat.h  606  asmlinkage long compat_sys_kexec_load(unsigned long entry,unsigned long nr_segments,struct compat_kexec_segment __user *,unsigned long flags);
compat_sys_mq_getsetattr  prototype  include/linux/compat.h  609  asmlinkage long compat_sys_mq_getsetattr(mqd_t mqdes,const struct compat_mq_attr __user *u_mqstat,struct compat_mq_attr __user *u_omqstat);
compat_sys_mq_notify  prototype  include/linux/compat.h  611  asmlinkage long compat_sys_mq_notify(mqd_t mqdes,const struct compat_sigevent __user *u_notification);
compat_sys_mq_open  prototype  include/linux/compat.h  614  asmlinkage long compat_sys_mq_open(const char __user *u_name,int oflag, compat_mode_t mode,struct compat_mq_attr __user *u_attr);
compat_sys_mq_timedsend  prototype  include/linux/compat.h  618  asmlinkage long compat_sys_mq_timedsend(mqd_t mqdes,const char __user *u_msg_ptr,size_t msg_len, unsigned int msg_prio,const struct compat_timespec __user *u_abs_timeout);
compat_sys_mq_timedreceive  prototype  include/linux/compat.h  622  asmlinkage ssize_t compat_sys_mq_timedreceive(mqd_t mqdes,char __user *u_msg_ptr,size_t msg_len, unsigned int __user *u_msg_prio,const struct compat_timespec __user *u_abs_timeout);
compat_sys_socketcall  prototype  include/linux/compat.h  623  asmlinkage long compat_sys_socketcall(int call,u32 __user *args);
compat_sys_sysctl  prototype  include/linux/compat.h  624  asmlinkage long compat_sys_sysctl(struct compat_sysctl_args __user *args);
compat_rw_copy_check_uvector  prototype  include/linux/compat.h  630  extern ssize_t compat_rw_copy_check_uvector(int type,const struct compat_iovec __user *uvector,unsigned long nr_segs,unsigned long fast_segs, struct iovec *fast_pointer,struct iovec **ret_pointer);
compat_alloc_user_space  prototype  include/linux/compat.h  632  extern void __user *compat_alloc_user_space(unsigned long len);
compat_sys_process_vm_readv  prototype  include/linux/compat.h  637  asmlinkage ssize_t compat_sys_process_vm_readv(compat_pid_t pid,const struct compat_iovec __user *lvec,unsigned long liovcnt, const struct compat_iovec __user *rvec,unsigned long riovcnt, unsigned long flags);
compat_sys_process_vm_writev  prototype  include/linux/compat.h  641  asmlinkage ssize_t compat_sys_process_vm_writev(compat_pid_t pid,const struct compat_iovec __user *lvec,unsigned long liovcnt, const struct compat_iovec __user *rvec,unsigned long riovcnt, unsigned long flags);
compat_sys_sendfile  prototype  include/linux/compat.h  644  asmlinkage long compat_sys_sendfile(int out_fd,int in_fd,compat_off_t __user *offset, compat_size_t count);
compat_sys_sigaltstack  prototype  include/linux/compat.h  647  asmlinkage long compat_sys_sigaltstack(const compat_stack_t __user *uss_ptr,compat_stack_t __user *uoss_ptr);
compat_restore_altstack  prototype  include/linux/compat.h  649  int compat_restore_altstack(const compat_stack_t __user *uss);
__compat_save_altstack  prototype  include/linux/compat.h  650  int __compat_save_altstack(compat_stack_t __user *,unsigned long);
compat_sys_sched_rr_get_interval  prototype  include/linux/compat.h  654  asmlinkage long compat_sys_sched_rr_get_interval(compat_pid_t pid,struct compat_timespec __user *interval);
is_compat_task  function  arch/x86/include/asm/compat.h  319  static inline bool is_compat_task(void)
_UAPI_LINUX_ETHTOOL_H  macro  include/uapi/linux/ethtool.h  14  #define _UAPI_LINUX_ETHTOOL_H
ethtool_cmd  struct  include/uapi/linux/ethtool.h  20  struct ethtool_cmd {
ethtool_cmd_speed_set  function  include/uapi/linux/ethtool.h  54  static inline void ethtool_cmd_speed_set(struct ethtool_cmd *ep,__u32 speed)
ethtool_cmd_speed  function  include/uapi/linux/ethtool.h  61  static inline __u32 ethtool_cmd_speed(const struct ethtool_cmd *ep)
ETH_MDIO_SUPPORTS_C22  macro  include/uapi/linux/ethtool.h  71  #define ETH_MDIO_SUPPORTS_C22 1
ETH_MDIO_SUPPORTS_C45  macro  include/uapi/linux/ethtool.h  78  #define ETH_MDIO_SUPPORTS_C45 2
ETHTOOL_FWVERS_LEN  macro  include/uapi/linux/ethtool.h  80  #define ETHTOOL_FWVERS_LEN 32
ETHTOOL_BUSINFO_LEN  macro  include/uapi/linux/ethtool.h  81  #define ETHTOOL_BUSINFO_LEN 32
ethtool_drvinfo  struct  include/uapi/linux/ethtool.h  83  struct ethtool_drvinfo {
SOPASS_MAX  macro  include/uapi/linux/ethtool.h  106  #define SOPASS_MAX 6
ethtool_wolinfo  struct  include/uapi/linux/ethtool.h  108  struct ethtool_wolinfo {
ethtool_value  struct  include/uapi/linux/ethtool.h  116  struct ethtool_value {
ethtool_regs  struct  include/uapi/linux/ethtool.h  122  struct ethtool_regs {
ethtool_eeprom  struct  include/uapi/linux/ethtool.h  130  struct ethtool_eeprom {
ethtool_eee  struct  include/uapi/linux/ethtool.h  155  struct ethtool_eee {
ethtool_modinfo  struct  include/uapi/linux/ethtool.h  177  struct ethtool_modinfo {
ethtool_coalesce  struct  include/uapi/linux/ethtool.h  256  struct ethtool_coalesce {
ethtool_ringparam  struct  include/uapi/linux/ethtool.h  283  struct ethtool_ringparam {
ethtool_channels  struct  include/uapi/linux/ethtool.h  320  struct ethtool_channels {
ethtool_pauseparam  struct  include/uapi/linux/ethtool.h  333  struct ethtool_pauseparam {
ETH_GSTRING_LEN  macro  include/uapi/linux/ethtool.h  351  #define ETH_GSTRING_LEN 32
ethtool_stringset  enum  include/uapi/linux/ethtool.h  352  enum ethtool_stringset {
ethtool_gstrings  struct  include/uapi/linux/ethtool.h  361  struct ethtool_gstrings {
ethtool_sset_info  struct  include/uapi/linux/ethtool.h  368  struct ethtool_sset_info {
ethtool_test_flags  enum  include/uapi/linux/ethtool.h  389  enum ethtool_test_flags {
ethtool_test  struct  include/uapi/linux/ethtool.h  397  struct ethtool_test {
ethtool_stats  struct  include/uapi/linux/ethtool.h  406  struct ethtool_stats {
ethtool_perm_addr  struct  include/uapi/linux/ethtool.h  412  struct ethtool_perm_addr {
ethtool_flags  enum  include/uapi/linux/ethtool.h  427  enum ethtool_flags {
ethtool_tcpip4_spec  struct  include/uapi/linux/ethtool.h  451  struct ethtool_tcpip4_spec {
ethtool_ah_espip4_spec  struct  include/uapi/linux/ethtool.h  468  struct ethtool_ah_espip4_spec {
ETH_RX_NFC_IP4  macro  include/uapi/linux/ethtool.h  475  #define ETH_RX_NFC_IP4 1
ethtool_usrip4_spec  struct  include/uapi/linux/ethtool.h  486  struct ethtool_usrip4_spec {
ethtool_flow_union  union  include/uapi/linux/ethtool.h  495  union ethtool_flow_union {
ethtool_flow_ext  struct  include/uapi/linux/ethtool.h  517  struct ethtool_flow_ext {
ethtool_rx_flow_spec  struct  include/uapi/linux/ethtool.h  541  struct ethtool_rx_flow_spec {
ethtool_rxnfc  struct  include/uapi/linux/ethtool.h  603  struct ethtool_rxnfc {
ethtool_rxfh_indir  struct  include/uapi/linux/ethtool.h  626  struct ethtool_rxfh_indir {
ethtool_rx_ntuple_flow_spec  struct  include/uapi/linux/ethtool.h  648  struct ethtool_rx_ntuple_flow_spec {
ETHTOOL_RXNTUPLE_ACTION_DROP  macro  include/uapi/linux/ethtool.h  667  #define ETHTOOL_RXNTUPLE_ACTION_DROP (-1)
ETHTOOL_RXNTUPLE_ACTION_CLEAR  macro  include/uapi/linux/ethtool.h  668  #define ETHTOOL_RXNTUPLE_ACTION_CLEAR (-2)
ethtool_rx_ntuple  struct  include/uapi/linux/ethtool.h  676  struct ethtool_rx_ntuple {
ETHTOOL_FLASH_MAX_FILENAME  macro  include/uapi/linux/ethtool.h  681  #define ETHTOOL_FLASH_MAX_FILENAME 128
ethtool_flash_op_type  enum  include/uapi/linux/ethtool.h  682  enum ethtool_flash_op_type {
ethtool_flash  struct  include/uapi/linux/ethtool.h  687  struct ethtool_flash {
ETH_FW_DUMP_DISABLE  macro  include/uapi/linux/ethtool.h  708  #define ETH_FW_DUMP_DISABLE 0
ethtool_dump  struct  include/uapi/linux/ethtool.h  710  struct ethtool_dump {
ethtool_get_features_block  struct  include/uapi/linux/ethtool.h  727  struct ethtool_get_features_block {
ethtool_gfeatures  struct  include/uapi/linux/ethtool.h  741  struct ethtool_gfeatures {
ethtool_set_features_block  struct  include/uapi/linux/ethtool.h  752  struct ethtool_set_features_block {
ethtool_sfeatures  struct  include/uapi/linux/ethtool.h  763  struct ethtool_sfeatures {
ethtool_ts_info  struct  include/uapi/linux/ethtool.h  782  struct ethtool_ts_info {
ethtool_sfeatures_retval_bits  enum  include/uapi/linux/ethtool.h  817  enum ethtool_sfeatures_retval_bits {
ETHTOOL_F_UNSUPPORTED  macro  include/uapi/linux/ethtool.h  823  #define ETHTOOL_F_UNSUPPORTED (1 << ETHTOOL_F_UNSUPPORTED__BIT)
ETHTOOL_F_WISH  macro  include/uapi/linux/ethtool.h  824  #define ETHTOOL_F_WISH (1 << ETHTOOL_F_WISH__BIT)
ETHTOOL_F_COMPAT  macro  include/uapi/linux/ethtool.h  825  #define ETHTOOL_F_COMPAT (1 << ETHTOOL_F_COMPAT__BIT)
ETHTOOL_GSET  macro  include/uapi/linux/ethtool.h  829  #define ETHTOOL_GSET 0x00000001
ETHTOOL_SSET  macro  include/uapi/linux/ethtool.h  830  #define ETHTOOL_SSET 0x00000002
ETHTOOL_GDRVINFO  macro  include/uapi/linux/ethtool.h  831  #define ETHTOOL_GDRVINFO 0x00000003
ETHTOOL_GREGS  macro  include/uapi/linux/ethtool.h  832  #define ETHTOOL_GREGS 0x00000004
ETHTOOL_GWOL  macro  include/uapi/linux/ethtool.h  833  #define ETHTOOL_GWOL 0x00000005
ETHTOOL_SWOL  macro  include/uapi/linux/ethtool.h  834  #define ETHTOOL_SWOL 0x00000006
ETHTOOL_GMSGLVL  macro  include/uapi/linux/ethtool.h  835  #define ETHTOOL_GMSGLVL 0x00000007
ETHTOOL_SMSGLVL  macro  include/uapi/linux/ethtool.h  836  #define ETHTOOL_SMSGLVL 0x00000008
ETHTOOL_NWAY_RST  macro  include/uapi/linux/ethtool.h  837  #define ETHTOOL_NWAY_RST 0x00000009
ETHTOOL_GLINK  macro  include/uapi/linux/ethtool.h  840  #define ETHTOOL_GLINK 0x0000000a
ETHTOOL_GEEPROM  macro  include/uapi/linux/ethtool.h  841  #define ETHTOOL_GEEPROM 0x0000000b
ETHTOOL_SEEPROM  macro  include/uapi/linux/ethtool.h  842  #define ETHTOOL_SEEPROM 0x0000000c
ETHTOOL_GCOALESCE  macro  include/uapi/linux/ethtool.h  843  #define ETHTOOL_GCOALESCE 0x0000000e
ETHTOOL_SCOALESCE  macro  include/uapi/linux/ethtool.h  844  #define ETHTOOL_SCOALESCE 0x0000000f
ETHTOOL_GRINGPARAM  macro  include/uapi/linux/ethtool.h  845  #define ETHTOOL_GRINGPARAM 0x00000010
ETHTOOL_SRINGPARAM  macro  include/uapi/linux/ethtool.h  846  #define ETHTOOL_SRINGPARAM 0x00000011
ETHTOOL_GPAUSEPARAM  macro  include/uapi/linux/ethtool.h  847  #define ETHTOOL_GPAUSEPARAM 0x00000012
ETHTOOL_SPAUSEPARAM  macro  include/uapi/linux/ethtool.h  848  #define ETHTOOL_SPAUSEPARAM 0x00000013
ETHTOOL_GRXCSUM  macro  include/uapi/linux/ethtool.h  849  #define ETHTOOL_GRXCSUM 0x00000014
ETHTOOL_SRXCSUM  macro  include/uapi/linux/ethtool.h  850  #define ETHTOOL_SRXCSUM 0x00000015
ETHTOOL_GTXCSUM  macro  include/uapi/linux/ethtool.h  851  #define ETHTOOL_GTXCSUM 0x00000016
ETHTOOL_STXCSUM  macro  include/uapi/linux/ethtool.h  852  #define ETHTOOL_STXCSUM 0x00000017
ETHTOOL_GSG  macro  include/uapi/linux/ethtool.h  853  #define ETHTOOL_GSG 0x00000018
ETHTOOL_SSG  macro  include/uapi/linux/ethtool.h  855  #define ETHTOOL_SSG 0x00000019
ETHTOOL_TEST  macro  include/uapi/linux/ethtool.h  857  #define ETHTOOL_TEST 0x0000001a
ETHTOOL_GSTRINGS  macro  include/uapi/linux/ethtool.h  858  #define ETHTOOL_GSTRINGS 0x0000001b
ETHTOOL_PHYS_ID  macro  include/uapi/linux/ethtool.h  859  #define ETHTOOL_PHYS_ID 0x0000001c
ETHTOOL_GSTATS  macro  include/uapi/linux/ethtool.h  860  #define ETHTOOL_GSTATS 0x0000001d
ETHTOOL_GTSO  macro  include/uapi/linux/ethtool.h  861  #define ETHTOOL_GTSO 0x0000001e
ETHTOOL_STSO  macro  include/uapi/linux/ethtool.h  862  #define ETHTOOL_STSO 0x0000001f
ETHTOOL_GPERMADDR  macro  include/uapi/linux/ethtool.h  863  #define ETHTOOL_GPERMADDR 0x00000020
ETHTOOL_GUFO  macro  include/uapi/linux/ethtool.h  864  #define ETHTOOL_GUFO 0x00000021
ETHTOOL_SUFO  macro  include/uapi/linux/ethtool.h  865  #define ETHTOOL_SUFO 0x00000022
ETHTOOL_GGSO  macro  include/uapi/linux/ethtool.h  866  #define ETHTOOL_GGSO 0x00000023
ETHTOOL_SGSO  macro  include/uapi/linux/ethtool.h  867  #define ETHTOOL_SGSO 0x00000024
ETHTOOL_GFLAGS  macro  include/uapi/linux/ethtool.h  868  #define ETHTOOL_GFLAGS 0x00000025
ETHTOOL_SFLAGS  macro  include/uapi/linux/ethtool.h  869  #define ETHTOOL_SFLAGS 0x00000026
ETHTOOL_GPFLAGS  macro  include/uapi/linux/ethtool.h  870  #define ETHTOOL_GPFLAGS 0x00000027
ETHTOOL_SPFLAGS  macro  include/uapi/linux/ethtool.h  871  #define ETHTOOL_SPFLAGS 0x00000028
ETHTOOL_GRXFH  macro  include/uapi/linux/ethtool.h  873  #define ETHTOOL_GRXFH 0x00000029
ETHTOOL_SRXFH  macro  include/uapi/linux/ethtool.h  874  #define ETHTOOL_SRXFH 0x0000002a
ETHTOOL_GGRO  macro  include/uapi/linux/ethtool.h  875  #define ETHTOOL_GGRO 0x0000002b
ETHTOOL_SGRO  macro  include/uapi/linux/ethtool.h  876  #define ETHTOOL_SGRO 0x0000002c
ETHTOOL_GRXRINGS  macro  include/uapi/linux/ethtool.h  877  #define ETHTOOL_GRXRINGS 0x0000002d
ETHTOOL_GRXCLSRLCNT  macro  include/uapi/linux/ethtool.h  878  #define ETHTOOL_GRXCLSRLCNT 0x0000002e
ETHTOOL_GRXCLSRULE  macro  include/uapi/linux/ethtool.h  879  #define ETHTOOL_GRXCLSRULE 0x0000002f
ETHTOOL_GRXCLSRLALL  macro  include/uapi/linux/ethtool.h  880  #define ETHTOOL_GRXCLSRLALL 0x00000030
ETHTOOL_SRXCLSRLDEL  macro  include/uapi/linux/ethtool.h  881  #define ETHTOOL_SRXCLSRLDEL 0x00000031
ETHTOOL_SRXCLSRLINS  macro  include/uapi/linux/ethtool.h  882  #define ETHTOOL_SRXCLSRLINS 0x00000032
ETHTOOL_FLASHDEV  macro  include/uapi/linux/ethtool.h  883  #define ETHTOOL_FLASHDEV 0x00000033
ETHTOOL_RESET  macro  include/uapi/linux/ethtool.h  884  #define ETHTOOL_RESET 0x00000034
ETHTOOL_SRXNTUPLE  macro  include/uapi/linux/ethtool.h  885  #define ETHTOOL_SRXNTUPLE 0x00000035
ETHTOOL_GRXNTUPLE  macro  include/uapi/linux/ethtool.h  886  #define ETHTOOL_GRXNTUPLE 0x00000036
ETHTOOL_GSSET_INFO  macro  include/uapi/linux/ethtool.h  887  #define ETHTOOL_GSSET_INFO 0x00000037
ETHTOOL_GRXFHINDIR  macro  include/uapi/linux/ethtool.h  888  #define ETHTOOL_GRXFHINDIR 0x00000038
ETHTOOL_SRXFHINDIR  macro  include/uapi/linux/ethtool.h  889  #define ETHTOOL_SRXFHINDIR 0x00000039
ETHTOOL_GFEATURES  macro  include/uapi/linux/ethtool.h  891  #define ETHTOOL_GFEATURES 0x0000003a
ETHTOOL_SFEATURES  macro  include/uapi/linux/ethtool.h  892  #define ETHTOOL_SFEATURES 0x0000003b
ETHTOOL_GCHANNELS  macro  include/uapi/linux/ethtool.h  893  #define ETHTOOL_GCHANNELS 0x0000003c
ETHTOOL_SCHANNELS  macro  include/uapi/linux/ethtool.h  894  #define ETHTOOL_SCHANNELS 0x0000003d
ETHTOOL_SET_DUMP  macro  include/uapi/linux/ethtool.h  895  #define ETHTOOL_SET_DUMP 0x0000003e
ETHTOOL_GET_DUMP_FLAG  macro  include/uapi/linux/ethtool.h  896  #define ETHTOOL_GET_DUMP_FLAG 0x0000003f
ETHTOOL_GET_DUMP_DATA  macro  include/uapi/linux/ethtool.h  897  #define ETHTOOL_GET_DUMP_DATA 0x00000040
ETHTOOL_GET_TS_INFO  macro  include/uapi/linux/ethtool.h  898  #define ETHTOOL_GET_TS_INFO 0x00000041
ETHTOOL_GMODULEINFO  macro  include/uapi/linux/ethtool.h  899  #define ETHTOOL_GMODULEINFO 0x00000042
ETHTOOL_GMODULEEEPROM  macro  include/uapi/linux/ethtool.h  900  #define ETHTOOL_GMODULEEEPROM 0x00000043
ETHTOOL_GEEE  macro  include/uapi/linux/ethtool.h  901  #define ETHTOOL_GEEE 0x00000044
ETHTOOL_SEEE  macro  include/uapi/linux/ethtool.h  902  #define ETHTOOL_SEEE 0x00000045
SPARC_ETH_GSET  macro  include/uapi/linux/ethtool.h  905  #define SPARC_ETH_GSET ETHTOOL_GSET
SPARC_ETH_SSET  macro  include/uapi/linux/ethtool.h  906  #define SPARC_ETH_SSET ETHTOOL_SSET
SUPPORTED_10baseT_Half  macro  include/uapi/linux/ethtool.h  909  #define SUPPORTED_10baseT_Half (1 << 0)
SUPPORTED_10baseT_Full  macro  include/uapi/linux/ethtool.h  910  #define SUPPORTED_10baseT_Full (1 << 1)
SUPPORTED_100baseT_Half  macro  include/uapi/linux/ethtool.h  911  #define SUPPORTED_100baseT_Half (1 << 2)
SUPPORTED_100baseT_Full  macro  include/uapi/linux/ethtool.h  912  #define SUPPORTED_100baseT_Full (1 << 3)
SUPPORTED_1000baseT_Half  macro  include/uapi/linux/ethtool.h  913  #define SUPPORTED_1000baseT_Half (1 << 4)
SUPPORTED_1000baseT_Full  macro  include/uapi/linux/ethtool.h  914  #define SUPPORTED_1000baseT_Full (1 << 5)
SUPPORTED_Autoneg  macro  include/uapi/linux/ethtool.h  915  #define SUPPORTED_Autoneg (1 << 6)
SUPPORTED_TP  macro  include/uapi/linux/ethtool.h  916  #define SUPPORTED_TP (1 << 7)
SUPPORTED_AUI  macro  include/uapi/linux/ethtool.h  917  #define SUPPORTED_AUI (1 << 8)
SUPPORTED_MII  macro  include/uapi/linux/ethtool.h  918  #define SUPPORTED_MII (1 << 9)
SUPPORTED_FIBRE  macro  include/uapi/linux/ethtool.h  919  #define SUPPORTED_FIBRE (1 << 10)
SUPPORTED_BNC  macro  include/uapi/linux/ethtool.h  920  #define SUPPORTED_BNC (1 << 11)
SUPPORTED_10000baseT_Full  macro  include/uapi/linux/ethtool.h  921  #define SUPPORTED_10000baseT_Full (1 << 12)
SUPPORTED_Pause  macro  include/uapi/linux/ethtool.h  922  #define SUPPORTED_Pause (1 << 13)
SUPPORTED_Asym_Pause  macro  include/uapi/linux/ethtool.h  923  #define SUPPORTED_Asym_Pause (1 << 14)
SUPPORTED_2500baseX_Full  macro  include/uapi/linux/ethtool.h  924  #define SUPPORTED_2500baseX_Full (1 << 15)
SUPPORTED_Backplane  macro  include/uapi/linux/ethtool.h  925  #define SUPPORTED_Backplane (1 << 16)
SUPPORTED_1000baseKX_Full  macro  include/uapi/linux/ethtool.h  926  #define SUPPORTED_1000baseKX_Full (1 << 17)
SUPPORTED_10000baseKX4_Full  macro  include/uapi/linux/ethtool.h  927  #define SUPPORTED_10000baseKX4_Full (1 << 18)
SUPPORTED_10000baseKR_Full  macro  include/uapi/linux/ethtool.h  928  #define SUPPORTED_10000baseKR_Full (1 << 19)
SUPPORTED_10000baseR_FEC  macro  include/uapi/linux/ethtool.h  929  #define SUPPORTED_10000baseR_FEC (1 << 20)
SUPPORTED_20000baseMLD2_Full  macro  include/uapi/linux/ethtool.h  930  #define SUPPORTED_20000baseMLD2_Full (1 << 21)
SUPPORTED_20000baseKR2_Full  macro  include/uapi/linux/ethtool.h  931  #define SUPPORTED_20000baseKR2_Full (1 << 22)
SUPPORTED_40000baseKR4_Full  macro  include/uapi/linux/ethtool.h  932  #define SUPPORTED_40000baseKR4_Full (1 << 23)
SUPPORTED_40000baseCR4_Full  macro  include/uapi/linux/ethtool.h  933  #define SUPPORTED_40000baseCR4_Full (1 << 24)
SUPPORTED_40000baseSR4_Full  macro  include/uapi/linux/ethtool.h  934  #define SUPPORTED_40000baseSR4_Full (1 << 25)
SUPPORTED_40000baseLR4_Full  macro  include/uapi/linux/ethtool.h  935  #define SUPPORTED_40000baseLR4_Full (1 << 26)
ADVERTISED_10baseT_Half  macro  include/uapi/linux/ethtool.h  938  #define ADVERTISED_10baseT_Half (1 << 0)
ADVERTISED_10baseT_Full  macro  include/uapi/linux/ethtool.h  939  #define ADVERTISED_10baseT_Full (1 << 1)
ADVERTISED_100baseT_Half  macro  include/uapi/linux/ethtool.h  940  #define ADVERTISED_100baseT_Half (1 << 2)
ADVERTISED_100baseT_Full  macro  include/uapi/linux/ethtool.h  941  #define ADVERTISED_100baseT_Full (1 << 3)
ADVERTISED_1000baseT_Half  macro  include/uapi/linux/ethtool.h  942  #define ADVERTISED_1000baseT_Half (1 << 4)
ADVERTISED_1000baseT_Full  macro  include/uapi/linux/ethtool.h  943  #define ADVERTISED_1000baseT_Full (1 << 5)
ADVERTISED_Autoneg  macro  include/uapi/linux/ethtool.h  944  #define ADVERTISED_Autoneg (1 << 6)
ADVERTISED_TP  macro  include/uapi/linux/ethtool.h  945  #define ADVERTISED_TP (1 << 7)
ADVERTISED_AUI  macro  include/uapi/linux/ethtool.h  946  #define ADVERTISED_AUI (1 << 8)
ADVERTISED_MII  macro  include/uapi/linux/ethtool.h  947  #define ADVERTISED_MII (1 << 9)
ADVERTISED_FIBRE  macro  include/uapi/linux/ethtool.h  948  #define ADVERTISED_FIBRE (1 << 10)
ADVERTISED_BNC  macro  include/uapi/linux/ethtool.h  949  #define ADVERTISED_BNC (1 << 11)
ADVERTISED_10000baseT_Full  macro  include/uapi/linux/ethtool.h  950  #define ADVERTISED_10000baseT_Full (1 << 12)
ADVERTISED_Pause  macro  include/uapi/linux/ethtool.h  951  #define ADVERTISED_Pause (1 << 13)
ADVERTISED_Asym_Pause  macro  include/uapi/linux/ethtool.h  952  #define ADVERTISED_Asym_Pause (1 << 14)
ADVERTISED_2500baseX_Full  macro  include/uapi/linux/ethtool.h  953  #define ADVERTISED_2500baseX_Full (1 << 15)
ADVERTISED_Backplane  macro  include/uapi/linux/ethtool.h  954  #define ADVERTISED_Backplane (1 << 16)
ADVERTISED_1000baseKX_Full  macro  include/uapi/linux/ethtool.h  955  #define ADVERTISED_1000baseKX_Full (1 << 17)
ADVERTISED_10000baseKX4_Full  macro  include/uapi/linux/ethtool.h  956  #define ADVERTISED_10000baseKX4_Full (1 << 18)
ADVERTISED_10000baseKR_Full  macro  include/uapi/linux/ethtool.h  957  #define ADVERTISED_10000baseKR_Full (1 << 19)
ADVERTISED_10000baseR_FEC  macro  include/uapi/linux/ethtool.h  958  #define ADVERTISED_10000baseR_FEC (1 << 20)
ADVERTISED_20000baseMLD2_Full  macro  include/uapi/linux/ethtool.h  959  #define ADVERTISED_20000baseMLD2_Full (1 << 21)
ADVERTISED_20000baseKR2_Full  macro  include/uapi/linux/ethtool.h  960  #define ADVERTISED_20000baseKR2_Full (1 << 22)
ADVERTISED_40000baseKR4_Full  macro  include/uapi/linux/ethtool.h  961  #define ADVERTISED_40000baseKR4_Full (1 << 23)
ADVERTISED_40000baseCR4_Full  macro  include/uapi/linux/ethtool.h  962  #define ADVERTISED_40000baseCR4_Full (1 << 24)
ADVERTISED_40000baseSR4_Full  macro  include/uapi/linux/ethtool.h  963  #define ADVERTISED_40000baseSR4_Full (1 << 25)
ADVERTISED_40000baseLR4_Full  macro  include/uapi/linux/ethtool.h  964  #define ADVERTISED_40000baseLR4_Full (1 << 26)
SPEED_10  macro  include/uapi/linux/ethtool.h  973  #define SPEED_10 10
SPEED_100  macro  include/uapi/linux/ethtool.h  974  #define SPEED_100 100
SPEED_1000  macro  include/uapi/linux/ethtool.h  975  #define SPEED_1000 1000
SPEED_2500  macro  include/uapi/linux/ethtool.h  976  #define SPEED_2500 2500
SPEED_10000  macro  include/uapi/linux/ethtool.h  977  #define SPEED_10000 10000
SPEED_UNKNOWN  macro  include/uapi/linux/ethtool.h  978  #define SPEED_UNKNOWN -1
DUPLEX_HALF  macro  include/uapi/linux/ethtool.h  981  #define DUPLEX_HALF 0x00
DUPLEX_FULL  macro  include/uapi/linux/ethtool.h  982  #define DUPLEX_FULL 0x01
DUPLEX_UNKNOWN  macro  include/uapi/linux/ethtool.h  983  #define DUPLEX_UNKNOWN 0xff
PORT_TP  macro  include/uapi/linux/ethtool.h  986  #define PORT_TP 0x00
PORT_AUI  macro  include/uapi/linux/ethtool.h  987  #define PORT_AUI 0x01
PORT_MII  macro  include/uapi/linux/ethtool.h  988  #define PORT_MII 0x02
PORT_FIBRE  macro  include/uapi/linux/ethtool.h  989  #define PORT_FIBRE 0x03
PORT_BNC  macro  include/uapi/linux/ethtool.h  990  #define PORT_BNC 0x04
PORT_DA  macro  include/uapi/linux/ethtool.h  991  #define PORT_DA 0x05
PORT_NONE  macro  include/uapi/linux/ethtool.h  992  #define PORT_NONE 0xef
PORT_OTHER  macro  include/uapi/linux/ethtool.h  993  #define PORT_OTHER 0xff
XCVR_INTERNAL  macro  include/uapi/linux/ethtool.h  996  #define XCVR_INTERNAL 0x00
XCVR_EXTERNAL  macro  include/uapi/linux/ethtool.h  997  #define XCVR_EXTERNAL 0x01
XCVR_DUMMY1  macro  include/uapi/linux/ethtool.h  998  #define XCVR_DUMMY1 0x02
XCVR_DUMMY2  macro  include/uapi/linux/ethtool.h  999  #define XCVR_DUMMY2 0x03
XCVR_DUMMY3  macro  include/uapi/linux/ethtool.h  1000  #define XCVR_DUMMY3 0x04
AUTONEG_DISABLE  macro  include/uapi/linux/ethtool.h  1005  #define AUTONEG_DISABLE 0x00
AUTONEG_ENABLE  macro  include/uapi/linux/ethtool.h  1006  #define AUTONEG_ENABLE 0x01
ETH_TP_MDI_INVALID  macro  include/uapi/linux/ethtool.h  1011  #define ETH_TP_MDI_INVALID 0x00
ETH_TP_MDI  macro  include/uapi/linux/ethtool.h  1012  #define ETH_TP_MDI 0x01
ETH_TP_MDI_X  macro  include/uapi/linux/ethtool.h  1013  #define ETH_TP_MDI_X 0x02
ETH_TP_MDI_AUTO  macro  include/uapi/linux/ethtool.h  1014  #define ETH_TP_MDI_AUTO 0x03
WAKE_PHY  macro  include/uapi/linux/ethtool.h  1017  #define WAKE_PHY (1 << 0)
WAKE_UCAST  macro  include/uapi/linux/ethtool.h  1018  #define WAKE_UCAST (1 << 1)
WAKE_MCAST  macro  include/uapi/linux/ethtool.h  1019  #define WAKE_MCAST (1 << 2)
WAKE_BCAST  macro  include/uapi/linux/ethtool.h  1020  #define WAKE_BCAST (1 << 3)
WAKE_ARP  macro  include/uapi/linux/ethtool.h  1021  #define WAKE_ARP (1 << 4)
WAKE_MAGIC  macro  include/uapi/linux/ethtool.h  1022  #define WAKE_MAGIC (1 << 5)
WAKE_MAGICSECURE  macro  include/uapi/linux/ethtool.h  1023  #define WAKE_MAGICSECURE (1 << 6)
TCP_V4_FLOW  macro  include/uapi/linux/ethtool.h  1026  #define TCP_V4_FLOW 0x01
UDP_V4_FLOW  macro  include/uapi/linux/ethtool.h  1027  #define UDP_V4_FLOW 0x02
SCTP_V4_FLOW  macro  include/uapi/linux/ethtool.h  1028  #define SCTP_V4_FLOW 0x03
AH_ESP_V4_FLOW  macro  include/uapi/linux/ethtool.h  1029  #define AH_ESP_V4_FLOW 0x04
TCP_V6_FLOW  macro  include/uapi/linux/ethtool.h  1030  #define TCP_V6_FLOW 0x05
UDP_V6_FLOW  macro  include/uapi/linux/ethtool.h  1031  #define UDP_V6_FLOW 0x06
SCTP_V6_FLOW  macro  include/uapi/linux/ethtool.h  1032  #define SCTP_V6_FLOW 0x07
AH_ESP_V6_FLOW  macro  include/uapi/linux/ethtool.h  1033  #define AH_ESP_V6_FLOW 0x08
AH_V4_FLOW  macro  include/uapi/linux/ethtool.h  1034  #define AH_V4_FLOW 0x09
ESP_V4_FLOW  macro  include/uapi/linux/ethtool.h  1035  #define ESP_V4_FLOW 0x0a
AH_V6_FLOW  macro  include/uapi/linux/ethtool.h  1036  #define AH_V6_FLOW 0x0b
ESP_V6_FLOW  macro  include/uapi/linux/ethtool.h  1037  #define ESP_V6_FLOW 0x0c
IP_USER_FLOW  macro  include/uapi/linux/ethtool.h  1038  #define IP_USER_FLOW 0x0d
IPV4_FLOW  macro  include/uapi/linux/ethtool.h  1039  #define IPV4_FLOW 0x10
IPV6_FLOW  macro  include/uapi/linux/ethtool.h  1040  #define IPV6_FLOW 0x11
ETHER_FLOW  macro  include/uapi/linux/ethtool.h  1041  #define ETHER_FLOW 0x12
FLOW_EXT  macro  include/uapi/linux/ethtool.h  1043  #define FLOW_EXT 0x80000000
FLOW_MAC_EXT  macro  include/uapi/linux/ethtool.h  1044  #define FLOW_MAC_EXT 0x40000000
RXH_L2DA  macro  include/uapi/linux/ethtool.h  1047  #define RXH_L2DA (1 << 1)
RXH_VLAN  macro  include/uapi/linux/ethtool.h  1048  #define RXH_VLAN (1 << 2)
RXH_L3_PROTO  macro  include/uapi/linux/ethtool.h  1049  #define RXH_L3_PROTO (1 << 3)
RXH_IP_SRC  macro  include/uapi/linux/ethtool.h  1050  #define RXH_IP_SRC (1 << 4)
RXH_IP_DST  macro  include/uapi/linux/ethtool.h  1051  #define RXH_IP_DST (1 << 5)
RXH_L4_B_0_1  macro  include/uapi/linux/ethtool.h  1052  #define RXH_L4_B_0_1 (1 << 6)
RXH_L4_B_2_3  macro  include/uapi/linux/ethtool.h  1053  #define RXH_L4_B_2_3 (1 << 7)
RXH_DISCARD  macro  include/uapi/linux/ethtool.h  1054  #define RXH_DISCARD (1 << 31)
RX_CLS_FLOW_DISC  macro  include/uapi/linux/ethtool.h  1056  #define RX_CLS_FLOW_DISC 0xffffffffffffffffULL
RX_CLS_LOC_SPECIAL  macro  include/uapi/linux/ethtool.h  1059  #define RX_CLS_LOC_SPECIAL 0x80000000
RX_CLS_LOC_ANY  macro  include/uapi/linux/ethtool.h  1060  #define RX_CLS_LOC_ANY 0xffffffff
RX_CLS_LOC_FIRST  macro  include/uapi/linux/ethtool.h  1061  #define RX_CLS_LOC_FIRST 0xfffffffe
RX_CLS_LOC_LAST  macro  include/uapi/linux/ethtool.h  1062  #define RX_CLS_LOC_LAST 0xfffffffd
ETH_MODULE_SFF_8079  macro  include/uapi/linux/ethtool.h  1065  #define ETH_MODULE_SFF_8079 0x1
ETH_MODULE_SFF_8079_LEN  macro  include/uapi/linux/ethtool.h  1066  #define ETH_MODULE_SFF_8079_LEN 256
ETH_MODULE_SFF_8472  macro  include/uapi/linux/ethtool.h  1067  #define ETH_MODULE_SFF_8472 0x2
ETH_MODULE_SFF_8472_LEN  macro  include/uapi/linux/ethtool.h  1068  #define ETH_MODULE_SFF_8472_LEN 512
ethtool_reset_flags  enum  include/uapi/linux/ethtool.h  1077  enum ethtool_reset_flags {
ETH_RESET_SHARED_SHIFT  macro  include/uapi/linux/ethtool.h  1098  #define ETH_RESET_SHARED_SHIFT 16
_LINUX_IF_H  macro  include/uapi/linux/if.h  20  #define _LINUX_IF_H
IFNAMSIZ  macro  include/uapi/linux/if.h  26  #define IFNAMSIZ 16
IFALIASZ  macro  include/uapi/linux/if.h  27  #define IFALIASZ 256
IFF_UP  macro  include/uapi/linux/if.h  31  #define IFF_UP 0x1
IFF_BROADCAST  macro  include/uapi/linux/if.h  32  #define IFF_BROADCAST 0x2
IFF_DEBUG  macro  include/uapi/linux/if.h  33  #define IFF_DEBUG 0x4
IFF_LOOPBACK  macro  include/uapi/linux/if.h  34  #define IFF_LOOPBACK 0x8
IFF_POINTOPOINT  macro  include/uapi/linux/if.h  35  #define IFF_POINTOPOINT 0x10
IFF_NOTRAILERS  macro  include/uapi/linux/if.h  36  #define IFF_NOTRAILERS 0x20
IFF_RUNNING  macro  include/uapi/linux/if.h  37  #define IFF_RUNNING 0x40
IFF_NOARP  macro  include/uapi/linux/if.h  38  #define IFF_NOARP 0x80
IFF_PROMISC  macro  include/uapi/linux/if.h  39  #define IFF_PROMISC 0x100
IFF_ALLMULTI  macro  include/uapi/linux/if.h  40  #define IFF_ALLMULTI 0x200
IFF_MASTER  macro  include/uapi/linux/if.h  42  #define IFF_MASTER 0x400
IFF_SLAVE  macro  include/uapi/linux/if.h  43  #define IFF_SLAVE 0x800
IFF_MULTICAST  macro  include/uapi/linux/if.h  45  #define IFF_MULTICAST 0x1000
IFF_PORTSEL  macro  include/uapi/linux/if.h  47  #define IFF_PORTSEL 0x2000
IFF_AUTOMEDIA  macro  include/uapi/linux/if.h  48  #define IFF_AUTOMEDIA 0x4000
IFF_DYNAMIC  macro  include/uapi/linux/if.h  49  #define IFF_DYNAMIC 0x8000
IFF_LOWER_UP  macro  include/uapi/linux/if.h  51  #define IFF_LOWER_UP 0x10000
IFF_DORMANT  macro  include/uapi/linux/if.h  52  #define IFF_DORMANT 0x20000
IFF_ECHO  macro  include/uapi/linux/if.h  54  #define IFF_ECHO 0x40000
IFF_VOLATILE  macro  include/uapi/linux/if.h  57  #define IFF_VOLATILE (IFF_LOOPBACK|IFF_POINTOPOINT|IFF_BROADCAST|IFF_ECHO| IFF_MASTER|IFF_SLAVE|IFF_RUNNING|IFF_LOWER_UP|IFF_DORMANT)
IFF_802_1Q_VLAN  macro  include/uapi/linux/if.h  60  #define IFF_802_1Q_VLAN 0x1
IFF_EBRIDGE  macro  include/uapi/linux/if.h  61  #define IFF_EBRIDGE 0x2
IFF_SLAVE_INACTIVE  macro  include/uapi/linux/if.h  62  #define IFF_SLAVE_INACTIVE 0x4
IFF_MASTER_8023AD  macro  include/uapi/linux/if.h  63  #define IFF_MASTER_8023AD 0x8
IFF_MASTER_ALB  macro  include/uapi/linux/if.h  64  #define IFF_MASTER_ALB 0x10
IFF_BONDING  macro  include/uapi/linux/if.h  65  #define IFF_BONDING 0x20
IFF_SLAVE_NEEDARP  macro  include/uapi/linux/if.h  66  #define IFF_SLAVE_NEEDARP 0x40
IFF_ISATAP  macro  include/uapi/linux/if.h  67  #define IFF_ISATAP 0x80
IFF_MASTER_ARPMON  macro  include/uapi/linux/if.h  68  #define IFF_MASTER_ARPMON 0x100
IFF_WAN_HDLC  macro  include/uapi/linux/if.h  69  #define IFF_WAN_HDLC 0x200
IFF_XMIT_DST_RELEASE  macro  include/uapi/linux/if.h  70  #define IFF_XMIT_DST_RELEASE 0x400
IFF_DONT_BRIDGE  macro  include/uapi/linux/if.h  73  #define IFF_DONT_BRIDGE 0x800
IFF_DISABLE_NETPOLL  macro  include/uapi/linux/if.h  74  #define IFF_DISABLE_NETPOLL 0x1000
IFF_MACVLAN_PORT  macro  include/uapi/linux/if.h  75  #define IFF_MACVLAN_PORT 0x2000
IFF_BRIDGE_PORT  macro  include/uapi/linux/if.h  76  #define IFF_BRIDGE_PORT 0x4000
IFF_OVS_DATAPATH  macro  include/uapi/linux/if.h  77  #define IFF_OVS_DATAPATH 0x8000
IFF_TX_SKB_SHARING  macro  include/uapi/linux/if.h  79  #define IFF_TX_SKB_SHARING 0x10000
IFF_UNICAST_FLT  macro  include/uapi/linux/if.h  81  #define IFF_UNICAST_FLT 0x20000
IFF_TEAM_PORT  macro  include/uapi/linux/if.h  82  #define IFF_TEAM_PORT 0x40000
IFF_SUPP_NOFCS  macro  include/uapi/linux/if.h  83  #define IFF_SUPP_NOFCS 0x80000
IFF_LIVE_ADDR_CHANGE  macro  include/uapi/linux/if.h  84  #define IFF_LIVE_ADDR_CHANGE 0x100000
IF_GET_IFACE  macro  include/uapi/linux/if.h  88  #define IF_GET_IFACE 0x0001
IF_GET_PROTO  macro  include/uapi/linux/if.h  89  #define IF_GET_PROTO 0x0002
IF_IFACE_V35  macro  include/uapi/linux/if.h  92  #define IF_IFACE_V35 0x1000
IF_IFACE_V24  macro  include/uapi/linux/if.h  93  #define IF_IFACE_V24 0x1001
IF_IFACE_X21  macro  include/uapi/linux/if.h  94  #define IF_IFACE_X21 0x1002
IF_IFACE_T1  macro  include/uapi/linux/if.h  95  #define IF_IFACE_T1 0x1003
IF_IFACE_E1  macro  include/uapi/linux/if.h  96  #define IF_IFACE_E1 0x1004
IF_IFACE_SYNC_SERIAL  macro  include/uapi/linux/if.h  97  #define IF_IFACE_SYNC_SERIAL 0x1005
IF_IFACE_X21D  macro  include/uapi/linux/if.h  98  #define IF_IFACE_X21D 0x1006
IF_PROTO_HDLC  macro  include/uapi/linux/if.h  101  #define IF_PROTO_HDLC 0x2000
IF_PROTO_PPP  macro  include/uapi/linux/if.h  102  #define IF_PROTO_PPP 0x2001
IF_PROTO_CISCO  macro  include/uapi/linux/if.h  103  #define IF_PROTO_CISCO 0x2002
IF_PROTO_FR  macro  include/uapi/linux/if.h  104  #define IF_PROTO_FR 0x2003
IF_PROTO_FR_ADD_PVC  macro  include/uapi/linux/if.h  105  #define IF_PROTO_FR_ADD_PVC 0x2004
IF_PROTO_FR_DEL_PVC  macro  include/uapi/linux/if.h  106  #define IF_PROTO_FR_DEL_PVC 0x2005
IF_PROTO_X25  macro  include/uapi/linux/if.h  107  #define IF_PROTO_X25 0x2006
IF_PROTO_HDLC_ETH  macro  include/uapi/linux/if.h  108  #define IF_PROTO_HDLC_ETH 0x2007
IF_PROTO_FR_ADD_ETH_PVC  macro  include/uapi/linux/if.h  109  #define IF_PROTO_FR_ADD_ETH_PVC 0x2008
IF_PROTO_FR_DEL_ETH_PVC  macro  include/uapi/linux/if.h  110  #define IF_PROTO_FR_DEL_ETH_PVC 0x2009
IF_PROTO_FR_PVC  macro  include/uapi/linux/if.h  111  #define IF_PROTO_FR_PVC 0x200A
IF_PROTO_FR_ETH_PVC  macro  include/uapi/linux/if.h  112  #define IF_PROTO_FR_ETH_PVC 0x200B
IF_PROTO_RAW  macro  include/uapi/linux/if.h  113  #define IF_PROTO_RAW 0x200C
ifmap  struct  include/uapi/linux/if.h  142  struct ifmap {
if_settings  struct  include/uapi/linux/if.h  152  struct if_settings {
ifreq  struct  include/uapi/linux/if.h  176  struct ifreq {
IFHWADDRLEN  macro  include/uapi/linux/if.h  177  #define IFHWADDRLEN 6
ifr_name  macro  include/uapi/linux/if.h  200  #define ifr_name ifr_ifrn.ifrn_name
ifr_hwaddr  macro  include/uapi/linux/if.h  201  #define ifr_hwaddr ifr_ifru.ifru_hwaddr
ifr_addr  macro  include/uapi/linux/if.h  202  #define ifr_addr ifr_ifru.ifru_addr
ifr_dstaddr  macro  include/uapi/linux/if.h  203  #define ifr_dstaddr ifr_ifru.ifru_dstaddr
ifr_broadaddr  macro  include/uapi/linux/if.h  204  #define ifr_broadaddr ifr_ifru.ifru_broadaddr
ifr_netmask  macro  include/uapi/linux/if.h  205  #define ifr_netmask ifr_ifru.ifru_netmask
ifr_flags  macro  include/uapi/linux/if.h  206  #define ifr_flags ifr_ifru.ifru_flags
ifr_metric  macro  include/uapi/linux/if.h  207  #define ifr_metric ifr_ifru.ifru_ivalue
ifr_mtu  macro  include/uapi/linux/if.h  208  #define ifr_mtu ifr_ifru.ifru_mtu
ifr_map  macro  include/uapi/linux/if.h  209  #define ifr_map ifr_ifru.ifru_map
ifr_slave  macro  include/uapi/linux/if.h  210  #define ifr_slave ifr_ifru.ifru_slave
ifr_data  macro  include/uapi/linux/if.h  211  #define ifr_data ifr_ifru.ifru_data
ifr_ifindex  macro  include/uapi/linux/if.h  212  #define ifr_ifindex ifr_ifru.ifru_ivalue
ifr_bandwidth  macro  include/uapi/linux/if.h  213  #define ifr_bandwidth ifr_ifru.ifru_ivalue
ifr_qlen  macro  include/uapi/linux/if.h  214  #define ifr_qlen ifr_ifru.ifru_ivalue
ifr_newname  macro  include/uapi/linux/if.h  215  #define ifr_newname ifr_ifru.ifru_newname
ifr_settings  macro  include/uapi/linux/if.h  216  #define ifr_settings ifr_ifru.ifru_settings
ifconf  struct  include/uapi/linux/if.h  225  struct ifconf {
ifc_buf  macro  include/uapi/linux/if.h  232  #define ifc_buf ifc_ifcu.ifcu_buf
ifc_req  macro  include/uapi/linux/if.h  233  #define ifc_req ifc_ifcu.ifcu_req
_UAPI__LINUX_MII_H__  macro  include/uapi/linux/mii.h  9  #define _UAPI__LINUX_MII_H__
MII_BMCR  macro  include/uapi/linux/mii.h  15  #define MII_BMCR 0x00
MII_BMSR  macro  include/uapi/linux/mii.h  16  #define MII_BMSR 0x01
MII_PHYSID1  macro  include/uapi/linux/mii.h  17  #define MII_PHYSID1 0x02
MII_PHYSID2  macro  include/uapi/linux/mii.h  18  #define MII_PHYSID2 0x03
MII_ADVERTISE  macro  include/uapi/linux/mii.h  19  #define MII_ADVERTISE 0x04
MII_LPA  macro  include/uapi/linux/mii.h  20  #define MII_LPA 0x05
MII_EXPANSION  macro  include/uapi/linux/mii.h  21  #define MII_EXPANSION 0x06
MII_CTRL1000  macro  include/uapi/linux/mii.h  22  #define MII_CTRL1000 0x09
MII_STAT1000  macro  include/uapi/linux/mii.h  23  #define MII_STAT1000 0x0a
MII_MMD_CTRL  macro  include/uapi/linux/mii.h  24  #define MII_MMD_CTRL 0x0d
MII_MMD_DATA  macro  include/uapi/linux/mii.h  25  #define MII_MMD_DATA 0x0e
MII_ESTATUS  macro  include/uapi/linux/mii.h  26  #define MII_ESTATUS 0x0f
MII_DCOUNTER  macro  include/uapi/linux/mii.h  27  #define MII_DCOUNTER 0x12
MII_FCSCOUNTER  macro  include/uapi/linux/mii.h  28  #define MII_FCSCOUNTER 0x13
MII_NWAYTEST  macro  include/uapi/linux/mii.h  29  #define MII_NWAYTEST 0x14
MII_RERRCOUNTER  macro  include/uapi/linux/mii.h  30  #define MII_RERRCOUNTER 0x15
MII_SREVISION  macro  include/uapi/linux/mii.h  31  #define MII_SREVISION 0x16
MII_RESV1  macro  include/uapi/linux/mii.h  32  #define MII_RESV1 0x17
MII_LBRERROR  macro  include/uapi/linux/mii.h  33  #define MII_LBRERROR 0x18
MII_PHYADDR  macro  include/uapi/linux/mii.h  34  #define MII_PHYADDR 0x19
MII_RESV2  macro  include/uapi/linux/mii.h  35  #define MII_RESV2 0x1a
MII_TPISTATUS  macro  include/uapi/linux/mii.h  36  #define MII_TPISTATUS 0x1b
MII_NCONFIG  macro  include/uapi/linux/mii.h  37  #define MII_NCONFIG 0x1c
BMCR_RESV  macro  include/uapi/linux/mii.h  40  #define BMCR_RESV 0x003f
BMCR_SPEED1000  macro  include/uapi/linux/mii.h  41  #define BMCR_SPEED1000 0x0040
BMCR_CTST  macro  include/uapi/linux/mii.h  42  #define BMCR_CTST 0x0080
BMCR_FULLDPLX  macro  include/uapi/linux/mii.h  43  #define BMCR_FULLDPLX 0x0100
BMCR_ANRESTART  macro  include/uapi/linux/mii.h  44  #define BMCR_ANRESTART 0x0200
BMCR_ISOLATE  macro  include/uapi/linux/mii.h  45  #define BMCR_ISOLATE 0x0400
BMCR_PDOWN  macro  include/uapi/linux/mii.h  46  #define BMCR_PDOWN 0x0800
BMCR_ANENABLE  macro  include/uapi/linux/mii.h  47  #define BMCR_ANENABLE 0x1000
BMCR_SPEED100  macro  include/uapi/linux/mii.h  48  #define BMCR_SPEED100 0x2000
BMCR_LOOPBACK  macro  include/uapi/linux/mii.h  49  #define BMCR_LOOPBACK 0x4000
BMCR_RESET  macro  include/uapi/linux/mii.h  50  #define BMCR_RESET 0x8000
BMSR_ERCAP  macro  include/uapi/linux/mii.h  53  #define BMSR_ERCAP 0x0001
BMSR_JCD  macro  include/uapi/linux/mii.h  54  #define BMSR_JCD 0x0002
BMSR_LSTATUS  macro  include/uapi/linux/mii.h  55  #define BMSR_LSTATUS 0x0004
BMSR_ANEGCAPABLE  macro  include/uapi/linux/mii.h  56  #define BMSR_ANEGCAPABLE 0x0008
BMSR_RFAULT  macro  include/uapi/linux/mii.h  57  #define BMSR_RFAULT 0x0010
BMSR_ANEGCOMPLETE  macro  include/uapi/linux/mii.h  58  #define BMSR_ANEGCOMPLETE 0x0020
BMSR_RESV  macro  include/uapi/linux/mii.h  59  #define BMSR_RESV 0x00c0
BMSR_ESTATEN  macro  include/uapi/linux/mii.h  60  #define BMSR_ESTATEN 0x0100
BMSR_100HALF2  macro  include/uapi/linux/mii.h  61  #define BMSR_100HALF2 0x0200
BMSR_100FULL2  macro  include/uapi/linux/mii.h  62  #define BMSR_100FULL2 0x0400
BMSR_10HALF  macro  include/uapi/linux/mii.h  63  #define BMSR_10HALF 0x0800
BMSR_10FULL  macro  include/uapi/linux/mii.h  64  #define BMSR_10FULL 0x1000
BMSR_100HALF  macro  include/uapi/linux/mii.h  65  #define BMSR_100HALF 0x2000
BMSR_100FULL  macro  include/uapi/linux/mii.h  66  #define BMSR_100FULL 0x4000
BMSR_100BASE4  macro  include/uapi/linux/mii.h  67  #define BMSR_100BASE4 0x8000
ADVERTISE_SLCT  macro  include/uapi/linux/mii.h  70  #define ADVERTISE_SLCT 0x001f
ADVERTISE_CSMA  macro  include/uapi/linux/mii.h  71  #define ADVERTISE_CSMA 0x0001
ADVERTISE_10HALF  macro  include/uapi/linux/mii.h  72  #define ADVERTISE_10HALF 0x0020
ADVERTISE_1000XFULL  macro  include/uapi/linux/mii.h  73  #define ADVERTISE_1000XFULL 0x0020
ADVERTISE_10FULL  macro  include/uapi/linux/mii.h  74  #define ADVERTISE_10FULL 0x0040
ADVERTISE_1000XHALF  macro  include/uapi/linux/mii.h  75  #define ADVERTISE_1000XHALF 0x0040
ADVERTISE_100HALF  macro  include/uapi/linux/mii.h  76  #define ADVERTISE_100HALF 0x0080
ADVERTISE_1000XPAUSE  macro  include/uapi/linux/mii.h  77  #define ADVERTISE_1000XPAUSE 0x0080
ADVERTISE_100FULL  macro  include/uapi/linux/mii.h  78  #define ADVERTISE_100FULL 0x0100
ADVERTISE_1000XPSE_ASYM  macro  include/uapi/linux/mii.h  79  #define ADVERTISE_1000XPSE_ASYM 0x0100
ADVERTISE_100BASE4  macro  include/uapi/linux/mii.h  80  #define ADVERTISE_100BASE4 0x0200
ADVERTISE_PAUSE_CAP  macro  include/uapi/linux/mii.h  81  #define ADVERTISE_PAUSE_CAP 0x0400
ADVERTISE_PAUSE_ASYM  macro  include/uapi/linux/mii.h  82  #define ADVERTISE_PAUSE_ASYM 0x0800
ADVERTISE_RESV  macro  include/uapi/linux/mii.h  83  #define ADVERTISE_RESV 0x1000
ADVERTISE_RFAULT  macro  include/uapi/linux/mii.h  84  #define ADVERTISE_RFAULT 0x2000
ADVERTISE_LPACK  macro  include/uapi/linux/mii.h  85  #define ADVERTISE_LPACK 0x4000
ADVERTISE_NPAGE  macro  include/uapi/linux/mii.h  86  #define ADVERTISE_NPAGE 0x8000
ADVERTISE_FULL  macro  include/uapi/linux/mii.h  89  #define ADVERTISE_FULL (ADVERTISE_100FULL | ADVERTISE_10FULL | ADVERTISE_CSMA)
ADVERTISE_ALL  macro  include/uapi/linux/mii.h  91  #define ADVERTISE_ALL (ADVERTISE_10HALF | ADVERTISE_10FULL | ADVERTISE_100HALF | ADVERTISE_100FULL)
LPA_SLCT  macro  include/uapi/linux/mii.h  94  #define LPA_SLCT 0x001f
LPA_10HALF  macro  include/uapi/linux/mii.h  95  #define LPA_10HALF 0x0020
LPA_1000XFULL  macro  include/uapi/linux/mii.h  96  #define LPA_1000XFULL 0x0020
LPA_10FULL  macro  include/uapi/linux/mii.h  97  #define LPA_10FULL 0x0040
LPA_1000XHALF  macro  include/uapi/linux/mii.h  98  #define LPA_1000XHALF 0x0040
LPA_100HALF  macro  include/uapi/linux/mii.h  99  #define LPA_100HALF 0x0080
LPA_1000XPAUSE  macro  include/uapi/linux/mii.h  100  #define LPA_1000XPAUSE 0x0080
LPA_100FULL  macro  include/uapi/linux/mii.h  101  #define LPA_100FULL 0x0100
LPA_1000XPAUSE_ASYM  macro  include/uapi/linux/mii.h  102  #define LPA_1000XPAUSE_ASYM 0x0100
LPA_100BASE4  macro  include/uapi/linux/mii.h  103  #define LPA_100BASE4 0x0200
LPA_PAUSE_CAP  macro  include/uapi/linux/mii.h  104  #define LPA_PAUSE_CAP 0x0400
LPA_PAUSE_ASYM  macro  include/uapi/linux/mii.h  105  #define LPA_PAUSE_ASYM 0x0800
LPA_RESV  macro  include/uapi/linux/mii.h  106  #define LPA_RESV 0x1000
LPA_RFAULT  macro  include/uapi/linux/mii.h  107  #define LPA_RFAULT 0x2000
LPA_LPACK  macro  include/uapi/linux/mii.h  108  #define LPA_LPACK 0x4000
LPA_NPAGE  macro  include/uapi/linux/mii.h  109  #define LPA_NPAGE 0x8000
LPA_DUPLEX  macro  include/uapi/linux/mii.h  111  #define LPA_DUPLEX (LPA_10FULL | LPA_100FULL)
LPA_100  macro  include/uapi/linux/mii.h  112  #define LPA_100 (LPA_100FULL | LPA_100HALF | LPA_100BASE4)
EXPANSION_NWAY  macro  include/uapi/linux/mii.h  115  #define EXPANSION_NWAY 0x0001
EXPANSION_LCWP  macro  include/uapi/linux/mii.h  116  #define EXPANSION_LCWP 0x0002
EXPANSION_ENABLENPAGE  macro  include/uapi/linux/mii.h  117  #define EXPANSION_ENABLENPAGE 0x0004
EXPANSION_NPCAPABLE  macro  include/uapi/linux/mii.h  118  #define EXPANSION_NPCAPABLE 0x0008
EXPANSION_MFAULTS  macro  include/uapi/linux/mii.h  119  #define EXPANSION_MFAULTS 0x0010
EXPANSION_RESV  macro  include/uapi/linux/mii.h  120  #define EXPANSION_RESV 0xffe0
ESTATUS_1000_TFULL  macro  include/uapi/linux/mii.h  122  #define ESTATUS_1000_TFULL 0x2000
ESTATUS_1000_THALF  macro  include/uapi/linux/mii.h  123  #define ESTATUS_1000_THALF 0x1000
NWAYTEST_RESV1  macro  include/uapi/linux/mii.h  126  #define NWAYTEST_RESV1 0x00ff
NWAYTEST_LOOPBACK  macro  include/uapi/linux/mii.h  127  #define NWAYTEST_LOOPBACK 0x0100
NWAYTEST_RESV2  macro  include/uapi/linux/mii.h  128  #define NWAYTEST_RESV2 0xfe00
ADVERTISE_1000FULL  macro  include/uapi/linux/mii.h  131  #define ADVERTISE_1000FULL 0x0200
ADVERTISE_1000HALF  macro  include/uapi/linux/mii.h  132  #define ADVERTISE_1000HALF 0x0100
CTL1000_AS_MASTER  macro  include/uapi/linux/mii.h  133  #define CTL1000_AS_MASTER 0x0800
CTL1000_ENABLE_MASTER  macro  include/uapi/linux/mii.h  134  #define CTL1000_ENABLE_MASTER 0x1000
LPA_1000LOCALRXOK  macro  include/uapi/linux/mii.h  137  #define LPA_1000LOCALRXOK 0x2000
LPA_1000REMRXOK  macro  include/uapi/linux/mii.h  138  #define LPA_1000REMRXOK 0x1000
LPA_1000FULL  macro  include/uapi/linux/mii.h  139  #define LPA_1000FULL 0x0800
LPA_1000HALF  macro  include/uapi/linux/mii.h  140  #define LPA_1000HALF 0x0400
FLOW_CTRL_TX  macro  include/uapi/linux/mii.h  143  #define FLOW_CTRL_TX 0x01
FLOW_CTRL_RX  macro  include/uapi/linux/mii.h  144  #define FLOW_CTRL_RX 0x02
MII_MMD_CTRL_DEVAD_MASK  macro  include/uapi/linux/mii.h  147  #define MII_MMD_CTRL_DEVAD_MASK 0x1f
MII_MMD_CTRL_ADDR  macro  include/uapi/linux/mii.h  148  #define MII_MMD_CTRL_ADDR 0x0000
MII_MMD_CTRL_NOINCR  macro  include/uapi/linux/mii.h  149  #define MII_MMD_CTRL_NOINCR 0x4000
MII_MMD_CTRL_INCR_RDWT  macro  include/uapi/linux/mii.h  150  #define MII_MMD_CTRL_INCR_RDWT 0x8000
MII_MMD_CTRL_INCR_ON_WT  macro  include/uapi/linux/mii.h  151  #define MII_MMD_CTRL_INCR_ON_WT 0xC000
mii_ioctl_data  struct  include/uapi/linux/mii.h  154  struct mii_ioctl_data {
_LINUX_BITREV_H  macro  include/linux/bitrev.h  2  #define _LINUX_BITREV_H
bitrev8  function  include/linux/bitrev.h  8  static inline u8 bitrev8(u8 byte)
bitrev16  prototype  include/linux/bitrev.h  13  extern u16 bitrev16(u16 in);
bitrev32  prototype  include/linux/bitrev.h  14  extern u32 bitrev32(u32 in);
_LINUX_PM_QOS_H  macro  include/linux/pm_qos.h  2  #define _LINUX_PM_QOS_H
pm_qos_flags_status  enum  include/linux/pm_qos.h  23  enum pm_qos_flags_status {
PM_QOS_DEFAULT_VALUE  macro  include/linux/pm_qos.h  30  #define PM_QOS_DEFAULT_VALUE -1
PM_QOS_CPU_DMA_LAT_DEFAULT_VALUE  macro  include/linux/pm_qos.h  32  #define PM_QOS_CPU_DMA_LAT_DEFAULT_VALUE (2000 * USEC_PER_SEC)
PM_QOS_NETWORK_LAT_DEFAULT_VALUE  macro  include/linux/pm_qos.h  33  #define PM_QOS_NETWORK_LAT_DEFAULT_VALUE (2000 * USEC_PER_SEC)
PM_QOS_NETWORK_THROUGHPUT_DEFAULT_VALUE  macro  include/linux/pm_qos.h  34  #define PM_QOS_NETWORK_THROUGHPUT_DEFAULT_VALUE 0
PM_QOS_DEV_LAT_DEFAULT_VALUE  macro  include/linux/pm_qos.h  35  #define PM_QOS_DEV_LAT_DEFAULT_VALUE 0
PM_QOS_FLAG_NO_POWER_OFF  macro  include/linux/pm_qos.h  37  #define PM_QOS_FLAG_NO_POWER_OFF (1 << 0)
PM_QOS_FLAG_REMOTE_WAKEUP  macro  include/linux/pm_qos.h  38  #define PM_QOS_FLAG_REMOTE_WAKEUP (1 << 1)
pm_qos_request  prototype  include/linux/pm_qos.h  121  int pm_qos_request(int pm_qos_class);
pm_qos_flags_request  struct  include/linux/pm_qos.h  46  struct pm_qos_flags_request {
dev_pm_qos_req_type  enum  include/linux/pm_qos.h  51  enum dev_pm_qos_req_type {
dev_pm_qos_request  struct  include/linux/pm_qos.h  56  struct dev_pm_qos_request {
pm_qos_type  enum  include/linux/pm_qos.h  65  enum pm_qos_type {
pm_qos_constraints  struct  include/linux/pm_qos.h  76  struct pm_qos_constraints {
pm_qos_flags  struct  include/linux/pm_qos.h  84  struct pm_qos_flags {
dev_pm_qos  struct  include/linux/pm_qos.h  89  struct dev_pm_qos {
pm_qos_req_action  enum  include/linux/pm_qos.h  97  enum pm_qos_req_action {
dev_pm_qos_request_active  function  include/linux/pm_qos.h  103  static inline int dev_pm_qos_request_active(struct dev_pm_qos_request *req)
pm_qos_update_target  prototype  include/linux/pm_qos.h  109  int pm_qos_update_target(struct pm_qos_constraints *c,struct plist_node *node,enum pm_qos_req_action action, int value);
pm_qos_update_flags  prototype  include/linux/pm_qos.h  112  bool pm_qos_update_flags(struct pm_qos_flags *pqf,struct pm_qos_flags_request *req,enum pm_qos_req_action action, s32 val);
pm_qos_add_request  prototype  include/linux/pm_qos.h  114  void pm_qos_add_request(struct pm_qos_request *req,int pm_qos_class,s32 value);
pm_qos_update_request  prototype  include/linux/pm_qos.h  116  void pm_qos_update_request(struct pm_qos_request *req,s32 new_value);
pm_qos_update_request_timeout  prototype  include/linux/pm_qos.h  118  void pm_qos_update_request_timeout(struct pm_qos_request *req,s32 new_value, unsigned long timeout_us);
pm_qos_remove_request  prototype  include/linux/pm_qos.h  119  void pm_qos_remove_request(struct pm_qos_request *req);
pm_qos_add_notifier  prototype  include/linux/pm_qos.h  122  int pm_qos_add_notifier(int pm_qos_class,struct notifier_block *notifier);
pm_qos_remove_notifier  prototype  include/linux/pm_qos.h  123  int pm_qos_remove_notifier(int pm_qos_class,struct notifier_block *notifier);
pm_qos_request_active  prototype  include/linux/pm_qos.h  124  int pm_qos_request_active(struct pm_qos_request *req);
pm_qos_read_value  prototype  include/linux/pm_qos.h  125  s32 pm_qos_read_value(struct pm_qos_constraints *c);
__dev_pm_qos_flags  function  include/linux/pm_qos.h  148  static inline enum pm_qos_flags_status __dev_pm_qos_flags(struct device *dev,s32 mask)
dev_pm_qos_flags  function  include/linux/pm_qos.h  151  static inline enum pm_qos_flags_status dev_pm_qos_flags(struct device *dev,s32 mask)
__dev_pm_qos_read_value  function  include/linux/pm_qos.h  153  static inline s32 __dev_pm_qos_read_value(struct device *dev)
dev_pm_qos_read_value  function  include/linux/pm_qos.h  155  static inline s32 dev_pm_qos_read_value(struct device *dev)
dev_pm_qos_add_request  function  include/linux/pm_qos.h  160  static inline int dev_pm_qos_add_request(struct device *dev,struct dev_pm_qos_request *req,enum dev_pm_qos_req_type type,s32 value)
dev_pm_qos_update_request  function  include/linux/pm_qos.h  163  static inline int dev_pm_qos_update_request(struct dev_pm_qos_request *req,s32 new_value)
dev_pm_qos_remove_request  function  include/linux/pm_qos.h  165  static inline int dev_pm_qos_remove_request(struct dev_pm_qos_request *req)
dev_pm_qos_add_notifier  function  include/linux/pm_qos.h  168  static inline int dev_pm_qos_add_notifier(struct device *dev,struct notifier_block *notifier)
dev_pm_qos_remove_notifier  function  include/linux/pm_qos.h  171  static inline int dev_pm_qos_remove_notifier(struct device *dev,struct notifier_block *notifier)
dev_pm_qos_add_global_notifier  function  include/linux/pm_qos.h  173  static inline int dev_pm_qos_add_global_notifier(
dev_pm_qos_remove_global_notifier  function  include/linux/pm_qos.h  176  static inline int dev_pm_qos_remove_global_notifier(
dev_pm_qos_constraints_init  function  include/linux/pm_qos.h  179  static inline void dev_pm_qos_constraints_init(struct device *dev)
dev_pm_qos_constraints_destroy  function  include/linux/pm_qos.h  183  static inline void dev_pm_qos_constraints_destroy(struct device *dev)
dev_pm_qos_add_ancestor_request  function  include/linux/pm_qos.h  188  static inline int dev_pm_qos_add_ancestor_request(struct device *dev,struct dev_pm_qos_request *req, s32 value)
dev_pm_qos_expose_latency_limit  function  include/linux/pm_qos.h  209  static inline int dev_pm_qos_expose_latency_limit(struct device *dev,s32 value)
dev_pm_qos_hide_latency_limit  function  include/linux/pm_qos.h  211  static inline void dev_pm_qos_hide_latency_limit(struct device *dev) {}
dev_pm_qos_expose_flags  function  include/linux/pm_qos.h  212  static inline int dev_pm_qos_expose_flags(struct device *dev,s32 value)
dev_pm_qos_hide_flags  function  include/linux/pm_qos.h  214  static inline void dev_pm_qos_hide_flags(struct device *dev) {}
dev_pm_qos_update_flags  function  include/linux/pm_qos.h  215  static inline int dev_pm_qos_update_flags(struct device *dev,s32 m,bool set)
dev_pm_qos_requested_latency  function  include/linux/pm_qos.h  218  static inline s32 dev_pm_qos_requested_latency(struct device *dev) { return 0; }
dev_pm_qos_requested_flags  function  include/linux/pm_qos.h  219  static inline s32 dev_pm_qos_requested_flags(struct device *dev) { return 0; }
_LINUX_BUG_H  macro  include/linux/bug.h  2  #define _LINUX_BUG_H
bug_trap_type  enum  include/linux/bug.h  6  enum bug_trap_type {
BUILD_BUG_ON_NOT_POWER_OF_2  macro  include/linux/bug.h  25  #define BUILD_BUG_ON_NOT_POWER_OF_2(n) BUILD_BUG_ON((n) == 0 || (((n) & ((n) - 1)) != 0))
BUILD_BUG_ON_ZERO  macro  include/linux/bug.h  31  #define BUILD_BUG_ON_ZERO(e) (sizeof(struct { int:-!!(e); }))
BUILD_BUG_ON_NULL  macro  include/linux/bug.h  32  #define BUILD_BUG_ON_NULL(e) ((void *)sizeof(struct { int:-!!(e); }))
BUILD_BUG_ON_INVALID  macro  include/linux/bug.h  39  #define BUILD_BUG_ON_INVALID(e) ((void)(sizeof((__force long)(e))))
BUILD_BUG_ON  macro  include/linux/bug.h  64  #define BUILD_BUG_ON(condition) do { ((void)sizeof(char[1 - 2*!!(condition)])); if (condition) __build_bug_on_failed = 1; } while(0)
BUILD_BUG  macro  include/linux/bug.h  79  #define BUILD_BUG() do { extern void __build_bug_failed(void) __linktime_error("BUILD_BUG failed"); __build_bug_failed(); } while (0)
is_warning_bug  function  include/linux/bug.h  86  static inline int is_warning_bug(const struct bug_entry *bug)
find_bug  prototype  include/linux/bug.h  91  const struct bug_entry *find_bug(unsigned long bugaddr);
report_bug  function  include/linux/bug.h  101  static inline enum bug_trap_type report_bug(unsigned long bug_addr,struct pt_regs *regs)
is_valid_bugaddr  prototype  include/linux/bug.h  96  int is_valid_bugaddr(unsigned long addr);
_ASM_X86_CACHE_H  macro  arch/x86/include/asm/cache.h  2  #define _ASM_X86_CACHE_H
L1_CACHE_SHIFT  macro  arch/x86/include/asm/cache.h  7  #define L1_CACHE_SHIFT (CONFIG_X86_L1_CACHE_SHIFT)
L1_CACHE_BYTES  macro  arch/x86/include/asm/cache.h  8  #define L1_CACHE_BYTES (1 << L1_CACHE_SHIFT)
INTERNODE_CACHE_BYTES  macro  arch/x86/include/asm/cache.h  13  #define INTERNODE_CACHE_BYTES (1 << INTERNODE_CACHE_SHIFT)
LINUX_DMAENGINE_H  macro  include/linux/dmaengine.h  22  #define LINUX_DMAENGINE_H
DMA_MIN_COOKIE  macro  include/linux/dmaengine.h  38  #define DMA_MIN_COOKIE 1
DMA_MAX_COOKIE  macro  include/linux/dmaengine.h  39  #define DMA_MAX_COOKIE INT_MAX
dma_submit_error  macro  include/linux/dmaengine.h  41  #define dma_submit_error(cookie) ((cookie) < 0 ? 1 : 0)
dma_status  enum  include/linux/dmaengine.h  50  enum dma_status {
dma_transaction_type  enum  include/linux/dmaengine.h  63  enum dma_transaction_type {
dma_transfer_direction  enum  include/linux/dmaengine.h  88  enum dma_transfer_direction {
data_chunk  struct  include/linux/dmaengine.h  128  struct data_chunk {
dma_interleaved_template  struct  include/linux/dmaengine.h  151  struct dma_interleaved_template {
dma_ctrl_flags  enum  include/linux/dmaengine.h  186  enum dma_ctrl_flags {
dma_ctrl_cmd  enum  include/linux/dmaengine.h  213  enum dma_ctrl_cmd {
sum_check_bits  enum  include/linux/dmaengine.h  224  enum sum_check_bits {
sum_check_flags  enum  include/linux/dmaengine.h  234  enum sum_check_flags {
dma_chan_percpu  struct  include/linux/dmaengine.h  252  struct dma_chan_percpu {
dma_chan  struct  include/linux/dmaengine.h  271  struct dma_chan {
dma_chan_dev  struct  include/linux/dmaengine.h  294  struct dma_chan_dev {
dma_slave_buswidth  enum  include/linux/dmaengine.h  305  enum dma_slave_buswidth {
dma_slave_config  struct  include/linux/dmaengine.h  362  struct dma_slave_config {
dma_chan_name  function  include/linux/dmaengine.h  374  static inline const char *dma_chan_name(struct dma_chan *chan)
dma_chan_cleanup  prototype  include/linux/dmaengine.h  379  void dma_chan_cleanup(struct kref *kref);
dma_async_tx_descriptor  struct  include/linux/dmaengine.h  412  struct dma_async_tx_descriptor {
txd_lock  function  include/linux/dmaengine.h  454  static inline void txd_lock(struct dma_async_tx_descriptor *txd)
txd_unlock  function  include/linux/dmaengine.h  458  static inline void txd_unlock(struct dma_async_tx_descriptor *txd)
txd_chain  function  include/linux/dmaengine.h  462  static inline void txd_chain(struct dma_async_tx_descriptor *txd,struct dma_async_tx_descriptor *next)
txd_clear_parent  function  include/linux/dmaengine.h  467  static inline void txd_clear_parent(struct dma_async_tx_descriptor *txd)
txd_clear_next  function  include/linux/dmaengine.h  471  static inline void txd_clear_next(struct dma_async_tx_descriptor *txd)
txd_next  function  include/linux/dmaengine.h  479  static inline struct dma_async_tx_descriptor *txd_next(struct dma_async_tx_descriptor *txd)
txd_parent  function  include/linux/dmaengine.h  475  static inline struct dma_async_tx_descriptor *txd_parent(struct dma_async_tx_descriptor *txd)
dma_tx_state  struct  include/linux/dmaengine.h  494  struct dma_tx_state {
dma_device  struct  include/linux/dmaengine.h  538  struct dma_device {
DMA_HAS_PQ_CONTINUE  macro  include/linux/dmaengine.h  551  #define DMA_HAS_PQ_CONTINUE (1 << 15)
dmaengine_device_control  function  include/linux/dmaengine.h  609  static inline int dmaengine_device_control(struct dma_chan *chan,enum dma_ctrl_cmd cmd,unsigned long arg)
dmaengine_slave_config  function  include/linux/dmaengine.h  615  static inline int dmaengine_slave_config(struct dma_chan *chan,struct dma_slave_config *config)
dmaengine_prep_slave_single  function  include/linux/dmaengine.h  621  static inline struct dma_async_tx_descriptor *dmaengine_prep_slave_single(
dmaengine_prep_slave_sg  function  include/linux/dmaengine.h  634  static inline struct dma_async_tx_descriptor *dmaengine_prep_slave_sg(
dmaengine_prep_rio_sg  function  include/linux/dmaengine.h  644  static inline struct dma_async_tx_descriptor *dmaengine_prep_rio_sg(
dmaengine_prep_dma_cyclic  function  include/linux/dmaengine.h  654  static inline struct dma_async_tx_descriptor *dmaengine_prep_dma_cyclic(
dmaengine_terminate_all  function  include/linux/dmaengine.h  663  static inline int dmaengine_terminate_all(struct dma_chan *chan)
dmaengine_pause  function  include/linux/dmaengine.h  668  static inline int dmaengine_pause(struct dma_chan *chan)
dmaengine_resume  function  include/linux/dmaengine.h  673  static inline int dmaengine_resume(struct dma_chan *chan)
dmaengine_tx_status  function  include/linux/dmaengine.h  679  static inline enum dma_status dmaengine_tx_status(struct dma_chan *chan,dma_cookie_t cookie, struct dma_tx_state *state)
dmaengine_submit  function  include/linux/dmaengine.h  684  static inline dma_cookie_t dmaengine_submit(struct dma_async_tx_descriptor *desc)
dmaengine_check_align  function  include/linux/dmaengine.h  689  static inline bool dmaengine_check_align(u8 align,size_t off1,size_t off2,size_t len)
is_dma_copy_aligned  function  include/linux/dmaengine.h  702  static inline bool is_dma_copy_aligned(struct dma_device *dev,size_t off1,size_t off2, size_t len)
is_dma_xor_aligned  function  include/linux/dmaengine.h  708  static inline bool is_dma_xor_aligned(struct dma_device *dev,size_t off1,size_t off2, size_t len)
is_dma_pq_aligned  function  include/linux/dmaengine.h  714  static inline bool is_dma_pq_aligned(struct dma_device *dev,size_t off1,size_t off2, size_t len)
is_dma_fill_aligned  function  include/linux/dmaengine.h  720  static inline bool is_dma_fill_aligned(struct dma_device *dev,size_t off1,size_t off2, size_t len)
dma_set_maxpq  function  include/linux/dmaengine.h  726  dma_set_maxpq(struct dma_device *dma,int maxpq,int has_pq_continue)
dmaf_continue  function  include/linux/dmaengine.h  733  static inline bool dmaf_continue(enum dma_ctrl_flags flags)
dmaf_p_disabled_continue  function  include/linux/dmaengine.h  738  static inline bool dmaf_p_disabled_continue(enum dma_ctrl_flags flags)
dma_dev_has_pq_continue  function  include/linux/dmaengine.h  745  static inline bool dma_dev_has_pq_continue(struct dma_device *dma)
dma_dev_to_maxpq  function  include/linux/dmaengine.h  750  static inline unsigned short dma_dev_to_maxpq(struct dma_device *dma)
dma_maxpq  function  include/linux/dmaengine.h  768  static inline int dma_maxpq(struct dma_device *dma,enum dma_ctrl_flags flags)
dmaengine_get  function  include/linux/dmaengine.h  785  static inline void dmaengine_get(void)
dmaengine_put  function  include/linux/dmaengine.h  788  static inline void dmaengine_put(void)
net_dmaengine_get  function  include/linux/dmaengine.h  797  static inline void net_dmaengine_get(void)
net_dmaengine_put  function  include/linux/dmaengine.h  800  static inline void net_dmaengine_put(void)
async_dmaengine_get  function  include/linux/dmaengine.h  814  static inline void async_dmaengine_get(void)
async_dmaengine_put  function  include/linux/dmaengine.h  817  static inline void async_dmaengine_put(void)
async_dma_find_channel  function  include/linux/dmaengine.h  821  async_dma_find_channel(enum dma_transaction_type type)
dma_async_memcpy_buf_to_buf  prototype  include/linux/dmaengine.h  828  dma_cookie_t dma_async_memcpy_buf_to_buf(struct dma_chan *chan,void *dest, void *src, size_t len);
dma_async_memcpy_buf_to_pg  prototype  include/linux/dmaengine.h  830  dma_cookie_t dma_async_memcpy_buf_to_pg(struct dma_chan *chan,struct page *page, unsigned int offset, void *kdata, size_t len);
dma_async_memcpy_pg_to_pg  prototype  include/linux/dmaengine.h  833  dma_cookie_t dma_async_memcpy_pg_to_pg(struct dma_chan *chan,struct page *dest_pg, unsigned int dest_off, struct page *src_pg,unsigned int src_off, size_t len);
dma_async_tx_descriptor_init  prototype  include/linux/dmaengine.h  835  void dma_async_tx_descriptor_init(struct dma_async_tx_descriptor *tx,struct dma_chan *chan);
async_tx_ack  function  include/linux/dmaengine.h  837  static inline void async_tx_ack(struct dma_async_tx_descriptor *tx)
async_tx_clear_ack  function  include/linux/dmaengine.h  842  static inline void async_tx_clear_ack(struct dma_async_tx_descriptor *tx)
async_tx_test_ack  function  include/linux/dmaengine.h  847  static inline bool async_tx_test_ack(struct dma_async_tx_descriptor *tx)
first_dma_cap  macro  include/linux/dmaengine.h  852  #define first_dma_cap(mask) __first_dma_cap(&(mask))
__first_dma_cap  function  include/linux/dmaengine.h  853  static inline int __first_dma_cap(const dma_cap_mask_t *srcp)
next_dma_cap  macro  include/linux/dmaengine.h  859  #define next_dma_cap(n,mask) __next_dma_cap((n),&(mask))
__next_dma_cap  function  include/linux/dmaengine.h  860  static inline int __next_dma_cap(int n,const dma_cap_mask_t *srcp)
dma_cap_set  macro  include/linux/dmaengine.h  866  #define dma_cap_set(tx,mask) __dma_cap_set((tx),&(mask))
__dma_cap_set  function  include/linux/dmaengine.h  868  __dma_cap_set(enum dma_transaction_type tx_type,dma_cap_mask_t *dstp)
dma_cap_clear  macro  include/linux/dmaengine.h  873  #define dma_cap_clear(tx,mask) __dma_cap_clear((tx),&(mask))
__dma_cap_clear  function  include/linux/dmaengine.h  875  __dma_cap_clear(enum dma_transaction_type tx_type,dma_cap_mask_t *dstp)
dma_cap_zero  macro  include/linux/dmaengine.h  880  #define dma_cap_zero(mask) __dma_cap_zero(&(mask))
__dma_cap_zero  function  include/linux/dmaengine.h  881  static inline void __dma_cap_zero(dma_cap_mask_t *dstp)
dma_has_cap  macro  include/linux/dmaengine.h  886  #define dma_has_cap(tx,mask) __dma_has_cap((tx),&(mask))
__dma_has_cap  function  include/linux/dmaengine.h  888  __dma_has_cap(enum dma_transaction_type tx_type,dma_cap_mask_t *srcp)
for_each_dma_cap_mask  macro  include/linux/dmaengine.h  896  #define for_each_dma_cap_mask(cap,mask) for ((cap) = first_dma_cap(mask); (cap) < DMA_TX_TYPE_END; (cap) = next_dma_cap((cap), (mask)))
dma_async_issue_pending  function  include/linux/dmaengine.h  905  static inline void dma_async_issue_pending(struct dma_chan *chan)
dma_async_memcpy_issue_pending  macro  include/linux/dmaengine.h  910  #define dma_async_memcpy_issue_pending(chan) dma_async_issue_pending(chan)
dma_async_is_tx_complete  function  include/linux/dmaengine.h  924  static inline enum dma_status dma_async_is_tx_complete(struct dma_chan *chan,dma_cookie_t cookie, dma_cookie_t *last, dma_cookie_t *used)
dma_async_memcpy_complete  macro  include/linux/dmaengine.h  938  #define dma_async_memcpy_complete(chan,cookie,last,used) dma_async_is_tx_complete(chan, cookie, last, used)
dma_async_is_complete  function  include/linux/dmaengine.h  950  static inline enum dma_status dma_async_is_complete(dma_cookie_t cookie,dma_cookie_t last_complete, dma_cookie_t last_used)
dma_set_tx_state  function  include/linux/dmaengine.h  963  dma_set_tx_state(struct dma_tx_state *st,dma_cookie_t last,dma_cookie_t used,u32 residue)
dma_sync_wait  prototype  include/linux/dmaengine.h  972  enum dma_status dma_sync_wait(struct dma_chan *chan,dma_cookie_t cookie);
dma_wait_for_async_tx  function  include/linux/dmaengine.h  979  static inline enum dma_status dma_wait_for_async_tx(struct dma_async_tx_descriptor *tx)
dma_issue_pending_all  function  include/linux/dmaengine.h  983  static inline void dma_issue_pending_all(void)
__dma_request_channel  function  include/linux/dmaengine.h  987  static inline struct dma_chan *__dma_request_channel(dma_cap_mask_t *mask,dma_filter_fn fn, void *fn_param)
dma_release_channel  function  include/linux/dmaengine.h  991  static inline void dma_release_channel(struct dma_chan *chan)
dma_async_device_register  prototype  include/linux/dmaengine.h  998  int dma_async_device_register(struct dma_device *device);
dma_async_device_unregister  prototype  include/linux/dmaengine.h  999  void dma_async_device_unregister(struct dma_device *device);
dma_run_dependencies  prototype  include/linux/dmaengine.h  1000  void dma_run_dependencies(struct dma_async_tx_descriptor *tx);
dma_find_channel  prototype  include/linux/dmaengine.h  1001  struct dma_chan *dma_find_channel(enum dma_transaction_type tx_type);
net_dma_find_channel  prototype  include/linux/dmaengine.h  1002  struct dma_chan *net_dma_find_channel(void);
dma_request_channel  macro  include/linux/dmaengine.h  1003  #define dma_request_channel(mask,x,y) __dma_request_channel(&(mask),x,y)
dma_page_list  struct  include/linux/dmaengine.h  1007  struct dma_page_list {
dma_pinned_list  struct  include/linux/dmaengine.h  1013  struct dma_pinned_list {
dma_pin_iovec_pages  prototype  include/linux/dmaengine.h  1018  struct dma_pinned_list *dma_pin_iovec_pages(struct iovec *iov,size_t len);
dma_unpin_iovec_pages  prototype  include/linux/dmaengine.h  1019  void dma_unpin_iovec_pages(struct dma_pinned_list* pinned_list);
dma_memcpy_to_iovec  prototype  include/linux/dmaengine.h  1022  dma_cookie_t dma_memcpy_to_iovec(struct dma_chan *chan,struct iovec *iov,struct dma_pinned_list *pinned_list, unsigned char *kdata, size_t len);
dma_memcpy_pg_to_iovec  prototype  include/linux/dmaengine.h  1025  dma_cookie_t dma_memcpy_pg_to_iovec(struct dma_chan *chan,struct iovec *iov,struct dma_pinned_list *pinned_list, struct page *page,unsigned int offset, size_t len);
_LINUX_DQL_H  macro  include/linux/dynamic_queue_limits.h  36  #define _LINUX_DQL_H
dql  struct  include/linux/dynamic_queue_limits.h  40  struct dql {
DQL_MAX_OBJECT  macro  include/linux/dynamic_queue_limits.h  65  #define DQL_MAX_OBJECT (UINT_MAX / 16)
DQL_MAX_LIMIT  macro  include/linux/dynamic_queue_limits.h  66  #define DQL_MAX_LIMIT ((UINT_MAX / 2) - DQL_MAX_OBJECT)
dql_queued  function  include/linux/dynamic_queue_limits.h  72  static inline void dql_queued(struct dql *dql,unsigned int count)
dql_avail  function  include/linux/dynamic_queue_limits.h  81  static inline int dql_avail(const struct dql *dql)
dql_completed  prototype  include/linux/dynamic_queue_limits.h  87  void dql_completed(struct dql *dql,unsigned int count);
dql_reset  prototype  include/linux/dynamic_queue_limits.h  90  void dql_reset(struct dql *dql);
dql_init  prototype  include/linux/dynamic_queue_limits.h  93  int dql_init(struct dql *dql,unsigned hold_time);
__NET_NET_NAMESPACE_H  macro  include/net/net_namespace.h  5  #define __NET_NET_NAMESPACE_H
NETDEV_HASHBITS  macro  include/net/net_namespace.h  36  #define NETDEV_HASHBITS 8
NETDEV_HASHENTRIES  macro  include/net/net_namespace.h  37  #define NETDEV_HASHENTRIES (1 << NETDEV_HASHBITS)
net  struct  include/net/net_namespace.h  39  struct net {
LOOPBACK_IFINDEX  macro  include/net/net_namespace.h  127  #define LOOPBACK_IFINDEX 1
copy_net_ns  function  include/net/net_namespace.h  142  static inline struct net *copy_net_ns(unsigned long flags,struct user_namespace *user_ns, struct net *old_net)
get_net_ns_by_pid  prototype  include/net/net_namespace.h  153  extern struct net *get_net_ns_by_pid(pid_t pid);
get_net_ns_by_fd  prototype  include/net/net_namespace.h  154  extern struct net *get_net_ns_by_fd(int pid);
__put_net  prototype  include/net/net_namespace.h  157  extern void __put_net(struct net *net);
get_net  function  include/net/net_namespace.h  193  static inline struct net *get_net(struct net *net)
maybe_get_net  function  include/net/net_namespace.h  202  static inline struct net *maybe_get_net(struct net *net)
put_net  function  include/net/net_namespace.h  198  static inline void put_net(struct net *net)
net_eq  function  include/net/net_namespace.h  208  int net_eq(const struct net *net1,const struct net *net2)
net_drop_ns  macro  include/net/net_namespace.h  213  #define net_drop_ns NULL
hold_net  function  include/net/net_namespace.h  231  static inline struct net *hold_net(struct net *net)
release_net  function  include/net/net_namespace.h  236  static inline void release_net(struct net *net)
write_pnet  macro  include/net/net_namespace.h  255  #define write_pnet(pnet,net) do { (void)(net);} while (0)
read_pnet  macro  include/net/net_namespace.h  256  #define read_pnet(pnet) (&init_net)
for_each_net  macro  include/net/net_namespace.h  261  #define for_each_net(VAR) list_for_each_entry(VAR, &net_namespace_list, list)
for_each_net_rcu  macro  include/net/net_namespace.h  264  #define for_each_net_rcu(VAR) list_for_each_entry_rcu(VAR, &net_namespace_list, list)
__net_init  macro  include/net/net_namespace.h  272  #define __net_init __init
__net_exit  macro  include/net/net_namespace.h  273  #define __net_exit __exit_refok
__net_initdata  macro  include/net/net_namespace.h  274  #define __net_initdata __initdata
__net_initconst  macro  include/net/net_namespace.h  275  #define __net_initconst __initconst
pernet_operations  struct  include/net/net_namespace.h  278  struct pernet_operations {
register_pernet_subsys  prototype  include/net/net_namespace.h  306  extern int register_pernet_subsys(struct pernet_operations *);
unregister_pernet_subsys  prototype  include/net/net_namespace.h  307  extern void unregister_pernet_subsys(struct pernet_operations *);
register_pernet_device  prototype  include/net/net_namespace.h  308  extern int register_pernet_device(struct pernet_operations *);
unregister_pernet_device  prototype  include/net/net_namespace.h  309  extern void unregister_pernet_device(struct pernet_operations *);
net_sysctl_init  function  include/net/net_namespace.h  320  static inline int net_sysctl_init(void) { return 0; }
register_net_sysctl  function  include/net/net_namespace.h  322  static inline struct ctl_table_header *register_net_sysctl(struct net *net,const char *path, struct ctl_table *table)
unregister_net_sysctl_table  function  include/net/net_namespace.h  326  static inline void unregister_net_sysctl_table(struct ctl_table_header *header)
rt_genid  function  include/net/net_namespace.h  331  static inline int rt_genid(struct net *net)
rt_genid_bump  function  include/net/net_namespace.h  336  static inline void rt_genid_bump(struct net *net)
__LINUX_NET_DSA_H  macro  include/net/dsa.h  12  #define __LINUX_NET_DSA_H
DSA_MAX_SWITCHES  macro  include/net/dsa.h  19  #define DSA_MAX_SWITCHES 4
DSA_MAX_PORTS  macro  include/net/dsa.h  20  #define DSA_MAX_PORTS 12
dsa_chip_data  struct  include/net/dsa.h  22  struct dsa_chip_data {
dsa_platform_data  struct  include/net/dsa.h  47  struct dsa_platform_data {
dsa_switch_tree  struct  include/net/dsa.h  62  struct dsa_switch_tree {
dsa_switch  struct  include/net/dsa.h  95  struct dsa_switch {
dsa_is_cpu_port  function  include/net/dsa.h  126  static inline bool dsa_is_cpu_port(struct dsa_switch *ds,int p)
dsa_upstream_port  function  include/net/dsa.h  131  static inline u8 dsa_upstream_port(struct dsa_switch *ds)
dsa_switch_driver  struct  include/net/dsa.h  147  struct dsa_switch_driver {
register_switch_driver  prototype  include/net/dsa.h  181  void register_switch_driver(struct dsa_switch_driver *type);
unregister_switch_driver  prototype  include/net/dsa.h  182  void unregister_switch_driver(struct dsa_switch_driver *type);
dsa_uses_dsa_tags  function  include/net/dsa.h  191  static inline bool dsa_uses_dsa_tags(struct dsa_switch_tree *dst)
dsa_uses_trailer_tags  function  include/net/dsa.h  196  static inline bool dsa_uses_trailer_tags(struct dsa_switch_tree *dst)
__NET_DCBNL_H__  macro  include/net/dcbnl.h  21  #define __NET_DCBNL_H__
dcb_app_type  struct  include/net/dcbnl.h  25  struct dcb_app_type {
dcb_setapp  prototype  include/net/dcbnl.h  32  int dcb_setapp(struct net_device *,struct dcb_app *);
dcb_getapp  prototype  include/net/dcbnl.h  33  u8 dcb_getapp(struct net_device *,struct dcb_app *);
dcb_ieee_setapp  prototype  include/net/dcbnl.h  34  int dcb_ieee_setapp(struct net_device *,struct dcb_app *);
dcb_ieee_delapp  prototype  include/net/dcbnl.h  35  int dcb_ieee_delapp(struct net_device *,struct dcb_app *);
dcb_ieee_getapp_mask  prototype  include/net/dcbnl.h  36  u8 dcb_ieee_getapp_mask(struct net_device *,struct dcb_app *);
dcbnl_ieee_notify  prototype  include/net/dcbnl.h  39  int dcbnl_ieee_notify(struct net_device *dev,int event,int cmd,u32 seq, u32 pid);
dcbnl_cee_notify  prototype  include/net/dcbnl.h  41  int dcbnl_cee_notify(struct net_device *dev,int event,int cmd,u32 seq, u32 pid);
dcbnl_rtnl_ops  struct  include/net/dcbnl.h  47  struct dcbnl_rtnl_ops {
_NETPRIO_CGROUP_H  macro  include/net/netprio_cgroup.h  15  #define _NETPRIO_CGROUP_H
netprio_map  struct  include/net/netprio_cgroup.h  22  struct netprio_map {
cgroup_netprio_state  struct  include/net/netprio_cgroup.h  28  struct cgroup_netprio_state {
sock_update_netprioidx  macro  include/net/netprio_cgroup.h  71  #define sock_update_netprioidx(sk,task)
task_netprioidx  function  include/net/netprio_cgroup.h  66  static inline u32 task_netprioidx(struct task_struct *p)
_LINUX_NETDEV_FEATURES_H  macro  include/linux/netdev_features.h  11  #define _LINUX_NETDEV_FEATURES_H
__NETIF_F_BIT  macro  include/linux/netdev_features.h  71  #define __NETIF_F_BIT(bit) ((netdev_features_t)1 << (bit))
__NETIF_F  macro  include/linux/netdev_features.h  72  #define __NETIF_F(name) __NETIF_F_BIT(NETIF_F_##name##_BIT)
NETIF_F_FCOE_CRC  macro  include/linux/netdev_features.h  74  #define NETIF_F_FCOE_CRC __NETIF_F(FCOE_CRC)
NETIF_F_FCOE_MTU  macro  include/linux/netdev_features.h  75  #define NETIF_F_FCOE_MTU __NETIF_F(FCOE_MTU)
NETIF_F_FRAGLIST  macro  include/linux/netdev_features.h  76  #define NETIF_F_FRAGLIST __NETIF_F(FRAGLIST)
NETIF_F_FSO  macro  include/linux/netdev_features.h  77  #define NETIF_F_FSO __NETIF_F(FSO)
NETIF_F_GRO  macro  include/linux/netdev_features.h  78  #define NETIF_F_GRO __NETIF_F(GRO)
NETIF_F_GSO  macro  include/linux/netdev_features.h  79  #define NETIF_F_GSO __NETIF_F(GSO)
NETIF_F_GSO_ROBUST  macro  include/linux/netdev_features.h  80  #define NETIF_F_GSO_ROBUST __NETIF_F(GSO_ROBUST)
NETIF_F_HIGHDMA  macro  include/linux/netdev_features.h  81  #define NETIF_F_HIGHDMA __NETIF_F(HIGHDMA)
NETIF_F_HW_CSUM  macro  include/linux/netdev_features.h  82  #define NETIF_F_HW_CSUM __NETIF_F(HW_CSUM)
NETIF_F_HW_VLAN_FILTER  macro  include/linux/netdev_features.h  83  #define NETIF_F_HW_VLAN_FILTER __NETIF_F(HW_VLAN_FILTER)
NETIF_F_HW_VLAN_RX  macro  include/linux/netdev_features.h  84  #define NETIF_F_HW_VLAN_RX __NETIF_F(HW_VLAN_RX)
NETIF_F_HW_VLAN_TX  macro  include/linux/netdev_features.h  85  #define NETIF_F_HW_VLAN_TX __NETIF_F(HW_VLAN_TX)
NETIF_F_IP_CSUM  macro  include/linux/netdev_features.h  86  #define NETIF_F_IP_CSUM __NETIF_F(IP_CSUM)
NETIF_F_IPV6_CSUM  macro  include/linux/netdev_features.h  87  #define NETIF_F_IPV6_CSUM __NETIF_F(IPV6_CSUM)
NETIF_F_LLTX  macro  include/linux/netdev_features.h  88  #define NETIF_F_LLTX __NETIF_F(LLTX)
NETIF_F_LOOPBACK  macro  include/linux/netdev_features.h  89  #define NETIF_F_LOOPBACK __NETIF_F(LOOPBACK)
NETIF_F_LRO  macro  include/linux/netdev_features.h  90  #define NETIF_F_LRO __NETIF_F(LRO)
NETIF_F_NETNS_LOCAL  macro  include/linux/netdev_features.h  91  #define NETIF_F_NETNS_LOCAL __NETIF_F(NETNS_LOCAL)
NETIF_F_NOCACHE_COPY  macro  include/linux/netdev_features.h  92  #define NETIF_F_NOCACHE_COPY __NETIF_F(NOCACHE_COPY)
NETIF_F_NTUPLE  macro  include/linux/netdev_features.h  93  #define NETIF_F_NTUPLE __NETIF_F(NTUPLE)
NETIF_F_RXCSUM  macro  include/linux/netdev_features.h  94  #define NETIF_F_RXCSUM __NETIF_F(RXCSUM)
NETIF_F_RXHASH  macro  include/linux/netdev_features.h  95  #define NETIF_F_RXHASH __NETIF_F(RXHASH)
NETIF_F_SCTP_CSUM  macro  include/linux/netdev_features.h  96  #define NETIF_F_SCTP_CSUM __NETIF_F(SCTP_CSUM)
NETIF_F_SG  macro  include/linux/netdev_features.h  97  #define NETIF_F_SG __NETIF_F(SG)
NETIF_F_TSO6  macro  include/linux/netdev_features.h  98  #define NETIF_F_TSO6 __NETIF_F(TSO6)
NETIF_F_TSO_ECN  macro  include/linux/netdev_features.h  99  #define NETIF_F_TSO_ECN __NETIF_F(TSO_ECN)
NETIF_F_TSO  macro  include/linux/netdev_features.h  100  #define NETIF_F_TSO __NETIF_F(TSO)
NETIF_F_UFO  macro  include/linux/netdev_features.h  101  #define NETIF_F_UFO __NETIF_F(UFO)
NETIF_F_VLAN_CHALLENGED  macro  include/linux/netdev_features.h  102  #define NETIF_F_VLAN_CHALLENGED __NETIF_F(VLAN_CHALLENGED)
NETIF_F_RXFCS  macro  include/linux/netdev_features.h  103  #define NETIF_F_RXFCS __NETIF_F(RXFCS)
NETIF_F_RXALL  macro  include/linux/netdev_features.h  104  #define NETIF_F_RXALL __NETIF_F(RXALL)
NETIF_F_NEVER_CHANGE  macro  include/linux/netdev_features.h  109  #define NETIF_F_NEVER_CHANGE (NETIF_F_VLAN_CHALLENGED | NETIF_F_LLTX | NETIF_F_NETNS_LOCAL)
NETIF_F_ETHTOOL_BITS  macro  include/linux/netdev_features.h  114  #define NETIF_F_ETHTOOL_BITS ((__NETIF_F_BIT(NETDEV_FEATURE_COUNT - 1) | (__NETIF_F_BIT(NETDEV_FEATURE_COUNT - 1) - 1)) & ~NETIF_F_NEVER_CHANGE)
NETIF_F_GSO_MASK  macro  include/linux/netdev_features.h  118  #define NETIF_F_GSO_MASK (__NETIF_F_BIT(NETIF_F_GSO_LAST + 1) - __NETIF_F_BIT(NETIF_F_GSO_SHIFT))
NETIF_F_GSO_SOFTWARE  macro  include/linux/netdev_features.h  122  #define NETIF_F_GSO_SOFTWARE (NETIF_F_TSO | NETIF_F_TSO_ECN | NETIF_F_TSO6 | NETIF_F_UFO)
NETIF_F_GEN_CSUM  macro  include/linux/netdev_features.h  124  #define NETIF_F_GEN_CSUM NETIF_F_HW_CSUM
NETIF_F_V4_CSUM  macro  include/linux/netdev_features.h  125  #define NETIF_F_V4_CSUM (NETIF_F_GEN_CSUM | NETIF_F_IP_CSUM)
NETIF_F_V6_CSUM  macro  include/linux/netdev_features.h  126  #define NETIF_F_V6_CSUM (NETIF_F_GEN_CSUM | NETIF_F_IPV6_CSUM)
NETIF_F_ALL_CSUM  macro  include/linux/netdev_features.h  127  #define NETIF_F_ALL_CSUM (NETIF_F_V4_CSUM | NETIF_F_V6_CSUM)
NETIF_F_ALL_TSO  macro  include/linux/netdev_features.h  129  #define NETIF_F_ALL_TSO (NETIF_F_TSO | NETIF_F_TSO6 | NETIF_F_TSO_ECN)
NETIF_F_ALL_FCOE  macro  include/linux/netdev_features.h  132  #define NETIF_F_ALL_FCOE (NETIF_F_FCOE_CRC | NETIF_F_FCOE_MTU | NETIF_F_FSO)
NETIF_F_ONE_FOR_ALL  macro  include/linux/netdev_features.h  140  #define NETIF_F_ONE_FOR_ALL (NETIF_F_GSO_SOFTWARE | NETIF_F_GSO_ROBUST | NETIF_F_SG | NETIF_F_HIGHDMA | NETIF_F_FRAGLIST | NETIF_F_VLAN_CHALLENGED)
NETIF_F_ALL_FOR_ALL  macro  include/linux/netdev_features.h  145  #define NETIF_F_ALL_FOR_ALL (NETIF_F_NOCACHE_COPY | NETIF_F_FSO)
NETIF_F_SOFT_FEATURES  macro  include/linux/netdev_features.h  148  #define NETIF_F_SOFT_FEATURES (NETIF_F_GSO | NETIF_F_GRO)
__LINUX_NEIGHBOUR_H  macro  include/uapi/linux/neighbour.h  2  #define __LINUX_NEIGHBOUR_H
ndmsg  struct  include/uapi/linux/neighbour.h  7  struct ndmsg {
NDA_MAX  macro  include/uapi/linux/neighbour.h  26  #define NDA_MAX (__NDA_MAX - 1)
NTF_USE  macro  include/uapi/linux/neighbour.h  32  #define NTF_USE 0x01
NTF_PROXY  macro  include/uapi/linux/neighbour.h  33  #define NTF_PROXY 0x08
NTF_ROUTER  macro  include/uapi/linux/neighbour.h  34  #define NTF_ROUTER 0x80
NTF_SELF  macro  include/uapi/linux/neighbour.h  36  #define NTF_SELF 0x02
NTF_MASTER  macro  include/uapi/linux/neighbour.h  37  #define NTF_MASTER 0x04
NUD_INCOMPLETE  macro  include/uapi/linux/neighbour.h  43  #define NUD_INCOMPLETE 0x01
NUD_REACHABLE  macro  include/uapi/linux/neighbour.h  44  #define NUD_REACHABLE 0x02
NUD_STALE  macro  include/uapi/linux/neighbour.h  45  #define NUD_STALE 0x04
NUD_DELAY  macro  include/uapi/linux/neighbour.h  46  #define NUD_DELAY 0x08
NUD_PROBE  macro  include/uapi/linux/neighbour.h  47  #define NUD_PROBE 0x10
NUD_FAILED  macro  include/uapi/linux/neighbour.h  48  #define NUD_FAILED 0x20
NUD_NOARP  macro  include/uapi/linux/neighbour.h  51  #define NUD_NOARP 0x40
NUD_PERMANENT  macro  include/uapi/linux/neighbour.h  52  #define NUD_PERMANENT 0x80
NUD_NONE  macro  include/uapi/linux/neighbour.h  53  #define NUD_NONE 0x00
nda_cacheinfo  struct  include/uapi/linux/neighbour.h  60  struct nda_cacheinfo {
ndt_stats  struct  include/uapi/linux/neighbour.h  92  struct ndt_stats {
NDTPA_MAX  macro  include/uapi/linux/neighbour.h  125  #define NDTPA_MAX (__NDTPA_MAX - 1)
ndtmsg  struct  include/uapi/linux/neighbour.h  127  struct ndtmsg {
ndt_config  struct  include/uapi/linux/neighbour.h  133  struct ndt_config {
NDTA_MAX  macro  include/uapi/linux/neighbour.h  157  #define NDTA_MAX (__NDTA_MAX - 1)
_UAPI_LINUX_NETDEVICE_H  macro  include/uapi/linux/netdevice.h  26  #define _UAPI_LINUX_NETDEVICE_H
MAX_ADDR_LEN  macro  include/uapi/linux/netdevice.h  34  #define MAX_ADDR_LEN 32
INIT_NETDEV_GROUP  macro  include/uapi/linux/netdevice.h  37  #define INIT_NETDEV_GROUP 0
_LINUX_NOTIFIER_H  macro  include/linux/notifier.h  11  #define _LINUX_NOTIFIER_H
notifier_block  struct  include/linux/notifier.h  50  struct notifier_block {
atomic_notifier_head  struct  include/linux/notifier.h  56  struct atomic_notifier_head {
blocking_notifier_head  struct  include/linux/notifier.h  61  struct blocking_notifier_head {
raw_notifier_head  struct  include/linux/notifier.h  66  struct raw_notifier_head {
srcu_notifier_head  struct  include/linux/notifier.h  70  struct srcu_notifier_head {
ATOMIC_INIT_NOTIFIER_HEAD  macro  include/linux/notifier.h  79  #define ATOMIC_INIT_NOTIFIER_HEAD(name) do { spin_lock_init(&(name)->lock); (name)->head = NULL; } while (0)
BLOCKING_INIT_NOTIFIER_HEAD  macro  include/linux/notifier.h  83  #define BLOCKING_INIT_NOTIFIER_HEAD(name) do { init_rwsem(&(name)->rwsem); (name)->head = NULL; } while (0)
RAW_INIT_NOTIFIER_HEAD  macro  include/linux/notifier.h  86  #define RAW_INIT_NOTIFIER_HEAD(name) do { (name)->head = NULL; } while (0)
srcu_init_notifier_head  prototype  include/linux/notifier.h  89  extern void srcu_init_notifier_head(struct srcu_notifier_head *nh);
srcu_cleanup_notifier_head  macro  include/linux/notifier.h  91  #define srcu_cleanup_notifier_head(name) cleanup_srcu_struct(&(name)->srcu);
ATOMIC_NOTIFIER_INIT  macro  include/linux/notifier.h  95  #define ATOMIC_NOTIFIER_INIT(name) { .lock = __SPIN_LOCK_UNLOCKED(name.lock), .head = NULL }
BLOCKING_NOTIFIER_INIT  macro  include/linux/notifier.h  98  #define BLOCKING_NOTIFIER_INIT(name) { .rwsem = __RWSEM_INITIALIZER((name).rwsem), .head = NULL }
RAW_NOTIFIER_INIT  macro  include/linux/notifier.h  100  #define RAW_NOTIFIER_INIT(name) { .head = NULL }
ATOMIC_NOTIFIER_HEAD  macro  include/linux/notifier.h  105  #define ATOMIC_NOTIFIER_HEAD(name) struct atomic_notifier_head name = ATOMIC_NOTIFIER_INIT(name)
BLOCKING_NOTIFIER_HEAD  macro  include/linux/notifier.h  108  #define BLOCKING_NOTIFIER_HEAD(name) struct blocking_notifier_head name = BLOCKING_NOTIFIER_INIT(name)
RAW_NOTIFIER_HEAD  macro  include/linux/notifier.h  111  #define RAW_NOTIFIER_HEAD(name) struct raw_notifier_head name = RAW_NOTIFIER_INIT(name)
atomic_notifier_chain_register  prototype  include/linux/notifier.h  116  extern int atomic_notifier_chain_register(struct atomic_notifier_head *nh,struct notifier_block *nb);
blocking_notifier_chain_register  prototype  include/linux/notifier.h  118  extern int blocking_notifier_chain_register(struct blocking_notifier_head *nh,struct notifier_block *nb);
raw_notifier_chain_register  prototype  include/linux/notifier.h  120  extern int raw_notifier_chain_register(struct raw_notifier_head *nh,struct notifier_block *nb);
srcu_notifier_chain_register  prototype  include/linux/notifier.h  122  extern int srcu_notifier_chain_register(struct srcu_notifier_head *nh,struct notifier_block *nb);
blocking_notifier_chain_cond_register  prototype  include/linux/notifier.h  124  extern int blocking_notifier_chain_cond_register(
atomic_notifier_chain_unregister  prototype  include/linux/notifier.h  129  extern int atomic_notifier_chain_unregister(struct atomic_notifier_head *nh,struct notifier_block *nb);
blocking_notifier_chain_unregister  prototype  include/linux/notifier.h  131  extern int blocking_notifier_chain_unregister(struct blocking_notifier_head *nh,struct notifier_block *nb);
raw_notifier_chain_unregister  prototype  include/linux/notifier.h  133  extern int raw_notifier_chain_unregister(struct raw_notifier_head *nh,struct notifier_block *nb);
srcu_notifier_chain_unregister  prototype  include/linux/notifier.h  135  extern int srcu_notifier_chain_unregister(struct srcu_notifier_head *nh,struct notifier_block *nb);
atomic_notifier_call_chain  prototype  include/linux/notifier.h  138  extern int atomic_notifier_call_chain(struct atomic_notifier_head *nh,unsigned long val, void *v);
__atomic_notifier_call_chain  prototype  include/linux/notifier.h  140  extern int __atomic_notifier_call_chain(struct atomic_notifier_head *nh,unsigned long val, void *v, int nr_to_call, int *nr_calls);
blocking_notifier_call_chain  prototype  include/linux/notifier.h  142  extern int blocking_notifier_call_chain(struct blocking_notifier_head *nh,unsigned long val, void *v);
__blocking_notifier_call_chain  prototype  include/linux/notifier.h  144  extern int __blocking_notifier_call_chain(struct blocking_notifier_head *nh,unsigned long val, void *v, int nr_to_call, int *nr_calls);
raw_notifier_call_chain  prototype  include/linux/notifier.h  146  extern int raw_notifier_call_chain(struct raw_notifier_head *nh,unsigned long val, void *v);
__raw_notifier_call_chain  prototype  include/linux/notifier.h  148  extern int __raw_notifier_call_chain(struct raw_notifier_head *nh,unsigned long val, void *v, int nr_to_call, int *nr_calls);
srcu_notifier_call_chain  prototype  include/linux/notifier.h  150  extern int srcu_notifier_call_chain(struct srcu_notifier_head *nh,unsigned long val, void *v);
__srcu_notifier_call_chain  prototype  include/linux/notifier.h  152  extern int __srcu_notifier_call_chain(struct srcu_notifier_head *nh,unsigned long val, void *v, int nr_to_call, int *nr_calls);
NOTIFY_DONE  macro  include/linux/notifier.h  154  #define NOTIFY_DONE 0x0000
NOTIFY_OK  macro  include/linux/notifier.h  155  #define NOTIFY_OK 0x0001
NOTIFY_STOP_MASK  macro  include/linux/notifier.h  156  #define NOTIFY_STOP_MASK 0x8000
NOTIFY_BAD  macro  include/linux/notifier.h  157  #define NOTIFY_BAD (NOTIFY_STOP_MASK|0x0002)
NOTIFY_STOP  macro  include/linux/notifier.h  162  #define NOTIFY_STOP (NOTIFY_OK|NOTIFY_STOP_MASK)
notifier_from_errno  function  include/linux/notifier.h  165  static inline int notifier_from_errno(int err)
notifier_to_errno  function  include/linux/notifier.h  174  static inline int notifier_to_errno(int ret)
NETLINK_URELEASE  macro  include/linux/notifier.h  198  #define NETLINK_URELEASE 0x0001
KBD_KEYCODE  macro  include/linux/notifier.h  203  #define KBD_KEYCODE 0x0001
KBD_UNBOUND_KEYCODE  macro  include/linux/notifier.h  204  #define KBD_UNBOUND_KEYCODE 0x0002
KBD_UNICODE  macro  include/linux/notifier.h  205  #define KBD_UNICODE 0x0003
KBD_KEYSYM  macro  include/linux/notifier.h  206  #define KBD_KEYSYM 0x0004
KBD_POST_KEYSYM  macro  include/linux/notifier.h  207  #define KBD_POST_KEYSYM 0x0005
_LINUX_RANDOM_H  macro  include/linux/random.h  7  #define _LINUX_RANDOM_H
add_device_randomness  prototype  include/linux/random.h  12  extern void add_device_randomness(const void *,unsigned int);
add_input_randomness  prototype  include/linux/random.h  14  extern void add_input_randomness(unsigned int type,unsigned int code,unsigned int value);
add_interrupt_randomness  prototype  include/linux/random.h  15  extern void add_interrupt_randomness(int irq,int irq_flags);
get_random_bytes  prototype  include/linux/random.h  17  extern void get_random_bytes(void *buf,int nbytes);
get_random_bytes_arch  prototype  include/linux/random.h  18  extern void get_random_bytes_arch(void *buf,int nbytes);
generate_random_uuid  prototype  include/linux/random.h  19  void generate_random_uuid(unsigned char uuid_out[16]);
get_random_int  prototype  include/linux/random.h  25  unsigned int get_random_int(void);
randomize_range  prototype  include/linux/random.h  26  unsigned long randomize_range(unsigned long start,unsigned long end,unsigned long len);
prandom_u32  prototype  include/linux/random.h  28  u32 prandom_u32(void);
prandom_bytes  prototype  include/linux/random.h  29  void prandom_bytes(void *buf,int nbytes);
prandom_seed  prototype  include/linux/random.h  30  void prandom_seed(u32 seed);
random32  macro  include/linux/random.h  36  #define random32() prandom_u32()
srandom32  macro  include/linux/random.h  37  #define srandom32(seed) prandom_seed(seed)
prandom_u32_state  prototype  include/linux/random.h  39  u32 prandom_u32_state(struct rnd_state *);
prandom_bytes_state  prototype  include/linux/random.h  40  void prandom_bytes_state(struct rnd_state *state,void *buf,int nbytes);
__seed  function  include/linux/random.h  45  static inline u32 __seed(u32 x,u32 m)
prandom_seed_state  function  include/linux/random.h  55  static inline void prandom_seed_state(struct rnd_state *state,u64 seed)
arch_get_random_long  function  include/linux/random.h  67  static inline int arch_get_random_long(unsigned long *v)
arch_get_random_int  function  include/linux/random.h  71  static inline int arch_get_random_int(unsigned int *v)
_ASM_X86_UNALIGNED_H  macro  arch/x86/include/asm/unaligned.h  2  #define _ASM_X86_UNALIGNED_H
get_unaligned  macro  arch/x86/include/asm/unaligned.h  11  #define get_unaligned __get_unaligned_le
put_unaligned  macro  arch/x86/include/asm/unaligned.h  12  #define put_unaligned __put_unaligned_le
_UAPI_LINUX_IF_ETHER_H  macro  include/uapi/linux/if_ether.h  22  #define _UAPI_LINUX_IF_ETHER_H
ETH_ALEN  macro  include/uapi/linux/if_ether.h  31  #define ETH_ALEN 6
ETH_HLEN  macro  include/uapi/linux/if_ether.h  32  #define ETH_HLEN 14
ETH_ZLEN  macro  include/uapi/linux/if_ether.h  33  #define ETH_ZLEN 60
ETH_DATA_LEN  macro  include/uapi/linux/if_ether.h  34  #define ETH_DATA_LEN 1500
ETH_FRAME_LEN  macro  include/uapi/linux/if_ether.h  35  #define ETH_FRAME_LEN 1514
ETH_FCS_LEN  macro  include/uapi/linux/if_ether.h  36  #define ETH_FCS_LEN 4
ETH_P_LOOP  macro  include/uapi/linux/if_ether.h  42  #define ETH_P_LOOP 0x0060
ETH_P_PUP  macro  include/uapi/linux/if_ether.h  43  #define ETH_P_PUP 0x0200
ETH_P_PUPAT  macro  include/uapi/linux/if_ether.h  44  #define ETH_P_PUPAT 0x0201
ETH_P_IP  macro  include/uapi/linux/if_ether.h  45  #define ETH_P_IP 0x0800
ETH_P_X25  macro  include/uapi/linux/if_ether.h  46  #define ETH_P_X25 0x0805
ETH_P_ARP  macro  include/uapi/linux/if_ether.h  47  #define ETH_P_ARP 0x0806
ETH_P_BPQ  macro  include/uapi/linux/if_ether.h  48  #define ETH_P_BPQ 0x08FF
ETH_P_IEEEPUP  macro  include/uapi/linux/if_ether.h  49  #define ETH_P_IEEEPUP 0x0a00
ETH_P_IEEEPUPAT  macro  include/uapi/linux/if_ether.h  50  #define ETH_P_IEEEPUPAT 0x0a01
ETH_P_BATMAN  macro  include/uapi/linux/if_ether.h  51  #define ETH_P_BATMAN 0x4305
ETH_P_DEC  macro  include/uapi/linux/if_ether.h  52  #define ETH_P_DEC 0x6000
ETH_P_DNA_DL  macro  include/uapi/linux/if_ether.h  53  #define ETH_P_DNA_DL 0x6001
ETH_P_DNA_RC  macro  include/uapi/linux/if_ether.h  54  #define ETH_P_DNA_RC 0x6002
ETH_P_DNA_RT  macro  include/uapi/linux/if_ether.h  55  #define ETH_P_DNA_RT 0x6003
ETH_P_LAT  macro  include/uapi/linux/if_ether.h  56  #define ETH_P_LAT 0x6004
ETH_P_DIAG  macro  include/uapi/linux/if_ether.h  57  #define ETH_P_DIAG 0x6005
ETH_P_CUST  macro  include/uapi/linux/if_ether.h  58  #define ETH_P_CUST 0x6006
ETH_P_SCA  macro  include/uapi/linux/if_ether.h  59  #define ETH_P_SCA 0x6007
ETH_P_TEB  macro  include/uapi/linux/if_ether.h  60  #define ETH_P_TEB 0x6558
ETH_P_RARP  macro  include/uapi/linux/if_ether.h  61  #define ETH_P_RARP 0x8035
ETH_P_ATALK  macro  include/uapi/linux/if_ether.h  62  #define ETH_P_ATALK 0x809B
ETH_P_AARP  macro  include/uapi/linux/if_ether.h  63  #define ETH_P_AARP 0x80F3
ETH_P_8021Q  macro  include/uapi/linux/if_ether.h  64  #define ETH_P_8021Q 0x8100
ETH_P_IPX  macro  include/uapi/linux/if_ether.h  65  #define ETH_P_IPX 0x8137
ETH_P_IPV6  macro  include/uapi/linux/if_ether.h  66  #define ETH_P_IPV6 0x86DD
ETH_P_PAUSE  macro  include/uapi/linux/if_ether.h  67  #define ETH_P_PAUSE 0x8808
ETH_P_SLOW  macro  include/uapi/linux/if_ether.h  68  #define ETH_P_SLOW 0x8809
ETH_P_WCCP  macro  include/uapi/linux/if_ether.h  69  #define ETH_P_WCCP 0x883E
ETH_P_PPP_DISC  macro  include/uapi/linux/if_ether.h  71  #define ETH_P_PPP_DISC 0x8863
ETH_P_PPP_SES  macro  include/uapi/linux/if_ether.h  72  #define ETH_P_PPP_SES 0x8864
ETH_P_MPLS_UC  macro  include/uapi/linux/if_ether.h  73  #define ETH_P_MPLS_UC 0x8847
ETH_P_MPLS_MC  macro  include/uapi/linux/if_ether.h  74  #define ETH_P_MPLS_MC 0x8848
ETH_P_ATMMPOA  macro  include/uapi/linux/if_ether.h  75  #define ETH_P_ATMMPOA 0x884c
ETH_P_LINK_CTL  macro  include/uapi/linux/if_ether.h  76  #define ETH_P_LINK_CTL 0x886c
ETH_P_ATMFATE  macro  include/uapi/linux/if_ether.h  77  #define ETH_P_ATMFATE 0x8884
ETH_P_PAE  macro  include/uapi/linux/if_ether.h  80  #define ETH_P_PAE 0x888E
ETH_P_AOE  macro  include/uapi/linux/if_ether.h  81  #define ETH_P_AOE 0x88A2
ETH_P_8021AD  macro  include/uapi/linux/if_ether.h  82  #define ETH_P_8021AD 0x88A8
ETH_P_802_EX1  macro  include/uapi/linux/if_ether.h  83  #define ETH_P_802_EX1 0x88B5
ETH_P_TIPC  macro  include/uapi/linux/if_ether.h  84  #define ETH_P_TIPC 0x88CA
ETH_P_8021AH  macro  include/uapi/linux/if_ether.h  85  #define ETH_P_8021AH 0x88E7
ETH_P_1588  macro  include/uapi/linux/if_ether.h  86  #define ETH_P_1588 0x88F7
ETH_P_FCOE  macro  include/uapi/linux/if_ether.h  87  #define ETH_P_FCOE 0x8906
ETH_P_TDLS  macro  include/uapi/linux/if_ether.h  88  #define ETH_P_TDLS 0x890D
ETH_P_FIP  macro  include/uapi/linux/if_ether.h  89  #define ETH_P_FIP 0x8914
ETH_P_QINQ1  macro  include/uapi/linux/if_ether.h  90  #define ETH_P_QINQ1 0x9100
ETH_P_QINQ2  macro  include/uapi/linux/if_ether.h  91  #define ETH_P_QINQ2 0x9200
ETH_P_QINQ3  macro  include/uapi/linux/if_ether.h  92  #define ETH_P_QINQ3 0x9300
ETH_P_EDSA  macro  include/uapi/linux/if_ether.h  93  #define ETH_P_EDSA 0xDADA
ETH_P_AF_IUCV  macro  include/uapi/linux/if_ether.h  94  #define ETH_P_AF_IUCV 0xFBFB
ETH_P_802_3  macro  include/uapi/linux/if_ether.h  100  #define ETH_P_802_3 0x0001
ETH_P_AX25  macro  include/uapi/linux/if_ether.h  101  #define ETH_P_AX25 0x0002
ETH_P_ALL  macro  include/uapi/linux/if_ether.h  102  #define ETH_P_ALL 0x0003
ETH_P_802_2  macro  include/uapi/linux/if_ether.h  103  #define ETH_P_802_2 0x0004
ETH_P_SNAP  macro  include/uapi/linux/if_ether.h  104  #define ETH_P_SNAP 0x0005
ETH_P_DDCMP  macro  include/uapi/linux/if_ether.h  105  #define ETH_P_DDCMP 0x0006
ETH_P_WAN_PPP  macro  include/uapi/linux/if_ether.h  106  #define ETH_P_WAN_PPP 0x0007
ETH_P_PPP_MP  macro  include/uapi/linux/if_ether.h  107  #define ETH_P_PPP_MP 0x0008
ETH_P_LOCALTALK  macro  include/uapi/linux/if_ether.h  108  #define ETH_P_LOCALTALK 0x0009
ETH_P_CAN  macro  include/uapi/linux/if_ether.h  109  #define ETH_P_CAN 0x000C
ETH_P_CANFD  macro  include/uapi/linux/if_ether.h  110  #define ETH_P_CANFD 0x000D
ETH_P_PPPTALK  macro  include/uapi/linux/if_ether.h  111  #define ETH_P_PPPTALK 0x0010
ETH_P_TR_802_2  macro  include/uapi/linux/if_ether.h  112  #define ETH_P_TR_802_2 0x0011
ETH_P_MOBITEX  macro  include/uapi/linux/if_ether.h  113  #define ETH_P_MOBITEX 0x0015
ETH_P_CONTROL  macro  include/uapi/linux/if_ether.h  114  #define ETH_P_CONTROL 0x0016
ETH_P_IRDA  macro  include/uapi/linux/if_ether.h  115  #define ETH_P_IRDA 0x0017
ETH_P_ECONET  macro  include/uapi/linux/if_ether.h  116  #define ETH_P_ECONET 0x0018
ETH_P_HDLC  macro  include/uapi/linux/if_ether.h  117  #define ETH_P_HDLC 0x0019
ETH_P_ARCNET  macro  include/uapi/linux/if_ether.h  118  #define ETH_P_ARCNET 0x001A
ETH_P_DSA  macro  include/uapi/linux/if_ether.h  119  #define ETH_P_DSA 0x001B
ETH_P_TRAILER  macro  include/uapi/linux/if_ether.h  120  #define ETH_P_TRAILER 0x001C
ETH_P_PHONET  macro  include/uapi/linux/if_ether.h  121  #define ETH_P_PHONET 0x00F5
ETH_P_IEEE802154  macro  include/uapi/linux/if_ether.h  122  #define ETH_P_IEEE802154 0x00F6
ETH_P_CAIF  macro  include/uapi/linux/if_ether.h  123  #define ETH_P_CAIF 0x00F7
ethhdr  struct  include/uapi/linux/if_ether.h  129  struct ethhdr {
LINUX_KMEMCHECK_H  macro  include/linux/kmemcheck.h  2  #define LINUX_KMEMCHECK_H
kmemcheck_alloc_shadow  function  include/linux/kmemcheck.h  93  kmemcheck_alloc_shadow(struct page *page,int order,gfp_t flags,int node)
kmemcheck_free_shadow  function  include/linux/kmemcheck.h  98  kmemcheck_free_shadow(struct page *page,int order)
kmemcheck_slab_alloc  function  include/linux/kmemcheck.h  104  kmemcheck_slab_alloc(struct kmem_cache *s,gfp_t gfpflags,void *object,size_t size)
kmemcheck_slab_free  function  include/linux/kmemcheck.h  109  static inline void kmemcheck_slab_free(struct kmem_cache *s,void *object,size_t size)
kmemcheck_pagealloc_alloc  function  include/linux/kmemcheck.h  114  static inline void kmemcheck_pagealloc_alloc(struct page *p,unsigned int order, gfp_t gfpflags)
kmemcheck_show_pages  prototype  include/linux/kmemcheck.h  20  void kmemcheck_show_pages(struct page *p,unsigned int n);
kmemcheck_hide_pages  prototype  include/linux/kmemcheck.h  21  void kmemcheck_hide_pages(struct page *p,unsigned int n);
kmemcheck_page_is_tracked  function  include/linux/kmemcheck.h  118  static inline bool kmemcheck_page_is_tracked(struct page *p)
kmemcheck_mark_unallocated  function  include/linux/kmemcheck.h  123  static inline void kmemcheck_mark_unallocated(void *address,unsigned int n)
kmemcheck_mark_uninitialized  function  include/linux/kmemcheck.h  127  static inline void kmemcheck_mark_uninitialized(void *address,unsigned int n)
kmemcheck_mark_initialized  function  include/linux/kmemcheck.h  131  static inline void kmemcheck_mark_initialized(void *address,unsigned int n)
kmemcheck_mark_freed  function  include/linux/kmemcheck.h  135  static inline void kmemcheck_mark_freed(void *address,unsigned int n)
kmemcheck_mark_unallocated_pages  function  include/linux/kmemcheck.h  140  static inline void kmemcheck_mark_unallocated_pages(struct page *p,unsigned int n)
kmemcheck_mark_uninitialized_pages  function  include/linux/kmemcheck.h  145  static inline void kmemcheck_mark_uninitialized_pages(struct page *p,unsigned int n)
kmemcheck_mark_initialized_pages  function  include/linux/kmemcheck.h  150  static inline void kmemcheck_mark_initialized_pages(struct page *p,unsigned int n)
kmemcheck_show_addr  prototype  include/linux/kmemcheck.h  34  int kmemcheck_show_addr(unsigned long address);
kmemcheck_hide_addr  prototype  include/linux/kmemcheck.h  35  int kmemcheck_hide_addr(unsigned long address);
kmemcheck_is_obj_initialized  function  include/linux/kmemcheck.h  154  static inline bool kmemcheck_is_obj_initialized(unsigned long addr,size_t size)
kmemcheck_annotate_bitfield  macro  include/linux/kmemcheck.h  163  #define kmemcheck_annotate_bitfield(ptr,name) do { } while (0)
kmemcheck_annotate_variable  macro  include/linux/kmemcheck.h  167  #define kmemcheck_annotate_variable(var) do { } while (0)
kmemcheck_enabled  macro  include/linux/kmemcheck.h  90  #define kmemcheck_enabled 0
_ASM_X86_TYPES_H  macro  arch/x86/include/uapi/asm/types.h  2  #define _ASM_X86_TYPES_H
_LINUX_NET_H  macro  include/linux/net.h  19  #define _LINUX_NET_H
SOCK_ASYNC_NOSPACE  macro  include/linux/net.h  35  #define SOCK_ASYNC_NOSPACE 0
SOCK_ASYNC_WAITDATA  macro  include/linux/net.h  36  #define SOCK_ASYNC_WAITDATA 1
SOCK_NOSPACE  macro  include/linux/net.h  37  #define SOCK_NOSPACE 2
SOCK_PASSCRED  macro  include/linux/net.h  38  #define SOCK_PASSCRED 3
SOCK_PASSSEC  macro  include/linux/net.h  39  #define SOCK_PASSSEC 4
SOCK_EXTERNALLY_ALLOCATED  macro  include/linux/net.h  40  #define SOCK_EXTERNALLY_ALLOCATED 5
sock_type  enum  include/linux/net.h  58  enum sock_type {
SOCK_MAX  macro  include/linux/net.h  68  #define SOCK_MAX (SOCK_PACKET + 1)
SOCK_TYPE_MASK  macro  include/linux/net.h  71  #define SOCK_TYPE_MASK 0xf
SOCK_CLOEXEC  macro  include/linux/net.h  74  #define SOCK_CLOEXEC O_CLOEXEC
SOCK_NONBLOCK  macro  include/linux/net.h  76  #define SOCK_NONBLOCK O_NONBLOCK
sock_shutdown_cmd  enum  include/linux/net.h  81  enum sock_shutdown_cmd {
socket_wq  struct  include/linux/net.h  87  struct socket_wq {
socket  struct  include/linux/net.h  104  struct socket {
proto_ops  struct  include/linux/net.h  127  struct proto_ops {
DECLARE_SOCKADDR  macro  include/linux/net.h  179  #define DECLARE_SOCKADDR(type,dst,src) type dst = ({ __sockaddr_check_size(sizeof(*dst)); (type) src; })
net_proto_family  struct  include/linux/net.h  181  struct net_proto_family {
sock_wake_async  prototype  include/linux/net.h  198  extern int sock_wake_async(struct socket *sk,int how,int band);
sock_register  prototype  include/linux/net.h  199  extern int sock_register(const struct net_proto_family *fam);
sock_unregister  prototype  include/linux/net.h  200  extern void sock_unregister(int family);
__sock_create  prototype  include/linux/net.h  202  extern int __sock_create(struct net *net,int family,int type,int proto,struct socket **res, int kern);
sock_create  prototype  include/linux/net.h  204  extern int sock_create(int family,int type,int proto,struct socket **res);
sock_create_kern  prototype  include/linux/net.h  206  extern int sock_create_kern(int family,int type,int proto,struct socket **res);
sock_create_lite  prototype  include/linux/net.h  208  extern int sock_create_lite(int family,int type,int proto,struct socket **res);
sock_release  prototype  include/linux/net.h  209  extern void sock_release(struct socket *sock);
sock_sendmsg  prototype  include/linux/net.h  211  extern int sock_sendmsg(struct socket *sock,struct msghdr *msg,size_t len);
sock_recvmsg  prototype  include/linux/net.h  213  extern int sock_recvmsg(struct socket *sock,struct msghdr *msg,size_t size, int flags);
sock_alloc_file  prototype  include/linux/net.h  214  extern struct file *sock_alloc_file(struct socket *sock,int flags,const char *dname);
sockfd_lookup  prototype  include/linux/net.h  215  extern struct socket *sockfd_lookup(int fd,int *err);
sock_from_file  prototype  include/linux/net.h  216  extern struct socket *sock_from_file(struct file *file,int *err);
sockfd_put  macro  include/linux/net.h  217  #define sockfd_put(sock) fput(sock->file)
net_ratelimit  prototype  include/linux/net.h  218  extern int net_ratelimit(void);
net_ratelimited_function  macro  include/linux/net.h  224  #define net_ratelimited_function(function,...) do { if (net_ratelimit()) function(__VA_ARGS__); } while (0)
net_emerg_ratelimited  macro  include/linux/net.h  227  #define net_emerg_ratelimited(fmt,...) net_ratelimited_function(pr_emerg, fmt, ##__VA_ARGS__)
net_alert_ratelimited  macro  include/linux/net.h  229  #define net_alert_ratelimited(fmt,...) net_ratelimited_function(pr_alert, fmt, ##__VA_ARGS__)
net_crit_ratelimited  macro  include/linux/net.h  231  #define net_crit_ratelimited(fmt,...) net_ratelimited_function(pr_crit, fmt, ##__VA_ARGS__)
net_err_ratelimited  macro  include/linux/net.h  233  #define net_err_ratelimited(fmt,...) net_ratelimited_function(pr_err, fmt, ##__VA_ARGS__)
net_notice_ratelimited  macro  include/linux/net.h  235  #define net_notice_ratelimited(fmt,...) net_ratelimited_function(pr_notice, fmt, ##__VA_ARGS__)
net_warn_ratelimited  macro  include/linux/net.h  237  #define net_warn_ratelimited(fmt,...) net_ratelimited_function(pr_warn, fmt, ##__VA_ARGS__)
net_info_ratelimited  macro  include/linux/net.h  239  #define net_info_ratelimited(fmt,...) net_ratelimited_function(pr_info, fmt, ##__VA_ARGS__)
net_dbg_ratelimited  macro  include/linux/net.h  241  #define net_dbg_ratelimited(fmt,...) net_ratelimited_function(pr_debug, fmt, ##__VA_ARGS__)
net_random  macro  include/linux/net.h  243  #define net_random() random32()
net_srandom  macro  include/linux/net.h  244  #define net_srandom(seed) srandom32((__force u32)seed)
kernel_sendmsg  prototype  include/linux/net.h  247  extern int kernel_sendmsg(struct socket *sock,struct msghdr *msg,struct kvec *vec, size_t num, size_t len);
kernel_recvmsg  prototype  include/linux/net.h  250  extern int kernel_recvmsg(struct socket *sock,struct msghdr *msg,struct kvec *vec, size_t num,size_t len, int flags);
kernel_bind  prototype  include/linux/net.h  253  extern int kernel_bind(struct socket *sock,struct sockaddr *addr,int addrlen);
kernel_listen  prototype  include/linux/net.h  254  extern int kernel_listen(struct socket *sock,int backlog);
kernel_accept  prototype  include/linux/net.h  256  extern int kernel_accept(struct socket *sock,struct socket **newsock,int flags);
kernel_connect  prototype  include/linux/net.h  258  extern int kernel_connect(struct socket *sock,struct sockaddr *addr,int addrlen, int flags);
kernel_getsockname  prototype  include/linux/net.h  260  extern int kernel_getsockname(struct socket *sock,struct sockaddr *addr,int *addrlen);
kernel_getpeername  prototype  include/linux/net.h  262  extern int kernel_getpeername(struct socket *sock,struct sockaddr *addr,int *addrlen);
kernel_getsockopt  prototype  include/linux/net.h  264  extern int kernel_getsockopt(struct socket *sock,int level,int optname,char *optval, int *optlen);
kernel_setsockopt  prototype  include/linux/net.h  266  extern int kernel_setsockopt(struct socket *sock,int level,int optname,char *optval, unsigned int optlen);
kernel_sendpage  prototype  include/linux/net.h  268  extern int kernel_sendpage(struct socket *sock,struct page *page,int offset,size_t size, int flags);
kernel_sock_ioctl  prototype  include/linux/net.h  269  extern int kernel_sock_ioctl(struct socket *sock,int cmd,unsigned long arg);
kernel_sock_shutdown  prototype  include/linux/net.h  271  extern int kernel_sock_shutdown(struct socket *sock,enum sock_shutdown_cmd how);
MODULE_ALIAS_NETPROTO  macro  include/linux/net.h  274  #define MODULE_ALIAS_NETPROTO(proto) MODULE_ALIAS("net-pf-" __stringify(proto))
MODULE_ALIAS_NET_PF_PROTO  macro  include/linux/net.h  277  #define MODULE_ALIAS_NET_PF_PROTO(pf,proto) MODULE_ALIAS("net-pf-" __stringify(pf) "-proto-" __stringify(proto))
MODULE_ALIAS_NET_PF_PROTO_TYPE  macro  include/linux/net.h  281  #define MODULE_ALIAS_NET_PF_PROTO_TYPE(pf,proto,type) MODULE_ALIAS("net-pf-" __stringify(pf) "-proto-" __stringify(proto) "-type-" __stringify(type))
MODULE_ALIAS_NET_PF_PROTO_NAME  macro  include/linux/net.h  285  #define MODULE_ALIAS_NET_PF_PROTO_NAME(pf,proto,name) MODULE_ALIAS("net-pf-" __stringify(pf) "-proto-" __stringify(proto) name)
__LINUX_TEXTSEARCH_H  macro  include/linux/textsearch.h  2  #define __LINUX_TEXTSEARCH_H
TS_AUTOLOAD  macro  include/linux/textsearch.h  14  #define TS_AUTOLOAD 1
TS_IGNORECASE  macro  include/linux/textsearch.h  15  #define TS_IGNORECASE 2
ts_state  struct  include/linux/textsearch.h  22  struct ts_state
ts_ops  struct  include/linux/textsearch.h  38  struct ts_ops
ts_config  struct  include/linux/textsearch.h  58  struct ts_config
textsearch_next  function  include/linux/textsearch.h  105  static inline unsigned int textsearch_next(struct ts_config *conf,struct ts_state *state)
textsearch_find  function  include/linux/textsearch.h  124  static inline unsigned int textsearch_find(struct ts_config *conf,struct ts_state *state)
textsearch_get_pattern  function  include/linux/textsearch.h  134  static inline void *textsearch_get_pattern(struct ts_config *conf)
textsearch_get_pattern_len  function  include/linux/textsearch.h  143  static inline unsigned int textsearch_get_pattern_len(struct ts_config *conf)
textsearch_register  prototype  include/linux/textsearch.h  148  extern int textsearch_register(struct ts_ops *);
textsearch_unregister  prototype  include/linux/textsearch.h  149  extern int textsearch_unregister(struct ts_ops *);
textsearch_prepare  prototype  include/linux/textsearch.h  151  extern struct ts_config *textsearch_prepare(const char *,const void *,unsigned int, gfp_t, int);
textsearch_destroy  prototype  include/linux/textsearch.h  152  extern void textsearch_destroy(struct ts_config *conf);
textsearch_find_continuous  prototype  include/linux/textsearch.h  155  extern unsigned int textsearch_find_continuous(struct ts_config *,struct ts_state *,const void *, unsigned int);
TS_PRIV_ALIGNTO  macro  include/linux/textsearch.h  158  #define TS_PRIV_ALIGNTO 8
TS_PRIV_ALIGN  macro  include/linux/textsearch.h  159  #define TS_PRIV_ALIGN(len) (((len) + TS_PRIV_ALIGNTO-1) & ~(TS_PRIV_ALIGNTO-1))
alloc_ts_config  function  include/linux/textsearch.h  162  static inline struct ts_config *alloc_ts_config(size_t payload,gfp_t gfp_mask)
ts_config_priv  function  include/linux/textsearch.h  173  static inline void *ts_config_priv(struct ts_config *conf)
_CHECKSUM_H  macro  include/net/checksum.h  20  #define _CHECKSUM_H
csum_and_copy_from_user  function  include/net/checksum.h  31  __wsum csum_and_copy_from_user (const void __user *src,void *dst,int len, __wsum sum, int *err_ptr)
csum_and_copy_to_user  function  arch/x86/include/asm/checksum_32.h  177  static inline __wsum csum_and_copy_to_user(const void *src,void __user *dst,int len, __wsum sum,int *err_ptr)
csum_add  function  include/net/checksum.h  60  static inline __wsum csum_add(__wsum csum,__wsum addend)
csum_sub  function  include/net/checksum.h  67  static inline __wsum csum_sub(__wsum csum,__wsum addend)
csum_block_add  function  include/net/checksum.h  73  csum_block_add(__wsum csum,__wsum csum2,int offset)
csum_block_sub  function  include/net/checksum.h  82  csum_block_sub(__wsum csum,__wsum csum2,int offset)
csum_unfold  function  include/net/checksum.h  90  static inline __wsum csum_unfold(__sum16 n)
CSUM_MANGLED_0  macro  include/net/checksum.h  95  #define CSUM_MANGLED_0 ((__force __sum16)0xffff)
csum_replace4  function  include/net/checksum.h  97  static inline void csum_replace4(__sum16 *sum,__be32 from,__be32 to)
csum_replace2  function  include/net/checksum.h  104  static inline void csum_replace2(__sum16 *sum,__be16 from,__be16 to)
inet_proto_csum_replace4  prototype  include/net/checksum.h  111  extern void inet_proto_csum_replace4(__sum16 *sum,struct sk_buff *skb,__be32 from, __be32 to, int pseudohdr);
inet_proto_csum_replace16  prototype  include/net/checksum.h  114  extern void inet_proto_csum_replace16(__sum16 *sum,struct sk_buff *skb,const __be32 *from, const __be32 *to,int pseudohdr);
inet_proto_csum_replace2  function  include/net/checksum.h  118  static inline void inet_proto_csum_replace2(__sum16 *sum,struct sk_buff *skb,__be16 from, __be16 to,int pseudohdr)
_LINUX_DMA_MAPPING_H  macro  include/linux/dma-mapping.h  2  #define _LINUX_DMA_MAPPING_H
dma_map_ops  struct  include/linux/dma-mapping.h  11  struct dma_map_ops {
DMA_BIT_MASK  macro  include/linux/dma-mapping.h  59  #define DMA_BIT_MASK(n) (((n) == 64) ? ~0ULL : ((1ULL<<(n))-1))
DMA_MASK_NONE  macro  include/linux/dma-mapping.h  61  #define DMA_MASK_NONE 0x0ULL
valid_dma_direction  function  include/linux/dma-mapping.h  63  static inline int valid_dma_direction(int dma_direction)
is_device_dma_capable  function  include/linux/dma-mapping.h  70  static inline int is_device_dma_capable(struct device *dev)
dma_get_mask  function  include/linux/dma-mapping.h  81  static inline u64 dma_get_mask(struct device *dev)
dma_set_coherent_mask  function  include/linux/dma-mapping.h  91  static inline int dma_set_coherent_mask(struct device *dev,u64 mask)
dma_get_required_mask  prototype  include/linux/dma-mapping.h  100  extern u64 dma_get_required_mask(struct device *dev);
dma_get_max_seg_size  function  include/linux/dma-mapping.h  102  static inline unsigned int dma_get_max_seg_size(struct device *dev)
dma_set_max_seg_size  function  include/linux/dma-mapping.h  108  static inline unsigned int dma_set_max_seg_size(struct device *dev,unsigned int size)
dma_get_seg_boundary  function  include/linux/dma-mapping.h  117  static inline unsigned long dma_get_seg_boundary(struct device *dev)
dma_set_seg_boundary  function  include/linux/dma-mapping.h  123  static inline int dma_set_seg_boundary(struct device *dev,unsigned long mask)
dma_zalloc_coherent  function  include/linux/dma-mapping.h  133  static inline void *dma_zalloc_coherent(struct device *dev,size_t size,dma_addr_t *dma_handle, gfp_t flag)
dma_get_cache_alignment  prototype  include/asm-generic/dma-mapping-broken.h  89  dma_get_cache_alignment(void);
DMA_MEMORY_MAP  macro  include/linux/dma-mapping.h  152  #define DMA_MEMORY_MAP 0x01
DMA_MEMORY_IO  macro  include/linux/dma-mapping.h  153  #define DMA_MEMORY_IO 0x02
DMA_MEMORY_INCLUDES_CHILDREN  macro  include/linux/dma-mapping.h  154  #define DMA_MEMORY_INCLUDES_CHILDREN 0x04
DMA_MEMORY_EXCLUSIVE  macro  include/linux/dma-mapping.h  155  #define DMA_MEMORY_EXCLUSIVE 0x08
dma_declare_coherent_memory  function  include/linux/dma-mapping.h  160  dma_declare_coherent_memory(struct device *dev,dma_addr_t bus_addr,dma_addr_t device_addr, size_t size, int flags)
dma_release_declared_memory  function  include/linux/dma-mapping.h  166  dma_release_declared_memory(struct device *dev)
dma_mark_declared_memory_occupied  function  include/linux/dma-mapping.h  172  dma_mark_declared_memory_occupied(struct device *dev,dma_addr_t device_addr, size_t size)
dmam_alloc_coherent  prototype  include/linux/dma-mapping.h  182  extern void *dmam_alloc_coherent(struct device *dev,size_t size,dma_addr_t *dma_handle, gfp_t gfp);
dmam_free_coherent  prototype  include/linux/dma-mapping.h  184  extern void dmam_free_coherent(struct device *dev,size_t size,void *vaddr,dma_addr_t dma_handle);
dmam_alloc_noncoherent  prototype  include/linux/dma-mapping.h  186  extern void *dmam_alloc_noncoherent(struct device *dev,size_t size,dma_addr_t *dma_handle, gfp_t gfp);
dmam_free_noncoherent  prototype  include/linux/dma-mapping.h  188  extern void dmam_free_noncoherent(struct device *dev,size_t size,void *vaddr,dma_addr_t dma_handle);
dmam_declare_coherent_memory  function  include/linux/dma-mapping.h  197  static inline int dmam_declare_coherent_memory(struct device *dev,dma_addr_t bus_addr, dma_addr_t device_addr,size_t size, gfp_t gfp)
dmam_release_declared_memory  function  include/linux/dma-mapping.h  202  static inline void dmam_release_declared_memory(struct device *dev)
dma_map_single_attrs  function  include/asm-generic/dma-mapping-common.h  13  static inline dma_addr_t dma_map_single_attrs(struct device *dev,void *ptr,size_t size,enum dma_data_direction dir,struct dma_attrs *attrs)
dma_unmap_single_attrs  function  include/asm-generic/dma-mapping-common.h  32  static inline void dma_unmap_single_attrs(struct device *dev,dma_addr_t addr,size_t size,enum dma_data_direction dir,struct dma_attrs *attrs)
dma_map_sg_attrs  function  include/asm-generic/dma-mapping-common.h  44  static inline int dma_map_sg_attrs(struct device *dev,struct scatterlist *sg,int nents, enum dma_data_direction dir,struct dma_attrs *attrs)
dma_unmap_sg_attrs  function  include/asm-generic/dma-mapping-common.h  61  static inline void dma_unmap_sg_attrs(struct device *dev,struct scatterlist *sg,int nents, enum dma_data_direction dir,struct dma_attrs *attrs)
DEFINE_DMA_UNMAP_ADDR  macro  include/linux/dma-mapping.h  232  #define DEFINE_DMA_UNMAP_ADDR(ADDR_NAME)
DEFINE_DMA_UNMAP_LEN  macro  include/linux/dma-mapping.h  233  #define DEFINE_DMA_UNMAP_LEN(LEN_NAME)
dma_unmap_addr  macro  include/linux/dma-mapping.h  234  #define dma_unmap_addr(PTR,ADDR_NAME) (0)
dma_unmap_addr_set  macro  include/linux/dma-mapping.h  235  #define dma_unmap_addr_set(PTR,ADDR_NAME,VAL) do { } while (0)
dma_unmap_len  macro  include/linux/dma-mapping.h  236  #define dma_unmap_len(PTR,LEN_NAME) (0)
dma_unmap_len_set  macro  include/linux/dma-mapping.h  237  #define dma_unmap_len_set(PTR,LEN_NAME,VAL) do { } while (0)
_LINUX_BH_H  macro  include/linux/bottom_half.h  2  #define _LINUX_BH_H
local_bh_disable  prototype  include/linux/bottom_half.h  4  extern void local_bh_disable(void);
_local_bh_enable  prototype  include/linux/bottom_half.h  5  extern void _local_bh_enable(void);
local_bh_enable  prototype  include/linux/bottom_half.h  6  extern void local_bh_enable(void);
local_bh_enable_ip  prototype  include/linux/bottom_half.h  7  extern void local_bh_enable_ip(unsigned long ip);
_ASM_X86_BARRIER_H  macro  arch/x86/include/asm/barrier.h  2  #define _ASM_X86_BARRIER_H
mb  macro  arch/x86/include/asm/barrier.h  22  #define mb() asm volatile("mfence":::"memory")
rmb  macro  arch/x86/include/asm/barrier.h  23  #define rmb() asm volatile("lfence":::"memory")
wmb  macro  arch/x86/include/asm/barrier.h  24  #define wmb() asm volatile("sfence" ::: "memory")
read_barrier_depends  macro  arch/x86/include/asm/barrier.h  79  #define read_barrier_depends() do { } while (0)
smp_mb  macro  arch/x86/include/asm/barrier.h  96  #define smp_mb() barrier()
smp_rmb  macro  arch/x86/include/asm/barrier.h  97  #define smp_rmb() barrier()
smp_wmb  macro  arch/x86/include/asm/barrier.h  98  #define smp_wmb() barrier()
smp_read_barrier_depends  macro  arch/x86/include/asm/barrier.h  99  #define smp_read_barrier_depends() do { } while (0)
set_mb  macro  arch/x86/include/asm/barrier.h  100  #define set_mb(var,value) do { var = value; barrier(); } while (0)
rdtsc_barrier  function  arch/x86/include/asm/barrier.h  110  static __always_inline void rdtsc_barrier(void)
__LINUX_SPINLOCK_TYPES_H  macro  include/linux/spinlock_types.h  2  #define __LINUX_SPINLOCK_TYPES_H
raw_spinlock  struct  include/linux/spinlock_types.h  20  typedef struct raw_spinlock {
SPINLOCK_MAGIC  macro  include/linux/spinlock_types.h  34  #define SPINLOCK_MAGIC 0xdead4ead
SPINLOCK_OWNER_INIT  macro  include/linux/spinlock_types.h  36  #define SPINLOCK_OWNER_INIT ((void *)-1L)
SPIN_DEP_MAP_INIT  macro  include/linux/spinlock_types.h  41  # define SPIN_DEP_MAP_INIT(lockname)
SPIN_DEBUG_INIT  macro  include/linux/spinlock_types.h  50  # define SPIN_DEBUG_INIT(lockname)
__RAW_SPIN_LOCK_INITIALIZER  macro  include/linux/spinlock_types.h  57  #define __RAW_SPIN_LOCK_INITIALIZER(lockname) { .raw_lock = __ARCH_SPIN_LOCK_UNLOCKED, SPIN_DEBUG_INIT(lockname) SPIN_DEP_MAP_INIT(lockname) }
__RAW_SPIN_LOCK_UNLOCKED  macro  include/linux/spinlock_types.h  60  #define __RAW_SPIN_LOCK_UNLOCKED(lockname) (raw_spinlock_t) __RAW_SPIN_LOCK_INITIALIZER(lockname)
DEFINE_RAW_SPINLOCK  macro  include/linux/spinlock_types.h  62  #define DEFINE_RAW_SPINLOCK(x) raw_spinlock_t x = __RAW_SPIN_LOCK_UNLOCKED(x)
spinlock  struct  include/linux/spinlock_types.h  64  typedef struct spinlock {
LOCK_PADSIZE  macro  include/linux/spinlock_types.h  69  # define LOCK_PADSIZE (offsetof(struct raw_spinlock,dep_map))
__SPIN_LOCK_INITIALIZER  macro  include/linux/spinlock_types.h  79  #define __SPIN_LOCK_INITIALIZER(lockname) { { .rlock = __RAW_SPIN_LOCK_INITIALIZER(lockname) } }
__SPIN_LOCK_UNLOCKED  macro  include/linux/spinlock_types.h  82  #define __SPIN_LOCK_UNLOCKED(lockname) (spinlock_t ) __SPIN_LOCK_INITIALIZER(lockname)
DEFINE_SPINLOCK  macro  include/linux/spinlock_types.h  84  #define DEFINE_SPINLOCK(x) spinlock_t x = __SPIN_LOCK_UNLOCKED(x)
_ASM_X86_SPINLOCK_H  macro  arch/x86/include/asm/spinlock.h  2  #define _ASM_X86_SPINLOCK_H
LOCK_PTR_REG  macro  arch/x86/include/asm/spinlock.h  23  # define LOCK_PTR_REG "D"
UNLOCK_LOCK_PREFIX  macro  arch/x86/include/asm/spinlock.h  34  # define UNLOCK_LOCK_PREFIX
__ticket_spin_lock  function  arch/x86/include/asm/spinlock.h  50  static __always_inline void __ticket_spin_lock(arch_spinlock_t *lock)
__ticket_spin_trylock  function  arch/x86/include/asm/spinlock.h  65  static __always_inline int __ticket_spin_trylock(arch_spinlock_t *lock)
__ticket_spin_unlock  function  arch/x86/include/asm/spinlock.h  79  static __always_inline void __ticket_spin_unlock(arch_spinlock_t *lock)
__ticket_spin_is_locked  function  arch/x86/include/asm/spinlock.h  84  static inline int __ticket_spin_is_locked(arch_spinlock_t *lock)
__ticket_spin_is_contended  function  arch/x86/include/asm/spinlock.h  91  static inline int __ticket_spin_is_contended(arch_spinlock_t *lock)
arch_spin_is_locked  function  arch/x86/include/asm/paravirt.h  719  static inline int arch_spin_is_locked(struct arch_spinlock *lock)
arch_spin_is_contended  macro  arch/x86/include/asm/paravirt.h  728  #define arch_spin_is_contended arch_spin_is_contended
arch_spin_lock  function  arch/x86/include/asm/paravirt.h  730  static __always_inline void arch_spin_lock(struct arch_spinlock *lock)
arch_spin_trylock  function  arch/x86/include/asm/paravirt.h  741  static __always_inline int arch_spin_trylock(struct arch_spinlock *lock)
arch_spin_unlock  function  arch/x86/include/asm/paravirt.h  746  static __always_inline void arch_spin_unlock(struct arch_spinlock *lock)
arch_spin_lock_flags  function  arch/x86/include/asm/paravirt.h  736  static __always_inline void arch_spin_lock_flags(struct arch_spinlock *lock,unsigned long flags)
arch_spin_unlock_wait  macro  include/linux/spinlock_up.h  83  #define arch_spin_unlock_wait(lock) do { cpu_relax(); } while (arch_spin_is_locked(lock))
arch_read_can_lock  macro  include/linux/spinlock_up.h  79  #define arch_read_can_lock(lock) (((void)(lock),1))
arch_write_can_lock  macro  include/linux/spinlock_up.h  80  #define arch_write_can_lock(lock) (((void)(lock),1))
arch_read_lock  macro  include/linux/spinlock_up.h  61  #define arch_read_lock(lock) do { barrier(); (void)(lock); } while (0)
arch_write_lock  macro  include/linux/spinlock_up.h  62  #define arch_write_lock(lock) do { barrier(); (void)(lock); } while (0)
arch_read_trylock  macro  include/linux/spinlock_up.h  63  #define arch_read_trylock(lock) ({ barrier(); (void)(lock); 1; })
arch_write_trylock  macro  include/linux/spinlock_up.h  64  #define arch_write_trylock(lock) ({ barrier(); (void)(lock); 1; })
arch_read_unlock  macro  include/linux/spinlock_up.h  65  #define arch_read_unlock(lock) do { barrier(); (void)(lock); } while (0)
arch_write_unlock  macro  include/linux/spinlock_up.h  66  #define arch_write_unlock(lock) do { barrier(); (void)(lock); } while (0)
arch_read_lock_flags  macro  arch/x86/include/asm/spinlock.h  223  #define arch_read_lock_flags(lock,flags) arch_read_lock(lock)
arch_write_lock_flags  macro  arch/x86/include/asm/spinlock.h  224  #define arch_write_lock_flags(lock,flags) arch_write_lock(lock)
READ_LOCK_SIZE  macro  arch/x86/include/asm/spinlock.h  226  #undef READ_LOCK_SIZE
READ_LOCK_ATOMIC  macro  arch/x86/include/asm/spinlock.h  227  #undef READ_LOCK_ATOMIC
WRITE_LOCK_ADD  macro  arch/x86/include/asm/spinlock.h  228  #undef WRITE_LOCK_ADD
WRITE_LOCK_SUB  macro  arch/x86/include/asm/spinlock.h  229  #undef WRITE_LOCK_SUB
WRITE_LOCK_CMP  macro  arch/x86/include/asm/spinlock.h  230  #undef WRITE_LOCK_CMP
arch_spin_relax  macro  arch/x86/include/asm/spinlock.h  232  #define arch_spin_relax(lock) cpu_relax()
arch_read_relax  macro  arch/x86/include/asm/spinlock.h  233  #define arch_read_relax(lock) cpu_relax()
arch_write_relax  macro  arch/x86/include/asm/spinlock.h  234  #define arch_write_relax(lock) cpu_relax()
ARCH_HAS_SMP_MB_AFTER_LOCK  macro  arch/x86/include/asm/spinlock.h  238  #define ARCH_HAS_SMP_MB_AFTER_LOCK
__LINUX_SPINLOCK_UP_H  macro  include/linux/spinlock_up.h  2  #define __LINUX_SPINLOCK_UP_H
__LINUX_RWLOCK_H  macro  include/linux/rwlock.h  2  #define __LINUX_RWLOCK_H
__rwlock_init  prototype  include/linux/rwlock.h  19  extern void __rwlock_init(rwlock_t *lock,const char *name,struct lock_class_key *key);
rwlock_init  macro  include/linux/rwlock.h  28  # define rwlock_init(lock) do { *(lock) = __RW_LOCK_UNLOCKED(lock); } while (0)
do_raw_read_lock_flags  macro  include/linux/rwlock.h  43  # define do_raw_read_lock_flags(lock,flags) do {__acquire(lock); arch_read_lock_flags(&(lock)->raw_lock, *(flags)); } while (0)
do_raw_read_trylock  macro  include/linux/rwlock.h  44  # define do_raw_read_trylock(rwlock) arch_read_trylock(&(rwlock)->raw_lock)
do_raw_write_lock_flags  macro  include/linux/rwlock.h  48  # define do_raw_write_lock_flags(lock,flags) do {__acquire(lock); arch_write_lock_flags(&(lock)->raw_lock, *(flags)); } while (0)
do_raw_write_trylock  macro  include/linux/rwlock.h  49  # define do_raw_write_trylock(rwlock) arch_write_trylock(&(rwlock)->raw_lock)
do_raw_read_lock  macro  include/linux/rwlock.h  41  # define do_raw_read_lock(rwlock) do {__acquire(lock); arch_read_lock(&(rwlock)->raw_lock); } while (0)
do_raw_read_unlock  macro  include/linux/rwlock.h  45  # define do_raw_read_unlock(rwlock) do {arch_read_unlock(&(rwlock)->raw_lock); __release(lock); } while (0)
do_raw_write_lock  macro  include/linux/rwlock.h  46  # define do_raw_write_lock(rwlock) do {__acquire(lock); arch_write_lock(&(rwlock)->raw_lock); } while (0)
do_raw_write_unlock  macro  include/linux/rwlock.h  50  # define do_raw_write_unlock(rwlock) do {arch_write_unlock(&(rwlock)->raw_lock); __release(lock); } while (0)
read_can_lock  macro  include/linux/rwlock.h  53  #define read_can_lock(rwlock) arch_read_can_lock(&(rwlock)->raw_lock)
write_can_lock  macro  include/linux/rwlock.h  54  #define write_can_lock(rwlock) arch_write_can_lock(&(rwlock)->raw_lock)
read_trylock  macro  include/linux/rwlock.h  61  #define read_trylock(lock) __cond_lock(lock,_raw_read_trylock(lock))
write_trylock  macro  include/linux/rwlock.h  62  #define write_trylock(lock) __cond_lock(lock,_raw_write_trylock(lock))
write_lock  macro  include/linux/rwlock.h  64  #define write_lock(lock) _raw_write_lock(lock)
read_lock  macro  include/linux/rwlock.h  65  #define read_lock(lock) _raw_read_lock(lock)
read_lock_irqsave  macro  include/linux/rwlock.h  86  #define read_lock_irqsave(lock,flags) do { typecheck(unsigned long, flags); _raw_read_lock_irqsave(lock, flags); } while (0)
write_lock_irqsave  macro  include/linux/rwlock.h  91  #define write_lock_irqsave(lock,flags) do { typecheck(unsigned long, flags); _raw_write_lock_irqsave(lock, flags); } while (0)
read_lock_irq  macro  include/linux/rwlock.h  95  #define read_lock_irq(lock) _raw_read_lock_irq(lock)
read_lock_bh  macro  include/linux/rwlock.h  96  #define read_lock_bh(lock) _raw_read_lock_bh(lock)
write_lock_irq  macro  include/linux/rwlock.h  97  #define write_lock_irq(lock) _raw_write_lock_irq(lock)
write_lock_bh  macro  include/linux/rwlock.h  98  #define write_lock_bh(lock) _raw_write_lock_bh(lock)
read_unlock  macro  include/linux/rwlock.h  99  #define read_unlock(lock) _raw_read_unlock(lock)
write_unlock  macro  include/linux/rwlock.h  100  #define write_unlock(lock) _raw_write_unlock(lock)
read_unlock_irq  macro  include/linux/rwlock.h  101  #define read_unlock_irq(lock) _raw_read_unlock_irq(lock)
write_unlock_irq  macro  include/linux/rwlock.h  102  #define write_unlock_irq(lock) _raw_write_unlock_irq(lock)
read_unlock_irqrestore  macro  include/linux/rwlock.h  108  #define read_unlock_irqrestore(lock,flags) do { typecheck(unsigned long, flags); _raw_read_unlock_irqrestore(lock, flags); } while (0)
read_unlock_bh  macro  include/linux/rwlock.h  109  #define read_unlock_bh(lock) _raw_read_unlock_bh(lock)
write_unlock_irqrestore  macro  include/linux/rwlock.h  115  #define write_unlock_irqrestore(lock,flags) do { typecheck(unsigned long, flags); _raw_write_unlock_irqrestore(lock, flags); } while (0)
write_unlock_bh  macro  include/linux/rwlock.h  116  #define write_unlock_bh(lock) _raw_write_unlock_bh(lock)
write_trylock_irqsave  macro  include/linux/rwlock.h  123  #define write_trylock_irqsave(lock,flags) ({ local_irq_save(flags); write_trylock(lock) ? 1 : ({ local_irq_restore(flags); 0; }); })
__LINUX_SPINLOCK_API_SMP_H  macro  include/linux/spinlock_api_smp.h  2  #define __LINUX_SPINLOCK_API_SMP_H
in_lock_functions  macro  include/linux/spinlock_api_up.h  17  #define in_lock_functions(ADDR) 0
assert_raw_spin_locked  macro  include/linux/spinlock_api_up.h  19  #define assert_raw_spin_locked(lock) do { (void)(lock); } while (0)
_raw_spin_trylock  macro  include/linux/spinlock_api_up.h  65  #define _raw_spin_trylock(lock) ({ __LOCK(lock); 1; })
_raw_spin_trylock_bh  macro  include/linux/spinlock_api_up.h  68  #define _raw_spin_trylock_bh(lock) ({ __LOCK_BH(lock); 1; })
_raw_spin_lock  macro  include/linux/spinlock_api_up.h  52  #define _raw_spin_lock(lock) __LOCK(lock)
_raw_spin_lock_bh  macro  include/linux/spinlock_api_up.h  56  #define _raw_spin_lock_bh(lock) __LOCK_BH(lock)
_raw_spin_lock_irq  macro  include/linux/spinlock_api_up.h  59  #define _raw_spin_lock_irq(lock) __LOCK_IRQ(lock)
_raw_spin_lock_irqsave  macro  include/linux/spinlock_api_up.h  62  #define _raw_spin_lock_irqsave(lock,flags) __LOCK_IRQSAVE(lock,flags)
_raw_spin_unlock  macro  include/linux/spinlock_api_up.h  69  #define _raw_spin_unlock(lock) __UNLOCK(lock)
_raw_spin_unlock_bh  macro  include/linux/spinlock_api_up.h  72  #define _raw_spin_unlock_bh(lock) __UNLOCK_BH(lock)
_raw_spin_unlock_irq  macro  include/linux/spinlock_api_up.h  75  #define _raw_spin_unlock_irq(lock) __UNLOCK_IRQ(lock)
_raw_spin_unlock_irqrestore  macro  include/linux/spinlock_api_up.h  79  #define _raw_spin_unlock_irqrestore(lock,flags) __UNLOCK_IRQRESTORE(lock, flags)
__raw_spin_trylock  function  include/linux/spinlock_api_smp.h  86  static inline int __raw_spin_trylock(raw_spinlock_t *lock)
__raw_spin_lock_irqsave  function  include/linux/spinlock_api_smp.h  104  static inline unsigned long __raw_spin_lock_irqsave(raw_spinlock_t *lock)
__raw_spin_lock_irq  function  include/linux/spinlock_api_smp.h  124  static inline void __raw_spin_lock_irq(raw_spinlock_t *lock)
__raw_spin_lock_bh  function  include/linux/spinlock_api_smp.h  132  static inline void __raw_spin_lock_bh(raw_spinlock_t *lock)
__raw_spin_lock  function  include/linux/spinlock_api_smp.h  140  static inline void __raw_spin_lock(raw_spinlock_t *lock)
__raw_spin_unlock  function  include/linux/spinlock_api_smp.h  149  static inline void __raw_spin_unlock(raw_spinlock_t *lock)
__raw_spin_unlock_irqrestore  function  include/linux/spinlock_api_smp.h  157  static inline void __raw_spin_unlock_irqrestore(raw_spinlock_t *lock,unsigned long flags)
__raw_spin_unlock_irq  function  include/linux/spinlock_api_smp.h  165  static inline void __raw_spin_unlock_irq(raw_spinlock_t *lock)
__raw_spin_unlock_bh  function  include/linux/spinlock_api_smp.h  173  static inline void __raw_spin_unlock_bh(raw_spinlock_t *lock)
__raw_spin_trylock_bh  function  include/linux/spinlock_api_smp.h  181  static inline int __raw_spin_trylock_bh(raw_spinlock_t *lock)
__LINUX_SPINLOCK_API_UP_H  macro  include/linux/spinlock_api_up.h  2  #define __LINUX_SPINLOCK_API_UP_H
__LOCK  macro  include/linux/spinlock_api_up.h  28  #define __LOCK(lock) do { preempt_disable(); __acquire(lock); (void)(lock); } while (0)
__LOCK_BH  macro  include/linux/spinlock_api_up.h  31  #define __LOCK_BH(lock) do { local_bh_disable(); __LOCK(lock); } while (0)
__LOCK_IRQ  macro  include/linux/spinlock_api_up.h  34  #define __LOCK_IRQ(lock) do { local_irq_disable(); __LOCK(lock); } while (0)
__LOCK_IRQSAVE  macro  include/linux/spinlock_api_up.h  37  #define __LOCK_IRQSAVE(lock,flags) do { local_irq_save(flags); __LOCK(lock); } while (0)
__UNLOCK  macro  include/linux/spinlock_api_up.h  40  #define __UNLOCK(lock) do { preempt_enable(); __release(lock); (void)(lock); } while (0)
__UNLOCK_BH  macro  include/linux/spinlock_api_up.h  44  #define __UNLOCK_BH(lock) do { preempt_enable_no_resched(); local_bh_enable(); __release(lock); (void)(lock); } while (0)
__UNLOCK_IRQ  macro  include/linux/spinlock_api_up.h  47  #define __UNLOCK_IRQ(lock) do { local_irq_enable(); __UNLOCK(lock); } while (0)
__UNLOCK_IRQRESTORE  macro  include/linux/spinlock_api_up.h  50  #define __UNLOCK_IRQRESTORE(lock,flags) do { local_irq_restore(flags); __UNLOCK(lock); } while (0)
_raw_spin_lock_nested  macro  include/linux/spinlock_api_up.h  53  #define _raw_spin_lock_nested(lock,subclass) __LOCK(lock)
_raw_read_lock  macro  include/linux/rwlock_api_smp.h  44  #define _raw_read_lock(lock) __raw_read_lock(lock)
_raw_write_lock  macro  include/linux/rwlock_api_smp.h  48  #define _raw_write_lock(lock) __raw_write_lock(lock)
_raw_read_lock_bh  macro  include/linux/rwlock_api_smp.h  52  #define _raw_read_lock_bh(lock) __raw_read_lock_bh(lock)
_raw_write_lock_bh  macro  include/linux/rwlock_api_smp.h  56  #define _raw_write_lock_bh(lock) __raw_write_lock_bh(lock)
_raw_read_lock_irq  macro  include/linux/rwlock_api_smp.h  60  #define _raw_read_lock_irq(lock) __raw_read_lock_irq(lock)
_raw_write_lock_irq  macro  include/linux/rwlock_api_smp.h  64  #define _raw_write_lock_irq(lock) __raw_write_lock_irq(lock)
_raw_read_lock_irqsave  macro  include/linux/rwlock_api_smp.h  68  #define _raw_read_lock_irqsave(lock) __raw_read_lock_irqsave(lock)
_raw_write_lock_irqsave  macro  include/linux/rwlock_api_smp.h  72  #define _raw_write_lock_irqsave(lock) __raw_write_lock_irqsave(lock)
_raw_read_trylock  macro  include/linux/rwlock_api_smp.h  76  #define _raw_read_trylock(lock) __raw_read_trylock(lock)
_raw_write_trylock  macro  include/linux/rwlock_api_smp.h  80  #define _raw_write_trylock(lock) __raw_write_trylock(lock)
_raw_read_unlock  macro  include/linux/rwlock_api_smp.h  84  #define _raw_read_unlock(lock) __raw_read_unlock(lock)
_raw_write_unlock  macro  include/linux/rwlock_api_smp.h  88  #define _raw_write_unlock(lock) __raw_write_unlock(lock)
_raw_write_unlock_bh  macro  include/linux/rwlock_api_smp.h  96  #define _raw_write_unlock_bh(lock) __raw_write_unlock_bh(lock)
_raw_read_unlock_bh  macro  include/linux/rwlock_api_smp.h  92  #define _raw_read_unlock_bh(lock) __raw_read_unlock_bh(lock)
_raw_read_unlock_irq  macro  include/linux/rwlock_api_smp.h  100  #define _raw_read_unlock_irq(lock) __raw_read_unlock_irq(lock)
_raw_write_unlock_irq  macro  include/linux/rwlock_api_smp.h  104  #define _raw_write_unlock_irq(lock) __raw_write_unlock_irq(lock)
_raw_read_unlock_irqrestore  macro  include/linux/rwlock_api_smp.h  109  #define _raw_read_unlock_irqrestore(lock,flags) __raw_read_unlock_irqrestore(lock, flags)
_raw_write_unlock_irqrestore  macro  include/linux/rwlock_api_smp.h  114  #define _raw_write_unlock_irqrestore(lock,flags) __raw_write_unlock_irqrestore(lock, flags)
_ASM_X86_BITOPS_H  macro  arch/x86/include/asm/bitops.h  2  #define _ASM_X86_BITOPS_H
BIT_64  macro  arch/x86/include/asm/bitops.h  18  #define BIT_64(n) (U64_C(1) << (n))
BITOP_ADDR  macro  arch/x86/include/asm/bitops.h  33  #define BITOP_ADDR(x) "+m" (*(volatile long *) (x))
ADDR  macro  arch/x86/include/asm/bitops.h  392  #undef ADDR
IS_IMMEDIATE  macro  arch/x86/include/asm/bitops.h  42  #define IS_IMMEDIATE(nr) (__builtin_constant_p(nr))
CONST_MASK_ADDR  macro  arch/x86/include/asm/bitops.h  43  #define CONST_MASK_ADDR(nr,addr) BITOP_ADDR((void *)(addr) + ((nr)>>3))
CONST_MASK  macro  arch/x86/include/asm/bitops.h  44  #define CONST_MASK(nr) (1 << ((nr) & 7))
set_bit  function  arch/x86/include/asm/bitops.h  62  set_bit(unsigned int nr,volatile unsigned long *addr)
__set_bit  function  arch/x86/include/asm/bitops.h  84  static inline void __set_bit(int nr,volatile unsigned long *addr)
clear_bit  function  arch/x86/include/asm/bitops.h  100  clear_bit(int nr,volatile unsigned long *addr)
clear_bit_unlock  function  arch/x86/include/asm/bitops.h  121  static inline void clear_bit_unlock(unsigned nr,volatile unsigned long *addr)
__clear_bit  function  arch/x86/include/asm/bitops.h  127  static inline void __clear_bit(int nr,volatile unsigned long *addr)
__clear_bit_unlock  function  arch/x86/include/asm/bitops.h  144  static inline void __clear_bit_unlock(unsigned nr,volatile unsigned long *addr)
smp_mb__before_clear_bit  macro  arch/x86/include/asm/bitops.h  150  #define smp_mb__before_clear_bit() barrier()
smp_mb__after_clear_bit  macro  arch/x86/include/asm/bitops.h  151  #define smp_mb__after_clear_bit() barrier()
__change_bit  function  arch/x86/include/asm/bitops.h  162  static inline void __change_bit(int nr,volatile unsigned long *addr)
change_bit  function  arch/x86/include/asm/bitops.h  176  static inline void change_bit(int nr,volatile unsigned long *addr)
test_and_set_bit  function  arch/x86/include/asm/bitops.h  197  static inline int test_and_set_bit(int nr,volatile unsigned long *addr)
test_and_set_bit_lock  function  arch/x86/include/asm/bitops.h  215  test_and_set_bit_lock(int nr,volatile unsigned long *addr)
__test_and_set_bit  function  arch/x86/include/asm/bitops.h  229  static inline int __test_and_set_bit(int nr,volatile unsigned long *addr)
test_and_clear_bit  function  arch/x86/include/asm/bitops.h  248  static inline int test_and_clear_bit(int nr,volatile unsigned long *addr)
__test_and_clear_bit  function  arch/x86/include/asm/bitops.h  275  static inline int __test_and_clear_bit(int nr,volatile unsigned long *addr)
__test_and_change_bit  function  arch/x86/include/asm/bitops.h  287  static inline int __test_and_change_bit(int nr,volatile unsigned long *addr)
test_and_change_bit  function  arch/x86/include/asm/bitops.h  307  static inline int test_and_change_bit(int nr,volatile unsigned long *addr)
constant_test_bit  function  arch/x86/include/asm/bitops.h  318  static __always_inline int constant_test_bit(unsigned int nr,const volatile unsigned long *addr)
variable_test_bit  function  arch/x86/include/asm/bitops.h  324  static inline int variable_test_bit(int nr,volatile const unsigned long *addr)
test_bit  macro  arch/x86/include/asm/bitops.h  348  #define test_bit(nr,addr) (__builtin_constant_p((nr)) ? constant_test_bit((nr), (addr)) : variable_test_bit((nr), (addr)))
__ffs  function  arch/x86/include/asm/bitops.h  356  static inline unsigned long __ffs(unsigned long word)
ffz  function  arch/x86/include/asm/bitops.h  370  static inline unsigned long ffz(unsigned long word)
__fls  function  arch/x86/include/asm/bitops.h  384  static inline unsigned long __fls(unsigned long word)
ffs  function  arch/x86/include/asm/bitops.h  406  static inline int ffs(int x)
fls  function  arch/x86/include/asm/bitops.h  447  static inline int fls(int x)
fls64  function  include/asm-generic/bitops/fls64.h  26  static __always_inline int fls64(__u64 x)
ARCH_HAS_FAST_MULTIPLIER  macro  arch/x86/include/asm/bitops.h  510  #define ARCH_HAS_FAST_MULTIPLIER 1
_ASM_X86_IO_H  macro  arch/x86/include/asm/io.h  2  #define _ASM_X86_IO_H
ARCH_HAS_IOREMAP_WC  macro  arch/x86/include/asm/io.h  37  #define ARCH_HAS_IOREMAP_WC
build_mmio_read  macro  arch/x86/include/asm/io.h  46  #define build_mmio_read(name,size,type,reg,barrier) static inline type name(const volatile void __iomem *addr) { type ret; asm volatile("mov" size " %1,%0":reg (ret) :"m" (*(volatile type __force *)addr) barrier); return ret; }
build_mmio_write  macro  arch/x86/include/asm/io.h  51  #define build_mmio_write(name,size,type,reg,barrier) static inline void name(type val, volatile void __iomem *addr) { asm volatile("mov" size " %0,%1": :reg (val), "m" (*(volatile type __force *)addr) barrier); }
readb_relaxed  macro  arch/x86/include/asm/io.h  69  #define readb_relaxed(a) __readb(a)
readw_relaxed  macro  arch/x86/include/asm/io.h  70  #define readw_relaxed(a) __readw(a)
readl_relaxed  macro  arch/x86/include/asm/io.h  71  #define readl_relaxed(a) __readl(a)
__raw_readb  macro  arch/x86/include/asm/io.h  72  #define __raw_readb __readb
__raw_readw  macro  arch/x86/include/asm/io.h  73  #define __raw_readw __readw
__raw_readl  macro  arch/x86/include/asm/io.h  74  #define __raw_readl __readl
__raw_writeb  macro  arch/x86/include/asm/io.h  76  #define __raw_writeb __writeb
__raw_writew  macro  arch/x86/include/asm/io.h  77  #define __raw_writew __writew
__raw_writel  macro  arch/x86/include/asm/io.h  78  #define __raw_writel __writel
mmiowb  macro  arch/x86/include/asm/io.h  80  #define mmiowb() barrier()
readq_relaxed  macro  arch/x86/include/asm/io.h  87  #define readq_relaxed(a) readq(a)
__raw_readq  macro  arch/x86/include/asm/io.h  89  #define __raw_readq(a) readq(a)
__raw_writeq  macro  arch/x86/include/asm/io.h  90  #define __raw_writeq(val,addr) writeq(val,addr)
readq  macro  arch/x86/include/asm/io.h  93  #define readq readq
writeq  macro  arch/x86/include/asm/io.h  94  #define writeq writeq
virt_to_phys  function  arch/x86/include/asm/io.h  111  static inline phys_addr_t virt_to_phys(volatile void *address)
phys_to_virt  function  arch/x86/include/asm/io.h  129  static inline void *phys_to_virt(phys_addr_t address)
page_to_phys  macro  arch/x86/include/asm/io.h  137  #define page_to_phys(page) ((dma_addr_t)page_to_pfn(page) << PAGE_SHIFT)
isa_virt_to_bus  function  arch/x86/include/asm/io.h  144  static inline unsigned int isa_virt_to_bus(volatile void *address)
isa_page_to_bus  macro  arch/x86/include/asm/io.h  148  #define isa_page_to_bus(page) ((unsigned int)page_to_phys(page))
isa_bus_to_virt  macro  arch/x86/include/asm/io.h  149  #define isa_bus_to_virt phys_to_virt
virt_to_bus  macro  arch/x86/include/asm/io.h  157  #define virt_to_bus virt_to_phys
bus_to_virt  macro  arch/x86/include/asm/io.h  158  #define bus_to_virt phys_to_virt
ioremap_nocache  prototype  arch/x86/include/asm/io.h  174  extern void __iomem *ioremap_nocache(resource_size_t offset,unsigned long size);
ioremap_cache  prototype  arch/x86/include/asm/io.h  175  extern void __iomem *ioremap_cache(resource_size_t offset,unsigned long size);
ioremap_prot  prototype  arch/x86/include/asm/io.h  177  extern void __iomem *ioremap_prot(resource_size_t offset,unsigned long size,unsigned long prot_val);
ioremap  function  arch/x86/include/asm/io.h  182  static inline void __iomem *ioremap(resource_size_t offset,unsigned long size)
iounmap  prototype  arch/x86/include/asm/io.h  187  extern void iounmap(volatile void __iomem *addr);
set_iounmap_nonlazy  prototype  arch/x86/include/asm/io.h  189  extern void set_iounmap_nonlazy(void);
xlate_dev_kmem_ptr  macro  arch/x86/include/asm/io.h  200  #define xlate_dev_kmem_ptr(p) p
memset_io  function  arch/x86/include/asm/io.h  203  memset_io(volatile void __iomem *addr,unsigned char val,size_t count)
memcpy_fromio  function  arch/x86/include/asm/io.h  209  memcpy_fromio(void *dst,const volatile void __iomem *src,size_t count)
memcpy_toio  function  arch/x86/include/asm/io.h  215  memcpy_toio(volatile void __iomem *dst,const void *src,size_t count)
__ISA_IO_base  macro  arch/x86/include/asm/io.h  228  #define __ISA_IO_base ((char __iomem *)(PAGE_OFFSET))
flush_write_buffers  function  arch/x86/include/asm/io.h  238  static inline void flush_write_buffers(void)
native_io_delay  prototype  arch/x86/include/asm/io.h  247  extern void native_io_delay(void);
io_delay_init  prototype  arch/x86/include/asm/io.h  250  extern void io_delay_init(void);
slow_down_io  function  arch/x86/include/asm/paravirt.h  312  static inline void slow_down_io(void)
BUILDIO  macro  arch/x86/include/asm/io.h  306  #define BUILDIO(bwl,bw,type) static inline void out##bwl(unsigned type value, int port) { asm volatile("out" #bwl " %" #bw "0, %w1" : : "a"(value), "Nd"(port)); } static inline unsigned type in##bwl(int port) { unsigned type value; asm volatile("in" #bwl " %w1, %" #bw "0" : "=a"(value) : "Nd"(port)); return value; } static inline void out##bwl##_p(unsigned type value, int port) { out##bwl(value, port); slow_down_io(); } static inline unsigned type in##bwl##_p(int port) { unsigned type value = in##bwl(port); slow_down_io(); return value; } static inline void outs##bwl(int port, const void *addr, unsigned long count) { asm volatile("rep; outs" #bwl : "+S"(addr), "+c"(count) : "d"(port)); } static inline void ins##bwl(int port, void *addr, unsigned long count) { asm volatile("rep; ins" #bwl : "+D"(addr), "+c"(count) : "d"(port)); }
xlate_dev_mem_ptr  prototype  arch/x86/include/asm/io.h  312  extern void *xlate_dev_mem_ptr(unsigned long phys);
unxlate_dev_mem_ptr  prototype  arch/x86/include/asm/io.h  313  extern void unxlate_dev_mem_ptr(unsigned long phys,void *addr);
ioremap_change_attr  prototype  arch/x86/include/asm/io.h  316  extern int ioremap_change_attr(unsigned long vaddr,unsigned long size,unsigned long prot_val);
ioremap_wc  macro  include/asm-generic/iomap.h  66  #define ioremap_wc ioremap_nocache
early_ioremap_init  prototype  arch/x86/include/asm/io.h  324  extern void early_ioremap_init(void);
early_ioremap_reset  prototype  arch/x86/include/asm/io.h  325  extern void early_ioremap_reset(void);
early_ioremap  prototype  arch/x86/include/asm/io.h  327  extern void __iomem *early_ioremap(resource_size_t phys_addr,unsigned long size);
early_memremap  prototype  arch/x86/include/asm/io.h  329  extern void __iomem *early_memremap(resource_size_t phys_addr,unsigned long size);
early_iounmap  prototype  arch/x86/include/asm/io.h  330  extern void early_iounmap(void __iomem *addr,unsigned long size);
fixup_early_ioremap  prototype  arch/x86/include/asm/io.h  331  extern void fixup_early_ioremap(void);
is_early_ioremap_ptep  prototype  arch/x86/include/asm/io.h  332  extern bool is_early_ioremap_ptep(pte_t *ptep);
xen_biovec_phys_mergeable  prototype  arch/x86/include/asm/io.h  339  extern bool xen_biovec_phys_mergeable(const struct bio_vec *vec1,const struct bio_vec *vec2);
BIOVEC_PHYS_MERGEABLE  macro  arch/x86/include/asm/io.h  343  #define BIOVEC_PHYS_MERGEABLE(vec1,vec2) (__BIOVEC_PHYS_MERGEABLE(vec1, vec2) && (!xen_domain() || xen_biovec_phys_mergeable(vec1, vec2)))
IO_SPACE_LIMIT  macro  arch/x86/include/asm/io.h  346  #define IO_SPACE_LIMIT 0xffff
_ASM_X86_UACCESS_H  macro  arch/x86/include/asm/uaccess.h  2  #define _ASM_X86_UACCESS_H
VERIFY_READ  macro  arch/x86/include/asm/uaccess.h  14  #define VERIFY_READ 0
VERIFY_WRITE  macro  arch/x86/include/asm/uaccess.h  15  #define VERIFY_WRITE 1
MAKE_MM_SEG  macro  arch/x86/include/asm/uaccess.h  25  #define MAKE_MM_SEG(s) ((mm_segment_t) { (s) })
KERNEL_DS  macro  arch/x86/include/asm/uaccess.h  27  #define KERNEL_DS MAKE_MM_SEG(-1UL)
USER_DS  macro  arch/x86/include/asm/uaccess.h  28  #define USER_DS MAKE_MM_SEG(TASK_SIZE_MAX)
get_ds  macro  arch/x86/include/asm/uaccess.h  30  #define get_ds() (KERNEL_DS)
get_fs  macro  arch/x86/include/asm/uaccess.h  31  #define get_fs() (current_thread_info()->addr_limit)
set_fs  macro  arch/x86/include/asm/uaccess.h  32  #define set_fs(x) (current_thread_info()->addr_limit = (x))
segment_eq  macro  arch/x86/include/asm/uaccess.h  34  #define segment_eq(a,b) ((a).seg == (b).seg)
user_addr_max  macro  arch/x86/include/asm/uaccess.h  36  #define user_addr_max() (current_thread_info()->addr_limit.seg)
__addr_ok  macro  arch/x86/include/asm/uaccess.h  38  #define __addr_ok(addr) ((unsigned long __force)(addr) < user_addr_max())
__range_not_ok  macro  arch/x86/include/asm/uaccess.h  59  #define __range_not_ok(addr,size,limit) ({ unsigned long flag, roksum; __chk_user_ptr(addr); asm("add %3,%1 ; sbb %0,%0 ; cmp %1,%4 ; sbb $0,%0" : "=&r" (flag), "=r" (roksum) : "1" (addr), "g" ((long)(size)), "rm" (limit)); flag; })
access_ok  macro  arch/x86/include/asm/uaccess.h  81  #define access_ok(type,addr,size) (likely(__range_not_ok(addr, size, user_addr_max()) == 0))
exception_table_entry  struct  arch/x86/include/asm/uaccess.h  97  struct exception_table_entry {
ARCH_HAS_SORT_EXTABLE  macro  arch/x86/include/asm/uaccess.h  101  #define ARCH_HAS_SORT_EXTABLE
ARCH_HAS_SEARCH_EXTABLE  macro  arch/x86/include/asm/uaccess.h  102  #define ARCH_HAS_SEARCH_EXTABLE
fixup_exception  prototype  arch/x86/include/asm/uaccess.h  104  extern int fixup_exception(struct pt_regs *regs);
early_fixup_exception  prototype  arch/x86/include/asm/uaccess.h  105  extern int early_fixup_exception(unsigned long *ip);
__get_user_1  prototype  arch/x86/include/asm/uaccess.h  122  extern int __get_user_1(void);
__get_user_2  prototype  arch/x86/include/asm/uaccess.h  123  extern int __get_user_2(void);
__get_user_4  prototype  arch/x86/include/asm/uaccess.h  124  extern int __get_user_4(void);
__get_user_8  macro  arch/x86/include/asm/uaccess.h  158  #define __get_user_8(__ret_gu,__val_gu,ptr) __get_user_x(8, __ret_gu, __val_gu, ptr)
__get_user_bad  prototype  arch/x86/include/asm/uaccess.h  126  extern int __get_user_bad(void);
__get_user_x  macro  arch/x86/include/asm/uaccess.h  132  #define __get_user_x(size,ret,x,ptr) asm volatile("call __get_user_" #size : "=a" (ret), "=d" (x) : "0" (ptr)) 
get_user  macro  arch/x86/include/asm/uaccess.h  186  #define get_user(x,ptr) ({ int __ret_gu; unsigned long __val_gu; __chk_user_ptr(ptr); might_fault(); switch (sizeof(*(ptr))) { case 1: __get_user_x(1, __ret_gu, __val_gu, ptr); break; case 2: __get_user_x(2, __ret_gu, __val_gu, ptr); break; case 4: __get_user_x(4, __ret_gu, __val_gu, ptr); break; case 8: __get_user_8(__ret_gu, __val_gu, ptr); break; default: __get_user_x(X, __ret_gu, __val_gu, ptr); break; } (x) = (__typeof__(*(ptr)))__val_gu; __ret_gu; })
__put_user_x  macro  arch/x86/include/asm/uaccess.h  190  #define __put_user_x(size,x,ptr,__ret_pu) asm volatile("call __put_user_" #size : "=a" (__ret_pu) : "0" ((typeof(*(ptr)))(x)), "c" (ptr) : "ebx")
__put_user_asm_u64  macro  arch/x86/include/asm/uaccess.h  223  #define __put_user_asm_u64(x,ptr,retval,errret) __put_user_asm(x, ptr, retval, "q", "", "er", errret)
__put_user_asm_ex_u64  macro  arch/x86/include/asm/uaccess.h  225  #define __put_user_asm_ex_u64(x,addr) __put_user_asm_ex(x, addr, "q", "", "er")
__put_user_x8  macro  arch/x86/include/asm/uaccess.h  226  #define __put_user_x8(x,ptr,__ret_pu) __put_user_x(8,x,ptr,__ret_pu)
__put_user_bad  prototype  arch/x86/include/asm/uaccess.h  229  extern void __put_user_bad(void);
__put_user_1  prototype  arch/x86/include/asm/uaccess.h  235  extern void __put_user_1(void);
__put_user_2  prototype  arch/x86/include/asm/uaccess.h  236  extern void __put_user_2(void);
__put_user_4  prototype  arch/x86/include/asm/uaccess.h  237  extern void __put_user_4(void);
__put_user_8  prototype  arch/x86/include/asm/uaccess.h  238  extern void __put_user_8(void);
put_user  macro  arch/x86/include/asm/uaccess.h  281  #define put_user(x,ptr) ({ int __ret_pu; __typeof__(*(ptr)) __pu_val; __chk_user_ptr(ptr); might_fault(); __pu_val = x; switch (sizeof(*(ptr))) { case 1: __put_user_x(1, __pu_val, ptr, __ret_pu); break; case 2: __put_user_x(2, __pu_val, ptr, __ret_pu); break; case 4: __put_user_x(4, __pu_val, ptr, __ret_pu); break; case 8: __put_user_x8(__pu_val, ptr, __ret_pu); break; default: __put_user_x(X, __pu_val, ptr, __ret_pu); break; } __ret_pu; })
__put_user_size  macro  arch/x86/include/asm/uaccess.h  304  #define __put_user_size(x,ptr,size,retval,errret) do { retval = 0; __chk_user_ptr(ptr); switch (size) { case 1: __put_user_asm(x, ptr, retval, "b", "b", "iq", errret); break; case 2: __put_user_asm(x, ptr, retval, "w", "w", "ir", errret); break; case 4: __put_user_asm(x, ptr, retval, "l", "k", "ir", errret); break; case 8: __put_user_asm_u64((__typeof__(*ptr))(x), ptr, retval, errret); break; default: __put_user_bad(); } } while (0)
__put_user_size_ex  macro  arch/x86/include/asm/uaccess.h  325  #define __put_user_size_ex(x,ptr,size) do { __chk_user_ptr(ptr); switch (size) { case 1: __put_user_asm_ex(x, ptr, "b", "b", "iq"); break; case 2: __put_user_asm_ex(x, ptr, "w", "w", "ir"); break; case 4: __put_user_asm_ex(x, ptr, "l", "k", "ir"); break; case 8: __put_user_asm_ex_u64((__typeof__(*ptr))(x), ptr); break; default: __put_user_bad(); } } while (0)
__get_user_asm_u64  macro  arch/x86/include/asm/uaccess.h  332  #define __get_user_asm_u64(x,ptr,retval,errret) __get_user_asm(x, ptr, retval, "q", "", "=r", errret)
__get_user_asm_ex_u64  macro  arch/x86/include/asm/uaccess.h  334  #define __get_user_asm_ex_u64(x,ptr) __get_user_asm_ex(x, ptr, "q", "", "=r")
__get_user_size  macro  arch/x86/include/asm/uaccess.h  357  #define __get_user_size(x,ptr,size,retval,errret) do { retval = 0; __chk_user_ptr(ptr); switch (size) { case 1: __get_user_asm(x, ptr, retval, "b", "b", "=q", errret); break; case 2: __get_user_asm(x, ptr, retval, "w", "w", "=r", errret); break; case 4: __get_user_asm(x, ptr, retval, "l", "k", "=r", errret); break; case 8: __get_user_asm_u64(x, ptr, retval, errret); break; default: (x) = __get_user_bad(); } } while (0)
__get_user_asm  macro  arch/x86/include/asm/uaccess.h  370  #define __get_user_asm(x,addr,err,itype,rtype,ltype,errret) asm volatile(ASM_STAC "\n" "1:	mov"itype" %2,%"rtype"1\n" "2: " ASM_CLAC "\n" ".section .fixup,\"ax\"\n" "3:	mov %3,%0\n" "	xor"itype" %"rtype"1,%"rtype"1\n" "	jmp 2b\n" ".previous\n" _ASM_EXTABLE(1b, 3b) : "=r" (err), ltype(x) : "m" (__m(addr)), "i" (errret), "0" (err))
__get_user_size_ex  macro  arch/x86/include/asm/uaccess.h  391  #define __get_user_size_ex(x,ptr,size) do { __chk_user_ptr(ptr); switch (size) { case 1: __get_user_asm_ex(x, ptr, "b", "b", "=q"); break; case 2: __get_user_asm_ex(x, ptr, "w", "w", "=r"); break; case 4: __get_user_asm_ex(x, ptr, "l", "k", "=r"); break; case 8: __get_user_asm_ex_u64(x, ptr); break; default: (x) = __get_user_bad(); } } while (0)
__get_user_asm_ex  macro  arch/x86/include/asm/uaccess.h  397  #define __get_user_asm_ex(x,addr,itype,rtype,ltype) asm volatile("1:	mov"itype" %1,%"rtype"0\n" "2:\n" _ASM_EXTABLE_EX(1b, 2b) : ltype(x) : "m" (__m(addr)))
__put_user_nocheck  macro  arch/x86/include/asm/uaccess.h  404  #define __put_user_nocheck(x,ptr,size) ({ int __pu_err; __put_user_size((x), (ptr), (size), __pu_err, -EFAULT); __pu_err; })
__get_user_nocheck  macro  arch/x86/include/asm/uaccess.h  413  #define __get_user_nocheck(x,ptr,size) ({ int __gu_err; unsigned long __gu_val; __get_user_size(__gu_val, (ptr), (size), __gu_err, -EFAULT); (x) = (__force __typeof__(*(ptr)))__gu_val; __gu_err; })
__large_struct  struct  arch/x86/include/asm/uaccess.h  416  struct __large_struct { unsigned long buf[100]; };
__m  macro  arch/x86/include/asm/uaccess.h  417  #define __m(x) (*(struct __large_struct __user *)(x))
__put_user_asm  macro  arch/x86/include/asm/uaccess.h  434  #define __put_user_asm(x,addr,err,itype,rtype,ltype,errret) asm volatile(ASM_STAC "\n" "1:	mov"itype" %"rtype"1,%2\n" "2: " ASM_CLAC "\n" ".section .fixup,\"ax\"\n" "3:	mov %3,%0\n" "	jmp 2b\n" ".previous\n" _ASM_EXTABLE(1b, 3b) : "=r"(err) : ltype(x), "m" (__m(addr)), "i" (errret), "0" (err))
__put_user_asm_ex  macro  arch/x86/include/asm/uaccess.h  440  #define __put_user_asm_ex(x,addr,itype,rtype,ltype) asm volatile("1:	mov"itype" %"rtype"0,%1\n" "2:\n" _ASM_EXTABLE_EX(1b, 2b) : : ltype(x), "m" (__m(addr)))
uaccess_try  macro  arch/x86/include/asm/uaccess.h  448  #define uaccess_try do { current_thread_info()->uaccess_err = 0; stac(); barrier();
uaccess_catch  macro  arch/x86/include/asm/uaccess.h  453  #define uaccess_catch(err) clac(); (err) |= (current_thread_info()->uaccess_err ? -EFAULT : 0); } while (0)
__get_user  macro  arch/x86/include/asm/uaccess.h  477  #define __get_user(x,ptr) __get_user_nocheck((x), (ptr), sizeof(*(ptr)))
__put_user  macro  arch/x86/include/asm/uaccess.h  500  #define __put_user(x,ptr) __put_user_nocheck((__typeof__(*(ptr)))(x), (ptr), sizeof(*(ptr)))
__get_user_unaligned  macro  arch/x86/include/asm/uaccess.h  502  #define __get_user_unaligned __get_user
__put_user_unaligned  macro  arch/x86/include/asm/uaccess.h  503  #define __put_user_unaligned __put_user
get_user_try  macro  arch/x86/include/asm/uaccess.h  512  #define get_user_try uaccess_try
get_user_catch  macro  arch/x86/include/asm/uaccess.h  513  #define get_user_catch(err) uaccess_catch(err)
get_user_ex  macro  arch/x86/include/asm/uaccess.h  519  #define get_user_ex(x,ptr) do { unsigned long __gue_val; __get_user_size_ex((__gue_val), (ptr), (sizeof(*(ptr)))); (x) = (__force __typeof__(*(ptr)))__gue_val; } while (0)
put_user_try  macro  arch/x86/include/asm/uaccess.h  521  #define put_user_try uaccess_try
put_user_catch  macro  arch/x86/include/asm/uaccess.h  522  #define put_user_catch(err) uaccess_catch(err)
put_user_ex  macro  arch/x86/include/asm/uaccess.h  525  #define put_user_ex(x,ptr) __put_user_size_ex((__typeof__(*(ptr)))(x), (ptr), sizeof(*(ptr)))
copy_from_user_nmi  prototype  arch/x86/include/asm/uaccess.h  528  copy_from_user_nmi(void *to,const void __user *from,unsigned long n);
strncpy_from_user  prototype  arch/x86/include/asm/uaccess.h  530  strncpy_from_user(char *dst,const char __user *src,long count);
strlen_user  prototype  arch/x86/include/asm/uaccess.h  532  extern __must_check long strlen_user(const char __user *str);
strnlen_user  prototype  arch/x86/include/asm/uaccess.h  533  extern __must_check long strnlen_user(const char __user *str,long n);
clear_user  prototype  arch/x86/include/asm/uaccess.h  535  unsigned long __must_check clear_user(void __user *mem,unsigned long len);
__clear_user  prototype  arch/x86/include/asm/uaccess.h  536  unsigned long __must_check __clear_user(void __user *mem,unsigned long len);
movsl_mask  struct  arch/x86/include/asm/uaccess.h  542  extern struct movsl_mask {
ARCH_HAS_NOCACHE_UACCESS  macro  arch/x86/include/asm/uaccess.h  547  #define ARCH_HAS_NOCACHE_UACCESS 1
_ASM_X86_APICDEF_H  macro  arch/x86/include/asm/apicdef.h  2  #define _ASM_X86_APICDEF_H
IO_APIC_DEFAULT_PHYS_BASE  macro  arch/x86/include/asm/apicdef.h  11  #define IO_APIC_DEFAULT_PHYS_BASE 0xfec00000
APIC_DEFAULT_PHYS_BASE  macro  arch/x86/include/asm/apicdef.h  12  #define APIC_DEFAULT_PHYS_BASE 0xfee00000
IO_APIC_SLOT_SIZE  macro  arch/x86/include/asm/apicdef.h  18  #define IO_APIC_SLOT_SIZE 1024
APIC_ID  macro  arch/x86/include/asm/apicdef.h  20  #define APIC_ID 0x20
APIC_LVR  macro  arch/x86/include/asm/apicdef.h  22  #define APIC_LVR 0x30
APIC_LVR_MASK  macro  arch/x86/include/asm/apicdef.h  23  #define APIC_LVR_MASK 0xFF00FF
APIC_LVR_DIRECTED_EOI  macro  arch/x86/include/asm/apicdef.h  24  #define APIC_LVR_DIRECTED_EOI (1 << 24)
GET_APIC_VERSION  macro  arch/x86/include/asm/apicdef.h  25  #define GET_APIC_VERSION(x) ((x) & 0xFFu)
GET_APIC_MAXLVT  macro  arch/x86/include/asm/apicdef.h  26  #define GET_APIC_MAXLVT(x) (((x) >> 16) & 0xFFu)
APIC_INTEGRATED  macro  arch/x86/include/asm/apicdef.h  30  # define APIC_INTEGRATED(x) (1)
APIC_XAPIC  macro  arch/x86/include/asm/apicdef.h  32  #define APIC_XAPIC(x) ((x) >= 0x14)
APIC_EXT_SPACE  macro  arch/x86/include/asm/apicdef.h  33  #define APIC_EXT_SPACE(x) ((x) & 0x80000000)
APIC_TASKPRI  macro  arch/x86/include/asm/apicdef.h  34  #define APIC_TASKPRI 0x80
APIC_TPRI_MASK  macro  arch/x86/include/asm/apicdef.h  35  #define APIC_TPRI_MASK 0xFFu
APIC_ARBPRI  macro  arch/x86/include/asm/apicdef.h  36  #define APIC_ARBPRI 0x90
APIC_ARBPRI_MASK  macro  arch/x86/include/asm/apicdef.h  37  #define APIC_ARBPRI_MASK 0xFFu
APIC_PROCPRI  macro  arch/x86/include/asm/apicdef.h  38  #define APIC_PROCPRI 0xA0
APIC_EOI  macro  arch/x86/include/asm/apicdef.h  39  #define APIC_EOI 0xB0
APIC_EOI_ACK  macro  arch/x86/include/asm/apicdef.h  40  #define APIC_EOI_ACK 0x0
APIC_RRR  macro  arch/x86/include/asm/apicdef.h  41  #define APIC_RRR 0xC0
APIC_LDR  macro  arch/x86/include/asm/apicdef.h  42  #define APIC_LDR 0xD0
APIC_LDR_MASK  macro  arch/x86/include/asm/apicdef.h  43  #define APIC_LDR_MASK (0xFFu << 24)
GET_APIC_LOGICAL_ID  macro  arch/x86/include/asm/apicdef.h  44  #define GET_APIC_LOGICAL_ID(x) (((x) >> 24) & 0xFFu)
SET_APIC_LOGICAL_ID  macro  arch/x86/include/asm/apicdef.h  45  #define SET_APIC_LOGICAL_ID(x) (((x) << 24))
APIC_ALL_CPUS  macro  arch/x86/include/asm/apicdef.h  46  #define APIC_ALL_CPUS 0xFFu
APIC_DFR  macro  arch/x86/include/asm/apicdef.h  47  #define APIC_DFR 0xE0
APIC_DFR_CLUSTER  macro  arch/x86/include/asm/apicdef.h  48  #define APIC_DFR_CLUSTER 0x0FFFFFFFul
APIC_DFR_FLAT  macro  arch/x86/include/asm/apicdef.h  49  #define APIC_DFR_FLAT 0xFFFFFFFFul
APIC_SPIV  macro  arch/x86/include/asm/apicdef.h  50  #define APIC_SPIV 0xF0
APIC_SPIV_DIRECTED_EOI  macro  arch/x86/include/asm/apicdef.h  51  #define APIC_SPIV_DIRECTED_EOI (1 << 12)
APIC_SPIV_FOCUS_DISABLED  macro  arch/x86/include/asm/apicdef.h  52  #define APIC_SPIV_FOCUS_DISABLED (1 << 9)
APIC_SPIV_APIC_ENABLED  macro  arch/x86/include/asm/apicdef.h  53  #define APIC_SPIV_APIC_ENABLED (1 << 8)
APIC_ISR  macro  arch/x86/include/asm/apicdef.h  54  #define APIC_ISR 0x100
APIC_ISR_NR  macro  arch/x86/include/asm/apicdef.h  55  #define APIC_ISR_NR 0x8
APIC_TMR  macro  arch/x86/include/asm/apicdef.h  56  #define APIC_TMR 0x180
APIC_IRR  macro  arch/x86/include/asm/apicdef.h  57  #define APIC_IRR 0x200
APIC_ESR  macro  arch/x86/include/asm/apicdef.h  58  #define APIC_ESR 0x280
APIC_ESR_SEND_CS  macro  arch/x86/include/asm/apicdef.h  59  #define APIC_ESR_SEND_CS 0x00001
APIC_ESR_RECV_CS  macro  arch/x86/include/asm/apicdef.h  60  #define APIC_ESR_RECV_CS 0x00002
APIC_ESR_SEND_ACC  macro  arch/x86/include/asm/apicdef.h  61  #define APIC_ESR_SEND_ACC 0x00004
APIC_ESR_RECV_ACC  macro  arch/x86/include/asm/apicdef.h  62  #define APIC_ESR_RECV_ACC 0x00008
APIC_ESR_SENDILL  macro  arch/x86/include/asm/apicdef.h  63  #define APIC_ESR_SENDILL 0x00020
APIC_ESR_RECVILL  macro  arch/x86/include/asm/apicdef.h  64  #define APIC_ESR_RECVILL 0x00040
APIC_ESR_ILLREGA  macro  arch/x86/include/asm/apicdef.h  65  #define APIC_ESR_ILLREGA 0x00080
APIC_LVTCMCI  macro  arch/x86/include/asm/apicdef.h  66  #define APIC_LVTCMCI 0x2f0
APIC_ICR  macro  arch/x86/include/asm/apicdef.h  67  #define APIC_ICR 0x300
APIC_DEST_SELF  macro  arch/x86/include/asm/apicdef.h  68  #define APIC_DEST_SELF 0x40000
APIC_DEST_ALLINC  macro  arch/x86/include/asm/apicdef.h  69  #define APIC_DEST_ALLINC 0x80000
APIC_DEST_ALLBUT  macro  arch/x86/include/asm/apicdef.h  70  #define APIC_DEST_ALLBUT 0xC0000
APIC_ICR_RR_MASK  macro  arch/x86/include/asm/apicdef.h  71  #define APIC_ICR_RR_MASK 0x30000
APIC_ICR_RR_INVALID  macro  arch/x86/include/asm/apicdef.h  72  #define APIC_ICR_RR_INVALID 0x00000
APIC_ICR_RR_INPROG  macro  arch/x86/include/asm/apicdef.h  73  #define APIC_ICR_RR_INPROG 0x10000
APIC_ICR_RR_VALID  macro  arch/x86/include/asm/apicdef.h  74  #define APIC_ICR_RR_VALID 0x20000
APIC_INT_LEVELTRIG  macro  arch/x86/include/asm/apicdef.h  75  #define APIC_INT_LEVELTRIG 0x08000
APIC_INT_ASSERT  macro  arch/x86/include/asm/apicdef.h  76  #define APIC_INT_ASSERT 0x04000
APIC_ICR_BUSY  macro  arch/x86/include/asm/apicdef.h  77  #define APIC_ICR_BUSY 0x01000
APIC_DEST_LOGICAL  macro  arch/x86/include/asm/apicdef.h  78  #define APIC_DEST_LOGICAL 0x00800
APIC_DEST_PHYSICAL  macro  arch/x86/include/asm/apicdef.h  79  #define APIC_DEST_PHYSICAL 0x00000
APIC_DM_FIXED  macro  arch/x86/include/asm/apicdef.h  80  #define APIC_DM_FIXED 0x00000
APIC_DM_FIXED_MASK  macro  arch/x86/include/asm/apicdef.h  81  #define APIC_DM_FIXED_MASK 0x00700
APIC_DM_LOWEST  macro  arch/x86/include/asm/apicdef.h  82  #define APIC_DM_LOWEST 0x00100
APIC_DM_SMI  macro  arch/x86/include/asm/apicdef.h  83  #define APIC_DM_SMI 0x00200
APIC_DM_REMRD  macro  arch/x86/include/asm/apicdef.h  84  #define APIC_DM_REMRD 0x00300
APIC_DM_NMI  macro  arch/x86/include/asm/apicdef.h  85  #define APIC_DM_NMI 0x00400
APIC_DM_INIT  macro  arch/x86/include/asm/apicdef.h  86  #define APIC_DM_INIT 0x00500
APIC_DM_STARTUP  macro  arch/x86/include/asm/apicdef.h  87  #define APIC_DM_STARTUP 0x00600
APIC_DM_EXTINT  macro  arch/x86/include/asm/apicdef.h  88  #define APIC_DM_EXTINT 0x00700
APIC_VECTOR_MASK  macro  arch/x86/include/asm/apicdef.h  89  #define APIC_VECTOR_MASK 0x000FF
APIC_ICR2  macro  arch/x86/include/asm/apicdef.h  90  #define APIC_ICR2 0x310
GET_APIC_DEST_FIELD  macro  arch/x86/include/asm/apicdef.h  91  #define GET_APIC_DEST_FIELD(x) (((x) >> 24) & 0xFF)
SET_APIC_DEST_FIELD  macro  arch/x86/include/asm/apicdef.h  92  #define SET_APIC_DEST_FIELD(x) ((x) << 24)
APIC_LVTT  macro  arch/x86/include/asm/apicdef.h  93  #define APIC_LVTT 0x320
APIC_LVTTHMR  macro  arch/x86/include/asm/apicdef.h  94  #define APIC_LVTTHMR 0x330
APIC_LVTPC  macro  arch/x86/include/asm/apicdef.h  95  #define APIC_LVTPC 0x340
APIC_LVT0  macro  arch/x86/include/asm/apicdef.h  96  #define APIC_LVT0 0x350
APIC_LVT_TIMER_BASE_MASK  macro  arch/x86/include/asm/apicdef.h  97  #define APIC_LVT_TIMER_BASE_MASK (0x3 << 18)
GET_APIC_TIMER_BASE  macro  arch/x86/include/asm/apicdef.h  98  #define GET_APIC_TIMER_BASE(x) (((x) >> 18) & 0x3)
SET_APIC_TIMER_BASE  macro  arch/x86/include/asm/apicdef.h  99  #define SET_APIC_TIMER_BASE(x) (((x) << 18))
APIC_TIMER_BASE_CLKIN  macro  arch/x86/include/asm/apicdef.h  100  #define APIC_TIMER_BASE_CLKIN 0x0
APIC_TIMER_BASE_TMBASE  macro  arch/x86/include/asm/apicdef.h  101  #define APIC_TIMER_BASE_TMBASE 0x1
APIC_TIMER_BASE_DIV  macro  arch/x86/include/asm/apicdef.h  102  #define APIC_TIMER_BASE_DIV 0x2
APIC_LVT_TIMER_ONESHOT  macro  arch/x86/include/asm/apicdef.h  103  #define APIC_LVT_TIMER_ONESHOT (0 << 17)
APIC_LVT_TIMER_PERIODIC  macro  arch/x86/include/asm/apicdef.h  104  #define APIC_LVT_TIMER_PERIODIC (1 << 17)
APIC_LVT_TIMER_TSCDEADLINE  macro  arch/x86/include/asm/apicdef.h  105  #define APIC_LVT_TIMER_TSCDEADLINE (2 << 17)
APIC_LVT_MASKED  macro  arch/x86/include/asm/apicdef.h  106  #define APIC_LVT_MASKED (1 << 16)
APIC_LVT_LEVEL_TRIGGER  macro  arch/x86/include/asm/apicdef.h  107  #define APIC_LVT_LEVEL_TRIGGER (1 << 15)
APIC_LVT_REMOTE_IRR  macro  arch/x86/include/asm/apicdef.h  108  #define APIC_LVT_REMOTE_IRR (1 << 14)
APIC_INPUT_POLARITY  macro  arch/x86/include/asm/apicdef.h  109  #define APIC_INPUT_POLARITY (1 << 13)
APIC_SEND_PENDING  macro  arch/x86/include/asm/apicdef.h  110  #define APIC_SEND_PENDING (1 << 12)
APIC_MODE_MASK  macro  arch/x86/include/asm/apicdef.h  111  #define APIC_MODE_MASK 0x700
GET_APIC_DELIVERY_MODE  macro  arch/x86/include/asm/apicdef.h  112  #define GET_APIC_DELIVERY_MODE(x) (((x) >> 8) & 0x7)
SET_APIC_DELIVERY_MODE  macro  arch/x86/include/asm/apicdef.h  113  #define SET_APIC_DELIVERY_MODE(x,y) (((x) & ~0x700) | ((y) << 8))
APIC_MODE_FIXED  macro  arch/x86/include/asm/apicdef.h  114  #define APIC_MODE_FIXED 0x0
APIC_MODE_NMI  macro  arch/x86/include/asm/apicdef.h  115  #define APIC_MODE_NMI 0x4
APIC_MODE_EXTINT  macro  arch/x86/include/asm/apicdef.h  116  #define APIC_MODE_EXTINT 0x7
APIC_LVT1  macro  arch/x86/include/asm/apicdef.h  117  #define APIC_LVT1 0x360
APIC_LVTERR  macro  arch/x86/include/asm/apicdef.h  118  #define APIC_LVTERR 0x370
APIC_TMICT  macro  arch/x86/include/asm/apicdef.h  119  #define APIC_TMICT 0x380
APIC_TMCCT  macro  arch/x86/include/asm/apicdef.h  120  #define APIC_TMCCT 0x390
APIC_TDCR  macro  arch/x86/include/asm/apicdef.h  121  #define APIC_TDCR 0x3E0
APIC_SELF_IPI  macro  arch/x86/include/asm/apicdef.h  122  #define APIC_SELF_IPI 0x3F0
APIC_TDR_DIV_TMBASE  macro  arch/x86/include/asm/apicdef.h  123  #define APIC_TDR_DIV_TMBASE (1 << 2)
APIC_TDR_DIV_1  macro  arch/x86/include/asm/apicdef.h  124  #define APIC_TDR_DIV_1 0xB
APIC_TDR_DIV_2  macro  arch/x86/include/asm/apicdef.h  125  #define APIC_TDR_DIV_2 0x0
APIC_TDR_DIV_4  macro  arch/x86/include/asm/apicdef.h  126  #define APIC_TDR_DIV_4 0x1
APIC_TDR_DIV_8  macro  arch/x86/include/asm/apicdef.h  127  #define APIC_TDR_DIV_8 0x2
APIC_TDR_DIV_16  macro  arch/x86/include/asm/apicdef.h  128  #define APIC_TDR_DIV_16 0x3
APIC_TDR_DIV_32  macro  arch/x86/include/asm/apicdef.h  129  #define APIC_TDR_DIV_32 0x8
APIC_TDR_DIV_64  macro  arch/x86/include/asm/apicdef.h  130  #define APIC_TDR_DIV_64 0x9
APIC_TDR_DIV_128  macro  arch/x86/include/asm/apicdef.h  131  #define APIC_TDR_DIV_128 0xA
APIC_EFEAT  macro  arch/x86/include/asm/apicdef.h  132  #define APIC_EFEAT 0x400
APIC_ECTRL  macro  arch/x86/include/asm/apicdef.h  133  #define APIC_ECTRL 0x410
APIC_EILVTn  macro  arch/x86/include/asm/apicdef.h  134  #define APIC_EILVTn(n) (0x500 + 0x10 * n)
APIC_EILVT_NR_AMD_K8  macro  arch/x86/include/asm/apicdef.h  135  #define APIC_EILVT_NR_AMD_K8 1
APIC_EILVT_NR_AMD_10H  macro  arch/x86/include/asm/apicdef.h  136  #define APIC_EILVT_NR_AMD_10H 4
APIC_EILVT_NR_MAX  macro  arch/x86/include/asm/apicdef.h  137  #define APIC_EILVT_NR_MAX APIC_EILVT_NR_AMD_10H
APIC_EILVT_LVTOFF  macro  arch/x86/include/asm/apicdef.h  138  #define APIC_EILVT_LVTOFF(x) (((x) >> 4) & 0xF)
APIC_EILVT_MSG_FIX  macro  arch/x86/include/asm/apicdef.h  139  #define APIC_EILVT_MSG_FIX 0x0
APIC_EILVT_MSG_SMI  macro  arch/x86/include/asm/apicdef.h  140  #define APIC_EILVT_MSG_SMI 0x2
APIC_EILVT_MSG_NMI  macro  arch/x86/include/asm/apicdef.h  141  #define APIC_EILVT_MSG_NMI 0x4
APIC_EILVT_MSG_EXT  macro  arch/x86/include/asm/apicdef.h  142  #define APIC_EILVT_MSG_EXT 0x7
APIC_EILVT_MASKED  macro  arch/x86/include/asm/apicdef.h  143  #define APIC_EILVT_MASKED (1 << 16)
APIC_BASE  macro  arch/x86/include/asm/apicdef.h  145  #define APIC_BASE (fix_to_virt(FIX_APIC_BASE))
APIC_BASE_MSR  macro  arch/x86/include/asm/apicdef.h  146  #define APIC_BASE_MSR 0x800
XAPIC_ENABLE  macro  arch/x86/include/asm/apicdef.h  147  #define XAPIC_ENABLE (1UL << 11)
X2APIC_ENABLE  macro  arch/x86/include/asm/apicdef.h  148  #define X2APIC_ENABLE (1UL << 10)
MAX_IO_APICS  macro  arch/x86/include/asm/apicdef.h  154  # define MAX_IO_APICS 128
MAX_LOCAL_APIC  macro  arch/x86/include/asm/apicdef.h  155  # define MAX_LOCAL_APIC 32768
XAPIC_DEST_CPUS_SHIFT  macro  arch/x86/include/asm/apicdef.h  162  #define XAPIC_DEST_CPUS_SHIFT 4
XAPIC_DEST_CPUS_MASK  macro  arch/x86/include/asm/apicdef.h  163  #define XAPIC_DEST_CPUS_MASK ((1u << XAPIC_DEST_CPUS_SHIFT) - 1)
XAPIC_DEST_CLUSTER_MASK  macro  arch/x86/include/asm/apicdef.h  164  #define XAPIC_DEST_CLUSTER_MASK (XAPIC_DEST_CPUS_MASK << XAPIC_DEST_CPUS_SHIFT)
APIC_CLUSTER  macro  arch/x86/include/asm/apicdef.h  165  #define APIC_CLUSTER(apicid) ((apicid) & XAPIC_DEST_CLUSTER_MASK)
APIC_CLUSTERID  macro  arch/x86/include/asm/apicdef.h  166  #define APIC_CLUSTERID(apicid) (APIC_CLUSTER(apicid) >> XAPIC_DEST_CPUS_SHIFT)
APIC_CPUID  macro  arch/x86/include/asm/apicdef.h  167  #define APIC_CPUID(apicid) ((apicid) & XAPIC_DEST_CPUS_MASK)
NUM_APIC_CLUSTERS  macro  arch/x86/include/asm/apicdef.h  168  #define NUM_APIC_CLUSTERS ((BAD_APICID + 1) >> XAPIC_DEST_CPUS_SHIFT)
u32  macro  arch/x86/include/asm/apicdef.h  426  #undef u32
local_apic  struct  arch/x86/include/asm/apicdef.h  178  struct local_apic {
BAD_APICID  macro  arch/x86/include/asm/apicdef.h  431  #define BAD_APICID 0xFFFFu
ioapic_irq_destination_types  enum  arch/x86/include/asm/apicdef.h  434  enum ioapic_irq_destination_types {
_ASM_X86_IRQ_VECTORS_H  macro  arch/x86/include/asm/irq_vectors.h  2  #define _ASM_X86_IRQ_VECTORS_H
NMI_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  28  #define NMI_VECTOR 0x02
MCE_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  29  #define MCE_VECTOR 0x12
FIRST_EXTERNAL_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  35  #define FIRST_EXTERNAL_VECTOR 0x20
VECTOR_OFFSET_START  macro  arch/x86/include/asm/irq_vectors.h  40  #define VECTOR_OFFSET_START 1
IRQ_MOVE_CLEANUP_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  47  #define IRQ_MOVE_CLEANUP_VECTOR FIRST_EXTERNAL_VECTOR
IA32_SYSCALL_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  49  #define IA32_SYSCALL_VECTOR 0x80
SYSCALL_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  51  # define SYSCALL_VECTOR 0x80
IRQ0_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  58  #define IRQ0_VECTOR ((FIRST_EXTERNAL_VECTOR + 16) & ~15)
IRQ1_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  60  #define IRQ1_VECTOR (IRQ0_VECTOR + 1)
IRQ2_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  61  #define IRQ2_VECTOR (IRQ0_VECTOR + 2)
IRQ3_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  62  #define IRQ3_VECTOR (IRQ0_VECTOR + 3)
IRQ4_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  63  #define IRQ4_VECTOR (IRQ0_VECTOR + 4)
IRQ5_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  64  #define IRQ5_VECTOR (IRQ0_VECTOR + 5)
IRQ6_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  65  #define IRQ6_VECTOR (IRQ0_VECTOR + 6)
IRQ7_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  66  #define IRQ7_VECTOR (IRQ0_VECTOR + 7)
IRQ8_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  67  #define IRQ8_VECTOR (IRQ0_VECTOR + 8)
IRQ9_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  68  #define IRQ9_VECTOR (IRQ0_VECTOR + 9)
IRQ10_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  69  #define IRQ10_VECTOR (IRQ0_VECTOR + 10)
IRQ11_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  70  #define IRQ11_VECTOR (IRQ0_VECTOR + 11)
IRQ12_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  71  #define IRQ12_VECTOR (IRQ0_VECTOR + 12)
IRQ13_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  72  #define IRQ13_VECTOR (IRQ0_VECTOR + 13)
IRQ14_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  73  #define IRQ14_VECTOR (IRQ0_VECTOR + 14)
IRQ15_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  74  #define IRQ15_VECTOR (IRQ0_VECTOR + 15)
SPURIOUS_APIC_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  84  #define SPURIOUS_APIC_VECTOR 0xff
ERROR_APIC_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  92  #define ERROR_APIC_VECTOR 0xfe
RESCHEDULE_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  93  #define RESCHEDULE_VECTOR 0xfd
CALL_FUNCTION_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  94  #define CALL_FUNCTION_VECTOR 0xfc
CALL_FUNCTION_SINGLE_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  95  #define CALL_FUNCTION_SINGLE_VECTOR 0xfb
THERMAL_APIC_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  96  #define THERMAL_APIC_VECTOR 0xfa
THRESHOLD_APIC_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  97  #define THRESHOLD_APIC_VECTOR 0xf9
REBOOT_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  98  #define REBOOT_VECTOR 0xf8
X86_PLATFORM_IPI_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  103  #define X86_PLATFORM_IPI_VECTOR 0xf7
IRQ_WORK_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  108  #define IRQ_WORK_VECTOR 0xf6
UV_BAU_MESSAGE  macro  arch/x86/include/asm/irq_vectors.h  110  #define UV_BAU_MESSAGE 0xf5
XEN_HVM_EVTCHN_CALLBACK  macro  arch/x86/include/asm/irq_vectors.h  113  #define XEN_HVM_EVTCHN_CALLBACK 0xf3
LOCAL_TIMER_VECTOR  macro  arch/x86/include/asm/irq_vectors.h  120  #define LOCAL_TIMER_VECTOR 0xef
NR_VECTORS  macro  arch/x86/include/asm/irq_vectors.h  122  #define NR_VECTORS 256
FPU_IRQ  macro  arch/x86/include/asm/irq_vectors.h  124  #define FPU_IRQ 13
FIRST_VM86_IRQ  macro  arch/x86/include/asm/irq_vectors.h  126  #define FIRST_VM86_IRQ 3
LAST_VM86_IRQ  macro  arch/x86/include/asm/irq_vectors.h  127  #define LAST_VM86_IRQ 15
invalid_vm86_irq  function  arch/x86/include/asm/irq_vectors.h  130  static inline int invalid_vm86_irq(int irq)
NR_IRQS_LEGACY  macro  include/linux/irq.h  361  # define NR_IRQS_LEGACY 0
IO_APIC_VECTOR_LIMIT  macro  arch/x86/include/asm/irq_vectors.h  149  #define IO_APIC_VECTOR_LIMIT ( 32 * MAX_IO_APICS )
CPU_VECTOR_LIMIT  macro  arch/x86/include/asm/irq_vectors.h  152  # define CPU_VECTOR_LIMIT (64 * NR_CPUS)
NR_IRQS  macro  arch/x86/include/asm/irq_vectors.h  158  # define NR_IRQS NR_IRQS_LEGACY
_LINUX_POISON_H  macro  include/linux/poison.h  2  #define _LINUX_POISON_H
POISON_POINTER_DELTA  macro  include/linux/poison.h  14  # define POISON_POINTER_DELTA 0
LIST_POISON1  macro  include/linux/poison.h  22  #define LIST_POISON1 ((void *) 0x00100100 + POISON_POINTER_DELTA)
LIST_POISON2  macro  include/linux/poison.h  23  #define LIST_POISON2 ((void *) 0x00200200 + POISON_POINTER_DELTA)
TIMER_ENTRY_STATIC  macro  include/linux/poison.h  30  #define TIMER_ENTRY_STATIC ((void *) 0x74737461)
PAGE_POISON  macro  include/linux/poison.h  33  #define PAGE_POISON 0xaa
RED_INACTIVE  macro  include/linux/poison.h  40  #define RED_INACTIVE 0x09F911029D74E35BULL
RED_ACTIVE  macro  include/linux/poison.h  41  #define RED_ACTIVE 0xD84156C5635688C0ULL
SLUB_RED_INACTIVE  macro  include/linux/poison.h  43  #define SLUB_RED_INACTIVE 0xbb
SLUB_RED_ACTIVE  macro  include/linux/poison.h  44  #define SLUB_RED_ACTIVE 0xcc
POISON_INUSE  macro  include/linux/poison.h  47  #define POISON_INUSE 0x5a
POISON_FREE  macro  include/linux/poison.h  48  #define POISON_FREE 0x6b
POISON_END  macro  include/linux/poison.h  49  #define POISON_END 0xa5
POISON_FREE_INITMEM  macro  include/linux/poison.h  52  #define POISON_FREE_INITMEM 0xcc
JBD_POISON_FREE  macro  include/linux/poison.h  61  #define JBD_POISON_FREE 0x5b
JBD2_POISON_FREE  macro  include/linux/poison.h  62  #define JBD2_POISON_FREE 0x5c
POOL_POISON_FREED  macro  include/linux/poison.h  65  #define POOL_POISON_FREED 0xa7
POOL_POISON_ALLOCATED  macro  include/linux/poison.h  66  #define POOL_POISON_ALLOCATED 0xa9
ATM_POISON_FREE  macro  include/linux/poison.h  69  #define ATM_POISON_FREE 0x12
ATM_POISON  macro  include/linux/poison.h  70  #define ATM_POISON 0xdeadbeef
NEIGHBOR_DEAD  macro  include/linux/poison.h  73  #define NEIGHBOR_DEAD 0xdeadbeef
NETFILTER_LINK_POISON  macro  include/linux/poison.h  74  #define NETFILTER_LINK_POISON 0xdead57ac
MUTEX_DEBUG_INIT  macro  include/linux/poison.h  77  #define MUTEX_DEBUG_INIT 0x11
MUTEX_DEBUG_FREE  macro  include/linux/poison.h  78  #define MUTEX_DEBUG_FREE 0x22
FLEX_ARRAY_FREE  macro  include/linux/poison.h  81  #define FLEX_ARRAY_FREE 0x6c
KEY_DESTROY  macro  include/linux/poison.h  84  #define KEY_DESTROY 0xbd
OSS_POISON_FREE  macro  include/linux/poison.h  87  #define OSS_POISON_FREE 0xAB
_LINUX_CONST_H  macro  include/uapi/linux/const.h  4  #define _LINUX_CONST_H
_AC  macro  include/uapi/linux/const.h  20  #define _AC(X,Y) __AC(X,Y)
_AT  macro  include/uapi/linux/const.h  21  #define _AT(T,X) ((T)(X))
__AC  macro  include/uapi/linux/const.h  19  #define __AC(X,Y) (X##Y)
_ASM_X86_STAT_H  macro  arch/x86/include/uapi/asm/stat.h  2  #define _ASM_X86_STAT_H
STAT_HAVE_NSEC  macro  arch/x86/include/uapi/asm/stat.h  4  #define STAT_HAVE_NSEC 1
stat  struct  arch/x86/include/uapi/asm/stat.h  80  struct stat {
INIT_STRUCT_STAT_PADDING  macro  arch/x86/include/uapi/asm/stat.h  109  #define INIT_STRUCT_STAT_PADDING(st) do { st.__pad0 = 0; st.__unused[0] = 0; st.__unused[1] = 0; st.__unused[2] = 0; } while (0)
STAT64_HAS_BROKEN_ST_INO  macro  arch/x86/include/uapi/asm/stat.h  34  #define STAT64_HAS_BROKEN_ST_INO 1
stat64  struct  arch/x86/include/uapi/asm/stat.h  39  struct stat64 {
INIT_STRUCT_STAT64_PADDING  macro  arch/x86/include/uapi/asm/stat.h  76  #define INIT_STRUCT_STAT64_PADDING(st) do { memset(&st.__pad0, 0, sizeof(st.__pad0)); memset(&st.__pad3, 0, sizeof(st.__pad3)); } while (0)
__old_kernel_stat  struct  arch/x86/include/uapi/asm/stat.h  114  struct __old_kernel_stat {
_UAPI_LINUX_STAT_H  macro  include/uapi/linux/stat.h  2  #define _UAPI_LINUX_STAT_H
S_IFMT  macro  include/uapi/linux/stat.h  7  #define S_IFMT 00170000
S_IFSOCK  macro  include/uapi/linux/stat.h  8  #define S_IFSOCK 0140000
S_IFLNK  macro  include/uapi/linux/stat.h  9  #define S_IFLNK 0120000
S_IFREG  macro  include/uapi/linux/stat.h  10  #define S_IFREG 0100000
S_IFBLK  macro  include/uapi/linux/stat.h  11  #define S_IFBLK 0060000
S_IFDIR  macro  include/uapi/linux/stat.h  12  #define S_IFDIR 0040000
S_IFCHR  macro  include/uapi/linux/stat.h  13  #define S_IFCHR 0020000
S_IFIFO  macro  include/uapi/linux/stat.h  14  #define S_IFIFO 0010000
S_ISUID  macro  include/uapi/linux/stat.h  15  #define S_ISUID 0004000
S_ISGID  macro  include/uapi/linux/stat.h  16  #define S_ISGID 0002000
S_ISVTX  macro  include/uapi/linux/stat.h  17  #define S_ISVTX 0001000
S_ISLNK  macro  include/uapi/linux/stat.h  19  #define S_ISLNK(m) (((m) & S_IFMT) == S_IFLNK)
S_ISREG  macro  include/uapi/linux/stat.h  20  #define S_ISREG(m) (((m) & S_IFMT) == S_IFREG)
S_ISDIR  macro  include/uapi/linux/stat.h  21  #define S_ISDIR(m) (((m) & S_IFMT) == S_IFDIR)
S_ISCHR  macro  include/uapi/linux/stat.h  22  #define S_ISCHR(m) (((m) & S_IFMT) == S_IFCHR)
S_ISBLK  macro  include/uapi/linux/stat.h  23  #define S_ISBLK(m) (((m) & S_IFMT) == S_IFBLK)
S_ISFIFO  macro  include/uapi/linux/stat.h  24  #define S_ISFIFO(m) (((m) & S_IFMT) == S_IFIFO)
S_ISSOCK  macro  include/uapi/linux/stat.h  25  #define S_ISSOCK(m) (((m) & S_IFMT) == S_IFSOCK)
S_IRWXU  macro  include/uapi/linux/stat.h  27  #define S_IRWXU 00700
S_IRUSR  macro  include/uapi/linux/stat.h  28  #define S_IRUSR 00400
S_IWUSR  macro  include/uapi/linux/stat.h  29  #define S_IWUSR 00200
S_IXUSR  macro  include/uapi/linux/stat.h  30  #define S_IXUSR 00100
S_IRWXG  macro  include/uapi/linux/stat.h  32  #define S_IRWXG 00070
S_IRGRP  macro  include/uapi/linux/stat.h  33  #define S_IRGRP 00040
S_IWGRP  macro  include/uapi/linux/stat.h  34  #define S_IWGRP 00020
S_IXGRP  macro  include/uapi/linux/stat.h  35  #define S_IXGRP 00010
S_IRWXO  macro  include/uapi/linux/stat.h  37  #define S_IRWXO 00007
S_IROTH  macro  include/uapi/linux/stat.h  38  #define S_IROTH 00004
S_IWOTH  macro  include/uapi/linux/stat.h  39  #define S_IWOTH 00002
S_IXOTH  macro  include/uapi/linux/stat.h  40  #define S_IXOTH 00001
__must_be_array  macro  include/linux/compiler-intel.h  27  #define __must_be_array(a) 0
inline  macro  include/linux/compiler-gcc.h  55  # define inline inline notrace
__inline__  macro  include/linux/compiler-gcc.h  56  # define __inline__ __inline__ notrace
__inline  macro  include/linux/compiler-gcc.h  57  # define __inline __inline notrace
__packed  macro  include/linux/compiler-gcc.h  61  #define __packed __attribute__((packed))
__weak  macro  include/linux/compiler-gcc.h  62  #define __weak __attribute__((weak))
__naked  macro  include/linux/compiler-gcc.h  74  #define __naked __attribute__((naked)) noinline __noclone notrace
__noreturn  macro  include/linux/compiler-gcc.h  76  #define __noreturn __attribute__((noreturn))
__pure  macro  include/linux/compiler-gcc.h  88  #define __pure __attribute__((pure))
__aligned  macro  include/linux/compiler-gcc.h  89  #define __aligned(x) __attribute__((aligned(x)))
__printf  macro  include/linux/compiler-gcc.h  90  #define __printf(a,b) __attribute__((format(printf,a,b)))
__scanf  macro  include/linux/compiler-gcc.h  91  #define __scanf(a,b) __attribute__((format(scanf,a,b)))
__gcc_header  macro  include/linux/compiler-gcc.h  97  #define __gcc_header(x) #x
_gcc_header  macro  include/linux/compiler-gcc.h  98  #define _gcc_header(x) __gcc_header(linux/compiler-gcc##x.h)
gcc_header  macro  include/linux/compiler-gcc.h  99  #define gcc_header(x) _gcc_header(x)
__noclone  macro  include/linux/compiler-gcc.h  103  #define __noclone
uninitialized_var  macro  include/linux/compiler-intel.h  31  #define uninitialized_var(x) x
__HAVE_BUILTIN_BSWAP16__  macro  include/linux/compiler-intel.h  35  #define __HAVE_BUILTIN_BSWAP16__
__builtin_bswap16  macro  include/linux/compiler-intel.h  36  #define __builtin_bswap16 _bswap16
_LINUX_SYSCTL_H  macro  include/linux/sysctl.h  22  #define _LINUX_SYSCTL_H
proc_dostring  prototype  include/linux/sysctl.h  43  extern int proc_dostring(struct ctl_table *,int,void __user *, size_t *, loff_t *);
proc_dointvec  prototype  include/linux/sysctl.h  45  extern int proc_dointvec(struct ctl_table *,int,void __user *, size_t *, loff_t *);
proc_dointvec_minmax  prototype  include/linux/sysctl.h  47  extern int proc_dointvec_minmax(struct ctl_table *,int,void __user *, size_t *, loff_t *);
proc_dointvec_jiffies  prototype  include/linux/sysctl.h  49  extern int proc_dointvec_jiffies(struct ctl_table *,int,void __user *, size_t *, loff_t *);
proc_dointvec_userhz_jiffies  prototype  include/linux/sysctl.h  51  extern int proc_dointvec_userhz_jiffies(struct ctl_table *,int,void __user *, size_t *, loff_t *);
proc_dointvec_ms_jiffies  prototype  include/linux/sysctl.h  53  extern int proc_dointvec_ms_jiffies(struct ctl_table *,int,void __user *, size_t *, loff_t *);
proc_doulongvec_minmax  prototype  include/linux/sysctl.h  55  extern int proc_doulongvec_minmax(struct ctl_table *,int,void __user *, size_t *, loff_t *);
proc_doulongvec_ms_jiffies_minmax  prototype  include/linux/sysctl.h  57  extern int proc_doulongvec_ms_jiffies_minmax(struct ctl_table *table,int,void __user *, size_t *, loff_t *);
proc_do_large_bitmap  prototype  include/linux/sysctl.h  59  extern int proc_do_large_bitmap(struct ctl_table *,int,void __user *, size_t *, loff_t *);
ctl_table_poll  struct  include/linux/sysctl.h  89  struct ctl_table_poll {
proc_sys_poll_event  function  include/linux/sysctl.h  94  static inline void *proc_sys_poll_event(struct ctl_table_poll *poll)
__CTL_TABLE_POLL_INITIALIZER  macro  include/linux/sysctl.h  101  #define __CTL_TABLE_POLL_INITIALIZER(name) { .event = ATOMIC_INIT(0), .wait = __WAIT_QUEUE_HEAD_INITIALIZER(name.wait) }
DEFINE_CTL_TABLE_POLL  macro  include/linux/sysctl.h  104  #define DEFINE_CTL_TABLE_POLL(name) struct ctl_table_poll name = __CTL_TABLE_POLL_INITIALIZER(name)
ctl_table  struct  include/linux/sysctl.h  107  struct ctl_table
ctl_node  struct  include/linux/sysctl.h  120  struct ctl_node {
ctl_table_header  struct  include/linux/sysctl.h  127  struct ctl_table_header
ctl_dir  struct  include/linux/sysctl.h  146  struct ctl_dir {
ctl_table_set  struct  include/linux/sysctl.h  152  struct ctl_table_set {
ctl_table_root  struct  include/linux/sysctl.h  157  struct ctl_table_root {
ctl_path  struct  include/linux/sysctl.h  165  struct ctl_path {
proc_sys_poll_notify  prototype  include/linux/sysctl.h  171  void proc_sys_poll_notify(struct ctl_table_poll *poll);
setup_sysctl_set  function  include/linux/sysctl.h  211  static inline void setup_sysctl_set(struct ctl_table_set *p,struct ctl_table_root *root,int (*is_seen)(struct ctl_table_set *))
retire_sysctl_set  prototype  include/linux/sysctl.h  176  extern void retire_sysctl_set(struct ctl_table_set *set);
register_sysctl_root  prototype  include/linux/sysctl.h  178  void register_sysctl_root(struct ctl_table_root *root);
__register_sysctl_table  prototype  include/linux/sysctl.h  179  struct ctl_table_header *__register_sysctl_table(
__register_sysctl_paths  prototype  include/linux/sysctl.h  182  struct ctl_table_header *__register_sysctl_paths(
register_sysctl  prototype  include/linux/sysctl.h  185  struct ctl_table_header *register_sysctl(const char *path,struct ctl_table *table);
register_sysctl_table  function  include/linux/sysctl.h  194  static inline struct ctl_table_header *register_sysctl_table(struct ctl_table * table)
register_sysctl_paths  function  include/linux/sysctl.h  199  static inline struct ctl_table_header *register_sysctl_paths(
unregister_sysctl_table  function  include/linux/sysctl.h  205  static inline void unregister_sysctl_table(struct ctl_table_header * table)
sysctl_init  prototype  include/linux/sysctl.h  192  extern int sysctl_init(void);
_ASM_X86_ELF_H  macro  arch/x86/include/asm/elf.h  2  #define _ASM_X86_ELF_H
ELF_NGREG  macro  arch/x86/include/asm/elf.h  15  #define ELF_NGREG (sizeof(struct user_regs_struct) / sizeof(elf_greg_t))
R_386_NONE  macro  arch/x86/include/asm/elf.h  24  #define R_386_NONE 0
R_386_32  macro  arch/x86/include/asm/elf.h  25  #define R_386_32 1
R_386_PC32  macro  arch/x86/include/asm/elf.h  26  #define R_386_PC32 2
R_386_GOT32  macro  arch/x86/include/asm/elf.h  27  #define R_386_GOT32 3
R_386_PLT32  macro  arch/x86/include/asm/elf.h  28  #define R_386_PLT32 4
R_386_COPY  macro  arch/x86/include/asm/elf.h  29  #define R_386_COPY 5
R_386_GLOB_DAT  macro  arch/x86/include/asm/elf.h  30  #define R_386_GLOB_DAT 6
R_386_JMP_SLOT  macro  arch/x86/include/asm/elf.h  31  #define R_386_JMP_SLOT 7
R_386_RELATIVE  macro  arch/x86/include/asm/elf.h  32  #define R_386_RELATIVE 8
R_386_GOTOFF  macro  arch/x86/include/asm/elf.h  33  #define R_386_GOTOFF 9
R_386_GOTPC  macro  arch/x86/include/asm/elf.h  34  #define R_386_GOTPC 10
R_386_NUM  macro  arch/x86/include/asm/elf.h  35  #define R_386_NUM 11
ELF_CLASS  macro  arch/x86/include/asm/elf.h  70  #define ELF_CLASS ELFCLASS64
ELF_DATA  macro  arch/x86/include/asm/elf.h  71  #define ELF_DATA ELFDATA2LSB
ELF_ARCH  macro  arch/x86/include/asm/elf.h  72  #define ELF_ARCH EM_X86_64
R_X86_64_NONE  macro  arch/x86/include/asm/elf.h  47  #define R_X86_64_NONE 0
R_X86_64_64  macro  arch/x86/include/asm/elf.h  48  #define R_X86_64_64 1
R_X86_64_PC32  macro  arch/x86/include/asm/elf.h  49  #define R_X86_64_PC32 2
R_X86_64_GOT32  macro  arch/x86/include/asm/elf.h  50  #define R_X86_64_GOT32 3
R_X86_64_PLT32  macro  arch/x86/include/asm/elf.h  51  #define R_X86_64_PLT32 4
R_X86_64_COPY  macro  arch/x86/include/asm/elf.h  52  #define R_X86_64_COPY 5
R_X86_64_GLOB_DAT  macro  arch/x86/include/asm/elf.h  53  #define R_X86_64_GLOB_DAT 6
R_X86_64_JUMP_SLOT  macro  arch/x86/include/asm/elf.h  54  #define R_X86_64_JUMP_SLOT 7
R_X86_64_RELATIVE  macro  arch/x86/include/asm/elf.h  55  #define R_X86_64_RELATIVE 8
R_X86_64_GOTPCREL  macro  arch/x86/include/asm/elf.h  56  #define R_X86_64_GOTPCREL 9
R_X86_64_32  macro  arch/x86/include/asm/elf.h  58  #define R_X86_64_32 10
R_X86_64_32S  macro  arch/x86/include/asm/elf.h  59  #define R_X86_64_32S 11
R_X86_64_16  macro  arch/x86/include/asm/elf.h  60  #define R_X86_64_16 12
R_X86_64_PC16  macro  arch/x86/include/asm/elf.h  61  #define R_X86_64_PC16 13
R_X86_64_8  macro  arch/x86/include/asm/elf.h  62  #define R_X86_64_8 14
R_X86_64_PC8  macro  arch/x86/include/asm/elf.h  63  #define R_X86_64_PC8 15
R_X86_64_NUM  macro  arch/x86/include/asm/elf.h  65  #define R_X86_64_NUM 16
elf_check_arch_ia32  macro  arch/x86/include/asm/elf.h  84  #define elf_check_arch_ia32(x) (((x)->e_machine == EM_386) || ((x)->e_machine == EM_486))
elf_check_arch  macro  arch/x86/include/asm/elf.h  156  #define elf_check_arch(x) ((x)->e_machine == EM_X86_64)
ELF_PLAT_INIT  macro  arch/x86/include/asm/elf.h  178  #define ELF_PLAT_INIT(_r,load_addr) elf_common_init(&current->thread, _r, 0)
ELF_CORE_COPY_REGS_COMMON  macro  arch/x86/include/asm/elf.h  133  #define ELF_CORE_COPY_REGS_COMMON(pr_reg,regs) do { pr_reg[0] = regs->bx; pr_reg[1] = regs->cx; pr_reg[2] = regs->dx; pr_reg[3] = regs->si; pr_reg[4] = regs->di; pr_reg[5] = regs->bp; pr_reg[6] = regs->ax; pr_reg[7] = regs->ds & 0xffff; pr_reg[8] = regs->es & 0xffff; pr_reg[9] = regs->fs & 0xffff; pr_reg[11] = regs->orig_ax; pr_reg[12] = regs->ip; pr_reg[13] = regs->cs & 0xffff; pr_reg[14] = regs->flags; pr_reg[15] = regs->sp; pr_reg[16] = regs->ss & 0xffff; } while (0);
ELF_CORE_COPY_REGS  macro  arch/x86/include/asm/elf.h  228  #define ELF_CORE_COPY_REGS(pr_reg,regs) do { unsigned v; (pr_reg)[0] = (regs)->r15; (pr_reg)[1] = (regs)->r14; (pr_reg)[2] = (regs)->r13; (pr_reg)[3] = (regs)->r12; (pr_reg)[4] = (regs)->bp; (pr_reg)[5] = (regs)->bx; (pr_reg)[6] = (regs)->r11; (pr_reg)[7] = (regs)->r10; (pr_reg)[8] = (regs)->r9; (pr_reg)[9] = (regs)->r8; (pr_reg)[10] = (regs)->ax; (pr_reg)[11] = (regs)->cx; (pr_reg)[12] = (regs)->dx; (pr_reg)[13] = (regs)->si; (pr_reg)[14] = (regs)->di; (pr_reg)[15] = (regs)->orig_ax; (pr_reg)[16] = (regs)->ip; (pr_reg)[17] = (regs)->cs; (pr_reg)[18] = (regs)->flags; (pr_reg)[19] = (regs)->sp; (pr_reg)[20] = (regs)->ss; (pr_reg)[21] = current->thread.fs; (pr_reg)[22] = current->thread.gs; asm("movl %%ds,%0" : "=r" (v)); (pr_reg)[23] = v; asm("movl %%es,%0" : "=r" (v)); (pr_reg)[24] = v; asm("movl %%fs,%0" : "=r" (v)); (pr_reg)[25] = v; asm("movl %%gs,%0" : "=r" (v)); (pr_reg)[26] = v; } while (0);
ELF_CORE_COPY_KERNEL_REGS  macro  arch/x86/include/asm/elf.h  145  #define ELF_CORE_COPY_KERNEL_REGS(pr_reg,regs) do { ELF_CORE_COPY_REGS_COMMON(pr_reg, regs); savesegment(gs, pr_reg[10]); } while (0);
ELF_PLATFORM  macro  arch/x86/include/asm/elf.h  231  #define ELF_PLATFORM ("x86_64")
set_personality_64bit  prototype  arch/x86/include/asm/elf.h  232  extern void set_personality_64bit(void);
compat_elf_check_arch  macro  arch/x86/include/asm/elf.h  159  #define compat_elf_check_arch(x) (elf_check_arch_ia32(x) || (x)->e_machine == EM_X86_64)
elf_common_init  function  arch/x86/include/asm/elf.h  166  static inline void elf_common_init(struct thread_struct *t,struct pt_regs *regs, const u16 ds)
COMPAT_ELF_PLAT_INIT  macro  arch/x86/include/asm/elf.h  181  #define COMPAT_ELF_PLAT_INIT(regs,load_addr) elf_common_init(&current->thread, regs, __USER_DS)
start_thread_ia32  prototype  arch/x86/include/asm/elf.h  183  void start_thread_ia32(struct pt_regs *regs,u32 new_ip,u32 new_sp);
compat_start_thread  macro  arch/x86/include/asm/elf.h  184  #define compat_start_thread start_thread_ia32
set_personality_ia32  prototype  arch/x86/include/asm/elf.h  186  void set_personality_ia32(bool);
COMPAT_SET_PERSONALITY  macro  arch/x86/include/asm/elf.h  188  #define COMPAT_SET_PERSONALITY(ex) set_personality_ia32((ex).e_machine == EM_X86_64)
COMPAT_ELF_PLATFORM  macro  arch/x86/include/asm/elf.h  190  #define COMPAT_ELF_PLATFORM ("i686")
CORE_DUMP_USE_REGSET  macro  arch/x86/include/asm/elf.h  238  #define CORE_DUMP_USE_REGSET
ELF_EXEC_PAGESIZE  macro  arch/x86/include/asm/elf.h  239  #define ELF_EXEC_PAGESIZE 4096
ELF_ET_DYN_BASE  macro  arch/x86/include/asm/elf.h  246  #define ELF_ET_DYN_BASE (TASK_SIZE / 3 * 2)
ELF_HWCAP  macro  arch/x86/include/asm/elf.h  252  #define ELF_HWCAP (boot_cpu_data.x86_capability[0])
SET_PERSONALITY  macro  arch/x86/include/asm/elf.h  261  #define SET_PERSONALITY(ex) set_personality_64bit()
ARCH_DLINFO_IA32  macro  arch/x86/include/asm/elf.h  278  #define ARCH_DLINFO_IA32(vdso_enabled) do { if (vdso_enabled) { NEW_AUX_ENT(AT_SYSINFO,	VDSO_ENTRY); NEW_AUX_ENT(AT_SYSINFO_EHDR, VDSO_CURRENT_BASE); } } while (0)
STACK_RND_MASK  macro  arch/x86/include/asm/elf.h  295  #define STACK_RND_MASK (test_thread_flag(TIF_ADDR32) ? 0x7ff : 0x3fffff)
VDSO_HIGH_BASE  macro  arch/x86/include/asm/elf.h  292  #define VDSO_HIGH_BASE 0xffffe000U
ARCH_DLINFO  macro  arch/x86/include/asm/elf.h  302  #define ARCH_DLINFO do { if (vdso_enabled) NEW_AUX_ENT(AT_SYSINFO_EHDR, (unsigned long)current->mm->context.vdso); } while (0)
ARCH_DLINFO_X32  macro  arch/x86/include/asm/elf.h  309  #define ARCH_DLINFO_X32 do { if (vdso_enabled) NEW_AUX_ENT(AT_SYSINFO_EHDR, (unsigned long)current->mm->context.vdso); } while (0)
AT_SYSINFO  macro  arch/x86/include/asm/elf.h  311  #define AT_SYSINFO 32
COMPAT_ARCH_DLINFO  macro  arch/x86/include/asm/elf.h  317  #define COMPAT_ARCH_DLINFO if (test_thread_flag(TIF_X32)) ARCH_DLINFO_X32; else ARCH_DLINFO_IA32(sysctl_vsyscall32)
COMPAT_ELF_ET_DYN_BASE  macro  arch/x86/include/asm/elf.h  319  #define COMPAT_ELF_ET_DYN_BASE (TASK_UNMAPPED_BASE + 0x1000000)
VDSO_CURRENT_BASE  macro  arch/x86/include/asm/elf.h  323  #define VDSO_CURRENT_BASE ((unsigned long)current->mm->context.vdso)
VDSO_ENTRY  macro  arch/x86/include/asm/elf.h  326  #define VDSO_ENTRY ((unsigned long)VDSO32_SYMBOL(VDSO_CURRENT_BASE, vsyscall))
ARCH_HAS_SETUP_ADDITIONAL_PAGES  macro  arch/x86/include/asm/elf.h  330  #define ARCH_HAS_SETUP_ADDITIONAL_PAGES 1
arch_setup_additional_pages  prototype  arch/x86/include/asm/elf.h  332  extern int arch_setup_additional_pages(struct linux_binprm *bprm,int uses_interp);
x32_setup_additional_pages  prototype  arch/x86/include/asm/elf.h  334  extern int x32_setup_additional_pages(struct linux_binprm *bprm,int uses_interp);
syscall32_setup_pages  prototype  arch/x86/include/asm/elf.h  336  extern int syscall32_setup_pages(struct linux_binprm *,int exstack);
compat_arch_setup_additional_pages  macro  arch/x86/include/asm/elf.h  337  #define compat_arch_setup_additional_pages syscall32_setup_pages
arch_randomize_brk  macro  arch/x86/include/asm/elf.h  340  #define arch_randomize_brk arch_randomize_brk
mmap_is_ia32  function  arch/x86/include/asm/elf.h  345  static inline int mmap_is_ia32(void)
align_flags  enum  arch/x86/include/asm/elf.h  358  enum align_flags {
va_alignment  struct  arch/x86/include/asm/elf.h  363  struct va_alignment {
align_vdso_addr  prototype  arch/x86/include/asm/elf.h  369  extern unsigned long align_vdso_addr(unsigned long);
_UAPI_LINUX_ELF_H  macro  include/uapi/linux/elf.h  2  #define _UAPI_LINUX_ELF_H
PT_NULL  macro  include/uapi/linux/elf.h  25  #define PT_NULL 0
PT_LOAD  macro  include/uapi/linux/elf.h  26  #define PT_LOAD 1
PT_DYNAMIC  macro  include/uapi/linux/elf.h  27  #define PT_DYNAMIC 2
PT_INTERP  macro  include/uapi/linux/elf.h  28  #define PT_INTERP 3
PT_NOTE  macro  include/uapi/linux/elf.h  29  #define PT_NOTE 4
PT_SHLIB  macro  include/uapi/linux/elf.h  30  #define PT_SHLIB 5
PT_PHDR  macro  include/uapi/linux/elf.h  31  #define PT_PHDR 6
PT_TLS  macro  include/uapi/linux/elf.h  32  #define PT_TLS 7
PT_LOOS  macro  include/uapi/linux/elf.h  33  #define PT_LOOS 0x60000000
PT_HIOS  macro  include/uapi/linux/elf.h  34  #define PT_HIOS 0x6fffffff
PT_LOPROC  macro  include/uapi/linux/elf.h  35  #define PT_LOPROC 0x70000000
PT_HIPROC  macro  include/uapi/linux/elf.h  36  #define PT_HIPROC 0x7fffffff
PT_GNU_EH_FRAME  macro  include/uapi/linux/elf.h  37  #define PT_GNU_EH_FRAME 0x6474e550
PT_GNU_STACK  macro  include/uapi/linux/elf.h  39  #define PT_GNU_STACK (PT_LOOS + 0x474e551)
PN_XNUM  macro  include/uapi/linux/elf.h  61  #define PN_XNUM 0xffff
ET_NONE  macro  include/uapi/linux/elf.h  64  #define ET_NONE 0
ET_REL  macro  include/uapi/linux/elf.h  65  #define ET_REL 1
ET_EXEC  macro  include/uapi/linux/elf.h  66  #define ET_EXEC 2
ET_DYN  macro  include/uapi/linux/elf.h  67  #define ET_DYN 3
ET_CORE  macro  include/uapi/linux/elf.h  68  #define ET_CORE 4
ET_LOPROC  macro  include/uapi/linux/elf.h  69  #define ET_LOPROC 0xff00
ET_HIPROC  macro  include/uapi/linux/elf.h  70  #define ET_HIPROC 0xffff
DT_NULL  macro  include/uapi/linux/elf.h  73  #define DT_NULL 0
DT_NEEDED  macro  include/uapi/linux/elf.h  74  #define DT_NEEDED 1
DT_PLTRELSZ  macro  include/uapi/linux/elf.h  75  #define DT_PLTRELSZ 2
DT_PLTGOT  macro  include/uapi/linux/elf.h  76  #define DT_PLTGOT 3
DT_HASH  macro  include/uapi/linux/elf.h  77  #define DT_HASH 4
DT_STRTAB  macro  include/uapi/linux/elf.h  78  #define DT_STRTAB 5
DT_SYMTAB  macro  include/uapi/linux/elf.h  79  #define DT_SYMTAB 6
DT_RELA  macro  include/uapi/linux/elf.h  80  #define DT_RELA 7
DT_RELASZ  macro  include/uapi/linux/elf.h  81  #define DT_RELASZ 8
DT_RELAENT  macro  include/uapi/linux/elf.h  82  #define DT_RELAENT 9
DT_STRSZ  macro  include/uapi/linux/elf.h  83  #define DT_STRSZ 10
DT_SYMENT  macro  include/uapi/linux/elf.h  84  #define DT_SYMENT 11
DT_INIT  macro  include/uapi/linux/elf.h  85  #define DT_INIT 12
DT_FINI  macro  include/uapi/linux/elf.h  86  #define DT_FINI 13
DT_SONAME  macro  include/uapi/linux/elf.h  87  #define DT_SONAME 14
DT_RPATH  macro  include/uapi/linux/elf.h  88  #define DT_RPATH 15
DT_SYMBOLIC  macro  include/uapi/linux/elf.h  89  #define DT_SYMBOLIC 16
DT_REL  macro  include/uapi/linux/elf.h  90  #define DT_REL 17
DT_RELSZ  macro  include/uapi/linux/elf.h  91  #define DT_RELSZ 18
DT_RELENT  macro  include/uapi/linux/elf.h  92  #define DT_RELENT 19
DT_PLTREL  macro  include/uapi/linux/elf.h  93  #define DT_PLTREL 20
DT_DEBUG  macro  include/uapi/linux/elf.h  94  #define DT_DEBUG 21
DT_TEXTREL  macro  include/uapi/linux/elf.h  95  #define DT_TEXTREL 22
DT_JMPREL  macro  include/uapi/linux/elf.h  96  #define DT_JMPREL 23
DT_ENCODING  macro  include/uapi/linux/elf.h  97  #define DT_ENCODING 32
OLD_DT_LOOS  macro  include/uapi/linux/elf.h  98  #define OLD_DT_LOOS 0x60000000
DT_LOOS  macro  include/uapi/linux/elf.h  99  #define DT_LOOS 0x6000000d
DT_HIOS  macro  include/uapi/linux/elf.h  100  #define DT_HIOS 0x6ffff000
DT_VALRNGLO  macro  include/uapi/linux/elf.h  101  #define DT_VALRNGLO 0x6ffffd00
DT_VALRNGHI  macro  include/uapi/linux/elf.h  102  #define DT_VALRNGHI 0x6ffffdff
DT_ADDRRNGLO  macro  include/uapi/linux/elf.h  103  #define DT_ADDRRNGLO 0x6ffffe00
DT_ADDRRNGHI  macro  include/uapi/linux/elf.h  104  #define DT_ADDRRNGHI 0x6ffffeff
DT_VERSYM  macro  include/uapi/linux/elf.h  105  #define DT_VERSYM 0x6ffffff0
DT_RELACOUNT  macro  include/uapi/linux/elf.h  106  #define DT_RELACOUNT 0x6ffffff9
DT_RELCOUNT  macro  include/uapi/linux/elf.h  107  #define DT_RELCOUNT 0x6ffffffa
DT_FLAGS_1  macro  include/uapi/linux/elf.h  108  #define DT_FLAGS_1 0x6ffffffb
DT_VERDEF  macro  include/uapi/linux/elf.h  109  #define DT_VERDEF 0x6ffffffc
DT_VERDEFNUM  macro  include/uapi/linux/elf.h  110  #define DT_VERDEFNUM 0x6ffffffd
DT_VERNEED  macro  include/uapi/linux/elf.h  111  #define DT_VERNEED 0x6ffffffe
DT_VERNEEDNUM  macro  include/uapi/linux/elf.h  112  #define DT_VERNEEDNUM 0x6fffffff
OLD_DT_HIOS  macro  include/uapi/linux/elf.h  113  #define OLD_DT_HIOS 0x6fffffff
DT_LOPROC  macro  include/uapi/linux/elf.h  114  #define DT_LOPROC 0x70000000
DT_HIPROC  macro  include/uapi/linux/elf.h  115  #define DT_HIPROC 0x7fffffff
STB_LOCAL  macro  include/uapi/linux/elf.h  118  #define STB_LOCAL 0
STB_GLOBAL  macro  include/uapi/linux/elf.h  119  #define STB_GLOBAL 1
STB_WEAK  macro  include/uapi/linux/elf.h  120  #define STB_WEAK 2
STT_NOTYPE  macro  include/uapi/linux/elf.h  122  #define STT_NOTYPE 0
STT_OBJECT  macro  include/uapi/linux/elf.h  123  #define STT_OBJECT 1
STT_FUNC  macro  include/uapi/linux/elf.h  124  #define STT_FUNC 2
STT_SECTION  macro  include/uapi/linux/elf.h  125  #define STT_SECTION 3
STT_FILE  macro  include/uapi/linux/elf.h  126  #define STT_FILE 4
STT_COMMON  macro  include/uapi/linux/elf.h  127  #define STT_COMMON 5
STT_TLS  macro  include/uapi/linux/elf.h  128  #define STT_TLS 6
ELF_ST_BIND  macro  include/uapi/linux/elf.h  130  #define ELF_ST_BIND(x) ((x) >> 4)
ELF_ST_TYPE  macro  include/uapi/linux/elf.h  131  #define ELF_ST_TYPE(x) (((unsigned int) x) & 0xf)
ELF32_ST_BIND  macro  include/uapi/linux/elf.h  132  #define ELF32_ST_BIND(x) ELF_ST_BIND(x)
ELF32_ST_TYPE  macro  include/uapi/linux/elf.h  133  #define ELF32_ST_TYPE(x) ELF_ST_TYPE(x)
ELF64_ST_BIND  macro  include/uapi/linux/elf.h  134  #define ELF64_ST_BIND(x) ELF_ST_BIND(x)
ELF64_ST_TYPE  macro  include/uapi/linux/elf.h  135  #define ELF64_ST_TYPE(x) ELF_ST_TYPE(x)
dynamic  struct  include/uapi/linux/elf.h  137  typedef struct dynamic{
ELF32_R_SYM  macro  include/uapi/linux/elf.h  154  #define ELF32_R_SYM(x) ((x) >> 8)
ELF32_R_TYPE  macro  include/uapi/linux/elf.h  155  #define ELF32_R_TYPE(x) ((x) & 0xff)
ELF64_R_SYM  macro  include/uapi/linux/elf.h  157  #define ELF64_R_SYM(i) ((i) >> 32)
ELF64_R_TYPE  macro  include/uapi/linux/elf.h  158  #define ELF64_R_TYPE(i) ((i) & 0xffffffff)
elf32_rel  struct  include/uapi/linux/elf.h  160  typedef struct elf32_rel {
elf64_rel  struct  include/uapi/linux/elf.h  165  typedef struct elf64_rel {
elf32_rela  struct  include/uapi/linux/elf.h  170  typedef struct elf32_rela{
elf64_rela  struct  include/uapi/linux/elf.h  176  typedef struct elf64_rela {
elf32_sym  struct  include/uapi/linux/elf.h  182  typedef struct elf32_sym{
elf64_sym  struct  include/uapi/linux/elf.h  191  typedef struct elf64_sym {
EI_NIDENT  macro  include/uapi/linux/elf.h  201  #define EI_NIDENT 16
elf32_hdr  struct  include/uapi/linux/elf.h  203  typedef struct elf32_hdr{
elf64_hdr  struct  include/uapi/linux/elf.h  220  typedef struct elf64_hdr {
PF_R  macro  include/uapi/linux/elf.h  239  #define PF_R 0x4
PF_W  macro  include/uapi/linux/elf.h  240  #define PF_W 0x2
PF_X  macro  include/uapi/linux/elf.h  241  #define PF_X 0x1
elf32_phdr  struct  include/uapi/linux/elf.h  243  typedef struct elf32_phdr{
elf64_phdr  struct  include/uapi/linux/elf.h  254  typedef struct elf64_phdr {
SHT_NULL  macro  include/uapi/linux/elf.h  266  #define SHT_NULL 0
SHT_PROGBITS  macro  include/uapi/linux/elf.h  267  #define SHT_PROGBITS 1
SHT_SYMTAB  macro  include/uapi/linux/elf.h  268  #define SHT_SYMTAB 2
SHT_STRTAB  macro  include/uapi/linux/elf.h  269  #define SHT_STRTAB 3
SHT_RELA  macro  include/uapi/linux/elf.h  270  #define SHT_RELA 4
SHT_HASH  macro  include/uapi/linux/elf.h  271  #define SHT_HASH 5
SHT_DYNAMIC  macro  include/uapi/linux/elf.h  272  #define SHT_DYNAMIC 6
SHT_NOTE  macro  include/uapi/linux/elf.h  273  #define SHT_NOTE 7
SHT_NOBITS  macro  include/uapi/linux/elf.h  274  #define SHT_NOBITS 8
SHT_REL  macro  include/uapi/linux/elf.h  275  #define SHT_REL 9
SHT_SHLIB  macro  include/uapi/linux/elf.h  276  #define SHT_SHLIB 10
SHT_DYNSYM  macro  include/uapi/linux/elf.h  277  #define SHT_DYNSYM 11
SHT_NUM  macro  include/uapi/linux/elf.h  278  #define SHT_NUM 12
SHT_LOPROC  macro  include/uapi/linux/elf.h  279  #define SHT_LOPROC 0x70000000
SHT_HIPROC  macro  include/uapi/linux/elf.h  280  #define SHT_HIPROC 0x7fffffff
SHT_LOUSER  macro  include/uapi/linux/elf.h  281  #define SHT_LOUSER 0x80000000
SHT_HIUSER  macro  include/uapi/linux/elf.h  282  #define SHT_HIUSER 0xffffffff
SHF_WRITE  macro  include/uapi/linux/elf.h  285  #define SHF_WRITE 0x1
SHF_ALLOC  macro  include/uapi/linux/elf.h  286  #define SHF_ALLOC 0x2
SHF_EXECINSTR  macro  include/uapi/linux/elf.h  287  #define SHF_EXECINSTR 0x4
SHF_MASKPROC  macro  include/uapi/linux/elf.h  288  #define SHF_MASKPROC 0xf0000000
SHN_UNDEF  macro  include/uapi/linux/elf.h  291  #define SHN_UNDEF 0
SHN_LORESERVE  macro  include/uapi/linux/elf.h  292  #define SHN_LORESERVE 0xff00
SHN_LOPROC  macro  include/uapi/linux/elf.h  293  #define SHN_LOPROC 0xff00
SHN_HIPROC  macro  include/uapi/linux/elf.h  294  #define SHN_HIPROC 0xff1f
SHN_ABS  macro  include/uapi/linux/elf.h  295  #define SHN_ABS 0xfff1
SHN_COMMON  macro  include/uapi/linux/elf.h  296  #define SHN_COMMON 0xfff2
SHN_HIRESERVE  macro  include/uapi/linux/elf.h  297  #define SHN_HIRESERVE 0xffff
elf32_shdr  struct  include/uapi/linux/elf.h  299  typedef struct elf32_shdr {
elf64_shdr  struct  include/uapi/linux/elf.h  312  typedef struct elf64_shdr {
EI_MAG0  macro  include/uapi/linux/elf.h  325  #define EI_MAG0 0
EI_MAG1  macro  include/uapi/linux/elf.h  326  #define EI_MAG1 1
EI_MAG2  macro  include/uapi/linux/elf.h  327  #define EI_MAG2 2
EI_MAG3  macro  include/uapi/linux/elf.h  328  #define EI_MAG3 3
EI_CLASS  macro  include/uapi/linux/elf.h  329  #define EI_CLASS 4
EI_DATA  macro  include/uapi/linux/elf.h  330  #define EI_DATA 5
EI_VERSION  macro  include/uapi/linux/elf.h  331  #define EI_VERSION 6
EI_OSABI  macro  include/uapi/linux/elf.h  332  #define EI_OSABI 7
EI_PAD  macro  include/uapi/linux/elf.h  333  #define EI_PAD 8
ELFMAG0  macro  include/uapi/linux/elf.h  335  #define ELFMAG0 0x7f
ELFMAG1  macro  include/uapi/linux/elf.h  336  #define ELFMAG1 'E'
ELFMAG2  macro  include/uapi/linux/elf.h  337  #define ELFMAG2 'L'
ELFMAG3  macro  include/uapi/linux/elf.h  338  #define ELFMAG3 'F'
ELFMAG  macro  include/uapi/linux/elf.h  339  #define ELFMAG "\177ELF"
SELFMAG  macro  include/uapi/linux/elf.h  340  #define SELFMAG 4
ELFCLASSNONE  macro  include/uapi/linux/elf.h  342  #define ELFCLASSNONE 0
ELFCLASS32  macro  include/uapi/linux/elf.h  343  #define ELFCLASS32 1
ELFCLASS64  macro  include/uapi/linux/elf.h  344  #define ELFCLASS64 2
ELFCLASSNUM  macro  include/uapi/linux/elf.h  345  #define ELFCLASSNUM 3
ELFDATANONE  macro  include/uapi/linux/elf.h  347  #define ELFDATANONE 0
ELFDATA2LSB  macro  include/uapi/linux/elf.h  348  #define ELFDATA2LSB 1
ELFDATA2MSB  macro  include/uapi/linux/elf.h  349  #define ELFDATA2MSB 2
EV_NONE  macro  include/uapi/linux/elf.h  351  #define EV_NONE 0
EV_CURRENT  macro  include/uapi/linux/elf.h  352  #define EV_CURRENT 1
EV_NUM  macro  include/uapi/linux/elf.h  353  #define EV_NUM 2
ELFOSABI_NONE  macro  include/uapi/linux/elf.h  355  #define ELFOSABI_NONE 0
ELFOSABI_LINUX  macro  include/uapi/linux/elf.h  356  #define ELFOSABI_LINUX 3
ELF_OSABI  macro  include/uapi/linux/elf.h  359  #define ELF_OSABI ELFOSABI_NONE
NT_PRSTATUS  macro  include/uapi/linux/elf.h  367  #define NT_PRSTATUS 1
NT_PRFPREG  macro  include/uapi/linux/elf.h  368  #define NT_PRFPREG 2
NT_PRPSINFO  macro  include/uapi/linux/elf.h  369  #define NT_PRPSINFO 3
NT_TASKSTRUCT  macro  include/uapi/linux/elf.h  370  #define NT_TASKSTRUCT 4
NT_AUXV  macro  include/uapi/linux/elf.h  371  #define NT_AUXV 6
NT_SIGINFO  macro  include/uapi/linux/elf.h  376  #define NT_SIGINFO 0x53494749
NT_FILE  macro  include/uapi/linux/elf.h  377  #define NT_FILE 0x46494c45
NT_PRXFPREG  macro  include/uapi/linux/elf.h  378  #define NT_PRXFPREG 0x46e62b7f
NT_PPC_VMX  macro  include/uapi/linux/elf.h  379  #define NT_PPC_VMX 0x100
NT_PPC_SPE  macro  include/uapi/linux/elf.h  380  #define NT_PPC_SPE 0x101
NT_PPC_VSX  macro  include/uapi/linux/elf.h  381  #define NT_PPC_VSX 0x102
NT_386_TLS  macro  include/uapi/linux/elf.h  382  #define NT_386_TLS 0x200
NT_386_IOPERM  macro  include/uapi/linux/elf.h  383  #define NT_386_IOPERM 0x201
NT_X86_XSTATE  macro  include/uapi/linux/elf.h  384  #define NT_X86_XSTATE 0x202
NT_S390_HIGH_GPRS  macro  include/uapi/linux/elf.h  385  #define NT_S390_HIGH_GPRS 0x300
NT_S390_TIMER  macro  include/uapi/linux/elf.h  386  #define NT_S390_TIMER 0x301
NT_S390_TODCMP  macro  include/uapi/linux/elf.h  387  #define NT_S390_TODCMP 0x302
NT_S390_TODPREG  macro  include/uapi/linux/elf.h  388  #define NT_S390_TODPREG 0x303
NT_S390_CTRS  macro  include/uapi/linux/elf.h  389  #define NT_S390_CTRS 0x304
NT_S390_PREFIX  macro  include/uapi/linux/elf.h  390  #define NT_S390_PREFIX 0x305
NT_S390_LAST_BREAK  macro  include/uapi/linux/elf.h  391  #define NT_S390_LAST_BREAK 0x306
NT_S390_SYSTEM_CALL  macro  include/uapi/linux/elf.h  392  #define NT_S390_SYSTEM_CALL 0x307
NT_S390_TDB  macro  include/uapi/linux/elf.h  393  #define NT_S390_TDB 0x308
NT_ARM_VFP  macro  include/uapi/linux/elf.h  394  #define NT_ARM_VFP 0x400
NT_ARM_TLS  macro  include/uapi/linux/elf.h  395  #define NT_ARM_TLS 0x401
NT_ARM_HW_BREAK  macro  include/uapi/linux/elf.h  396  #define NT_ARM_HW_BREAK 0x402
NT_ARM_HW_WATCH  macro  include/uapi/linux/elf.h  397  #define NT_ARM_HW_WATCH 0x403
elf32_note  struct  include/uapi/linux/elf.h  401  typedef struct elf32_note {
elf64_note  struct  include/uapi/linux/elf.h  408  typedef struct elf64_note {
_SYSFS_H_  macro  include/linux/sysfs.h  13  #define _SYSFS_H_
attribute  struct  include/linux/sysfs.h  26  struct attribute {
sysfs_attr_init  macro  include/linux/sysfs.h  54  #define sysfs_attr_init(attr) do {} while(0)
attribute_group  struct  include/linux/sysfs.h  57  struct attribute_group {
__ATTR  macro  include/linux/sysfs.h  75  #define __ATTR(_name,_mode,_show,_store) { .attr = {.name = __stringify(_name), .mode = _mode }, .show	= _show, .store	= _store, }
__ATTR_RO  macro  include/linux/sysfs.h  80  #define __ATTR_RO(_name) { .attr	= { .name = __stringify(_name), .mode = 0444 }, .show	= _name##_show, }
__ATTR_NULL  macro  include/linux/sysfs.h  82  #define __ATTR_NULL { .attr = { .name = NULL } }
__ATTR_IGNORE_LOCKDEP  macro  include/linux/sysfs.h  92  #define __ATTR_IGNORE_LOCKDEP __ATTR
attr_name  macro  include/linux/sysfs.h  95  #define attr_name(_attr) (_attr).attr.name
bin_attribute  struct  include/linux/sysfs.h  100  struct bin_attribute {
sysfs_bin_attr_init  macro  include/linux/sysfs.h  122  #define sysfs_bin_attr_init(bin_attr) sysfs_attr_init(&(bin_attr)->attr)
sysfs_ops  struct  include/linux/sysfs.h  124  struct sysfs_ops {
sysfs_schedule_callback  function  include/linux/sysfs.h  198  static inline int sysfs_schedule_callback(struct kobject *kobj,void (*func)(void *), void *data, struct module *owner)
sysfs_create_dir  function  include/linux/sysfs.h  203  static inline int sysfs_create_dir(struct kobject *kobj)
sysfs_remove_dir  function  include/linux/sysfs.h  208  static inline void sysfs_remove_dir(struct kobject *kobj)
sysfs_rename_dir  function  include/linux/sysfs.h  212  static inline int sysfs_rename_dir(struct kobject *kobj,const char *new_name)
sysfs_move_dir  function  include/linux/sysfs.h  218  static inline int sysfs_move_dir(struct kobject *kobj,struct kobject *new_parent_kobj)
sysfs_create_file  function  include/linux/sysfs.h  224  static inline int sysfs_create_file(struct kobject *kobj,const struct attribute *attr)
sysfs_create_files  function  include/linux/sysfs.h  230  static inline int sysfs_create_files(struct kobject *kobj,const struct attribute **attr)
sysfs_chmod_file  function  include/linux/sysfs.h  236  static inline int sysfs_chmod_file(struct kobject *kobj,const struct attribute *attr, umode_t mode)
sysfs_remove_file  function  include/linux/sysfs.h  242  static inline void sysfs_remove_file(struct kobject *kobj,const struct attribute *attr)
sysfs_remove_files  function  include/linux/sysfs.h  247  static inline void sysfs_remove_files(struct kobject *kobj,const struct attribute **attr)
sysfs_create_bin_file  function  include/linux/sysfs.h  252  static inline int sysfs_create_bin_file(struct kobject *kobj,const struct bin_attribute *attr)
sysfs_remove_bin_file  function  include/linux/sysfs.h  258  static inline void sysfs_remove_bin_file(struct kobject *kobj,const struct bin_attribute *attr)
sysfs_create_link  function  include/linux/sysfs.h  263  static inline int sysfs_create_link(struct kobject *kobj,struct kobject *target, const char *name)
sysfs_create_link_nowarn  function  include/linux/sysfs.h  270  static inline int sysfs_create_link_nowarn(struct kobject *kobj,struct kobject *target,const char *name)
sysfs_remove_link  function  include/linux/sysfs.h  275  static inline void sysfs_remove_link(struct kobject *kobj,const char *name)
sysfs_rename_link  function  include/linux/sysfs.h  280  static inline int sysfs_rename_link(struct kobject *k,struct kobject *t,const char *old_name, const char *new_name)
sysfs_delete_link  function  include/linux/sysfs.h  286  static inline void sysfs_delete_link(struct kobject *k,struct kobject *t,const char *name)
sysfs_create_group  function  include/linux/sysfs.h  291  static inline int sysfs_create_group(struct kobject *kobj,const struct attribute_group *grp)
sysfs_update_group  function  include/linux/sysfs.h  297  static inline int sysfs_update_group(struct kobject *kobj,const struct attribute_group *grp)
sysfs_remove_group  function  include/linux/sysfs.h  303  static inline void sysfs_remove_group(struct kobject *kobj,const struct attribute_group *grp)
sysfs_add_file_to_group  function  include/linux/sysfs.h  308  static inline int sysfs_add_file_to_group(struct kobject *kobj,const struct attribute *attr, const char *group)
sysfs_remove_file_from_group  function  include/linux/sysfs.h  314  static inline void sysfs_remove_file_from_group(struct kobject *kobj,const struct attribute *attr, const char *group)
sysfs_merge_group  function  include/linux/sysfs.h  319  static inline int sysfs_merge_group(struct kobject *kobj,const struct attribute_group *grp)
sysfs_unmerge_group  function  include/linux/sysfs.h  325  static inline void sysfs_unmerge_group(struct kobject *kobj,const struct attribute_group *grp)
sysfs_notify  function  include/linux/sysfs.h  330  static inline void sysfs_notify(struct kobject *kobj,const char *dir,const char *attr)
sysfs_notify_dirent  function  include/linux/sysfs.h  333  static inline void sysfs_notify_dirent(struct sysfs_dirent *sd)
sysfs_get_dirent  function  include/linux/sysfs.h  339  struct sysfs_dirent *sysfs_get_dirent(struct sysfs_dirent *parent_sd,const void *ns,const unsigned char *name)
sysfs_get  function  include/linux/sysfs.h  343  static inline struct sysfs_dirent *sysfs_get(struct sysfs_dirent *sd)
sysfs_put  function  include/linux/sysfs.h  347  static inline void sysfs_put(struct sysfs_dirent *sd)
sysfs_init  function  include/linux/sysfs.h  351  static inline int __must_check sysfs_init(void)
_LINUX_KOBJECT_NS_H  macro  include/linux/kobject_ns.h  18  #define _LINUX_KOBJECT_NS_H
kobj_ns_type  enum  include/linux/kobject_ns.h  27  enum kobj_ns_type {
kobj_ns_type_operations  struct  include/linux/kobject_ns.h  40  struct kobj_ns_type_operations {
kobj_ns_type_register  prototype  include/linux/kobject_ns.h  48  int kobj_ns_type_register(const struct kobj_ns_type_operations *ops);
kobj_ns_type_registered  prototype  include/linux/kobject_ns.h  49  int kobj_ns_type_registered(enum kobj_ns_type type);
kobj_child_ns_ops  prototype  include/linux/kobject_ns.h  50  const struct kobj_ns_type_operations *kobj_child_ns_ops(struct kobject *parent);
kobj_ns_ops  prototype  include/linux/kobject_ns.h  51  const struct kobj_ns_type_operations *kobj_ns_ops(struct kobject *kobj);
kobj_ns_grab_current  prototype  include/linux/kobject_ns.h  53  void *kobj_ns_grab_current(enum kobj_ns_type type);
kobj_ns_netlink  prototype  include/linux/kobject_ns.h  54  const void *kobj_ns_netlink(enum kobj_ns_type type,struct sock *sk);
kobj_ns_initial  prototype  include/linux/kobject_ns.h  55  const void *kobj_ns_initial(enum kobj_ns_type type);
kobj_ns_drop  prototype  include/linux/kobject_ns.h  56  void kobj_ns_drop(enum kobj_ns_type type,void *ns);
_LINUX_WAIT_H  macro  include/linux/wait.h  2  #define _LINUX_WAIT_H
default_wake_function  prototype  include/linux/wait.h  13  int default_wake_function(wait_queue_t *wait,unsigned mode,int flags,void *key);
__wait_queue  struct  include/linux/wait.h  15  struct __wait_queue {
WQ_FLAG_EXCLUSIVE  macro  include/linux/wait.h  17  #define WQ_FLAG_EXCLUSIVE 0x01
wait_bit_key  struct  include/linux/wait.h  23  struct wait_bit_key {
wait_bit_queue  struct  include/linux/wait.h  28  struct wait_bit_queue {
__wait_queue_head  struct  include/linux/wait.h  33  struct __wait_queue_head {
__WAITQUEUE_INITIALIZER  macro  include/linux/wait.h  48  #define __WAITQUEUE_INITIALIZER(name,tsk) { .private	= tsk, .func		= default_wake_function, .task_list	= { NULL, NULL } }
DECLARE_WAITQUEUE  macro  include/linux/wait.h  51  #define DECLARE_WAITQUEUE(name,tsk) wait_queue_t name = __WAITQUEUE_INITIALIZER(name, tsk)
__WAIT_QUEUE_HEAD_INITIALIZER  macro  include/linux/wait.h  55  #define __WAIT_QUEUE_HEAD_INITIALIZER(name) { .lock		= __SPIN_LOCK_UNLOCKED(name.lock), .task_list	= { &(name).task_list, &(name).task_list } }
DECLARE_WAIT_QUEUE_HEAD  macro  include/linux/wait.h  58  #define DECLARE_WAIT_QUEUE_HEAD(name) wait_queue_head_t name = __WAIT_QUEUE_HEAD_INITIALIZER(name)
__WAIT_BIT_KEY_INITIALIZER  macro  include/linux/wait.h  61  #define __WAIT_BIT_KEY_INITIALIZER(word,bit) { .flags = word, .bit_nr = bit, }
__init_waitqueue_head  prototype  include/linux/wait.h  63  extern void __init_waitqueue_head(wait_queue_head_t *q,const char *name,struct lock_class_key *);
init_waitqueue_head  macro  include/linux/wait.h  70  #define init_waitqueue_head(q) do { static struct lock_class_key __key; __init_waitqueue_head((q), #q, &__key); } while (0)
__WAIT_QUEUE_HEAD_INIT_ONSTACK  macro  include/linux/wait.h  74  # define __WAIT_QUEUE_HEAD_INIT_ONSTACK(name) ({ init_waitqueue_head(&name); name; })
DECLARE_WAIT_QUEUE_HEAD_ONSTACK  macro  include/linux/wait.h  78  # define DECLARE_WAIT_QUEUE_HEAD_ONSTACK(name) DECLARE_WAIT_QUEUE_HEAD(name)
init_waitqueue_entry  function  include/linux/wait.h  81  static inline void init_waitqueue_entry(wait_queue_t *q,struct task_struct *p)
init_waitqueue_func_entry  function  include/linux/wait.h  89  static inline void init_waitqueue_func_entry(wait_queue_t *q,wait_queue_func_t func)
waitqueue_active  function  include/linux/wait.h  96  static inline int waitqueue_active(wait_queue_head_t *q)
add_wait_queue  prototype  include/linux/wait.h  101  extern void add_wait_queue(wait_queue_head_t *q,wait_queue_t *wait);
add_wait_queue_exclusive  prototype  include/linux/wait.h  102  extern void add_wait_queue_exclusive(wait_queue_head_t *q,wait_queue_t *wait);
remove_wait_queue  prototype  include/linux/wait.h  103  extern void remove_wait_queue(wait_queue_head_t *q,wait_queue_t *wait);
__add_wait_queue  function  include/linux/wait.h  105  static inline void __add_wait_queue(wait_queue_head_t *head,wait_queue_t *new)
__add_wait_queue_exclusive  function  include/linux/wait.h  114  static inline void __add_wait_queue_exclusive(wait_queue_head_t *q,wait_queue_t *wait)
__add_wait_queue_tail  function  include/linux/wait.h  121  static inline void __add_wait_queue_tail(wait_queue_head_t *head,wait_queue_t *new)
__add_wait_queue_tail_exclusive  function  include/linux/wait.h  127  static inline void __add_wait_queue_tail_exclusive(wait_queue_head_t *q,wait_queue_t *wait)
__remove_wait_queue  function  include/linux/wait.h  134  static inline void __remove_wait_queue(wait_queue_head_t *head,wait_queue_t *old)
__wake_up  prototype  include/linux/wait.h  139  void __wake_up(wait_queue_head_t *q,unsigned int mode,int nr,void *key);
__wake_up_locked_key  prototype  include/linux/wait.h  140  void __wake_up_locked_key(wait_queue_head_t *q,unsigned int mode,void *key);
__wake_up_sync_key  prototype  include/linux/wait.h  142  void __wake_up_sync_key(wait_queue_head_t *q,unsigned int mode,int nr,void *key);
__wake_up_locked  prototype  include/linux/wait.h  143  void __wake_up_locked(wait_queue_head_t *q,unsigned int mode,int nr);
__wake_up_sync  prototype  include/linux/wait.h  144  void __wake_up_sync(wait_queue_head_t *q,unsigned int mode,int nr);
__wake_up_bit  prototype  include/linux/wait.h  145  void __wake_up_bit(wait_queue_head_t *,void *,int);
__wait_on_bit  prototype  include/linux/wait.h  146  int __wait_on_bit(wait_queue_head_t *,struct wait_bit_queue *,int (*)(void *),unsigned);
__wait_on_bit_lock  prototype  include/linux/wait.h  147  int __wait_on_bit_lock(wait_queue_head_t *,struct wait_bit_queue *,int (*)(void *),unsigned);
wake_up_bit  prototype  include/linux/wait.h  148  void wake_up_bit(void *,int);
out_of_line_wait_on_bit  prototype  include/linux/wait.h  149  int out_of_line_wait_on_bit(void *,int,int (*)(void *),unsigned);
out_of_line_wait_on_bit_lock  prototype  include/linux/wait.h  150  int out_of_line_wait_on_bit_lock(void *,int,int (*)(void *),unsigned);
bit_waitqueue  prototype  include/linux/wait.h  151  wait_queue_head_t *bit_waitqueue(void *,int);
wake_up  macro  include/linux/wait.h  153  #define wake_up(x) __wake_up(x,TASK_NORMAL,1,NULL)
wake_up_nr  macro  include/linux/wait.h  154  #define wake_up_nr(x,nr) __wake_up(x,TASK_NORMAL,nr,NULL)
wake_up_all  macro  include/linux/wait.h  155  #define wake_up_all(x) __wake_up(x,TASK_NORMAL,0,NULL)
wake_up_locked  macro  include/linux/wait.h  156  #define wake_up_locked(x) __wake_up_locked((x),TASK_NORMAL,1)
wake_up_all_locked  macro  include/linux/wait.h  157  #define wake_up_all_locked(x) __wake_up_locked((x),TASK_NORMAL,0)
wake_up_interruptible  macro  include/linux/wait.h  159  #define wake_up_interruptible(x) __wake_up(x,TASK_INTERRUPTIBLE,1,NULL)
wake_up_interruptible_nr  macro  include/linux/wait.h  160  #define wake_up_interruptible_nr(x,nr) __wake_up(x,TASK_INTERRUPTIBLE,nr,NULL)
wake_up_interruptible_all  macro  include/linux/wait.h  161  #define wake_up_interruptible_all(x) __wake_up(x,TASK_INTERRUPTIBLE,0,NULL)
wake_up_interruptible_sync  macro  include/linux/wait.h  162  #define wake_up_interruptible_sync(x) __wake_up_sync((x),TASK_INTERRUPTIBLE,1)
wake_up_poll  macro  include/linux/wait.h  168  #define wake_up_poll(x,m) __wake_up(x, TASK_NORMAL, 1, (void *) (m))
wake_up_locked_poll  macro  include/linux/wait.h  170  #define wake_up_locked_poll(x,m) __wake_up_locked_key((x), TASK_NORMAL, (void *) (m))
wake_up_interruptible_poll  macro  include/linux/wait.h  172  #define wake_up_interruptible_poll(x,m) __wake_up(x, TASK_INTERRUPTIBLE, 1, (void *) (m))
wake_up_interruptible_sync_poll  macro  include/linux/wait.h  174  #define wake_up_interruptible_sync_poll(x,m) __wake_up_sync_key((x), TASK_INTERRUPTIBLE, 1, (void *) (m))
__wait_event  macro  include/linux/wait.h  187  #define __wait_event(wq,condition) do { DEFINE_WAIT(__wait); for (;;) { prepare_to_wait(&wq, &__wait, TASK_UNINTERRUPTIBLE); if (condition) break; schedule(); } finish_wait(&wq, &__wait); } while (0)
wait_event  macro  include/linux/wait.h  206  #define wait_event(wq,condition) do { if (condition) break; __wait_event(wq, condition); } while (0)
__wait_event_timeout  macro  include/linux/wait.h  221  #define __wait_event_timeout(wq,condition,ret) do { DEFINE_WAIT(__wait); for (;;) { prepare_to_wait(&wq, &__wait, TASK_UNINTERRUPTIBLE); if (condition) break; ret = schedule_timeout(ret); if (!ret) break; } finish_wait(&wq, &__wait); } while (0)
wait_event_timeout  macro  include/linux/wait.h  245  #define wait_event_timeout(wq,condition,timeout) ({ long __ret = timeout; if (!(condition)) __wait_event_timeout(wq, condition, __ret); __ret; })
__wait_event_interruptible  macro  include/linux/wait.h  263  #define __wait_event_interruptible(wq,condition,ret) do { DEFINE_WAIT(__wait); for (;;) { prepare_to_wait(&wq, &__wait, TASK_INTERRUPTIBLE); if (condition) break; if (!signal_pending(current)) { schedule(); continue; } ret = -ERESTARTSYS; break; } finish_wait(&wq, &__wait); } while (0)
wait_event_interruptible  macro  include/linux/wait.h  286  #define wait_event_interruptible(wq,condition) ({ int __ret = 0; if (!(condition)) __wait_event_interruptible(wq, condition, __ret); __ret; })
__wait_event_interruptible_timeout  macro  include/linux/wait.h  306  #define __wait_event_interruptible_timeout(wq,condition,ret) do { DEFINE_WAIT(__wait); for (;;) { prepare_to_wait(&wq, &__wait, TASK_INTERRUPTIBLE); if (condition) break; if (!signal_pending(current)) { ret = schedule_timeout(ret); if (!ret) break; continue; } ret = -ERESTARTSYS; break; } finish_wait(&wq, &__wait); } while (0)
wait_event_interruptible_timeout  macro  include/linux/wait.h  331  #define wait_event_interruptible_timeout(wq,condition,timeout) ({ long __ret = timeout; if (!(condition)) __wait_event_interruptible_timeout(wq, condition, __ret); __ret; })
__wait_event_interruptible_exclusive  macro  include/linux/wait.h  353  #define __wait_event_interruptible_exclusive(wq,condition,ret) do { DEFINE_WAIT(__wait); for (;;) { prepare_to_wait_exclusive(&wq, &__wait, TASK_INTERRUPTIBLE); if (condition) { finish_wait(&wq, &__wait); break; } if (!signal_pending(current)) { schedule(); continue; } ret = -ERESTARTSYS; abort_exclusive_wait(&wq, &__wait, TASK_INTERRUPTIBLE, NULL); break; } } while (0)
wait_event_interruptible_exclusive  macro  include/linux/wait.h  361  #define wait_event_interruptible_exclusive(wq,condition) ({ int __ret = 0; if (!(condition)) __wait_event_interruptible_exclusive(wq, condition, __ret); __ret; })
__wait_event_interruptible_locked  macro  include/linux/wait.h  391  #define __wait_event_interruptible_locked(wq,condition,exclusive,irq) ({ int __ret = 0; DEFINE_WAIT(__wait); if (exclusive) __wait.flags |= WQ_FLAG_EXCLUSIVE; do { if (likely(list_empty(&__wait.task_list))) __add_wait_queue_tail(&(wq), &__wait); set_current_state(TASK_INTERRUPTIBLE); if (signal_pending(current)) { __ret = -ERESTARTSYS; break; } if (irq) spin_unlock_irq(&(wq).lock); else spin_unlock(&(wq).lock); schedule(); if (irq) spin_lock_irq(&(wq).lock); else spin_lock(&(wq).lock); } while (!(condition)); __remove_wait_queue(&(wq), &__wait); __set_current_state(TASK_RUNNING); __ret; })
wait_event_interruptible_locked  macro  include/linux/wait.h  419  #define wait_event_interruptible_locked(wq,condition) ((condition) ? 0 : __wait_event_interruptible_locked(wq, condition, 0, 0))
wait_event_interruptible_locked_irq  macro  include/linux/wait.h  446  #define wait_event_interruptible_locked_irq(wq,condition) ((condition) ? 0 : __wait_event_interruptible_locked(wq, condition, 0, 1))
wait_event_interruptible_exclusive_locked  macro  include/linux/wait.h  477  #define wait_event_interruptible_exclusive_locked(wq,condition) ((condition) ? 0 : __wait_event_interruptible_locked(wq, condition, 1, 0))
wait_event_interruptible_exclusive_locked_irq  macro  include/linux/wait.h  508  #define wait_event_interruptible_exclusive_locked_irq(wq,condition) ((condition) ? 0 : __wait_event_interruptible_locked(wq, condition, 1, 1))
__wait_event_killable  macro  include/linux/wait.h  528  #define __wait_event_killable(wq,condition,ret) do { DEFINE_WAIT(__wait); for (;;) { prepare_to_wait(&wq, &__wait, TASK_KILLABLE); if (condition) break; if (!fatal_signal_pending(current)) { schedule(); continue; } ret = -ERESTARTSYS; break; } finish_wait(&wq, &__wait); } while (0)
wait_event_killable  macro  include/linux/wait.h  551  #define wait_event_killable(wq,condition) ({ int __ret = 0; if (!(condition)) __wait_event_killable(wq, condition, __ret); __ret; })
__wait_event_lock_irq  macro  include/linux/wait.h  568  #define __wait_event_lock_irq(wq,condition,lock,cmd) do { DEFINE_WAIT(__wait); for (;;) { prepare_to_wait(&wq, &__wait, TASK_UNINTERRUPTIBLE); if (condition) break; spin_unlock_irq(&lock); cmd; schedule(); spin_lock_irq(&lock); } finish_wait(&wq, &__wait); } while (0)
wait_event_lock_irq_cmd  macro  include/linux/wait.h  598  #define wait_event_lock_irq_cmd(wq,condition,lock,cmd) do { if (condition) break; __wait_event_lock_irq(wq, condition, lock, cmd); } while (0)
wait_event_lock_irq  macro  include/linux/wait.h  625  #define wait_event_lock_irq(wq,condition,lock) do { if (condition) break; __wait_event_lock_irq(wq, condition, lock, ); } while (0)
__wait_event_interruptible_lock_irq  macro  include/linux/wait.h  647  #define __wait_event_interruptible_lock_irq(wq,condition, lock, ret, cmd) do { DEFINE_WAIT(__wait); for (;;) { prepare_to_wait(&wq, &__wait, TASK_INTERRUPTIBLE); if (condition) break; if (signal_pending(current)) { ret = -ERESTARTSYS; break; } spin_unlock_irq(&lock); cmd; schedule(); spin_lock_irq(&lock); } finish_wait(&wq, &__wait); } while (0)
wait_event_interruptible_lock_irq_cmd  macro  include/linux/wait.h  682  #define wait_event_interruptible_lock_irq_cmd(wq,condition,lock,cmd) ({ int __ret = 0; if (!(condition)) __wait_event_interruptible_lock_irq(wq, condition, lock, __ret, cmd); __ret; })
wait_event_interruptible_lock_irq  macro  include/linux/wait.h  714  #define wait_event_interruptible_lock_irq(wq,condition,lock) ({ int __ret = 0; if (!(condition)) __wait_event_interruptible_lock_irq(wq, condition, lock, __ret, ); __ret; })
sleep_on  prototype  include/linux/wait.h  722  extern void sleep_on(wait_queue_head_t *q);
sleep_on_timeout  prototype  include/linux/wait.h  724  extern long sleep_on_timeout(wait_queue_head_t *q,signed long timeout);
interruptible_sleep_on  prototype  include/linux/wait.h  725  extern void interruptible_sleep_on(wait_queue_head_t *q);
interruptible_sleep_on_timeout  prototype  include/linux/wait.h  727  extern long interruptible_sleep_on_timeout(wait_queue_head_t *q,signed long timeout);
prepare_to_wait  prototype  include/linux/wait.h  732  void prepare_to_wait(wait_queue_head_t *q,wait_queue_t *wait,int state);
prepare_to_wait_exclusive  prototype  include/linux/wait.h  733  void prepare_to_wait_exclusive(wait_queue_head_t *q,wait_queue_t *wait,int state);
finish_wait  prototype  include/linux/wait.h  734  void finish_wait(wait_queue_head_t *q,wait_queue_t *wait);
abort_exclusive_wait  prototype  include/linux/wait.h  736  void abort_exclusive_wait(wait_queue_head_t *q,wait_queue_t *wait,unsigned int mode, void *key);
autoremove_wake_function  prototype  include/linux/wait.h  737  int autoremove_wake_function(wait_queue_t *wait,unsigned mode,int sync,void *key);
wake_bit_function  prototype  include/linux/wait.h  738  int wake_bit_function(wait_queue_t *wait,unsigned mode,int sync,void *key);
DEFINE_WAIT_FUNC  macro  include/linux/wait.h  745  #define DEFINE_WAIT_FUNC(name,function) wait_queue_t name = { .private	= current, .func		= function, .task_list	= LIST_HEAD_INIT((name).task_list), }
DEFINE_WAIT  macro  include/linux/wait.h  747  #define DEFINE_WAIT(name) DEFINE_WAIT_FUNC(name,autoremove_wake_function)
DEFINE_WAIT_BIT  macro  include/linux/wait.h  758  #define DEFINE_WAIT_BIT(name,word,bit) struct wait_bit_queue name = { .key = __WAIT_BIT_KEY_INITIALIZER(word, bit), .wait	= { .private	= current, .func		= wake_bit_function, .task_list	= LIST_HEAD_INIT((name).wait.task_list), }, }
init_wait  macro  include/linux/wait.h  766  #define init_wait(wait) do { (wait)->private = current; (wait)->func = autoremove_wake_function; INIT_LIST_HEAD(&(wait)->task_list); (wait)->flags = 0; } while (0)
wait_on_bit  function  include/linux/wait.h  783  static inline int wait_on_bit(void *word,int bit,int (*action)(void *), unsigned mode)
wait_on_bit_lock  function  include/linux/wait.h  807  static inline int wait_on_bit_lock(void *word,int bit,int (*action)(void *), unsigned mode)
_LINUX_PFN_H_  macro  include/linux/pfn.h  2  #define _LINUX_PFN_H_
PFN_ALIGN  macro  include/linux/pfn.h  8  #define PFN_ALIGN(x) (((unsigned long)(x) + (PAGE_SIZE - 1)) & PAGE_MASK)
PFN_UP  macro  include/linux/pfn.h  9  #define PFN_UP(x) (((x) + PAGE_SIZE-1) >> PAGE_SHIFT)
PFN_DOWN  macro  include/linux/pfn.h  10  #define PFN_DOWN(x) ((x) >> PAGE_SHIFT)
PFN_PHYS  macro  include/linux/pfn.h  11  #define PFN_PHYS(x) ((phys_addr_t)(x) << PAGE_SHIFT)
_ASM_X86_PERCPU_H  macro  arch/x86/include/asm/percpu.h  2  #define _ASM_X86_PERCPU_H
__percpu_seg  macro  arch/x86/include/asm/percpu.h  8  #define __percpu_seg fs
__percpu_mov_op  macro  arch/x86/include/asm/percpu.h  9  #define __percpu_mov_op movl
PER_CPU  macro  arch/x86/include/asm/percpu.h  32  #define PER_CPU(var,reg) __percpu_mov_op $var,reg
PER_CPU_VAR  macro  arch/x86/include/asm/percpu.h  33  #define PER_CPU_VAR(var) var
INIT_PER_CPU_VAR  macro  arch/x86/include/asm/percpu.h  39  #define INIT_PER_CPU_VAR(var) var
__percpu_prefix  macro  arch/x86/include/asm/percpu.h  65  #define __percpu_prefix ""
__my_cpu_offset  macro  arch/x86/include/asm/percpu.h  49  #define __my_cpu_offset this_cpu_read(this_cpu_off)
__this_cpu_ptr  macro  arch/x86/include/asm/percpu.h  63  #define __this_cpu_ptr(ptr) ({ unsigned long tcp_ptr__; __verify_pcpu_ptr(ptr); asm volatile("add " __percpu_arg(1) ", %0" : "=r" (tcp_ptr__) : "m" (this_cpu_off), "0" (ptr)); (typeof(*(ptr)) __kernel __force *)tcp_ptr__; })
__percpu_arg  macro  arch/x86/include/asm/percpu.h  68  #define __percpu_arg(x) __percpu_prefix "%P" #x
DECLARE_INIT_PER_CPU  macro  arch/x86/include/asm/percpu.h  78  #define DECLARE_INIT_PER_CPU(var) extern typeof(var) init_per_cpu_var(var)
init_per_cpu_var  macro  arch/x86/include/asm/percpu.h  83  #define init_per_cpu_var(var) var
__bad_percpu_size  prototype  arch/x86/include/asm/percpu.h  88  extern void __bad_percpu_size(void);
percpu_to_op  macro  arch/x86/include/asm/percpu.h  121  #define percpu_to_op(op,var,val) do { typedef typeof(var) pto_T__; if (0) { pto_T__ pto_tmp__; pto_tmp__ = (val); (void)pto_tmp__; } switch (sizeof(var)) { case 1: asm(op "b %1,"__percpu_arg(0) : "+m" (var) : "qi" ((pto_T__)(val))); break; case 2: asm(op "w %1,"__percpu_arg(0) : "+m" (var) : "ri" ((pto_T__)(val))); break; case 4: asm(op "l %1,"__percpu_arg(0) : "+m" (var) : "ri" ((pto_T__)(val))); break; case 8: asm(op "q %1,"__percpu_arg(0) : "+m" (var) : "re" ((pto_T__)(val))); break; default: __bad_percpu_size(); } } while (0)
percpu_add_op  macro  arch/x86/include/asm/percpu.h  180  #define percpu_add_op(var,val) do { typedef typeof(var) pao_T__; const int pao_ID__ = (__builtin_constant_p(val) && ((val) == 1 || (val) == -1)) ? (val) : 0; if (0) { pao_T__ pao_tmp__; pao_tmp__ = (val); (void)pao_tmp__; } switch (sizeof(var)) { case 1: if (pao_ID__ == 1) asm("incb "__percpu_arg(0) : "+m" (var)); else if (pao_ID__ == -1) asm("decb "__percpu_arg(0) : "+m" (var)); else asm("addb %1, "__percpu_arg(0) : "+m" (var) : "qi" ((pao_T__)(val))); break; case 2: if (pao_ID__ == 1) asm("incw "__percpu_arg(0) : "+m" (var)); else if (pao_ID__ == -1) asm("decw "__percpu_arg(0) : "+m" (var)); else asm("addw %1, "__percpu_arg(0) : "+m" (var) : "ri" ((pao_T__)(val))); break; case 4: if (pao_ID__ == 1) asm("incl "__percpu_arg(0) : "+m" (var)); else if (pao_ID__ == -1) asm("decl "__percpu_arg(0) : "+m" (var)); else asm("addl %1, "__percpu_arg(0) : "+m" (var) : "ri" ((pao_T__)(val))); break; case 8: if (pao_ID__ == 1) asm("incq "__percpu_arg(0) : "+m" (var)); else if (pao_ID__ == -1) asm("decq "__percpu_arg(0) : "+m" (var)); else asm("addq %1, "__percpu_arg(0) : "+m" (var) : "re" ((pao_T__)(val))); break; default: __bad_percpu_size(); } } while (0)
percpu_from_op  macro  arch/x86/include/asm/percpu.h  209  #define percpu_from_op(op,var,constraint) ({ typeof(var) pfo_ret__; switch (sizeof(var)) { case 1: asm(op "b "__percpu_arg(1)",%0" : "=q" (pfo_ret__) : constraint); break; case 2: asm(op "w "__percpu_arg(1)",%0" : "=r" (pfo_ret__) : constraint); break; case 4: asm(op "l "__percpu_arg(1)",%0" : "=r" (pfo_ret__) : constraint); break; case 8: asm(op "q "__percpu_arg(1)",%0" : "=r" (pfo_ret__) : constraint); break; default: __bad_percpu_size(); } pfo_ret__; })
percpu_unary_op  macro  arch/x86/include/asm/percpu.h  232  #define percpu_unary_op(op,var) ({ switch (sizeof(var)) { case 1: asm(op "b "__percpu_arg(0) : "+m" (var)); break; case 2: asm(op "w "__percpu_arg(0) : "+m" (var)); break; case 4: asm(op "l "__percpu_arg(0) : "+m" (var)); break; case 8: asm(op "q "__percpu_arg(0) : "+m" (var)); break; default: __bad_percpu_size(); } })
percpu_add_return_op  macro  arch/x86/include/asm/percpu.h  265  #define percpu_add_return_op(var,val) ({ typeof(var) paro_ret__ = val; switch (sizeof(var)) { case 1: asm("xaddb %0, "__percpu_arg(1) : "+q" (paro_ret__), "+m" (var) : : "memory"); break; case 2: asm("xaddw %0, "__percpu_arg(1) : "+r" (paro_ret__), "+m" (var) : : "memory"); break; case 4: asm("xaddl %0, "__percpu_arg(1) : "+r" (paro_ret__), "+m" (var) : : "memory"); break; case 8: asm("xaddq %0, "__percpu_arg(1) : "+re" (paro_ret__), "+m" (var) : : "memory"); break; default: __bad_percpu_size(); } paro_ret__ += val; paro_ret__; })
percpu_xchg_op  macro  arch/x86/include/asm/percpu.h  312  #define percpu_xchg_op(var,nval) ({ typeof(var) pxo_ret__; typeof(var) pxo_new__ = (nval); switch (sizeof(var)) { case 1: asm("\n\tmov "__percpu_arg(1)",%%al" "\n1:\tcmpxchgb %2, "__percpu_arg(1) "\n\tjnz 1b" : "=&a" (pxo_ret__), "+m" (var) : "q" (pxo_new__) : "memory"); break; case 2: asm("\n\tmov "__percpu_arg(1)",%%ax" "\n1:\tcmpxchgw %2, "__percpu_arg(1) "\n\tjnz 1b" : "=&a" (pxo_ret__), "+m" (var) : "r" (pxo_new__) : "memory"); break; case 4: asm("\n\tmov "__percpu_arg(1)",%%eax" "\n1:\tcmpxchgl %2, "__percpu_arg(1) "\n\tjnz 1b" : "=&a" (pxo_ret__), "+m" (var) : "r" (pxo_new__) : "memory"); break; case 8: asm("\n\tmov "__percpu_arg(1)",%%rax" "\n1:\tcmpxchgq %2, "__percpu_arg(1) "\n\tjnz 1b" : "=&a" (pxo_ret__), "+m" (var) : "r" (pxo_new__) : "memory"); break; default: __bad_percpu_size(); } pxo_ret__; })
percpu_cmpxchg_op  macro  arch/x86/include/asm/percpu.h  351  #define percpu_cmpxchg_op(var,oval,nval) ({ typeof(var) pco_ret__; typeof(var) pco_old__ = (oval); typeof(var) pco_new__ = (nval); switch (sizeof(var)) { case 1: asm("cmpxchgb %2, "__percpu_arg(1) : "=a" (pco_ret__), "+m" (var) : "q" (pco_new__), "0" (pco_old__) : "memory"); break; case 2: asm("cmpxchgw %2, "__percpu_arg(1) : "=a" (pco_ret__), "+m" (var) : "r" (pco_new__), "0" (pco_old__) : "memory"); break; case 4: asm("cmpxchgl %2, "__percpu_arg(1) : "=a" (pco_ret__), "+m" (var) : "r" (pco_new__), "0" (pco_old__) : "memory"); break; case 8: asm("cmpxchgq %2, "__percpu_arg(1) : "=a" (pco_ret__), "+m" (var) : "r" (pco_new__), "0" (pco_old__) : "memory"); break; default: __bad_percpu_size(); } pco_ret__; })
this_cpu_read_stable  macro  arch/x86/include/asm/percpu.h  362  #define this_cpu_read_stable(var) percpu_from_op("mov",var,"p" (&(var)))
percpu_cmpxchg8b_double  macro  arch/x86/include/asm/percpu.h  433  #define percpu_cmpxchg8b_double(pcp1,pcp2,o1,o2,n1,n2) ({ bool __ret; typeof(pcp1) __o1 = (o1), __n1 = (n1); typeof(pcp2) __o2 = (o2), __n2 = (n2); asm volatile("cmpxchg8b "__percpu_arg(1)"\n\tsetz %0\n\t" : "=a" (__ret), "+m" (pcp1), "+m" (pcp2), "+d" (__o2) :  "b" (__n1), "c" (__n2), "a" (__o1)); __ret; })
percpu_cmpxchg16b_double  macro  arch/x86/include/asm/percpu.h  482  #define percpu_cmpxchg16b_double(pcp1,pcp2,o1,o2,n1,n2) ({ bool __ret; typeof(pcp1) __o1 = (o1), __n1 = (n1); typeof(pcp2) __o2 = (o2), __n2 = (n2); alternative_io("leaq %P1,%%rsi\n\tcall this_cpu_cmpxchg16b_emu\n\t", "cmpxchg16b " __percpu_arg(1) "\n\tsetz %0\n\t", X86_FEATURE_CX16, ASM_OUTPUT2("=a" (__ret), "+m" (pcp1), "+m" (pcp2), "+d" (__o2)), "b" (__n1), "c" (__n2), "a" (__o1) : "rsi"); __ret; })
x86_test_and_clear_bit_percpu  macro  arch/x86/include/asm/percpu.h  497  #define x86_test_and_clear_bit_percpu(bit,var) ({ int old__; asm volatile("btr %2,"__percpu_arg(1)"\n\tsbbl %0,%0" : "=r" (old__), "+m" (var) : "dIr" (bit)); old__; })
x86_this_cpu_constant_test_bit  function  arch/x86/include/asm/percpu.h  500  static __always_inline int x86_this_cpu_constant_test_bit(unsigned int nr,const unsigned long __percpu *addr)
x86_this_cpu_variable_test_bit  function  arch/x86/include/asm/percpu.h  512  static inline int x86_this_cpu_variable_test_bit(int nr,const unsigned long __percpu *addr)
x86_this_cpu_test_bit  macro  arch/x86/include/asm/percpu.h  527  #define x86_this_cpu_test_bit(nr,addr) (__builtin_constant_p((nr)) ? x86_this_cpu_constant_test_bit((nr), (addr)) : x86_this_cpu_variable_test_bit((nr), (addr)))
DEFINE_EARLY_PER_CPU  macro  arch/x86/include/asm/percpu.h  579  #define DEFINE_EARLY_PER_CPU(_type,_name,_initvalue) DEFINE_PER_CPU(_type, _name) = _initvalue
DEFINE_EARLY_PER_CPU_READ_MOSTLY  macro  arch/x86/include/asm/percpu.h  582  #define DEFINE_EARLY_PER_CPU_READ_MOSTLY(_type,_name,_initvalue) DEFINE_PER_CPU_READ_MOSTLY(_type, _name) = _initvalue
EXPORT_EARLY_PER_CPU_SYMBOL  macro  arch/x86/include/asm/percpu.h  585  #define EXPORT_EARLY_PER_CPU_SYMBOL(_name) EXPORT_PER_CPU_SYMBOL(_name)
DECLARE_EARLY_PER_CPU  macro  arch/x86/include/asm/percpu.h  588  #define DECLARE_EARLY_PER_CPU(_type,_name) DECLARE_PER_CPU(_type, _name)
DECLARE_EARLY_PER_CPU_READ_MOSTLY  macro  arch/x86/include/asm/percpu.h  591  #define DECLARE_EARLY_PER_CPU_READ_MOSTLY(_type,_name) DECLARE_PER_CPU_READ_MOSTLY(_type, _name)
early_per_cpu_ptr  macro  arch/x86/include/asm/percpu.h  594  #define early_per_cpu_ptr(_name) NULL
early_per_cpu_map  macro  arch/x86/include/asm/percpu.h  571  #define early_per_cpu_map(_name,_idx) (_name##_early_map[_idx])
early_per_cpu  macro  arch/x86/include/asm/percpu.h  593  #define early_per_cpu(_name,_cpu) per_cpu(_name,_cpu)
__ASM_GENERIC_MODULE_H  macro  include/asm-generic/module.h  2  #define __ASM_GENERIC_MODULE_H
mod_arch_specific  struct  include/asm-generic/module.h  9  struct mod_arch_specific
Elf_Shdr  macro  include/asm-generic/module.h  32  #define Elf_Shdr Elf32_Shdr
Elf_Phdr  macro  include/asm-generic/module.h  33  #define Elf_Phdr Elf32_Phdr
Elf_Sym  macro  include/asm-generic/module.h  34  #define Elf_Sym Elf32_Sym
Elf_Dyn  macro  include/asm-generic/module.h  35  #define Elf_Dyn Elf32_Dyn
Elf_Ehdr  macro  include/asm-generic/module.h  36  #define Elf_Ehdr Elf32_Ehdr
Elf_Addr  macro  include/asm-generic/module.h  37  #define Elf_Addr Elf32_Addr
Elf_Rel  macro  include/asm-generic/module.h  39  #define Elf_Rel Elf32_Rel
Elf_Rela  macro  include/asm-generic/module.h  42  #define Elf_Rela Elf32_Rela
ELF_R_TYPE  macro  include/asm-generic/module.h  44  #define ELF_R_TYPE(X) ELF32_R_TYPE(X)
ELF_R_SYM  macro  include/asm-generic/module.h  45  #define ELF_R_SYM(X) ELF32_R_SYM(X)
_ASM_X86_LINKAGE_H  macro  arch/x86/include/asm/linkage.h  2  #define _ASM_X86_LINKAGE_H
__asmlinkage_protect_n  macro  arch/x86/include/asm/linkage.h  26  #define __asmlinkage_protect_n(ret,args...) __asm__ __volatile__ ("" : "=r" (ret) : "0" (ret), ##args)
__asmlinkage_protect0  macro  arch/x86/include/asm/linkage.h  28  #define __asmlinkage_protect0(ret) __asmlinkage_protect_n(ret)
__asmlinkage_protect1  macro  arch/x86/include/asm/linkage.h  30  #define __asmlinkage_protect1(ret,arg1) __asmlinkage_protect_n(ret, "g" (arg1))
__asmlinkage_protect2  macro  arch/x86/include/asm/linkage.h  32  #define __asmlinkage_protect2(ret,arg1,arg2) __asmlinkage_protect_n(ret, "g" (arg1), "g" (arg2))
__asmlinkage_protect3  macro  arch/x86/include/asm/linkage.h  34  #define __asmlinkage_protect3(ret,arg1,arg2,arg3) __asmlinkage_protect_n(ret, "g" (arg1), "g" (arg2), "g" (arg3))
__asmlinkage_protect4  macro  arch/x86/include/asm/linkage.h  37  #define __asmlinkage_protect4(ret,arg1,arg2,arg3,arg4) __asmlinkage_protect_n(ret, "g" (arg1), "g" (arg2), "g" (arg3), "g" (arg4))
__asmlinkage_protect5  macro  arch/x86/include/asm/linkage.h  40  #define __asmlinkage_protect5(ret,arg1,arg2,arg3,arg4,arg5) __asmlinkage_protect_n(ret, "g" (arg1), "g" (arg2), "g" (arg3), "g" (arg4), "g" (arg5))
__asmlinkage_protect6  macro  arch/x86/include/asm/linkage.h  43  #define __asmlinkage_protect6(ret,arg1,arg2,arg3,arg4,arg5,arg6) __asmlinkage_protect_n(ret, "g" (arg1), "g" (arg2), "g" (arg3), "g" (arg4), "g" (arg5), "g" (arg6))
GLOBAL  macro  arch/x86/include/asm/linkage.h  51  #define GLOBAL(name) .globl name; name:
_UAPI_LINUX_TYPES_H  macro  include/uapi/linux/types.h  2  #define _UAPI_LINUX_TYPES_H
__bitwise__  macro  include/uapi/linux/types.h  24  #define __bitwise__
__bitwise  macro  include/uapi/linux/types.h  29  #define __bitwise
__aligned_u64  macro  include/uapi/linux/types.h  51  #define __aligned_u64 __u64 __attribute__((aligned(8)))
__aligned_be64  macro  include/uapi/linux/types.h  52  #define __aligned_be64 __be64 __attribute__((aligned(8)))
__aligned_le64  macro  include/uapi/linux/types.h  53  #define __aligned_le64 __le64 __attribute__((aligned(8)))
__KERN_LEVELS_H__  macro  include/linux/kern_levels.h  2  #define __KERN_LEVELS_H__
KERN_SOH  macro  include/linux/kern_levels.h  4  #define KERN_SOH "\001"
KERN_SOH_ASCII  macro  include/linux/kern_levels.h  5  #define KERN_SOH_ASCII '\001'
KERN_EMERG  macro  include/linux/kern_levels.h  7  #define KERN_EMERG KERN_SOH "0"
KERN_ALERT  macro  include/linux/kern_levels.h  8  #define KERN_ALERT KERN_SOH "1"
KERN_CRIT  macro  include/linux/kern_levels.h  9  #define KERN_CRIT KERN_SOH "2"
KERN_ERR  macro  include/linux/kern_levels.h  10  #define KERN_ERR KERN_SOH "3"
KERN_WARNING  macro  include/linux/kern_levels.h  11  #define KERN_WARNING KERN_SOH "4"
KERN_NOTICE  macro  include/linux/kern_levels.h  12  #define KERN_NOTICE KERN_SOH "5"
KERN_INFO  macro  include/linux/kern_levels.h  13  #define KERN_INFO KERN_SOH "6"
KERN_DEBUG  macro  include/linux/kern_levels.h  14  #define KERN_DEBUG KERN_SOH "7"
KERN_DEFAULT  macro  include/linux/kern_levels.h  16  #define KERN_DEFAULT KERN_SOH "d"
KERN_CONT  macro  include/linux/kern_levels.h  23  #define KERN_CONT ""
_LINUX_SYSINFO_H  macro  include/uapi/linux/sysinfo.h  2  #define _LINUX_SYSINFO_H
SI_LOAD_SHIFT  macro  include/uapi/linux/sysinfo.h  6  #define SI_LOAD_SHIFT 16
sysinfo  struct  include/uapi/linux/sysinfo.h  7  struct sysinfo {
_ASM_GENERIC_DIV64_H  macro  include/asm-generic/div64.h  2  #define _ASM_GENERIC_DIV64_H
__div64_32  prototype  include/asm-generic/div64.h  35  extern uint32_t __div64_32(uint64_t *dividend,uint32_t divisor);
_UAPI_LINUX_CAPABILITY_H  macro  include/uapi/linux/capability.h  14  #define _UAPI_LINUX_CAPABILITY_H
_LINUX_CAPABILITY_VERSION_1  macro  include/uapi/linux/capability.h  31  #define _LINUX_CAPABILITY_VERSION_1 0x19980330
_LINUX_CAPABILITY_U32S_1  macro  include/uapi/linux/capability.h  32  #define _LINUX_CAPABILITY_U32S_1 1
_LINUX_CAPABILITY_VERSION_2  macro  include/uapi/linux/capability.h  34  #define _LINUX_CAPABILITY_VERSION_2 0x20071026
_LINUX_CAPABILITY_U32S_2  macro  include/uapi/linux/capability.h  35  #define _LINUX_CAPABILITY_U32S_2 2
_LINUX_CAPABILITY_VERSION_3  macro  include/uapi/linux/capability.h  37  #define _LINUX_CAPABILITY_VERSION_3 0x20080522
_LINUX_CAPABILITY_U32S_3  macro  include/uapi/linux/capability.h  38  #define _LINUX_CAPABILITY_U32S_3 2
__user_cap_header_struct  struct  include/uapi/linux/capability.h  40  typedef struct __user_cap_header_struct {
__user_cap_data_struct  struct  include/uapi/linux/capability.h  45  typedef struct __user_cap_data_struct {
VFS_CAP_REVISION_MASK  macro  include/uapi/linux/capability.h  52  #define VFS_CAP_REVISION_MASK 0xFF000000
VFS_CAP_REVISION_SHIFT  macro  include/uapi/linux/capability.h  53  #define VFS_CAP_REVISION_SHIFT 24
VFS_CAP_FLAGS_MASK  macro  include/uapi/linux/capability.h  54  #define VFS_CAP_FLAGS_MASK ~VFS_CAP_REVISION_MASK
VFS_CAP_FLAGS_EFFECTIVE  macro  include/uapi/linux/capability.h  55  #define VFS_CAP_FLAGS_EFFECTIVE 0x000001
VFS_CAP_REVISION_1  macro  include/uapi/linux/capability.h  57  #define VFS_CAP_REVISION_1 0x01000000
VFS_CAP_U32_1  macro  include/uapi/linux/capability.h  58  #define VFS_CAP_U32_1 1
XATTR_CAPS_SZ_1  macro  include/uapi/linux/capability.h  59  #define XATTR_CAPS_SZ_1 (sizeof(__le32)*(1 + 2*VFS_CAP_U32_1))
VFS_CAP_REVISION_2  macro  include/uapi/linux/capability.h  61  #define VFS_CAP_REVISION_2 0x02000000
VFS_CAP_U32_2  macro  include/uapi/linux/capability.h  62  #define VFS_CAP_U32_2 2
XATTR_CAPS_SZ_2  macro  include/uapi/linux/capability.h  63  #define XATTR_CAPS_SZ_2 (sizeof(__le32)*(1 + 2*VFS_CAP_U32_2))
XATTR_CAPS_SZ  macro  include/uapi/linux/capability.h  65  #define XATTR_CAPS_SZ XATTR_CAPS_SZ_2
VFS_CAP_U32  macro  include/uapi/linux/capability.h  66  #define VFS_CAP_U32 VFS_CAP_U32_2
VFS_CAP_REVISION  macro  include/uapi/linux/capability.h  67  #define VFS_CAP_REVISION VFS_CAP_REVISION_2
vfs_cap_data  struct  include/uapi/linux/capability.h  69  struct vfs_cap_data {
_LINUX_CAPABILITY_VERSION  macro  include/uapi/linux/capability.h  84  #define _LINUX_CAPABILITY_VERSION _LINUX_CAPABILITY_VERSION_1
_LINUX_CAPABILITY_U32S  macro  include/uapi/linux/capability.h  85  #define _LINUX_CAPABILITY_U32S _LINUX_CAPABILITY_U32S_1
CAP_CHOWN  macro  include/uapi/linux/capability.h  98  #define CAP_CHOWN 0
CAP_DAC_OVERRIDE  macro  include/uapi/linux/capability.h  104  #define CAP_DAC_OVERRIDE 1
CAP_DAC_READ_SEARCH  macro  include/uapi/linux/capability.h  110  #define CAP_DAC_READ_SEARCH 2
CAP_FOWNER  macro  include/uapi/linux/capability.h  116  #define CAP_FOWNER 3
CAP_FSETID  macro  include/uapi/linux/capability.h  125  #define CAP_FSETID 4
CAP_KILL  macro  include/uapi/linux/capability.h  131  #define CAP_KILL 5
CAP_SETGID  macro  include/uapi/linux/capability.h  137  #define CAP_SETGID 6
CAP_SETUID  macro  include/uapi/linux/capability.h  142  #define CAP_SETUID 7
CAP_SETPCAP  macro  include/uapi/linux/capability.h  159  #define CAP_SETPCAP 8
CAP_LINUX_IMMUTABLE  macro  include/uapi/linux/capability.h  163  #define CAP_LINUX_IMMUTABLE 9
CAP_NET_BIND_SERVICE  macro  include/uapi/linux/capability.h  168  #define CAP_NET_BIND_SERVICE 10
CAP_NET_BROADCAST  macro  include/uapi/linux/capability.h  172  #define CAP_NET_BROADCAST 11
CAP_NET_ADMIN  macro  include/uapi/linux/capability.h  188  #define CAP_NET_ADMIN 12
CAP_NET_RAW  macro  include/uapi/linux/capability.h  194  #define CAP_NET_RAW 13
CAP_IPC_LOCK  macro  include/uapi/linux/capability.h  200  #define CAP_IPC_LOCK 14
CAP_IPC_OWNER  macro  include/uapi/linux/capability.h  204  #define CAP_IPC_OWNER 15
CAP_SYS_MODULE  macro  include/uapi/linux/capability.h  207  #define CAP_SYS_MODULE 16
CAP_SYS_RAWIO  macro  include/uapi/linux/capability.h  212  #define CAP_SYS_RAWIO 17
CAP_SYS_CHROOT  macro  include/uapi/linux/capability.h  216  #define CAP_SYS_CHROOT 18
CAP_SYS_PTRACE  macro  include/uapi/linux/capability.h  220  #define CAP_SYS_PTRACE 19
CAP_SYS_PACCT  macro  include/uapi/linux/capability.h  224  #define CAP_SYS_PACCT 20
CAP_SYS_ADMIN  macro  include/uapi/linux/capability.h  263  #define CAP_SYS_ADMIN 21
CAP_SYS_BOOT  macro  include/uapi/linux/capability.h  267  #define CAP_SYS_BOOT 22
CAP_SYS_NICE  macro  include/uapi/linux/capability.h  276  #define CAP_SYS_NICE 23
CAP_SYS_RESOURCE  macro  include/uapi/linux/capability.h  290  #define CAP_SYS_RESOURCE 24
CAP_SYS_TIME  macro  include/uapi/linux/capability.h  296  #define CAP_SYS_TIME 25
CAP_SYS_TTY_CONFIG  macro  include/uapi/linux/capability.h  301  #define CAP_SYS_TTY_CONFIG 26
CAP_MKNOD  macro  include/uapi/linux/capability.h  305  #define CAP_MKNOD 27
CAP_LEASE  macro  include/uapi/linux/capability.h  309  #define CAP_LEASE 28
CAP_AUDIT_WRITE  macro  include/uapi/linux/capability.h  311  #define CAP_AUDIT_WRITE 29
CAP_AUDIT_CONTROL  macro  include/uapi/linux/capability.h  313  #define CAP_AUDIT_CONTROL 30
CAP_SETFCAP  macro  include/uapi/linux/capability.h  315  #define CAP_SETFCAP 31
CAP_MAC_OVERRIDE  macro  include/uapi/linux/capability.h  323  #define CAP_MAC_OVERRIDE 32
CAP_MAC_ADMIN  macro  include/uapi/linux/capability.h  332  #define CAP_MAC_ADMIN 33
CAP_SYSLOG  macro  include/uapi/linux/capability.h  336  #define CAP_SYSLOG 34
CAP_WAKE_ALARM  macro  include/uapi/linux/capability.h  340  #define CAP_WAKE_ALARM 35
CAP_BLOCK_SUSPEND  macro  include/uapi/linux/capability.h  344  #define CAP_BLOCK_SUSPEND 36
CAP_LAST_CAP  macro  include/uapi/linux/capability.h  346  #define CAP_LAST_CAP CAP_BLOCK_SUSPEND
cap_valid  macro  include/uapi/linux/capability.h  348  #define cap_valid(x) ((x) >= 0 && (x) <= CAP_LAST_CAP)
CAP_TO_INDEX  macro  include/uapi/linux/capability.h  354  #define CAP_TO_INDEX(x) ((x) >> 5)
CAP_TO_MASK  macro  include/uapi/linux/capability.h  355  #define CAP_TO_MASK(x) (1 << ((x) & 31))
_UAPI_LINUX_TIMEX_H  macro  include/uapi/linux/timex.h  54  #define _UAPI_LINUX_TIMEX_H
NTP_API  macro  include/uapi/linux/timex.h  58  #define NTP_API 4
timex  struct  include/uapi/linux/timex.h  64  struct timex {
ADJ_OFFSET  macro  include/uapi/linux/timex.h  98  #define ADJ_OFFSET 0x0001
ADJ_FREQUENCY  macro  include/uapi/linux/timex.h  99  #define ADJ_FREQUENCY 0x0002
ADJ_MAXERROR  macro  include/uapi/linux/timex.h  100  #define ADJ_MAXERROR 0x0004
ADJ_ESTERROR  macro  include/uapi/linux/timex.h  101  #define ADJ_ESTERROR 0x0008
ADJ_STATUS  macro  include/uapi/linux/timex.h  102  #define ADJ_STATUS 0x0010
ADJ_TIMECONST  macro  include/uapi/linux/timex.h  103  #define ADJ_TIMECONST 0x0020
ADJ_TAI  macro  include/uapi/linux/timex.h  104  #define ADJ_TAI 0x0080
ADJ_SETOFFSET  macro  include/uapi/linux/timex.h  105  #define ADJ_SETOFFSET 0x0100
ADJ_MICRO  macro  include/uapi/linux/timex.h  106  #define ADJ_MICRO 0x1000
ADJ_NANO  macro  include/uapi/linux/timex.h  107  #define ADJ_NANO 0x2000
ADJ_TICK  macro  include/uapi/linux/timex.h  108  #define ADJ_TICK 0x4000
ADJ_OFFSET_SS_READ  macro  include/uapi/linux/timex.h  112  #define ADJ_OFFSET_SS_READ 0xa001
MOD_OFFSET  macro  include/uapi/linux/timex.h  116  #define MOD_OFFSET ADJ_OFFSET
MOD_FREQUENCY  macro  include/uapi/linux/timex.h  117  #define MOD_FREQUENCY ADJ_FREQUENCY
MOD_MAXERROR  macro  include/uapi/linux/timex.h  118  #define MOD_MAXERROR ADJ_MAXERROR
MOD_ESTERROR  macro  include/uapi/linux/timex.h  119  #define MOD_ESTERROR ADJ_ESTERROR
MOD_STATUS  macro  include/uapi/linux/timex.h  120  #define MOD_STATUS ADJ_STATUS
MOD_TIMECONST  macro  include/uapi/linux/timex.h  121  #define MOD_TIMECONST ADJ_TIMECONST
MOD_TAI  macro  include/uapi/linux/timex.h  122  #define MOD_TAI ADJ_TAI
MOD_MICRO  macro  include/uapi/linux/timex.h  123  #define MOD_MICRO ADJ_MICRO
MOD_NANO  macro  include/uapi/linux/timex.h  124  #define MOD_NANO ADJ_NANO
STA_PLL  macro  include/uapi/linux/timex.h  130  #define STA_PLL 0x0001
STA_PPSFREQ  macro  include/uapi/linux/timex.h  131  #define STA_PPSFREQ 0x0002
STA_PPSTIME  macro  include/uapi/linux/timex.h  132  #define STA_PPSTIME 0x0004
STA_FLL  macro  include/uapi/linux/timex.h  133  #define STA_FLL 0x0008
STA_INS  macro  include/uapi/linux/timex.h  135  #define STA_INS 0x0010
STA_DEL  macro  include/uapi/linux/timex.h  136  #define STA_DEL 0x0020
STA_UNSYNC  macro  include/uapi/linux/timex.h  137  #define STA_UNSYNC 0x0040
STA_FREQHOLD  macro  include/uapi/linux/timex.h  138  #define STA_FREQHOLD 0x0080
STA_PPSSIGNAL  macro  include/uapi/linux/timex.h  140  #define STA_PPSSIGNAL 0x0100
STA_PPSJITTER  macro  include/uapi/linux/timex.h  141  #define STA_PPSJITTER 0x0200
STA_PPSWANDER  macro  include/uapi/linux/timex.h  142  #define STA_PPSWANDER 0x0400
STA_PPSERROR  macro  include/uapi/linux/timex.h  143  #define STA_PPSERROR 0x0800
STA_CLOCKERR  macro  include/uapi/linux/timex.h  145  #define STA_CLOCKERR 0x1000
STA_NANO  macro  include/uapi/linux/timex.h  146  #define STA_NANO 0x2000
STA_MODE  macro  include/uapi/linux/timex.h  147  #define STA_MODE 0x4000
STA_CLK  macro  include/uapi/linux/timex.h  148  #define STA_CLK 0x8000
STA_RONLY  macro  include/uapi/linux/timex.h  152  #define STA_RONLY (STA_PPSSIGNAL | STA_PPSJITTER | STA_PPSWANDER | STA_PPSERROR | STA_CLOCKERR | STA_NANO | STA_MODE | STA_CLK)
TIME_OK  macro  include/uapi/linux/timex.h  157  #define TIME_OK 0
TIME_INS  macro  include/uapi/linux/timex.h  158  #define TIME_INS 1
TIME_DEL  macro  include/uapi/linux/timex.h  159  #define TIME_DEL 2
TIME_OOP  macro  include/uapi/linux/timex.h  160  #define TIME_OOP 3
TIME_WAIT  macro  include/uapi/linux/timex.h  161  #define TIME_WAIT 4
TIME_ERROR  macro  include/uapi/linux/timex.h  162  #define TIME_ERROR 5
TIME_BAD  macro  include/uapi/linux/timex.h  163  #define TIME_BAD TIME_ERROR
_ASM_X86_TIMEX_H  macro  arch/x86/include/asm/timex.h  2  #define _ASM_X86_TIMEX_H
CLOCK_TICK_RATE  macro  arch/x86/include/asm/timex.h  8  #define CLOCK_TICK_RATE PIT_TICK_RATE
ARCH_HAS_READ_CURRENT_TIMER  macro  arch/x86/include/asm/timex.h  10  #define ARCH_HAS_READ_CURRENT_TIMER
_LINUX_MATH64_H  macro  include/linux/math64.h  2  #define _LINUX_MATH64_H
div64_long  macro  include/linux/math64.h  50  #define div64_long(x,y) div_s64((x),(y))
div_s64_rem  prototype  include/linux/math64.h  61  extern s64 div_s64_rem(s64 dividend,s32 divisor,s32 *remainder);
div64_u64  prototype  include/linux/math64.h  65  extern u64 div64_u64(u64 dividend,u64 divisor);
div64_s64  prototype  include/linux/math64.h  69  extern s64 div64_s64(s64 dividend,s64 divisor);
div_u64  function  include/linux/math64.h  82  static inline u64 div_u64(u64 dividend,u32 divisor)
div_s64  function  include/linux/math64.h  93  static inline s64 div_s64(s64 dividend,s32 divisor)
iter_div_u64_rem  prototype  include/linux/math64.h  100  u32 iter_div_u64_rem(u64 dividend,u32 divisor,u64 *remainder);
__iter_div_u64_rem  function  include/linux/math64.h  103  __iter_div_u64_rem(u64 dividend,u32 divisor,u64 *remainder)
_ASM_X86_THREAD_INFO_H  macro  arch/x86/include/asm/thread_info.h  8  #define _ASM_X86_THREAD_INFO_H
thread_info  struct  arch/x86/include/asm/thread_info.h  26  struct thread_info {
INIT_THREAD_INFO  macro  arch/x86/include/asm/thread_info.h  58  #define INIT_THREAD_INFO(tsk) { .task		= &tsk, .exec_domain	= &default_exec_domain, .flags		= 0, .cpu		= 0, .preempt_count	= INIT_PREEMPT_COUNT, .addr_limit	= KERNEL_DS, .restart_block = { .fn = do_no_restart_syscall, }, }
init_thread_info  macro  arch/x86/include/asm/thread_info.h  60  #define init_thread_info (init_thread_union.thread_info)
init_stack  macro  arch/x86/include/asm/thread_info.h  61  #define init_stack (init_thread_union.stack)
TIF_SYSCALL_TRACE  macro  arch/x86/include/asm/thread_info.h  77  #define TIF_SYSCALL_TRACE 0
TIF_NOTIFY_RESUME  macro  arch/x86/include/asm/thread_info.h  78  #define TIF_NOTIFY_RESUME 1
TIF_SIGPENDING  macro  arch/x86/include/asm/thread_info.h  79  #define TIF_SIGPENDING 2
TIF_NEED_RESCHED  macro  arch/x86/include/asm/thread_info.h  80  #define TIF_NEED_RESCHED 3
TIF_SINGLESTEP  macro  arch/x86/include/asm/thread_info.h  81  #define TIF_SINGLESTEP 4
TIF_SYSCALL_EMU  macro  arch/x86/include/asm/thread_info.h  82  #define TIF_SYSCALL_EMU 6
TIF_SYSCALL_AUDIT  macro  arch/x86/include/asm/thread_info.h  83  #define TIF_SYSCALL_AUDIT 7
TIF_SECCOMP  macro  arch/x86/include/asm/thread_info.h  84  #define TIF_SECCOMP 8
TIF_MCE_NOTIFY  macro  arch/x86/include/asm/thread_info.h  85  #define TIF_MCE_NOTIFY 10
TIF_USER_RETURN_NOTIFY  macro  arch/x86/include/asm/thread_info.h  86  #define TIF_USER_RETURN_NOTIFY 11
TIF_UPROBE  macro  arch/x86/include/asm/thread_info.h  87  #define TIF_UPROBE 12
TIF_NOTSC  macro  arch/x86/include/asm/thread_info.h  88  #define TIF_NOTSC 16
TIF_IA32  macro  arch/x86/include/asm/thread_info.h  89  #define TIF_IA32 17
TIF_FORK  macro  arch/x86/include/asm/thread_info.h  90  #define TIF_FORK 18
TIF_NOHZ  macro  arch/x86/include/asm/thread_info.h  91  #define TIF_NOHZ 19
TIF_MEMDIE  macro  arch/x86/include/asm/thread_info.h  92  #define TIF_MEMDIE 20
TIF_DEBUG  macro  arch/x86/include/asm/thread_info.h  93  #define TIF_DEBUG 21
TIF_IO_BITMAP  macro  arch/x86/include/asm/thread_info.h  94  #define TIF_IO_BITMAP 22
TIF_FORCED_TF  macro  arch/x86/include/asm/thread_info.h  95  #define TIF_FORCED_TF 24
TIF_BLOCKSTEP  macro  arch/x86/include/asm/thread_info.h  96  #define TIF_BLOCKSTEP 25
TIF_LAZY_MMU_UPDATES  macro  arch/x86/include/asm/thread_info.h  97  #define TIF_LAZY_MMU_UPDATES 27
TIF_SYSCALL_TRACEPOINT  macro  arch/x86/include/asm/thread_info.h  98  #define TIF_SYSCALL_TRACEPOINT 28
TIF_ADDR32  macro  arch/x86/include/asm/thread_info.h  99  #define TIF_ADDR32 29
TIF_X32  macro  arch/x86/include/asm/thread_info.h  100  #define TIF_X32 30
_TIF_SYSCALL_TRACE  macro  arch/x86/include/asm/thread_info.h  102  #define _TIF_SYSCALL_TRACE (1 << TIF_SYSCALL_TRACE)
_TIF_NOTIFY_RESUME  macro  arch/x86/include/asm/thread_info.h  103  #define _TIF_NOTIFY_RESUME (1 << TIF_NOTIFY_RESUME)
_TIF_SIGPENDING  macro  arch/x86/include/asm/thread_info.h  104  #define _TIF_SIGPENDING (1 << TIF_SIGPENDING)
_TIF_SINGLESTEP  macro  arch/x86/include/asm/thread_info.h  105  #define _TIF_SINGLESTEP (1 << TIF_SINGLESTEP)
_TIF_NEED_RESCHED  macro  arch/x86/include/asm/thread_info.h  106  #define _TIF_NEED_RESCHED (1 << TIF_NEED_RESCHED)
_TIF_SYSCALL_EMU  macro  arch/x86/include/asm/thread_info.h  107  #define _TIF_SYSCALL_EMU (1 << TIF_SYSCALL_EMU)
_TIF_SYSCALL_AUDIT  macro  arch/x86/include/asm/thread_info.h  108  #define _TIF_SYSCALL_AUDIT (1 << TIF_SYSCALL_AUDIT)
_TIF_SECCOMP  macro  arch/x86/include/asm/thread_info.h  109  #define _TIF_SECCOMP (1 << TIF_SECCOMP)
_TIF_MCE_NOTIFY  macro  arch/x86/include/asm/thread_info.h  110  #define _TIF_MCE_NOTIFY (1 << TIF_MCE_NOTIFY)
_TIF_USER_RETURN_NOTIFY  macro  arch/x86/include/asm/thread_info.h  111  #define _TIF_USER_RETURN_NOTIFY (1 << TIF_USER_RETURN_NOTIFY)
_TIF_UPROBE  macro  arch/x86/include/asm/thread_info.h  112  #define _TIF_UPROBE (1 << TIF_UPROBE)
_TIF_NOTSC  macro  arch/x86/include/asm/thread_info.h  113  #define _TIF_NOTSC (1 << TIF_NOTSC)
_TIF_IA32  macro  arch/x86/include/asm/thread_info.h  114  #define _TIF_IA32 (1 << TIF_IA32)
_TIF_FORK  macro  arch/x86/include/asm/thread_info.h  115  #define _TIF_FORK (1 << TIF_FORK)
_TIF_NOHZ  macro  arch/x86/include/asm/thread_info.h  116  #define _TIF_NOHZ (1 << TIF_NOHZ)
_TIF_DEBUG  macro  arch/x86/include/asm/thread_info.h  117  #define _TIF_DEBUG (1 << TIF_DEBUG)
_TIF_IO_BITMAP  macro  arch/x86/include/asm/thread_info.h  118  #define _TIF_IO_BITMAP (1 << TIF_IO_BITMAP)
_TIF_FORCED_TF  macro  arch/x86/include/asm/thread_info.h  119  #define _TIF_FORCED_TF (1 << TIF_FORCED_TF)
_TIF_BLOCKSTEP  macro  arch/x86/include/asm/thread_info.h  120  #define _TIF_BLOCKSTEP (1 << TIF_BLOCKSTEP)
_TIF_LAZY_MMU_UPDATES  macro  arch/x86/include/asm/thread_info.h  121  #define _TIF_LAZY_MMU_UPDATES (1 << TIF_LAZY_MMU_UPDATES)
_TIF_SYSCALL_TRACEPOINT  macro  arch/x86/include/asm/thread_info.h  122  #define _TIF_SYSCALL_TRACEPOINT (1 << TIF_SYSCALL_TRACEPOINT)
_TIF_ADDR32  macro  arch/x86/include/asm/thread_info.h  123  #define _TIF_ADDR32 (1 << TIF_ADDR32)
_TIF_X32  macro  arch/x86/include/asm/thread_info.h  124  #define _TIF_X32 (1 << TIF_X32)
_TIF_WORK_SYSCALL_ENTRY  macro  arch/x86/include/asm/thread_info.h  130  #define _TIF_WORK_SYSCALL_ENTRY (_TIF_SYSCALL_TRACE | _TIF_SYSCALL_EMU | _TIF_SYSCALL_AUDIT | _TIF_SECCOMP | _TIF_SINGLESTEP | _TIF_SYSCALL_TRACEPOINT | _TIF_NOHZ)
_TIF_WORK_SYSCALL_EXIT  macro  arch/x86/include/asm/thread_info.h  135  #define _TIF_WORK_SYSCALL_EXIT (_TIF_SYSCALL_TRACE | _TIF_SYSCALL_AUDIT | _TIF_SINGLESTEP | _TIF_SYSCALL_TRACEPOINT | _TIF_NOHZ)
_TIF_WORK_MASK  macro  arch/x86/include/asm/thread_info.h  141  #define _TIF_WORK_MASK (0x0000FFFF & ~(_TIF_SYSCALL_TRACE|_TIF_SYSCALL_AUDIT| _TIF_SINGLESTEP|_TIF_SECCOMP|_TIF_SYSCALL_EMU))
_TIF_ALLWORK_MASK  macro  arch/x86/include/asm/thread_info.h  146  #define _TIF_ALLWORK_MASK ((0x0000FFFF & ~_TIF_SECCOMP) | _TIF_SYSCALL_TRACEPOINT | _TIF_NOHZ)
_TIF_DO_NOTIFY_MASK  macro  arch/x86/include/asm/thread_info.h  151  #define _TIF_DO_NOTIFY_MASK (_TIF_SIGPENDING | _TIF_MCE_NOTIFY | _TIF_NOTIFY_RESUME | _TIF_USER_RETURN_NOTIFY)
_TIF_WORK_CTXSW  macro  arch/x86/include/asm/thread_info.h  155  #define _TIF_WORK_CTXSW (_TIF_IO_BITMAP|_TIF_NOTSC|_TIF_BLOCKSTEP)
_TIF_WORK_CTXSW_PREV  macro  arch/x86/include/asm/thread_info.h  157  #define _TIF_WORK_CTXSW_PREV (_TIF_WORK_CTXSW|_TIF_USER_RETURN_NOTIFY)
_TIF_WORK_CTXSW_NEXT  macro  arch/x86/include/asm/thread_info.h  158  #define _TIF_WORK_CTXSW_NEXT (_TIF_WORK_CTXSW|_TIF_DEBUG)
STACK_WARN  macro  arch/x86/include/asm/thread_info.h  164  #define STACK_WARN (THREAD_SIZE/8)
current_thread_info  function  arch/x86/include/asm/thread_info.h  208  static inline struct thread_info *current_thread_info(void)
GET_THREAD_INFO  macro  arch/x86/include/asm/thread_info.h  221  #define GET_THREAD_INFO(reg) movq PER_CPU_VAR(kernel_stack),reg ; subq $(THREAD_SIZE-KERNEL_STACK_OFFSET),reg
GET_THREAD_INFO_WITH_ESP  macro  arch/x86/include/asm/thread_info.h  192  #define GET_THREAD_INFO_WITH_ESP(reg) andl $-THREAD_SIZE, reg
KERNEL_STACK_OFFSET  macro  arch/x86/include/asm/thread_info.h  199  #define KERNEL_STACK_OFFSET (5*8)
THREAD_INFO  macro  arch/x86/include/asm/thread_info.h  227  #define THREAD_INFO(reg,off) KERNEL_STACK_OFFSET+(off)-THREAD_SIZE(reg)
TS_COMPAT  macro  arch/x86/include/asm/thread_info.h  240  #define TS_COMPAT 0x0002
TS_POLLING  macro  arch/x86/include/asm/thread_info.h  241  #define TS_POLLING 0x0004
TS_RESTORE_SIGMASK  macro  arch/x86/include/asm/thread_info.h  243  #define TS_RESTORE_SIGMASK 0x0008
tsk_is_polling  macro  arch/x86/include/asm/thread_info.h  245  #define tsk_is_polling(t) (task_thread_info(t)->status & TS_POLLING)
is_ia32_task  function  arch/x86/include/asm/thread_info.h  272  static inline bool is_ia32_task(void)
arch_task_cache_init  prototype  arch/x86/include/asm/thread_info.h  286  extern void arch_task_cache_init(void);
arch_dup_task_struct  prototype  arch/x86/include/asm/thread_info.h  287  extern int arch_dup_task_struct(struct task_struct *dst,struct task_struct *src);
arch_release_task_struct  prototype  arch/x86/include/asm/thread_info.h  288  extern void arch_release_task_struct(struct task_struct *tsk);
__LINUX_BITMAP_H  macro  include/linux/bitmap.h  2  #define __LINUX_BITMAP_H
__bitmap_empty  prototype  include/linux/bitmap.h  91  extern int __bitmap_empty(const unsigned long *bitmap,int bits);
__bitmap_full  prototype  include/linux/bitmap.h  92  extern int __bitmap_full(const unsigned long *bitmap,int bits);
__bitmap_equal  prototype  include/linux/bitmap.h  94  extern int __bitmap_equal(const unsigned long *bitmap1,const unsigned long *bitmap2, int bits);
__bitmap_complement  prototype  include/linux/bitmap.h  96  extern void __bitmap_complement(unsigned long *dst,const unsigned long *src,int bits);
__bitmap_shift_right  prototype  include/linux/bitmap.h  98  extern void __bitmap_shift_right(unsigned long *dst,const unsigned long *src, int shift, int bits);
__bitmap_shift_left  prototype  include/linux/bitmap.h  100  extern void __bitmap_shift_left(unsigned long *dst,const unsigned long *src, int shift, int bits);
__bitmap_and  prototype  include/linux/bitmap.h  102  extern int __bitmap_and(unsigned long *dst,const unsigned long *bitmap1,const unsigned long *bitmap2, int bits);
__bitmap_or  prototype  include/linux/bitmap.h  104  extern void __bitmap_or(unsigned long *dst,const unsigned long *bitmap1,const unsigned long *bitmap2, int bits);
__bitmap_xor  prototype  include/linux/bitmap.h  106  extern void __bitmap_xor(unsigned long *dst,const unsigned long *bitmap1,const unsigned long *bitmap2, int bits);
__bitmap_andnot  prototype  include/linux/bitmap.h  108  extern int __bitmap_andnot(unsigned long *dst,const unsigned long *bitmap1,const unsigned long *bitmap2, int bits);
__bitmap_intersects  prototype  include/linux/bitmap.h  110  extern int __bitmap_intersects(const unsigned long *bitmap1,const unsigned long *bitmap2, int bits);
__bitmap_subset  prototype  include/linux/bitmap.h  112  extern int __bitmap_subset(const unsigned long *bitmap1,const unsigned long *bitmap2, int bits);
__bitmap_weight  prototype  include/linux/bitmap.h  113  extern int __bitmap_weight(const unsigned long *bitmap,int bits);
bitmap_set  prototype  include/linux/bitmap.h  115  extern void bitmap_set(unsigned long *map,int i,int len);
bitmap_clear  prototype  include/linux/bitmap.h  116  extern void bitmap_clear(unsigned long *map,int start,int nr);
bitmap_find_next_zero_area  prototype  include/linux/bitmap.h  121  extern unsigned long bitmap_find_next_zero_area(unsigned long *map,unsigned long size,unsigned long start,unsigned int nr,unsigned long align_mask);
bitmap_scnprintf  prototype  include/linux/bitmap.h  124  extern int bitmap_scnprintf(char *buf,unsigned int len,const unsigned long *src, int nbits);
__bitmap_parse  prototype  include/linux/bitmap.h  126  extern int __bitmap_parse(const char *buf,unsigned int buflen,int is_user,unsigned long *dst, int nbits);
bitmap_parse_user  prototype  include/linux/bitmap.h  128  extern int bitmap_parse_user(const char __user *ubuf,unsigned int ulen,unsigned long *dst, int nbits);
bitmap_scnlistprintf  prototype  include/linux/bitmap.h  130  extern int bitmap_scnlistprintf(char *buf,unsigned int len,const unsigned long *src, int nbits);
bitmap_parselist  prototype  include/linux/bitmap.h  132  extern int bitmap_parselist(const char *buf,unsigned long *maskp,int nmaskbits);
bitmap_parselist_user  prototype  include/linux/bitmap.h  134  extern int bitmap_parselist_user(const char __user *ubuf,unsigned int ulen,unsigned long *dst, int nbits);
bitmap_remap  prototype  include/linux/bitmap.h  136  extern void bitmap_remap(unsigned long *dst,const unsigned long *src,const unsigned long *old, const unsigned long *new, int bits);
bitmap_bitremap  prototype  include/linux/bitmap.h  138  extern int bitmap_bitremap(int oldbit,const unsigned long *old, const unsigned long *new, int bits);
bitmap_onto  prototype  include/linux/bitmap.h  140  extern void bitmap_onto(unsigned long *dst,const unsigned long *orig,const unsigned long *relmap, int bits);
bitmap_fold  prototype  include/linux/bitmap.h  142  extern void bitmap_fold(unsigned long *dst,const unsigned long *orig,int sz, int bits);
bitmap_find_free_region  prototype  include/linux/bitmap.h  143  extern int bitmap_find_free_region(unsigned long *bitmap,int bits,int order);
bitmap_release_region  prototype  include/linux/bitmap.h  144  extern void bitmap_release_region(unsigned long *bitmap,int pos,int order);
bitmap_allocate_region  prototype  include/linux/bitmap.h  145  extern int bitmap_allocate_region(unsigned long *bitmap,int pos,int order);
bitmap_copy_le  prototype  include/linux/bitmap.h  146  extern void bitmap_copy_le(void *dst,const unsigned long *src,int nbits);
bitmap_ord_to_pos  prototype  include/linux/bitmap.h  147  extern int bitmap_ord_to_pos(const unsigned long *bitmap,int n,int bits);
BITMAP_FIRST_WORD_MASK  macro  include/linux/bitmap.h  149  #define BITMAP_FIRST_WORD_MASK(start) (~0UL << ((start) % BITS_PER_LONG))
BITMAP_LAST_WORD_MASK  macro  include/linux/bitmap.h  154  #define BITMAP_LAST_WORD_MASK(nbits) ( ((nbits) % BITS_PER_LONG) ? (1UL<<((nbits) % BITS_PER_LONG))-1 : ~0UL )
small_const_nbits  macro  include/linux/bitmap.h  157  #define small_const_nbits(nbits) (__builtin_constant_p(nbits) && (nbits) <= BITS_PER_LONG)
bitmap_zero  function  include/linux/bitmap.h  159  static inline void bitmap_zero(unsigned long *dst,int nbits)
bitmap_fill  function  include/linux/bitmap.h  169  static inline void bitmap_fill(unsigned long *dst,int nbits)
bitmap_copy  function  include/linux/bitmap.h  180  static inline void bitmap_copy(unsigned long *dst,const unsigned long *src,int nbits)
bitmap_and  function  include/linux/bitmap.h  191  static inline int bitmap_and(unsigned long *dst,const unsigned long *src1,const unsigned long *src2, int nbits)
bitmap_or  function  include/linux/bitmap.h  199  static inline void bitmap_or(unsigned long *dst,const unsigned long *src1,const unsigned long *src2, int nbits)
bitmap_xor  function  include/linux/bitmap.h  208  static inline void bitmap_xor(unsigned long *dst,const unsigned long *src1,const unsigned long *src2, int nbits)
bitmap_andnot  function  include/linux/bitmap.h  217  static inline int bitmap_andnot(unsigned long *dst,const unsigned long *src1,const unsigned long *src2, int nbits)
bitmap_complement  function  include/linux/bitmap.h  225  static inline void bitmap_complement(unsigned long *dst,const unsigned long *src,int nbits)
bitmap_equal  function  include/linux/bitmap.h  234  static inline int bitmap_equal(const unsigned long *src1,const unsigned long *src2, int nbits)
bitmap_intersects  function  include/linux/bitmap.h  243  static inline int bitmap_intersects(const unsigned long *src1,const unsigned long *src2, int nbits)
bitmap_subset  function  include/linux/bitmap.h  252  static inline int bitmap_subset(const unsigned long *src1,const unsigned long *src2, int nbits)
bitmap_empty  function  include/linux/bitmap.h  260  static inline int bitmap_empty(const unsigned long *src,int nbits)
bitmap_full  function  include/linux/bitmap.h  268  static inline int bitmap_full(const unsigned long *src,int nbits)
bitmap_weight  function  include/linux/bitmap.h  276  static inline int bitmap_weight(const unsigned long *src,int nbits)
bitmap_shift_right  function  include/linux/bitmap.h  284  static inline void bitmap_shift_right(unsigned long *dst,const unsigned long *src, int n, int nbits)
bitmap_shift_left  function  include/linux/bitmap.h  293  static inline void bitmap_shift_left(unsigned long *dst,const unsigned long *src, int n, int nbits)
bitmap_parse  function  include/linux/bitmap.h  302  static inline int bitmap_parse(const char *buf,unsigned int buflen,unsigned long *maskp, int nmaskbits)
_LINUX_NUMA_H  macro  include/linux/numa.h  2  #define _LINUX_NUMA_H
NODES_SHIFT  macro  include/linux/numa.h  8  #define NODES_SHIFT 0
MAX_NUMNODES  macro  include/linux/numa.h  11  #define MAX_NUMNODES (1 << NODES_SHIFT)
NUMA_NO_NODE  macro  include/linux/numa.h  13  #define NUMA_NO_NODE (-1)
_LINUX_AUXVEC_H  macro  include/linux/auxvec.h  2  #define _LINUX_AUXVEC_H
AT_VECTOR_SIZE_BASE  macro  include/linux/auxvec.h  6  #define AT_VECTOR_SIZE_BASE 19
LINUX_PAGE_DEBUG_FLAGS_H  macro  include/linux/page-debug-flags.h  2  #define LINUX_PAGE_DEBUG_FLAGS_H
page_debug_flags  enum  include/linux/page-debug-flags.h  14  enum page_debug_flags {
_LINUX_UPROBES_H  macro  include/linux/uprobes.h  2  #define _LINUX_UPROBES_H
uprobe_consumer  struct  include/linux/uprobes.h  38  struct uprobe_consumer {
uprobe_task_state  enum  include/linux/uprobes.h  50  enum uprobe_task_state {
uprobe_task  struct  include/linux/uprobes.h  60  struct uprobe_task {
xol_area  struct  include/linux/uprobes.h  75  struct xol_area {
uprobes_state  struct  include/linux/uprobes.h  113  struct uprobes_state {
set_swbp  prototype  include/linux/uprobes.h  93  extern int __weak set_swbp(struct arch_uprobe *aup,struct mm_struct *mm,unsigned long vaddr);
set_orig_insn  prototype  include/linux/uprobes.h  94  extern int __weak set_orig_insn(struct arch_uprobe *aup,struct mm_struct *mm,unsigned long vaddr);
is_swbp_insn  prototype  include/linux/uprobes.h  95  extern bool __weak is_swbp_insn(uprobe_opcode_t *insn);
uprobe_register  function  include/linux/uprobes.h  116  uprobe_register(struct inode *inode,loff_t offset,struct uprobe_consumer *uc)
uprobe_unregister  function  include/linux/uprobes.h  121  uprobe_unregister(struct inode *inode,loff_t offset,struct uprobe_consumer *uc)
uprobe_mmap  function  include/linux/uprobes.h  124  static inline int uprobe_mmap(struct vm_area_struct *vma)
uprobe_munmap  function  include/linux/uprobes.h  129  uprobe_munmap(struct vm_area_struct *vma,unsigned long start,unsigned long end)
uprobe_start_dup_mmap  function  include/linux/uprobes.h  132  static inline void uprobe_start_dup_mmap(void)
uprobe_end_dup_mmap  function  include/linux/uprobes.h  135  static inline void uprobe_end_dup_mmap(void)
uprobe_dup_mmap  function  include/linux/uprobes.h  139  uprobe_dup_mmap(struct mm_struct *oldmm,struct mm_struct *newmm)
uprobe_free_utask  function  include/linux/uprobes.h  153  static inline void uprobe_free_utask(struct task_struct *t)
uprobe_copy_process  function  include/linux/uprobes.h  156  static inline void uprobe_copy_process(struct task_struct *t)
uprobe_get_swbp_addr  function  include/linux/uprobes.h  149  static inline unsigned long uprobe_get_swbp_addr(struct pt_regs *regs)
uprobe_post_sstep_notifier  prototype  include/linux/uprobes.h  106  extern int uprobe_post_sstep_notifier(struct pt_regs *regs);
uprobe_pre_sstep_notifier  prototype  include/linux/uprobes.h  107  extern int uprobe_pre_sstep_notifier(struct pt_regs *regs);
uprobe_notify_resume  function  include/linux/uprobes.h  142  static inline void uprobe_notify_resume(struct pt_regs *regs)
uprobe_deny_signal  function  include/linux/uprobes.h  145  static inline bool uprobe_deny_signal(void)
arch_uprobe_skip_sstep  prototype  include/linux/uprobes.h  110  extern bool __weak arch_uprobe_skip_sstep(struct arch_uprobe *aup,struct pt_regs *regs);
uprobe_clear_state  function  include/linux/uprobes.h  159  static inline void uprobe_clear_state(struct mm_struct *mm)
_ASM_X86_MMU_H  macro  arch/x86/include/asm/mmu.h  2  #define _ASM_X86_MMU_H
leave_mm  function  arch/x86/include/asm/mmu.h  27  static inline void leave_mm(int cpu)
_ASM_X86_PAGE_DEFS_H  macro  arch/x86/include/asm/page_types.h  2  #define _ASM_X86_PAGE_DEFS_H
PAGE_SHIFT  macro  arch/x86/include/asm/page_types.h  8  #define PAGE_SHIFT 12
PAGE_SIZE  macro  arch/x86/include/asm/page_types.h  9  #define PAGE_SIZE (_AC(1,UL) << PAGE_SHIFT)
PAGE_MASK  macro  arch/x86/include/asm/page_types.h  10  #define PAGE_MASK (~(PAGE_SIZE-1))
__PHYSICAL_MASK  macro  arch/x86/include/asm/page_types.h  12  #define __PHYSICAL_MASK ((phys_addr_t)((1ULL << __PHYSICAL_MASK_SHIFT) - 1))
__VIRTUAL_MASK  macro  arch/x86/include/asm/page_types.h  13  #define __VIRTUAL_MASK ((1UL << __VIRTUAL_MASK_SHIFT) - 1)
PHYSICAL_PAGE_MASK  macro  arch/x86/include/asm/page_types.h  18  #define PHYSICAL_PAGE_MASK (((signed long)PAGE_MASK) & __PHYSICAL_MASK)
PMD_PAGE_SIZE  macro  arch/x86/include/asm/page_types.h  20  #define PMD_PAGE_SIZE (_AC(1,UL) << PMD_SHIFT)
PMD_PAGE_MASK  macro  arch/x86/include/asm/page_types.h  21  #define PMD_PAGE_MASK (~(PMD_PAGE_SIZE-1))
HPAGE_SHIFT  macro  arch/x86/include/asm/page_types.h  23  #define HPAGE_SHIFT PMD_SHIFT
HPAGE_SIZE  macro  arch/x86/include/asm/page_types.h  24  #define HPAGE_SIZE (_AC(1,UL) << HPAGE_SHIFT)
HPAGE_MASK  macro  arch/x86/include/asm/page_types.h  25  #define HPAGE_MASK (~(HPAGE_SIZE - 1))
HUGETLB_PAGE_ORDER  macro  arch/x86/include/asm/page_types.h  26  #define HUGETLB_PAGE_ORDER (HPAGE_SHIFT - PAGE_SHIFT)
HUGE_MAX_HSTATE  macro  arch/x86/include/asm/page_types.h  28  #define HUGE_MAX_HSTATE 2
PAGE_OFFSET  macro  arch/x86/include/asm/page_types.h  30  #define PAGE_OFFSET ((unsigned long)__PAGE_OFFSET)
VM_DATA_DEFAULT_FLAGS  macro  arch/x86/include/asm/page_types.h  34  #define VM_DATA_DEFAULT_FLAGS (((current->personality & READ_IMPLIES_EXEC) ? VM_EXEC : 0 ) | VM_READ | VM_WRITE | VM_MAYREAD | VM_MAYWRITE | VM_MAYEXEC)
devmem_is_allowed  prototype  arch/x86/include/asm/page_types.h  44  extern int devmem_is_allowed(unsigned long pagenr);
get_max_mapped  function  arch/x86/include/asm/page_types.h  49  static inline phys_addr_t get_max_mapped(void)
init_memory_mapping  prototype  arch/x86/include/asm/page_types.h  55  extern unsigned long init_memory_mapping(unsigned long start,unsigned long end);
initmem_init  prototype  arch/x86/include/asm/page_types.h  57  extern void initmem_init(void);
_ASM_X86_PAGE_64_H  macro  arch/x86/include/asm/page_64.h  2  #define _ASM_X86_PAGE_64_H
_ASM_X86_PAGE_32_H  macro  arch/x86/include/asm/page_32.h  2  #define _ASM_X86_PAGE_32_H
HAVE_ARCH_HUGETLB_UNMAPPED_AREA  macro  arch/x86/include/asm/page_32.h  9  #define HAVE_ARCH_HUGETLB_UNMAPPED_AREA
__phys_addr_nodebug  macro  arch/x86/include/asm/page_32.h  12  #define __phys_addr_nodebug(x) ((x) - PAGE_OFFSET)
__phys_addr  macro  arch/x86/include/asm/page_32.h  16  #define __phys_addr(x) __phys_addr_nodebug(x)
__phys_reloc_hide  macro  arch/x86/include/asm/page_32.h  18  #define __phys_reloc_hide(x) RELOC_HIDE((x),0)
pfn_valid  function  include/linux/mmzone.h  1177  static inline int pfn_valid(unsigned long pfn)
clear_page  function  arch/x86/include/asm/page_32.h  39  static inline void clear_page(void *page)
copy_page  function  arch/x86/include/asm/page_32.h  44  static inline void copy_page(void *to,void *from)
__ASM_MEMORY_MODEL_H  macro  include/asm-generic/memory_model.h  2  #define __ASM_MEMORY_MODEL_H
ARCH_PFN_OFFSET  macro  include/asm-generic/memory_model.h  9  #define ARCH_PFN_OFFSET (0UL)
arch_pfn_to_nid  macro  include/asm-generic/memory_model.h  15  #define arch_pfn_to_nid(pfn) pfn_to_nid(pfn)
arch_local_page_offset  macro  include/asm-generic/memory_model.h  20  #define arch_local_page_offset(pfn,nid) ((pfn) - NODE_DATA(nid)->node_start_pfn)
__pfn_to_page  macro  include/asm-generic/memory_model.h  69  #define __pfn_to_page(pfn) ({	unsigned long __pfn = (pfn); struct mem_section *__sec = __pfn_to_section(__pfn); __section_mem_map_addr(__sec) + __pfn; })
__page_to_pfn  macro  include/asm-generic/memory_model.h  63  #define __page_to_pfn(pg) ({	const struct page *__pg = (pg); int __sec = page_to_section(__pg); (unsigned long)(__pg - __section_mem_map_addr(__nr_to_section(__sec))); })
page_to_pfn  macro  include/asm-generic/memory_model.h  72  #define page_to_pfn __page_to_pfn
pfn_to_page  macro  include/asm-generic/memory_model.h  73  #define pfn_to_page __pfn_to_page
__ASM_GENERIC_GETORDER_H  macro  include/asm-generic/getorder.h  2  #define __ASM_GENERIC_GETORDER_H
__get_order  function  include/asm-generic/getorder.h  13  int __get_order(unsigned long size)
get_order  macro  include/asm-generic/getorder.h  57  #define get_order(n) ( __builtin_constant_p(n) ? ( ((n) == 0UL) ? BITS_PER_LONG - PAGE_SHIFT : (((n) < (1UL << PAGE_SHIFT)) ? 0 : ilog2((n) - 1) - PAGE_SHIFT + 1) ) : __get_order(n) )
_ASM_X86_SEGMENT_H  macro  arch/x86/include/asm/segment.h  2  #define _ASM_X86_SEGMENT_H
GDT_ENTRY  macro  arch/x86/include/asm/segment.h  13  #define GDT_ENTRY(flags,base,limit) ((((base)  & _AC(0xff000000,ULL)) << (56-24)) | (((flags) & _AC(0x0000f0ff,ULL)) << 40) | (((limit) & _AC(0x000f0000,ULL)) << (48-16)) | (((base)  & _AC(0x00ffffff,ULL)) << 16) | (((limit) & _AC(0x0000ffff,ULL))))
GDT_ENTRY_BOOT_CS  macro  arch/x86/include/asm/segment.h  17  #define GDT_ENTRY_BOOT_CS 2
__BOOT_CS  macro  arch/x86/include/asm/segment.h  18  #define __BOOT_CS (GDT_ENTRY_BOOT_CS * 8)
GDT_ENTRY_BOOT_DS  macro  arch/x86/include/asm/segment.h  20  #define GDT_ENTRY_BOOT_DS (GDT_ENTRY_BOOT_CS + 1)
__BOOT_DS  macro  arch/x86/include/asm/segment.h  21  #define __BOOT_DS (GDT_ENTRY_BOOT_DS * 8)
GDT_ENTRY_BOOT_TSS  macro  arch/x86/include/asm/segment.h  23  #define GDT_ENTRY_BOOT_TSS (GDT_ENTRY_BOOT_CS + 2)
__BOOT_TSS  macro  arch/x86/include/asm/segment.h  24  #define __BOOT_TSS (GDT_ENTRY_BOOT_TSS * 8)
GDT_ENTRY_TLS_MIN  macro  arch/x86/include/asm/segment.h  170  #define GDT_ENTRY_TLS_MIN 12
GDT_ENTRY_TLS_MAX  macro  arch/x86/include/asm/segment.h  171  #define GDT_ENTRY_TLS_MAX 14
GDT_ENTRY_DEFAULT_USER_CS  macro  arch/x86/include/asm/segment.h  164  #define GDT_ENTRY_DEFAULT_USER_CS 6
GDT_ENTRY_DEFAULT_USER_DS  macro  arch/x86/include/asm/segment.h  163  #define GDT_ENTRY_DEFAULT_USER_DS 5
GDT_ENTRY_KERNEL_BASE  macro  arch/x86/include/asm/segment.h  78  #define GDT_ENTRY_KERNEL_BASE (12)
GDT_ENTRY_KERNEL_CS  macro  arch/x86/include/asm/segment.h  151  #define GDT_ENTRY_KERNEL_CS 2
GDT_ENTRY_KERNEL_DS  macro  arch/x86/include/asm/segment.h  152  #define GDT_ENTRY_KERNEL_DS 3
GDT_ENTRY_TSS  macro  arch/x86/include/asm/segment.h  168  #define GDT_ENTRY_TSS 8
GDT_ENTRY_LDT  macro  arch/x86/include/asm/segment.h  169  #define GDT_ENTRY_LDT 10
GDT_ENTRY_PNPBIOS_BASE  macro  arch/x86/include/asm/segment.h  87  #define GDT_ENTRY_PNPBIOS_BASE (GDT_ENTRY_KERNEL_BASE+6)
GDT_ENTRY_APMBIOS_BASE  macro  arch/x86/include/asm/segment.h  88  #define GDT_ENTRY_APMBIOS_BASE (GDT_ENTRY_KERNEL_BASE+11)
GDT_ENTRY_ESPFIX_SS  macro  arch/x86/include/asm/segment.h  90  #define GDT_ENTRY_ESPFIX_SS (GDT_ENTRY_KERNEL_BASE+14)
__ESPFIX_SS  macro  arch/x86/include/asm/segment.h  91  #define __ESPFIX_SS (GDT_ENTRY_ESPFIX_SS*8)
GDT_ENTRY_PERCPU  macro  arch/x86/include/asm/segment.h  93  #define GDT_ENTRY_PERCPU (GDT_ENTRY_KERNEL_BASE+15)
__KERNEL_PERCPU  macro  arch/x86/include/asm/segment.h  97  #define __KERNEL_PERCPU 0
GDT_ENTRY_STACK_CANARY  macro  arch/x86/include/asm/segment.h  100  #define GDT_ENTRY_STACK_CANARY (GDT_ENTRY_KERNEL_BASE+16)
__KERNEL_STACK_CANARY  macro  arch/x86/include/asm/segment.h  104  #define __KERNEL_STACK_CANARY 0
GDT_ENTRY_DOUBLEFAULT_TSS  macro  arch/x86/include/asm/segment.h  107  #define GDT_ENTRY_DOUBLEFAULT_TSS 31
GDT_ENTRIES  macro  arch/x86/include/asm/segment.h  183  #define GDT_ENTRIES 16
GDT_ENTRY_PNPBIOS_CS32  macro  arch/x86/include/asm/segment.h  115  #define GDT_ENTRY_PNPBIOS_CS32 (GDT_ENTRY_PNPBIOS_BASE + 0)
GDT_ENTRY_PNPBIOS_CS16  macro  arch/x86/include/asm/segment.h  116  #define GDT_ENTRY_PNPBIOS_CS16 (GDT_ENTRY_PNPBIOS_BASE + 1)
GDT_ENTRY_PNPBIOS_DS  macro  arch/x86/include/asm/segment.h  117  #define GDT_ENTRY_PNPBIOS_DS (GDT_ENTRY_PNPBIOS_BASE + 2)
GDT_ENTRY_PNPBIOS_TS1  macro  arch/x86/include/asm/segment.h  118  #define GDT_ENTRY_PNPBIOS_TS1 (GDT_ENTRY_PNPBIOS_BASE + 3)
GDT_ENTRY_PNPBIOS_TS2  macro  arch/x86/include/asm/segment.h  119  #define GDT_ENTRY_PNPBIOS_TS2 (GDT_ENTRY_PNPBIOS_BASE + 4)
PNP_CS32  macro  arch/x86/include/asm/segment.h  122  #define PNP_CS32 (GDT_ENTRY_PNPBIOS_CS32 * 8)
PNP_CS16  macro  arch/x86/include/asm/segment.h  123  #define PNP_CS16 (GDT_ENTRY_PNPBIOS_CS16 * 8)
PNP_DS  macro  arch/x86/include/asm/segment.h  124  #define PNP_DS (GDT_ENTRY_PNPBIOS_DS * 8)
PNP_TS1  macro  arch/x86/include/asm/segment.h  125  #define PNP_TS1 (GDT_ENTRY_PNPBIOS_TS1 * 8)
PNP_TS2  macro  arch/x86/include/asm/segment.h  126  #define PNP_TS2 (GDT_ENTRY_PNPBIOS_TS2 * 8)
SEGMENT_RPL_MASK  macro  arch/x86/include/asm/segment.h  202  #define SEGMENT_RPL_MASK 0x3
SEGMENT_TI_MASK  macro  arch/x86/include/asm/segment.h  204  #define SEGMENT_TI_MASK 0x4
USER_RPL  macro  arch/x86/include/asm/segment.h  196  #define USER_RPL 0x3
SEGMENT_LDT  macro  arch/x86/include/asm/segment.h  198  #define SEGMENT_LDT 0x4
SEGMENT_GDT  macro  arch/x86/include/asm/segment.h  199  #define SEGMENT_GDT 0x0
SEGMENT_IS_PNP_CODE  macro  arch/x86/include/asm/segment.h  144  #define SEGMENT_IS_PNP_CODE(x) (((x) & 0xf4) == GDT_ENTRY_PNPBIOS_BASE * 8)
GDT_ENTRY_KERNEL32_CS  macro  arch/x86/include/asm/segment.h  150  #define GDT_ENTRY_KERNEL32_CS 1
__KERNEL32_CS  macro  arch/x86/include/asm/segment.h  154  #define __KERNEL32_CS (GDT_ENTRY_KERNEL32_CS * 8)
GDT_ENTRY_DEFAULT_USER32_CS  macro  arch/x86/include/asm/segment.h  162  #define GDT_ENTRY_DEFAULT_USER32_CS 4
__USER32_CS  macro  arch/x86/include/asm/segment.h  165  #define __USER32_CS (GDT_ENTRY_DEFAULT_USER32_CS*8+3)
__USER32_DS  macro  arch/x86/include/asm/segment.h  166  #define __USER32_DS __USER_DS
GDT_ENTRY_PER_CPU  macro  arch/x86/include/asm/segment.h  173  #define GDT_ENTRY_PER_CPU 15
__PER_CPU_SEG  macro  arch/x86/include/asm/segment.h  174  #define __PER_CPU_SEG (GDT_ENTRY_PER_CPU * 8 + 3)
FS_TLS  macro  arch/x86/include/asm/segment.h  177  #define FS_TLS 0
GS_TLS  macro  arch/x86/include/asm/segment.h  178  #define GS_TLS 1
GS_TLS_SEL  macro  arch/x86/include/asm/segment.h  180  #define GS_TLS_SEL ((GDT_ENTRY_TLS_MIN+GS_TLS)*8 + 3)
FS_TLS_SEL  macro  arch/x86/include/asm/segment.h  181  #define FS_TLS_SEL ((GDT_ENTRY_TLS_MIN+FS_TLS)*8 + 3)
__KERNEL_CS  macro  arch/x86/include/asm/segment.h  187  #define __KERNEL_CS (GDT_ENTRY_KERNEL_CS*8)
__KERNEL_DS  macro  arch/x86/include/asm/segment.h  188  #define __KERNEL_DS (GDT_ENTRY_KERNEL_DS*8)
__USER_DS  macro  arch/x86/include/asm/segment.h  189  #define __USER_DS (GDT_ENTRY_DEFAULT_USER_DS*8+3)
__USER_CS  macro  arch/x86/include/asm/segment.h  190  #define __USER_CS (GDT_ENTRY_DEFAULT_USER_CS*8+3)
get_kernel_rpl  macro  arch/x86/include/asm/paravirt.h  124  #define get_kernel_rpl() (pv_info.kernel_rpl)
IDT_ENTRIES  macro  arch/x86/include/asm/segment.h  206  #define IDT_ENTRIES 256
NUM_EXCEPTION_VECTORS  macro  arch/x86/include/asm/segment.h  207  #define NUM_EXCEPTION_VECTORS 32
EXCEPTION_ERRCODE_MASK  macro  arch/x86/include/asm/segment.h  209  #define EXCEPTION_ERRCODE_MASK 0x00027d00
GDT_SIZE  macro  arch/x86/include/asm/segment.h  210  #define GDT_SIZE (GDT_ENTRIES * 8)
GDT_ENTRY_TLS_ENTRIES  macro  arch/x86/include/asm/segment.h  211  #define GDT_ENTRY_TLS_ENTRIES 3
TLS_SIZE  macro  arch/x86/include/asm/segment.h  212  #define TLS_SIZE (GDT_ENTRY_TLS_ENTRIES * 8)
loadsegment  macro  arch/x86/include/asm/segment.h  237  #define loadsegment(seg,value) do { unsigned short __val = (value); asm volatile("						\n" "1:	movl %k0,%%" #seg "		\n" ".section .fixup,\"ax\"			\n" "2:	xorl %k0,%k0			\n" "		jmp 1b				\n" ".previous					\n" _ASM_EXTABLE(1b, 2b) : "+r" (__val) : : "memory"); } while (0)
savesegment  macro  arch/x86/include/asm/segment.h  243  #define savesegment(seg,value) asm("mov %%" #seg ",%0":"=r" (value) : : "memory")
get_user_gs  macro  arch/x86/include/asm/segment.h  256  #define get_user_gs(regs) (u16)((regs)->gs)
set_user_gs  macro  arch/x86/include/asm/segment.h  257  #define set_user_gs(regs,v) do { (regs)->gs = (v); } while (0)
task_user_gs  macro  arch/x86/include/asm/segment.h  258  #define task_user_gs(tsk) (task_pt_regs(tsk)->gs)
lazy_save_gs  macro  arch/x86/include/asm/segment.h  259  #define lazy_save_gs(v) do { } while (0)
lazy_load_gs  macro  arch/x86/include/asm/segment.h  260  #define lazy_load_gs(v) do { } while (0)
get_limit  function  arch/x86/include/asm/segment.h  264  static inline unsigned long get_limit(unsigned long segment)
_UAPI_ASM_X86_PTRACE_H  macro  arch/x86/include/uapi/asm/ptrace.h  2  #define _UAPI_ASM_X86_PTRACE_H
_ASM_X86_PARAVIRT_TYPES_H  macro  arch/x86/include/asm/paravirt_types.h  2  #define _ASM_X86_PARAVIRT_TYPES_H
CLBR_NONE  macro  arch/x86/include/asm/paravirt_types.h  5  #define CLBR_NONE 0
CLBR_EAX  macro  arch/x86/include/asm/paravirt_types.h  6  #define CLBR_EAX (1 << 0)
CLBR_ECX  macro  arch/x86/include/asm/paravirt_types.h  7  #define CLBR_ECX (1 << 1)
CLBR_EDX  macro  arch/x86/include/asm/paravirt_types.h  8  #define CLBR_EDX (1 << 2)
CLBR_EDI  macro  arch/x86/include/asm/paravirt_types.h  9  #define CLBR_EDI (1 << 3)
CLBR_ANY  macro  arch/x86/include/asm/paravirt_types.h  29  #define CLBR_ANY ((1 << 9) - 1)
CLBR_ARG_REGS  macro  arch/x86/include/asm/paravirt_types.h  32  #define CLBR_ARG_REGS (CLBR_RDI | CLBR_RSI | CLBR_RDX | CLBR_RCX | CLBR_R8 | CLBR_R9)
CLBR_RET_REG  macro  arch/x86/include/asm/paravirt_types.h  33  #define CLBR_RET_REG (CLBR_RAX)
CLBR_SCRATCH  macro  arch/x86/include/asm/paravirt_types.h  34  #define CLBR_SCRATCH (CLBR_R10 | CLBR_R11)
CLBR_RAX  macro  arch/x86/include/asm/paravirt_types.h  19  #define CLBR_RAX CLBR_EAX
CLBR_RCX  macro  arch/x86/include/asm/paravirt_types.h  20  #define CLBR_RCX CLBR_ECX
CLBR_RDX  macro  arch/x86/include/asm/paravirt_types.h  21  #define CLBR_RDX CLBR_EDX
CLBR_RDI  macro  arch/x86/include/asm/paravirt_types.h  22  #define CLBR_RDI CLBR_EDI
CLBR_RSI  macro  arch/x86/include/asm/paravirt_types.h  23  #define CLBR_RSI (1 << 4)
CLBR_R8  macro  arch/x86/include/asm/paravirt_types.h  24  #define CLBR_R8 (1 << 5)
CLBR_R9  macro  arch/x86/include/asm/paravirt_types.h  25  #define CLBR_R9 (1 << 6)
CLBR_R10  macro  arch/x86/include/asm/paravirt_types.h  26  #define CLBR_R10 (1 << 7)
CLBR_R11  macro  arch/x86/include/asm/paravirt_types.h  27  #define CLBR_R11 (1 << 8)
CLBR_CALLEE_SAVE  macro  arch/x86/include/asm/paravirt_types.h  38  #define CLBR_CALLEE_SAVE ((CLBR_ARG_REGS | CLBR_SCRATCH) & ~CLBR_RET_REG)
paravirt_callee_save  struct  arch/x86/include/asm/paravirt_types.h  59  struct paravirt_callee_save {
pv_info  struct  arch/x86/include/asm/paravirt_types.h  64  struct pv_info {
pv_init_ops  struct  arch/x86/include/asm/paravirt_types.h  76  struct pv_init_ops {
pv_lazy_ops  struct  arch/x86/include/asm/paravirt_types.h  90  struct pv_lazy_ops {
pv_time_ops  struct  arch/x86/include/asm/paravirt_types.h  97  struct pv_time_ops {
pv_cpu_ops  struct  arch/x86/include/asm/paravirt_types.h  103  struct pv_cpu_ops {
pv_irq_ops  struct  arch/x86/include/asm/paravirt_types.h  197  struct pv_irq_ops {
pv_apic_ops  struct  arch/x86/include/asm/paravirt_types.h  220  struct pv_apic_ops {
pv_mmu_ops  struct  arch/x86/include/asm/paravirt_types.h  228  struct pv_mmu_ops {
pv_lock_ops  struct  arch/x86/include/asm/paravirt_types.h  330  struct pv_lock_ops {
paravirt_patch_template  struct  arch/x86/include/asm/paravirt_types.h  342  struct paravirt_patch_template {
PARAVIRT_PATCH  macro  arch/x86/include/asm/paravirt_types.h  362  #define PARAVIRT_PATCH(x) (offsetof(struct paravirt_patch_template, x) / sizeof(void *))
paravirt_type  macro  arch/x86/include/asm/paravirt_types.h  366  #define paravirt_type(op) [paravirt_typenum] "i" (PARAVIRT_PATCH(op)), [paravirt_opptr] "i" (&(op))
paravirt_clobber  macro  arch/x86/include/asm/paravirt_types.h  368  #define paravirt_clobber(clobber) [paravirt_clobber] "i" (clobber)
_paravirt_alt  macro  arch/x86/include/asm/paravirt_types.h  382  #define _paravirt_alt(insn_string,type,clobber) "771:\n\t" insn_string "\n" "772:\n" ".pushsection .parainstructions,\"a\"\n" _ASM_ALIGN "\n" _ASM_PTR " 771b\n" "  .byte " type "\n" "  .byte 772b-771b\n" "  .short " clobber "\n" ".popsection\n"
paravirt_alt  macro  arch/x86/include/asm/paravirt_types.h  386  #define paravirt_alt(insn_string) _paravirt_alt(insn_string, "%c[paravirt_typenum]", "%c[paravirt_clobber]")
DEF_NATIVE  macro  arch/x86/include/asm/paravirt_types.h  391  #define DEF_NATIVE(ops,name,code) extern const char start_##ops##_##name[], end_##ops##_##name[]; asm("start_" #ops "_" #name ": " code "; end_" #ops "_" #name ":")
paravirt_patch_nop  prototype  arch/x86/include/asm/paravirt_types.h  393  unsigned paravirt_patch_nop(void);
paravirt_patch_ident_32  prototype  arch/x86/include/asm/paravirt_types.h  394  unsigned paravirt_patch_ident_32(void *insnbuf,unsigned len);
paravirt_patch_ident_64  prototype  arch/x86/include/asm/paravirt_types.h  395  unsigned paravirt_patch_ident_64(void *insnbuf,unsigned len);
paravirt_patch_ignore  prototype  arch/x86/include/asm/paravirt_types.h  396  unsigned paravirt_patch_ignore(unsigned len);
paravirt_patch_call  prototype  arch/x86/include/asm/paravirt_types.h  400  unsigned paravirt_patch_call(void *insnbuf,const void *target, u16 tgt_clobbers,unsigned long addr, u16 site_clobbers,unsigned len);
paravirt_patch_jmp  prototype  arch/x86/include/asm/paravirt_types.h  402  unsigned paravirt_patch_jmp(void *insnbuf,const void *target,unsigned long addr, unsigned len);
paravirt_patch_default  prototype  arch/x86/include/asm/paravirt_types.h  404  unsigned paravirt_patch_default(u8 type,u16 clobbers,void *insnbuf,unsigned long addr, unsigned len);
paravirt_patch_insns  prototype  arch/x86/include/asm/paravirt_types.h  407  unsigned paravirt_patch_insns(void *insnbuf,unsigned len,const char *start, const char *end);
native_patch  prototype  arch/x86/include/asm/paravirt_types.h  410  unsigned native_patch(u8 type,u16 clobbers,void *ibuf,unsigned long addr, unsigned len);
paravirt_disable_iospace  prototype  arch/x86/include/asm/paravirt_types.h  412  int paravirt_disable_iospace(void);
PARAVIRT_CALL  macro  arch/x86/include/asm/paravirt.h  857  #undef PARAVIRT_CALL
PVOP_VCALL_ARGS  macro  arch/x86/include/asm/paravirt_types.h  508  #define PVOP_VCALL_ARGS unsigned long __edi = __edi, __esi = __esi, __edx = __edx, __ecx = __ecx, __eax = __eax
PVOP_CALL_ARGS  macro  arch/x86/include/asm/paravirt_types.h  509  #define PVOP_CALL_ARGS PVOP_VCALL_ARGS
PVOP_CALL_ARG1  macro  arch/x86/include/asm/paravirt_types.h  511  #define PVOP_CALL_ARG1(x) "D" ((unsigned long)(x))
PVOP_CALL_ARG2  macro  arch/x86/include/asm/paravirt_types.h  512  #define PVOP_CALL_ARG2(x) "S" ((unsigned long)(x))
PVOP_CALL_ARG3  macro  arch/x86/include/asm/paravirt_types.h  513  #define PVOP_CALL_ARG3(x) "d" ((unsigned long)(x))
PVOP_VCALL_CLOBBERS  macro  arch/x86/include/asm/paravirt_types.h  518  #define PVOP_VCALL_CLOBBERS "=D" (__edi), "=S" (__esi), "=d" (__edx), "=c" (__ecx)
PVOP_CALL_CLOBBERS  macro  arch/x86/include/asm/paravirt_types.h  519  #define PVOP_CALL_CLOBBERS PVOP_VCALL_CLOBBERS,"=a" (__eax)
PVOP_VCALLEE_CLOBBERS  macro  arch/x86/include/asm/paravirt_types.h  522  #define PVOP_VCALLEE_CLOBBERS "=a" (__eax)
PVOP_CALLEE_CLOBBERS  macro  arch/x86/include/asm/paravirt_types.h  523  #define PVOP_CALLEE_CLOBBERS PVOP_VCALLEE_CLOBBERS
EXTRA_CLOBBERS  macro  arch/x86/include/asm/paravirt_types.h  525  #define EXTRA_CLOBBERS ,"r8","r9","r10","r11"
VEXTRA_CLOBBERS  macro  arch/x86/include/asm/paravirt_types.h  526  #define VEXTRA_CLOBBERS ,"rax","r8","r9","r10","r11"
PVOP_CALL_ARG4  macro  arch/x86/include/asm/paravirt_types.h  514  #define PVOP_CALL_ARG4(x) "c" ((unsigned long)(x))
PVOP_TEST_NULL  macro  arch/x86/include/asm/paravirt_types.h  532  #define PVOP_TEST_NULL(op) ((void)op)
____PVOP_CALL  macro  arch/x86/include/asm/paravirt_types.h  565  #define ____PVOP_CALL(rettype,op,clbr,call_clbr,extra_clbr, pre, post, ...) ({ rettype __ret; PVOP_CALL_ARGS; PVOP_TEST_NULL(op); /* This is 32-bit specific, but is okay in 64-bit */ /* since this condition will never hold */ if (sizeof(rettype) > sizeof(unsigned long)) { asm volatile(pre paravirt_alt(PARAVIRT_CALL) post : call_clbr : paravirt_type(op), paravirt_clobber(clbr), ##__VA_ARGS__ : "memory", "cc" extra_clbr); __ret = (rettype)((((u64)__edx) << 32) | __eax); } else { asm volatile(pre paravirt_alt(PARAVIRT_CALL) post : call_clbr : paravirt_type(op), paravirt_clobber(clbr), ##__VA_ARGS__ : "memory", "cc" extra_clbr); __ret = (rettype)__eax; } __ret; })
__PVOP_CALL  macro  arch/x86/include/asm/paravirt.h  858  #undef __PVOP_CALL
__PVOP_CALLEESAVE  macro  arch/x86/include/asm/paravirt_types.h  574  #define __PVOP_CALLEESAVE(rettype,op,pre,post,...) ____PVOP_CALL(rettype, op.func, CLBR_RET_REG, PVOP_CALLEE_CLOBBERS, , pre, post, ##__VA_ARGS__)
____PVOP_VCALL  macro  arch/x86/include/asm/paravirt_types.h  589  #define ____PVOP_VCALL(op,clbr,call_clbr,extra_clbr,pre,post,...) ({ PVOP_VCALL_ARGS; PVOP_TEST_NULL(op); asm volatile(pre paravirt_alt(PARAVIRT_CALL) post : call_clbr : paravirt_type(op), paravirt_clobber(clbr), ##__VA_ARGS__ : "memory", "cc" extra_clbr); })
__PVOP_VCALL  macro  arch/x86/include/asm/paravirt.h  859  #undef __PVOP_VCALL
__PVOP_VCALLEESAVE  macro  arch/x86/include/asm/paravirt_types.h  599  #define __PVOP_VCALLEESAVE(op,pre,post,...) ____PVOP_VCALL(op.func, CLBR_RET_REG, PVOP_VCALLEE_CLOBBERS, , pre, post, ##__VA_ARGS__)
PVOP_CALL0  macro  arch/x86/include/asm/paravirt.h  861  #undef PVOP_CALL0
PVOP_VCALL0  macro  arch/x86/include/asm/paravirt.h  860  #undef PVOP_VCALL0
PVOP_CALLEE0  macro  arch/x86/include/asm/paravirt_types.h  609  #define PVOP_CALLEE0(rettype,op) __PVOP_CALLEESAVE(rettype, op, "", "")
PVOP_VCALLEE0  macro  arch/x86/include/asm/paravirt_types.h  611  #define PVOP_VCALLEE0(op) __PVOP_VCALLEESAVE(op, "", "")
PVOP_CALL1  macro  arch/x86/include/asm/paravirt.h  863  #undef PVOP_CALL1
PVOP_VCALL1  macro  arch/x86/include/asm/paravirt.h  862  #undef PVOP_VCALL1
PVOP_CALLEE1  macro  arch/x86/include/asm/paravirt_types.h  620  #define PVOP_CALLEE1(rettype,op,arg1) __PVOP_CALLEESAVE(rettype, op, "", "", PVOP_CALL_ARG1(arg1))
PVOP_VCALLEE1  macro  arch/x86/include/asm/paravirt_types.h  622  #define PVOP_VCALLEE1(op,arg1) __PVOP_VCALLEESAVE(op, "", "", PVOP_CALL_ARG1(arg1))
PVOP_CALL2  macro  arch/x86/include/asm/paravirt.h  865  #undef PVOP_CALL2
PVOP_VCALL2  macro  arch/x86/include/asm/paravirt.h  864  #undef PVOP_VCALL2
PVOP_CALLEE2  macro  arch/x86/include/asm/paravirt_types.h  634  #define PVOP_CALLEE2(rettype,op,arg1,arg2) __PVOP_CALLEESAVE(rettype, op, "", "", PVOP_CALL_ARG1(arg1), PVOP_CALL_ARG2(arg2))
PVOP_VCALLEE2  macro  arch/x86/include/asm/paravirt_types.h  637  #define PVOP_VCALLEE2(op,arg1,arg2) __PVOP_VCALLEESAVE(op, "", "", PVOP_CALL_ARG1(arg1), PVOP_CALL_ARG2(arg2))
PVOP_CALL3  macro  arch/x86/include/asm/paravirt.h  867  #undef PVOP_CALL3
PVOP_VCALL3  macro  arch/x86/include/asm/paravirt.h  866  #undef PVOP_VCALL3
PVOP_CALL4  macro  arch/x86/include/asm/paravirt.h  869  #undef PVOP_CALL4
PVOP_VCALL4  macro  arch/x86/include/asm/paravirt.h  868  #undef PVOP_VCALL4
paravirt_lazy_mode  enum  arch/x86/include/asm/paravirt_types.h  671  enum paravirt_lazy_mode {
paravirt_get_lazy_mode  prototype  arch/x86/include/asm/paravirt_types.h  677  enum paravirt_lazy_mode paravirt_get_lazy_mode(void);
paravirt_start_context_switch  prototype  arch/x86/include/asm/paravirt_types.h  678  void paravirt_start_context_switch(struct task_struct *prev);
paravirt_end_context_switch  prototype  arch/x86/include/asm/paravirt_types.h  679  void paravirt_end_context_switch(struct task_struct *next);
paravirt_enter_lazy_mmu  prototype  arch/x86/include/asm/paravirt_types.h  681  void paravirt_enter_lazy_mmu(void);
paravirt_leave_lazy_mmu  prototype  arch/x86/include/asm/paravirt_types.h  682  void paravirt_leave_lazy_mmu(void);
paravirt_flush_lazy_mmu  prototype  arch/x86/include/asm/paravirt_types.h  683  void paravirt_flush_lazy_mmu(void);
_paravirt_nop  prototype  arch/x86/include/asm/paravirt_types.h  685  void _paravirt_nop(void);
_paravirt_ident_32  prototype  arch/x86/include/asm/paravirt_types.h  686  u32 _paravirt_ident_32(u32);
_paravirt_ident_64  prototype  arch/x86/include/asm/paravirt_types.h  687  u64 _paravirt_ident_64(u64);
paravirt_nop  macro  arch/x86/include/asm/paravirt_types.h  689  #define paravirt_nop ((void *)_paravirt_nop)
paravirt_patch_site  struct  arch/x86/include/asm/paravirt_types.h  692  struct paravirt_patch_site {
__ASM_GENERIC_PTRACE_H__  macro  include/asm-generic/ptrace.h  10  #define __ASM_GENERIC_PTRACE_H__
SET_IP  macro  include/asm-generic/ptrace.h  19  #define SET_IP(regs,val) (GET_IP(regs) = (val))
instruction_pointer  function  include/asm-generic/ptrace.h  22  static inline unsigned long instruction_pointer(struct pt_regs *regs)
instruction_pointer_set  function  include/asm-generic/ptrace.h  27  static inline void instruction_pointer_set(struct pt_regs *regs,unsigned long val)
SET_USP  macro  include/asm-generic/ptrace.h  41  #define SET_USP(regs,val) (GET_USP(regs) = (val))
user_stack_pointer  function  include/asm-generic/ptrace.h  44  static inline unsigned long user_stack_pointer(struct pt_regs *regs)
user_stack_pointer_set  function  include/asm-generic/ptrace.h  49  static inline void user_stack_pointer_set(struct pt_regs *regs,unsigned long val)
SET_FP  macro  include/asm-generic/ptrace.h  59  #define SET_FP(regs,val) (GET_FP(regs) = (val))
frame_pointer  function  include/asm-generic/ptrace.h  62  static inline unsigned long frame_pointer(struct pt_regs *regs)
frame_pointer_set  function  include/asm-generic/ptrace.h  67  static inline void frame_pointer_set(struct pt_regs *regs,unsigned long val)
_ASM_GENERIC_CPUTIME_H  macro  include/asm-generic/cputime.h  2  #define _ASM_GENERIC_CPUTIME_H
cputime_one_jiffy  macro  include/asm-generic/cputime.h  9  #define cputime_one_jiffy jiffies_to_cputime(1)
cputime_to_jiffies  macro  include/asm-generic/cputime.h  10  #define cputime_to_jiffies(__ct) (__force unsigned long)(__ct)
cputime_to_scaled  macro  include/asm-generic/cputime.h  11  #define cputime_to_scaled(__ct) (__ct)
jiffies_to_cputime  macro  include/asm-generic/cputime.h  12  #define jiffies_to_cputime(__hz) (__force cputime_t)(__hz)
cputime64_to_jiffies64  macro  include/asm-generic/cputime.h  16  #define cputime64_to_jiffies64(__ct) (__force u64)(__ct)
jiffies64_to_cputime64  macro  include/asm-generic/cputime.h  17  #define jiffies64_to_cputime64(__jif) (__force cputime64_t)(__jif)
nsecs_to_cputime64  macro  include/asm-generic/cputime.h  20  #define nsecs_to_cputime64(__ct) jiffies64_to_cputime64(nsecs_to_jiffies64(__ct))
cputime_to_usecs  macro  include/asm-generic/cputime.h  27  #define cputime_to_usecs(__ct) jiffies_to_usecs(cputime_to_jiffies(__ct))
usecs_to_cputime  macro  include/asm-generic/cputime.h  29  #define usecs_to_cputime(__usec) jiffies_to_cputime(usecs_to_jiffies(__usec))
usecs_to_cputime64  macro  include/asm-generic/cputime.h  31  #define usecs_to_cputime64(__usec) jiffies64_to_cputime64(nsecs_to_jiffies64((__usec) * 1000))
cputime_to_secs  macro  include/asm-generic/cputime.h  36  #define cputime_to_secs(jif) (cputime_to_jiffies(jif) / HZ)
secs_to_cputime  macro  include/asm-generic/cputime.h  37  #define secs_to_cputime(sec) jiffies_to_cputime((sec) * HZ)
timespec_to_cputime  macro  include/asm-generic/cputime.h  43  #define timespec_to_cputime(__val) jiffies_to_cputime(timespec_to_jiffies(__val))
cputime_to_timespec  macro  include/asm-generic/cputime.h  45  #define cputime_to_timespec(__ct,__val) jiffies_to_timespec(cputime_to_jiffies(__ct),__val)
timeval_to_cputime  macro  include/asm-generic/cputime.h  51  #define timeval_to_cputime(__val) jiffies_to_cputime(timeval_to_jiffies(__val))
cputime_to_timeval  macro  include/asm-generic/cputime.h  53  #define cputime_to_timeval(__ct,__val) jiffies_to_timeval(cputime_to_jiffies(__ct),__val)
cputime_to_clock_t  macro  include/asm-generic/cputime.h  59  #define cputime_to_clock_t(__ct) jiffies_to_clock_t(cputime_to_jiffies(__ct))
clock_t_to_cputime  macro  include/asm-generic/cputime.h  61  #define clock_t_to_cputime(__x) jiffies_to_cputime(clock_t_to_jiffies(__x))
cputime64_to_clock_t  macro  include/asm-generic/cputime.h  67  #define cputime64_to_clock_t(__ct) jiffies_64_to_clock_t(cputime64_to_jiffies64(__ct))
_ASM_X86_SMP_H  macro  arch/x86/include/asm/smp.h  2  #define _ASM_X86_SMP_H
cpu_has_ht_siblings  function  arch/x86/include/asm/smp.h  25  static inline bool cpu_has_ht_siblings(void)
cpu_sibling_mask  function  arch/x86/include/asm/smp.h  41  static inline struct cpumask *cpu_sibling_mask(int cpu)
cpu_core_mask  function  arch/x86/include/asm/smp.h  46  static inline struct cpumask *cpu_core_mask(int cpu)
cpu_llc_shared_mask  function  arch/x86/include/asm/smp.h  51  static inline struct cpumask *cpu_llc_shared_mask(int cpu)
smp_ops  struct  arch/x86/include/asm/smp.h  67  struct smp_ops {
set_cpu_sibling_map  prototype  arch/x86/include/asm/smp.h  85  extern void set_cpu_sibling_map(int cpu);
startup_ipi_hook  function  arch/x86/include/asm/paravirt.h  324  static inline void startup_ipi_hook(int phys_apicid,unsigned long start_eip,unsigned long start_esp)
stop_other_cpus  function  arch/x86/include/asm/smp.h  98  static inline void stop_other_cpus(void)
__cpu_disable  function  arch/x86/include/asm/smp.h  123  static inline int __cpu_disable(void)
__cpu_die  function  arch/x86/include/asm/smp.h  128  static inline void __cpu_die(unsigned int cpu)
play_dead  function  arch/x86/include/asm/smp.h  133  static inline void play_dead(void)
arch_send_call_function_single_ipi  function  arch/x86/include/asm/smp.h  143  static inline void arch_send_call_function_single_ipi(int cpu)
arch_send_call_function_ipi_mask  function  arch/x86/include/asm/smp.h  148  static inline void arch_send_call_function_ipi_mask(const struct cpumask *mask)
cpu_disable_common  prototype  arch/x86/include/asm/smp.h  153  void cpu_disable_common(void);
native_smp_prepare_boot_cpu  prototype  arch/x86/include/asm/smp.h  154  void native_smp_prepare_boot_cpu(void);
native_smp_prepare_cpus  prototype  arch/x86/include/asm/smp.h  155  void native_smp_prepare_cpus(unsigned int max_cpus);
native_smp_cpus_done  prototype  arch/x86/include/asm/smp.h  156  void native_smp_cpus_done(unsigned int max_cpus);
native_cpu_up  prototype  arch/x86/include/asm/smp.h  157  int native_cpu_up(unsigned int cpunum,struct task_struct *tidle);
native_cpu_disable  prototype  arch/x86/include/asm/smp.h  158  int native_cpu_disable(void);
native_cpu_die  prototype  arch/x86/include/asm/smp.h  159  void native_cpu_die(unsigned int cpu);
native_play_dead  prototype  arch/x86/include/asm/smp.h  160  void native_play_dead(void);
play_dead_common  prototype  arch/x86/include/asm/smp.h  161  void play_dead_common(void);
wbinvd_on_cpu  macro  arch/x86/include/asm/smp.h  174  #define wbinvd_on_cpu(cpu) wbinvd()
wbinvd_on_all_cpus  function  arch/x86/include/asm/smp.h  175  static inline int wbinvd_on_all_cpus(void)
native_send_call_func_ipi  prototype  arch/x86/include/asm/smp.h  165  void native_send_call_func_ipi(const struct cpumask *mask);
native_send_call_func_single_ipi  prototype  arch/x86/include/asm/smp.h  166  void native_send_call_func_single_ipi(int cpu);
x86_idle_thread_init  prototype  arch/x86/include/asm/smp.h  167  void x86_idle_thread_init(unsigned int cpu,struct task_struct *idle);
smp_store_boot_cpu_info  prototype  arch/x86/include/asm/smp.h  169  void smp_store_boot_cpu_info(void);
smp_store_cpu_info  prototype  arch/x86/include/asm/smp.h  170  void smp_store_cpu_info(int id);
cpu_physical_id  macro  arch/x86/include/asm/smp.h  171  #define cpu_physical_id(cpu) per_cpu(x86_cpu_to_apicid,cpu)
safe_smp_processor_id  macro  arch/x86/include/asm/smp.h  202  #define safe_smp_processor_id() smp_processor_id()
stack_smp_processor_id  macro  arch/x86/include/asm/smp.h  201  #define stack_smp_processor_id() ({ struct thread_info *ti; __asm__("andq %%rsp,%0; ":"=r" (ti) : "0" (CURRENT_MASK)); ti->cpu; })
logical_smp_processor_id  function  arch/x86/include/asm/smp.h  209  static inline int logical_smp_processor_id(void)
hard_smp_processor_id  macro  arch/x86/include/asm/smp.h  222  # define hard_smp_processor_id() 0
nmi_selftest  macro  arch/x86/include/asm/smp.h  230  #define nmi_selftest() do { } while (0)
_UAPI_LINUX_SEM_H  macro  include/uapi/linux/sem.h  2  #define _UAPI_LINUX_SEM_H
SEM_UNDO  macro  include/uapi/linux/sem.h  7  #define SEM_UNDO 0x1000
GETPID  macro  include/uapi/linux/sem.h  10  #define GETPID 11
GETVAL  macro  include/uapi/linux/sem.h  11  #define GETVAL 12
GETALL  macro  include/uapi/linux/sem.h  12  #define GETALL 13
GETNCNT  macro  include/uapi/linux/sem.h  13  #define GETNCNT 14
GETZCNT  macro  include/uapi/linux/sem.h  14  #define GETZCNT 15
SETVAL  macro  include/uapi/linux/sem.h  15  #define SETVAL 16
SETALL  macro  include/uapi/linux/sem.h  16  #define SETALL 17
SEM_STAT  macro  include/uapi/linux/sem.h  19  #define SEM_STAT 18
SEM_INFO  macro  include/uapi/linux/sem.h  20  #define SEM_INFO 19
semid_ds  struct  include/uapi/linux/sem.h  23  struct semid_ds {
sembuf  struct  include/uapi/linux/sem.h  38  struct sembuf {
semun  union  include/uapi/linux/sem.h  45  union semun {
seminfo  struct  include/uapi/linux/sem.h  53  struct seminfo {
SEMMNI  macro  include/uapi/linux/sem.h  66  #define SEMMNI 128
SEMMSL  macro  include/uapi/linux/sem.h  67  #define SEMMSL 250
SEMMNS  macro  include/uapi/linux/sem.h  68  #define SEMMNS (SEMMNI*SEMMSL)
SEMOPM  macro  include/uapi/linux/sem.h  69  #define SEMOPM 32
SEMVMX  macro  include/uapi/linux/sem.h  70  #define SEMVMX 32767
SEMAEM  macro  include/uapi/linux/sem.h  71  #define SEMAEM SEMVMX
SEMUME  macro  include/uapi/linux/sem.h  74  #define SEMUME SEMOPM
SEMMNU  macro  include/uapi/linux/sem.h  75  #define SEMMNU SEMMNS
SEMMAP  macro  include/uapi/linux/sem.h  76  #define SEMMAP SEMMNS
SEMUSZ  macro  include/uapi/linux/sem.h  77  #define SEMUSZ 20
_UAPI_LINUX_SIGNAL_H  macro  include/uapi/linux/signal.h  2  #define _UAPI_LINUX_SIGNAL_H
SS_ONSTACK  macro  include/uapi/linux/signal.h  7  #define SS_ONSTACK 1
SS_DISABLE  macro  include/uapi/linux/signal.h  8  #define SS_DISABLE 2
_LINUX_MMZONE_H  macro  include/linux/mmzone.h  2  #define _LINUX_MMZONE_H
MAX_ORDER  macro  include/linux/mmzone.h  26  #define MAX_ORDER CONFIG_FORCE_MAX_ZONEORDER
MAX_ORDER_NR_PAGES  macro  include/linux/mmzone.h  28  #define MAX_ORDER_NR_PAGES (1 << (MAX_ORDER - 1))
PAGE_ALLOC_COSTLY_ORDER  macro  include/linux/mmzone.h  36  #define PAGE_ALLOC_COSTLY_ORDER 3
is_migrate_cma  macro  include/linux/mmzone.h  67  # define is_migrate_cma(migratetype) false
for_each_migratetype_order  macro  include/linux/mmzone.h  72  #define for_each_migratetype_order(order,type) for (order = 0; order < MAX_ORDER; order++) for (type = 0; type < MIGRATE_TYPES; type++)
get_pageblock_migratetype  function  include/linux/mmzone.h  76  static inline int get_pageblock_migratetype(struct page *page)
free_area  struct  include/linux/mmzone.h  81  struct free_area {
zone_padding  struct  include/linux/mmzone.h  95  struct zone_padding {
ZONE_PADDING  macro  include/linux/mmzone.h  100  #define ZONE_PADDING(name)
zone_stat_item  enum  include/linux/mmzone.h  103  enum zone_stat_item {
LRU_BASE  macro  include/linux/mmzone.h  155  #define LRU_BASE 0
LRU_ACTIVE  macro  include/linux/mmzone.h  156  #define LRU_ACTIVE 1
LRU_FILE  macro  include/linux/mmzone.h  157  #define LRU_FILE 2
lru_list  enum  include/linux/mmzone.h  159  enum lru_list {
for_each_lru  macro  include/linux/mmzone.h  168  #define for_each_lru(lru) for (lru = 0; lru < NR_LRU_LISTS; lru++)
for_each_evictable_lru  macro  include/linux/mmzone.h  170  #define for_each_evictable_lru(lru) for (lru = 0; lru <= LRU_ACTIVE_FILE; lru++)
is_file_lru  function  include/linux/mmzone.h  172  static inline int is_file_lru(enum lru_list lru)
is_active_lru  function  include/linux/mmzone.h  177  static inline int is_active_lru(enum lru_list lru)
is_unevictable_lru  function  include/linux/mmzone.h  182  static inline int is_unevictable_lru(enum lru_list lru)
zone_reclaim_stat  struct  include/linux/mmzone.h  187  struct zone_reclaim_stat {
lruvec  struct  include/linux/mmzone.h  200  struct lruvec {
LRU_ALL_FILE  macro  include/linux/mmzone.h  209  #define LRU_ALL_FILE (BIT(LRU_INACTIVE_FILE) | BIT(LRU_ACTIVE_FILE))
LRU_ALL_ANON  macro  include/linux/mmzone.h  210  #define LRU_ALL_ANON (BIT(LRU_INACTIVE_ANON) | BIT(LRU_ACTIVE_ANON))
LRU_ALL  macro  include/linux/mmzone.h  211  #define LRU_ALL ((1 << NR_LRU_LISTS) - 1)
ISOLATE_CLEAN  macro  include/linux/mmzone.h  214  #define ISOLATE_CLEAN ((__force isolate_mode_t)0x1)
ISOLATE_UNMAPPED  macro  include/linux/mmzone.h  216  #define ISOLATE_UNMAPPED ((__force isolate_mode_t)0x2)
ISOLATE_ASYNC_MIGRATE  macro  include/linux/mmzone.h  218  #define ISOLATE_ASYNC_MIGRATE ((__force isolate_mode_t)0x4)
ISOLATE_UNEVICTABLE  macro  include/linux/mmzone.h  220  #define ISOLATE_UNEVICTABLE ((__force isolate_mode_t)0x8)
zone_watermarks  enum  include/linux/mmzone.h  225  enum zone_watermarks {
min_wmark_pages  macro  include/linux/mmzone.h  232  #define min_wmark_pages(z) (z->watermark[WMARK_MIN])
low_wmark_pages  macro  include/linux/mmzone.h  233  #define low_wmark_pages(z) (z->watermark[WMARK_LOW])
high_wmark_pages  macro  include/linux/mmzone.h  234  #define high_wmark_pages(z) (z->watermark[WMARK_HIGH])
per_cpu_pages  struct  include/linux/mmzone.h  236  struct per_cpu_pages {
per_cpu_pageset  struct  include/linux/mmzone.h  245  struct per_cpu_pageset {
zone_type  enum  include/linux/mmzone.h  258  enum zone_type {
ZONES_SHIFT  macro  include/linux/mmzone.h  324  #define ZONES_SHIFT 2
zone  struct  include/linux/mmzone.h  329  struct zone {
zone_set_flag  function  include/linux/mmzone.h  516  static inline void zone_set_flag(struct zone *zone,zone_flags_t flag)
zone_test_and_set_flag  function  include/linux/mmzone.h  521  static inline int zone_test_and_set_flag(struct zone *zone,zone_flags_t flag)
zone_clear_flag  function  include/linux/mmzone.h  526  static inline void zone_clear_flag(struct zone *zone,zone_flags_t flag)
zone_is_reclaim_congested  function  include/linux/mmzone.h  531  static inline int zone_is_reclaim_congested(const struct zone *zone)
zone_is_reclaim_locked  function  include/linux/mmzone.h  536  static inline int zone_is_reclaim_locked(const struct zone *zone)
zone_is_oom_locked  function  include/linux/mmzone.h  541  static inline int zone_is_oom_locked(const struct zone *zone)
DEF_PRIORITY  macro  include/linux/mmzone.h  551  #define DEF_PRIORITY 12
MAX_ZONES_PER_ZONELIST  macro  include/linux/mmzone.h  554  #define MAX_ZONES_PER_ZONELIST (MAX_NUMNODES * MAX_NR_ZONES)
MAX_ZONELISTS  macro  include/linux/mmzone.h  633  #define MAX_ZONELISTS 1
zonelist_cache  struct  include/linux/mmzone.h  627  struct zonelist_cache {
zoneref  struct  include/linux/mmzone.h  641  struct zoneref {
zonelist  struct  include/linux/mmzone.h  663  struct zonelist {
node_active_region  struct  include/linux/mmzone.h  672  struct node_active_region {
pglist_data  struct  include/linux/mmzone.h  696  typedef struct pglist_data {
node_present_pages  macro  include/linux/mmzone.h  745  #define node_present_pages(nid) (NODE_DATA(nid)->node_present_pages)
node_spanned_pages  macro  include/linux/mmzone.h  746  #define node_spanned_pages(nid) (NODE_DATA(nid)->node_spanned_pages)
pgdat_page_nr  macro  include/linux/mmzone.h  750  #define pgdat_page_nr(pgdat,pagenr) pfn_to_page((pgdat)->node_start_pfn + (pagenr))
nid_page_nr  macro  include/linux/mmzone.h  752  #define nid_page_nr(nid,pagenr) pgdat_page_nr(NODE_DATA(nid),(pagenr))
node_start_pfn  macro  include/linux/mmzone.h  754  #define node_start_pfn(nid) (NODE_DATA(nid)->node_start_pfn)
node_end_pfn  macro  include/linux/mmzone.h  759  #define node_end_pfn(nid) ({ pg_data_t *__pgdat = NODE_DATA(nid); __pgdat->node_start_pfn + __pgdat->node_spanned_pages; })
build_all_zonelists  prototype  include/linux/mmzone.h  764  void build_all_zonelists(pg_data_t *pgdat,struct zone *zone);
wakeup_kswapd  prototype  include/linux/mmzone.h  765  void wakeup_kswapd(struct zone *zone,int order,enum zone_type classzone_idx);
zone_watermark_ok  prototype  include/linux/mmzone.h  767  bool zone_watermark_ok(struct zone *z,int order,unsigned long mark,int classzone_idx, int alloc_flags);
zone_watermark_ok_safe  prototype  include/linux/mmzone.h  769  bool zone_watermark_ok_safe(struct zone *z,int order,unsigned long mark,int classzone_idx, int alloc_flags);
memmap_context  enum  include/linux/mmzone.h  770  enum memmap_context {
init_currently_empty_zone  prototype  include/linux/mmzone.h  776  extern int init_currently_empty_zone(struct zone *zone,unsigned long start_pfn,unsigned long size,enum memmap_context context);
lruvec_init  prototype  include/linux/mmzone.h  778  extern void lruvec_init(struct lruvec *lruvec);
lruvec_zone  function  include/linux/mmzone.h  780  static inline struct zone *lruvec_zone(struct lruvec *lruvec)
memory_present  prototype  include/linux/mmzone.h  1224  void memory_present(int nid,unsigned long start,unsigned long end);
local_memory_node  function  include/linux/mmzone.h  798  static inline int local_memory_node(int node_id) { return node_id; };
node_memmap_size_bytes  prototype  include/linux/mmzone.h  1225  unsigned long __init node_memmap_size_bytes(int,unsigned long,unsigned long);
zone_idx  macro  include/linux/mmzone.h  808  #define zone_idx(zone) ((zone) - (zone)->zone_pgdat->node_zones)
populated_zone  function  include/linux/mmzone.h  810  static inline int populated_zone(struct zone *zone)
zone_movable_is_highmem  function  include/linux/mmzone.h  817  static inline int zone_movable_is_highmem(void)
is_highmem_idx  function  include/linux/mmzone.h  826  static inline int is_highmem_idx(enum zone_type idx)
is_normal_idx  function  include/linux/mmzone.h  836  static inline int is_normal_idx(enum zone_type idx)
is_highmem  function  include/linux/mmzone.h  847  static inline int is_highmem(struct zone *zone)
is_normal  function  include/linux/mmzone.h  859  static inline int is_normal(struct zone *zone)
is_dma32  function  include/linux/mmzone.h  864  static inline int is_dma32(struct zone *zone)
is_dma  function  include/linux/mmzone.h  873  static inline int is_dma(struct zone *zone)
min_free_kbytes_sysctl_handler  prototype  include/linux/mmzone.h  885  int min_free_kbytes_sysctl_handler(struct ctl_table *,int,void __user *, size_t *, loff_t *);
lowmem_reserve_ratio_sysctl_handler  prototype  include/linux/mmzone.h  888  int lowmem_reserve_ratio_sysctl_handler(struct ctl_table *,int,void __user *, size_t *, loff_t *);
percpu_pagelist_fraction_sysctl_handler  prototype  include/linux/mmzone.h  890  int percpu_pagelist_fraction_sysctl_handler(struct ctl_table *,int,void __user *, size_t *, loff_t *);
sysctl_min_unmapped_ratio_sysctl_handler  prototype  include/linux/mmzone.h  892  int sysctl_min_unmapped_ratio_sysctl_handler(struct ctl_table *,int,void __user *, size_t *, loff_t *);
sysctl_min_slab_ratio_sysctl_handler  prototype  include/linux/mmzone.h  894  int sysctl_min_slab_ratio_sysctl_handler(struct ctl_table *,int,void __user *, size_t *, loff_t *);
numa_zonelist_order_handler  prototype  include/linux/mmzone.h  897  extern int numa_zonelist_order_handler(struct ctl_table *,int,void __user *, size_t *, loff_t *);
NUMA_ZONELIST_ORDER_LEN  macro  include/linux/mmzone.h  899  #define NUMA_ZONELIST_ORDER_LEN 16
NODE_DATA  macro  include/linux/mmzone.h  904  #define NODE_DATA(nid) (&contig_page_data)
NODE_MEM_MAP  macro  include/linux/mmzone.h  905  #define NODE_MEM_MAP(nid) mem_map
first_online_pgdat  prototype  include/linux/mmzone.h  913  extern struct pglist_data *first_online_pgdat(void);
next_online_pgdat  prototype  include/linux/mmzone.h  914  extern struct pglist_data *next_online_pgdat(struct pglist_data *pgdat);
next_zone  prototype  include/linux/mmzone.h  915  extern struct zone *next_zone(struct zone *zone);
for_each_online_pgdat  macro  include/linux/mmzone.h  924  #define for_each_online_pgdat(pgdat) for (pgdat = first_online_pgdat(); pgdat; pgdat = next_online_pgdat(pgdat))
for_each_zone  macro  include/linux/mmzone.h  935  #define for_each_zone(zone) for (zone = (first_online_pgdat())->node_zones; zone; zone = next_zone(zone))
for_each_populated_zone  macro  include/linux/mmzone.h  943  #define for_each_populated_zone(zone) for (zone = (first_online_pgdat())->node_zones; zone; zone = next_zone(zone)) if (!populated_zone(zone)) ; /* do nothing */ else
zonelist_zone  function  include/linux/mmzone.h  945  static inline struct zone *zonelist_zone(struct zoneref *zoneref)
zonelist_zone_idx  function  include/linux/mmzone.h  950  static inline int zonelist_zone_idx(struct zoneref *zoneref)
zonelist_node_idx  function  include/linux/mmzone.h  955  static inline int zonelist_node_idx(struct zoneref *zoneref)
next_zones_zonelist  prototype  include/linux/mmzone.h  981  struct zoneref *next_zones_zonelist(struct zoneref *z,enum zone_type highest_zoneidx,nodemask_t *nodes,struct zone **zone);
first_zones_zonelist  function  include/linux/mmzone.h  998  static inline struct zoneref *first_zones_zonelist(struct zonelist *zonelist,enum zone_type highest_zoneidx,nodemask_t *nodes,struct zone **zone)
for_each_zone_zonelist_nodemask  macro  include/linux/mmzone.h  1019  #define for_each_zone_zonelist_nodemask(zone,z,zlist,highidx,nodemask) for (z = first_zones_zonelist(zlist, highidx, nodemask, &zone); zone; z = next_zones_zonelist(++z, highidx, nodemask, &zone)) 
for_each_zone_zonelist  macro  include/linux/mmzone.h  1030  #define for_each_zone_zonelist(zone,z,zlist,highidx) for_each_zone_zonelist_nodemask(zone, z, zlist, highidx, NULL)
early_pfn_to_nid  prototype  include/linux/mm.h  1372  extern int __meminit early_pfn_to_nid(unsigned long pfn);
pfn_to_nid  macro  include/linux/mmzone.h  1204  #define pfn_to_nid(pfn) (0)
SECTIONS_SHIFT  macro  include/linux/mmzone.h  1056  #define SECTIONS_SHIFT (MAX_PHYSMEM_BITS - SECTION_SIZE_BITS)
PA_SECTION_SHIFT  macro  include/linux/mmzone.h  1058  #define PA_SECTION_SHIFT (SECTION_SIZE_BITS)
PFN_SECTION_SHIFT  macro  include/linux/mmzone.h  1059  #define PFN_SECTION_SHIFT (SECTION_SIZE_BITS - PAGE_SHIFT)
NR_MEM_SECTIONS  macro  include/linux/mmzone.h  1061  #define NR_MEM_SECTIONS (1UL << SECTIONS_SHIFT)
PAGES_PER_SECTION  macro  include/linux/mmzone.h  1063  #define PAGES_PER_SECTION (1UL << PFN_SECTION_SHIFT)
PAGE_SECTION_MASK  macro  include/linux/mmzone.h  1064  #define PAGE_SECTION_MASK (~(PAGES_PER_SECTION-1))
SECTION_BLOCKFLAGS_BITS  macro  include/linux/mmzone.h  1067  #define SECTION_BLOCKFLAGS_BITS ((1UL << (PFN_SECTION_SHIFT - pageblock_order)) * NR_PAGEBLOCK_BITS)
pfn_to_section_nr  macro  include/linux/mmzone.h  1073  #define pfn_to_section_nr(pfn) ((pfn) >> PFN_SECTION_SHIFT)
section_nr_to_pfn  macro  include/linux/mmzone.h  1074  #define section_nr_to_pfn(sec) ((sec) << PFN_SECTION_SHIFT)
SECTION_ALIGN_UP  macro  include/linux/mmzone.h  1076  #define SECTION_ALIGN_UP(pfn) (((pfn) + PAGES_PER_SECTION - 1) & PAGE_SECTION_MASK)
SECTION_ALIGN_DOWN  macro  include/linux/mmzone.h  1077  #define SECTION_ALIGN_DOWN(pfn) ((pfn) & PAGE_SECTION_MASK)
mem_section  struct  include/linux/mmzone.h  1081  struct mem_section {
SECTIONS_PER_ROOT  macro  include/linux/mmzone.h  1111  #define SECTIONS_PER_ROOT 1
SECTION_NR_TO_ROOT  macro  include/linux/mmzone.h  1114  #define SECTION_NR_TO_ROOT(sec) ((sec) / SECTIONS_PER_ROOT)
NR_SECTION_ROOTS  macro  include/linux/mmzone.h  1115  #define NR_SECTION_ROOTS DIV_ROUND_UP(NR_MEM_SECTIONS,SECTIONS_PER_ROOT)
SECTION_ROOT_MASK  macro  include/linux/mmzone.h  1116  #define SECTION_ROOT_MASK (SECTIONS_PER_ROOT - 1)
__nr_to_section  function  include/linux/mmzone.h  1124  static inline struct mem_section *__nr_to_section(unsigned long nr)
__section_nr  prototype  include/linux/mmzone.h  1130  extern int __section_nr(struct mem_section* ms);
usemap_size  prototype  include/linux/mmzone.h  1131  extern unsigned long usemap_size(void);
SECTION_MARKED_PRESENT  macro  include/linux/mmzone.h  1138  #define SECTION_MARKED_PRESENT (1UL<<0)
SECTION_HAS_MEM_MAP  macro  include/linux/mmzone.h  1139  #define SECTION_HAS_MEM_MAP (1UL<<1)
SECTION_MAP_LAST_BIT  macro  include/linux/mmzone.h  1140  #define SECTION_MAP_LAST_BIT (1UL<<2)
SECTION_MAP_MASK  macro  include/linux/mmzone.h  1141  #define SECTION_MAP_MASK (~(SECTION_MAP_LAST_BIT-1))
SECTION_NID_SHIFT  macro  include/linux/mmzone.h  1142  #define SECTION_NID_SHIFT 2
__section_mem_map_addr  function  include/linux/mmzone.h  1144  static inline struct page *__section_mem_map_addr(struct mem_section *section)
present_section  function  include/linux/mmzone.h  1151  static inline int present_section(struct mem_section *section)
present_section_nr  function  include/linux/mmzone.h  1156  static inline int present_section_nr(unsigned long nr)
valid_section  function  include/linux/mmzone.h  1161  static inline int valid_section(struct mem_section *section)
valid_section_nr  function  include/linux/mmzone.h  1166  static inline int valid_section_nr(unsigned long nr)
__pfn_to_section  function  include/linux/mmzone.h  1171  static inline struct mem_section *__pfn_to_section(unsigned long pfn)
pfn_present  function  include/linux/mmzone.h  1185  static inline int pfn_present(unsigned long pfn)
early_pfn_valid  macro  include/linux/mmzone.h  1221  #define early_pfn_valid(pfn) (1)
sparse_init  macro  include/linux/mmzone.h  1210  #define sparse_init() do {} while (0)
sparse_index_init  macro  include/linux/mmzone.h  1211  #define sparse_index_init(_sec,_nid) do {} while (0)
early_pfn_in_nid  macro  include/linux/mmzone.h  1217  #define early_pfn_in_nid(pfn,nid) (1)
pfn_valid_within  macro  include/linux/mmzone.h  1236  #define pfn_valid_within(pfn) (1)
memmap_valid_within  function  include/linux/mmzone.h  1259  static inline int memmap_valid_within(unsigned long pfn,struct page *page, struct zone *zone)
_ASM_X86_TOPOLOGY_H  macro  arch/x86/include/asm/topology.h  26  #define _ASM_X86_TOPOLOGY_H
ENABLE_TOPO_DEFINES  macro  arch/x86/include/asm/topology.h  34  # define ENABLE_TOPO_DEFINES
__cpu_to_node  prototype  arch/x86/include/asm/topology.h  57  extern int __cpu_to_node(int cpu);
early_cpu_to_node  function  arch/x86/include/asm/topology.h  109  static inline int early_cpu_to_node(int cpu)
cpumask_of_node  function  arch/x86/include/asm/topology.h  79  static inline const struct cpumask *cpumask_of_node(int node)
setup_node_to_cpumask_map  function  arch/x86/include/asm/topology.h  114  static inline void setup_node_to_cpumask_map(void) { }
parent_node  macro  arch/x86/include/asm/topology.h  91  #define parent_node(node) (node)
pcibus_to_node  macro  arch/x86/include/asm/topology.h  93  #define pcibus_to_node(bus) __pcibus_to_node(bus)
__node_distance  prototype  arch/x86/include/asm/topology.h  95  extern int __node_distance(int,int);
cpu_coregroup_mask  prototype  arch/x86/include/asm/topology.h  120  extern const struct cpumask *cpu_coregroup_mask(int cpu);
arch_provides_topology_pointers  macro  arch/x86/include/asm/topology.h  129  #define arch_provides_topology_pointers yes
arch_fix_phys_package_id  function  arch/x86/include/asm/topology.h  132  static inline void arch_fix_phys_package_id(int num,u32 slot)
x86_pci_root_bus_resources  prototype  arch/x86/include/asm/topology.h  137  void x86_pci_root_bus_resources(int bus,struct list_head *resources);
mc_capable  macro  arch/x86/include/asm/topology.h  141  #define mc_capable() ((boot_cpu_data.x86_max_cores > 1) && (cpumask_weight(cpu_core_mask(0)) != nr_cpu_ids))
smt_capable  macro  arch/x86/include/asm/topology.h  142  #define smt_capable() (smp_num_siblings > 1)
get_mp_bus_to_node  function  arch/x86/include/asm/topology.h  149  static inline int get_mp_bus_to_node(int busnum)
set_mp_bus_to_node  function  arch/x86/include/asm/topology.h  153  static inline void set_mp_bus_to_node(int busnum,int node)
_LINUX_PERCPU_COUNTER_H  macro  include/linux/percpu_counter.h  2  #define _LINUX_PERCPU_COUNTER_H
percpu_counter  struct  include/linux/percpu_counter.h  88  struct percpu_counter {
__percpu_counter_init  prototype  include/linux/percpu_counter.h  30  int __percpu_counter_init(struct percpu_counter *fbc,s64 amount,struct lock_class_key *key);
percpu_counter_init  function  include/linux/percpu_counter.h  92  static inline int percpu_counter_init(struct percpu_counter *fbc,s64 amount)
percpu_counter_destroy  function  include/linux/percpu_counter.h  98  static inline void percpu_counter_destroy(struct percpu_counter *fbc)
percpu_counter_set  function  include/linux/percpu_counter.h  102  static inline void percpu_counter_set(struct percpu_counter *fbc,s64 amount)
__percpu_counter_add  function  include/linux/percpu_counter.h  126  __percpu_counter_add(struct percpu_counter *fbc,s64 amount,s32 batch)
__percpu_counter_sum  prototype  include/linux/percpu_counter.h  42  s64 __percpu_counter_sum(struct percpu_counter *fbc);
percpu_counter_compare  function  include/linux/percpu_counter.h  107  static inline int percpu_counter_compare(struct percpu_counter *fbc,s64 rhs)
percpu_counter_add  function  include/linux/percpu_counter.h  118  percpu_counter_add(struct percpu_counter *fbc,s64 amount)
percpu_counter_sum_positive  function  include/linux/percpu_counter.h  145  static inline s64 percpu_counter_sum_positive(struct percpu_counter *fbc)
percpu_counter_sum  function  include/linux/percpu_counter.h  150  static inline s64 percpu_counter_sum(struct percpu_counter *fbc)
percpu_counter_read  function  include/linux/percpu_counter.h  131  static inline s64 percpu_counter_read(struct percpu_counter *fbc)
percpu_counter_read_positive  function  include/linux/percpu_counter.h  140  static inline s64 percpu_counter_read_positive(struct percpu_counter *fbc)
percpu_counter_initialized  function  include/linux/percpu_counter.h  155  static inline int percpu_counter_initialized(struct percpu_counter *fbc)
percpu_counter_inc  function  include/linux/percpu_counter.h  162  static inline void percpu_counter_inc(struct percpu_counter *fbc)
percpu_counter_dec  function  include/linux/percpu_counter.h  167  static inline void percpu_counter_dec(struct percpu_counter *fbc)
percpu_counter_sub  function  include/linux/percpu_counter.h  172  static inline void percpu_counter_sub(struct percpu_counter *fbc,s64 amount)
__LINUX_MUTEX_H  macro  include/linux/mutex.h  11  #define __LINUX_MUTEX_H
mutex  struct  include/linux/mutex.h  48  struct mutex {
mutex_waiter  struct  include/linux/mutex.h  69  struct mutex_waiter {
__DEBUG_MUTEX_INITIALIZER  macro  include/linux/mutex.h  80  # define __DEBUG_MUTEX_INITIALIZER(lockname)
mutex_init  macro  include/linux/mutex.h  94  # define mutex_init(mutex) do { static struct lock_class_key __key; __mutex_init((mutex), #mutex, &__key); } while (0)
mutex_destroy  function  include/linux/mutex.h  95  static inline void mutex_destroy(struct mutex *lock) {}
__DEP_MAP_MUTEX_INITIALIZER  macro  include/linux/mutex.h  102  # define __DEP_MAP_MUTEX_INITIALIZER(lockname)
__MUTEX_INITIALIZER  macro  include/linux/mutex.h  110  #define __MUTEX_INITIALIZER(lockname) { .count = ATOMIC_INIT(1) , .wait_lock = __SPIN_LOCK_UNLOCKED(lockname.wait_lock) , .wait_list = LIST_HEAD_INIT(lockname.wait_list) __DEBUG_MUTEX_INITIALIZER(lockname) __DEP_MAP_MUTEX_INITIALIZER(lockname) }
DEFINE_MUTEX  macro  include/linux/mutex.h  113  #define DEFINE_MUTEX(mutexname) struct mutex mutexname = __MUTEX_INITIALIZER(mutexname)
__mutex_init  prototype  include/linux/mutex.h  116  extern void __mutex_init(struct mutex *lock,const char *name,struct lock_class_key *key);
mutex_is_locked  function  include/linux/mutex.h  124  static inline int mutex_is_locked(struct mutex *lock)
mutex_lock_nested  macro  include/linux/mutex.h  156  # define mutex_lock_nested(lock,subclass) mutex_lock(lock)
_mutex_lock_nest_lock  prototype  include/linux/mutex.h  135  extern void _mutex_lock_nest_lock(struct mutex *lock,struct lockdep_map *nest_lock);
mutex_lock_interruptible_nested  macro  include/linux/mutex.h  157  # define mutex_lock_interruptible_nested(lock,subclass) mutex_lock_interruptible(lock)
mutex_lock_killable_nested  macro  include/linux/mutex.h  158  # define mutex_lock_killable_nested(lock,subclass) mutex_lock_killable(lock)
mutex_lock  prototype  include/linux/mutex.h  152  extern void mutex_lock(struct mutex *lock);
mutex_lock_interruptible  prototype  include/linux/mutex.h  153  extern int __must_check mutex_lock_interruptible(struct mutex *lock);
mutex_lock_killable  prototype  include/linux/mutex.h  154  extern int __must_check mutex_lock_killable(struct mutex *lock);
mutex_lock_nest_lock  macro  include/linux/mutex.h  159  # define mutex_lock_nest_lock(lock,nest_lock) mutex_lock(lock)
mutex_trylock  prototype  include/linux/mutex.h  168  extern int mutex_trylock(struct mutex *lock);
mutex_unlock  prototype  include/linux/mutex.h  169  extern void mutex_unlock(struct mutex *lock);
atomic_dec_and_mutex_lock  prototype  include/linux/mutex.h  170  extern int atomic_dec_and_mutex_lock(atomic_t *cnt,struct mutex *lock);
arch_mutex_cpu_relax  macro  include/linux/mutex.h  173  #define arch_mutex_cpu_relax() cpu_relax()
_UAPI_LINUX_SECCOMP_H  macro  include/uapi/linux/seccomp.h  2  #define _UAPI_LINUX_SECCOMP_H
SECCOMP_MODE_DISABLED  macro  include/uapi/linux/seccomp.h  9  #define SECCOMP_MODE_DISABLED 0
SECCOMP_MODE_STRICT  macro  include/uapi/linux/seccomp.h  10  #define SECCOMP_MODE_STRICT 1
SECCOMP_MODE_FILTER  macro  include/uapi/linux/seccomp.h  11  #define SECCOMP_MODE_FILTER 2
SECCOMP_RET_KILL  macro  include/uapi/linux/seccomp.h  21  #define SECCOMP_RET_KILL 0x00000000U
SECCOMP_RET_TRAP  macro  include/uapi/linux/seccomp.h  22  #define SECCOMP_RET_TRAP 0x00030000U
SECCOMP_RET_ERRNO  macro  include/uapi/linux/seccomp.h  23  #define SECCOMP_RET_ERRNO 0x00050000U
SECCOMP_RET_TRACE  macro  include/uapi/linux/seccomp.h  24  #define SECCOMP_RET_TRACE 0x7ff00000U
SECCOMP_RET_ALLOW  macro  include/uapi/linux/seccomp.h  25  #define SECCOMP_RET_ALLOW 0x7fff0000U
SECCOMP_RET_ACTION  macro  include/uapi/linux/seccomp.h  28  #define SECCOMP_RET_ACTION 0x7fff0000U
SECCOMP_RET_DATA  macro  include/uapi/linux/seccomp.h  29  #define SECCOMP_RET_DATA 0x0000ffffU
seccomp_data  struct  include/uapi/linux/seccomp.h  40  struct seccomp_data {
__LINUX_SEQLOCK_H  macro  include/linux/seqlock.h  2  #define __LINUX_SEQLOCK_H
__SEQLOCK_UNLOCKED  macro  include/linux/seqlock.h  43  #define __SEQLOCK_UNLOCKED(lockname) { 0, __SPIN_LOCK_UNLOCKED(lockname) }
seqlock_init  macro  include/linux/seqlock.h  49  #define seqlock_init(x) do { (x)->sequence = 0; spin_lock_init(&(x)->lock); } while (0)
DEFINE_SEQLOCK  macro  include/linux/seqlock.h  52  #define DEFINE_SEQLOCK(x) seqlock_t x = __SEQLOCK_UNLOCKED(x)
write_seqlock  function  include/linux/seqlock.h  58  static inline void write_seqlock(seqlock_t *sl)
write_sequnlock  function  include/linux/seqlock.h  65  static inline void write_sequnlock(seqlock_t *sl)
write_tryseqlock  function  include/linux/seqlock.h  72  static inline int write_tryseqlock(seqlock_t *sl)
read_seqbegin  function  include/linux/seqlock.h  84  static __always_inline unsigned read_seqbegin(const seqlock_t *sl)
read_seqretry  function  include/linux/seqlock.h  104  static __always_inline int read_seqretry(const seqlock_t *sl,unsigned start)
seqcount  struct  include/linux/seqlock.h  119  typedef struct seqcount {
SEQCNT_ZERO  macro  include/linux/seqlock.h  123  #define SEQCNT_ZERO { 0 }
seqcount_init  macro  include/linux/seqlock.h  124  #define seqcount_init(x) do { *(x) = (seqcount_t) SEQCNT_ZERO; } while (0)
__read_seqcount_begin  function  include/linux/seqlock.h  139  static inline unsigned __read_seqcount_begin(const seqcount_t *s)
read_seqcount_begin  function  include/linux/seqlock.h  161  static inline unsigned read_seqcount_begin(const seqcount_t *s)
raw_seqcount_begin  function  include/linux/seqlock.h  182  static inline unsigned raw_seqcount_begin(const seqcount_t *s)
__read_seqcount_retry  function  include/linux/seqlock.h  203  static inline int __read_seqcount_retry(const seqcount_t *s,unsigned start)
read_seqcount_retry  function  include/linux/seqlock.h  218  static inline int read_seqcount_retry(const seqcount_t *s,unsigned start)
write_seqcount_begin  function  include/linux/seqlock.h  230  static inline void write_seqcount_begin(seqcount_t *s)
write_seqcount_end  function  include/linux/seqlock.h  236  static inline void write_seqcount_end(seqcount_t *s)
write_seqcount_barrier  function  include/linux/seqlock.h  249  static inline void write_seqcount_barrier(seqcount_t *s)
write_seqlock_irqsave  macro  include/linux/seqlock.h  259  #define write_seqlock_irqsave(lock,flags) do { local_irq_save(flags); write_seqlock(lock); } while (0)
write_seqlock_irq  macro  include/linux/seqlock.h  261  #define write_seqlock_irq(lock) do { local_irq_disable();   write_seqlock(lock); } while (0)
write_seqlock_bh  macro  include/linux/seqlock.h  263  #define write_seqlock_bh(lock) do { local_bh_disable();    write_seqlock(lock); } while (0)
write_sequnlock_irqrestore  macro  include/linux/seqlock.h  266  #define write_sequnlock_irqrestore(lock,flags) do { write_sequnlock(lock); local_irq_restore(flags); } while(0)
write_sequnlock_irq  macro  include/linux/seqlock.h  268  #define write_sequnlock_irq(lock) do { write_sequnlock(lock); local_irq_enable(); } while(0)
write_sequnlock_bh  macro  include/linux/seqlock.h  270  #define write_sequnlock_bh(lock) do { write_sequnlock(lock); local_bh_enable(); } while(0)
read_seqbegin_irqsave  macro  include/linux/seqlock.h  273  #define read_seqbegin_irqsave(lock,flags) ({ local_irq_save(flags);   read_seqbegin(lock); })
read_seqretry_irqrestore  macro  include/linux/seqlock.h  280  #define read_seqretry_irqrestore(lock,iv,flags) ({ int ret = read_seqretry(lock, iv); local_irq_restore(flags); ret; })
__LINUX_LOCKDEP_H  macro  include/linux/lockdep.h  10  #define __LINUX_LOCKDEP_H
XXX_LOCK_USAGE_STATES  macro  include/linux/lockdep.h  30  #define XXX_LOCK_USAGE_STATES (1+3*4)
MAX_LOCKDEP_SUBCLASSES  macro  include/linux/lockdep.h  32  #define MAX_LOCKDEP_SUBCLASSES 8UL
NR_LOCKDEP_CACHING_CLASSES  macro  include/linux/lockdep.h  43  #define NR_LOCKDEP_CACHING_CLASSES 2
lockdep_subclass_key  struct  include/linux/lockdep.h  50  struct lockdep_subclass_key {
lock_class_key  struct  include/linux/lockdep.h  409  struct lock_class_key { };
LOCKSTAT_POINTS  macro  include/linux/lockdep.h  60  #define LOCKSTAT_POINTS 4
lock_class  struct  include/linux/lockdep.h  65  struct lock_class {
lock_time  struct  include/linux/lockdep.h  114  struct lock_time {
bounce_type  enum  include/linux/lockdep.h  121  enum bounce_type {
lock_class_stats  struct  include/linux/lockdep.h  132  struct lock_class_stats {
lock_stats  prototype  include/linux/lockdep.h  142  struct lock_class_stats lock_stats(struct lock_class *class);
clear_lock_stats  prototype  include/linux/lockdep.h  143  void clear_lock_stats(struct lock_class *class);
lockdep_map  struct  include/linux/lockdep.h  150  struct lockdep_map {
lockdep_copy_map  function  include/linux/lockdep.h  161  static inline void lockdep_copy_map(struct lockdep_map *to,struct lockdep_map *from)
lock_list  struct  include/linux/lockdep.h  182  struct lock_list {
lock_chain  struct  include/linux/lockdep.h  198  struct lock_chain {
MAX_LOCKDEP_KEYS_BITS  macro  include/linux/lockdep.h  206  #define MAX_LOCKDEP_KEYS_BITS 13
MAX_LOCKDEP_KEYS  macro  include/linux/lockdep.h  212  #define MAX_LOCKDEP_KEYS ((1UL << MAX_LOCKDEP_KEYS_BITS) - 1)
held_lock  struct  include/linux/lockdep.h  214  struct held_lock {
lockdep_init  macro  include/linux/lockdep.h  383  # define lockdep_init() do { } while (0)
lockdep_info  macro  include/linux/lockdep.h  384  # define lockdep_info() do { } while (0)
lockdep_reset  macro  include/linux/lockdep.h  403  # define lockdep_reset() do { debug_locks = 1; } while (0)
lockdep_reset_lock  prototype  include/linux/lockdep.h  266  extern void lockdep_reset_lock(struct lockdep_map *lock);
lockdep_free_key_range  macro  include/linux/lockdep.h  404  # define lockdep_free_key_range(start,size) do { } while (0)
lockdep_sys_exit  macro  include/linux/lockdep.h  405  # define lockdep_sys_exit() do { } while (0)
lockdep_off  function  include/linux/lockdep.h  368  static inline void lockdep_off(void)
lockdep_on  function  include/linux/lockdep.h  372  static inline void lockdep_on(void)
lockdep_init_map  macro  include/linux/lockdep.h  386  # define lockdep_init_map(lock,name,key,sub) do { (void)(name); (void)(key); } while (0)
STATIC_LOCKDEP_MAP_INIT  macro  include/linux/lockdep.h  287  #define STATIC_LOCKDEP_MAP_INIT(_name,_key) { .name = (_name), .key = (void *)(_key), }
lockdep_set_class  macro  include/linux/lockdep.h  387  # define lockdep_set_class(lock,key) do { (void)(key); } while (0)
lockdep_set_class_and_name  macro  include/linux/lockdep.h  389  # define lockdep_set_class_and_name(lock,key,name) do { (void)(key); (void)(name); } while (0)
lockdep_set_class_and_subclass  macro  include/linux/lockdep.h  391  #define lockdep_set_class_and_subclass(lock,key,sub) do { (void)(key); } while (0)
lockdep_set_subclass  macro  include/linux/lockdep.h  392  #define lockdep_set_subclass(lock,sub) do { } while (0)
lockdep_set_novalidate_class  macro  include/linux/lockdep.h  394  #define lockdep_set_novalidate_class(lock) do { } while (0)
lockdep_match_class  macro  include/linux/lockdep.h  310  #define lockdep_match_class(lock,key) lockdep_match_key(&(lock)->dep_map,key)
lockdep_match_key  function  include/linux/lockdep.h  313  static inline int lockdep_match_key(struct lockdep_map *lock,struct lock_class_key *key)
lock_acquire  macro  include/linux/lockdep.h  376  # define lock_acquire(l,s,t,r,c,n,i) do { } while (0)
lock_release  macro  include/linux/lockdep.h  377  # define lock_release(l,n,i) do { } while (0)
lockdep_is_held  macro  include/linux/lockdep.h  340  #define lockdep_is_held(lock) lock_is_held(&(lock)->dep_map)
lock_is_held  prototype  include/linux/lockdep.h  342  extern int lock_is_held(struct lockdep_map *lock);
lock_set_class  macro  include/linux/lockdep.h  378  # define lock_set_class(l,n,k,s,i) do { } while (0)
lock_set_subclass  macro  include/linux/lockdep.h  379  # define lock_set_subclass(l,s,i) do { } while (0)
lockdep_set_current_reclaim_state  macro  include/linux/lockdep.h  380  # define lockdep_set_current_reclaim_state(g) do { } while (0)
lockdep_clear_current_reclaim_state  macro  include/linux/lockdep.h  381  # define lockdep_clear_current_reclaim_state() do { } while (0)
lockdep_trace_alloc  macro  include/linux/lockdep.h  382  # define lockdep_trace_alloc(g) do { } while (0)
INIT_LOCKDEP  macro  include/linux/lockdep.h  402  # define INIT_LOCKDEP
lockdep_depth  macro  include/linux/lockdep.h  411  #define lockdep_depth(tsk) (0)
lockdep_assert_held  macro  include/linux/lockdep.h  413  #define lockdep_assert_held(l) do { } while (0)
lockdep_recursing  macro  include/linux/lockdep.h  415  #define lockdep_recursing(tsk) (0)
lock_contended  macro  include/linux/lockdep.h  435  #define lock_contended(lockdep_map,ip) do {} while (0)
lock_acquired  macro  include/linux/lockdep.h  436  #define lock_acquired(lockdep_map,ip) do {} while (0)
LOCK_CONTENDED  macro  include/linux/lockdep.h  439  #define LOCK_CONTENDED(_lock,try,lock) lock(_lock)
LOCK_CONTENDED_FLAGS  macro  include/linux/lockdep.h  456  #define LOCK_CONTENDED_FLAGS(_lock,try,lock,lockfl,flags) lockfl((_lock), (flags))
print_irqtrace_events  function  include/linux/lockdep.h  463  static inline void print_irqtrace_events(struct task_struct *curr)
SINGLE_DEPTH_NESTING  macro  include/linux/lockdep.h  473  #define SINGLE_DEPTH_NESTING 1
spin_acquire  macro  include/linux/lockdep.h  490  # define spin_acquire(l,s,t,i) do { } while (0)
spin_acquire_nest  macro  include/linux/lockdep.h  486  # define spin_acquire_nest(l,s,t,n,i) lock_acquire(l,s,t,0,1,NULL,i)
spin_release  macro  include/linux/lockdep.h  491  # define spin_release(l,n,i) do { } while (0)
rwlock_acquire  macro  include/linux/lockdep.h  504  # define rwlock_acquire(l,s,t,i) do { } while (0)
rwlock_acquire_read  macro  include/linux/lockdep.h  505  # define rwlock_acquire_read(l,s,t,i) do { } while (0)
rwlock_release  macro  include/linux/lockdep.h  506  # define rwlock_release(l,n,i) do { } while (0)
mutex_acquire  macro  include/linux/lockdep.h  519  # define mutex_acquire(l,s,t,i) do { } while (0)
mutex_acquire_nest  macro  include/linux/lockdep.h  520  # define mutex_acquire_nest(l,s,t,n,i) do { } while (0)
mutex_release  macro  include/linux/lockdep.h  521  # define mutex_release(l,n,i) do { } while (0)
rwsem_acquire  macro  include/linux/lockdep.h  536  # define rwsem_acquire(l,s,t,i) do { } while (0)
rwsem_acquire_nest  macro  include/linux/lockdep.h  537  # define rwsem_acquire_nest(l,s,t,n,i) do { } while (0)
rwsem_acquire_read  macro  include/linux/lockdep.h  538  # define rwsem_acquire_read(l,s,t,i) do { } while (0)
rwsem_release  macro  include/linux/lockdep.h  539  # define rwsem_release(l,n,i) do { } while (0)
lock_map_acquire  macro  include/linux/lockdep.h  552  # define lock_map_acquire(l) do { } while (0)
lock_map_acquire_read  macro  include/linux/lockdep.h  553  # define lock_map_acquire_read(l) do { } while (0)
lock_map_release  macro  include/linux/lockdep.h  554  # define lock_map_release(l) do { } while (0)
might_lock  macro  include/linux/lockdep.h  571  # define might_lock(lock) do { } while (0)
might_lock_read  macro  include/linux/lockdep.h  572  # define might_lock_read(lock) do { } while (0)
lockdep_rcu_suspicious  prototype  include/linux/lockdep.h  576  void lockdep_rcu_suspicious(const char *file,const int line,const char *s);
_LINUX_DEBUGOBJECTS_H  macro  include/linux/debugobjects.h  2  #define _LINUX_DEBUGOBJECTS_H
debug_obj_state  enum  include/linux/debugobjects.h  7  enum debug_obj_state {
debug_obj  struct  include/linux/debugobjects.h  27  struct debug_obj {
debug_obj_descr  struct  include/linux/debugobjects.h  52  struct debug_obj_descr {
debug_object_init  function  include/linux/debugobjects.h  85  debug_object_init (void *addr,struct debug_obj_descr *descr) { }
debug_object_init_on_stack  function  include/linux/debugobjects.h  87  debug_object_init_on_stack(void *addr,struct debug_obj_descr *descr) { }
debug_object_activate  function  include/linux/debugobjects.h  89  debug_object_activate (void *addr,struct debug_obj_descr *descr) { }
debug_object_deactivate  function  include/linux/debugobjects.h  91  debug_object_deactivate(void *addr,struct debug_obj_descr *descr) { }
debug_object_destroy  function  include/linux/debugobjects.h  93  debug_object_destroy (void *addr,struct debug_obj_descr *descr) { }
debug_object_free  function  include/linux/debugobjects.h  95  debug_object_free (void *addr,struct debug_obj_descr *descr) { }
debug_object_assert_init  function  include/linux/debugobjects.h  97  debug_object_assert_init(void *addr,struct debug_obj_descr *descr) { }
debug_object_active_state  prototype  include/linux/debugobjects.h  79  debug_object_active_state(void *addr,struct debug_obj_descr *descr,unsigned int expect, unsigned int next);
debug_objects_early_init  function  include/linux/debugobjects.h  99  static inline void debug_objects_early_init(void) { }
debug_objects_mem_init  function  include/linux/debugobjects.h  100  static inline void debug_objects_mem_init(void) { }
debug_check_no_obj_freed  function  include/linux/debugobjects.h  107  debug_check_no_obj_freed(const void *address,unsigned long size) { }
__LINUX_RCUTREE_H  macro  include/linux/rcutree.h  31  #define __LINUX_RCUTREE_H
rcu_init  function  include/linux/rcutiny.h  30  static inline void rcu_init(void)
rcu_note_context_switch  function  include/linux/rcutiny.h  113  static inline void rcu_note_context_switch(int cpu)
rcu_needs_cpu  function  include/linux/rcutiny.h  105  static inline int rcu_needs_cpu(int cpu,unsigned long *delta_jiffies)
rcu_cpu_stall_reset  function  include/linux/rcutiny.h  155  static inline void rcu_cpu_stall_reset(void)
rcu_virt_note_context_switch  function  include/linux/rcutiny.h  123  static inline void rcu_virt_note_context_switch(int cpu)
synchronize_rcu_bh  function  include/linux/rcutiny.h  67  static inline void synchronize_rcu_bh(void)
synchronize_sched_expedited  function  include/linux/rcutiny.h  77  static inline void synchronize_sched_expedited(void)
synchronize_rcu_expedited  prototype  include/linux/rcutiny.h  58  void synchronize_rcu_expedited(void);
kfree_call_rcu  function  include/linux/rcutiny.h  83  static inline void kfree_call_rcu(struct rcu_head *head,void (*func)(struct rcu_head *rcu))
synchronize_rcu_bh_expedited  function  include/linux/rcutiny.h  72  static inline void synchronize_rcu_bh_expedited(void)
rcu_barrier  function  include/linux/rcutiny.h  60  static inline void rcu_barrier(void)
rcu_barrier_bh  function  include/linux/rcutiny.h  34  static inline void rcu_barrier_bh(void)
rcu_barrier_sched  function  include/linux/rcutiny.h  39  static inline void rcu_barrier_sched(void)
rcu_batches_completed  function  include/linux/rcutiny.h  130  static inline long rcu_batches_completed(void)
rcu_batches_completed_bh  function  include/linux/rcutiny.h  138  static inline long rcu_batches_completed_bh(void)
rcu_batches_completed_sched  prototype  include/linux/rcutree.h  83  extern long rcu_batches_completed_sched(void);
rcu_force_quiescent_state  function  include/linux/rcutiny.h  143  static inline void rcu_force_quiescent_state(void)
rcu_bh_force_quiescent_state  function  include/linux/rcutiny.h  147  static inline void rcu_bh_force_quiescent_state(void)
rcu_sched_force_quiescent_state  function  include/linux/rcutiny.h  151  static inline void rcu_sched_force_quiescent_state(void)
rcu_scheduler_starting  function  include/linux/rcutiny.h  163  static inline void rcu_scheduler_starting(void)
__LINUX_TINY_H  macro  include/linux/rcutiny.h  26  #define __LINUX_TINY_H
rcu_preempt_note_context_switch  prototype  include/linux/rcutiny.h  102  void rcu_preempt_note_context_switch(void);
rcu_preempt_needs_cpu  prototype  include/linux/rcutiny.h  103  int rcu_preempt_needs_cpu(void);
_LINUX_PLIST_H_  macro  include/linux/plist.h  76  #define _LINUX_PLIST_H_
plist_head  struct  include/linux/plist.h  81  struct plist_head {
plist_node  struct  include/linux/plist.h  85  struct plist_node {
PLIST_HEAD_INIT  macro  include/linux/plist.h  98  #define PLIST_HEAD_INIT(head) { .node_list = LIST_HEAD_INIT((head).node_list) }
PLIST_NODE_INIT  macro  include/linux/plist.h  110  #define PLIST_NODE_INIT(node,__prio) { .prio  = (__prio), .prio_list = LIST_HEAD_INIT((node).prio_list), .node_list = LIST_HEAD_INIT((node).node_list), }
plist_head_init  function  include/linux/plist.h  117  plist_head_init(struct plist_head *head)
plist_node_init  function  include/linux/plist.h  127  static inline void plist_node_init(struct plist_node *node,int prio)
plist_add  prototype  include/linux/plist.h  134  extern void plist_add(struct plist_node *node,struct plist_head *head);
plist_del  prototype  include/linux/plist.h  135  extern void plist_del(struct plist_node *node,struct plist_head *head);
plist_for_each  macro  include/linux/plist.h  143  #define plist_for_each(pos,head) list_for_each_entry(pos, &(head)->node_list, node_list)
plist_for_each_safe  macro  include/linux/plist.h  154  #define plist_for_each_safe(pos,n,head) list_for_each_entry_safe(pos, n, &(head)->node_list, node_list)
plist_for_each_entry  macro  include/linux/plist.h  163  #define plist_for_each_entry(pos,head,mem) list_for_each_entry(pos, &(head)->node_list, mem.node_list)
plist_for_each_entry_safe  macro  include/linux/plist.h  175  #define plist_for_each_entry_safe(pos,n,head,m) list_for_each_entry_safe(pos, n, &(head)->node_list, m.node_list)
plist_head_empty  function  include/linux/plist.h  181  static inline int plist_head_empty(const struct plist_head *head)
plist_node_empty  function  include/linux/plist.h  190  static inline int plist_node_empty(const struct plist_node *node)
plist_first_entry  macro  include/linux/plist.h  211  # define plist_first_entry(head,type,member) container_of(plist_first(head), type, member)
plist_last_entry  macro  include/linux/plist.h  228  # define plist_last_entry(head,type,member) container_of(plist_last(head), type, member)
plist_first  function  include/linux/plist.h  237  static inline struct plist_node *plist_first(const struct plist_head *head)
plist_last  function  include/linux/plist.h  249  static inline struct plist_node *plist_last(const struct plist_head *head)
_UAPI_LINUX_TIME_H  macro  include/uapi/linux/time.h  2  #define _UAPI_LINUX_TIME_H
_STRUCT_TIMESPEC  macro  include/uapi/linux/time.h  8  #define _STRUCT_TIMESPEC
timespec  struct  include/uapi/linux/time.h  9  struct timespec {
timeval  struct  include/uapi/linux/time.h  15  struct timeval {
timezone  struct  include/uapi/linux/time.h  20  struct timezone {
ITIMER_REAL  macro  include/uapi/linux/time.h  30  #define ITIMER_REAL 0
ITIMER_VIRTUAL  macro  include/uapi/linux/time.h  31  #define ITIMER_VIRTUAL 1
ITIMER_PROF  macro  include/uapi/linux/time.h  32  #define ITIMER_PROF 2
itimerspec  struct  include/uapi/linux/time.h  34  struct itimerspec {
itimerval  struct  include/uapi/linux/time.h  39  struct itimerval {
CLOCK_REALTIME  macro  include/uapi/linux/time.h  47  #define CLOCK_REALTIME 0
CLOCK_MONOTONIC  macro  include/uapi/linux/time.h  48  #define CLOCK_MONOTONIC 1
CLOCK_PROCESS_CPUTIME_ID  macro  include/uapi/linux/time.h  49  #define CLOCK_PROCESS_CPUTIME_ID 2
CLOCK_THREAD_CPUTIME_ID  macro  include/uapi/linux/time.h  50  #define CLOCK_THREAD_CPUTIME_ID 3
CLOCK_MONOTONIC_RAW  macro  include/uapi/linux/time.h  51  #define CLOCK_MONOTONIC_RAW 4
CLOCK_REALTIME_COARSE  macro  include/uapi/linux/time.h  52  #define CLOCK_REALTIME_COARSE 5
CLOCK_MONOTONIC_COARSE  macro  include/uapi/linux/time.h  53  #define CLOCK_MONOTONIC_COARSE 6
CLOCK_BOOTTIME  macro  include/uapi/linux/time.h  54  #define CLOCK_BOOTTIME 7
CLOCK_REALTIME_ALARM  macro  include/uapi/linux/time.h  55  #define CLOCK_REALTIME_ALARM 8
CLOCK_BOOTTIME_ALARM  macro  include/uapi/linux/time.h  56  #define CLOCK_BOOTTIME_ALARM 9
CLOCK_SGI_CYCLE  macro  include/uapi/linux/time.h  61  #define CLOCK_SGI_CYCLE 10
MAX_CLOCKS  macro  include/uapi/linux/time.h  62  #define MAX_CLOCKS 16
CLOCKS_MASK  macro  include/uapi/linux/time.h  63  #define CLOCKS_MASK (CLOCK_REALTIME | CLOCK_MONOTONIC)
CLOCKS_MONO  macro  include/uapi/linux/time.h  64  #define CLOCKS_MONO CLOCK_MONOTONIC
TIMER_ABSTIME  macro  include/uapi/linux/time.h  69  #define TIMER_ABSTIME 0x01
_UAPI_LINUX_RESOURCE_H  macro  include/uapi/linux/resource.h  2  #define _UAPI_LINUX_RESOURCE_H
RUSAGE_SELF  macro  include/uapi/linux/resource.h  18  #define RUSAGE_SELF 0
RUSAGE_CHILDREN  macro  include/uapi/linux/resource.h  19  #define RUSAGE_CHILDREN (-1)
RUSAGE_BOTH  macro  include/uapi/linux/resource.h  20  #define RUSAGE_BOTH (-2)
RUSAGE_THREAD  macro  include/uapi/linux/resource.h  21  #define RUSAGE_THREAD 1
rusage  struct  include/uapi/linux/resource.h  23  struct rusage {
RLIM64_INFINITY  macro  include/uapi/linux/resource.h  47  #define RLIM64_INFINITY (~0ULL)
rlimit64  struct  include/uapi/linux/resource.h  49  struct rlimit64 {
PRIO_MIN  macro  include/uapi/linux/resource.h  54  #define PRIO_MIN (-20)
PRIO_MAX  macro  include/uapi/linux/resource.h  55  #define PRIO_MAX 20
PRIO_PROCESS  macro  include/uapi/linux/resource.h  57  #define PRIO_PROCESS 0
PRIO_PGRP  macro  include/uapi/linux/resource.h  58  #define PRIO_PGRP 1
PRIO_USER  macro  include/uapi/linux/resource.h  59  #define PRIO_USER 2
_STK_LIM  macro  include/uapi/linux/resource.h  65  #define _STK_LIM (8*1024*1024)
MLOCK_LIMIT  macro  include/uapi/linux/resource.h  71  #define MLOCK_LIMIT ((PAGE_SIZE > 64*1024) ? PAGE_SIZE : 64*1024)
_LINUX_KTIME_H  macro  include/linux/ktime.h  22  #define _LINUX_KTIME_H
ktime  union  include/linux/ktime.h  46  union ktime {
ktime_set  function  include/linux/ktime.h  144  static inline ktime_t ktime_set(const long secs,const unsigned long nsecs)
ktime_sub  function  include/linux/ktime.h  156  static inline ktime_t ktime_sub(const ktime_t lhs,const ktime_t rhs)
ktime_add  function  include/linux/ktime.h  174  static inline ktime_t ktime_add(const ktime_t add1,const ktime_t add2)
ktime_add_ns  prototype  include/linux/ktime.h  200  extern ktime_t ktime_add_ns(const ktime_t kt,u64 nsec);
ktime_sub_ns  prototype  include/linux/ktime.h  209  extern ktime_t ktime_sub_ns(const ktime_t kt,u64 nsec);
timespec_to_ktime  function  include/linux/ktime.h  217  static inline ktime_t timespec_to_ktime(const struct timespec ts)
timeval_to_ktime  function  include/linux/ktime.h  229  static inline ktime_t timeval_to_ktime(const struct timeval tv)
ktime_to_timespec  function  include/linux/ktime.h  241  static inline struct timespec ktime_to_timespec(const ktime_t kt)
ktime_to_timeval  function  include/linux/ktime.h  253  static inline struct timeval ktime_to_timeval(const ktime_t kt)
ktime_to_ns  function  include/linux/ktime.h  266  static inline s64 ktime_to_ns(const ktime_t kt)
ktime_equal  function  include/linux/ktime.h  280  static inline int ktime_equal(const ktime_t cmp1,const ktime_t cmp2)
ktime_compare  function  include/linux/ktime.h  295  static inline int ktime_compare(const ktime_t cmp1,const ktime_t cmp2)
ktime_to_us  function  include/linux/ktime.h  304  static inline s64 ktime_to_us(const ktime_t kt)
ktime_to_ms  function  include/linux/ktime.h  310  static inline s64 ktime_to_ms(const ktime_t kt)
ktime_us_delta  function  include/linux/ktime.h  316  static inline s64 ktime_us_delta(const ktime_t later,const ktime_t earlier)
ktime_add_us  function  include/linux/ktime.h  321  static inline ktime_t ktime_add_us(const ktime_t kt,const u64 usec)
ktime_sub_us  function  include/linux/ktime.h  326  static inline ktime_t ktime_sub_us(const ktime_t kt,const u64 usec)
ktime_add_safe  prototype  include/linux/ktime.h  331  extern ktime_t ktime_add_safe(const ktime_t lhs,const ktime_t rhs);
LOW_RES_NSEC  macro  include/linux/ktime.h  339  #define LOW_RES_NSEC TICK_NSEC
KTIME_LOW_RES  macro  include/linux/ktime.h  340  #define KTIME_LOW_RES (ktime_t){ .tv64 = LOW_RES_NSEC }
ktime_get_ts  prototype  include/linux/ktime.h  343  extern void ktime_get_ts(struct timespec *ts);
ktime_get_real_ts  macro  include/linux/ktime.h  346  #define ktime_get_real_ts(ts) getnstimeofday(ts)
ns_to_ktime  function  include/linux/ktime.h  348  static inline ktime_t ns_to_ktime(u64 ns)
_LINUX_TIMERQUEUE_H  macro  include/linux/timerqueue.h  2  #define _LINUX_TIMERQUEUE_H
timerqueue_node  struct  include/linux/timerqueue.h  8  struct timerqueue_node {
timerqueue_head  struct  include/linux/timerqueue.h  13  struct timerqueue_head {
timerqueue_add  prototype  include/linux/timerqueue.h  20  extern void timerqueue_add(struct timerqueue_head *head,struct timerqueue_node *node);
timerqueue_del  prototype  include/linux/timerqueue.h  22  extern void timerqueue_del(struct timerqueue_head *head,struct timerqueue_node *node);
timerqueue_iterate_next  prototype  include/linux/timerqueue.h  23  extern struct timerqueue_node *timerqueue_iterate_next(
timerqueue_getnext  function  include/linux/timerqueue.h  35  struct timerqueue_node *timerqueue_getnext(struct timerqueue_head *head)
timerqueue_init  function  include/linux/timerqueue.h  40  static inline void timerqueue_init(struct timerqueue_node *node)
timerqueue_init_head  function  include/linux/timerqueue.h  45  static inline void timerqueue_init_head(struct timerqueue_head *head)
_LINUX_KEY_H  macro  include/linux/key.h  16  #define _LINUX_KEY_H
KEY_DEBUGGING  macro  include/linux/key.h  39  #undef KEY_DEBUGGING
KEY_POS_VIEW  macro  include/linux/key.h  41  #define KEY_POS_VIEW 0x01000000
KEY_POS_READ  macro  include/linux/key.h  42  #define KEY_POS_READ 0x02000000
KEY_POS_WRITE  macro  include/linux/key.h  43  #define KEY_POS_WRITE 0x04000000
KEY_POS_SEARCH  macro  include/linux/key.h  44  #define KEY_POS_SEARCH 0x08000000
KEY_POS_LINK  macro  include/linux/key.h  45  #define KEY_POS_LINK 0x10000000
KEY_POS_SETATTR  macro  include/linux/key.h  46  #define KEY_POS_SETATTR 0x20000000
KEY_POS_ALL  macro  include/linux/key.h  47  #define KEY_POS_ALL 0x3f000000
KEY_USR_VIEW  macro  include/linux/key.h  49  #define KEY_USR_VIEW 0x00010000
KEY_USR_READ  macro  include/linux/key.h  50  #define KEY_USR_READ 0x00020000
KEY_USR_WRITE  macro  include/linux/key.h  51  #define KEY_USR_WRITE 0x00040000
KEY_USR_SEARCH  macro  include/linux/key.h  52  #define KEY_USR_SEARCH 0x00080000
KEY_USR_LINK  macro  include/linux/key.h  53  #define KEY_USR_LINK 0x00100000
KEY_USR_SETATTR  macro  include/linux/key.h  54  #define KEY_USR_SETATTR 0x00200000
KEY_USR_ALL  macro  include/linux/key.h  55  #define KEY_USR_ALL 0x003f0000
KEY_GRP_VIEW  macro  include/linux/key.h  57  #define KEY_GRP_VIEW 0x00000100
KEY_GRP_READ  macro  include/linux/key.h  58  #define KEY_GRP_READ 0x00000200
KEY_GRP_WRITE  macro  include/linux/key.h  59  #define KEY_GRP_WRITE 0x00000400
KEY_GRP_SEARCH  macro  include/linux/key.h  60  #define KEY_GRP_SEARCH 0x00000800
KEY_GRP_LINK  macro  include/linux/key.h  61  #define KEY_GRP_LINK 0x00001000
KEY_GRP_SETATTR  macro  include/linux/key.h  62  #define KEY_GRP_SETATTR 0x00002000
KEY_GRP_ALL  macro  include/linux/key.h  63  #define KEY_GRP_ALL 0x00003f00
KEY_OTH_VIEW  macro  include/linux/key.h  65  #define KEY_OTH_VIEW 0x00000001
KEY_OTH_READ  macro  include/linux/key.h  66  #define KEY_OTH_READ 0x00000002
KEY_OTH_WRITE  macro  include/linux/key.h  67  #define KEY_OTH_WRITE 0x00000004
KEY_OTH_SEARCH  macro  include/linux/key.h  68  #define KEY_OTH_SEARCH 0x00000008
KEY_OTH_LINK  macro  include/linux/key.h  69  #define KEY_OTH_LINK 0x00000010
KEY_OTH_SETATTR  macro  include/linux/key.h  70  #define KEY_OTH_SETATTR 0x00000020
KEY_OTH_ALL  macro  include/linux/key.h  71  #define KEY_OTH_ALL 0x0000003f
KEY_PERM_UNDEF  macro  include/linux/key.h  73  #define KEY_PERM_UNDEF 0xffffffff
make_key_ref  macro  include/linux/key.h  332  #define make_key_ref(k,p) NULL
key_ref_to_ptr  macro  include/linux/key.h  333  #define key_ref_to_ptr(k) NULL
is_key_possessed  macro  include/linux/key.h  334  #define is_key_possessed(k) 0
key  struct  include/linux/key.h  125  struct key {
KEY_DEBUG_MAGIC  macro  include/linux/key.h  152  #define KEY_DEBUG_MAGIC 0x18273645u
KEY_DEBUG_MAGIC_X  macro  include/linux/key.h  153  #define KEY_DEBUG_MAGIC_X 0xf8e9dacbu
KEY_FLAG_INSTANTIATED  macro  include/linux/key.h  157  #define KEY_FLAG_INSTANTIATED 0
KEY_FLAG_DEAD  macro  include/linux/key.h  158  #define KEY_FLAG_DEAD 1
KEY_FLAG_REVOKED  macro  include/linux/key.h  159  #define KEY_FLAG_REVOKED 2
KEY_FLAG_IN_QUOTA  macro  include/linux/key.h  160  #define KEY_FLAG_IN_QUOTA 3
KEY_FLAG_USER_CONSTRUCT  macro  include/linux/key.h  161  #define KEY_FLAG_USER_CONSTRUCT 4
KEY_FLAG_NEGATIVE  macro  include/linux/key.h  162  #define KEY_FLAG_NEGATIVE 5
KEY_FLAG_ROOT_CAN_CLEAR  macro  include/linux/key.h  163  #define KEY_FLAG_ROOT_CAN_CLEAR 6
KEY_FLAG_INVALIDATED  macro  include/linux/key.h  164  #define KEY_FLAG_INVALIDATED 7
key_alloc  prototype  include/linux/key.h  200  extern struct key *key_alloc(struct key_type *type,const char *desc,kuid_t uid, kgid_t gid,const struct cred *cred,key_perm_t perm,unsigned long flags);
KEY_ALLOC_IN_QUOTA  macro  include/linux/key.h  203  #define KEY_ALLOC_IN_QUOTA 0x0000
KEY_ALLOC_QUOTA_OVERRUN  macro  include/linux/key.h  204  #define KEY_ALLOC_QUOTA_OVERRUN 0x0001
KEY_ALLOC_NOT_IN_QUOTA  macro  include/linux/key.h  205  #define KEY_ALLOC_NOT_IN_QUOTA 0x0002
key_revoke  macro  include/linux/key.h  328  #define key_revoke(k) do { } while(0)
key_invalidate  macro  include/linux/key.h  329  #define key_invalidate(k) do { } while(0)
key_put  macro  include/linux/key.h  330  #define key_put(k) do { } while(0)
key_get  macro  include/linux/key.h  327  #define key_get(k) ({ NULL; })
key_ref_put  macro  include/linux/key.h  331  #define key_ref_put(k) do { } while(0)
request_key  prototype  include/linux/key.h  225  extern struct key *request_key(struct key_type *type,const char *description,const char *callout_info);
request_key_with_auxdata  prototype  include/linux/key.h  231  extern struct key *request_key_with_auxdata(struct key_type *type,const char *description,const void *callout_info,size_t callout_len,void *aux);
request_key_async  prototype  include/linux/key.h  236  extern struct key *request_key_async(struct key_type *type,const char *description,const void *callout_info,size_t callout_len);
request_key_async_with_auxdata  prototype  include/linux/key.h  242  extern struct key *request_key_async_with_auxdata(struct key_type *type,const char *description,const void *callout_info,size_t callout_len,void *aux);
wait_for_key_construction  prototype  include/linux/key.h  244  extern int wait_for_key_construction(struct key *key,bool intr);
key_validate  macro  include/linux/key.h  325  #define key_validate(k) 0
key_create_or_update  prototype  include/linux/key.h  254  extern key_ref_t key_create_or_update(key_ref_t keyring,const char *type,const char *description,const void *payload,size_t plen,key_perm_t perm,unsigned long flags);
key_update  prototype  include/linux/key.h  258  extern int key_update(key_ref_t key,const void *payload,size_t plen);
key_link  prototype  include/linux/key.h  261  extern int key_link(struct key *keyring,struct key *key);
key_unlink  prototype  include/linux/key.h  264  extern int key_unlink(struct key *keyring,struct key *key);
keyring_alloc  prototype  include/linux/key.h  270  extern struct key *keyring_alloc(const char *description,kuid_t uid,kgid_t gid,const struct cred *cred,key_perm_t perm,unsigned long flags,struct key *dest);
keyring_clear  prototype  include/linux/key.h  272  extern int keyring_clear(struct key *keyring);
keyring_search  prototype  include/linux/key.h  276  extern key_ref_t keyring_search(key_ref_t keyring,struct key_type *type,const char *description);
keyring_add_key  prototype  include/linux/key.h  279  extern int keyring_add_key(struct key *keyring,struct key *key);
key_lookup  prototype  include/linux/key.h  281  extern struct key *key_lookup(key_serial_t id);
key_serial  macro  include/linux/key.h  326  #define key_serial(k) 0
key_set_timeout  prototype  include/linux/key.h  288  extern void key_set_timeout(struct key *,unsigned);
key_is_instantiated  function  include/linux/key.h  297  static inline bool key_is_instantiated(const struct key *key)
rcu_dereference_key  macro  include/linux/key.h  305  #define rcu_dereference_key(KEY) (rcu_dereference_protected((KEY)->payload.rcudata, rwsem_is_locked(&((struct key *)(KEY))->sem)))
rcu_assign_keypointer  macro  include/linux/key.h  310  #define rcu_assign_keypointer(KEY,PAYLOAD) do { rcu_assign_pointer((KEY)->payload.rcudata, (PAYLOAD)); } while (0)
install_thread_keyring_to_cred  prototype  include/linux/key.h  318  extern int install_thread_keyring_to_cred(struct cred *cred);
key_fsuid_changed  macro  include/linux/key.h  335  #define key_fsuid_changed(t) do { } while(0)
key_fsgid_changed  macro  include/linux/key.h  336  #define key_fsgid_changed(t) do { } while(0)
key_init  macro  include/linux/key.h  337  #define key_init() do { } while(0)
_LINUX_SELINUX_H  macro  include/linux/selinux.h  15  #define _LINUX_SELINUX_H
selinux_is_enabled  function  include/linux/selinux.h  29  static inline bool selinux_is_enabled(void)
ASM_X86_CMPXCHG_H  macro  arch/x86/include/asm/cmpxchg.h  2  #define ASM_X86_CMPXCHG_H
__X86_CASE_B  macro  arch/x86/include/asm/cmpxchg.h  27  #define __X86_CASE_B 1
__X86_CASE_W  macro  arch/x86/include/asm/cmpxchg.h  28  #define __X86_CASE_W 2
__X86_CASE_L  macro  arch/x86/include/asm/cmpxchg.h  29  #define __X86_CASE_L 4
__X86_CASE_Q  macro  arch/x86/include/asm/cmpxchg.h  33  #define __X86_CASE_Q -1
__xchg_op  macro  arch/x86/include/asm/cmpxchg.h  68  #define __xchg_op(ptr,arg,op,lock) ({ __typeof__ (*(ptr)) __ret = (arg); switch (sizeof(*(ptr))) { case __X86_CASE_B: asm volatile (lock #op "b %b0, %1\n" : "+q" (__ret), "+m" (*(ptr)) : : "memory", "cc"); break; case __X86_CASE_W: asm volatile (lock #op "w %w0, %1\n" : "+r" (__ret), "+m" (*(ptr)) : : "memory", "cc"); break; case __X86_CASE_L: asm volatile (lock #op "l %0, %1\n" : "+r" (__ret), "+m" (*(ptr)) : : "memory", "cc"); break; case __X86_CASE_Q: asm volatile (lock #op "q %q0, %1\n" : "+r" (__ret), "+m" (*(ptr)) : : "memory", "cc"); break; default: __ ## op ## _wrong_size(); } __ret; })
xchg  macro  arch/x86/include/asm/cmpxchg.h  76  #define xchg(ptr,v) __xchg_op((ptr),(v),xchg,"")
__raw_cmpxchg  macro  arch/x86/include/asm/cmpxchg.h  129  #define __raw_cmpxchg(ptr,old,new,size,lock) ({ __typeof__(*(ptr)) __ret; __typeof__(*(ptr)) __old = (old); __typeof__(*(ptr)) __new = (new); switch (size) { case __X86_CASE_B: { volatile u8 *__ptr = (volatile u8 *)(ptr); asm volatile(lock "cmpxchgb %2,%1" : "=a" (__ret), "+m" (*__ptr) : "q" (__new), "0" (__old) : "memory"); break; } case __X86_CASE_W: { volatile u16 *__ptr = (volatile u16 *)(ptr); asm volatile(lock "cmpxchgw %2,%1" : "=a" (__ret), "+m" (*__ptr) : "r" (__new), "0" (__old) : "memory"); break; } case __X86_CASE_L: { volatile u32 *__ptr = (volatile u32 *)(ptr); asm volatile(lock "cmpxchgl %2,%1" : "=a" (__ret), "+m" (*__ptr) : "r" (__new), "0" (__old) : "memory"); break; } case __X86_CASE_Q: { volatile u64 *__ptr = (volatile u64 *)(ptr); asm volatile(lock "cmpxchgq %2,%1" : "=a" (__ret), "+m" (*__ptr) : "r" (__new), "0" (__old) : "memory"); break; } default: __cmpxchg_wrong_size(); } __ret; })
__cmpxchg  macro  arch/x86/include/asm/cmpxchg.h  132  #define __cmpxchg(ptr,old,new,size) __raw_cmpxchg((ptr), (old), (new), (size), LOCK_PREFIX)
__sync_cmpxchg  macro  arch/x86/include/asm/cmpxchg.h  135  #define __sync_cmpxchg(ptr,old,new,size) __raw_cmpxchg((ptr), (old), (new), (size), "lock; ")
__cmpxchg_local  macro  arch/x86/include/asm/cmpxchg.h  138  #define __cmpxchg_local(ptr,old,new,size) __raw_cmpxchg((ptr), (old), (new), (size), "")
cmpxchg  macro  arch/x86/include/asm/cmpxchg.h  148  #define cmpxchg(ptr,old,new) __cmpxchg(ptr, old, new, sizeof(*(ptr)))
sync_cmpxchg  macro  arch/x86/include/asm/cmpxchg.h  151  #define sync_cmpxchg(ptr,old,new) __sync_cmpxchg(ptr, old, new, sizeof(*(ptr)))
cmpxchg_local  macro  arch/x86/include/asm/cmpxchg.h  154  #define cmpxchg_local(ptr,old,new) __cmpxchg_local(ptr, old, new, sizeof(*(ptr)))
__xadd  macro  arch/x86/include/asm/cmpxchg.h  165  #define __xadd(ptr,inc,lock) __xchg_op((ptr),(inc),xadd,lock)
xadd  macro  arch/x86/include/asm/cmpxchg.h  166  #define xadd(ptr,inc) __xadd((ptr),(inc),LOCK_PREFIX)
xadd_sync  macro  arch/x86/include/asm/cmpxchg.h  167  #define xadd_sync(ptr,inc) __xadd((ptr),(inc),"lock; ")
xadd_local  macro  arch/x86/include/asm/cmpxchg.h  168  #define xadd_local(ptr,inc) __xadd((ptr),(inc),"")
__add  macro  arch/x86/include/asm/cmpxchg.h  198  #define __add(ptr,inc,lock) ({ __typeof__ (*(ptr)) __ret = (inc); switch (sizeof(*(ptr))) { case __X86_CASE_B: asm volatile (lock "addb %b1, %0\n" : "+m" (*(ptr)) : "qi" (inc) : "memory", "cc"); break; case __X86_CASE_W: asm volatile (lock "addw %w1, %0\n" : "+m" (*(ptr)) : "ri" (inc) : "memory", "cc"); break; case __X86_CASE_L: asm volatile (lock "addl %1, %0\n" : "+m" (*(ptr)) : "ri" (inc) : "memory", "cc"); break; case __X86_CASE_Q: asm volatile (lock "addq %1, %0\n" : "+m" (*(ptr)) : "ri" (inc) : "memory", "cc"); break; default: __add_wrong_size(); } __ret; })
add_smp  macro  arch/x86/include/asm/cmpxchg.h  207  #define add_smp(ptr,inc) __add((ptr),(inc),LOCK_PREFIX)
add_sync  macro  arch/x86/include/asm/cmpxchg.h  208  #define add_sync(ptr,inc) __add((ptr),(inc),"lock; ")
__cmpxchg_double  macro  arch/x86/include/asm/cmpxchg.h  225  #define __cmpxchg_double(pfx,p1,p2,o1,o2,n1,n2) ({ bool __ret; __typeof__(*(p1)) __old1 = (o1), __new1 = (n1); __typeof__(*(p2)) __old2 = (o2), __new2 = (n2); BUILD_BUG_ON(sizeof(*(p1)) != sizeof(long)); BUILD_BUG_ON(sizeof(*(p2)) != sizeof(long)); VM_BUG_ON((unsigned long)(p1) % (2 * sizeof(long))); VM_BUG_ON((unsigned long)((p1) + 1) != (unsigned long)(p2)); asm volatile(pfx "cmpxchg%c4b %2; sete %0" : "=a" (__ret), "+d" (__old2), "+m" (*(p1)), "+m" (*(p2)) : "i" (2 * sizeof(long)), "a" (__old1), "b" (__new1), "c" (__new2)); __ret; })
cmpxchg_double  macro  arch/x86/include/asm/cmpxchg.h  228  #define cmpxchg_double(p1,p2,o1,o2,n1,n2) __cmpxchg_double(LOCK_PREFIX, p1, p2, o1, o2, n1, n2)
cmpxchg_double_local  macro  arch/x86/include/asm/cmpxchg.h  231  #define cmpxchg_double_local(p1,p2,o1,o2,n1,n2) __cmpxchg_double(, p1, p2, o1, o2, n1, n2)
_LINUX_HIGHUID_H  macro  include/linux/highuid.h  2  #define _LINUX_HIGHUID_H
__bad_uid  prototype  include/linux/highuid.h  37  extern void __bad_uid(void);
__bad_gid  prototype  include/linux/highuid.h  38  extern void __bad_gid(void);
DEFAULT_OVERFLOWUID  macro  include/linux/highuid.h  40  #define DEFAULT_OVERFLOWUID 65534
DEFAULT_OVERFLOWGID  macro  include/linux/highuid.h  41  #define DEFAULT_OVERFLOWGID 65534
high2lowuid  macro  include/linux/highuid.h  46  #define high2lowuid(uid) ((uid) & ~0xFFFF ? (old_uid_t)overflowuid : (old_uid_t)(uid))
high2lowgid  macro  include/linux/highuid.h  47  #define high2lowgid(gid) ((gid) & ~0xFFFF ? (old_gid_t)overflowgid : (old_gid_t)(gid))
low2highuid  macro  include/linux/highuid.h  52  #define low2highuid(uid) ((uid) == (old_uid_t)-1 ? (uid_t)-1 : (uid_t)(uid))
low2highgid  macro  include/linux/highuid.h  53  #define low2highgid(gid) ((gid) == (old_gid_t)-1 ? (gid_t)-1 : (gid_t)(gid))
__convert_uid  macro  include/linux/highuid.h  63  #define __convert_uid(size,uid) (uid)
__convert_gid  macro  include/linux/highuid.h  64  #define __convert_gid(size,gid) (gid)
SET_UID  macro  include/linux/highuid.h  69  #define SET_UID(var,uid) do { (var) = __convert_uid(sizeof(var),(uid)); } while (0)
SET_GID  macro  include/linux/highuid.h  70  #define SET_GID(var,gid) do { (var) = __convert_gid(sizeof(var),(gid)); } while (0)
DEFAULT_FS_OVERFLOWUID  macro  include/linux/highuid.h  84  #define DEFAULT_FS_OVERFLOWUID 65534
DEFAULT_FS_OVERFLOWGID  macro  include/linux/highuid.h  85  #define DEFAULT_FS_OVERFLOWGID 65534
fs_high2lowuid  macro  include/linux/highuid.h  91  #define fs_high2lowuid(uid) ((uid) & ~0xFFFF ? (uid16_t)fs_overflowuid : (uid16_t)(uid))
fs_high2lowgid  macro  include/linux/highuid.h  92  #define fs_high2lowgid(gid) ((gid) & ~0xFFFF ? (gid16_t)fs_overflowgid : (gid16_t)(gid))
low_16_bits  macro  include/linux/highuid.h  94  #define low_16_bits(x) ((x) & 0xFFFF)
high_16_bits  macro  include/linux/highuid.h  95  #define high_16_bits(x) (((x) & 0xFFFF0000) >> 16)
_ASM_X86_PROCESSOR_FLAGS_H  macro  arch/x86/include/asm/processor-flags.h  2  #define _ASM_X86_PROCESSOR_FLAGS_H
X86_VM_MASK  macro  arch/x86/include/asm/processor-flags.h  9  #define X86_VM_MASK 0
_ASM_X86_VM86_H  macro  arch/x86/include/asm/vm86.h  2  #define _ASM_X86_VM86_H
kernel_vm86_regs  struct  arch/x86/include/asm/vm86.h  17  struct kernel_vm86_regs {
kernel_vm86_struct  struct  arch/x86/include/asm/vm86.h  31  struct kernel_vm86_struct {
VM86_TSS_ESP0  macro  arch/x86/include/asm/vm86.h  41  #define VM86_TSS_ESP0 flags
handle_vm86_fault  macro  arch/x86/include/asm/vm86.h  72  #define handle_vm86_fault(a,b)
handle_vm86_trap  function  arch/x86/include/asm/vm86.h  75  static inline int handle_vm86_trap(struct kernel_vm86_regs *a,long b,int c)
save_v86_state  prototype  arch/x86/include/asm/vm86.h  65  struct pt_regs *save_v86_state(struct kernel_vm86_regs *);
release_vm86_irqs  macro  arch/x86/include/asm/vm86.h  73  #define release_vm86_irqs(a)
_ASM_X86_MATH_EMU_H  macro  arch/x86/include/asm/math_emu.h  2  #define _ASM_X86_MATH_EMU_H
math_emu_info  struct  arch/x86/include/asm/math_emu.h  11  struct math_emu_info {
_ASM_X86_SIGCONTEXT_H  macro  arch/x86/include/asm/sigcontext.h  2  #define _ASM_X86_SIGCONTEXT_H
sigcontext  struct  arch/x86/include/asm/sigcontext.h  40  struct sigcontext {
_ASM_X86_CPUFEATURE_H  macro  arch/x86/include/asm/cpufeature.h  5  #define _ASM_X86_CPUFEATURE_H
NCAPINTS  macro  arch/x86/include/asm/cpufeature.h  11  #define NCAPINTS 10
X86_FEATURE_FPU  macro  arch/x86/include/asm/cpufeature.h  20  #define X86_FEATURE_FPU (0*32+ 0)
X86_FEATURE_VME  macro  arch/x86/include/asm/cpufeature.h  21  #define X86_FEATURE_VME (0*32+ 1)
X86_FEATURE_DE  macro  arch/x86/include/asm/cpufeature.h  22  #define X86_FEATURE_DE (0*32+ 2)
X86_FEATURE_PSE  macro  arch/x86/include/asm/cpufeature.h  23  #define X86_FEATURE_PSE (0*32+ 3)
X86_FEATURE_TSC  macro  arch/x86/include/asm/cpufeature.h  24  #define X86_FEATURE_TSC (0*32+ 4)
X86_FEATURE_MSR  macro  arch/x86/include/asm/cpufeature.h  25  #define X86_FEATURE_MSR (0*32+ 5)
X86_FEATURE_PAE  macro  arch/x86/include/asm/cpufeature.h  26  #define X86_FEATURE_PAE (0*32+ 6)
X86_FEATURE_MCE  macro  arch/x86/include/asm/cpufeature.h  27  #define X86_FEATURE_MCE (0*32+ 7)
X86_FEATURE_CX8  macro  arch/x86/include/asm/cpufeature.h  28  #define X86_FEATURE_CX8 (0*32+ 8)
X86_FEATURE_APIC  macro  arch/x86/include/asm/cpufeature.h  29  #define X86_FEATURE_APIC (0*32+ 9)
X86_FEATURE_SEP  macro  arch/x86/include/asm/cpufeature.h  30  #define X86_FEATURE_SEP (0*32+11)
X86_FEATURE_MTRR  macro  arch/x86/include/asm/cpufeature.h  31  #define X86_FEATURE_MTRR (0*32+12)
X86_FEATURE_PGE  macro  arch/x86/include/asm/cpufeature.h  32  #define X86_FEATURE_PGE (0*32+13)
X86_FEATURE_MCA  macro  arch/x86/include/asm/cpufeature.h  33  #define X86_FEATURE_MCA (0*32+14)
X86_FEATURE_CMOV  macro  arch/x86/include/asm/cpufeature.h  34  #define X86_FEATURE_CMOV (0*32+15)
X86_FEATURE_PAT  macro  arch/x86/include/asm/cpufeature.h  36  #define X86_FEATURE_PAT (0*32+16)
X86_FEATURE_PSE36  macro  arch/x86/include/asm/cpufeature.h  37  #define X86_FEATURE_PSE36 (0*32+17)
X86_FEATURE_PN  macro  arch/x86/include/asm/cpufeature.h  38  #define X86_FEATURE_PN (0*32+18)
X86_FEATURE_CLFLSH  macro  arch/x86/include/asm/cpufeature.h  39  #define X86_FEATURE_CLFLSH (0*32+19)
X86_FEATURE_DS  macro  arch/x86/include/asm/cpufeature.h  40  #define X86_FEATURE_DS (0*32+21)
X86_FEATURE_ACPI  macro  arch/x86/include/asm/cpufeature.h  41  #define X86_FEATURE_ACPI (0*32+22)
X86_FEATURE_MMX  macro  arch/x86/include/asm/cpufeature.h  42  #define X86_FEATURE_MMX (0*32+23)
X86_FEATURE_FXSR  macro  arch/x86/include/asm/cpufeature.h  43  #define X86_FEATURE_FXSR (0*32+24)
X86_FEATURE_XMM  macro  arch/x86/include/asm/cpufeature.h  44  #define X86_FEATURE_XMM (0*32+25)
X86_FEATURE_XMM2  macro  arch/x86/include/asm/cpufeature.h  45  #define X86_FEATURE_XMM2 (0*32+26)
X86_FEATURE_SELFSNOOP  macro  arch/x86/include/asm/cpufeature.h  46  #define X86_FEATURE_SELFSNOOP (0*32+27)
X86_FEATURE_HT  macro  arch/x86/include/asm/cpufeature.h  47  #define X86_FEATURE_HT (0*32+28)
X86_FEATURE_ACC  macro  arch/x86/include/asm/cpufeature.h  48  #define X86_FEATURE_ACC (0*32+29)
X86_FEATURE_IA64  macro  arch/x86/include/asm/cpufeature.h  49  #define X86_FEATURE_IA64 (0*32+30)
X86_FEATURE_PBE  macro  arch/x86/include/asm/cpufeature.h  50  #define X86_FEATURE_PBE (0*32+31)
X86_FEATURE_SYSCALL  macro  arch/x86/include/asm/cpufeature.h  54  #define X86_FEATURE_SYSCALL (1*32+11)
X86_FEATURE_MP  macro  arch/x86/include/asm/cpufeature.h  55  #define X86_FEATURE_MP (1*32+19)
X86_FEATURE_NX  macro  arch/x86/include/asm/cpufeature.h  56  #define X86_FEATURE_NX (1*32+20)
X86_FEATURE_MMXEXT  macro  arch/x86/include/asm/cpufeature.h  57  #define X86_FEATURE_MMXEXT (1*32+22)
X86_FEATURE_FXSR_OPT  macro  arch/x86/include/asm/cpufeature.h  58  #define X86_FEATURE_FXSR_OPT (1*32+25)
X86_FEATURE_GBPAGES  macro  arch/x86/include/asm/cpufeature.h  59  #define X86_FEATURE_GBPAGES (1*32+26)
X86_FEATURE_RDTSCP  macro  arch/x86/include/asm/cpufeature.h  60  #define X86_FEATURE_RDTSCP (1*32+27)
X86_FEATURE_LM  macro  arch/x86/include/asm/cpufeature.h  61  #define X86_FEATURE_LM (1*32+29)
X86_FEATURE_3DNOWEXT  macro  arch/x86/include/asm/cpufeature.h  62  #define X86_FEATURE_3DNOWEXT (1*32+30)
X86_FEATURE_3DNOW  macro  arch/x86/include/asm/cpufeature.h  63  #define X86_FEATURE_3DNOW (1*32+31)
X86_FEATURE_RECOVERY  macro  arch/x86/include/asm/cpufeature.h  66  #define X86_FEATURE_RECOVERY (2*32+ 0)
X86_FEATURE_LONGRUN  macro  arch/x86/include/asm/cpufeature.h  67  #define X86_FEATURE_LONGRUN (2*32+ 1)
X86_FEATURE_LRTI  macro  arch/x86/include/asm/cpufeature.h  68  #define X86_FEATURE_LRTI (2*32+ 3)
X86_FEATURE_CXMMX  macro  arch/x86/include/asm/cpufeature.h  72  #define X86_FEATURE_CXMMX (3*32+ 0)
X86_FEATURE_K6_MTRR  macro  arch/x86/include/asm/cpufeature.h  73  #define X86_FEATURE_K6_MTRR (3*32+ 1)
X86_FEATURE_CYRIX_ARR  macro  arch/x86/include/asm/cpufeature.h  74  #define X86_FEATURE_CYRIX_ARR (3*32+ 2)
X86_FEATURE_CENTAUR_MCR  macro  arch/x86/include/asm/cpufeature.h  75  #define X86_FEATURE_CENTAUR_MCR (3*32+ 3)
X86_FEATURE_K8  macro  arch/x86/include/asm/cpufeature.h  77  #define X86_FEATURE_K8 (3*32+ 4)
X86_FEATURE_K7  macro  arch/x86/include/asm/cpufeature.h  78  #define X86_FEATURE_K7 (3*32+ 5)
X86_FEATURE_P3  macro  arch/x86/include/asm/cpufeature.h  79  #define X86_FEATURE_P3 (3*32+ 6)
X86_FEATURE_P4  macro  arch/x86/include/asm/cpufeature.h  80  #define X86_FEATURE_P4 (3*32+ 7)
X86_FEATURE_CONSTANT_TSC  macro  arch/x86/include/asm/cpufeature.h  81  #define X86_FEATURE_CONSTANT_TSC (3*32+ 8)
X86_FEATURE_UP  macro  arch/x86/include/asm/cpufeature.h  82  #define X86_FEATURE_UP (3*32+ 9)
X86_FEATURE_FXSAVE_LEAK  macro  arch/x86/include/asm/cpufeature.h  83  #define X86_FEATURE_FXSAVE_LEAK (3*32+10)
X86_FEATURE_ARCH_PERFMON  macro  arch/x86/include/asm/cpufeature.h  84  #define X86_FEATURE_ARCH_PERFMON (3*32+11)
X86_FEATURE_PEBS  macro  arch/x86/include/asm/cpufeature.h  85  #define X86_FEATURE_PEBS (3*32+12)
X86_FEATURE_BTS  macro  arch/x86/include/asm/cpufeature.h  86  #define X86_FEATURE_BTS (3*32+13)
X86_FEATURE_SYSCALL32  macro  arch/x86/include/asm/cpufeature.h  87  #define X86_FEATURE_SYSCALL32 (3*32+14)
X86_FEATURE_SYSENTER32  macro  arch/x86/include/asm/cpufeature.h  88  #define X86_FEATURE_SYSENTER32 (3*32+15)
X86_FEATURE_REP_GOOD  macro  arch/x86/include/asm/cpufeature.h  89  #define X86_FEATURE_REP_GOOD (3*32+16)
X86_FEATURE_MFENCE_RDTSC  macro  arch/x86/include/asm/cpufeature.h  90  #define X86_FEATURE_MFENCE_RDTSC (3*32+17)
X86_FEATURE_LFENCE_RDTSC  macro  arch/x86/include/asm/cpufeature.h  91  #define X86_FEATURE_LFENCE_RDTSC (3*32+18)
X86_FEATURE_11AP  macro  arch/x86/include/asm/cpufeature.h  92  #define X86_FEATURE_11AP (3*32+19)
X86_FEATURE_NOPL  macro  arch/x86/include/asm/cpufeature.h  93  #define X86_FEATURE_NOPL (3*32+20)
X86_FEATURE_XTOPOLOGY  macro  arch/x86/include/asm/cpufeature.h  95  #define X86_FEATURE_XTOPOLOGY (3*32+22)
X86_FEATURE_TSC_RELIABLE  macro  arch/x86/include/asm/cpufeature.h  96  #define X86_FEATURE_TSC_RELIABLE (3*32+23)
X86_FEATURE_NONSTOP_TSC  macro  arch/x86/include/asm/cpufeature.h  97  #define X86_FEATURE_NONSTOP_TSC (3*32+24)
X86_FEATURE_CLFLUSH_MONITOR  macro  arch/x86/include/asm/cpufeature.h  98  #define X86_FEATURE_CLFLUSH_MONITOR (3*32+25)
X86_FEATURE_EXTD_APICID  macro  arch/x86/include/asm/cpufeature.h  99  #define X86_FEATURE_EXTD_APICID (3*32+26)
X86_FEATURE_AMD_DCM  macro  arch/x86/include/asm/cpufeature.h  100  #define X86_FEATURE_AMD_DCM (3*32+27)
X86_FEATURE_APERFMPERF  macro  arch/x86/include/asm/cpufeature.h  101  #define X86_FEATURE_APERFMPERF (3*32+28)
X86_FEATURE_EAGER_FPU  macro  arch/x86/include/asm/cpufeature.h  102  #define X86_FEATURE_EAGER_FPU (3*32+29)
X86_FEATURE_XMM3  macro  arch/x86/include/asm/cpufeature.h  105  #define X86_FEATURE_XMM3 (4*32+ 0)
X86_FEATURE_PCLMULQDQ  macro  arch/x86/include/asm/cpufeature.h  106  #define X86_FEATURE_PCLMULQDQ (4*32+ 1)
X86_FEATURE_DTES64  macro  arch/x86/include/asm/cpufeature.h  107  #define X86_FEATURE_DTES64 (4*32+ 2)
X86_FEATURE_MWAIT  macro  arch/x86/include/asm/cpufeature.h  108  #define X86_FEATURE_MWAIT (4*32+ 3)
X86_FEATURE_DSCPL  macro  arch/x86/include/asm/cpufeature.h  109  #define X86_FEATURE_DSCPL (4*32+ 4)
X86_FEATURE_VMX  macro  arch/x86/include/asm/cpufeature.h  110  #define X86_FEATURE_VMX (4*32+ 5)
X86_FEATURE_SMX  macro  arch/x86/include/asm/cpufeature.h  111  #define X86_FEATURE_SMX (4*32+ 6)
X86_FEATURE_EST  macro  arch/x86/include/asm/cpufeature.h  112  #define X86_FEATURE_EST (4*32+ 7)
X86_FEATURE_TM2  macro  arch/x86/include/asm/cpufeature.h  113  #define X86_FEATURE_TM2 (4*32+ 8)
X86_FEATURE_SSSE3  macro  arch/x86/include/asm/cpufeature.h  114  #define X86_FEATURE_SSSE3 (4*32+ 9)
X86_FEATURE_CID  macro  arch/x86/include/asm/cpufeature.h  115  #define X86_FEATURE_CID (4*32+10)
X86_FEATURE_FMA  macro  arch/x86/include/asm/cpufeature.h  116  #define X86_FEATURE_FMA (4*32+12)
X86_FEATURE_CX16  macro  arch/x86/include/asm/cpufeature.h  117  #define X86_FEATURE_CX16 (4*32+13)
X86_FEATURE_XTPR  macro  arch/x86/include/asm/cpufeature.h  118  #define X86_FEATURE_XTPR (4*32+14)
X86_FEATURE_PDCM  macro  arch/x86/include/asm/cpufeature.h  119  #define X86_FEATURE_PDCM (4*32+15)
X86_FEATURE_PCID  macro  arch/x86/include/asm/cpufeature.h  120  #define X86_FEATURE_PCID (4*32+17)
X86_FEATURE_DCA  macro  arch/x86/include/asm/cpufeature.h  121  #define X86_FEATURE_DCA (4*32+18)
X86_FEATURE_XMM4_1  macro  arch/x86/include/asm/cpufeature.h  122  #define X86_FEATURE_XMM4_1 (4*32+19)
X86_FEATURE_XMM4_2  macro  arch/x86/include/asm/cpufeature.h  123  #define X86_FEATURE_XMM4_2 (4*32+20)
X86_FEATURE_X2APIC  macro  arch/x86/include/asm/cpufeature.h  124  #define X86_FEATURE_X2APIC (4*32+21)
X86_FEATURE_MOVBE  macro  arch/x86/include/asm/cpufeature.h  125  #define X86_FEATURE_MOVBE (4*32+22)
X86_FEATURE_POPCNT  macro  arch/x86/include/asm/cpufeature.h  126  #define X86_FEATURE_POPCNT (4*32+23)
X86_FEATURE_TSC_DEADLINE_TIMER  macro  arch/x86/include/asm/cpufeature.h  127  #define X86_FEATURE_TSC_DEADLINE_TIMER (4*32+24)
X86_FEATURE_AES  macro  arch/x86/include/asm/cpufeature.h  128  #define X86_FEATURE_AES (4*32+25)
X86_FEATURE_XSAVE  macro  arch/x86/include/asm/cpufeature.h  129  #define X86_FEATURE_XSAVE (4*32+26)
X86_FEATURE_OSXSAVE  macro  arch/x86/include/asm/cpufeature.h  130  #define X86_FEATURE_OSXSAVE (4*32+27)
X86_FEATURE_AVX  macro  arch/x86/include/asm/cpufeature.h  131  #define X86_FEATURE_AVX (4*32+28)
X86_FEATURE_F16C  macro  arch/x86/include/asm/cpufeature.h  132  #define X86_FEATURE_F16C (4*32+29)
X86_FEATURE_RDRAND  macro  arch/x86/include/asm/cpufeature.h  133  #define X86_FEATURE_RDRAND (4*32+30)
X86_FEATURE_HYPERVISOR  macro  arch/x86/include/asm/cpufeature.h  134  #define X86_FEATURE_HYPERVISOR (4*32+31)
X86_FEATURE_XSTORE  macro  arch/x86/include/asm/cpufeature.h  137  #define X86_FEATURE_XSTORE (5*32+ 2)
X86_FEATURE_XSTORE_EN  macro  arch/x86/include/asm/cpufeature.h  138  #define X86_FEATURE_XSTORE_EN (5*32+ 3)
X86_FEATURE_XCRYPT  macro  arch/x86/include/asm/cpufeature.h  139  #define X86_FEATURE_XCRYPT (5*32+ 6)
X86_FEATURE_XCRYPT_EN  macro  arch/x86/include/asm/cpufeature.h  140  #define X86_FEATURE_XCRYPT_EN (5*32+ 7)
X86_FEATURE_ACE2  macro  arch/x86/include/asm/cpufeature.h  141  #define X86_FEATURE_ACE2 (5*32+ 8)
X86_FEATURE_ACE2_EN  macro  arch/x86/include/asm/cpufeature.h  142  #define X86_FEATURE_ACE2_EN (5*32+ 9)
X86_FEATURE_PHE  macro  arch/x86/include/asm/cpufeature.h  143  #define X86_FEATURE_PHE (5*32+10)
X86_FEATURE_PHE_EN  macro  arch/x86/include/asm/cpufeature.h  144  #define X86_FEATURE_PHE_EN (5*32+11)
X86_FEATURE_PMM  macro  arch/x86/include/asm/cpufeature.h  145  #define X86_FEATURE_PMM (5*32+12)
X86_FEATURE_PMM_EN  macro  arch/x86/include/asm/cpufeature.h  146  #define X86_FEATURE_PMM_EN (5*32+13)
X86_FEATURE_LAHF_LM  macro  arch/x86/include/asm/cpufeature.h  149  #define X86_FEATURE_LAHF_LM (6*32+ 0)
X86_FEATURE_CMP_LEGACY  macro  arch/x86/include/asm/cpufeature.h  150  #define X86_FEATURE_CMP_LEGACY (6*32+ 1)
X86_FEATURE_SVM  macro  arch/x86/include/asm/cpufeature.h  151  #define X86_FEATURE_SVM (6*32+ 2)
X86_FEATURE_EXTAPIC  macro  arch/x86/include/asm/cpufeature.h  152  #define X86_FEATURE_EXTAPIC (6*32+ 3)
X86_FEATURE_CR8_LEGACY  macro  arch/x86/include/asm/cpufeature.h  153  #define X86_FEATURE_CR8_LEGACY (6*32+ 4)
X86_FEATURE_ABM  macro  arch/x86/include/asm/cpufeature.h  154  #define X86_FEATURE_ABM (6*32+ 5)
X86_FEATURE_SSE4A  macro  arch/x86/include/asm/cpufeature.h  155  #define X86_FEATURE_SSE4A (6*32+ 6)
X86_FEATURE_MISALIGNSSE  macro  arch/x86/include/asm/cpufeature.h  156  #define X86_FEATURE_MISALIGNSSE (6*32+ 7)
X86_FEATURE_3DNOWPREFETCH  macro  arch/x86/include/asm/cpufeature.h  157  #define X86_FEATURE_3DNOWPREFETCH (6*32+ 8)
X86_FEATURE_OSVW  macro  arch/x86/include/asm/cpufeature.h  158  #define X86_FEATURE_OSVW (6*32+ 9)
X86_FEATURE_IBS  macro  arch/x86/include/asm/cpufeature.h  159  #define X86_FEATURE_IBS (6*32+10)
X86_FEATURE_XOP  macro  arch/x86/include/asm/cpufeature.h  160  #define X86_FEATURE_XOP (6*32+11)
X86_FEATURE_SKINIT  macro  arch/x86/include/asm/cpufeature.h  161  #define X86_FEATURE_SKINIT (6*32+12)
X86_FEATURE_WDT  macro  arch/x86/include/asm/cpufeature.h  162  #define X86_FEATURE_WDT (6*32+13)
X86_FEATURE_LWP  macro  arch/x86/include/asm/cpufeature.h  163  #define X86_FEATURE_LWP (6*32+15)
X86_FEATURE_FMA4  macro  arch/x86/include/asm/cpufeature.h  164  #define X86_FEATURE_FMA4 (6*32+16)
X86_FEATURE_TCE  macro  arch/x86/include/asm/cpufeature.h  165  #define X86_FEATURE_TCE (6*32+17)
X86_FEATURE_NODEID_MSR  macro  arch/x86/include/asm/cpufeature.h  166  #define X86_FEATURE_NODEID_MSR (6*32+19)
X86_FEATURE_TBM  macro  arch/x86/include/asm/cpufeature.h  167  #define X86_FEATURE_TBM (6*32+21)
X86_FEATURE_TOPOEXT  macro  arch/x86/include/asm/cpufeature.h  168  #define X86_FEATURE_TOPOEXT (6*32+22)
X86_FEATURE_PERFCTR_CORE  macro  arch/x86/include/asm/cpufeature.h  169  #define X86_FEATURE_PERFCTR_CORE (6*32+23)
X86_FEATURE_IDA  macro  arch/x86/include/asm/cpufeature.h  175  #define X86_FEATURE_IDA (7*32+ 0)
X86_FEATURE_ARAT  macro  arch/x86/include/asm/cpufeature.h  176  #define X86_FEATURE_ARAT (7*32+ 1)
X86_FEATURE_CPB  macro  arch/x86/include/asm/cpufeature.h  177  #define X86_FEATURE_CPB (7*32+ 2)
X86_FEATURE_EPB  macro  arch/x86/include/asm/cpufeature.h  178  #define X86_FEATURE_EPB (7*32+ 3)
X86_FEATURE_XSAVEOPT  macro  arch/x86/include/asm/cpufeature.h  179  #define X86_FEATURE_XSAVEOPT (7*32+ 4)
X86_FEATURE_PLN  macro  arch/x86/include/asm/cpufeature.h  180  #define X86_FEATURE_PLN (7*32+ 5)
X86_FEATURE_PTS  macro  arch/x86/include/asm/cpufeature.h  181  #define X86_FEATURE_PTS (7*32+ 6)
X86_FEATURE_DTHERM  macro  arch/x86/include/asm/cpufeature.h  182  #define X86_FEATURE_DTHERM (7*32+ 7)
X86_FEATURE_HW_PSTATE  macro  arch/x86/include/asm/cpufeature.h  183  #define X86_FEATURE_HW_PSTATE (7*32+ 8)
X86_FEATURE_TPR_SHADOW  macro  arch/x86/include/asm/cpufeature.h  186  #define X86_FEATURE_TPR_SHADOW (8*32+ 0)
X86_FEATURE_VNMI  macro  arch/x86/include/asm/cpufeature.h  187  #define X86_FEATURE_VNMI (8*32+ 1)
X86_FEATURE_FLEXPRIORITY  macro  arch/x86/include/asm/cpufeature.h  188  #define X86_FEATURE_FLEXPRIORITY (8*32+ 2)
X86_FEATURE_EPT  macro  arch/x86/include/asm/cpufeature.h  189  #define X86_FEATURE_EPT (8*32+ 3)
X86_FEATURE_VPID  macro  arch/x86/include/asm/cpufeature.h  190  #define X86_FEATURE_VPID (8*32+ 4)
X86_FEATURE_NPT  macro  arch/x86/include/asm/cpufeature.h  191  #define X86_FEATURE_NPT (8*32+ 5)
X86_FEATURE_LBRV  macro  arch/x86/include/asm/cpufeature.h  192  #define X86_FEATURE_LBRV (8*32+ 6)
X86_FEATURE_SVML  macro  arch/x86/include/asm/cpufeature.h  193  #define X86_FEATURE_SVML (8*32+ 7)
X86_FEATURE_NRIPS  macro  arch/x86/include/asm/cpufeature.h  194  #define X86_FEATURE_NRIPS (8*32+ 8)
X86_FEATURE_TSCRATEMSR  macro  arch/x86/include/asm/cpufeature.h  195  #define X86_FEATURE_TSCRATEMSR (8*32+ 9)
X86_FEATURE_VMCBCLEAN  macro  arch/x86/include/asm/cpufeature.h  196  #define X86_FEATURE_VMCBCLEAN (8*32+10)
X86_FEATURE_FLUSHBYASID  macro  arch/x86/include/asm/cpufeature.h  197  #define X86_FEATURE_FLUSHBYASID (8*32+11)
X86_FEATURE_DECODEASSISTS  macro  arch/x86/include/asm/cpufeature.h  198  #define X86_FEATURE_DECODEASSISTS (8*32+12)
X86_FEATURE_PAUSEFILTER  macro  arch/x86/include/asm/cpufeature.h  199  #define X86_FEATURE_PAUSEFILTER (8*32+13)
X86_FEATURE_PFTHRESHOLD  macro  arch/x86/include/asm/cpufeature.h  200  #define X86_FEATURE_PFTHRESHOLD (8*32+14)
X86_FEATURE_FSGSBASE  macro  arch/x86/include/asm/cpufeature.h  204  #define X86_FEATURE_FSGSBASE (9*32+ 0)
X86_FEATURE_TSC_ADJUST  macro  arch/x86/include/asm/cpufeature.h  205  #define X86_FEATURE_TSC_ADJUST (9*32+ 1)
X86_FEATURE_BMI1  macro  arch/x86/include/asm/cpufeature.h  206  #define X86_FEATURE_BMI1 (9*32+ 3)
X86_FEATURE_HLE  macro  arch/x86/include/asm/cpufeature.h  207  #define X86_FEATURE_HLE (9*32+ 4)
X86_FEATURE_AVX2  macro  arch/x86/include/asm/cpufeature.h  208  #define X86_FEATURE_AVX2 (9*32+ 5)
X86_FEATURE_SMEP  macro  arch/x86/include/asm/cpufeature.h  209  #define X86_FEATURE_SMEP (9*32+ 7)
X86_FEATURE_BMI2  macro  arch/x86/include/asm/cpufeature.h  210  #define X86_FEATURE_BMI2 (9*32+ 8)
X86_FEATURE_ERMS  macro  arch/x86/include/asm/cpufeature.h  211  #define X86_FEATURE_ERMS (9*32+ 9)
X86_FEATURE_INVPCID  macro  arch/x86/include/asm/cpufeature.h  212  #define X86_FEATURE_INVPCID (9*32+10)
X86_FEATURE_RTM  macro  arch/x86/include/asm/cpufeature.h  213  #define X86_FEATURE_RTM (9*32+11)
X86_FEATURE_RDSEED  macro  arch/x86/include/asm/cpufeature.h  214  #define X86_FEATURE_RDSEED (9*32+18)
X86_FEATURE_ADX  macro  arch/x86/include/asm/cpufeature.h  215  #define X86_FEATURE_ADX (9*32+19)
X86_FEATURE_SMAP  macro  arch/x86/include/asm/cpufeature.h  216  #define X86_FEATURE_SMAP (9*32+20)
test_cpu_cap  macro  arch/x86/include/asm/cpufeature.h  227  #define test_cpu_cap(c,bit) test_bit(bit, (unsigned long *)((c)->x86_capability))
REQUIRED_MASK_BIT_SET  macro  arch/x86/include/asm/cpufeature.h  239  #define REQUIRED_MASK_BIT_SET(bit) ( (((bit)>>5)==0 && (1UL<<((bit)&31) & REQUIRED_MASK0)) || (((bit)>>5)==1 && (1UL<<((bit)&31) & REQUIRED_MASK1)) || (((bit)>>5)==2 && (1UL<<((bit)&31) & REQUIRED_MASK2)) || (((bit)>>5)==3 && (1UL<<((bit)&31) & REQUIRED_MASK3)) || (((bit)>>5)==4 && (1UL<<((bit)&31) & REQUIRED_MASK4)) || (((bit)>>5)==5 && (1UL<<((bit)&31) & REQUIRED_MASK5)) || (((bit)>>5)==6 && (1UL<<((bit)&31) & REQUIRED_MASK6)) || (((bit)>>5)==7 && (1UL<<((bit)&31) & REQUIRED_MASK7)) || (((bit)>>5)==8 && (1UL<<((bit)&31) & REQUIRED_MASK8)) || (((bit)>>5)==9 && (1UL<<((bit)&31) & REQUIRED_MASK9)) )
cpu_has  macro  arch/x86/include/asm/cpufeature.h  243  #define cpu_has(c,bit) (__builtin_constant_p(bit) && REQUIRED_MASK_BIT_SET(bit) ? 1 : test_cpu_cap(c, bit))
this_cpu_has  macro  arch/x86/include/asm/cpufeature.h  247  #define this_cpu_has(bit) (__builtin_constant_p(bit) && REQUIRED_MASK_BIT_SET(bit) ? 1 : x86_this_cpu_test_bit(bit, (unsigned long *)&cpu_info.x86_capability))
boot_cpu_has  macro  arch/x86/include/asm/cpufeature.h  249  #define boot_cpu_has(bit) cpu_has(&boot_cpu_data,bit)
set_cpu_cap  macro  arch/x86/include/asm/cpufeature.h  251  #define set_cpu_cap(c,bit) set_bit(bit,(unsigned long *)((c)->x86_capability))
clear_cpu_cap  macro  arch/x86/include/asm/cpufeature.h  252  #define clear_cpu_cap(c,bit) clear_bit(bit,(unsigned long *)((c)->x86_capability))
setup_clear_cpu_cap  macro  arch/x86/include/asm/cpufeature.h  256  #define setup_clear_cpu_cap(bit) do { clear_cpu_cap(&boot_cpu_data, bit); set_bit(bit, (unsigned long *)cpu_caps_cleared); } while (0)
setup_force_cpu_cap  macro  arch/x86/include/asm/cpufeature.h  260  #define setup_force_cpu_cap(bit) do { set_cpu_cap(&boot_cpu_data, bit); set_bit(bit, (unsigned long *)cpu_caps_set); } while (0)
cpu_has_fpu  macro  arch/x86/include/asm/cpufeature.h  262  #define cpu_has_fpu boot_cpu_has(X86_FEATURE_FPU)
cpu_has_vme  macro  arch/x86/include/asm/cpufeature.h  320  #define cpu_has_vme 0
cpu_has_de  macro  arch/x86/include/asm/cpufeature.h  264  #define cpu_has_de boot_cpu_has(X86_FEATURE_DE)
cpu_has_pse  macro  arch/x86/include/asm/cpufeature.h  265  #define cpu_has_pse boot_cpu_has(X86_FEATURE_PSE)
cpu_has_tsc  macro  arch/x86/include/asm/cpufeature.h  266  #define cpu_has_tsc boot_cpu_has(X86_FEATURE_TSC)
cpu_has_pae  macro  arch/x86/include/asm/cpufeature.h  323  #define cpu_has_pae ___BUG___
cpu_has_pge  macro  arch/x86/include/asm/cpufeature.h  268  #define cpu_has_pge boot_cpu_has(X86_FEATURE_PGE)
cpu_has_apic  macro  arch/x86/include/asm/cpufeature.h  269  #define cpu_has_apic boot_cpu_has(X86_FEATURE_APIC)
cpu_has_sep  macro  arch/x86/include/asm/cpufeature.h  270  #define cpu_has_sep boot_cpu_has(X86_FEATURE_SEP)
cpu_has_mtrr  macro  arch/x86/include/asm/cpufeature.h  271  #define cpu_has_mtrr boot_cpu_has(X86_FEATURE_MTRR)
cpu_has_mmx  macro  arch/x86/include/asm/cpufeature.h  272  #define cpu_has_mmx boot_cpu_has(X86_FEATURE_MMX)
cpu_has_fxsr  macro  arch/x86/include/asm/cpufeature.h  273  #define cpu_has_fxsr boot_cpu_has(X86_FEATURE_FXSR)
cpu_has_xmm  macro  arch/x86/include/asm/cpufeature.h  274  #define cpu_has_xmm boot_cpu_has(X86_FEATURE_XMM)
cpu_has_xmm2  macro  arch/x86/include/asm/cpufeature.h  275  #define cpu_has_xmm2 boot_cpu_has(X86_FEATURE_XMM2)
cpu_has_xmm3  macro  arch/x86/include/asm/cpufeature.h  276  #define cpu_has_xmm3 boot_cpu_has(X86_FEATURE_XMM3)
cpu_has_ssse3  macro  arch/x86/include/asm/cpufeature.h  277  #define cpu_has_ssse3 boot_cpu_has(X86_FEATURE_SSSE3)
cpu_has_aes  macro  arch/x86/include/asm/cpufeature.h  278  #define cpu_has_aes boot_cpu_has(X86_FEATURE_AES)
cpu_has_avx  macro  arch/x86/include/asm/cpufeature.h  279  #define cpu_has_avx boot_cpu_has(X86_FEATURE_AVX)
cpu_has_ht  macro  arch/x86/include/asm/cpufeature.h  280  #define cpu_has_ht boot_cpu_has(X86_FEATURE_HT)
cpu_has_mp  macro  arch/x86/include/asm/cpufeature.h  326  #define cpu_has_mp 1
cpu_has_nx  macro  arch/x86/include/asm/cpufeature.h  282  #define cpu_has_nx boot_cpu_has(X86_FEATURE_NX)
cpu_has_k6_mtrr  macro  arch/x86/include/asm/cpufeature.h  329  #define cpu_has_k6_mtrr 0
cpu_has_cyrix_arr  macro  arch/x86/include/asm/cpufeature.h  332  #define cpu_has_cyrix_arr 0
cpu_has_centaur_mcr  macro  arch/x86/include/asm/cpufeature.h  335  #define cpu_has_centaur_mcr 0
cpu_has_xstore  macro  arch/x86/include/asm/cpufeature.h  286  #define cpu_has_xstore boot_cpu_has(X86_FEATURE_XSTORE)
cpu_has_xstore_enabled  macro  arch/x86/include/asm/cpufeature.h  287  #define cpu_has_xstore_enabled boot_cpu_has(X86_FEATURE_XSTORE_EN)
cpu_has_xcrypt  macro  arch/x86/include/asm/cpufeature.h  288  #define cpu_has_xcrypt boot_cpu_has(X86_FEATURE_XCRYPT)
cpu_has_xcrypt_enabled  macro  arch/x86/include/asm/cpufeature.h  289  #define cpu_has_xcrypt_enabled boot_cpu_has(X86_FEATURE_XCRYPT_EN)
cpu_has_ace2  macro  arch/x86/include/asm/cpufeature.h  290  #define cpu_has_ace2 boot_cpu_has(X86_FEATURE_ACE2)
cpu_has_ace2_enabled  macro  arch/x86/include/asm/cpufeature.h  291  #define cpu_has_ace2_enabled boot_cpu_has(X86_FEATURE_ACE2_EN)
cpu_has_phe  macro  arch/x86/include/asm/cpufeature.h  292  #define cpu_has_phe boot_cpu_has(X86_FEATURE_PHE)
cpu_has_phe_enabled  macro  arch/x86/include/asm/cpufeature.h  293  #define cpu_has_phe_enabled boot_cpu_has(X86_FEATURE_PHE_EN)
cpu_has_pmm  macro  arch/x86/include/asm/cpufeature.h  294  #define cpu_has_pmm boot_cpu_has(X86_FEATURE_PMM)
cpu_has_pmm_enabled  macro  arch/x86/include/asm/cpufeature.h  295  #define cpu_has_pmm_enabled boot_cpu_has(X86_FEATURE_PMM_EN)
cpu_has_ds  macro  arch/x86/include/asm/cpufeature.h  296  #define cpu_has_ds boot_cpu_has(X86_FEATURE_DS)
cpu_has_pebs  macro  arch/x86/include/asm/cpufeature.h  297  #define cpu_has_pebs boot_cpu_has(X86_FEATURE_PEBS)
cpu_has_clflush  macro  arch/x86/include/asm/cpufeature.h  298  #define cpu_has_clflush boot_cpu_has(X86_FEATURE_CLFLSH)
cpu_has_bts  macro  arch/x86/include/asm/cpufeature.h  299  #define cpu_has_bts boot_cpu_has(X86_FEATURE_BTS)
cpu_has_gbpages  macro  arch/x86/include/asm/cpufeature.h  300  #define cpu_has_gbpages boot_cpu_has(X86_FEATURE_GBPAGES)
cpu_has_arch_perfmon  macro  arch/x86/include/asm/cpufeature.h  301  #define cpu_has_arch_perfmon boot_cpu_has(X86_FEATURE_ARCH_PERFMON)
cpu_has_pat  macro  arch/x86/include/asm/cpufeature.h  302  #define cpu_has_pat boot_cpu_has(X86_FEATURE_PAT)
cpu_has_xmm4_1  macro  arch/x86/include/asm/cpufeature.h  303  #define cpu_has_xmm4_1 boot_cpu_has(X86_FEATURE_XMM4_1)
cpu_has_xmm4_2  macro  arch/x86/include/asm/cpufeature.h  304  #define cpu_has_xmm4_2 boot_cpu_has(X86_FEATURE_XMM4_2)
cpu_has_x2apic  macro  arch/x86/include/asm/cpufeature.h  305  #define cpu_has_x2apic boot_cpu_has(X86_FEATURE_X2APIC)
cpu_has_xsave  macro  arch/x86/include/asm/cpufeature.h  306  #define cpu_has_xsave boot_cpu_has(X86_FEATURE_XSAVE)
cpu_has_xsaveopt  macro  arch/x86/include/asm/cpufeature.h  307  #define cpu_has_xsaveopt boot_cpu_has(X86_FEATURE_XSAVEOPT)
cpu_has_osxsave  macro  arch/x86/include/asm/cpufeature.h  308  #define cpu_has_osxsave boot_cpu_has(X86_FEATURE_OSXSAVE)
cpu_has_hypervisor  macro  arch/x86/include/asm/cpufeature.h  309  #define cpu_has_hypervisor boot_cpu_has(X86_FEATURE_HYPERVISOR)
cpu_has_pclmulqdq  macro  arch/x86/include/asm/cpufeature.h  310  #define cpu_has_pclmulqdq boot_cpu_has(X86_FEATURE_PCLMULQDQ)
cpu_has_perfctr_core  macro  arch/x86/include/asm/cpufeature.h  311  #define cpu_has_perfctr_core boot_cpu_has(X86_FEATURE_PERFCTR_CORE)
cpu_has_cx8  macro  arch/x86/include/asm/cpufeature.h  312  #define cpu_has_cx8 boot_cpu_has(X86_FEATURE_CX8)
cpu_has_cx16  macro  arch/x86/include/asm/cpufeature.h  313  #define cpu_has_cx16 boot_cpu_has(X86_FEATURE_CX16)
cpu_has_eager_fpu  macro  arch/x86/include/asm/cpufeature.h  314  #define cpu_has_eager_fpu boot_cpu_has(X86_FEATURE_EAGER_FPU)
cpu_has_topoext  macro  arch/x86/include/asm/cpufeature.h  315  #define cpu_has_topoext boot_cpu_has(X86_FEATURE_TOPOEXT)
__static_cpu_has  function  arch/x86/include/asm/cpufeature.h  346  static __always_inline __pure bool __static_cpu_has(u16 bit)
static_cpu_has  macro  arch/x86/include/asm/cpufeature.h  399  #define static_cpu_has(bit) boot_cpu_has(bit)
_ASM_X86_PGTABLE_DEFS_H  macro  arch/x86/include/asm/pgtable_types.h  2  #define _ASM_X86_PGTABLE_DEFS_H
FIRST_USER_ADDRESS  macro  arch/x86/include/asm/pgtable_types.h  7  #define FIRST_USER_ADDRESS 0
_PAGE_BIT_PRESENT  macro  arch/x86/include/asm/pgtable_types.h  9  #define _PAGE_BIT_PRESENT 0
_PAGE_BIT_RW  macro  arch/x86/include/asm/pgtable_types.h  10  #define _PAGE_BIT_RW 1
_PAGE_BIT_USER  macro  arch/x86/include/asm/pgtable_types.h  11  #define _PAGE_BIT_USER 2
_PAGE_BIT_PWT  macro  arch/x86/include/asm/pgtable_types.h  12  #define _PAGE_BIT_PWT 3
_PAGE_BIT_PCD  macro  arch/x86/include/asm/pgtable_types.h  13  #define _PAGE_BIT_PCD 4
_PAGE_BIT_ACCESSED  macro  arch/x86/include/asm/pgtable_types.h  14  #define _PAGE_BIT_ACCESSED 5
_PAGE_BIT_DIRTY  macro  arch/x86/include/asm/pgtable_types.h  15  #define _PAGE_BIT_DIRTY 6
_PAGE_BIT_PSE  macro  arch/x86/include/asm/pgtable_types.h  16  #define _PAGE_BIT_PSE 7
_PAGE_BIT_PAT  macro  arch/x86/include/asm/pgtable_types.h  17  #define _PAGE_BIT_PAT 7
_PAGE_BIT_GLOBAL  macro  arch/x86/include/asm/pgtable_types.h  18  #define _PAGE_BIT_GLOBAL 8
_PAGE_BIT_UNUSED1  macro  arch/x86/include/asm/pgtable_types.h  19  #define _PAGE_BIT_UNUSED1 9
_PAGE_BIT_IOMAP  macro  arch/x86/include/asm/pgtable_types.h  20  #define _PAGE_BIT_IOMAP 10
_PAGE_BIT_HIDDEN  macro  arch/x86/include/asm/pgtable_types.h  21  #define _PAGE_BIT_HIDDEN 11
_PAGE_BIT_PAT_LARGE  macro  arch/x86/include/asm/pgtable_types.h  22  #define _PAGE_BIT_PAT_LARGE 12
_PAGE_BIT_SPECIAL  macro  arch/x86/include/asm/pgtable_types.h  23  #define _PAGE_BIT_SPECIAL _PAGE_BIT_UNUSED1
_PAGE_BIT_CPA_TEST  macro  arch/x86/include/asm/pgtable_types.h  24  #define _PAGE_BIT_CPA_TEST _PAGE_BIT_UNUSED1
_PAGE_BIT_SPLITTING  macro  arch/x86/include/asm/pgtable_types.h  25  #define _PAGE_BIT_SPLITTING _PAGE_BIT_UNUSED1
_PAGE_BIT_NX  macro  arch/x86/include/asm/pgtable_types.h  26  #define _PAGE_BIT_NX 63
_PAGE_BIT_PROTNONE  macro  arch/x86/include/asm/pgtable_types.h  30  #define _PAGE_BIT_PROTNONE _PAGE_BIT_GLOBAL
_PAGE_BIT_FILE  macro  arch/x86/include/asm/pgtable_types.h  32  #define _PAGE_BIT_FILE _PAGE_BIT_DIRTY
_PAGE_PRESENT  macro  arch/x86/include/asm/pgtable_types.h  34  #define _PAGE_PRESENT (_AT(pteval_t,1) << _PAGE_BIT_PRESENT)
_PAGE_RW  macro  arch/x86/include/asm/pgtable_types.h  35  #define _PAGE_RW (_AT(pteval_t,1) << _PAGE_BIT_RW)
_PAGE_USER  macro  arch/x86/include/asm/pgtable_types.h  36  #define _PAGE_USER (_AT(pteval_t,1) << _PAGE_BIT_USER)
_PAGE_PWT  macro  arch/x86/include/asm/pgtable_types.h  37  #define _PAGE_PWT (_AT(pteval_t,1) << _PAGE_BIT_PWT)
_PAGE_PCD  macro  arch/x86/include/asm/pgtable_types.h  38  #define _PAGE_PCD (_AT(pteval_t,1) << _PAGE_BIT_PCD)
_PAGE_ACCESSED  macro  arch/x86/include/asm/pgtable_types.h  39  #define _PAGE_ACCESSED (_AT(pteval_t,1) << _PAGE_BIT_ACCESSED)
_PAGE_DIRTY  macro  arch/x86/include/asm/pgtable_types.h  40  #define _PAGE_DIRTY (_AT(pteval_t,1) << _PAGE_BIT_DIRTY)
_PAGE_PSE  macro  arch/x86/include/asm/pgtable_types.h  41  #define _PAGE_PSE (_AT(pteval_t,1) << _PAGE_BIT_PSE)
_PAGE_GLOBAL  macro  arch/x86/include/asm/pgtable_types.h  42  #define _PAGE_GLOBAL (_AT(pteval_t,1) << _PAGE_BIT_GLOBAL)
_PAGE_UNUSED1  macro  arch/x86/include/asm/pgtable_types.h  43  #define _PAGE_UNUSED1 (_AT(pteval_t,1) << _PAGE_BIT_UNUSED1)
_PAGE_IOMAP  macro  arch/x86/include/asm/pgtable_types.h  44  #define _PAGE_IOMAP (_AT(pteval_t,1) << _PAGE_BIT_IOMAP)
_PAGE_PAT  macro  arch/x86/include/asm/pgtable_types.h  45  #define _PAGE_PAT (_AT(pteval_t,1) << _PAGE_BIT_PAT)
_PAGE_PAT_LARGE  macro  arch/x86/include/asm/pgtable_types.h  46  #define _PAGE_PAT_LARGE (_AT(pteval_t,1) << _PAGE_BIT_PAT_LARGE)
_PAGE_SPECIAL  macro  arch/x86/include/asm/pgtable_types.h  47  #define _PAGE_SPECIAL (_AT(pteval_t,1) << _PAGE_BIT_SPECIAL)
_PAGE_CPA_TEST  macro  arch/x86/include/asm/pgtable_types.h  48  #define _PAGE_CPA_TEST (_AT(pteval_t,1) << _PAGE_BIT_CPA_TEST)
_PAGE_SPLITTING  macro  arch/x86/include/asm/pgtable_types.h  49  #define _PAGE_SPLITTING (_AT(pteval_t,1) << _PAGE_BIT_SPLITTING)
__HAVE_ARCH_PTE_SPECIAL  macro  arch/x86/include/asm/pgtable_types.h  50  #define __HAVE_ARCH_PTE_SPECIAL
_PAGE_HIDDEN  macro  arch/x86/include/asm/pgtable_types.h  55  #define _PAGE_HIDDEN (_AT(pteval_t,0))
_PAGE_NX  macro  arch/x86/include/asm/pgtable_types.h  61  #define _PAGE_NX (_AT(pteval_t,0))
_PAGE_FILE  macro  arch/x86/include/asm/pgtable_types.h  64  #define _PAGE_FILE (_AT(pteval_t,1) << _PAGE_BIT_FILE)
_PAGE_PROTNONE  macro  arch/x86/include/asm/pgtable_types.h  65  #define _PAGE_PROTNONE (_AT(pteval_t,1) << _PAGE_BIT_PROTNONE)
_PAGE_NUMA  macro  arch/x86/include/asm/pgtable_types.h  85  #define _PAGE_NUMA _PAGE_PROTNONE
_PAGE_TABLE  macro  arch/x86/include/asm/pgtable_types.h  88  #define _PAGE_TABLE (_PAGE_PRESENT | _PAGE_RW | _PAGE_USER | _PAGE_ACCESSED | _PAGE_DIRTY)
_KERNPG_TABLE  macro  arch/x86/include/asm/pgtable_types.h  90  #define _KERNPG_TABLE (_PAGE_PRESENT | _PAGE_RW | _PAGE_ACCESSED | _PAGE_DIRTY)
_PAGE_CHG_MASK  macro  arch/x86/include/asm/pgtable_types.h  94  #define _PAGE_CHG_MASK (PTE_PFN_MASK | _PAGE_PCD | _PAGE_PWT | _PAGE_SPECIAL | _PAGE_ACCESSED | _PAGE_DIRTY)
_HPAGE_CHG_MASK  macro  arch/x86/include/asm/pgtable_types.h  95  #define _HPAGE_CHG_MASK (_PAGE_CHG_MASK | _PAGE_PSE)
_PAGE_CACHE_MASK  macro  arch/x86/include/asm/pgtable_types.h  97  #define _PAGE_CACHE_MASK (_PAGE_PCD | _PAGE_PWT)
_PAGE_CACHE_WB  macro  arch/x86/include/asm/pgtable_types.h  98  #define _PAGE_CACHE_WB (0)
_PAGE_CACHE_WC  macro  arch/x86/include/asm/pgtable_types.h  99  #define _PAGE_CACHE_WC (_PAGE_PWT)
_PAGE_CACHE_UC_MINUS  macro  arch/x86/include/asm/pgtable_types.h  100  #define _PAGE_CACHE_UC_MINUS (_PAGE_PCD)
_PAGE_CACHE_UC  macro  arch/x86/include/asm/pgtable_types.h  101  #define _PAGE_CACHE_UC (_PAGE_PCD | _PAGE_PWT)
PAGE_NONE  macro  arch/x86/include/asm/pgtable_types.h  103  #define PAGE_NONE __pgprot(_PAGE_PROTNONE | _PAGE_ACCESSED)
PAGE_SHARED  macro  arch/x86/include/asm/pgtable_types.h  105  #define PAGE_SHARED __pgprot(_PAGE_PRESENT | _PAGE_RW | _PAGE_USER | _PAGE_ACCESSED | _PAGE_NX)
PAGE_SHARED_EXEC  macro  arch/x86/include/asm/pgtable_types.h  108  #define PAGE_SHARED_EXEC __pgprot(_PAGE_PRESENT | _PAGE_RW | _PAGE_USER | _PAGE_ACCESSED)
PAGE_COPY_NOEXEC  macro  arch/x86/include/asm/pgtable_types.h  110  #define PAGE_COPY_NOEXEC __pgprot(_PAGE_PRESENT | _PAGE_USER | _PAGE_ACCESSED | _PAGE_NX)
PAGE_COPY_EXEC  macro  arch/x86/include/asm/pgtable_types.h  112  #define PAGE_COPY_EXEC __pgprot(_PAGE_PRESENT | _PAGE_USER | _PAGE_ACCESSED)
PAGE_COPY  macro  arch/x86/include/asm/pgtable_types.h  113  #define PAGE_COPY PAGE_COPY_NOEXEC
PAGE_READONLY  macro  arch/x86/include/asm/pgtable_types.h  115  #define PAGE_READONLY __pgprot(_PAGE_PRESENT | _PAGE_USER | _PAGE_ACCESSED | _PAGE_NX)
PAGE_READONLY_EXEC  macro  arch/x86/include/asm/pgtable_types.h  117  #define PAGE_READONLY_EXEC __pgprot(_PAGE_PRESENT | _PAGE_USER | _PAGE_ACCESSED)
__PAGE_KERNEL_EXEC  macro  arch/x86/include/asm/pgtable_types.h  120  #define __PAGE_KERNEL_EXEC (_PAGE_PRESENT | _PAGE_RW | _PAGE_DIRTY | _PAGE_ACCESSED | _PAGE_GLOBAL)
__PAGE_KERNEL  macro  arch/x86/include/asm/pgtable_types.h  121  #define __PAGE_KERNEL (__PAGE_KERNEL_EXEC | _PAGE_NX)
__PAGE_KERNEL_RO  macro  arch/x86/include/asm/pgtable_types.h  123  #define __PAGE_KERNEL_RO (__PAGE_KERNEL & ~_PAGE_RW)
__PAGE_KERNEL_RX  macro  arch/x86/include/asm/pgtable_types.h  124  #define __PAGE_KERNEL_RX (__PAGE_KERNEL_EXEC & ~_PAGE_RW)
__PAGE_KERNEL_EXEC_NOCACHE  macro  arch/x86/include/asm/pgtable_types.h  125  #define __PAGE_KERNEL_EXEC_NOCACHE (__PAGE_KERNEL_EXEC | _PAGE_PCD | _PAGE_PWT)
__PAGE_KERNEL_WC  macro  arch/x86/include/asm/pgtable_types.h  126  #define __PAGE_KERNEL_WC (__PAGE_KERNEL | _PAGE_CACHE_WC)
__PAGE_KERNEL_NOCACHE  macro  arch/x86/include/asm/pgtable_types.h  127  #define __PAGE_KERNEL_NOCACHE (__PAGE_KERNEL | _PAGE_PCD | _PAGE_PWT)
__PAGE_KERNEL_UC_MINUS  macro  arch/x86/include/asm/pgtable_types.h  128  #define __PAGE_KERNEL_UC_MINUS (__PAGE_KERNEL | _PAGE_PCD)
__PAGE_KERNEL_VSYSCALL  macro  arch/x86/include/asm/pgtable_types.h  129  #define __PAGE_KERNEL_VSYSCALL (__PAGE_KERNEL_RX | _PAGE_USER)
__PAGE_KERNEL_VVAR  macro  arch/x86/include/asm/pgtable_types.h  130  #define __PAGE_KERNEL_VVAR (__PAGE_KERNEL_RO | _PAGE_USER)
__PAGE_KERNEL_VVAR_NOCACHE  macro  arch/x86/include/asm/pgtable_types.h  131  #define __PAGE_KERNEL_VVAR_NOCACHE (__PAGE_KERNEL_VVAR | _PAGE_PCD | _PAGE_PWT)
__PAGE_KERNEL_LARGE  macro  arch/x86/include/asm/pgtable_types.h  132  #define __PAGE_KERNEL_LARGE (__PAGE_KERNEL | _PAGE_PSE)
__PAGE_KERNEL_LARGE_NOCACHE  macro  arch/x86/include/asm/pgtable_types.h  133  #define __PAGE_KERNEL_LARGE_NOCACHE (__PAGE_KERNEL | _PAGE_CACHE_UC | _PAGE_PSE)
__PAGE_KERNEL_LARGE_EXEC  macro  arch/x86/include/asm/pgtable_types.h  134  #define __PAGE_KERNEL_LARGE_EXEC (__PAGE_KERNEL_EXEC | _PAGE_PSE)
__PAGE_KERNEL_IO  macro  arch/x86/include/asm/pgtable_types.h  136  #define __PAGE_KERNEL_IO (__PAGE_KERNEL | _PAGE_IOMAP)
__PAGE_KERNEL_IO_NOCACHE  macro  arch/x86/include/asm/pgtable_types.h  137  #define __PAGE_KERNEL_IO_NOCACHE (__PAGE_KERNEL_NOCACHE | _PAGE_IOMAP)
__PAGE_KERNEL_IO_UC_MINUS  macro  arch/x86/include/asm/pgtable_types.h  138  #define __PAGE_KERNEL_IO_UC_MINUS (__PAGE_KERNEL_UC_MINUS | _PAGE_IOMAP)
__PAGE_KERNEL_IO_WC  macro  arch/x86/include/asm/pgtable_types.h  139  #define __PAGE_KERNEL_IO_WC (__PAGE_KERNEL_WC | _PAGE_IOMAP)
PAGE_KERNEL  macro  arch/x86/include/asm/pgtable_types.h  141  #define PAGE_KERNEL __pgprot(__PAGE_KERNEL)
PAGE_KERNEL_RO  macro  arch/x86/include/asm/pgtable_types.h  142  #define PAGE_KERNEL_RO __pgprot(__PAGE_KERNEL_RO)
PAGE_KERNEL_EXEC  macro  arch/x86/include/asm/pgtable_types.h  143  #define PAGE_KERNEL_EXEC __pgprot(__PAGE_KERNEL_EXEC)
PAGE_KERNEL_RX  macro  arch/x86/include/asm/pgtable_types.h  144  #define PAGE_KERNEL_RX __pgprot(__PAGE_KERNEL_RX)
PAGE_KERNEL_WC  macro  arch/x86/include/asm/pgtable_types.h  145  #define PAGE_KERNEL_WC __pgprot(__PAGE_KERNEL_WC)
PAGE_KERNEL_NOCACHE  macro  arch/x86/include/asm/pgtable_types.h  146  #define PAGE_KERNEL_NOCACHE __pgprot(__PAGE_KERNEL_NOCACHE)
PAGE_KERNEL_UC_MINUS  macro  arch/x86/include/asm/pgtable_types.h  147  #define PAGE_KERNEL_UC_MINUS __pgprot(__PAGE_KERNEL_UC_MINUS)
PAGE_KERNEL_EXEC_NOCACHE  macro  arch/x86/include/asm/pgtable_types.h  148  #define PAGE_KERNEL_EXEC_NOCACHE __pgprot(__PAGE_KERNEL_EXEC_NOCACHE)
PAGE_KERNEL_LARGE  macro  arch/x86/include/asm/pgtable_types.h  149  #define PAGE_KERNEL_LARGE __pgprot(__PAGE_KERNEL_LARGE)
PAGE_KERNEL_LARGE_NOCACHE  macro  arch/x86/include/asm/pgtable_types.h  150  #define PAGE_KERNEL_LARGE_NOCACHE __pgprot(__PAGE_KERNEL_LARGE_NOCACHE)
PAGE_KERNEL_LARGE_EXEC  macro  arch/x86/include/asm/pgtable_types.h  151  #define PAGE_KERNEL_LARGE_EXEC __pgprot(__PAGE_KERNEL_LARGE_EXEC)
PAGE_KERNEL_VSYSCALL  macro  arch/x86/include/asm/pgtable_types.h  152  #define PAGE_KERNEL_VSYSCALL __pgprot(__PAGE_KERNEL_VSYSCALL)
PAGE_KERNEL_VVAR  macro  arch/x86/include/asm/pgtable_types.h  153  #define PAGE_KERNEL_VVAR __pgprot(__PAGE_KERNEL_VVAR)
PAGE_KERNEL_VVAR_NOCACHE  macro  arch/x86/include/asm/pgtable_types.h  154  #define PAGE_KERNEL_VVAR_NOCACHE __pgprot(__PAGE_KERNEL_VVAR_NOCACHE)
PAGE_KERNEL_IO  macro  arch/x86/include/asm/pgtable_types.h  156  #define PAGE_KERNEL_IO __pgprot(__PAGE_KERNEL_IO)
PAGE_KERNEL_IO_NOCACHE  macro  arch/x86/include/asm/pgtable_types.h  157  #define PAGE_KERNEL_IO_NOCACHE __pgprot(__PAGE_KERNEL_IO_NOCACHE)
PAGE_KERNEL_IO_UC_MINUS  macro  arch/x86/include/asm/pgtable_types.h  158  #define PAGE_KERNEL_IO_UC_MINUS __pgprot(__PAGE_KERNEL_IO_UC_MINUS)
PAGE_KERNEL_IO_WC  macro  arch/x86/include/asm/pgtable_types.h  159  #define PAGE_KERNEL_IO_WC __pgprot(__PAGE_KERNEL_IO_WC)
__P000  macro  arch/x86/include/asm/pgtable_types.h  162  #define __P000 PAGE_NONE
__P001  macro  arch/x86/include/asm/pgtable_types.h  163  #define __P001 PAGE_READONLY
__P010  macro  arch/x86/include/asm/pgtable_types.h  164  #define __P010 PAGE_COPY
__P011  macro  arch/x86/include/asm/pgtable_types.h  165  #define __P011 PAGE_COPY
__P100  macro  arch/x86/include/asm/pgtable_types.h  166  #define __P100 PAGE_READONLY_EXEC
__P101  macro  arch/x86/include/asm/pgtable_types.h  167  #define __P101 PAGE_READONLY_EXEC
__P110  macro  arch/x86/include/asm/pgtable_types.h  168  #define __P110 PAGE_COPY_EXEC
__P111  macro  arch/x86/include/asm/pgtable_types.h  169  #define __P111 PAGE_COPY_EXEC
__S000  macro  arch/x86/include/asm/pgtable_types.h  171  #define __S000 PAGE_NONE
__S001  macro  arch/x86/include/asm/pgtable_types.h  172  #define __S001 PAGE_READONLY
__S010  macro  arch/x86/include/asm/pgtable_types.h  173  #define __S010 PAGE_SHARED
__S011  macro  arch/x86/include/asm/pgtable_types.h  174  #define __S011 PAGE_SHARED
__S100  macro  arch/x86/include/asm/pgtable_types.h  175  #define __S100 PAGE_READONLY_EXEC
__S101  macro  arch/x86/include/asm/pgtable_types.h  176  #define __S101 PAGE_READONLY_EXEC
__S110  macro  arch/x86/include/asm/pgtable_types.h  177  #define __S110 PAGE_SHARED_EXEC
__S111  macro  arch/x86/include/asm/pgtable_types.h  178  #define __S111 PAGE_SHARED_EXEC
__PAGE_KERNEL_IDENT_LARGE_EXEC  macro  arch/x86/include/asm/pgtable_types.h  184  #define __PAGE_KERNEL_IDENT_LARGE_EXEC __PAGE_KERNEL_LARGE_EXEC
PTE_IDENT_ATTR  macro  arch/x86/include/asm/pgtable_types.h  191  #define PTE_IDENT_ATTR 0x003
PDE_IDENT_ATTR  macro  arch/x86/include/asm/pgtable_types.h  192  #define PDE_IDENT_ATTR 0x067
PGD_IDENT_ATTR  macro  arch/x86/include/asm/pgtable_types.h  193  #define PGD_IDENT_ATTR 0x001
PTE_PFN_MASK  macro  arch/x86/include/asm/pgtable_types.h  207  #define PTE_PFN_MASK ((pteval_t)PHYSICAL_PAGE_MASK)
PTE_FLAGS_MASK  macro  arch/x86/include/asm/pgtable_types.h  210  #define PTE_FLAGS_MASK (~PTE_PFN_MASK)
pgprot  struct  arch/x86/include/asm/pgtable_types.h  212  typedef struct pgprot { pgprotval_t pgprot; } pgprot_t;
native_make_pgd  function  arch/x86/include/asm/pgtable_types.h  216  static inline pgd_t native_make_pgd(pgdval_t val)
native_pgd_val  function  arch/x86/include/asm/pgtable_types.h  221  static inline pgdval_t native_pgd_val(pgd_t pgd)
pgd_flags  function  arch/x86/include/asm/pgtable_types.h  226  static inline pgdval_t pgd_flags(pgd_t pgd)
native_make_pud  function  arch/x86/include/asm/pgtable_types.h  234  static inline pud_t native_make_pud(pmdval_t val)
native_pud_val  function  arch/x86/include/asm/pgtable_types.h  246  static inline pudval_t native_pud_val(pud_t pud)
native_make_pmd  function  arch/x86/include/asm/pgtable_types.h  255  static inline pmd_t native_make_pmd(pmdval_t val)
native_pmd_val  function  arch/x86/include/asm/pgtable_types.h  267  static inline pmdval_t native_pmd_val(pmd_t pmd)
pud_flags  function  arch/x86/include/asm/pgtable_types.h  273  static inline pudval_t pud_flags(pud_t pud)
pmd_flags  function  arch/x86/include/asm/pgtable_types.h  278  static inline pmdval_t pmd_flags(pmd_t pmd)
native_make_pte  function  arch/x86/include/asm/pgtable_types.h  283  static inline pte_t native_make_pte(pteval_t val)
native_pte_val  function  arch/x86/include/asm/pgtable_types.h  288  static inline pteval_t native_pte_val(pte_t pte)
pte_flags  function  arch/x86/include/asm/pgtable_types.h  293  static inline pteval_t pte_flags(pte_t pte)
pgprot_val  macro  arch/x86/include/asm/pgtable_types.h  298  #define pgprot_val(x) ((x).pgprot)
__pgprot  macro  arch/x86/include/asm/pgtable_types.h  299  #define __pgprot(x) ((pgprot_t) { (x) } )
set_nx  prototype  arch/x86/include/asm/pgtable_types.h  305  extern void set_nx(void);
pgprot_writecombine  macro  include/asm-generic/pgtable.h  245  #define pgprot_writecombine pgprot_noncached
__HAVE_PFNMAP_TRACKING  macro  arch/x86/include/asm/pgtable_types.h  312  #define __HAVE_PFNMAP_TRACKING
__HAVE_PHYS_MEM_ACCESS_PROT  macro  arch/x86/include/asm/pgtable_types.h  314  #define __HAVE_PHYS_MEM_ACCESS_PROT
phys_mem_access_prot  prototype  arch/x86/include/asm/pgtable_types.h  317  pgprot_t phys_mem_access_prot(struct file *file,unsigned long pfn,unsigned long size, pgprot_t vma_prot);
phys_mem_access_prot_allowed  prototype  arch/x86/include/asm/pgtable_types.h  319  int phys_mem_access_prot_allowed(struct file *file,unsigned long pfn,unsigned long size, pgprot_t *vma_prot);
set_pte_vaddr  prototype  arch/x86/include/asm/pgtable_types.h  322  void set_pte_vaddr(unsigned long vaddr,pte_t pte);
native_pagetable_reserve  prototype  arch/x86/include/asm/pgtable_types.h  324  extern void native_pagetable_reserve(u64 start,u64 end);
native_pagetable_init  macro  arch/x86/include/asm/pgtable_types.h  328  #define native_pagetable_init paging_init
arch_report_meminfo  prototype  arch/x86/include/asm/pgtable_types.h  332  extern void arch_report_meminfo(struct seq_file *m);
update_page_count  function  arch/x86/include/asm/pgtable_types.h  345  static inline void update_page_count(int level,unsigned long pages) { }
lookup_address  prototype  arch/x86/include/asm/pgtable_types.h  354  extern pte_t *lookup_address(unsigned long address,unsigned int *level);
_ASM_X86_MSR_H  macro  arch/x86/include/asm/msr.h  2  #define _ASM_X86_MSR_H
msr  struct  arch/x86/include/asm/msr.h  12  struct msr {
msr_info  struct  arch/x86/include/asm/msr.h  22  struct msr_info {
msr_regs_info  struct  arch/x86/include/asm/msr.h  29  struct msr_regs_info {
native_read_tscp  function  arch/x86/include/asm/msr.h  34  static inline unsigned long long native_read_tscp(unsigned int *aux)
DECLARE_ARGS  macro  arch/x86/include/asm/msr.h  54  #define DECLARE_ARGS(val,low,high) unsigned long long val
EAX_EDX_VAL  macro  arch/x86/include/asm/msr.h  55  #define EAX_EDX_VAL(val,low,high) (val)
EAX_EDX_ARGS  macro  arch/x86/include/asm/msr.h  56  #define EAX_EDX_ARGS(val,low,high) "A" (val)
EAX_EDX_RET  macro  arch/x86/include/asm/msr.h  57  #define EAX_EDX_RET(val,low,high) "=A" (val)
native_read_msr  function  arch/x86/include/asm/msr.h  60  static inline unsigned long long native_read_msr(unsigned int msr)
native_read_msr_safe  function  arch/x86/include/asm/msr.h  69  static inline unsigned long long native_read_msr_safe(unsigned int msr,int *err)
native_write_msr  function  arch/x86/include/asm/msr.h  85  static inline void native_write_msr(unsigned int msr,unsigned low, unsigned high)
native_write_msr_safe  function  arch/x86/include/asm/msr.h  92  notrace static inline int native_write_msr_safe(unsigned int msr,unsigned low, unsigned high)
native_read_tsc  prototype  arch/x86/include/asm/msr.h  108  extern unsigned long long native_read_tsc(void);
rdmsr_safe_regs  prototype  arch/x86/include/asm/msr.h  110  extern int rdmsr_safe_regs(u32 regs[8]);
wrmsr_safe_regs  prototype  arch/x86/include/asm/msr.h  111  extern int wrmsr_safe_regs(u32 regs[8]);
__native_read_tsc  function  arch/x86/include/asm/msr.h  113  static __always_inline unsigned long long __native_read_tsc(void)
native_read_pmc  function  arch/x86/include/asm/msr.h  122  static inline unsigned long long native_read_pmc(int counter)
rdmsr  macro  arch/x86/include/asm/paravirt.h  143  #define rdmsr(msr,val1,val2) do { int _err; u64 _l = paravirt_read_msr(msr, &_err); val1 = (u32)_l; val2 = _l >> 32; } while (0)
wrmsr  macro  arch/x86/include/asm/paravirt.h  148  #define wrmsr(msr,val1,val2) do { paravirt_write_msr(msr, val1, val2); } while (0)
rdmsrl  macro  arch/x86/include/asm/paravirt.h  154  #define rdmsrl(msr,val) do { int _err; val = paravirt_read_msr(msr, &_err); } while (0)
wrmsrl  macro  arch/x86/include/asm/paravirt.h  156  #define wrmsrl(msr,val) wrmsr(msr,(u32)((u64)(val)),((u64)(val))>>32)
wrmsr_safe  macro  arch/x86/include/asm/paravirt.h  157  #define wrmsr_safe(msr,a,b) paravirt_write_msr(msr,a,b)
rdmsr_safe  macro  arch/x86/include/asm/paravirt.h  167  #define rdmsr_safe(msr,a,b) ({ int _err; u64 _l = paravirt_read_msr(msr, &_err); (*a) = (u32)_l; (*b) = _l >> 32; _err; })
rdmsrl_safe  function  arch/x86/include/asm/paravirt.h  169  static inline int rdmsrl_safe(unsigned msr,unsigned long long *p)
rdtscl  macro  arch/x86/include/asm/paravirt.h  186  #define rdtscl(low) do { u64 _l = paravirt_read_tsc(); low = (int)_l; } while (0)
rdtscll  macro  arch/x86/include/asm/paravirt.h  188  #define rdtscll(val) (val = paravirt_read_tsc())
rdpmc  macro  arch/x86/include/asm/paravirt.h  214  #define rdpmc(counter,low,high) do { u64 _l = paravirt_read_pmc(counter); low = (u32)_l; high = _l >> 32; } while (0)
rdpmcl  macro  arch/x86/include/asm/paravirt.h  216  #define rdpmcl(counter,val) ((val) = paravirt_read_pmc(counter))
rdtscp  macro  arch/x86/include/asm/paravirt.h  230  #define rdtscp(low,high,aux) do { int __aux; unsigned long __val = paravirt_rdtscp(&__aux); (low) = (u32)__val; (high) = (u32)(__val >> 32); (aux) = __aux; } while (0)
rdtscpll  macro  arch/x86/include/asm/paravirt.h  237  #define rdtscpll(val,aux) do { unsigned long __aux; val = paravirt_rdtscp(&__aux); (aux) = __aux; } while (0)
wrmsrl_safe  macro  arch/x86/include/asm/msr.h  209  #define wrmsrl_safe(msr,val) wrmsr_safe((msr),(u32)(val), (u32)((val) >> 32))
write_tsc  macro  arch/x86/include/asm/msr.h  211  #define write_tsc(val1,val2) wrmsr(MSR_IA32_TSC,(val1),(val2))
write_rdtscp_aux  macro  arch/x86/include/asm/msr.h  213  #define write_rdtscp_aux(val) wrmsr(MSR_TSC_AUX,(val),0)
msrs_alloc  prototype  arch/x86/include/asm/msr.h  215  struct msr *msrs_alloc(void);
msrs_free  prototype  arch/x86/include/asm/msr.h  216  void msrs_free(struct msr *msrs);
rdmsr_on_cpu  function  arch/x86/include/asm/msr.h  228  static inline int rdmsr_on_cpu(unsigned int cpu,u32 msr_no,u32 *l,u32 *h)
wrmsr_on_cpu  function  arch/x86/include/asm/msr.h  233  static inline int wrmsr_on_cpu(unsigned int cpu,u32 msr_no,u32 l,u32 h)
rdmsr_on_cpus  function  arch/x86/include/asm/msr.h  239  static inline void rdmsr_on_cpus(const struct cpumask *m,u32 msr_no,struct msr *msrs)
wrmsr_on_cpus  function  arch/x86/include/asm/msr.h  244  static inline void wrmsr_on_cpus(const struct cpumask *m,u32 msr_no,struct msr *msrs)
rdmsr_safe_on_cpu  function  arch/x86/include/asm/msr.h  249  static inline int rdmsr_safe_on_cpu(unsigned int cpu,u32 msr_no,u32 *l, u32 *h)
wrmsr_safe_on_cpu  function  arch/x86/include/asm/msr.h  253  static inline int wrmsr_safe_on_cpu(unsigned int cpu,u32 msr_no,u32 l,u32 h)
rdmsr_safe_regs_on_cpu  function  arch/x86/include/asm/msr.h  257  static inline int rdmsr_safe_regs_on_cpu(unsigned int cpu,u32 regs[8])
wrmsr_safe_regs_on_cpu  function  arch/x86/include/asm/msr.h  261  static inline int wrmsr_safe_regs_on_cpu(unsigned int cpu,u32 regs[8])
_ASM_X86_DESC_DEFS_H  macro  arch/x86/include/asm/desc_defs.h  3  #define _ASM_X86_DESC_DEFS_H
desc_struct  struct  arch/x86/include/asm/desc_defs.h  22  struct desc_struct {
GDT_ENTRY_INIT  macro  arch/x86/include/asm/desc_defs.h  41  #define GDT_ENTRY_INIT(flags,base,limit) { { { .a = ((limit) & 0xffff) | (((base) & 0xffff) << 16), .b = (((base) & 0xff0000) >> 16) | (((flags) & 0xf0ff) << 8) | ((limit) & 0xf0000) | ((base) & 0xff000000), } } }
gate_struct64  struct  arch/x86/include/asm/desc_defs.h  51  struct gate_struct64 {
PTR_LOW  macro  arch/x86/include/asm/desc_defs.h  60  #define PTR_LOW(x) ((unsigned long long)(x) & 0xFFFF)
PTR_MIDDLE  macro  arch/x86/include/asm/desc_defs.h  61  #define PTR_MIDDLE(x) (((unsigned long long)(x) >> 16) & 0xFFFF)
PTR_HIGH  macro  arch/x86/include/asm/desc_defs.h  62  #define PTR_HIGH(x) ((unsigned long long)(x) >> 32)
ldttss_desc64  struct  arch/x86/include/asm/desc_defs.h  71  struct ldttss_desc64 {
gate_offset  macro  arch/x86/include/asm/desc_defs.h  90  #define gate_offset(g) (((g).b & 0xffff0000) | ((g).a & 0x0000ffff))
gate_segment  macro  arch/x86/include/asm/desc_defs.h  91  #define gate_segment(g) ((g).a >> 16)
desc_ptr  struct  arch/x86/include/asm/desc_defs.h  94  struct desc_ptr {
_ASM_X86_NOPS_H  macro  arch/x86/include/asm/nops.h  2  #define _ASM_X86_NOPS_H
NOP_DS_PREFIX  macro  arch/x86/include/asm/nops.h  10  #define NOP_DS_PREFIX 0x3e
GENERIC_NOP1  macro  arch/x86/include/asm/nops.h  22  #define GENERIC_NOP1 0x90
GENERIC_NOP2  macro  arch/x86/include/asm/nops.h  23  #define GENERIC_NOP2 0x89,0xf6
GENERIC_NOP3  macro  arch/x86/include/asm/nops.h  24  #define GENERIC_NOP3 0x8d,0x76,0x00
GENERIC_NOP4  macro  arch/x86/include/asm/nops.h  25  #define GENERIC_NOP4 0x8d,0x74,0x26,0x00
GENERIC_NOP5  macro  arch/x86/include/asm/nops.h  26  #define GENERIC_NOP5 GENERIC_NOP1,GENERIC_NOP4
GENERIC_NOP6  macro  arch/x86/include/asm/nops.h  27  #define GENERIC_NOP6 0x8d,0xb6,0x00,0x00,0x00,0x00
GENERIC_NOP7  macro  arch/x86/include/asm/nops.h  28  #define GENERIC_NOP7 0x8d,0xb4,0x26,0x00,0x00,0x00,0x00
GENERIC_NOP8  macro  arch/x86/include/asm/nops.h  29  #define GENERIC_NOP8 GENERIC_NOP1,GENERIC_NOP7
GENERIC_NOP5_ATOMIC  macro  arch/x86/include/asm/nops.h  30  #define GENERIC_NOP5_ATOMIC NOP_DS_PREFIX,GENERIC_NOP4
K8_NOP1  macro  arch/x86/include/asm/nops.h  38  #define K8_NOP1 GENERIC_NOP1
K8_NOP2  macro  arch/x86/include/asm/nops.h  39  #define K8_NOP2 0x66,K8_NOP1
K8_NOP3  macro  arch/x86/include/asm/nops.h  40  #define K8_NOP3 0x66,K8_NOP2
K8_NOP4  macro  arch/x86/include/asm/nops.h  41  #define K8_NOP4 0x66,K8_NOP3
K8_NOP5  macro  arch/x86/include/asm/nops.h  42  #define K8_NOP5 K8_NOP3,K8_NOP2
K8_NOP6  macro  arch/x86/include/asm/nops.h  43  #define K8_NOP6 K8_NOP3,K8_NOP3
K8_NOP7  macro  arch/x86/include/asm/nops.h  44  #define K8_NOP7 K8_NOP4,K8_NOP3
K8_NOP8  macro  arch/x86/include/asm/nops.h  45  #define K8_NOP8 K8_NOP4,K8_NOP4
K8_NOP5_ATOMIC  macro  arch/x86/include/asm/nops.h  46  #define K8_NOP5_ATOMIC 0x66,K8_NOP4
K7_NOP1  macro  arch/x86/include/asm/nops.h  57  #define K7_NOP1 GENERIC_NOP1
K7_NOP2  macro  arch/x86/include/asm/nops.h  58  #define K7_NOP2 0x8b,0xc0
K7_NOP3  macro  arch/x86/include/asm/nops.h  59  #define K7_NOP3 0x8d,0x04,0x20
K7_NOP4  macro  arch/x86/include/asm/nops.h  60  #define K7_NOP4 0x8d,0x44,0x20,0x00
K7_NOP5  macro  arch/x86/include/asm/nops.h  61  #define K7_NOP5 K7_NOP4,K7_NOP1
K7_NOP6  macro  arch/x86/include/asm/nops.h  62  #define K7_NOP6 0x8d,0x80,0,0,0,0
K7_NOP7  macro  arch/x86/include/asm/nops.h  63  #define K7_NOP7 0x8D,0x04,0x05,0,0,0,0
K7_NOP8  macro  arch/x86/include/asm/nops.h  64  #define K7_NOP8 K7_NOP7,K7_NOP1
K7_NOP5_ATOMIC  macro  arch/x86/include/asm/nops.h  65  #define K7_NOP5_ATOMIC NOP_DS_PREFIX,K7_NOP4
P6_NOP1  macro  arch/x86/include/asm/nops.h  80  #define P6_NOP1 GENERIC_NOP1
P6_NOP2  macro  arch/x86/include/asm/nops.h  81  #define P6_NOP2 0x66,0x90
P6_NOP3  macro  arch/x86/include/asm/nops.h  82  #define P6_NOP3 0x0f,0x1f,0x00
P6_NOP4  macro  arch/x86/include/asm/nops.h  83  #define P6_NOP4 0x0f,0x1f,0x40,0
P6_NOP5  macro  arch/x86/include/asm/nops.h  84  #define P6_NOP5 0x0f,0x1f,0x44,0x00,0
P6_NOP6  macro  arch/x86/include/asm/nops.h  85  #define P6_NOP6 0x66,0x0f,0x1f,0x44,0x00,0
P6_NOP7  macro  arch/x86/include/asm/nops.h  86  #define P6_NOP7 0x0f,0x1f,0x80,0,0,0,0
P6_NOP8  macro  arch/x86/include/asm/nops.h  87  #define P6_NOP8 0x0f,0x1f,0x84,0x00,0,0,0,0
P6_NOP5_ATOMIC  macro  arch/x86/include/asm/nops.h  88  #define P6_NOP5_ATOMIC P6_NOP5
_ASM_MK_NOP  macro  arch/x86/include/asm/nops.h  93  #define _ASM_MK_NOP(x) ".byte " __stringify(x) "\n"
ASM_NOP1  macro  arch/x86/include/asm/nops.h  127  #define ASM_NOP1 _ASM_MK_NOP(GENERIC_NOP1)
ASM_NOP2  macro  arch/x86/include/asm/nops.h  128  #define ASM_NOP2 _ASM_MK_NOP(GENERIC_NOP2)
ASM_NOP3  macro  arch/x86/include/asm/nops.h  129  #define ASM_NOP3 _ASM_MK_NOP(GENERIC_NOP3)
ASM_NOP4  macro  arch/x86/include/asm/nops.h  130  #define ASM_NOP4 _ASM_MK_NOP(GENERIC_NOP4)
ASM_NOP5  macro  arch/x86/include/asm/nops.h  131  #define ASM_NOP5 _ASM_MK_NOP(GENERIC_NOP5)
ASM_NOP6  macro  arch/x86/include/asm/nops.h  132  #define ASM_NOP6 _ASM_MK_NOP(GENERIC_NOP6)
ASM_NOP7  macro  arch/x86/include/asm/nops.h  133  #define ASM_NOP7 _ASM_MK_NOP(GENERIC_NOP7)
ASM_NOP8  macro  arch/x86/include/asm/nops.h  134  #define ASM_NOP8 _ASM_MK_NOP(GENERIC_NOP8)
ASM_NOP5_ATOMIC  macro  arch/x86/include/asm/nops.h  135  #define ASM_NOP5_ATOMIC _ASM_MK_NOP(GENERIC_NOP5_ATOMIC)
ASM_NOP_MAX  macro  arch/x86/include/asm/nops.h  138  #define ASM_NOP_MAX 8
NOP_ATOMIC5  macro  arch/x86/include/asm/nops.h  139  #define NOP_ATOMIC5 (ASM_NOP_MAX+1)
arch_init_ideal_nops  prototype  arch/x86/include/asm/nops.h  143  extern void arch_init_ideal_nops(void);
_ASM_X86_SPECIAL_INSNS_H  macro  arch/x86/include/asm/special_insns.h  2  #define _ASM_X86_SPECIAL_INSNS_H
native_clts  function  arch/x86/include/asm/special_insns.h  7  static inline void native_clts(void)
native_read_cr0  function  arch/x86/include/asm/special_insns.h  21  static inline unsigned long native_read_cr0(void)
native_write_cr0  function  arch/x86/include/asm/special_insns.h  28  static inline void native_write_cr0(unsigned long val)
native_read_cr2  function  arch/x86/include/asm/special_insns.h  33  static inline unsigned long native_read_cr2(void)
native_write_cr2  function  arch/x86/include/asm/special_insns.h  40  static inline void native_write_cr2(unsigned long val)
native_read_cr3  function  arch/x86/include/asm/special_insns.h  45  static inline unsigned long native_read_cr3(void)
native_write_cr3  function  arch/x86/include/asm/special_insns.h  52  static inline void native_write_cr3(unsigned long val)
native_read_cr4  function  arch/x86/include/asm/special_insns.h  57  static inline unsigned long native_read_cr4(void)
native_read_cr4_safe  function  arch/x86/include/asm/special_insns.h  64  static inline unsigned long native_read_cr4_safe(void)
native_write_cr4  function  arch/x86/include/asm/special_insns.h  80  static inline void native_write_cr4(unsigned long val)
native_read_cr8  function  arch/x86/include/asm/special_insns.h  86  static inline unsigned long native_read_cr8(void)
native_write_cr8  function  arch/x86/include/asm/special_insns.h  93  static inline void native_write_cr8(unsigned long val)
native_wbinvd  function  arch/x86/include/asm/special_insns.h  99  static inline void native_wbinvd(void)
native_load_gs_index  prototype  arch/x86/include/asm/special_insns.h  104  extern void native_load_gs_index(unsigned);
read_cr0  function  arch/x86/include/asm/paravirt.h  53  static inline unsigned long read_cr0(void)
write_cr0  function  arch/x86/include/asm/paravirt.h  58  static inline void write_cr0(unsigned long x)
read_cr2  function  arch/x86/include/asm/paravirt.h  63  static inline unsigned long read_cr2(void)
write_cr2  function  arch/x86/include/asm/paravirt.h  68  static inline void write_cr2(unsigned long x)
read_cr3  function  arch/x86/include/asm/paravirt.h  73  static inline unsigned long read_cr3(void)
write_cr3  function  arch/x86/include/asm/paravirt.h  78  static inline void write_cr3(unsigned long x)
read_cr4  function  arch/x86/include/asm/paravirt.h  83  static inline unsigned long read_cr4(void)
read_cr4_safe  function  arch/x86/include/asm/paravirt.h  87  static inline unsigned long read_cr4_safe(void)
write_cr4  function  arch/x86/include/asm/paravirt.h  92  static inline void write_cr4(unsigned long x)
wbinvd  function  arch/x86/include/asm/paravirt.h  119  static inline void wbinvd(void)
read_cr8  function  arch/x86/include/asm/paravirt.h  98  static inline unsigned long read_cr8(void)
write_cr8  function  arch/x86/include/asm/paravirt.h  103  static inline void write_cr8(unsigned long x)
load_gs_index  function  arch/x86/include/asm/paravirt.h  284  static inline void load_gs_index(unsigned int gs)
clts  function  arch/x86/include/asm/paravirt.h  48  static inline void clts(void)
stts  macro  arch/x86/include/asm/special_insns.h  187  #define stts() write_cr0(read_cr0() | X86_CR0_TS)
clflush  function  arch/x86/include/asm/special_insns.h  189  static inline void clflush(volatile void *__p)
nop  macro  arch/x86/include/asm/special_insns.h  194  #define nop() asm volatile ("nop")
_LINUX_PERSONALITY_H  macro  include/linux/personality.h  2  #define _LINUX_PERSONALITY_H
register_exec_domain  prototype  include/linux/personality.h  14  extern int register_exec_domain(struct exec_domain *);
unregister_exec_domain  prototype  include/linux/personality.h  15  extern int unregister_exec_domain(struct exec_domain *);
__set_personality  prototype  include/linux/personality.h  16  extern int __set_personality(unsigned int);
exec_domain  struct  include/linux/personality.h  27  struct exec_domain {
personality  macro  include/linux/personality.h  45  #define personality(pers) (pers & PER_MASK)
set_personality  macro  include/linux/personality.h  52  #define set_personality(pers) ((current->personality == (pers)) ? 0 : __set_personality(pers))
_LINUX_ERR_H  macro  include/linux/err.h  2  #define _LINUX_ERR_H
MAX_ERRNO  macro  include/linux/err.h  16  #define MAX_ERRNO 4095
IS_ERR_VALUE  macro  include/linux/err.h  20  #define IS_ERR_VALUE(x) unlikely((x) >= (unsigned long)-MAX_ERRNO)
ERR_PTR  function  include/linux/err.h  22  static inline void * __must_check ERR_PTR(long error)
PTR_ERR  function  include/linux/err.h  27  static inline long __must_check PTR_ERR(const void *ptr)
IS_ERR  function  include/linux/err.h  32  static inline long __must_check IS_ERR(const void *ptr)
IS_ERR_OR_NULL  function  include/linux/err.h  37  static inline long __must_check IS_ERR_OR_NULL(const void *ptr)
ERR_CAST  function  include/linux/err.h  49  static inline void * __must_check ERR_CAST(const void *ptr)
PTR_RET  function  include/linux/err.h  55  static inline int __must_check PTR_RET(const void *ptr)
_ASM_X86_PARAVIRT_H  macro  arch/x86/include/asm/paravirt.h  2  #define _ASM_X86_PARAVIRT_H
paravirt_get_debugreg  function  arch/x86/include/asm/paravirt.h  38  static inline unsigned long paravirt_get_debugreg(int reg)
get_debugreg  macro  arch/x86/include/asm/paravirt.h  42  #define get_debugreg(var,reg) var = paravirt_get_debugreg(reg)
set_debugreg  function  arch/x86/include/asm/paravirt.h  43  static inline void set_debugreg(unsigned long val,int reg)
arch_safe_halt  function  arch/x86/include/asm/irqflags.h  89  static inline void arch_safe_halt(void)
halt  function  arch/x86/include/asm/irqflags.h  98  static inline void halt(void)
paravirt_read_msr  function  arch/x86/include/asm/paravirt.h  126  static inline u64 paravirt_read_msr(unsigned msr,int *err)
paravirt_write_msr  function  arch/x86/include/asm/paravirt.h  131  static inline int paravirt_write_msr(unsigned msr,unsigned low,unsigned high)
paravirt_read_tsc  function  arch/x86/include/asm/paravirt.h  177  static inline u64 paravirt_read_tsc(void)
paravirt_sched_clock  function  arch/x86/include/asm/paravirt.h  190  static inline unsigned long long paravirt_sched_clock(void)
paravirt_steal_clock  function  arch/x86/include/asm/paravirt.h  199  static inline u64 paravirt_steal_clock(int cpu)
paravirt_read_pmc  function  arch/x86/include/asm/paravirt.h  204  static inline unsigned long long paravirt_read_pmc(int counter)
paravirt_rdtscp  function  arch/x86/include/asm/paravirt.h  218  static inline unsigned long long paravirt_rdtscp(unsigned int *aux)
paravirt_alloc_ldt  function  arch/x86/include/asm/desc.h  108  static inline void paravirt_alloc_ldt(struct desc_struct *ldt,unsigned entries)
paravirt_free_ldt  function  arch/x86/include/asm/desc.h  112  static inline void paravirt_free_ldt(struct desc_struct *ldt,unsigned entries)
load_TR_desc  macro  arch/x86/include/asm/desc.h  91  #define load_TR_desc() native_load_tr_desc()
load_gdt  macro  arch/x86/include/asm/desc.h  92  #define load_gdt(dtr) native_load_gdt(dtr)
load_idt  macro  arch/x86/include/asm/desc.h  93  #define load_idt(dtr) native_load_idt(dtr)
set_ldt  macro  arch/x86/include/asm/desc.h  102  #define set_ldt native_set_ldt
store_gdt  macro  arch/x86/include/asm/desc.h  97  #define store_gdt(dtr) native_store_gdt(dtr)
store_idt  macro  arch/x86/include/asm/desc.h  98  #define store_idt(dtr) native_store_idt(dtr)
paravirt_store_tr  function  arch/x86/include/asm/paravirt.h  273  static inline unsigned long paravirt_store_tr(void)
store_tr  macro  arch/x86/include/asm/desc.h  99  #define store_tr(tr) (tr = native_store_tr())
load_TLS  macro  arch/x86/include/asm/desc.h  101  #define load_TLS(t,cpu) native_load_tls(t,cpu)
write_ldt_entry  macro  arch/x86/include/asm/desc.h  104  #define write_ldt_entry(dt,entry,desc) native_write_ldt_entry(dt,entry,desc)
write_gdt_entry  macro  arch/x86/include/asm/desc.h  105  #define write_gdt_entry(dt,entry,desc,type) native_write_gdt_entry(dt,entry,desc,type)
write_idt_entry  macro  arch/x86/include/asm/desc.h  106  #define write_idt_entry(dt,entry,g) native_write_idt_entry(dt,entry,g)
paravirt_activate_mm  function  arch/x86/include/asm/paravirt.h  332  static inline void paravirt_activate_mm(struct mm_struct *prev,struct mm_struct *next)
arch_dup_mmap  function  arch/x86/include/asm/paravirt.h  338  static inline void arch_dup_mmap(struct mm_struct *oldmm,struct mm_struct *mm)
arch_exit_mmap  function  arch/x86/include/asm/paravirt.h  343  static inline void arch_exit_mmap(struct mm_struct *mm)
__flush_tlb  function  arch/x86/include/asm/paravirt.h  348  static inline void __flush_tlb(void)
__flush_tlb_global  function  arch/x86/include/asm/paravirt.h  352  static inline void __flush_tlb_global(void)
__flush_tlb_single  function  arch/x86/include/asm/paravirt.h  356  static inline void __flush_tlb_single(unsigned long addr)
flush_tlb_others  function  arch/x86/include/asm/paravirt.h  364  static inline void flush_tlb_others(const struct cpumask *cpumask,struct mm_struct *mm,unsigned long start,unsigned long end)
paravirt_pgd_alloc  function  arch/x86/include/asm/paravirt.h  369  static inline int paravirt_pgd_alloc(struct mm_struct *mm)
paravirt_pgd_free  function  arch/x86/include/asm/paravirt.h  374  static inline void paravirt_pgd_free(struct mm_struct *mm,pgd_t *pgd)
paravirt_alloc_pte  function  arch/x86/include/asm/paravirt.h  379  static inline void paravirt_alloc_pte(struct mm_struct *mm,unsigned long pfn)
paravirt_release_pte  function  arch/x86/include/asm/paravirt.h  383  static inline void paravirt_release_pte(unsigned long pfn)
paravirt_alloc_pmd  function  arch/x86/include/asm/paravirt.h  388  static inline void paravirt_alloc_pmd(struct mm_struct *mm,unsigned long pfn)
paravirt_release_pmd  function  arch/x86/include/asm/paravirt.h  393  static inline void paravirt_release_pmd(unsigned long pfn)
paravirt_alloc_pud  function  arch/x86/include/asm/paravirt.h  398  static inline void paravirt_alloc_pud(struct mm_struct *mm,unsigned long pfn)
paravirt_release_pud  function  arch/x86/include/asm/paravirt.h  402  static inline void paravirt_release_pud(unsigned long pfn)
pte_update  macro  arch/x86/include/asm/pgtable.h  668  #define pte_update(mm,addr,ptep) do { } while (0)
pmd_update  macro  arch/x86/include/asm/pgtable.h  63  #define pmd_update(mm,addr,ptep) do { } while (0)
pte_update_defer  macro  arch/x86/include/asm/pgtable.h  669  #define pte_update_defer(mm,addr,ptep) do { } while (0)
pmd_update_defer  macro  arch/x86/include/asm/pgtable.h  64  #define pmd_update_defer(mm,addr,ptep) do { } while (0)
__pte  macro  arch/x86/include/asm/pgtable.h  80  #define __pte(x) native_make_pte(x)
pte_val  macro  arch/x86/include/asm/pgtable.h  79  #define pte_val(x) native_pte_val(x)
__pgd  macro  arch/x86/include/asm/pgtable.h  67  #define __pgd(x) native_make_pgd(x)
pgd_val  macro  arch/x86/include/asm/pgtable.h  66  #define pgd_val(x) native_pgd_val(x)
__HAVE_ARCH_PTEP_MODIFY_PROT_TRANSACTION  macro  arch/x86/include/asm/paravirt.h  488  #define __HAVE_ARCH_PTEP_MODIFY_PROT_TRANSACTION
ptep_modify_prot_start  function  include/asm-generic/pgtable.h  355  static inline pte_t ptep_modify_prot_start(struct mm_struct *mm,unsigned long addr,pte_t *ptep)
ptep_modify_prot_commit  function  include/asm-generic/pgtable.h  366  static inline void ptep_modify_prot_commit(struct mm_struct *mm,unsigned long addr,pte_t *ptep, pte_t pte)
set_pte  macro  arch/x86/include/asm/pgtable.h  36  #define set_pte(ptep,pte) native_set_pte(ptep,pte)
set_pte_at  macro  arch/x86/include/asm/pgtable.h  37  #define set_pte_at(mm,addr,ptep,pte) native_set_pte_at(mm,addr,ptep,pte)
set_pmd_at  macro  arch/x86/include/asm/pgtable.h  38  #define set_pmd_at(mm,addr,pmdp,pmd) native_set_pmd_at(mm,addr,pmdp,pmd)
set_pmd  macro  arch/x86/include/asm/pgtable.h  43  #define set_pmd(pmdp,pmd) native_set_pmd(pmdp,pmd)
__pmd  macro  arch/x86/include/asm/pgtable.h  76  #define __pmd(x) native_make_pmd(x)
pmd_val  macro  arch/x86/include/asm/pgtable.h  75  #define pmd_val(x) native_pmd_val(x)
set_pud  macro  arch/x86/include/asm/pgtable.h  51  # define set_pud(pudp,pud) native_set_pud(pudp,pud)
__pud  macro  arch/x86/include/asm/pgtable.h  71  #define __pud(x) native_make_pud(x)
pud_val  macro  arch/x86/include/asm/pgtable.h  70  #define pud_val(x) native_pud_val(x)
set_pgd  macro  arch/x86/include/asm/pgtable.h  46  #define set_pgd(pgdp,pgd) native_set_pgd(pgdp,pgd)
pgd_clear  macro  arch/x86/include/asm/pgtable.h  47  #define pgd_clear(pgd) native_pgd_clear(pgd)
pud_clear  macro  arch/x86/include/asm/pgtable.h  55  #define pud_clear(pud) native_pud_clear(pud)
set_pte_atomic  macro  arch/x86/include/asm/pgtable.h  41  #define set_pte_atomic(ptep,pte) native_set_pte_atomic(ptep, pte)
pte_clear  macro  arch/x86/include/asm/pgtable.h  58  #define pte_clear(mm,addr,ptep) native_pte_clear(mm,addr,ptep)
pmd_clear  macro  arch/x86/include/asm/pgtable.h  59  #define pmd_clear(pmd) native_pmd_clear(pmd)
__HAVE_ARCH_START_CONTEXT_SWITCH  macro  arch/x86/include/asm/paravirt.h  684  #define __HAVE_ARCH_START_CONTEXT_SWITCH
arch_start_context_switch  macro  include/asm-generic/pgtable.h  406  #define arch_start_context_switch(prev) do {} while (0)
arch_end_context_switch  macro  arch/x86/include/asm/pgtable.h  82  #define arch_end_context_switch(prev) do {} while(0)
__HAVE_ARCH_ENTER_LAZY_MMU_MODE  macro  arch/x86/include/asm/paravirt.h  695  #define __HAVE_ARCH_ENTER_LAZY_MMU_MODE
arch_enter_lazy_mmu_mode  macro  include/asm-generic/pgtable.h  389  #define arch_enter_lazy_mmu_mode() do {} while (0)
arch_leave_lazy_mmu_mode  macro  include/asm-generic/pgtable.h  390  #define arch_leave_lazy_mmu_mode() do {} while (0)
arch_flush_lazy_mmu_mode  macro  include/asm-generic/pgtable.h  391  #define arch_flush_lazy_mmu_mode() do {} while (0)
__set_fixmap  function  arch/x86/include/asm/fixmap.h  177  static inline void __set_fixmap(enum fixed_addresses idx,phys_addr_t phys, pgprot_t flags)
PV_SAVE_REGS  macro  arch/x86/include/asm/paravirt.h  924  #define PV_SAVE_REGS(set) COND_PUSH(set, CLBR_EAX, eax); COND_PUSH(set, CLBR_EDI, edi); COND_PUSH(set, CLBR_ECX, ecx); COND_PUSH(set, CLBR_EDX, edx)
PV_RESTORE_REGS  macro  arch/x86/include/asm/paravirt.h  929  #define PV_RESTORE_REGS(set) COND_POP(set, CLBR_EDX, edx); COND_POP(set, CLBR_ECX, ecx); COND_POP(set, CLBR_EDI, edi); COND_POP(set, CLBR_EAX, eax)
PV_SAVE_ALL_CALLER_REGS  macro  arch/x86/include/asm/paravirt.h  774  #define PV_SAVE_ALL_CALLER_REGS "push %rcx;" "push %rdx;" "push %rsi;" "push %rdi;" "push %r8;" "push %r9;" "push %r10;" "push %r11;"
PV_RESTORE_ALL_CALLER_REGS  macro  arch/x86/include/asm/paravirt.h  783  #define PV_RESTORE_ALL_CALLER_REGS "pop %r11;" "pop %r10;" "pop %r9;" "pop %r8;" "pop %rdi;" "pop %rsi;" "pop %rdx;" "pop %rcx;"
PV_FLAGS_ARG  macro  arch/x86/include/asm/paravirt.h  791  #define PV_FLAGS_ARG "D"
PV_EXTRA_CLOBBERS  macro  arch/x86/include/asm/paravirt.h  789  #define PV_EXTRA_CLOBBERS EXTRA_CLOBBERS,"rcx" ,"rdx","rsi"
PV_VEXTRA_CLOBBERS  macro  arch/x86/include/asm/paravirt.h  790  #define PV_VEXTRA_CLOBBERS EXTRA_CLOBBERS,"rdi","rcx" ,"rdx","rsi"
PV_CALLEE_SAVE_REGS_THUNK  macro  arch/x86/include/asm/paravirt.h  816  #define PV_CALLEE_SAVE_REGS_THUNK(func) extern typeof(func) __raw_callee_save_##func; static void *__##func##__ __used = func; asm(".pushsection .text;" "__raw_callee_save_" #func ": " PV_SAVE_ALL_CALLER_REGS "call " #func ";" PV_RESTORE_ALL_CALLER_REGS "ret;" ".popsection")
PV_CALLEE_SAVE  macro  arch/x86/include/asm/paravirt.h  820  #define PV_CALLEE_SAVE(func) ((struct paravirt_callee_save) { __raw_callee_save_##func })
__PV_IS_CALLEE_SAVE  macro  arch/x86/include/asm/paravirt.h  824  #define __PV_IS_CALLEE_SAVE(func) ((struct paravirt_callee_save) { func })
arch_local_save_flags  function  arch/x86/include/asm/irqflags.h  65  static inline notrace unsigned long arch_local_save_flags(void)
arch_local_irq_restore  function  arch/x86/include/asm/irqflags.h  70  static inline notrace void arch_local_irq_restore(unsigned long flags)
arch_local_irq_disable  function  arch/x86/include/asm/irqflags.h  75  static inline notrace void arch_local_irq_disable(void)
arch_local_irq_enable  function  arch/x86/include/asm/irqflags.h  80  static inline notrace void arch_local_irq_enable(void)
arch_local_irq_save  function  arch/x86/include/asm/irqflags.h  106  static inline notrace unsigned long arch_local_irq_save(void)
default_banner  macro  arch/x86/include/asm/paravirt.h  1012  # define default_banner x86_init_noop
_PVSITE  macro  arch/x86/include/asm/paravirt.h  885  #define _PVSITE(ptype,clobbers,ops,word,algn) 771:; ops; 772:; .pushsection .parainstructions,"a"; .align	algn; word 771b; .byte ptype; .byte 772b-771b; .short clobbers; .popsection
COND_PUSH  macro  arch/x86/include/asm/paravirt.h  889  #define COND_PUSH(set,mask,reg) .if ((~(set)) & mask); push %reg; .endif
COND_POP  macro  arch/x86/include/asm/paravirt.h  891  #define COND_POP(set,mask,reg) .if ((~(set)) & mask); pop %reg; .endif
PARA_PATCH  macro  arch/x86/include/asm/paravirt.h  931  #define PARA_PATCH(struct,off) ((PARAVIRT_PATCH_##struct + (off)) / 4)
PARA_SITE  macro  arch/x86/include/asm/paravirt.h  932  #define PARA_SITE(ptype,clobbers,ops) _PVSITE(ptype,clobbers,ops,.long,4)
PARA_INDIRECT  macro  arch/x86/include/asm/paravirt.h  933  #define PARA_INDIRECT(addr) *%cs:addr
INTERRUPT_RETURN  macro  arch/x86/include/asm/irqflags.h  145  #define INTERRUPT_RETURN iret
DISABLE_INTERRUPTS  macro  arch/x86/include/asm/irqflags.h  115  #define DISABLE_INTERRUPTS(x) cli
ENABLE_INTERRUPTS  macro  arch/x86/include/asm/irqflags.h  114  #define ENABLE_INTERRUPTS(x) sti
USERGS_SYSRET32  macro  arch/x86/include/asm/irqflags.h  138  #define USERGS_SYSRET32 swapgs; sysretl
GET_CR0_INTO_EAX  macro  arch/x86/include/asm/irqflags.h  147  #define GET_CR0_INTO_EAX movl %cr0,%eax
ENABLE_INTERRUPTS_SYSEXIT  macro  arch/x86/include/asm/irqflags.h  146  #define ENABLE_INTERRUPTS_SYSEXIT sti; sysexit
SWAPGS_UNSAFE_STACK  macro  arch/x86/include/asm/irqflags.h  128  #define SWAPGS_UNSAFE_STACK swapgs
SWAPGS  macro  arch/x86/include/asm/irqflags.h  118  #define SWAPGS swapgs
GET_CR2_INTO_RAX  macro  arch/x86/include/asm/paravirt.h  992  #define GET_CR2_INTO_RAX call PARA_INDIRECT(pv_mmu_ops+PV_MMU_read_cr2)
PARAVIRT_ADJUST_EXCEPTION_FRAME  macro  arch/x86/include/asm/irqflags.h  130  #define PARAVIRT_ADJUST_EXCEPTION_FRAME
USERGS_SYSRET64  macro  arch/x86/include/asm/irqflags.h  135  #define USERGS_SYSRET64 swapgs; sysretq;
ENABLE_INTERRUPTS_SYSEXIT32  macro  arch/x86/include/asm/irqflags.h  142  #define ENABLE_INTERRUPTS_SYSEXIT32 swapgs; sti; sysexit
__LINUX__AIO_ABI_H  macro  include/uapi/linux/aio_abi.h  28  #define __LINUX__AIO_ABI_H
IOCB_FLAG_RESFD  macro  include/uapi/linux/aio_abi.h  55  #define IOCB_FLAG_RESFD (1 << 0)
io_event  struct  include/uapi/linux/aio_abi.h  58  struct io_event {
PADDED  prototype  include/uapi/linux/aio_abi.h  82  __u32 PADDED(aio_key,aio_reserved1);
iocb  struct  include/uapi/linux/aio_abi.h  79  struct iocb {
IFBIG  macro  include/uapi/linux/aio_abi.h  107  #undef IFBIG
IFLITTLE  macro  include/uapi/linux/aio_abi.h  108  #undef IFLITTLE
__LINUX_UIO_H  macro  include/linux/uio.h  10  #define __LINUX_UIO_H
kvec  struct  include/linux/uio.h  15  struct kvec {
iov_length  function  include/linux/uio.h  27  static inline size_t iov_length(const struct iovec *iov,unsigned long nr_segs)
iov_shorten  prototype  include/linux/uio.h  37  unsigned long iov_shorten(struct iovec *iov,unsigned long nr_segs,size_t to);
_LINUX_RWSEM_SPINLOCK_H  macro  include/linux/rwsem-spinlock.h  9  #define _LINUX_RWSEM_SPINLOCK_H
RWSEM_UNLOCKED_VALUE  macro  arch/x86/include/asm/rwsem.h  54  #define RWSEM_UNLOCKED_VALUE 0x00000000L
__down_read  function  arch/x86/include/asm/rwsem.h  63  static inline void __down_read(struct rw_semaphore *sem)
__down_read_trylock  function  arch/x86/include/asm/rwsem.h  80  static inline int __down_read_trylock(struct rw_semaphore *sem)
__down_write  function  arch/x86/include/asm/rwsem.h  119  static inline void __down_write(struct rw_semaphore *sem)
__down_write_nested  function  arch/x86/include/asm/rwsem.h  102  static inline void __down_write_nested(struct rw_semaphore *sem,int subclass)
__down_write_trylock  function  arch/x86/include/asm/rwsem.h  127  static inline int __down_write_trylock(struct rw_semaphore *sem)
__up_read  function  arch/x86/include/asm/rwsem.h  139  static inline void __up_read(struct rw_semaphore *sem)
__up_write  function  arch/x86/include/asm/rwsem.h  157  static inline void __up_write(struct rw_semaphore *sem)
__downgrade_write  function  arch/x86/include/asm/rwsem.h  175  static inline void __downgrade_write(struct rw_semaphore *sem)
_ASM_X86_RWSEM_H  macro  arch/x86/include/asm/rwsem.h  33  #define _ASM_X86_RWSEM_H
RWSEM_ACTIVE_MASK  macro  arch/x86/include/asm/rwsem.h  51  # define RWSEM_ACTIVE_MASK 0x0000ffffL
RWSEM_ACTIVE_BIAS  macro  arch/x86/include/asm/rwsem.h  55  #define RWSEM_ACTIVE_BIAS 0x00000001L
RWSEM_WAITING_BIAS  macro  arch/x86/include/asm/rwsem.h  56  #define RWSEM_WAITING_BIAS (-RWSEM_ACTIVE_MASK-1)
RWSEM_ACTIVE_READ_BIAS  macro  arch/x86/include/asm/rwsem.h  57  #define RWSEM_ACTIVE_READ_BIAS RWSEM_ACTIVE_BIAS
RWSEM_ACTIVE_WRITE_BIAS  macro  arch/x86/include/asm/rwsem.h  58  #define RWSEM_ACTIVE_WRITE_BIAS (RWSEM_WAITING_BIAS + RWSEM_ACTIVE_BIAS)
rwsem_atomic_add  function  arch/x86/include/asm/rwsem.h  195  static inline void rwsem_atomic_add(long delta,struct rw_semaphore *sem)
rwsem_atomic_update  function  arch/x86/include/asm/rwsem.h  205  static inline long rwsem_atomic_update(long delta,struct rw_semaphore *sem)
_ASM_X86_STRING_32_H  macro  arch/x86/include/asm/string_32.h  2  #define _ASM_X86_STRING_32_H
__HAVE_ARCH_STRCPY  macro  arch/x86/include/asm/string_32.h  8  #define __HAVE_ARCH_STRCPY
__HAVE_ARCH_STRNCPY  macro  arch/x86/include/asm/string_32.h  11  #define __HAVE_ARCH_STRNCPY
__HAVE_ARCH_STRCAT  macro  arch/x86/include/asm/string_32.h  14  #define __HAVE_ARCH_STRCAT
__HAVE_ARCH_STRNCAT  macro  arch/x86/include/asm/string_32.h  17  #define __HAVE_ARCH_STRNCAT
__HAVE_ARCH_STRCMP  macro  arch/x86/include/asm/string_32.h  20  #define __HAVE_ARCH_STRCMP
__HAVE_ARCH_STRNCMP  macro  arch/x86/include/asm/string_32.h  23  #define __HAVE_ARCH_STRNCMP
__HAVE_ARCH_STRCHR  macro  arch/x86/include/asm/string_32.h  26  #define __HAVE_ARCH_STRCHR
__HAVE_ARCH_STRLEN  macro  arch/x86/include/asm/string_32.h  29  #define __HAVE_ARCH_STRLEN
__memcpy  prototype  arch/x86/include/asm/string_64.h  34  extern void *__memcpy(void *to,const void *from,size_t len);
__constant_memcpy  function  arch/x86/include/asm/string_32.h  52  static __always_inline void *__constant_memcpy(void *to,const void *from,size_t n)
__HAVE_ARCH_MEMCPY  macro  arch/x86/include/asm/string_64.h  29  #define __HAVE_ARCH_MEMCPY 1
__constant_memcpy3d  function  arch/x86/include/asm/string_32.h  154  static inline void *__constant_memcpy3d(void *to,const void *from,size_t len)
__memcpy3d  function  arch/x86/include/asm/string_32.h  161  static inline void *__memcpy3d(void *to,const void *from,size_t len)
__HAVE_ARCH_MEMMOVE  macro  arch/x86/include/asm/string_64.h  57  #define __HAVE_ARCH_MEMMOVE
__HAVE_ARCH_MEMCHR  macro  arch/x86/include/asm/string_32.h  204  #define __HAVE_ARCH_MEMCHR
__memset_generic  function  arch/x86/include/asm/string_32.h  207  static inline void *__memset_generic(void *s,char c,size_t count)
__constant_count_memset  macro  arch/x86/include/asm/string_32.h  219  #define __constant_count_memset(s,c,count) __memset_generic((s),(c),(count))
__constant_c_memset  function  arch/x86/include/asm/string_32.h  227  void *__constant_c_memset(void *s,unsigned long c,size_t count)
__HAVE_ARCH_STRNLEN  macro  arch/x86/include/asm/string_32.h  245  #define __HAVE_ARCH_STRNLEN
__HAVE_ARCH_STRSTR  macro  arch/x86/include/asm/string_32.h  249  #define __HAVE_ARCH_STRSTR
__constant_c_and_count_memset  function  arch/x86/include/asm/string_32.h  258  void *__constant_c_and_count_memset(void *s,unsigned long pattern,size_t count)
COMMON  macro  arch/x86/include/asm/string_32.h  310  #undef COMMON
__constant_c_x_memset  macro  arch/x86/include/asm/string_32.h  316  #define __constant_c_x_memset(s,c,count) (__builtin_constant_p(count) ? __constant_c_and_count_memset((s), (c), (count)) : __constant_c_memset((s), (c), (count)))
__memset  macro  arch/x86/include/asm/string_32.h  321  #define __memset(s,c,count) (__builtin_constant_p(count) ? __constant_count_memset((s), (c), (count)) : __memset_generic((s), (c), (count)))
__HAVE_ARCH_MEMSET  macro  arch/x86/include/asm/string_64.h  54  #define __HAVE_ARCH_MEMSET
__HAVE_ARCH_MEMSCAN  macro  arch/x86/include/asm/string_32.h  337  #define __HAVE_ARCH_MEMSCAN
_ASM_X86_STRING_64_H  macro  arch/x86/include/asm/string_64.h  2  #define _ASM_X86_STRING_64_H
__inline_memcpy  function  arch/x86/include/asm/string_64.h  9  static __always_inline void *__inline_memcpy(void *to,const void *from,size_t n)
LINUX_MM_DEBUG_H  macro  include/linux/mmdebug.h  2  #define LINUX_MM_DEBUG_H 1
VM_BUG_ON  macro  include/linux/mmdebug.h  7  #define VM_BUG_ON(cond) BUILD_BUG_ON_INVALID(cond)
VIRTUAL_BUG_ON  macro  include/linux/mmdebug.h  13  #define VIRTUAL_BUG_ON(cond) do { } while (0)
__KMEMLEAK_H  macro  include/linux/kmemleak.h  22  #define __KMEMLEAK_H
kmemleak_alloc_recursive  function  include/linux/kmemleak.h  70  static inline void kmemleak_alloc_recursive(const void *ptr,size_t size,int min_count, unsigned long flags,gfp_t gfp)
kmemleak_free_recursive  function  include/linux/kmemleak.h  82  static inline void kmemleak_free_recursive(const void *ptr,unsigned long flags)
kmemleak_erase  function  include/linux/kmemleak.h  97  static inline void kmemleak_erase(void **ptr)
kmemleak_init  function  include/linux/kmemleak.h  61  static inline void kmemleak_init(void)
kmemleak_alloc  function  include/linux/kmemleak.h  65  static inline void kmemleak_alloc(const void *ptr,size_t size,int min_count,gfp_t gfp)
kmemleak_alloc_percpu  function  include/linux/kmemleak.h  73  static inline void kmemleak_alloc_percpu(const void __percpu *ptr,size_t size)
kmemleak_free  function  include/linux/kmemleak.h  76  static inline void kmemleak_free(const void *ptr)
kmemleak_free_part  function  include/linux/kmemleak.h  79  static inline void kmemleak_free_part(const void *ptr,size_t size)
kmemleak_free_percpu  function  include/linux/kmemleak.h  85  static inline void kmemleak_free_percpu(const void __percpu *ptr)
kmemleak_not_leak  function  include/linux/kmemleak.h  88  static inline void kmemleak_not_leak(const void *ptr)
kmemleak_ignore  function  include/linux/kmemleak.h  91  static inline void kmemleak_ignore(const void *ptr)
kmemleak_scan_area  function  include/linux/kmemleak.h  94  static inline void kmemleak_scan_area(const void *ptr,size_t size,gfp_t gfp)
kmemleak_no_scan  function  include/linux/kmemleak.h  100  static inline void kmemleak_no_scan(const void *ptr)
_LINUX_FTRACE_IRQ_H  macro  include/linux/ftrace_irq.h  2  #define _LINUX_FTRACE_IRQ_H
ftrace_nmi_enter  function  include/linux/ftrace_irq.h  9  static inline void ftrace_nmi_enter(void) { }
ftrace_nmi_exit  function  include/linux/ftrace_irq.h  10  static inline void ftrace_nmi_exit(void) { }
_LINUX_KERNEL_VTIME_H  macro  include/linux/vtime.h  2  #define _LINUX_KERNEL_VTIME_H
vtime_task_switch  function  include/linux/vtime.h  14  static inline void vtime_task_switch(struct task_struct *prev) { }
vtime_account_system  function  include/linux/vtime.h  15  static inline void vtime_account_system(struct task_struct *tsk) { }
vtime_account_system_irqsafe  function  include/linux/vtime.h  16  static inline void vtime_account_system_irqsafe(struct task_struct *tsk) { }
vtime_account_idle  prototype  include/linux/vtime.h  10  extern void vtime_account_idle(struct task_struct *tsk);
vtime_account_user  prototype  include/linux/vtime.h  11  extern void vtime_account_user(struct task_struct *tsk);
vtime_account  function  include/linux/vtime.h  17  static inline void vtime_account(struct task_struct *tsk) { }
irqtime_account_irq  function  include/linux/vtime.h  23  static inline void irqtime_account_irq(struct task_struct *tsk) { }
vtime_account_irq_enter  function  include/linux/vtime.h  26  static inline void vtime_account_irq_enter(struct task_struct *tsk)
vtime_account_irq_exit  function  include/linux/vtime.h  41  static inline void vtime_account_irq_exit(struct task_struct *tsk)
_ASM_X86_HARDIRQ_H  macro  arch/x86/include/asm/hardirq.h  2  #define _ASM_X86_HARDIRQ_H
MAX_HARDIRQS_PER_CPU  macro  arch/x86/include/asm/hardirq.h  38  #define MAX_HARDIRQS_PER_CPU NR_VECTORS
__ARCH_IRQ_STAT  macro  arch/x86/include/asm/hardirq.h  40  #define __ARCH_IRQ_STAT
inc_irq_stat  macro  arch/x86/include/asm/hardirq.h  42  #define inc_irq_stat(member) this_cpu_inc(irq_stat.member)
local_softirq_pending  macro  arch/x86/include/asm/hardirq.h  44  #define local_softirq_pending() this_cpu_read(irq_stat.__softirq_pending)
__ARCH_SET_SOFTIRQ_PENDING  macro  arch/x86/include/asm/hardirq.h  46  #define __ARCH_SET_SOFTIRQ_PENDING
ack_bad_irq  prototype  arch/x86/include/asm/hardirq.h  52  extern void ack_bad_irq(unsigned int irq);
arch_irq_stat_cpu  macro  arch/x86/include/asm/hardirq.h  55  #define arch_irq_stat_cpu arch_irq_stat_cpu
arch_irq_stat  macro  arch/x86/include/asm/hardirq.h  58  #define arch_irq_stat arch_irq_stat
_X86_IRQFLAGS_H_  macro  arch/x86/include/asm/irqflags.h  2  #define _X86_IRQFLAGS_H_
native_save_fl  function  arch/x86/include/asm/irqflags.h  11  static inline unsigned long native_save_fl(void)
native_restore_fl  function  arch/x86/include/asm/irqflags.h  29  static inline void native_restore_fl(unsigned long flags)
native_irq_disable  function  arch/x86/include/asm/irqflags.h  37  static inline void native_irq_disable(void)
native_irq_enable  function  arch/x86/include/asm/irqflags.h  42  static inline void native_irq_enable(void)
native_safe_halt  function  arch/x86/include/asm/irqflags.h  47  static inline void native_safe_halt(void)
native_halt  function  arch/x86/include/asm/irqflags.h  52  static inline void native_halt(void)
arch_irqs_disabled_flags  function  arch/x86/include/asm/irqflags.h  155  static inline int arch_irqs_disabled_flags(unsigned long flags)
arch_irqs_disabled  function  arch/x86/include/asm/irqflags.h  160  static inline int arch_irqs_disabled(void)
ARCH_LOCKDEP_SYS_EXIT  macro  arch/x86/include/asm/irqflags.h  188  #define ARCH_LOCKDEP_SYS_EXIT pushl %eax; pushl %ecx; pushl %edx; call lockdep_sys_exit; popl %edx; popl %ecx; popl %eax;
ARCH_LOCKDEP_SYS_EXIT_IRQ  macro  arch/x86/include/asm/irqflags.h  190  #define ARCH_LOCKDEP_SYS_EXIT_IRQ
TRACE_IRQS_ON  macro  arch/x86/include/asm/irqflags.h  197  # define TRACE_IRQS_ON
TRACE_IRQS_OFF  macro  arch/x86/include/asm/irqflags.h  198  # define TRACE_IRQS_OFF
LOCKDEP_SYS_EXIT  macro  arch/x86/include/asm/irqflags.h  204  # define LOCKDEP_SYS_EXIT
LOCKDEP_SYS_EXIT_IRQ  macro  arch/x86/include/asm/irqflags.h  205  # define LOCKDEP_SYS_EXIT_IRQ
_ASM_X86_ATOMIC_H  macro  arch/x86/include/asm/atomic.h  2  #define _ASM_X86_ATOMIC_H
ATOMIC_INIT  macro  arch/x86/include/asm/atomic.h  15  #define ATOMIC_INIT(i) { (i) }
atomic_read  function  arch/x86/include/asm/atomic.h  23  static inline int atomic_read(const atomic_t *v)
atomic_set  function  arch/x86/include/asm/atomic.h  35  static inline void atomic_set(atomic_t *v,int i)
atomic_add  function  arch/x86/include/asm/atomic.h  47  static inline void atomic_add(int i,atomic_t *v)
atomic_sub  function  arch/x86/include/asm/atomic.h  61  static inline void atomic_sub(int i,atomic_t *v)
atomic_sub_and_test  function  arch/x86/include/asm/atomic.h  77  static inline int atomic_sub_and_test(int i,atomic_t *v)
atomic_inc  function  arch/x86/include/asm/atomic.h  93  static inline void atomic_inc(atomic_t *v)
atomic_dec  function  arch/x86/include/asm/atomic.h  105  static inline void atomic_dec(atomic_t *v)
atomic_dec_and_test  function  arch/x86/include/asm/atomic.h  119  static inline int atomic_dec_and_test(atomic_t *v)
atomic_inc_and_test  function  arch/x86/include/asm/atomic.h  137  static inline int atomic_inc_and_test(atomic_t *v)
atomic_add_negative  function  arch/x86/include/asm/atomic.h  156  static inline int atomic_add_negative(int i,atomic_t *v)
atomic_add_return  function  arch/x86/include/asm/atomic.h  173  static inline int atomic_add_return(int i,atomic_t *v)
atomic_sub_return  function  arch/x86/include/asm/atomic.h  185  static inline int atomic_sub_return(int i,atomic_t *v)
atomic_inc_return  macro  arch/x86/include/asm/atomic.h  190  #define atomic_inc_return(v) (atomic_add_return(1,v))
atomic_dec_return  macro  arch/x86/include/asm/atomic.h  191  #define atomic_dec_return(v) (atomic_sub_return(1,v))
atomic_cmpxchg  function  arch/x86/include/asm/atomic.h  193  static inline int atomic_cmpxchg(atomic_t *v,int old,int new)
atomic_xchg  function  arch/x86/include/asm/atomic.h  198  static inline int atomic_xchg(atomic_t *v,int new)
__atomic_add_unless  function  arch/x86/include/asm/atomic.h  212  static inline int __atomic_add_unless(atomic_t *v,int a,int u)
atomic_inc_short  function  arch/x86/include/asm/atomic.h  234  static inline short int atomic_inc_short(short int *v)
atomic_or_long  function  arch/x86/include/asm/atomic.h  249  static inline void atomic_or_long(unsigned long *v1,unsigned long v2)
atomic_clear_mask  macro  arch/x86/include/asm/atomic.h  258  #define atomic_clear_mask(mask,addr) asm volatile(LOCK_PREFIX "andl %0,%1" : : "r" (~(mask)), "m" (*(addr)) : "memory")
atomic_set_mask  macro  arch/x86/include/asm/atomic.h  263  #define atomic_set_mask(mask,addr) asm volatile(LOCK_PREFIX "orl %0,%1" : : "r" ((unsigned)(mask)), "m" (*(addr)) : "memory")
smp_mb__before_atomic_dec  macro  arch/x86/include/asm/atomic.h  266  #define smp_mb__before_atomic_dec() barrier()
smp_mb__after_atomic_dec  macro  arch/x86/include/asm/atomic.h  267  #define smp_mb__after_atomic_dec() barrier()
smp_mb__before_atomic_inc  macro  arch/x86/include/asm/atomic.h  268  #define smp_mb__before_atomic_inc() barrier()
smp_mb__after_atomic_inc  macro  arch/x86/include/asm/atomic.h  269  #define smp_mb__after_atomic_inc() barrier()
_ASM_GENERIC_ATOMIC_LONG_H  macro  include/asm-generic/atomic-long.h  2  #define _ASM_GENERIC_ATOMIC_LONG_H
ATOMIC_LONG_INIT  macro  include/asm-generic/atomic-long.h  143  #define ATOMIC_LONG_INIT(i) ATOMIC_INIT(i)
atomic_long_read  function  include/asm-generic/atomic-long.h  144  static inline long atomic_long_read(atomic_long_t *l)
atomic_long_set  function  include/asm-generic/atomic-long.h  151  static inline void atomic_long_set(atomic_long_t *l,long i)
atomic_long_inc  function  include/asm-generic/atomic-long.h  158  static inline void atomic_long_inc(atomic_long_t *l)
atomic_long_dec  function  include/asm-generic/atomic-long.h  165  static inline void atomic_long_dec(atomic_long_t *l)
atomic_long_add  function  include/asm-generic/atomic-long.h  172  static inline void atomic_long_add(long i,atomic_long_t *l)
atomic_long_sub  function  include/asm-generic/atomic-long.h  179  static inline void atomic_long_sub(long i,atomic_long_t *l)
atomic_long_sub_and_test  function  include/asm-generic/atomic-long.h  186  static inline int atomic_long_sub_and_test(long i,atomic_long_t *l)
atomic_long_dec_and_test  function  include/asm-generic/atomic-long.h  193  static inline int atomic_long_dec_and_test(atomic_long_t *l)
atomic_long_inc_and_test  function  include/asm-generic/atomic-long.h  200  static inline int atomic_long_inc_and_test(atomic_long_t *l)
atomic_long_add_negative  function  include/asm-generic/atomic-long.h  207  static inline int atomic_long_add_negative(long i,atomic_long_t *l)
atomic_long_add_return  function  include/asm-generic/atomic-long.h  214  static inline long atomic_long_add_return(long i,atomic_long_t *l)
atomic_long_sub_return  function  include/asm-generic/atomic-long.h  221  static inline long atomic_long_sub_return(long i,atomic_long_t *l)
atomic_long_inc_return  function  include/asm-generic/atomic-long.h  228  static inline long atomic_long_inc_return(atomic_long_t *l)
atomic_long_dec_return  function  include/asm-generic/atomic-long.h  235  static inline long atomic_long_dec_return(atomic_long_t *l)
atomic_long_add_unless  function  include/asm-generic/atomic-long.h  242  static inline long atomic_long_add_unless(atomic_long_t *l,long a,long u)
atomic_long_inc_not_zero  macro  include/asm-generic/atomic-long.h  249  #define atomic_long_inc_not_zero(l) atomic_inc_not_zero((atomic_t *)(l))
atomic_long_cmpxchg  macro  include/asm-generic/atomic-long.h  252  #define atomic_long_cmpxchg(l,old,new) (atomic_cmpxchg((atomic_t *)(l), (old), (new)))
atomic_long_xchg  macro  include/asm-generic/atomic-long.h  254  #define atomic_long_xchg(v,new) (atomic_xchg((atomic_t *)(v), (new)))
_ASM_GENERIC_ATOMIC64_H  macro  include/asm-generic/atomic64.h  13  #define _ASM_GENERIC_ATOMIC64_H
ATOMIC64_INIT  macro  arch/x86/include/asm/atomic64_32.h  15  #define ATOMIC64_INIT(val) { (val) }
atomic64_read  function  arch/x86/include/asm/atomic64_32.h  120  static inline long long atomic64_read(const atomic64_t *v)
atomic64_set  function  arch/x86/include/asm/atomic64_32.h  105  static inline void atomic64_set(atomic64_t *v,long long i)
atomic64_add  function  arch/x86/include/asm/atomic64_32.h  176  static inline long long atomic64_add(long long i,atomic64_t *v)
atomic64_add_return  function  arch/x86/include/asm/atomic64_32.h  134  static inline long long atomic64_add_return(long long i,atomic64_t *v)
atomic64_sub  function  arch/x86/include/asm/atomic64_32.h  191  static inline long long atomic64_sub(long long i,atomic64_t *v)
atomic64_sub_return  function  arch/x86/include/asm/atomic64_32.h  145  static inline long long atomic64_sub_return(long long i,atomic64_t *v)
atomic64_dec_if_positive  function  arch/x86/include/asm/atomic64_32.h  305  static inline long long atomic64_dec_if_positive(atomic64_t *v)
atomic64_cmpxchg  function  arch/x86/include/asm/atomic64_32.h  74  static inline long long atomic64_cmpxchg(atomic64_t *v,long long o,long long n)
atomic64_xchg  function  arch/x86/include/asm/atomic64_32.h  87  static inline long long atomic64_xchg(atomic64_t *v,long long n)
atomic64_add_unless  function  arch/x86/include/asm/atomic64_32.h  286  static inline int atomic64_add_unless(atomic64_t *v,long long a,long long u)
atomic64_add_negative  function  arch/x86/include/asm/atomic64_32.h  272  static inline int atomic64_add_negative(long long i,atomic64_t *v)
atomic64_inc  function  arch/x86/include/asm/atomic64_32.h  219  static inline void atomic64_inc(atomic64_t *v)
atomic64_inc_return  function  arch/x86/include/asm/atomic64_32.h  153  static inline long long atomic64_inc_return(atomic64_t *v)
atomic64_inc_and_test  function  arch/x86/include/asm/atomic64_32.h  258  static inline int atomic64_inc_and_test(atomic64_t *v)
atomic64_sub_and_test  function  arch/x86/include/asm/atomic64_32.h  208  static inline int atomic64_sub_and_test(long long i,atomic64_t *v)
atomic64_dec  function  arch/x86/include/asm/atomic64_32.h  231  static inline void atomic64_dec(atomic64_t *v)
atomic64_dec_return  function  arch/x86/include/asm/atomic64_32.h  161  static inline long long atomic64_dec_return(atomic64_t *v)
atomic64_dec_and_test  function  arch/x86/include/asm/atomic64_32.h  245  static inline int atomic64_dec_and_test(atomic64_t *v)
atomic64_inc_not_zero  function  arch/x86/include/asm/atomic64_32.h  297  static inline int atomic64_inc_not_zero(atomic64_t *v)
_LINUX_KLIST_H  macro  include/linux/klist.h  13  #define _LINUX_KLIST_H
klist  struct  include/linux/klist.h  20  struct klist {
KLIST_INIT  macro  include/linux/klist.h  31  #define KLIST_INIT(_name,_get,_put) { .k_lock	= __SPIN_LOCK_UNLOCKED(_name.k_lock), .k_list	= LIST_HEAD_INIT(_name.k_list), .get		= _get, .put		= _put, }
DEFINE_KLIST  macro  include/linux/klist.h  34  #define DEFINE_KLIST(_name,_get,_put) struct klist _name = KLIST_INIT(_name, _get, _put)
klist_init  prototype  include/linux/klist.h  37  extern void klist_init(struct klist *k,void (*get)(struct klist_node *),void (*put)(struct klist_node *));
klist_node  struct  include/linux/klist.h  39  struct klist_node {
klist_add_tail  prototype  include/linux/klist.h  45  extern void klist_add_tail(struct klist_node *n,struct klist *k);
klist_add_head  prototype  include/linux/klist.h  46  extern void klist_add_head(struct klist_node *n,struct klist *k);
klist_add_after  prototype  include/linux/klist.h  47  extern void klist_add_after(struct klist_node *n,struct klist_node *pos);
klist_add_before  prototype  include/linux/klist.h  48  extern void klist_add_before(struct klist_node *n,struct klist_node *pos);
klist_del  prototype  include/linux/klist.h  50  extern void klist_del(struct klist_node *n);
klist_remove  prototype  include/linux/klist.h  51  extern void klist_remove(struct klist_node *n);
klist_node_attached  prototype  include/linux/klist.h  53  extern int klist_node_attached(struct klist_node *n);
klist_iter  struct  include/linux/klist.h  56  struct klist_iter {
klist_iter_init  prototype  include/linux/klist.h  62  extern void klist_iter_init(struct klist *k,struct klist_iter *i);
klist_iter_init_node  prototype  include/linux/klist.h  64  extern void klist_iter_init_node(struct klist *k,struct klist_iter *i,struct klist_node *n);
klist_iter_exit  prototype  include/linux/klist.h  65  extern void klist_iter_exit(struct klist_iter *i);
klist_next  prototype  include/linux/klist.h  66  extern struct klist_node *klist_next(struct klist_iter *i);
_LINUX_PM_H  macro  include/linux/pm.h  22  #define _LINUX_PM_H
power_group_name  macro  include/linux/pm.h  47  #define power_group_name NULL
pm_message  struct  include/linux/pm.h  50  typedef struct pm_message {
dev_pm_ops  struct  include/linux/pm.h  264  struct dev_pm_ops {
SET_SYSTEM_SLEEP_PM_OPS  macro  include/linux/pm.h  299  #define SET_SYSTEM_SLEEP_PM_OPS(suspend_fn,resume_fn)
SET_RUNTIME_PM_OPS  macro  include/linux/pm.h  308  #define SET_RUNTIME_PM_OPS(suspend_fn,resume_fn,idle_fn)
SIMPLE_DEV_PM_OPS  macro  include/linux/pm.h  318  #define SIMPLE_DEV_PM_OPS(name,suspend_fn,resume_fn) const struct dev_pm_ops name = { SET_SYSTEM_SLEEP_PM_OPS(suspend_fn, resume_fn) }
UNIVERSAL_DEV_PM_OPS  macro  include/linux/pm.h  337  #define UNIVERSAL_DEV_PM_OPS(name,suspend_fn,resume_fn,idle_fn) const struct dev_pm_ops name = { SET_SYSTEM_SLEEP_PM_OPS(suspend_fn, resume_fn) SET_RUNTIME_PM_OPS(suspend_fn, resume_fn, idle_fn) }
PM_EVENT_INVALID  macro  include/linux/pm.h  391  #define PM_EVENT_INVALID (-1)
PM_EVENT_ON  macro  include/linux/pm.h  392  #define PM_EVENT_ON 0x0000
PM_EVENT_FREEZE  macro  include/linux/pm.h  393  #define PM_EVENT_FREEZE 0x0001
PM_EVENT_SUSPEND  macro  include/linux/pm.h  394  #define PM_EVENT_SUSPEND 0x0002
PM_EVENT_HIBERNATE  macro  include/linux/pm.h  395  #define PM_EVENT_HIBERNATE 0x0004
PM_EVENT_QUIESCE  macro  include/linux/pm.h  396  #define PM_EVENT_QUIESCE 0x0008
PM_EVENT_RESUME  macro  include/linux/pm.h  397  #define PM_EVENT_RESUME 0x0010
PM_EVENT_THAW  macro  include/linux/pm.h  398  #define PM_EVENT_THAW 0x0020
PM_EVENT_RESTORE  macro  include/linux/pm.h  399  #define PM_EVENT_RESTORE 0x0040
PM_EVENT_RECOVER  macro  include/linux/pm.h  400  #define PM_EVENT_RECOVER 0x0080
PM_EVENT_USER  macro  include/linux/pm.h  401  #define PM_EVENT_USER 0x0100
PM_EVENT_REMOTE  macro  include/linux/pm.h  402  #define PM_EVENT_REMOTE 0x0200
PM_EVENT_AUTO  macro  include/linux/pm.h  403  #define PM_EVENT_AUTO 0x0400
PM_EVENT_SLEEP  macro  include/linux/pm.h  405  #define PM_EVENT_SLEEP (PM_EVENT_SUSPEND | PM_EVENT_HIBERNATE)
PM_EVENT_USER_SUSPEND  macro  include/linux/pm.h  406  #define PM_EVENT_USER_SUSPEND (PM_EVENT_USER | PM_EVENT_SUSPEND)
PM_EVENT_USER_RESUME  macro  include/linux/pm.h  407  #define PM_EVENT_USER_RESUME (PM_EVENT_USER | PM_EVENT_RESUME)
PM_EVENT_REMOTE_RESUME  macro  include/linux/pm.h  408  #define PM_EVENT_REMOTE_RESUME (PM_EVENT_REMOTE | PM_EVENT_RESUME)
PM_EVENT_AUTO_SUSPEND  macro  include/linux/pm.h  409  #define PM_EVENT_AUTO_SUSPEND (PM_EVENT_AUTO | PM_EVENT_SUSPEND)
PM_EVENT_AUTO_RESUME  macro  include/linux/pm.h  410  #define PM_EVENT_AUTO_RESUME (PM_EVENT_AUTO | PM_EVENT_RESUME)
PMSG_INVALID  macro  include/linux/pm.h  412  #define PMSG_INVALID ((struct pm_message){ .event = PM_EVENT_INVALID,})
PMSG_ON  macro  include/linux/pm.h  413  #define PMSG_ON ((struct pm_message){ .event = PM_EVENT_ON,})
PMSG_FREEZE  macro  include/linux/pm.h  414  #define PMSG_FREEZE ((struct pm_message){ .event = PM_EVENT_FREEZE,})
PMSG_QUIESCE  macro  include/linux/pm.h  415  #define PMSG_QUIESCE ((struct pm_message){ .event = PM_EVENT_QUIESCE,})
PMSG_SUSPEND  macro  include/linux/pm.h  416  #define PMSG_SUSPEND ((struct pm_message){ .event = PM_EVENT_SUSPEND,})
PMSG_HIBERNATE  macro  include/linux/pm.h  417  #define PMSG_HIBERNATE ((struct pm_message){ .event = PM_EVENT_HIBERNATE,})
PMSG_RESUME  macro  include/linux/pm.h  418  #define PMSG_RESUME ((struct pm_message){ .event = PM_EVENT_RESUME,})
PMSG_THAW  macro  include/linux/pm.h  419  #define PMSG_THAW ((struct pm_message){ .event = PM_EVENT_THAW,})
PMSG_RESTORE  macro  include/linux/pm.h  420  #define PMSG_RESTORE ((struct pm_message){ .event = PM_EVENT_RESTORE,})
PMSG_RECOVER  macro  include/linux/pm.h  421  #define PMSG_RECOVER ((struct pm_message){ .event = PM_EVENT_RECOVER,})
PMSG_USER_SUSPEND  macro  include/linux/pm.h  423  #define PMSG_USER_SUSPEND ((struct pm_message) { .event = PM_EVENT_USER_SUSPEND, })
PMSG_USER_RESUME  macro  include/linux/pm.h  425  #define PMSG_USER_RESUME ((struct pm_message) { .event = PM_EVENT_USER_RESUME, })
PMSG_REMOTE_RESUME  macro  include/linux/pm.h  427  #define PMSG_REMOTE_RESUME ((struct pm_message) { .event = PM_EVENT_REMOTE_RESUME, })
PMSG_AUTO_SUSPEND  macro  include/linux/pm.h  429  #define PMSG_AUTO_SUSPEND ((struct pm_message) { .event = PM_EVENT_AUTO_SUSPEND, })
PMSG_AUTO_RESUME  macro  include/linux/pm.h  431  #define PMSG_AUTO_RESUME ((struct pm_message) { .event = PM_EVENT_AUTO_RESUME, })
PMSG_IS_AUTO  macro  include/linux/pm.h  433  #define PMSG_IS_AUTO(msg) (((msg).event & PM_EVENT_AUTO) != 0)
rpm_status  enum  include/linux/pm.h  458  enum rpm_status {
rpm_request  enum  include/linux/pm.h  480  enum rpm_request {
pm_domain_data  struct  include/linux/pm.h  490  struct pm_domain_data {
pm_subsys_data  struct  include/linux/pm.h  495  struct pm_subsys_data {
dev_pm_info  struct  include/linux/pm.h  506  struct dev_pm_info {
update_pm_runtime_accounting  prototype  include/linux/pm.h  554  extern void update_pm_runtime_accounting(struct device *dev);
dev_pm_get_subsys_data  prototype  include/linux/pm.h  555  extern int dev_pm_get_subsys_data(struct device *dev);
dev_pm_put_subsys_data  prototype  include/linux/pm.h  556  extern int dev_pm_put_subsys_data(struct device *dev);
dev_pm_domain  struct  include/linux/pm.h  563  struct dev_pm_domain {
PM_EVENT_PRETHAW  macro  include/linux/pm.h  574  #define PM_EVENT_PRETHAW PM_EVENT_QUIESCE
device_pm_lock  macro  include/linux/pm.h  667  #define device_pm_lock() do {} while (0)
dpm_resume_start  prototype  include/linux/pm.h  623  extern void dpm_resume_start(pm_message_t state);
dpm_resume_end  prototype  include/linux/pm.h  624  extern void dpm_resume_end(pm_message_t state);
dpm_resume  prototype  include/linux/pm.h  625  extern void dpm_resume(pm_message_t state);
dpm_complete  prototype  include/linux/pm.h  626  extern void dpm_complete(pm_message_t state);
device_pm_unlock  macro  include/linux/pm.h  668  #define device_pm_unlock() do {} while (0)
dpm_suspend_end  prototype  include/linux/pm.h  629  extern int dpm_suspend_end(pm_message_t state);
dpm_suspend_start  function  include/linux/pm.h  670  static inline int dpm_suspend_start(pm_message_t state)
dpm_suspend  prototype  include/linux/pm.h  631  extern int dpm_suspend(pm_message_t state);
dpm_prepare  prototype  include/linux/pm.h  632  extern int dpm_prepare(pm_message_t state);
__suspend_report_result  prototype  include/linux/pm.h  634  extern void __suspend_report_result(const char *function,void *fn,int ret);
suspend_report_result  macro  include/linux/pm.h  675  #define suspend_report_result(fn,ret) do {} while (0)
device_pm_wait_for_dev  function  include/linux/pm.h  677  static inline int device_pm_wait_for_dev(struct device *a,struct device *b)
dpm_for_each_dev  function  include/linux/pm.h  682  static inline void dpm_for_each_dev(void *data,void (*fn)(struct device *,void *))
pm_generic_prepare  macro  include/linux/pm.h  686  #define pm_generic_prepare NULL
pm_generic_suspend_late  prototype  include/linux/pm.h  645  extern int pm_generic_suspend_late(struct device *dev);
pm_generic_suspend_noirq  prototype  include/linux/pm.h  646  extern int pm_generic_suspend_noirq(struct device *dev);
pm_generic_suspend  macro  include/linux/pm.h  687  #define pm_generic_suspend NULL
pm_generic_resume_early  prototype  include/linux/pm.h  648  extern int pm_generic_resume_early(struct device *dev);
pm_generic_resume_noirq  prototype  include/linux/pm.h  649  extern int pm_generic_resume_noirq(struct device *dev);
pm_generic_resume  macro  include/linux/pm.h  688  #define pm_generic_resume NULL
pm_generic_freeze_noirq  prototype  include/linux/pm.h  651  extern int pm_generic_freeze_noirq(struct device *dev);
pm_generic_freeze_late  prototype  include/linux/pm.h  652  extern int pm_generic_freeze_late(struct device *dev);
pm_generic_freeze  macro  include/linux/pm.h  689  #define pm_generic_freeze NULL
pm_generic_thaw_noirq  prototype  include/linux/pm.h  654  extern int pm_generic_thaw_noirq(struct device *dev);
pm_generic_thaw_early  prototype  include/linux/pm.h  655  extern int pm_generic_thaw_early(struct device *dev);
pm_generic_thaw  macro  include/linux/pm.h  690  #define pm_generic_thaw NULL
pm_generic_restore_noirq  prototype  include/linux/pm.h  657  extern int pm_generic_restore_noirq(struct device *dev);
pm_generic_restore_early  prototype  include/linux/pm.h  658  extern int pm_generic_restore_early(struct device *dev);
pm_generic_restore  macro  include/linux/pm.h  691  #define pm_generic_restore NULL
pm_generic_poweroff_noirq  prototype  include/linux/pm.h  660  extern int pm_generic_poweroff_noirq(struct device *dev);
pm_generic_poweroff_late  prototype  include/linux/pm.h  661  extern int pm_generic_poweroff_late(struct device *dev);
pm_generic_poweroff  macro  include/linux/pm.h  692  #define pm_generic_poweroff NULL
pm_generic_complete  macro  include/linux/pm.h  693  #define pm_generic_complete NULL
dpm_order  enum  include/linux/pm.h  697  enum dpm_order {
_LINUX_RATELIMIT_H  macro  include/linux/ratelimit.h  2  #define _LINUX_RATELIMIT_H
DEFAULT_RATELIMIT_INTERVAL  macro  include/linux/ratelimit.h  7  #define DEFAULT_RATELIMIT_INTERVAL (5 * HZ)
DEFAULT_RATELIMIT_BURST  macro  include/linux/ratelimit.h  8  #define DEFAULT_RATELIMIT_BURST 10
ratelimit_state  struct  include/linux/ratelimit.h  10  struct ratelimit_state {
DEFINE_RATELIMIT_STATE  macro  include/linux/ratelimit.h  26  #define DEFINE_RATELIMIT_STATE(name,interval_init,burst_init) struct ratelimit_state name = { .lock		= __RAW_SPIN_LOCK_UNLOCKED(name.lock), .interval	= interval_init, .burst		= burst_init, }
ratelimit_state_init  function  include/linux/ratelimit.h  29  static inline void ratelimit_state_init(struct ratelimit_state *rs,int interval, int burst)
___ratelimit  prototype  include/linux/ratelimit.h  41  extern int ___ratelimit(struct ratelimit_state *rs,const char *func);
__ratelimit  macro  include/linux/ratelimit.h  42  #define __ratelimit(state) ___ratelimit(state,__func__)
WARN_ON_RATELIMIT  macro  include/linux/ratelimit.h  65  #define WARN_ON_RATELIMIT(condition,state) WARN_ON(condition)
WARN_RATELIMIT  macro  include/linux/ratelimit.h  71  #define WARN_RATELIMIT(condition,format,...) ({ int rtn = WARN(condition, format, ##__VA_ARGS__); rtn; })
_ASM_X86_DEVICE_H  macro  arch/x86/include/asm/device.h  2  #define _ASM_X86_DEVICE_H
dev_archdata  struct  arch/x86/include/asm/device.h  4  struct dev_archdata {
pdev_archdata  struct  arch/x86/include/asm/device.h  13  struct pdev_archdata {
_LINUX_PM_WAKEUP_H  macro  include/linux/pm_wakeup.h  23  #define _LINUX_PM_WAKEUP_H
wakeup_source  struct  include/linux/pm_wakeup.h  46  struct wakeup_source {
device_can_wakeup  function  include/linux/pm_wakeup.h  110  static inline bool device_can_wakeup(struct device *dev)
device_may_wakeup  function  include/linux/pm_wakeup.h  163  static inline bool device_may_wakeup(struct device *dev)
wakeup_source_prepare  function  include/linux/pm_wakeup.h  116  static inline void wakeup_source_prepare(struct wakeup_source *ws,const char *name) {}
wakeup_source_create  function  include/linux/pm_wakeup.h  118  static inline struct wakeup_source *wakeup_source_create(const char *name)
wakeup_source_drop  function  include/linux/pm_wakeup.h  123  static inline void wakeup_source_drop(struct wakeup_source *ws) {}
wakeup_source_destroy  function  include/linux/pm_wakeup.h  125  static inline void wakeup_source_destroy(struct wakeup_source *ws) {}
wakeup_source_add  function  include/linux/pm_wakeup.h  127  static inline void wakeup_source_add(struct wakeup_source *ws) {}
wakeup_source_remove  function  include/linux/pm_wakeup.h  129  static inline void wakeup_source_remove(struct wakeup_source *ws) {}
wakeup_source_register  function  include/linux/pm_wakeup.h  131  static inline struct wakeup_source *wakeup_source_register(const char *name)
wakeup_source_unregister  function  include/linux/pm_wakeup.h  136  static inline void wakeup_source_unregister(struct wakeup_source *ws) {}
device_wakeup_enable  function  include/linux/pm_wakeup.h  138  static inline int device_wakeup_enable(struct device *dev)
device_wakeup_disable  function  include/linux/pm_wakeup.h  144  static inline int device_wakeup_disable(struct device *dev)
device_set_wakeup_capable  function  include/linux/pm_wakeup.h  105  static inline void device_set_wakeup_capable(struct device *dev,bool capable)
device_init_wakeup  function  include/linux/pm_wakeup.h  156  static inline int device_init_wakeup(struct device *dev,bool val)
device_set_wakeup_enable  function  include/linux/pm_wakeup.h  150  static inline int device_set_wakeup_enable(struct device *dev,bool enable)
__pm_stay_awake  function  include/linux/pm_wakeup.h  168  static inline void __pm_stay_awake(struct wakeup_source *ws) {}
pm_stay_awake  function  include/linux/pm_wakeup.h  170  static inline void pm_stay_awake(struct device *dev) {}
__pm_relax  function  include/linux/pm_wakeup.h  172  static inline void __pm_relax(struct wakeup_source *ws) {}
pm_relax  function  include/linux/pm_wakeup.h  174  static inline void pm_relax(struct device *dev) {}
__pm_wakeup_event  function  include/linux/pm_wakeup.h  176  static inline void __pm_wakeup_event(struct wakeup_source *ws,unsigned int msec) {}
pm_wakeup_event  function  include/linux/pm_wakeup.h  178  static inline void pm_wakeup_event(struct device *dev,unsigned int msec) {}
wakeup_source_init  function  include/linux/pm_wakeup.h  183  static inline void wakeup_source_init(struct wakeup_source *ws,const char *name)
wakeup_source_trash  function  include/linux/pm_wakeup.h  189  static inline void wakeup_source_trash(struct wakeup_source *ws)
LINUX_PCI_REGS_H  macro  include/uapi/linux/pci_regs.h  23  #define LINUX_PCI_REGS_H
PCI_STD_HEADER_SIZEOF  macro  include/uapi/linux/pci_regs.h  29  #define PCI_STD_HEADER_SIZEOF 64
PCI_VENDOR_ID  macro  include/uapi/linux/pci_regs.h  30  #define PCI_VENDOR_ID 0x00
PCI_DEVICE_ID  macro  include/uapi/linux/pci_regs.h  31  #define PCI_DEVICE_ID 0x02
PCI_COMMAND  macro  include/uapi/linux/pci_regs.h  32  #define PCI_COMMAND 0x04
PCI_COMMAND_IO  macro  include/uapi/linux/pci_regs.h  33  #define PCI_COMMAND_IO 0x1
PCI_COMMAND_MEMORY  macro  include/uapi/linux/pci_regs.h  34  #define PCI_COMMAND_MEMORY 0x2
PCI_COMMAND_MASTER  macro  include/uapi/linux/pci_regs.h  35  #define PCI_COMMAND_MASTER 0x4
PCI_COMMAND_SPECIAL  macro  include/uapi/linux/pci_regs.h  36  #define PCI_COMMAND_SPECIAL 0x8
PCI_COMMAND_INVALIDATE  macro  include/uapi/linux/pci_regs.h  37  #define PCI_COMMAND_INVALIDATE 0x10
PCI_COMMAND_VGA_PALETTE  macro  include/uapi/linux/pci_regs.h  38  #define PCI_COMMAND_VGA_PALETTE 0x20
PCI_COMMAND_PARITY  macro  include/uapi/linux/pci_regs.h  39  #define PCI_COMMAND_PARITY 0x40
PCI_COMMAND_WAIT  macro  include/uapi/linux/pci_regs.h  40  #define PCI_COMMAND_WAIT 0x80
PCI_COMMAND_SERR  macro  include/uapi/linux/pci_regs.h  41  #define PCI_COMMAND_SERR 0x100
PCI_COMMAND_FAST_BACK  macro  include/uapi/linux/pci_regs.h  42  #define PCI_COMMAND_FAST_BACK 0x200
PCI_COMMAND_INTX_DISABLE  macro  include/uapi/linux/pci_regs.h  43  #define PCI_COMMAND_INTX_DISABLE 0x400
PCI_STATUS  macro  include/uapi/linux/pci_regs.h  45  #define PCI_STATUS 0x06
PCI_STATUS_INTERRUPT  macro  include/uapi/linux/pci_regs.h  46  #define PCI_STATUS_INTERRUPT 0x08
PCI_STATUS_CAP_LIST  macro  include/uapi/linux/pci_regs.h  47  #define PCI_STATUS_CAP_LIST 0x10
PCI_STATUS_66MHZ  macro  include/uapi/linux/pci_regs.h  48  #define PCI_STATUS_66MHZ 0x20
PCI_STATUS_UDF  macro  include/uapi/linux/pci_regs.h  49  #define PCI_STATUS_UDF 0x40
PCI_STATUS_FAST_BACK  macro  include/uapi/linux/pci_regs.h  50  #define PCI_STATUS_FAST_BACK 0x80
PCI_STATUS_PARITY  macro  include/uapi/linux/pci_regs.h  51  #define PCI_STATUS_PARITY 0x100
PCI_STATUS_DEVSEL_MASK  macro  include/uapi/linux/pci_regs.h  52  #define PCI_STATUS_DEVSEL_MASK 0x600
PCI_STATUS_DEVSEL_FAST  macro  include/uapi/linux/pci_regs.h  53  #define PCI_STATUS_DEVSEL_FAST 0x000
PCI_STATUS_DEVSEL_MEDIUM  macro  include/uapi/linux/pci_regs.h  54  #define PCI_STATUS_DEVSEL_MEDIUM 0x200
PCI_STATUS_DEVSEL_SLOW  macro  include/uapi/linux/pci_regs.h  55  #define PCI_STATUS_DEVSEL_SLOW 0x400
PCI_STATUS_SIG_TARGET_ABORT  macro  include/uapi/linux/pci_regs.h  56  #define PCI_STATUS_SIG_TARGET_ABORT 0x800
PCI_STATUS_REC_TARGET_ABORT  macro  include/uapi/linux/pci_regs.h  57  #define PCI_STATUS_REC_TARGET_ABORT 0x1000
PCI_STATUS_REC_MASTER_ABORT  macro  include/uapi/linux/pci_regs.h  58  #define PCI_STATUS_REC_MASTER_ABORT 0x2000
PCI_STATUS_SIG_SYSTEM_ERROR  macro  include/uapi/linux/pci_regs.h  59  #define PCI_STATUS_SIG_SYSTEM_ERROR 0x4000
PCI_STATUS_DETECTED_PARITY  macro  include/uapi/linux/pci_regs.h  60  #define PCI_STATUS_DETECTED_PARITY 0x8000
PCI_CLASS_REVISION  macro  include/uapi/linux/pci_regs.h  62  #define PCI_CLASS_REVISION 0x08
PCI_REVISION_ID  macro  include/uapi/linux/pci_regs.h  63  #define PCI_REVISION_ID 0x08
PCI_CLASS_PROG  macro  include/uapi/linux/pci_regs.h  64  #define PCI_CLASS_PROG 0x09
PCI_CLASS_DEVICE  macro  include/uapi/linux/pci_regs.h  65  #define PCI_CLASS_DEVICE 0x0a
PCI_CACHE_LINE_SIZE  macro  include/uapi/linux/pci_regs.h  67  #define PCI_CACHE_LINE_SIZE 0x0c
PCI_LATENCY_TIMER  macro  include/uapi/linux/pci_regs.h  68  #define PCI_LATENCY_TIMER 0x0d
PCI_HEADER_TYPE  macro  include/uapi/linux/pci_regs.h  69  #define PCI_HEADER_TYPE 0x0e
PCI_HEADER_TYPE_NORMAL  macro  include/uapi/linux/pci_regs.h  70  #define PCI_HEADER_TYPE_NORMAL 0
PCI_HEADER_TYPE_BRIDGE  macro  include/uapi/linux/pci_regs.h  71  #define PCI_HEADER_TYPE_BRIDGE 1
PCI_HEADER_TYPE_CARDBUS  macro  include/uapi/linux/pci_regs.h  72  #define PCI_HEADER_TYPE_CARDBUS 2
PCI_BIST  macro  include/uapi/linux/pci_regs.h  74  #define PCI_BIST 0x0f
PCI_BIST_CODE_MASK  macro  include/uapi/linux/pci_regs.h  75  #define PCI_BIST_CODE_MASK 0x0f
PCI_BIST_START  macro  include/uapi/linux/pci_regs.h  76  #define PCI_BIST_START 0x40
PCI_BIST_CAPABLE  macro  include/uapi/linux/pci_regs.h  77  #define PCI_BIST_CAPABLE 0x80
PCI_BASE_ADDRESS_0  macro  include/uapi/linux/pci_regs.h  85  #define PCI_BASE_ADDRESS_0 0x10
PCI_BASE_ADDRESS_1  macro  include/uapi/linux/pci_regs.h  86  #define PCI_BASE_ADDRESS_1 0x14
PCI_BASE_ADDRESS_2  macro  include/uapi/linux/pci_regs.h  87  #define PCI_BASE_ADDRESS_2 0x18
PCI_BASE_ADDRESS_3  macro  include/uapi/linux/pci_regs.h  88  #define PCI_BASE_ADDRESS_3 0x1c
PCI_BASE_ADDRESS_4  macro  include/uapi/linux/pci_regs.h  89  #define PCI_BASE_ADDRESS_4 0x20
PCI_BASE_ADDRESS_5  macro  include/uapi/linux/pci_regs.h  90  #define PCI_BASE_ADDRESS_5 0x24
PCI_BASE_ADDRESS_SPACE  macro  include/uapi/linux/pci_regs.h  91  #define PCI_BASE_ADDRESS_SPACE 0x01
PCI_BASE_ADDRESS_SPACE_IO  macro  include/uapi/linux/pci_regs.h  92  #define PCI_BASE_ADDRESS_SPACE_IO 0x01
PCI_BASE_ADDRESS_SPACE_MEMORY  macro  include/uapi/linux/pci_regs.h  93  #define PCI_BASE_ADDRESS_SPACE_MEMORY 0x00
PCI_BASE_ADDRESS_MEM_TYPE_MASK  macro  include/uapi/linux/pci_regs.h  94  #define PCI_BASE_ADDRESS_MEM_TYPE_MASK 0x06
PCI_BASE_ADDRESS_MEM_TYPE_32  macro  include/uapi/linux/pci_regs.h  95  #define PCI_BASE_ADDRESS_MEM_TYPE_32 0x00
PCI_BASE_ADDRESS_MEM_TYPE_1M  macro  include/uapi/linux/pci_regs.h  96  #define PCI_BASE_ADDRESS_MEM_TYPE_1M 0x02
PCI_BASE_ADDRESS_MEM_TYPE_64  macro  include/uapi/linux/pci_regs.h  97  #define PCI_BASE_ADDRESS_MEM_TYPE_64 0x04
PCI_BASE_ADDRESS_MEM_PREFETCH  macro  include/uapi/linux/pci_regs.h  98  #define PCI_BASE_ADDRESS_MEM_PREFETCH 0x08
PCI_BASE_ADDRESS_MEM_MASK  macro  include/uapi/linux/pci_regs.h  99  #define PCI_BASE_ADDRESS_MEM_MASK (~0x0fUL)
PCI_BASE_ADDRESS_IO_MASK  macro  include/uapi/linux/pci_regs.h  100  #define PCI_BASE_ADDRESS_IO_MASK (~0x03UL)
PCI_CARDBUS_CIS  macro  include/uapi/linux/pci_regs.h  104  #define PCI_CARDBUS_CIS 0x28
PCI_SUBSYSTEM_VENDOR_ID  macro  include/uapi/linux/pci_regs.h  105  #define PCI_SUBSYSTEM_VENDOR_ID 0x2c
PCI_SUBSYSTEM_ID  macro  include/uapi/linux/pci_regs.h  106  #define PCI_SUBSYSTEM_ID 0x2e
PCI_ROM_ADDRESS  macro  include/uapi/linux/pci_regs.h  107  #define PCI_ROM_ADDRESS 0x30
PCI_ROM_ADDRESS_ENABLE  macro  include/uapi/linux/pci_regs.h  108  #define PCI_ROM_ADDRESS_ENABLE 0x01
PCI_ROM_ADDRESS_MASK  macro  include/uapi/linux/pci_regs.h  109  #define PCI_ROM_ADDRESS_MASK (~0x7ffUL)
PCI_CAPABILITY_LIST  macro  include/uapi/linux/pci_regs.h  111  #define PCI_CAPABILITY_LIST 0x34
PCI_INTERRUPT_LINE  macro  include/uapi/linux/pci_regs.h  114  #define PCI_INTERRUPT_LINE 0x3c
PCI_INTERRUPT_PIN  macro  include/uapi/linux/pci_regs.h  115  #define PCI_INTERRUPT_PIN 0x3d
PCI_MIN_GNT  macro  include/uapi/linux/pci_regs.h  116  #define PCI_MIN_GNT 0x3e
PCI_MAX_LAT  macro  include/uapi/linux/pci_regs.h  117  #define PCI_MAX_LAT 0x3f
PCI_PRIMARY_BUS  macro  include/uapi/linux/pci_regs.h  120  #define PCI_PRIMARY_BUS 0x18
PCI_SECONDARY_BUS  macro  include/uapi/linux/pci_regs.h  121  #define PCI_SECONDARY_BUS 0x19
PCI_SUBORDINATE_BUS  macro  include/uapi/linux/pci_regs.h  122  #define PCI_SUBORDINATE_BUS 0x1a
PCI_SEC_LATENCY_TIMER  macro  include/uapi/linux/pci_regs.h  123  #define PCI_SEC_LATENCY_TIMER 0x1b
PCI_IO_BASE  macro  include/uapi/linux/pci_regs.h  124  #define PCI_IO_BASE 0x1c
PCI_IO_LIMIT  macro  include/uapi/linux/pci_regs.h  125  #define PCI_IO_LIMIT 0x1d
PCI_IO_RANGE_TYPE_MASK  macro  include/uapi/linux/pci_regs.h  126  #define PCI_IO_RANGE_TYPE_MASK 0x0fUL
PCI_IO_RANGE_TYPE_16  macro  include/uapi/linux/pci_regs.h  127  #define PCI_IO_RANGE_TYPE_16 0x00
PCI_IO_RANGE_TYPE_32  macro  include/uapi/linux/pci_regs.h  128  #define PCI_IO_RANGE_TYPE_32 0x01
PCI_IO_RANGE_MASK  macro  include/uapi/linux/pci_regs.h  129  #define PCI_IO_RANGE_MASK (~0x0fUL)
PCI_IO_1K_RANGE_MASK  macro  include/uapi/linux/pci_regs.h  130  #define PCI_IO_1K_RANGE_MASK (~0x03UL)
PCI_SEC_STATUS  macro  include/uapi/linux/pci_regs.h  131  #define PCI_SEC_STATUS 0x1e
PCI_MEMORY_BASE  macro  include/uapi/linux/pci_regs.h  132  #define PCI_MEMORY_BASE 0x20
PCI_MEMORY_LIMIT  macro  include/uapi/linux/pci_regs.h  133  #define PCI_MEMORY_LIMIT 0x22
PCI_MEMORY_RANGE_TYPE_MASK  macro  include/uapi/linux/pci_regs.h  134  #define PCI_MEMORY_RANGE_TYPE_MASK 0x0fUL
PCI_MEMORY_RANGE_MASK  macro  include/uapi/linux/pci_regs.h  135  #define PCI_MEMORY_RANGE_MASK (~0x0fUL)
PCI_PREF_MEMORY_BASE  macro  include/uapi/linux/pci_regs.h  136  #define PCI_PREF_MEMORY_BASE 0x24
PCI_PREF_MEMORY_LIMIT  macro  include/uapi/linux/pci_regs.h  137  #define PCI_PREF_MEMORY_LIMIT 0x26
PCI_PREF_RANGE_TYPE_MASK  macro  include/uapi/linux/pci_regs.h  138  #define PCI_PREF_RANGE_TYPE_MASK 0x0fUL
PCI_PREF_RANGE_TYPE_32  macro  include/uapi/linux/pci_regs.h  139  #define PCI_PREF_RANGE_TYPE_32 0x00
PCI_PREF_RANGE_TYPE_64  macro  include/uapi/linux/pci_regs.h  140  #define PCI_PREF_RANGE_TYPE_64 0x01
PCI_PREF_RANGE_MASK  macro  include/uapi/linux/pci_regs.h  141  #define PCI_PREF_RANGE_MASK (~0x0fUL)
PCI_PREF_BASE_UPPER32  macro  include/uapi/linux/pci_regs.h  142  #define PCI_PREF_BASE_UPPER32 0x28
PCI_PREF_LIMIT_UPPER32  macro  include/uapi/linux/pci_regs.h  143  #define PCI_PREF_LIMIT_UPPER32 0x2c
PCI_IO_BASE_UPPER16  macro  include/uapi/linux/pci_regs.h  144  #define PCI_IO_BASE_UPPER16 0x30
PCI_IO_LIMIT_UPPER16  macro  include/uapi/linux/pci_regs.h  145  #define PCI_IO_LIMIT_UPPER16 0x32
PCI_ROM_ADDRESS1  macro  include/uapi/linux/pci_regs.h  148  #define PCI_ROM_ADDRESS1 0x38
PCI_BRIDGE_CONTROL  macro  include/uapi/linux/pci_regs.h  150  #define PCI_BRIDGE_CONTROL 0x3e
PCI_BRIDGE_CTL_PARITY  macro  include/uapi/linux/pci_regs.h  151  #define PCI_BRIDGE_CTL_PARITY 0x01
PCI_BRIDGE_CTL_SERR  macro  include/uapi/linux/pci_regs.h  152  #define PCI_BRIDGE_CTL_SERR 0x02
PCI_BRIDGE_CTL_ISA  macro  include/uapi/linux/pci_regs.h  153  #define PCI_BRIDGE_CTL_ISA 0x04
PCI_BRIDGE_CTL_VGA  macro  include/uapi/linux/pci_regs.h  154  #define PCI_BRIDGE_CTL_VGA 0x08
PCI_BRIDGE_CTL_MASTER_ABORT  macro  include/uapi/linux/pci_regs.h  155  #define PCI_BRIDGE_CTL_MASTER_ABORT 0x20
PCI_BRIDGE_CTL_BUS_RESET  macro  include/uapi/linux/pci_regs.h  156  #define PCI_BRIDGE_CTL_BUS_RESET 0x40
PCI_BRIDGE_CTL_FAST_BACK  macro  include/uapi/linux/pci_regs.h  157  #define PCI_BRIDGE_CTL_FAST_BACK 0x80
PCI_CB_CAPABILITY_LIST  macro  include/uapi/linux/pci_regs.h  160  #define PCI_CB_CAPABILITY_LIST 0x14
PCI_CB_SEC_STATUS  macro  include/uapi/linux/pci_regs.h  162  #define PCI_CB_SEC_STATUS 0x16
PCI_CB_PRIMARY_BUS  macro  include/uapi/linux/pci_regs.h  163  #define PCI_CB_PRIMARY_BUS 0x18
PCI_CB_CARD_BUS  macro  include/uapi/linux/pci_regs.h  164  #define PCI_CB_CARD_BUS 0x19
PCI_CB_SUBORDINATE_BUS  macro  include/uapi/linux/pci_regs.h  165  #define PCI_CB_SUBORDINATE_BUS 0x1a
PCI_CB_LATENCY_TIMER  macro  include/uapi/linux/pci_regs.h  166  #define PCI_CB_LATENCY_TIMER 0x1b
PCI_CB_MEMORY_BASE_0  macro  include/uapi/linux/pci_regs.h  167  #define PCI_CB_MEMORY_BASE_0 0x1c
PCI_CB_MEMORY_LIMIT_0  macro  include/uapi/linux/pci_regs.h  168  #define PCI_CB_MEMORY_LIMIT_0 0x20
PCI_CB_MEMORY_BASE_1  macro  include/uapi/linux/pci_regs.h  169  #define PCI_CB_MEMORY_BASE_1 0x24
PCI_CB_MEMORY_LIMIT_1  macro  include/uapi/linux/pci_regs.h  170  #define PCI_CB_MEMORY_LIMIT_1 0x28
PCI_CB_IO_BASE_0  macro  include/uapi/linux/pci_regs.h  171  #define PCI_CB_IO_BASE_0 0x2c
PCI_CB_IO_BASE_0_HI  macro  include/uapi/linux/pci_regs.h  172  #define PCI_CB_IO_BASE_0_HI 0x2e
PCI_CB_IO_LIMIT_0  macro  include/uapi/linux/pci_regs.h  173  #define PCI_CB_IO_LIMIT_0 0x30
PCI_CB_IO_LIMIT_0_HI  macro  include/uapi/linux/pci_regs.h  174  #define PCI_CB_IO_LIMIT_0_HI 0x32
PCI_CB_IO_BASE_1  macro  include/uapi/linux/pci_regs.h  175  #define PCI_CB_IO_BASE_1 0x34
PCI_CB_IO_BASE_1_HI  macro  include/uapi/linux/pci_regs.h  176  #define PCI_CB_IO_BASE_1_HI 0x36
PCI_CB_IO_LIMIT_1  macro  include/uapi/linux/pci_regs.h  177  #define PCI_CB_IO_LIMIT_1 0x38
PCI_CB_IO_LIMIT_1_HI  macro  include/uapi/linux/pci_regs.h  178  #define PCI_CB_IO_LIMIT_1_HI 0x3a
PCI_CB_IO_RANGE_MASK  macro  include/uapi/linux/pci_regs.h  179  #define PCI_CB_IO_RANGE_MASK (~0x03UL)
PCI_CB_BRIDGE_CONTROL  macro  include/uapi/linux/pci_regs.h  181  #define PCI_CB_BRIDGE_CONTROL 0x3e
PCI_CB_BRIDGE_CTL_PARITY  macro  include/uapi/linux/pci_regs.h  182  #define PCI_CB_BRIDGE_CTL_PARITY 0x01
PCI_CB_BRIDGE_CTL_SERR  macro  include/uapi/linux/pci_regs.h  183  #define PCI_CB_BRIDGE_CTL_SERR 0x02
PCI_CB_BRIDGE_CTL_ISA  macro  include/uapi/linux/pci_regs.h  184  #define PCI_CB_BRIDGE_CTL_ISA 0x04
PCI_CB_BRIDGE_CTL_VGA  macro  include/uapi/linux/pci_regs.h  185  #define PCI_CB_BRIDGE_CTL_VGA 0x08
PCI_CB_BRIDGE_CTL_MASTER_ABORT  macro  include/uapi/linux/pci_regs.h  186  #define PCI_CB_BRIDGE_CTL_MASTER_ABORT 0x20
PCI_CB_BRIDGE_CTL_CB_RESET  macro  include/uapi/linux/pci_regs.h  187  #define PCI_CB_BRIDGE_CTL_CB_RESET 0x40
PCI_CB_BRIDGE_CTL_16BIT_INT  macro  include/uapi/linux/pci_regs.h  188  #define PCI_CB_BRIDGE_CTL_16BIT_INT 0x80
PCI_CB_BRIDGE_CTL_PREFETCH_MEM0  macro  include/uapi/linux/pci_regs.h  189  #define PCI_CB_BRIDGE_CTL_PREFETCH_MEM0 0x100
PCI_CB_BRIDGE_CTL_PREFETCH_MEM1  macro  include/uapi/linux/pci_regs.h  190  #define PCI_CB_BRIDGE_CTL_PREFETCH_MEM1 0x200
PCI_CB_BRIDGE_CTL_POST_WRITES  macro  include/uapi/linux/pci_regs.h  191  #define PCI_CB_BRIDGE_CTL_POST_WRITES 0x400
PCI_CB_SUBSYSTEM_VENDOR_ID  macro  include/uapi/linux/pci_regs.h  192  #define PCI_CB_SUBSYSTEM_VENDOR_ID 0x40
PCI_CB_SUBSYSTEM_ID  macro  include/uapi/linux/pci_regs.h  193  #define PCI_CB_SUBSYSTEM_ID 0x42
PCI_CB_LEGACY_MODE_BASE  macro  include/uapi/linux/pci_regs.h  194  #define PCI_CB_LEGACY_MODE_BASE 0x44
PCI_CAP_LIST_ID  macro  include/uapi/linux/pci_regs.h  199  #define PCI_CAP_LIST_ID 0
PCI_CAP_ID_PM  macro  include/uapi/linux/pci_regs.h  200  #define PCI_CAP_ID_PM 0x01
PCI_CAP_ID_AGP  macro  include/uapi/linux/pci_regs.h  201  #define PCI_CAP_ID_AGP 0x02
PCI_CAP_ID_VPD  macro  include/uapi/linux/pci_regs.h  202  #define PCI_CAP_ID_VPD 0x03
PCI_CAP_ID_SLOTID  macro  include/uapi/linux/pci_regs.h  203  #define PCI_CAP_ID_SLOTID 0x04
PCI_CAP_ID_MSI  macro  include/uapi/linux/pci_regs.h  204  #define PCI_CAP_ID_MSI 0x05
PCI_CAP_ID_CHSWP  macro  include/uapi/linux/pci_regs.h  205  #define PCI_CAP_ID_CHSWP 0x06
PCI_CAP_ID_PCIX  macro  include/uapi/linux/pci_regs.h  206  #define PCI_CAP_ID_PCIX 0x07
PCI_CAP_ID_HT  macro  include/uapi/linux/pci_regs.h  207  #define PCI_CAP_ID_HT 0x08
PCI_CAP_ID_VNDR  macro  include/uapi/linux/pci_regs.h  208  #define PCI_CAP_ID_VNDR 0x09
PCI_CAP_ID_DBG  macro  include/uapi/linux/pci_regs.h  209  #define PCI_CAP_ID_DBG 0x0A
PCI_CAP_ID_CCRC  macro  include/uapi/linux/pci_regs.h  210  #define PCI_CAP_ID_CCRC 0x0B
PCI_CAP_ID_SHPC  macro  include/uapi/linux/pci_regs.h  211  #define PCI_CAP_ID_SHPC 0x0C
PCI_CAP_ID_SSVID  macro  include/uapi/linux/pci_regs.h  212  #define PCI_CAP_ID_SSVID 0x0D
PCI_CAP_ID_AGP3  macro  include/uapi/linux/pci_regs.h  213  #define PCI_CAP_ID_AGP3 0x0E
PCI_CAP_ID_SECDEV  macro  include/uapi/linux/pci_regs.h  214  #define PCI_CAP_ID_SECDEV 0x0F
PCI_CAP_ID_EXP  macro  include/uapi/linux/pci_regs.h  215  #define PCI_CAP_ID_EXP 0x10
PCI_CAP_ID_MSIX  macro  include/uapi/linux/pci_regs.h  216  #define PCI_CAP_ID_MSIX 0x11
PCI_CAP_ID_SATA  macro  include/uapi/linux/pci_regs.h  217  #define PCI_CAP_ID_SATA 0x12
PCI_CAP_ID_AF  macro  include/uapi/linux/pci_regs.h  218  #define PCI_CAP_ID_AF 0x13
PCI_CAP_ID_MAX  macro  include/uapi/linux/pci_regs.h  219  #define PCI_CAP_ID_MAX PCI_CAP_ID_AF
PCI_CAP_LIST_NEXT  macro  include/uapi/linux/pci_regs.h  220  #define PCI_CAP_LIST_NEXT 1
PCI_CAP_FLAGS  macro  include/uapi/linux/pci_regs.h  221  #define PCI_CAP_FLAGS 2
PCI_CAP_SIZEOF  macro  include/uapi/linux/pci_regs.h  222  #define PCI_CAP_SIZEOF 4
PCI_PM_PMC  macro  include/uapi/linux/pci_regs.h  226  #define PCI_PM_PMC 2
PCI_PM_CAP_VER_MASK  macro  include/uapi/linux/pci_regs.h  227  #define PCI_PM_CAP_VER_MASK 0x0007
PCI_PM_CAP_PME_CLOCK  macro  include/uapi/linux/pci_regs.h  228  #define PCI_PM_CAP_PME_CLOCK 0x0008
PCI_PM_CAP_RESERVED  macro  include/uapi/linux/pci_regs.h  229  #define PCI_PM_CAP_RESERVED 0x0010
PCI_PM_CAP_DSI  macro  include/uapi/linux/pci_regs.h  230  #define PCI_PM_CAP_DSI 0x0020
PCI_PM_CAP_AUX_POWER  macro  include/uapi/linux/pci_regs.h  231  #define PCI_PM_CAP_AUX_POWER 0x01C0
PCI_PM_CAP_D1  macro  include/uapi/linux/pci_regs.h  232  #define PCI_PM_CAP_D1 0x0200
PCI_PM_CAP_D2  macro  include/uapi/linux/pci_regs.h  233  #define PCI_PM_CAP_D2 0x0400
PCI_PM_CAP_PME  macro  include/uapi/linux/pci_regs.h  234  #define PCI_PM_CAP_PME 0x0800
PCI_PM_CAP_PME_MASK  macro  include/uapi/linux/pci_regs.h  235  #define PCI_PM_CAP_PME_MASK 0xF800
PCI_PM_CAP_PME_D0  macro  include/uapi/linux/pci_regs.h  236  #define PCI_PM_CAP_PME_D0 0x0800
PCI_PM_CAP_PME_D1  macro  include/uapi/linux/pci_regs.h  237  #define PCI_PM_CAP_PME_D1 0x1000
PCI_PM_CAP_PME_D2  macro  include/uapi/linux/pci_regs.h  238  #define PCI_PM_CAP_PME_D2 0x2000
PCI_PM_CAP_PME_D3  macro  include/uapi/linux/pci_regs.h  239  #define PCI_PM_CAP_PME_D3 0x4000
PCI_PM_CAP_PME_D3cold  macro  include/uapi/linux/pci_regs.h  240  #define PCI_PM_CAP_PME_D3cold 0x8000
PCI_PM_CAP_PME_SHIFT  macro  include/uapi/linux/pci_regs.h  241  #define PCI_PM_CAP_PME_SHIFT 11
PCI_PM_CTRL  macro  include/uapi/linux/pci_regs.h  242  #define PCI_PM_CTRL 4
PCI_PM_CTRL_STATE_MASK  macro  include/uapi/linux/pci_regs.h  243  #define PCI_PM_CTRL_STATE_MASK 0x0003
PCI_PM_CTRL_NO_SOFT_RESET  macro  include/uapi/linux/pci_regs.h  244  #define PCI_PM_CTRL_NO_SOFT_RESET 0x0008
PCI_PM_CTRL_PME_ENABLE  macro  include/uapi/linux/pci_regs.h  245  #define PCI_PM_CTRL_PME_ENABLE 0x0100
PCI_PM_CTRL_DATA_SEL_MASK  macro  include/uapi/linux/pci_regs.h  246  #define PCI_PM_CTRL_DATA_SEL_MASK 0x1e00
PCI_PM_CTRL_DATA_SCALE_MASK  macro  include/uapi/linux/pci_regs.h  247  #define PCI_PM_CTRL_DATA_SCALE_MASK 0x6000
PCI_PM_CTRL_PME_STATUS  macro  include/uapi/linux/pci_regs.h  248  #define PCI_PM_CTRL_PME_STATUS 0x8000
PCI_PM_PPB_EXTENSIONS  macro  include/uapi/linux/pci_regs.h  249  #define PCI_PM_PPB_EXTENSIONS 6
PCI_PM_PPB_B2_B3  macro  include/uapi/linux/pci_regs.h  250  #define PCI_PM_PPB_B2_B3 0x40
PCI_PM_BPCC_ENABLE  macro  include/uapi/linux/pci_regs.h  251  #define PCI_PM_BPCC_ENABLE 0x80
PCI_PM_DATA_REGISTER  macro  include/uapi/linux/pci_regs.h  252  #define PCI_PM_DATA_REGISTER 7
PCI_PM_SIZEOF  macro  include/uapi/linux/pci_regs.h  253  #define PCI_PM_SIZEOF 8
PCI_AGP_VERSION  macro  include/uapi/linux/pci_regs.h  257  #define PCI_AGP_VERSION 2
PCI_AGP_RFU  macro  include/uapi/linux/pci_regs.h  258  #define PCI_AGP_RFU 3
PCI_AGP_STATUS  macro  include/uapi/linux/pci_regs.h  259  #define PCI_AGP_STATUS 4
PCI_AGP_STATUS_RQ_MASK  macro  include/uapi/linux/pci_regs.h  260  #define PCI_AGP_STATUS_RQ_MASK 0xff000000
PCI_AGP_STATUS_SBA  macro  include/uapi/linux/pci_regs.h  261  #define PCI_AGP_STATUS_SBA 0x0200
PCI_AGP_STATUS_64BIT  macro  include/uapi/linux/pci_regs.h  262  #define PCI_AGP_STATUS_64BIT 0x0020
PCI_AGP_STATUS_FW  macro  include/uapi/linux/pci_regs.h  263  #define PCI_AGP_STATUS_FW 0x0010
PCI_AGP_STATUS_RATE4  macro  include/uapi/linux/pci_regs.h  264  #define PCI_AGP_STATUS_RATE4 0x0004
PCI_AGP_STATUS_RATE2  macro  include/uapi/linux/pci_regs.h  265  #define PCI_AGP_STATUS_RATE2 0x0002
PCI_AGP_STATUS_RATE1  macro  include/uapi/linux/pci_regs.h  266  #define PCI_AGP_STATUS_RATE1 0x0001
PCI_AGP_COMMAND  macro  include/uapi/linux/pci_regs.h  267  #define PCI_AGP_COMMAND 8
PCI_AGP_COMMAND_RQ_MASK  macro  include/uapi/linux/pci_regs.h  268  #define PCI_AGP_COMMAND_RQ_MASK 0xff000000
PCI_AGP_COMMAND_SBA  macro  include/uapi/linux/pci_regs.h  269  #define PCI_AGP_COMMAND_SBA 0x0200
PCI_AGP_COMMAND_AGP  macro  include/uapi/linux/pci_regs.h  270  #define PCI_AGP_COMMAND_AGP 0x0100
PCI_AGP_COMMAND_64BIT  macro  include/uapi/linux/pci_regs.h  271  #define PCI_AGP_COMMAND_64BIT 0x0020
PCI_AGP_COMMAND_FW  macro  include/uapi/linux/pci_regs.h  272  #define PCI_AGP_COMMAND_FW 0x0010
PCI_AGP_COMMAND_RATE4  macro  include/uapi/linux/pci_regs.h  273  #define PCI_AGP_COMMAND_RATE4 0x0004
PCI_AGP_COMMAND_RATE2  macro  include/uapi/linux/pci_regs.h  274  #define PCI_AGP_COMMAND_RATE2 0x0002
PCI_AGP_COMMAND_RATE1  macro  include/uapi/linux/pci_regs.h  275  #define PCI_AGP_COMMAND_RATE1 0x0001
PCI_AGP_SIZEOF  macro  include/uapi/linux/pci_regs.h  276  #define PCI_AGP_SIZEOF 12
PCI_VPD_ADDR  macro  include/uapi/linux/pci_regs.h  280  #define PCI_VPD_ADDR 2
PCI_VPD_ADDR_MASK  macro  include/uapi/linux/pci_regs.h  281  #define PCI_VPD_ADDR_MASK 0x7fff
PCI_VPD_ADDR_F  macro  include/uapi/linux/pci_regs.h  282  #define PCI_VPD_ADDR_F 0x8000
PCI_VPD_DATA  macro  include/uapi/linux/pci_regs.h  283  #define PCI_VPD_DATA 4
PCI_CAP_VPD_SIZEOF  macro  include/uapi/linux/pci_regs.h  284  #define PCI_CAP_VPD_SIZEOF 8
PCI_SID_ESR  macro  include/uapi/linux/pci_regs.h  288  #define PCI_SID_ESR 2
PCI_SID_ESR_NSLOTS  macro  include/uapi/linux/pci_regs.h  289  #define PCI_SID_ESR_NSLOTS 0x1f
PCI_SID_ESR_FIC  macro  include/uapi/linux/pci_regs.h  290  #define PCI_SID_ESR_FIC 0x20
PCI_SID_CHASSIS_NR  macro  include/uapi/linux/pci_regs.h  291  #define PCI_SID_CHASSIS_NR 3
PCI_MSI_FLAGS  macro  include/uapi/linux/pci_regs.h  295  #define PCI_MSI_FLAGS 2
PCI_MSI_FLAGS_64BIT  macro  include/uapi/linux/pci_regs.h  296  #define PCI_MSI_FLAGS_64BIT 0x80
PCI_MSI_FLAGS_QSIZE  macro  include/uapi/linux/pci_regs.h  297  #define PCI_MSI_FLAGS_QSIZE 0x70
PCI_MSI_FLAGS_QMASK  macro  include/uapi/linux/pci_regs.h  298  #define PCI_MSI_FLAGS_QMASK 0x0e
PCI_MSI_FLAGS_ENABLE  macro  include/uapi/linux/pci_regs.h  299  #define PCI_MSI_FLAGS_ENABLE 0x01
PCI_MSI_FLAGS_MASKBIT  macro  include/uapi/linux/pci_regs.h  300  #define PCI_MSI_FLAGS_MASKBIT 0x100
PCI_MSI_RFU  macro  include/uapi/linux/pci_regs.h  301  #define PCI_MSI_RFU 3
PCI_MSI_ADDRESS_LO  macro  include/uapi/linux/pci_regs.h  302  #define PCI_MSI_ADDRESS_LO 4
PCI_MSI_ADDRESS_HI  macro  include/uapi/linux/pci_regs.h  303  #define PCI_MSI_ADDRESS_HI 8
PCI_MSI_DATA_32  macro  include/uapi/linux/pci_regs.h  304  #define PCI_MSI_DATA_32 8
PCI_MSI_MASK_32  macro  include/uapi/linux/pci_regs.h  305  #define PCI_MSI_MASK_32 12
PCI_MSI_PENDING_32  macro  include/uapi/linux/pci_regs.h  306  #define PCI_MSI_PENDING_32 16
PCI_MSI_DATA_64  macro  include/uapi/linux/pci_regs.h  307  #define PCI_MSI_DATA_64 12
PCI_MSI_MASK_64  macro  include/uapi/linux/pci_regs.h  308  #define PCI_MSI_MASK_64 16
PCI_MSI_PENDING_64  macro  include/uapi/linux/pci_regs.h  309  #define PCI_MSI_PENDING_64 20
PCI_MSIX_FLAGS  macro  include/uapi/linux/pci_regs.h  312  #define PCI_MSIX_FLAGS 2
PCI_MSIX_FLAGS_QSIZE  macro  include/uapi/linux/pci_regs.h  313  #define PCI_MSIX_FLAGS_QSIZE 0x7FF
PCI_MSIX_FLAGS_ENABLE  macro  include/uapi/linux/pci_regs.h  314  #define PCI_MSIX_FLAGS_ENABLE (1 << 15)
PCI_MSIX_FLAGS_MASKALL  macro  include/uapi/linux/pci_regs.h  315  #define PCI_MSIX_FLAGS_MASKALL (1 << 14)
PCI_MSIX_TABLE  macro  include/uapi/linux/pci_regs.h  316  #define PCI_MSIX_TABLE 4
PCI_MSIX_PBA  macro  include/uapi/linux/pci_regs.h  317  #define PCI_MSIX_PBA 8
PCI_MSIX_FLAGS_BIRMASK  macro  include/uapi/linux/pci_regs.h  318  #define PCI_MSIX_FLAGS_BIRMASK (7 << 0)
PCI_CAP_MSIX_SIZEOF  macro  include/uapi/linux/pci_regs.h  319  #define PCI_CAP_MSIX_SIZEOF 12
PCI_MSIX_ENTRY_SIZE  macro  include/uapi/linux/pci_regs.h  322  #define PCI_MSIX_ENTRY_SIZE 16
PCI_MSIX_ENTRY_LOWER_ADDR  macro  include/uapi/linux/pci_regs.h  323  #define PCI_MSIX_ENTRY_LOWER_ADDR 0
PCI_MSIX_ENTRY_UPPER_ADDR  macro  include/uapi/linux/pci_regs.h  324  #define PCI_MSIX_ENTRY_UPPER_ADDR 4
PCI_MSIX_ENTRY_DATA  macro  include/uapi/linux/pci_regs.h  325  #define PCI_MSIX_ENTRY_DATA 8
PCI_MSIX_ENTRY_VECTOR_CTRL  macro  include/uapi/linux/pci_regs.h  326  #define PCI_MSIX_ENTRY_VECTOR_CTRL 12
PCI_MSIX_ENTRY_CTRL_MASKBIT  macro  include/uapi/linux/pci_regs.h  327  #define PCI_MSIX_ENTRY_CTRL_MASKBIT 1
PCI_CHSWP_CSR  macro  include/uapi/linux/pci_regs.h  331  #define PCI_CHSWP_CSR 2
PCI_CHSWP_DHA  macro  include/uapi/linux/pci_regs.h  332  #define PCI_CHSWP_DHA 0x01
PCI_CHSWP_EIM  macro  include/uapi/linux/pci_regs.h  333  #define PCI_CHSWP_EIM 0x02
PCI_CHSWP_PIE  macro  include/uapi/linux/pci_regs.h  334  #define PCI_CHSWP_PIE 0x04
PCI_CHSWP_LOO  macro  include/uapi/linux/pci_regs.h  335  #define PCI_CHSWP_LOO 0x08
PCI_CHSWP_PI  macro  include/uapi/linux/pci_regs.h  336  #define PCI_CHSWP_PI 0x30
PCI_CHSWP_EXT  macro  include/uapi/linux/pci_regs.h  337  #define PCI_CHSWP_EXT 0x40
PCI_CHSWP_INS  macro  include/uapi/linux/pci_regs.h  338  #define PCI_CHSWP_INS 0x80
PCI_AF_LENGTH  macro  include/uapi/linux/pci_regs.h  342  #define PCI_AF_LENGTH 2
PCI_AF_CAP  macro  include/uapi/linux/pci_regs.h  343  #define PCI_AF_CAP 3
PCI_AF_CAP_TP  macro  include/uapi/linux/pci_regs.h  344  #define PCI_AF_CAP_TP 0x01
PCI_AF_CAP_FLR  macro  include/uapi/linux/pci_regs.h  345  #define PCI_AF_CAP_FLR 0x02
PCI_AF_CTRL  macro  include/uapi/linux/pci_regs.h  346  #define PCI_AF_CTRL 4
PCI_AF_CTRL_FLR  macro  include/uapi/linux/pci_regs.h  347  #define PCI_AF_CTRL_FLR 0x01
PCI_AF_STATUS  macro  include/uapi/linux/pci_regs.h  348  #define PCI_AF_STATUS 5
PCI_AF_STATUS_TP  macro  include/uapi/linux/pci_regs.h  349  #define PCI_AF_STATUS_TP 0x01
PCI_CAP_AF_SIZEOF  macro  include/uapi/linux/pci_regs.h  350  #define PCI_CAP_AF_SIZEOF 6
PCI_X_CMD  macro  include/uapi/linux/pci_regs.h  354  #define PCI_X_CMD 2
PCI_X_CMD_DPERR_E  macro  include/uapi/linux/pci_regs.h  355  #define PCI_X_CMD_DPERR_E 0x0001
PCI_X_CMD_ERO  macro  include/uapi/linux/pci_regs.h  356  #define PCI_X_CMD_ERO 0x0002
PCI_X_CMD_READ_512  macro  include/uapi/linux/pci_regs.h  357  #define PCI_X_CMD_READ_512 0x0000
PCI_X_CMD_READ_1K  macro  include/uapi/linux/pci_regs.h  358  #define PCI_X_CMD_READ_1K 0x0004
PCI_X_CMD_READ_2K  macro  include/uapi/linux/pci_regs.h  359  #define PCI_X_CMD_READ_2K 0x0008
PCI_X_CMD_READ_4K  macro  include/uapi/linux/pci_regs.h  360  #define PCI_X_CMD_READ_4K 0x000c
PCI_X_CMD_MAX_READ  macro  include/uapi/linux/pci_regs.h  361  #define PCI_X_CMD_MAX_READ 0x000c
PCI_X_CMD_SPLIT_1  macro  include/uapi/linux/pci_regs.h  363  #define PCI_X_CMD_SPLIT_1 0x0000
PCI_X_CMD_SPLIT_2  macro  include/uapi/linux/pci_regs.h  364  #define PCI_X_CMD_SPLIT_2 0x0010
PCI_X_CMD_SPLIT_3  macro  include/uapi/linux/pci_regs.h  365  #define PCI_X_CMD_SPLIT_3 0x0020
PCI_X_CMD_SPLIT_4  macro  include/uapi/linux/pci_regs.h  366  #define PCI_X_CMD_SPLIT_4 0x0030
PCI_X_CMD_SPLIT_8  macro  include/uapi/linux/pci_regs.h  367  #define PCI_X_CMD_SPLIT_8 0x0040
PCI_X_CMD_SPLIT_12  macro  include/uapi/linux/pci_regs.h  368  #define PCI_X_CMD_SPLIT_12 0x0050
PCI_X_CMD_SPLIT_16  macro  include/uapi/linux/pci_regs.h  369  #define PCI_X_CMD_SPLIT_16 0x0060
PCI_X_CMD_SPLIT_32  macro  include/uapi/linux/pci_regs.h  370  #define PCI_X_CMD_SPLIT_32 0x0070
PCI_X_CMD_MAX_SPLIT  macro  include/uapi/linux/pci_regs.h  371  #define PCI_X_CMD_MAX_SPLIT 0x0070
PCI_X_CMD_VERSION  macro  include/uapi/linux/pci_regs.h  372  #define PCI_X_CMD_VERSION(x) (((x) >> 12) & 3)
PCI_X_STATUS  macro  include/uapi/linux/pci_regs.h  373  #define PCI_X_STATUS 4
PCI_X_STATUS_DEVFN  macro  include/uapi/linux/pci_regs.h  374  #define PCI_X_STATUS_DEVFN 0x000000ff
PCI_X_STATUS_BUS  macro  include/uapi/linux/pci_regs.h  375  #define PCI_X_STATUS_BUS 0x0000ff00
PCI_X_STATUS_64BIT  macro  include/uapi/linux/pci_regs.h  376  #define PCI_X_STATUS_64BIT 0x00010000
PCI_X_STATUS_133MHZ  macro  include/uapi/linux/pci_regs.h  377  #define PCI_X_STATUS_133MHZ 0x00020000
PCI_X_STATUS_SPL_DISC  macro  include/uapi/linux/pci_regs.h  378  #define PCI_X_STATUS_SPL_DISC 0x00040000
PCI_X_STATUS_UNX_SPL  macro  include/uapi/linux/pci_regs.h  379  #define PCI_X_STATUS_UNX_SPL 0x00080000
PCI_X_STATUS_COMPLEX  macro  include/uapi/linux/pci_regs.h  380  #define PCI_X_STATUS_COMPLEX 0x00100000
PCI_X_STATUS_MAX_READ  macro  include/uapi/linux/pci_regs.h  381  #define PCI_X_STATUS_MAX_READ 0x00600000
PCI_X_STATUS_MAX_SPLIT  macro  include/uapi/linux/pci_regs.h  382  #define PCI_X_STATUS_MAX_SPLIT 0x03800000
PCI_X_STATUS_MAX_CUM  macro  include/uapi/linux/pci_regs.h  383  #define PCI_X_STATUS_MAX_CUM 0x1c000000
PCI_X_STATUS_SPL_ERR  macro  include/uapi/linux/pci_regs.h  384  #define PCI_X_STATUS_SPL_ERR 0x20000000
PCI_X_STATUS_266MHZ  macro  include/uapi/linux/pci_regs.h  385  #define PCI_X_STATUS_266MHZ 0x40000000
PCI_X_STATUS_533MHZ  macro  include/uapi/linux/pci_regs.h  386  #define PCI_X_STATUS_533MHZ 0x80000000
PCI_X_ECC_CSR  macro  include/uapi/linux/pci_regs.h  387  #define PCI_X_ECC_CSR 8
PCI_CAP_PCIX_SIZEOF_V0  macro  include/uapi/linux/pci_regs.h  388  #define PCI_CAP_PCIX_SIZEOF_V0 8
PCI_CAP_PCIX_SIZEOF_V1  macro  include/uapi/linux/pci_regs.h  389  #define PCI_CAP_PCIX_SIZEOF_V1 24
PCI_CAP_PCIX_SIZEOF_V2  macro  include/uapi/linux/pci_regs.h  390  #define PCI_CAP_PCIX_SIZEOF_V2 PCI_CAP_PCIX_SIZEOF_V1
PCI_X_BRIDGE_SSTATUS  macro  include/uapi/linux/pci_regs.h  394  #define PCI_X_BRIDGE_SSTATUS 2
PCI_X_SSTATUS_64BIT  macro  include/uapi/linux/pci_regs.h  395  #define PCI_X_SSTATUS_64BIT 0x0001
PCI_X_SSTATUS_133MHZ  macro  include/uapi/linux/pci_regs.h  396  #define PCI_X_SSTATUS_133MHZ 0x0002
PCI_X_SSTATUS_FREQ  macro  include/uapi/linux/pci_regs.h  397  #define PCI_X_SSTATUS_FREQ 0x03c0
PCI_X_SSTATUS_VERS  macro  include/uapi/linux/pci_regs.h  398  #define PCI_X_SSTATUS_VERS 0x3000
PCI_X_SSTATUS_V1  macro  include/uapi/linux/pci_regs.h  399  #define PCI_X_SSTATUS_V1 0x1000
PCI_X_SSTATUS_V2  macro  include/uapi/linux/pci_regs.h  400  #define PCI_X_SSTATUS_V2 0x2000
PCI_X_SSTATUS_266MHZ  macro  include/uapi/linux/pci_regs.h  401  #define PCI_X_SSTATUS_266MHZ 0x4000
PCI_X_SSTATUS_533MHZ  macro  include/uapi/linux/pci_regs.h  402  #define PCI_X_SSTATUS_533MHZ 0x8000
PCI_X_BRIDGE_STATUS  macro  include/uapi/linux/pci_regs.h  403  #define PCI_X_BRIDGE_STATUS 4
PCI_SSVID_VENDOR_ID  macro  include/uapi/linux/pci_regs.h  407  #define PCI_SSVID_VENDOR_ID 4
PCI_SSVID_DEVICE_ID  macro  include/uapi/linux/pci_regs.h  408  #define PCI_SSVID_DEVICE_ID 6
PCI_EXP_FLAGS  macro  include/uapi/linux/pci_regs.h  412  #define PCI_EXP_FLAGS 2
PCI_EXP_FLAGS_VERS  macro  include/uapi/linux/pci_regs.h  413  #define PCI_EXP_FLAGS_VERS 0x000f
PCI_EXP_FLAGS_TYPE  macro  include/uapi/linux/pci_regs.h  414  #define PCI_EXP_FLAGS_TYPE 0x00f0
PCI_EXP_TYPE_ENDPOINT  macro  include/uapi/linux/pci_regs.h  415  #define PCI_EXP_TYPE_ENDPOINT 0x0
PCI_EXP_TYPE_LEG_END  macro  include/uapi/linux/pci_regs.h  416  #define PCI_EXP_TYPE_LEG_END 0x1
PCI_EXP_TYPE_ROOT_PORT  macro  include/uapi/linux/pci_regs.h  417  #define PCI_EXP_TYPE_ROOT_PORT 0x4
PCI_EXP_TYPE_UPSTREAM  macro  include/uapi/linux/pci_regs.h  418  #define PCI_EXP_TYPE_UPSTREAM 0x5
PCI_EXP_TYPE_DOWNSTREAM  macro  include/uapi/linux/pci_regs.h  419  #define PCI_EXP_TYPE_DOWNSTREAM 0x6
PCI_EXP_TYPE_PCI_BRIDGE  macro  include/uapi/linux/pci_regs.h  420  #define PCI_EXP_TYPE_PCI_BRIDGE 0x7
PCI_EXP_TYPE_PCIE_BRIDGE  macro  include/uapi/linux/pci_regs.h  421  #define PCI_EXP_TYPE_PCIE_BRIDGE 0x8
PCI_EXP_TYPE_RC_END  macro  include/uapi/linux/pci_regs.h  422  #define PCI_EXP_TYPE_RC_END 0x9
PCI_EXP_TYPE_RC_EC  macro  include/uapi/linux/pci_regs.h  423  #define PCI_EXP_TYPE_RC_EC 0xa
PCI_EXP_FLAGS_SLOT  macro  include/uapi/linux/pci_regs.h  424  #define PCI_EXP_FLAGS_SLOT 0x0100
PCI_EXP_FLAGS_IRQ  macro  include/uapi/linux/pci_regs.h  425  #define PCI_EXP_FLAGS_IRQ 0x3e00
PCI_EXP_DEVCAP  macro  include/uapi/linux/pci_regs.h  426  #define PCI_EXP_DEVCAP 4
PCI_EXP_DEVCAP_PAYLOAD  macro  include/uapi/linux/pci_regs.h  427  #define PCI_EXP_DEVCAP_PAYLOAD 0x07
PCI_EXP_DEVCAP_PHANTOM  macro  include/uapi/linux/pci_regs.h  428  #define PCI_EXP_DEVCAP_PHANTOM 0x18
PCI_EXP_DEVCAP_EXT_TAG  macro  include/uapi/linux/pci_regs.h  429  #define PCI_EXP_DEVCAP_EXT_TAG 0x20
PCI_EXP_DEVCAP_L0S  macro  include/uapi/linux/pci_regs.h  430  #define PCI_EXP_DEVCAP_L0S 0x1c0
PCI_EXP_DEVCAP_L1  macro  include/uapi/linux/pci_regs.h  431  #define PCI_EXP_DEVCAP_L1 0xe00
PCI_EXP_DEVCAP_ATN_BUT  macro  include/uapi/linux/pci_regs.h  432  #define PCI_EXP_DEVCAP_ATN_BUT 0x1000
PCI_EXP_DEVCAP_ATN_IND  macro  include/uapi/linux/pci_regs.h  433  #define PCI_EXP_DEVCAP_ATN_IND 0x2000
PCI_EXP_DEVCAP_PWR_IND  macro  include/uapi/linux/pci_regs.h  434  #define PCI_EXP_DEVCAP_PWR_IND 0x4000
PCI_EXP_DEVCAP_RBER  macro  include/uapi/linux/pci_regs.h  435  #define PCI_EXP_DEVCAP_RBER 0x8000
PCI_EXP_DEVCAP_PWR_VAL  macro  include/uapi/linux/pci_regs.h  436  #define PCI_EXP_DEVCAP_PWR_VAL 0x3fc0000
PCI_EXP_DEVCAP_PWR_SCL  macro  include/uapi/linux/pci_regs.h  437  #define PCI_EXP_DEVCAP_PWR_SCL 0xc000000
PCI_EXP_DEVCAP_FLR  macro  include/uapi/linux/pci_regs.h  438  #define PCI_EXP_DEVCAP_FLR 0x10000000
PCI_EXP_DEVCTL  macro  include/uapi/linux/pci_regs.h  439  #define PCI_EXP_DEVCTL 8
PCI_EXP_DEVCTL_CERE  macro  include/uapi/linux/pci_regs.h  440  #define PCI_EXP_DEVCTL_CERE 0x0001
PCI_EXP_DEVCTL_NFERE  macro  include/uapi/linux/pci_regs.h  441  #define PCI_EXP_DEVCTL_NFERE 0x0002
PCI_EXP_DEVCTL_FERE  macro  include/uapi/linux/pci_regs.h  442  #define PCI_EXP_DEVCTL_FERE 0x0004
PCI_EXP_DEVCTL_URRE  macro  include/uapi/linux/pci_regs.h  443  #define PCI_EXP_DEVCTL_URRE 0x0008
PCI_EXP_DEVCTL_RELAX_EN  macro  include/uapi/linux/pci_regs.h  444  #define PCI_EXP_DEVCTL_RELAX_EN 0x0010
PCI_EXP_DEVCTL_PAYLOAD  macro  include/uapi/linux/pci_regs.h  445  #define PCI_EXP_DEVCTL_PAYLOAD 0x00e0
PCI_EXP_DEVCTL_EXT_TAG  macro  include/uapi/linux/pci_regs.h  446  #define PCI_EXP_DEVCTL_EXT_TAG 0x0100
PCI_EXP_DEVCTL_PHANTOM  macro  include/uapi/linux/pci_regs.h  447  #define PCI_EXP_DEVCTL_PHANTOM 0x0200
PCI_EXP_DEVCTL_AUX_PME  macro  include/uapi/linux/pci_regs.h  448  #define PCI_EXP_DEVCTL_AUX_PME 0x0400
PCI_EXP_DEVCTL_NOSNOOP_EN  macro  include/uapi/linux/pci_regs.h  449  #define PCI_EXP_DEVCTL_NOSNOOP_EN 0x0800
PCI_EXP_DEVCTL_READRQ  macro  include/uapi/linux/pci_regs.h  450  #define PCI_EXP_DEVCTL_READRQ 0x7000
PCI_EXP_DEVCTL_BCR_FLR  macro  include/uapi/linux/pci_regs.h  451  #define PCI_EXP_DEVCTL_BCR_FLR 0x8000
PCI_EXP_DEVSTA  macro  include/uapi/linux/pci_regs.h  452  #define PCI_EXP_DEVSTA 10
PCI_EXP_DEVSTA_CED  macro  include/uapi/linux/pci_regs.h  453  #define PCI_EXP_DEVSTA_CED 0x01
PCI_EXP_DEVSTA_NFED  macro  include/uapi/linux/pci_regs.h  454  #define PCI_EXP_DEVSTA_NFED 0x02
PCI_EXP_DEVSTA_FED  macro  include/uapi/linux/pci_regs.h  455  #define PCI_EXP_DEVSTA_FED 0x04
PCI_EXP_DEVSTA_URD  macro  include/uapi/linux/pci_regs.h  456  #define PCI_EXP_DEVSTA_URD 0x08
PCI_EXP_DEVSTA_AUXPD  macro  include/uapi/linux/pci_regs.h  457  #define PCI_EXP_DEVSTA_AUXPD 0x10
PCI_EXP_DEVSTA_TRPND  macro  include/uapi/linux/pci_regs.h  458  #define PCI_EXP_DEVSTA_TRPND 0x20
PCI_EXP_LNKCAP  macro  include/uapi/linux/pci_regs.h  459  #define PCI_EXP_LNKCAP 12
PCI_EXP_LNKCAP_SLS  macro  include/uapi/linux/pci_regs.h  460  #define PCI_EXP_LNKCAP_SLS 0x0000000f
PCI_EXP_LNKCAP_SLS_2_5GB  macro  include/uapi/linux/pci_regs.h  461  #define PCI_EXP_LNKCAP_SLS_2_5GB 0x1
PCI_EXP_LNKCAP_SLS_5_0GB  macro  include/uapi/linux/pci_regs.h  462  #define PCI_EXP_LNKCAP_SLS_5_0GB 0x2
PCI_EXP_LNKCAP_MLW  macro  include/uapi/linux/pci_regs.h  463  #define PCI_EXP_LNKCAP_MLW 0x000003f0
PCI_EXP_LNKCAP_ASPMS  macro  include/uapi/linux/pci_regs.h  464  #define PCI_EXP_LNKCAP_ASPMS 0x00000c00
PCI_EXP_LNKCAP_L0SEL  macro  include/uapi/linux/pci_regs.h  465  #define PCI_EXP_LNKCAP_L0SEL 0x00007000
PCI_EXP_LNKCAP_L1EL  macro  include/uapi/linux/pci_regs.h  466  #define PCI_EXP_LNKCAP_L1EL 0x00038000
PCI_EXP_LNKCAP_CLKPM  macro  include/uapi/linux/pci_regs.h  467  #define PCI_EXP_LNKCAP_CLKPM 0x00040000
PCI_EXP_LNKCAP_SDERC  macro  include/uapi/linux/pci_regs.h  468  #define PCI_EXP_LNKCAP_SDERC 0x00080000
PCI_EXP_LNKCAP_DLLLARC  macro  include/uapi/linux/pci_regs.h  469  #define PCI_EXP_LNKCAP_DLLLARC 0x00100000
PCI_EXP_LNKCAP_LBNC  macro  include/uapi/linux/pci_regs.h  470  #define PCI_EXP_LNKCAP_LBNC 0x00200000
PCI_EXP_LNKCAP_PN  macro  include/uapi/linux/pci_regs.h  471  #define PCI_EXP_LNKCAP_PN 0xff000000
PCI_EXP_LNKCTL  macro  include/uapi/linux/pci_regs.h  472  #define PCI_EXP_LNKCTL 16
PCI_EXP_LNKCTL_ASPMC  macro  include/uapi/linux/pci_regs.h  473  #define PCI_EXP_LNKCTL_ASPMC 0x0003
PCI_EXP_LNKCTL_ASPM_L0S  macro  include/uapi/linux/pci_regs.h  474  #define PCI_EXP_LNKCTL_ASPM_L0S 0x01
PCI_EXP_LNKCTL_ASPM_L1  macro  include/uapi/linux/pci_regs.h  475  #define PCI_EXP_LNKCTL_ASPM_L1 0x02
PCI_EXP_LNKCTL_RCB  macro  include/uapi/linux/pci_regs.h  476  #define PCI_EXP_LNKCTL_RCB 0x0008
PCI_EXP_LNKCTL_LD  macro  include/uapi/linux/pci_regs.h  477  #define PCI_EXP_LNKCTL_LD 0x0010
PCI_EXP_LNKCTL_RL  macro  include/uapi/linux/pci_regs.h  478  #define PCI_EXP_LNKCTL_RL 0x0020
PCI_EXP_LNKCTL_CCC  macro  include/uapi/linux/pci_regs.h  479  #define PCI_EXP_LNKCTL_CCC 0x0040
PCI_EXP_LNKCTL_ES  macro  include/uapi/linux/pci_regs.h  480  #define PCI_EXP_LNKCTL_ES 0x0080
PCI_EXP_LNKCTL_CLKREQ_EN  macro  include/uapi/linux/pci_regs.h  481  #define PCI_EXP_LNKCTL_CLKREQ_EN 0x100
PCI_EXP_LNKCTL_HAWD  macro  include/uapi/linux/pci_regs.h  482  #define PCI_EXP_LNKCTL_HAWD 0x0200
PCI_EXP_LNKCTL_LBMIE  macro  include/uapi/linux/pci_regs.h  483  #define PCI_EXP_LNKCTL_LBMIE 0x0400
PCI_EXP_LNKCTL_LABIE  macro  include/uapi/linux/pci_regs.h  484  #define PCI_EXP_LNKCTL_LABIE 0x0800
PCI_EXP_LNKSTA  macro  include/uapi/linux/pci_regs.h  485  #define PCI_EXP_LNKSTA 18
PCI_EXP_LNKSTA_CLS  macro  include/uapi/linux/pci_regs.h  486  #define PCI_EXP_LNKSTA_CLS 0x000f
PCI_EXP_LNKSTA_CLS_2_5GB  macro  include/uapi/linux/pci_regs.h  487  #define PCI_EXP_LNKSTA_CLS_2_5GB 0x01
PCI_EXP_LNKSTA_CLS_5_0GB  macro  include/uapi/linux/pci_regs.h  488  #define PCI_EXP_LNKSTA_CLS_5_0GB 0x02
PCI_EXP_LNKSTA_NLW  macro  include/uapi/linux/pci_regs.h  489  #define PCI_EXP_LNKSTA_NLW 0x03f0
PCI_EXP_LNKSTA_NLW_SHIFT  macro  include/uapi/linux/pci_regs.h  490  #define PCI_EXP_LNKSTA_NLW_SHIFT 4
PCI_EXP_LNKSTA_LT  macro  include/uapi/linux/pci_regs.h  491  #define PCI_EXP_LNKSTA_LT 0x0800
PCI_EXP_LNKSTA_SLC  macro  include/uapi/linux/pci_regs.h  492  #define PCI_EXP_LNKSTA_SLC 0x1000
PCI_EXP_LNKSTA_DLLLA  macro  include/uapi/linux/pci_regs.h  493  #define PCI_EXP_LNKSTA_DLLLA 0x2000
PCI_EXP_LNKSTA_LBMS  macro  include/uapi/linux/pci_regs.h  494  #define PCI_EXP_LNKSTA_LBMS 0x4000
PCI_EXP_LNKSTA_LABS  macro  include/uapi/linux/pci_regs.h  495  #define PCI_EXP_LNKSTA_LABS 0x8000
PCI_CAP_EXP_ENDPOINT_SIZEOF_V1  macro  include/uapi/linux/pci_regs.h  496  #define PCI_CAP_EXP_ENDPOINT_SIZEOF_V1 20
PCI_EXP_SLTCAP  macro  include/uapi/linux/pci_regs.h  497  #define PCI_EXP_SLTCAP 20
PCI_EXP_SLTCAP_ABP  macro  include/uapi/linux/pci_regs.h  498  #define PCI_EXP_SLTCAP_ABP 0x00000001
PCI_EXP_SLTCAP_PCP  macro  include/uapi/linux/pci_regs.h  499  #define PCI_EXP_SLTCAP_PCP 0x00000002
PCI_EXP_SLTCAP_MRLSP  macro  include/uapi/linux/pci_regs.h  500  #define PCI_EXP_SLTCAP_MRLSP 0x00000004
PCI_EXP_SLTCAP_AIP  macro  include/uapi/linux/pci_regs.h  501  #define PCI_EXP_SLTCAP_AIP 0x00000008
PCI_EXP_SLTCAP_PIP  macro  include/uapi/linux/pci_regs.h  502  #define PCI_EXP_SLTCAP_PIP 0x00000010
PCI_EXP_SLTCAP_HPS  macro  include/uapi/linux/pci_regs.h  503  #define PCI_EXP_SLTCAP_HPS 0x00000020
PCI_EXP_SLTCAP_HPC  macro  include/uapi/linux/pci_regs.h  504  #define PCI_EXP_SLTCAP_HPC 0x00000040
PCI_EXP_SLTCAP_SPLV  macro  include/uapi/linux/pci_regs.h  505  #define PCI_EXP_SLTCAP_SPLV 0x00007f80
PCI_EXP_SLTCAP_SPLS  macro  include/uapi/linux/pci_regs.h  506  #define PCI_EXP_SLTCAP_SPLS 0x00018000
PCI_EXP_SLTCAP_EIP  macro  include/uapi/linux/pci_regs.h  507  #define PCI_EXP_SLTCAP_EIP 0x00020000
PCI_EXP_SLTCAP_NCCS  macro  include/uapi/linux/pci_regs.h  508  #define PCI_EXP_SLTCAP_NCCS 0x00040000
PCI_EXP_SLTCAP_PSN  macro  include/uapi/linux/pci_regs.h  509  #define PCI_EXP_SLTCAP_PSN 0xfff80000
PCI_EXP_SLTCTL  macro  include/uapi/linux/pci_regs.h  510  #define PCI_EXP_SLTCTL 24
PCI_EXP_SLTCTL_ABPE  macro  include/uapi/linux/pci_regs.h  511  #define PCI_EXP_SLTCTL_ABPE 0x0001
PCI_EXP_SLTCTL_PFDE  macro  include/uapi/linux/pci_regs.h  512  #define PCI_EXP_SLTCTL_PFDE 0x0002
PCI_EXP_SLTCTL_MRLSCE  macro  include/uapi/linux/pci_regs.h  513  #define PCI_EXP_SLTCTL_MRLSCE 0x0004
PCI_EXP_SLTCTL_PDCE  macro  include/uapi/linux/pci_regs.h  514  #define PCI_EXP_SLTCTL_PDCE 0x0008
PCI_EXP_SLTCTL_CCIE  macro  include/uapi/linux/pci_regs.h  515  #define PCI_EXP_SLTCTL_CCIE 0x0010
PCI_EXP_SLTCTL_HPIE  macro  include/uapi/linux/pci_regs.h  516  #define PCI_EXP_SLTCTL_HPIE 0x0020
PCI_EXP_SLTCTL_AIC  macro  include/uapi/linux/pci_regs.h  517  #define PCI_EXP_SLTCTL_AIC 0x00c0
PCI_EXP_SLTCTL_PIC  macro  include/uapi/linux/pci_regs.h  518  #define PCI_EXP_SLTCTL_PIC 0x0300
PCI_EXP_SLTCTL_PCC  macro  include/uapi/linux/pci_regs.h  519  #define PCI_EXP_SLTCTL_PCC 0x0400
PCI_EXP_SLTCTL_EIC  macro  include/uapi/linux/pci_regs.h  520  #define PCI_EXP_SLTCTL_EIC 0x0800
PCI_EXP_SLTCTL_DLLSCE  macro  include/uapi/linux/pci_regs.h  521  #define PCI_EXP_SLTCTL_DLLSCE 0x1000
PCI_EXP_SLTSTA  macro  include/uapi/linux/pci_regs.h  522  #define PCI_EXP_SLTSTA 26
PCI_EXP_SLTSTA_ABP  macro  include/uapi/linux/pci_regs.h  523  #define PCI_EXP_SLTSTA_ABP 0x0001
PCI_EXP_SLTSTA_PFD  macro  include/uapi/linux/pci_regs.h  524  #define PCI_EXP_SLTSTA_PFD 0x0002
PCI_EXP_SLTSTA_MRLSC  macro  include/uapi/linux/pci_regs.h  525  #define PCI_EXP_SLTSTA_MRLSC 0x0004
PCI_EXP_SLTSTA_PDC  macro  include/uapi/linux/pci_regs.h  526  #define PCI_EXP_SLTSTA_PDC 0x0008
PCI_EXP_SLTSTA_CC  macro  include/uapi/linux/pci_regs.h  527  #define PCI_EXP_SLTSTA_CC 0x0010
PCI_EXP_SLTSTA_MRLSS  macro  include/uapi/linux/pci_regs.h  528  #define PCI_EXP_SLTSTA_MRLSS 0x0020
PCI_EXP_SLTSTA_PDS  macro  include/uapi/linux/pci_regs.h  529  #define PCI_EXP_SLTSTA_PDS 0x0040
PCI_EXP_SLTSTA_EIS  macro  include/uapi/linux/pci_regs.h  530  #define PCI_EXP_SLTSTA_EIS 0x0080
PCI_EXP_SLTSTA_DLLSC  macro  include/uapi/linux/pci_regs.h  531  #define PCI_EXP_SLTSTA_DLLSC 0x0100
PCI_EXP_RTCTL  macro  include/uapi/linux/pci_regs.h  532  #define PCI_EXP_RTCTL 28
PCI_EXP_RTCTL_SECEE  macro  include/uapi/linux/pci_regs.h  533  #define PCI_EXP_RTCTL_SECEE 0x01
PCI_EXP_RTCTL_SENFEE  macro  include/uapi/linux/pci_regs.h  534  #define PCI_EXP_RTCTL_SENFEE 0x02
PCI_EXP_RTCTL_SEFEE  macro  include/uapi/linux/pci_regs.h  535  #define PCI_EXP_RTCTL_SEFEE 0x04
PCI_EXP_RTCTL_PMEIE  macro  include/uapi/linux/pci_regs.h  536  #define PCI_EXP_RTCTL_PMEIE 0x08
PCI_EXP_RTCTL_CRSSVE  macro  include/uapi/linux/pci_regs.h  537  #define PCI_EXP_RTCTL_CRSSVE 0x10
PCI_EXP_RTCAP  macro  include/uapi/linux/pci_regs.h  538  #define PCI_EXP_RTCAP 30
PCI_EXP_RTSTA  macro  include/uapi/linux/pci_regs.h  539  #define PCI_EXP_RTSTA 32
PCI_EXP_RTSTA_PME  macro  include/uapi/linux/pci_regs.h  540  #define PCI_EXP_RTSTA_PME 0x10000
PCI_EXP_RTSTA_PENDING  macro  include/uapi/linux/pci_regs.h  541  #define PCI_EXP_RTSTA_PENDING 0x20000
PCI_EXP_DEVCAP2  macro  include/uapi/linux/pci_regs.h  548  #define PCI_EXP_DEVCAP2 36
PCI_EXP_DEVCAP2_ARI  macro  include/uapi/linux/pci_regs.h  549  #define PCI_EXP_DEVCAP2_ARI 0x20
PCI_EXP_DEVCAP2_LTR  macro  include/uapi/linux/pci_regs.h  550  #define PCI_EXP_DEVCAP2_LTR 0x800
PCI_EXP_OBFF_MASK  macro  include/uapi/linux/pci_regs.h  551  #define PCI_EXP_OBFF_MASK 0xc0000
PCI_EXP_OBFF_MSG  macro  include/uapi/linux/pci_regs.h  552  #define PCI_EXP_OBFF_MSG 0x40000
PCI_EXP_OBFF_WAKE  macro  include/uapi/linux/pci_regs.h  553  #define PCI_EXP_OBFF_WAKE 0x80000
PCI_EXP_DEVCTL2  macro  include/uapi/linux/pci_regs.h  554  #define PCI_EXP_DEVCTL2 40
PCI_EXP_DEVCTL2_ARI  macro  include/uapi/linux/pci_regs.h  555  #define PCI_EXP_DEVCTL2_ARI 0x20
PCI_EXP_IDO_REQ_EN  macro  include/uapi/linux/pci_regs.h  556  #define PCI_EXP_IDO_REQ_EN 0x100
PCI_EXP_IDO_CMP_EN  macro  include/uapi/linux/pci_regs.h  557  #define PCI_EXP_IDO_CMP_EN 0x200
PCI_EXP_LTR_EN  macro  include/uapi/linux/pci_regs.h  558  #define PCI_EXP_LTR_EN 0x400
PCI_EXP_OBFF_MSGA_EN  macro  include/uapi/linux/pci_regs.h  559  #define PCI_EXP_OBFF_MSGA_EN 0x2000
PCI_EXP_OBFF_MSGB_EN  macro  include/uapi/linux/pci_regs.h  560  #define PCI_EXP_OBFF_MSGB_EN 0x4000
PCI_EXP_OBFF_WAKE_EN  macro  include/uapi/linux/pci_regs.h  561  #define PCI_EXP_OBFF_WAKE_EN 0x6000
PCI_CAP_EXP_ENDPOINT_SIZEOF_V2  macro  include/uapi/linux/pci_regs.h  562  #define PCI_CAP_EXP_ENDPOINT_SIZEOF_V2 44
PCI_EXP_LNKCAP2  macro  include/uapi/linux/pci_regs.h  563  #define PCI_EXP_LNKCAP2 44
PCI_EXP_LNKCAP2_SLS_2_5GB  macro  include/uapi/linux/pci_regs.h  564  #define PCI_EXP_LNKCAP2_SLS_2_5GB 0x02
PCI_EXP_LNKCAP2_SLS_5_0GB  macro  include/uapi/linux/pci_regs.h  565  #define PCI_EXP_LNKCAP2_SLS_5_0GB 0x04
PCI_EXP_LNKCAP2_SLS_8_0GB  macro  include/uapi/linux/pci_regs.h  566  #define PCI_EXP_LNKCAP2_SLS_8_0GB 0x08
PCI_EXP_LNKCAP2_CROSSLINK  macro  include/uapi/linux/pci_regs.h  567  #define PCI_EXP_LNKCAP2_CROSSLINK 0x100
PCI_EXP_LNKCTL2  macro  include/uapi/linux/pci_regs.h  568  #define PCI_EXP_LNKCTL2 48
PCI_EXP_LNKSTA2  macro  include/uapi/linux/pci_regs.h  569  #define PCI_EXP_LNKSTA2 50
PCI_EXP_SLTCTL2  macro  include/uapi/linux/pci_regs.h  570  #define PCI_EXP_SLTCTL2 56
PCI_EXT_CAP_ID  macro  include/uapi/linux/pci_regs.h  573  #define PCI_EXT_CAP_ID(header) (header & 0x0000ffff)
PCI_EXT_CAP_VER  macro  include/uapi/linux/pci_regs.h  574  #define PCI_EXT_CAP_VER(header) ((header >> 16) & 0xf)
PCI_EXT_CAP_NEXT  macro  include/uapi/linux/pci_regs.h  575  #define PCI_EXT_CAP_NEXT(header) ((header >> 20) & 0xffc)
PCI_EXT_CAP_ID_ERR  macro  include/uapi/linux/pci_regs.h  577  #define PCI_EXT_CAP_ID_ERR 0x01
PCI_EXT_CAP_ID_VC  macro  include/uapi/linux/pci_regs.h  578  #define PCI_EXT_CAP_ID_VC 0x02
PCI_EXT_CAP_ID_DSN  macro  include/uapi/linux/pci_regs.h  579  #define PCI_EXT_CAP_ID_DSN 0x03
PCI_EXT_CAP_ID_PWR  macro  include/uapi/linux/pci_regs.h  580  #define PCI_EXT_CAP_ID_PWR 0x04
PCI_EXT_CAP_ID_RCLD  macro  include/uapi/linux/pci_regs.h  581  #define PCI_EXT_CAP_ID_RCLD 0x05
PCI_EXT_CAP_ID_RCILC  macro  include/uapi/linux/pci_regs.h  582  #define PCI_EXT_CAP_ID_RCILC 0x06
PCI_EXT_CAP_ID_RCEC  macro  include/uapi/linux/pci_regs.h  583  #define PCI_EXT_CAP_ID_RCEC 0x07
PCI_EXT_CAP_ID_MFVC  macro  include/uapi/linux/pci_regs.h  584  #define PCI_EXT_CAP_ID_MFVC 0x08
PCI_EXT_CAP_ID_VC9  macro  include/uapi/linux/pci_regs.h  585  #define PCI_EXT_CAP_ID_VC9 0x09
PCI_EXT_CAP_ID_RCRB  macro  include/uapi/linux/pci_regs.h  586  #define PCI_EXT_CAP_ID_RCRB 0x0A
PCI_EXT_CAP_ID_VNDR  macro  include/uapi/linux/pci_regs.h  587  #define PCI_EXT_CAP_ID_VNDR 0x0B
PCI_EXT_CAP_ID_CAC  macro  include/uapi/linux/pci_regs.h  588  #define PCI_EXT_CAP_ID_CAC 0x0C
PCI_EXT_CAP_ID_ACS  macro  include/uapi/linux/pci_regs.h  589  #define PCI_EXT_CAP_ID_ACS 0x0D
PCI_EXT_CAP_ID_ARI  macro  include/uapi/linux/pci_regs.h  590  #define PCI_EXT_CAP_ID_ARI 0x0E
PCI_EXT_CAP_ID_ATS  macro  include/uapi/linux/pci_regs.h  591  #define PCI_EXT_CAP_ID_ATS 0x0F
PCI_EXT_CAP_ID_SRIOV  macro  include/uapi/linux/pci_regs.h  592  #define PCI_EXT_CAP_ID_SRIOV 0x10
PCI_EXT_CAP_ID_MRIOV  macro  include/uapi/linux/pci_regs.h  593  #define PCI_EXT_CAP_ID_MRIOV 0x11
PCI_EXT_CAP_ID_MCAST  macro  include/uapi/linux/pci_regs.h  594  #define PCI_EXT_CAP_ID_MCAST 0x12
PCI_EXT_CAP_ID_PRI  macro  include/uapi/linux/pci_regs.h  595  #define PCI_EXT_CAP_ID_PRI 0x13
PCI_EXT_CAP_ID_AMD_XXX  macro  include/uapi/linux/pci_regs.h  596  #define PCI_EXT_CAP_ID_AMD_XXX 0x14
PCI_EXT_CAP_ID_REBAR  macro  include/uapi/linux/pci_regs.h  597  #define PCI_EXT_CAP_ID_REBAR 0x15
PCI_EXT_CAP_ID_DPA  macro  include/uapi/linux/pci_regs.h  598  #define PCI_EXT_CAP_ID_DPA 0x16
PCI_EXT_CAP_ID_TPH  macro  include/uapi/linux/pci_regs.h  599  #define PCI_EXT_CAP_ID_TPH 0x17
PCI_EXT_CAP_ID_LTR  macro  include/uapi/linux/pci_regs.h  600  #define PCI_EXT_CAP_ID_LTR 0x18
PCI_EXT_CAP_ID_SECPCI  macro  include/uapi/linux/pci_regs.h  601  #define PCI_EXT_CAP_ID_SECPCI 0x19
PCI_EXT_CAP_ID_PMUX  macro  include/uapi/linux/pci_regs.h  602  #define PCI_EXT_CAP_ID_PMUX 0x1A
PCI_EXT_CAP_ID_PASID  macro  include/uapi/linux/pci_regs.h  603  #define PCI_EXT_CAP_ID_PASID 0x1B
PCI_EXT_CAP_ID_MAX  macro  include/uapi/linux/pci_regs.h  604  #define PCI_EXT_CAP_ID_MAX PCI_EXT_CAP_ID_PASID
PCI_EXT_CAP_DSN_SIZEOF  macro  include/uapi/linux/pci_regs.h  606  #define PCI_EXT_CAP_DSN_SIZEOF 12
PCI_EXT_CAP_MCAST_ENDPOINT_SIZEOF  macro  include/uapi/linux/pci_regs.h  607  #define PCI_EXT_CAP_MCAST_ENDPOINT_SIZEOF 40
PCI_ERR_UNCOR_STATUS  macro  include/uapi/linux/pci_regs.h  610  #define PCI_ERR_UNCOR_STATUS 4
PCI_ERR_UNC_TRAIN  macro  include/uapi/linux/pci_regs.h  611  #define PCI_ERR_UNC_TRAIN 0x00000001
PCI_ERR_UNC_DLP  macro  include/uapi/linux/pci_regs.h  612  #define PCI_ERR_UNC_DLP 0x00000010
PCI_ERR_UNC_SURPDN  macro  include/uapi/linux/pci_regs.h  613  #define PCI_ERR_UNC_SURPDN 0x00000020
PCI_ERR_UNC_POISON_TLP  macro  include/uapi/linux/pci_regs.h  614  #define PCI_ERR_UNC_POISON_TLP 0x00001000
PCI_ERR_UNC_FCP  macro  include/uapi/linux/pci_regs.h  615  #define PCI_ERR_UNC_FCP 0x00002000
PCI_ERR_UNC_COMP_TIME  macro  include/uapi/linux/pci_regs.h  616  #define PCI_ERR_UNC_COMP_TIME 0x00004000
PCI_ERR_UNC_COMP_ABORT  macro  include/uapi/linux/pci_regs.h  617  #define PCI_ERR_UNC_COMP_ABORT 0x00008000
PCI_ERR_UNC_UNX_COMP  macro  include/uapi/linux/pci_regs.h  618  #define PCI_ERR_UNC_UNX_COMP 0x00010000
PCI_ERR_UNC_RX_OVER  macro  include/uapi/linux/pci_regs.h  619  #define PCI_ERR_UNC_RX_OVER 0x00020000
PCI_ERR_UNC_MALF_TLP  macro  include/uapi/linux/pci_regs.h  620  #define PCI_ERR_UNC_MALF_TLP 0x00040000
PCI_ERR_UNC_ECRC  macro  include/uapi/linux/pci_regs.h  621  #define PCI_ERR_UNC_ECRC 0x00080000
PCI_ERR_UNC_UNSUP  macro  include/uapi/linux/pci_regs.h  622  #define PCI_ERR_UNC_UNSUP 0x00100000
PCI_ERR_UNC_ACSV  macro  include/uapi/linux/pci_regs.h  623  #define PCI_ERR_UNC_ACSV 0x00200000
PCI_ERR_UNC_INTN  macro  include/uapi/linux/pci_regs.h  624  #define PCI_ERR_UNC_INTN 0x00400000
PCI_ERR_UNC_MCBTLP  macro  include/uapi/linux/pci_regs.h  625  #define PCI_ERR_UNC_MCBTLP 0x00800000
PCI_ERR_UNC_ATOMEG  macro  include/uapi/linux/pci_regs.h  626  #define PCI_ERR_UNC_ATOMEG 0x01000000
PCI_ERR_UNC_TLPPRE  macro  include/uapi/linux/pci_regs.h  627  #define PCI_ERR_UNC_TLPPRE 0x02000000
PCI_ERR_UNCOR_MASK  macro  include/uapi/linux/pci_regs.h  628  #define PCI_ERR_UNCOR_MASK 8
PCI_ERR_UNCOR_SEVER  macro  include/uapi/linux/pci_regs.h  630  #define PCI_ERR_UNCOR_SEVER 12
PCI_ERR_COR_STATUS  macro  include/uapi/linux/pci_regs.h  632  #define PCI_ERR_COR_STATUS 16
PCI_ERR_COR_RCVR  macro  include/uapi/linux/pci_regs.h  633  #define PCI_ERR_COR_RCVR 0x00000001
PCI_ERR_COR_BAD_TLP  macro  include/uapi/linux/pci_regs.h  634  #define PCI_ERR_COR_BAD_TLP 0x00000040
PCI_ERR_COR_BAD_DLLP  macro  include/uapi/linux/pci_regs.h  635  #define PCI_ERR_COR_BAD_DLLP 0x00000080
PCI_ERR_COR_REP_ROLL  macro  include/uapi/linux/pci_regs.h  636  #define PCI_ERR_COR_REP_ROLL 0x00000100
PCI_ERR_COR_REP_TIMER  macro  include/uapi/linux/pci_regs.h  637  #define PCI_ERR_COR_REP_TIMER 0x00001000
PCI_ERR_COR_ADV_NFAT  macro  include/uapi/linux/pci_regs.h  638  #define PCI_ERR_COR_ADV_NFAT 0x00002000
PCI_ERR_COR_INTERNAL  macro  include/uapi/linux/pci_regs.h  639  #define PCI_ERR_COR_INTERNAL 0x00004000
PCI_ERR_COR_LOG_OVER  macro  include/uapi/linux/pci_regs.h  640  #define PCI_ERR_COR_LOG_OVER 0x00008000
PCI_ERR_COR_MASK  macro  include/uapi/linux/pci_regs.h  641  #define PCI_ERR_COR_MASK 20
PCI_ERR_CAP  macro  include/uapi/linux/pci_regs.h  643  #define PCI_ERR_CAP 24
PCI_ERR_CAP_FEP  macro  include/uapi/linux/pci_regs.h  644  #define PCI_ERR_CAP_FEP(x) ((x) & 31)
PCI_ERR_CAP_ECRC_GENC  macro  include/uapi/linux/pci_regs.h  645  #define PCI_ERR_CAP_ECRC_GENC 0x00000020
PCI_ERR_CAP_ECRC_GENE  macro  include/uapi/linux/pci_regs.h  646  #define PCI_ERR_CAP_ECRC_GENE 0x00000040
PCI_ERR_CAP_ECRC_CHKC  macro  include/uapi/linux/pci_regs.h  647  #define PCI_ERR_CAP_ECRC_CHKC 0x00000080
PCI_ERR_CAP_ECRC_CHKE  macro  include/uapi/linux/pci_regs.h  648  #define PCI_ERR_CAP_ECRC_CHKE 0x00000100
PCI_ERR_HEADER_LOG  macro  include/uapi/linux/pci_regs.h  649  #define PCI_ERR_HEADER_LOG 28
PCI_ERR_ROOT_COMMAND  macro  include/uapi/linux/pci_regs.h  650  #define PCI_ERR_ROOT_COMMAND 44
PCI_ERR_ROOT_CMD_COR_EN  macro  include/uapi/linux/pci_regs.h  652  #define PCI_ERR_ROOT_CMD_COR_EN 0x00000001
PCI_ERR_ROOT_CMD_NONFATAL_EN  macro  include/uapi/linux/pci_regs.h  654  #define PCI_ERR_ROOT_CMD_NONFATAL_EN 0x00000002
PCI_ERR_ROOT_CMD_FATAL_EN  macro  include/uapi/linux/pci_regs.h  656  #define PCI_ERR_ROOT_CMD_FATAL_EN 0x00000004
PCI_ERR_ROOT_STATUS  macro  include/uapi/linux/pci_regs.h  657  #define PCI_ERR_ROOT_STATUS 48
PCI_ERR_ROOT_COR_RCV  macro  include/uapi/linux/pci_regs.h  658  #define PCI_ERR_ROOT_COR_RCV 0x00000001
PCI_ERR_ROOT_MULTI_COR_RCV  macro  include/uapi/linux/pci_regs.h  660  #define PCI_ERR_ROOT_MULTI_COR_RCV 0x00000002
PCI_ERR_ROOT_UNCOR_RCV  macro  include/uapi/linux/pci_regs.h  662  #define PCI_ERR_ROOT_UNCOR_RCV 0x00000004
PCI_ERR_ROOT_MULTI_UNCOR_RCV  macro  include/uapi/linux/pci_regs.h  664  #define PCI_ERR_ROOT_MULTI_UNCOR_RCV 0x00000008
PCI_ERR_ROOT_FIRST_FATAL  macro  include/uapi/linux/pci_regs.h  665  #define PCI_ERR_ROOT_FIRST_FATAL 0x00000010
PCI_ERR_ROOT_NONFATAL_RCV  macro  include/uapi/linux/pci_regs.h  666  #define PCI_ERR_ROOT_NONFATAL_RCV 0x00000020
PCI_ERR_ROOT_FATAL_RCV  macro  include/uapi/linux/pci_regs.h  667  #define PCI_ERR_ROOT_FATAL_RCV 0x00000040
PCI_ERR_ROOT_ERR_SRC  macro  include/uapi/linux/pci_regs.h  668  #define PCI_ERR_ROOT_ERR_SRC 52
PCI_VC_PORT_REG1  macro  include/uapi/linux/pci_regs.h  671  #define PCI_VC_PORT_REG1 4
PCI_VC_REG1_EVCC  macro  include/uapi/linux/pci_regs.h  672  #define PCI_VC_REG1_EVCC 0x7
PCI_VC_PORT_REG2  macro  include/uapi/linux/pci_regs.h  673  #define PCI_VC_PORT_REG2 8
PCI_VC_REG2_32_PHASE  macro  include/uapi/linux/pci_regs.h  674  #define PCI_VC_REG2_32_PHASE 0x2
PCI_VC_REG2_64_PHASE  macro  include/uapi/linux/pci_regs.h  675  #define PCI_VC_REG2_64_PHASE 0x4
PCI_VC_REG2_128_PHASE  macro  include/uapi/linux/pci_regs.h  676  #define PCI_VC_REG2_128_PHASE 0x8
PCI_VC_PORT_CTRL  macro  include/uapi/linux/pci_regs.h  677  #define PCI_VC_PORT_CTRL 12
PCI_VC_PORT_STATUS  macro  include/uapi/linux/pci_regs.h  678  #define PCI_VC_PORT_STATUS 14
PCI_VC_RES_CAP  macro  include/uapi/linux/pci_regs.h  679  #define PCI_VC_RES_CAP 16
PCI_VC_RES_CTRL  macro  include/uapi/linux/pci_regs.h  680  #define PCI_VC_RES_CTRL 20
PCI_VC_RES_STATUS  macro  include/uapi/linux/pci_regs.h  681  #define PCI_VC_RES_STATUS 26
PCI_CAP_VC_BASE_SIZEOF  macro  include/uapi/linux/pci_regs.h  682  #define PCI_CAP_VC_BASE_SIZEOF 0x10
PCI_CAP_VC_PER_VC_SIZEOF  macro  include/uapi/linux/pci_regs.h  683  #define PCI_CAP_VC_PER_VC_SIZEOF 0x0C
PCI_PWR_DSR  macro  include/uapi/linux/pci_regs.h  686  #define PCI_PWR_DSR 4
PCI_PWR_DATA  macro  include/uapi/linux/pci_regs.h  687  #define PCI_PWR_DATA 8
PCI_PWR_DATA_BASE  macro  include/uapi/linux/pci_regs.h  688  #define PCI_PWR_DATA_BASE(x) ((x) & 0xff)
PCI_PWR_DATA_SCALE  macro  include/uapi/linux/pci_regs.h  689  #define PCI_PWR_DATA_SCALE(x) (((x) >> 8) & 3)
PCI_PWR_DATA_PM_SUB  macro  include/uapi/linux/pci_regs.h  690  #define PCI_PWR_DATA_PM_SUB(x) (((x) >> 10) & 7)
PCI_PWR_DATA_PM_STATE  macro  include/uapi/linux/pci_regs.h  691  #define PCI_PWR_DATA_PM_STATE(x) (((x) >> 13) & 3)
PCI_PWR_DATA_TYPE  macro  include/uapi/linux/pci_regs.h  692  #define PCI_PWR_DATA_TYPE(x) (((x) >> 15) & 7)
PCI_PWR_DATA_RAIL  macro  include/uapi/linux/pci_regs.h  693  #define PCI_PWR_DATA_RAIL(x) (((x) >> 18) & 7)
PCI_PWR_CAP  macro  include/uapi/linux/pci_regs.h  694  #define PCI_PWR_CAP 12
PCI_PWR_CAP_BUDGET  macro  include/uapi/linux/pci_regs.h  695  #define PCI_PWR_CAP_BUDGET(x) ((x) & 1)
PCI_EXT_CAP_PWR_SIZEOF  macro  include/uapi/linux/pci_regs.h  696  #define PCI_EXT_CAP_PWR_SIZEOF 16
PCI_VNDR_HEADER  macro  include/uapi/linux/pci_regs.h  699  #define PCI_VNDR_HEADER 4
PCI_VNDR_HEADER_ID  macro  include/uapi/linux/pci_regs.h  700  #define PCI_VNDR_HEADER_ID(x) ((x) & 0xffff)
PCI_VNDR_HEADER_REV  macro  include/uapi/linux/pci_regs.h  701  #define PCI_VNDR_HEADER_REV(x) (((x) >> 16) & 0xf)
PCI_VNDR_HEADER_LEN  macro  include/uapi/linux/pci_regs.h  702  #define PCI_VNDR_HEADER_LEN(x) (((x) >> 20) & 0xfff)
HT_3BIT_CAP_MASK  macro  include/uapi/linux/pci_regs.h  712  #define HT_3BIT_CAP_MASK 0xE0
HT_CAPTYPE_SLAVE  macro  include/uapi/linux/pci_regs.h  713  #define HT_CAPTYPE_SLAVE 0x00
HT_CAPTYPE_HOST  macro  include/uapi/linux/pci_regs.h  714  #define HT_CAPTYPE_HOST 0x20
HT_5BIT_CAP_MASK  macro  include/uapi/linux/pci_regs.h  716  #define HT_5BIT_CAP_MASK 0xF8
HT_CAPTYPE_IRQ  macro  include/uapi/linux/pci_regs.h  717  #define HT_CAPTYPE_IRQ 0x80
HT_CAPTYPE_REMAPPING_40  macro  include/uapi/linux/pci_regs.h  718  #define HT_CAPTYPE_REMAPPING_40 0xA0
HT_CAPTYPE_REMAPPING_64  macro  include/uapi/linux/pci_regs.h  719  #define HT_CAPTYPE_REMAPPING_64 0xA2
HT_CAPTYPE_UNITID_CLUMP  macro  include/uapi/linux/pci_regs.h  720  #define HT_CAPTYPE_UNITID_CLUMP 0x90
HT_CAPTYPE_EXTCONF  macro  include/uapi/linux/pci_regs.h  721  #define HT_CAPTYPE_EXTCONF 0x98
HT_CAPTYPE_MSI_MAPPING  macro  include/uapi/linux/pci_regs.h  722  #define HT_CAPTYPE_MSI_MAPPING 0xA8
HT_MSI_FLAGS  macro  include/uapi/linux/pci_regs.h  723  #define HT_MSI_FLAGS 0x02
HT_MSI_FLAGS_ENABLE  macro  include/uapi/linux/pci_regs.h  724  #define HT_MSI_FLAGS_ENABLE 0x1
HT_MSI_FLAGS_FIXED  macro  include/uapi/linux/pci_regs.h  725  #define HT_MSI_FLAGS_FIXED 0x2
HT_MSI_FIXED_ADDR  macro  include/uapi/linux/pci_regs.h  726  #define HT_MSI_FIXED_ADDR 0x00000000FEE00000ULL
HT_MSI_ADDR_LO  macro  include/uapi/linux/pci_regs.h  727  #define HT_MSI_ADDR_LO 0x04
HT_MSI_ADDR_LO_MASK  macro  include/uapi/linux/pci_regs.h  728  #define HT_MSI_ADDR_LO_MASK 0xFFF00000
HT_MSI_ADDR_HI  macro  include/uapi/linux/pci_regs.h  729  #define HT_MSI_ADDR_HI 0x08
HT_CAPTYPE_DIRECT_ROUTE  macro  include/uapi/linux/pci_regs.h  730  #define HT_CAPTYPE_DIRECT_ROUTE 0xB0
HT_CAPTYPE_VCSET  macro  include/uapi/linux/pci_regs.h  731  #define HT_CAPTYPE_VCSET 0xB8
HT_CAPTYPE_ERROR_RETRY  macro  include/uapi/linux/pci_regs.h  732  #define HT_CAPTYPE_ERROR_RETRY 0xC0
HT_CAPTYPE_GEN3  macro  include/uapi/linux/pci_regs.h  733  #define HT_CAPTYPE_GEN3 0xD0
HT_CAPTYPE_PM  macro  include/uapi/linux/pci_regs.h  734  #define HT_CAPTYPE_PM 0xE0
HT_CAP_SIZEOF_LONG  macro  include/uapi/linux/pci_regs.h  735  #define HT_CAP_SIZEOF_LONG 28
HT_CAP_SIZEOF_SHORT  macro  include/uapi/linux/pci_regs.h  736  #define HT_CAP_SIZEOF_SHORT 24
PCI_ARI_CAP  macro  include/uapi/linux/pci_regs.h  739  #define PCI_ARI_CAP 0x04
PCI_ARI_CAP_MFVC  macro  include/uapi/linux/pci_regs.h  740  #define PCI_ARI_CAP_MFVC 0x0001
PCI_ARI_CAP_ACS  macro  include/uapi/linux/pci_regs.h  741  #define PCI_ARI_CAP_ACS 0x0002
PCI_ARI_CAP_NFN  macro  include/uapi/linux/pci_regs.h  742  #define PCI_ARI_CAP_NFN(x) (((x) >> 8) & 0xff)
PCI_ARI_CTRL  macro  include/uapi/linux/pci_regs.h  743  #define PCI_ARI_CTRL 0x06
PCI_ARI_CTRL_MFVC  macro  include/uapi/linux/pci_regs.h  744  #define PCI_ARI_CTRL_MFVC 0x0001
PCI_ARI_CTRL_ACS  macro  include/uapi/linux/pci_regs.h  745  #define PCI_ARI_CTRL_ACS 0x0002
PCI_ARI_CTRL_FG  macro  include/uapi/linux/pci_regs.h  746  #define PCI_ARI_CTRL_FG(x) (((x) >> 4) & 7)
PCI_EXT_CAP_ARI_SIZEOF  macro  include/uapi/linux/pci_regs.h  747  #define PCI_EXT_CAP_ARI_SIZEOF 8
PCI_ATS_CAP  macro  include/uapi/linux/pci_regs.h  750  #define PCI_ATS_CAP 0x04
PCI_ATS_CAP_QDEP  macro  include/uapi/linux/pci_regs.h  751  #define PCI_ATS_CAP_QDEP(x) ((x) & 0x1f)
PCI_ATS_MAX_QDEP  macro  include/uapi/linux/pci_regs.h  752  #define PCI_ATS_MAX_QDEP 32
PCI_ATS_CTRL  macro  include/uapi/linux/pci_regs.h  753  #define PCI_ATS_CTRL 0x06
PCI_ATS_CTRL_ENABLE  macro  include/uapi/linux/pci_regs.h  754  #define PCI_ATS_CTRL_ENABLE 0x8000
PCI_ATS_CTRL_STU  macro  include/uapi/linux/pci_regs.h  755  #define PCI_ATS_CTRL_STU(x) ((x) & 0x1f)
PCI_ATS_MIN_STU  macro  include/uapi/linux/pci_regs.h  756  #define PCI_ATS_MIN_STU 12
PCI_EXT_CAP_ATS_SIZEOF  macro  include/uapi/linux/pci_regs.h  757  #define PCI_EXT_CAP_ATS_SIZEOF 8
PCI_PRI_CTRL  macro  include/uapi/linux/pci_regs.h  760  #define PCI_PRI_CTRL 0x04
PCI_PRI_CTRL_ENABLE  macro  include/uapi/linux/pci_regs.h  761  #define PCI_PRI_CTRL_ENABLE 0x01
PCI_PRI_CTRL_RESET  macro  include/uapi/linux/pci_regs.h  762  #define PCI_PRI_CTRL_RESET 0x02
PCI_PRI_STATUS  macro  include/uapi/linux/pci_regs.h  763  #define PCI_PRI_STATUS 0x06
PCI_PRI_STATUS_RF  macro  include/uapi/linux/pci_regs.h  764  #define PCI_PRI_STATUS_RF 0x001
PCI_PRI_STATUS_UPRGI  macro  include/uapi/linux/pci_regs.h  765  #define PCI_PRI_STATUS_UPRGI 0x002
PCI_PRI_STATUS_STOPPED  macro  include/uapi/linux/pci_regs.h  766  #define PCI_PRI_STATUS_STOPPED 0x100
PCI_PRI_MAX_REQ  macro  include/uapi/linux/pci_regs.h  767  #define PCI_PRI_MAX_REQ 0x08
PCI_PRI_ALLOC_REQ  macro  include/uapi/linux/pci_regs.h  768  #define PCI_PRI_ALLOC_REQ 0x0c
PCI_EXT_CAP_PRI_SIZEOF  macro  include/uapi/linux/pci_regs.h  769  #define PCI_EXT_CAP_PRI_SIZEOF 16
PCI_PASID_CAP  macro  include/uapi/linux/pci_regs.h  772  #define PCI_PASID_CAP 0x04
PCI_PASID_CAP_EXEC  macro  include/uapi/linux/pci_regs.h  773  #define PCI_PASID_CAP_EXEC 0x02
PCI_PASID_CAP_PRIV  macro  include/uapi/linux/pci_regs.h  774  #define PCI_PASID_CAP_PRIV 0x04
PCI_PASID_CTRL  macro  include/uapi/linux/pci_regs.h  775  #define PCI_PASID_CTRL 0x06
PCI_PASID_CTRL_ENABLE  macro  include/uapi/linux/pci_regs.h  776  #define PCI_PASID_CTRL_ENABLE 0x01
PCI_PASID_CTRL_EXEC  macro  include/uapi/linux/pci_regs.h  777  #define PCI_PASID_CTRL_EXEC 0x02
PCI_PASID_CTRL_PRIV  macro  include/uapi/linux/pci_regs.h  778  #define PCI_PASID_CTRL_PRIV 0x04
PCI_EXT_CAP_PASID_SIZEOF  macro  include/uapi/linux/pci_regs.h  779  #define PCI_EXT_CAP_PASID_SIZEOF 8
PCI_SRIOV_CAP  macro  include/uapi/linux/pci_regs.h  782  #define PCI_SRIOV_CAP 0x04
PCI_SRIOV_CAP_VFM  macro  include/uapi/linux/pci_regs.h  783  #define PCI_SRIOV_CAP_VFM 0x01
PCI_SRIOV_CAP_INTR  macro  include/uapi/linux/pci_regs.h  784  #define PCI_SRIOV_CAP_INTR(x) ((x) >> 21)
PCI_SRIOV_CTRL  macro  include/uapi/linux/pci_regs.h  785  #define PCI_SRIOV_CTRL 0x08
PCI_SRIOV_CTRL_VFE  macro  include/uapi/linux/pci_regs.h  786  #define PCI_SRIOV_CTRL_VFE 0x01
PCI_SRIOV_CTRL_VFM  macro  include/uapi/linux/pci_regs.h  787  #define PCI_SRIOV_CTRL_VFM 0x02
PCI_SRIOV_CTRL_INTR  macro  include/uapi/linux/pci_regs.h  788  #define PCI_SRIOV_CTRL_INTR 0x04
PCI_SRIOV_CTRL_MSE  macro  include/uapi/linux/pci_regs.h  789  #define PCI_SRIOV_CTRL_MSE 0x08
PCI_SRIOV_CTRL_ARI  macro  include/uapi/linux/pci_regs.h  790  #define PCI_SRIOV_CTRL_ARI 0x10
PCI_SRIOV_STATUS  macro  include/uapi/linux/pci_regs.h  791  #define PCI_SRIOV_STATUS 0x0a
PCI_SRIOV_STATUS_VFM  macro  include/uapi/linux/pci_regs.h  792  #define PCI_SRIOV_STATUS_VFM 0x01
PCI_SRIOV_INITIAL_VF  macro  include/uapi/linux/pci_regs.h  793  #define PCI_SRIOV_INITIAL_VF 0x0c
PCI_SRIOV_TOTAL_VF  macro  include/uapi/linux/pci_regs.h  794  #define PCI_SRIOV_TOTAL_VF 0x0e
PCI_SRIOV_NUM_VF  macro  include/uapi/linux/pci_regs.h  795  #define PCI_SRIOV_NUM_VF 0x10
PCI_SRIOV_FUNC_LINK  macro  include/uapi/linux/pci_regs.h  796  #define PCI_SRIOV_FUNC_LINK 0x12
PCI_SRIOV_VF_OFFSET  macro  include/uapi/linux/pci_regs.h  797  #define PCI_SRIOV_VF_OFFSET 0x14
PCI_SRIOV_VF_STRIDE  macro  include/uapi/linux/pci_regs.h  798  #define PCI_SRIOV_VF_STRIDE 0x16
PCI_SRIOV_VF_DID  macro  include/uapi/linux/pci_regs.h  799  #define PCI_SRIOV_VF_DID 0x1a
PCI_SRIOV_SUP_PGSIZE  macro  include/uapi/linux/pci_regs.h  800  #define PCI_SRIOV_SUP_PGSIZE 0x1c
PCI_SRIOV_SYS_PGSIZE  macro  include/uapi/linux/pci_regs.h  801  #define PCI_SRIOV_SYS_PGSIZE 0x20
PCI_SRIOV_BAR  macro  include/uapi/linux/pci_regs.h  802  #define PCI_SRIOV_BAR 0x24
PCI_SRIOV_NUM_BARS  macro  include/uapi/linux/pci_regs.h  803  #define PCI_SRIOV_NUM_BARS 6
PCI_SRIOV_VFM  macro  include/uapi/linux/pci_regs.h  804  #define PCI_SRIOV_VFM 0x3c
PCI_SRIOV_VFM_BIR  macro  include/uapi/linux/pci_regs.h  805  #define PCI_SRIOV_VFM_BIR(x) ((x) & 7)
PCI_SRIOV_VFM_OFFSET  macro  include/uapi/linux/pci_regs.h  806  #define PCI_SRIOV_VFM_OFFSET(x) ((x) & ~7)
PCI_SRIOV_VFM_UA  macro  include/uapi/linux/pci_regs.h  807  #define PCI_SRIOV_VFM_UA 0x0
PCI_SRIOV_VFM_MI  macro  include/uapi/linux/pci_regs.h  808  #define PCI_SRIOV_VFM_MI 0x1
PCI_SRIOV_VFM_MO  macro  include/uapi/linux/pci_regs.h  809  #define PCI_SRIOV_VFM_MO 0x2
PCI_SRIOV_VFM_AV  macro  include/uapi/linux/pci_regs.h  810  #define PCI_SRIOV_VFM_AV 0x3
PCI_EXT_CAP_SRIOV_SIZEOF  macro  include/uapi/linux/pci_regs.h  811  #define PCI_EXT_CAP_SRIOV_SIZEOF 64
PCI_LTR_MAX_SNOOP_LAT  macro  include/uapi/linux/pci_regs.h  813  #define PCI_LTR_MAX_SNOOP_LAT 0x4
PCI_LTR_MAX_NOSNOOP_LAT  macro  include/uapi/linux/pci_regs.h  814  #define PCI_LTR_MAX_NOSNOOP_LAT 0x6
PCI_LTR_VALUE_MASK  macro  include/uapi/linux/pci_regs.h  815  #define PCI_LTR_VALUE_MASK 0x000003ff
PCI_LTR_SCALE_MASK  macro  include/uapi/linux/pci_regs.h  816  #define PCI_LTR_SCALE_MASK 0x00001c00
PCI_LTR_SCALE_SHIFT  macro  include/uapi/linux/pci_regs.h  817  #define PCI_LTR_SCALE_SHIFT 10
PCI_EXT_CAP_LTR_SIZEOF  macro  include/uapi/linux/pci_regs.h  818  #define PCI_EXT_CAP_LTR_SIZEOF 8
PCI_ACS_CAP  macro  include/uapi/linux/pci_regs.h  821  #define PCI_ACS_CAP 0x04
PCI_ACS_SV  macro  include/uapi/linux/pci_regs.h  822  #define PCI_ACS_SV 0x01
PCI_ACS_TB  macro  include/uapi/linux/pci_regs.h  823  #define PCI_ACS_TB 0x02
PCI_ACS_RR  macro  include/uapi/linux/pci_regs.h  824  #define PCI_ACS_RR 0x04
PCI_ACS_CR  macro  include/uapi/linux/pci_regs.h  825  #define PCI_ACS_CR 0x08
PCI_ACS_UF  macro  include/uapi/linux/pci_regs.h  826  #define PCI_ACS_UF 0x10
PCI_ACS_EC  macro  include/uapi/linux/pci_regs.h  827  #define PCI_ACS_EC 0x20
PCI_ACS_DT  macro  include/uapi/linux/pci_regs.h  828  #define PCI_ACS_DT 0x40
PCI_ACS_EGRESS_BITS  macro  include/uapi/linux/pci_regs.h  829  #define PCI_ACS_EGRESS_BITS 0x05
PCI_ACS_CTRL  macro  include/uapi/linux/pci_regs.h  830  #define PCI_ACS_CTRL 0x06
PCI_ACS_EGRESS_CTL_V  macro  include/uapi/linux/pci_regs.h  831  #define PCI_ACS_EGRESS_CTL_V 0x08
PCI_VSEC_HDR  macro  include/uapi/linux/pci_regs.h  833  #define PCI_VSEC_HDR 4
PCI_VSEC_HDR_LEN_SHIFT  macro  include/uapi/linux/pci_regs.h  834  #define PCI_VSEC_HDR_LEN_SHIFT 20
PCI_SATA_REGS  macro  include/uapi/linux/pci_regs.h  837  #define PCI_SATA_REGS 4
PCI_SATA_REGS_MASK  macro  include/uapi/linux/pci_regs.h  838  #define PCI_SATA_REGS_MASK 0xF
PCI_SATA_REGS_INLINE  macro  include/uapi/linux/pci_regs.h  839  #define PCI_SATA_REGS_INLINE 0xF
PCI_SATA_SIZEOF_SHORT  macro  include/uapi/linux/pci_regs.h  840  #define PCI_SATA_SIZEOF_SHORT 8
PCI_SATA_SIZEOF_LONG  macro  include/uapi/linux/pci_regs.h  841  #define PCI_SATA_SIZEOF_LONG 16
PCI_REBAR_CTRL  macro  include/uapi/linux/pci_regs.h  844  #define PCI_REBAR_CTRL 8
PCI_REBAR_CTRL_NBAR_MASK  macro  include/uapi/linux/pci_regs.h  845  #define PCI_REBAR_CTRL_NBAR_MASK (7 << 5)
PCI_REBAR_CTRL_NBAR_SHIFT  macro  include/uapi/linux/pci_regs.h  846  #define PCI_REBAR_CTRL_NBAR_SHIFT 5
PCI_DPA_CAP  macro  include/uapi/linux/pci_regs.h  849  #define PCI_DPA_CAP 4
PCI_DPA_CAP_SUBSTATE_MASK  macro  include/uapi/linux/pci_regs.h  850  #define PCI_DPA_CAP_SUBSTATE_MASK 0x1F
PCI_DPA_BASE_SIZEOF  macro  include/uapi/linux/pci_regs.h  851  #define PCI_DPA_BASE_SIZEOF 16
PCI_TPH_CAP  macro  include/uapi/linux/pci_regs.h  854  #define PCI_TPH_CAP 4
PCI_TPH_CAP_LOC_MASK  macro  include/uapi/linux/pci_regs.h  855  #define PCI_TPH_CAP_LOC_MASK 0x600
PCI_TPH_LOC_NONE  macro  include/uapi/linux/pci_regs.h  856  #define PCI_TPH_LOC_NONE 0x000
PCI_TPH_LOC_CAP  macro  include/uapi/linux/pci_regs.h  857  #define PCI_TPH_LOC_CAP 0x200
PCI_TPH_LOC_MSIX  macro  include/uapi/linux/pci_regs.h  858  #define PCI_TPH_LOC_MSIX 0x400
PCI_TPH_CAP_ST_MASK  macro  include/uapi/linux/pci_regs.h  859  #define PCI_TPH_CAP_ST_MASK 0x07FF0000
PCI_TPH_CAP_ST_SHIFT  macro  include/uapi/linux/pci_regs.h  860  #define PCI_TPH_CAP_ST_SHIFT 16
PCI_TPH_BASE_SIZEOF  macro  include/uapi/linux/pci_regs.h  861  #define PCI_TPH_BASE_SIZEOF 12
_ASM_X86_SCATTERLIST_H  macro  arch/x86/include/asm/scatterlist.h  2  #define _ASM_X86_SCATTERLIST_H
ARCH_HAS_SG_CHAIN  macro  arch/x86/include/asm/scatterlist.h  6  #define ARCH_HAS_SG_CHAIN
_LINUX_MM_H  macro  include/linux/mm.h  2  #define _LINUX_MM_H
sysctl_legacy_va_layout  macro  include/linux/mm.h  40  #define sysctl_legacy_va_layout 0
nth_page  macro  include/linux/mm.h  47  #define nth_page(page,n) pfn_to_page(page_to_pfn((page)) + (n))
PAGE_ALIGN  macro  include/linux/mm.h  50  #define PAGE_ALIGN(addr) ALIGN(addr,PAGE_SIZE)
kobjsize  prototype  include/linux/mm.h  67  extern unsigned int kobjsize(const void *objp);
VM_NONE  macro  include/linux/mm.h  73  #define VM_NONE 0x00000000
VM_READ  macro  include/linux/mm.h  75  #define VM_READ 0x00000001
VM_WRITE  macro  include/linux/mm.h  76  #define VM_WRITE 0x00000002
VM_EXEC  macro  include/linux/mm.h  77  #define VM_EXEC 0x00000004
VM_SHARED  macro  include/linux/mm.h  78  #define VM_SHARED 0x00000008
VM_MAYREAD  macro  include/linux/mm.h  81  #define VM_MAYREAD 0x00000010
VM_MAYWRITE  macro  include/linux/mm.h  82  #define VM_MAYWRITE 0x00000020
VM_MAYEXEC  macro  include/linux/mm.h  83  #define VM_MAYEXEC 0x00000040
VM_MAYSHARE  macro  include/linux/mm.h  84  #define VM_MAYSHARE 0x00000080
VM_GROWSDOWN  macro  include/linux/mm.h  86  #define VM_GROWSDOWN 0x00000100
VM_PFNMAP  macro  include/linux/mm.h  87  #define VM_PFNMAP 0x00000400
VM_DENYWRITE  macro  include/linux/mm.h  88  #define VM_DENYWRITE 0x00000800
VM_LOCKED  macro  include/linux/mm.h  90  #define VM_LOCKED 0x00002000
VM_IO  macro  include/linux/mm.h  91  #define VM_IO 0x00004000
VM_SEQ_READ  macro  include/linux/mm.h  94  #define VM_SEQ_READ 0x00008000
VM_RAND_READ  macro  include/linux/mm.h  95  #define VM_RAND_READ 0x00010000
VM_DONTCOPY  macro  include/linux/mm.h  97  #define VM_DONTCOPY 0x00020000
VM_DONTEXPAND  macro  include/linux/mm.h  98  #define VM_DONTEXPAND 0x00040000
VM_ACCOUNT  macro  include/linux/mm.h  99  #define VM_ACCOUNT 0x00100000
VM_NORESERVE  macro  include/linux/mm.h  100  #define VM_NORESERVE 0x00200000
VM_HUGETLB  macro  include/linux/mm.h  101  #define VM_HUGETLB 0x00400000
VM_NONLINEAR  macro  include/linux/mm.h  102  #define VM_NONLINEAR 0x00800000
VM_ARCH_1  macro  include/linux/mm.h  103  #define VM_ARCH_1 0x01000000
VM_DONTDUMP  macro  include/linux/mm.h  104  #define VM_DONTDUMP 0x04000000
VM_MIXEDMAP  macro  include/linux/mm.h  106  #define VM_MIXEDMAP 0x10000000
VM_HUGEPAGE  macro  include/linux/mm.h  107  #define VM_HUGEPAGE 0x20000000
VM_NOHUGEPAGE  macro  include/linux/mm.h  108  #define VM_NOHUGEPAGE 0x40000000
VM_MERGEABLE  macro  include/linux/mm.h  109  #define VM_MERGEABLE 0x80000000
VM_PAT  macro  include/linux/mm.h  112  # define VM_PAT VM_ARCH_1
VM_SAO  macro  include/linux/mm.h  114  # define VM_SAO VM_ARCH_1
VM_GROWSUP  macro  include/linux/mm.h  124  # define VM_GROWSUP VM_NONE
VM_MAPPED_COPY  macro  include/linux/mm.h  120  # define VM_MAPPED_COPY VM_ARCH_1
VM_STACK_INCOMPLETE_SETUP  macro  include/linux/mm.h  128  #define VM_STACK_INCOMPLETE_SETUP (VM_RAND_READ | VM_SEQ_READ)
VM_STACK_DEFAULT_FLAGS  macro  include/linux/mm.h  131  #define VM_STACK_DEFAULT_FLAGS VM_DATA_DEFAULT_FLAGS
VM_STACK_FLAGS  macro  include/linux/mm.h  137  #define VM_STACK_FLAGS (VM_GROWSDOWN | VM_STACK_DEFAULT_FLAGS | VM_ACCOUNT)
VM_READHINTMASK  macro  include/linux/mm.h  140  #define VM_READHINTMASK (VM_SEQ_READ | VM_RAND_READ)
VM_ClearReadHint  macro  include/linux/mm.h  141  #define VM_ClearReadHint(v) (v)->vm_flags &= ~VM_READHINTMASK
VM_NormalReadHint  macro  include/linux/mm.h  142  #define VM_NormalReadHint(v) (!((v)->vm_flags & VM_READHINTMASK))
VM_SequentialReadHint  macro  include/linux/mm.h  143  #define VM_SequentialReadHint(v) ((v)->vm_flags & VM_SEQ_READ)
VM_RandomReadHint  macro  include/linux/mm.h  144  #define VM_RandomReadHint(v) ((v)->vm_flags & VM_RAND_READ)
VM_SPECIAL  macro  include/linux/mm.h  150  #define VM_SPECIAL (VM_IO | VM_DONTEXPAND | VM_PFNMAP)
FAULT_FLAG_WRITE  macro  include/linux/mm.h  158  #define FAULT_FLAG_WRITE 0x01
FAULT_FLAG_NONLINEAR  macro  include/linux/mm.h  159  #define FAULT_FLAG_NONLINEAR 0x02
FAULT_FLAG_MKWRITE  macro  include/linux/mm.h  160  #define FAULT_FLAG_MKWRITE 0x04
FAULT_FLAG_ALLOW_RETRY  macro  include/linux/mm.h  161  #define FAULT_FLAG_ALLOW_RETRY 0x08
FAULT_FLAG_RETRY_NOWAIT  macro  include/linux/mm.h  162  #define FAULT_FLAG_RETRY_NOWAIT 0x10
FAULT_FLAG_KILLABLE  macro  include/linux/mm.h  163  #define FAULT_FLAG_KILLABLE 0x20
FAULT_FLAG_TRIED  macro  include/linux/mm.h  164  #define FAULT_FLAG_TRIED 0x40
vm_fault  struct  include/linux/mm.h  174  struct vm_fault {
vm_operations_struct  struct  include/linux/mm.h  191  struct vm_operations_struct {
page_private  macro  include/linux/mm.h  238  #define page_private(page) ((page)->private)
set_page_private  macro  include/linux/mm.h  239  #define set_page_private(page,v) ((page)->private = (v))
set_freepage_migratetype  function  include/linux/mm.h  242  static inline void set_freepage_migratetype(struct page *page,int migratetype)
get_freepage_migratetype  function  include/linux/mm.h  248  static inline int get_freepage_migratetype(struct page *page)
put_page_testzero  function  include/linux/mm.h  276  static inline int put_page_testzero(struct page *page)
get_page_unless_zero  function  include/linux/mm.h  286  static inline int get_page_unless_zero(struct page *page)
page_is_ram  prototype  include/linux/mm.h  291  extern int page_is_ram(unsigned long pfn);
vmalloc_to_page  prototype  include/linux/mm.h  294  struct page *vmalloc_to_page(const void *addr);
vmalloc_to_pfn  prototype  include/linux/mm.h  295  unsigned long vmalloc_to_pfn(const void *addr);
is_vmalloc_addr  function  include/linux/mm.h  303  static inline int is_vmalloc_addr(const void *x)
is_vmalloc_or_module_addr  function  include/linux/mm.h  316  static inline int is_vmalloc_or_module_addr(const void *x)
compound_lock  function  include/linux/mm.h  322  static inline void compound_lock(struct page *page)
compound_unlock  function  include/linux/mm.h  330  static inline void compound_unlock(struct page *page)
compound_lock_irqsave  function  include/linux/mm.h  338  static inline unsigned long compound_lock_irqsave(struct page *page)
compound_unlock_irqrestore  function  include/linux/mm.h  349  static inline void compound_unlock_irqrestore(struct page *page,unsigned long flags)
compound_head  function  include/linux/mm.h  357  static inline struct page *compound_head(struct page *page)
reset_page_mapcount  function  include/linux/mm.h  369  static inline void reset_page_mapcount(struct page *page)
page_mapcount  function  include/linux/mm.h  374  static inline int page_mapcount(struct page *page)
page_count  function  include/linux/mm.h  379  static inline int page_count(struct page *page)
get_huge_page_tail  function  include/linux/mm.h  384  static inline void get_huge_page_tail(struct page *page)
__get_page_tail  prototype  include/linux/mm.h  395  extern bool __get_page_tail(struct page *page);
get_page  function  include/linux/mm.h  397  static inline void get_page(struct page *page)
virt_to_head_page  function  include/linux/mm.h  410  static inline struct page *virt_to_head_page(const void *x)
init_page_count  function  include/linux/mm.h  420  static inline void init_page_count(struct page *page)
PAGE_BUDDY_MAPCOUNT_VALUE  macro  include/linux/mm.h  434  #define PAGE_BUDDY_MAPCOUNT_VALUE (-128)
PageBuddy  function  include/linux/mm.h  436  static inline int PageBuddy(struct page *page)
__SetPageBuddy  function  include/linux/mm.h  441  static inline void __SetPageBuddy(struct page *page)
__ClearPageBuddy  function  include/linux/mm.h  447  static inline void __ClearPageBuddy(struct page *page)
put_page  prototype  include/linux/mm.h  453  void put_page(struct page *page);
put_pages_list  prototype  include/linux/mm.h  454  void put_pages_list(struct list_head *pages);
split_page  prototype  include/linux/mm.h  456  void split_page(struct page *page,unsigned int order);
split_free_page  prototype  include/linux/mm.h  457  int split_free_page(struct page *page);
set_compound_page_dtor  function  include/linux/mm.h  467  static inline void set_compound_page_dtor(struct page *page,compound_page_dtor *dtor)
get_compound_page_dtor  function  include/linux/mm.h  472  static inline compound_page_dtor *get_compound_page_dtor(struct page *page)
compound_order  function  include/linux/mm.h  477  static inline int compound_order(struct page *page)
compound_trans_order  function  include/linux/mm.h  484  static inline int compound_trans_order(struct page *page)
set_compound_order  function  include/linux/mm.h  498  static inline void set_compound_order(struct page *page,unsigned long order)
maybe_mkwrite  function  include/linux/mm.h  510  static inline pte_t maybe_mkwrite(pte_t pte,struct vm_area_struct *vma)
SECTIONS_WIDTH  macro  include/linux/mm.h  601  #define SECTIONS_WIDTH 0
ZONES_WIDTH  macro  include/linux/mm.h  604  #define ZONES_WIDTH ZONES_SHIFT
NODES_WIDTH  macro  include/linux/mm.h  612  #define NODES_WIDTH 0
SECTIONS_PGOFF  macro  include/linux/mm.h  616  #define SECTIONS_PGOFF ((sizeof(unsigned long)*8) - SECTIONS_WIDTH)
NODES_PGOFF  macro  include/linux/mm.h  617  #define NODES_PGOFF (SECTIONS_PGOFF - NODES_WIDTH)
ZONES_PGOFF  macro  include/linux/mm.h  618  #define ZONES_PGOFF (NODES_PGOFF - ZONES_WIDTH)
NODE_NOT_IN_PAGE_FLAGS  macro  include/linux/mm.h  625  #define NODE_NOT_IN_PAGE_FLAGS
SECTIONS_PGSHIFT  macro  include/linux/mm.h  633  #define SECTIONS_PGSHIFT (SECTIONS_PGOFF * (SECTIONS_WIDTH != 0))
NODES_PGSHIFT  macro  include/linux/mm.h  634  #define NODES_PGSHIFT (NODES_PGOFF * (NODES_WIDTH != 0))
ZONES_PGSHIFT  macro  include/linux/mm.h  635  #define ZONES_PGSHIFT (ZONES_PGOFF * (ZONES_WIDTH != 0))
ZONEID_SHIFT  macro  include/linux/mm.h  643  #define ZONEID_SHIFT (NODES_SHIFT + ZONES_SHIFT)
ZONEID_PGOFF  macro  include/linux/mm.h  645  #define ZONEID_PGOFF ((NODES_PGOFF < ZONES_PGOFF)? NODES_PGOFF : ZONES_PGOFF)
ZONEID_PGSHIFT  macro  include/linux/mm.h  648  #define ZONEID_PGSHIFT (ZONEID_PGOFF * (ZONEID_SHIFT != 0))
ZONES_MASK  macro  include/linux/mm.h  654  #define ZONES_MASK ((1UL << ZONES_WIDTH) - 1)
NODES_MASK  macro  include/linux/mm.h  655  #define NODES_MASK ((1UL << NODES_WIDTH) - 1)
SECTIONS_MASK  macro  include/linux/mm.h  656  #define SECTIONS_MASK ((1UL << SECTIONS_WIDTH) - 1)
ZONEID_MASK  macro  include/linux/mm.h  657  #define ZONEID_MASK ((1UL << ZONEID_SHIFT) - 1)
page_zonenum  function  include/linux/mm.h  659  static inline enum zone_type page_zonenum(const struct page *page)
page_zone_id  function  include/linux/mm.h  672  static inline int page_zone_id(struct page *page)
zone_to_nid  function  include/linux/mm.h  677  static inline int zone_to_nid(struct zone *zone)
page_to_nid  function  include/linux/mm.h  689  static inline int page_to_nid(const struct page *page)
page_xchg_last_nid  function  include/linux/mm.h  710  static inline int page_xchg_last_nid(struct page *page,int nid)
page_last_nid  function  include/linux/mm.h  715  static inline int page_last_nid(struct page *page)
reset_page_last_nid  function  include/linux/mm.h  720  static inline void reset_page_last_nid(struct page *page)
page_zone  function  include/linux/mm.h  725  static inline struct zone *page_zone(const struct page *page)
set_page_section  function  include/linux/mm.h  731  static inline void set_page_section(struct page *page,unsigned long section)
page_to_section  function  include/linux/mm.h  737  static inline unsigned long page_to_section(const struct page *page)
set_page_zone  function  include/linux/mm.h  743  static inline void set_page_zone(struct page *page,enum zone_type zone)
set_page_node  function  include/linux/mm.h  749  static inline void set_page_node(struct page *page,unsigned long node)
set_page_links  function  include/linux/mm.h  756  static inline void set_page_links(struct page *page,enum zone_type zone,unsigned long node, unsigned long pfn)
lowmem_page_address  function  include/linux/mm.h  770  static __always_inline void *lowmem_page_address(const struct page *page)
HASHED_PAGE_VIRTUAL  macro  include/linux/mm.h  776  #define HASHED_PAGE_VIRTUAL
page_address  macro  include/linux/mm.h  795  #define page_address(page) lowmem_page_address(page)
set_page_address  macro  include/linux/mm.h  796  #define set_page_address(page,address) do { } while(0)
page_address_init  macro  include/linux/mm.h  797  #define page_address_init() do { } while(0)
PAGE_MAPPING_ANON  macro  include/linux/mm.h  816  #define PAGE_MAPPING_ANON 1
PAGE_MAPPING_KSM  macro  include/linux/mm.h  817  #define PAGE_MAPPING_KSM 2
PAGE_MAPPING_FLAGS  macro  include/linux/mm.h  818  #define PAGE_MAPPING_FLAGS (PAGE_MAPPING_ANON | PAGE_MAPPING_KSM)
page_mapping  function  include/linux/mm.h  821  static inline struct address_space *page_mapping(struct page *page)
page_rmapping  function  include/linux/mm.h  834  static inline void *page_rmapping(struct page *page)
__page_file_mapping  prototype  include/linux/mm.h  839  extern struct address_space *__page_file_mapping(struct page *);
page_file_mapping  function  include/linux/mm.h  842  struct address_space *page_file_mapping(struct page *page)
PageAnon  function  include/linux/mm.h  850  static inline int PageAnon(struct page *page)
page_index  function  include/linux/mm.h  859  static inline pgoff_t page_index(struct page *page)
__page_file_index  prototype  include/linux/mm.h  866  extern pgoff_t __page_file_index(struct page *page);
page_file_index  function  include/linux/mm.h  872  static inline pgoff_t page_file_index(struct page *page)
page_mapped  function  include/linux/mm.h  883  static inline int page_mapped(struct page *page)
VM_FAULT_MINOR  macro  include/linux/mm.h  894  #define VM_FAULT_MINOR 0
VM_FAULT_OOM  macro  include/linux/mm.h  896  #define VM_FAULT_OOM 0x0001
VM_FAULT_SIGBUS  macro  include/linux/mm.h  897  #define VM_FAULT_SIGBUS 0x0002
VM_FAULT_MAJOR  macro  include/linux/mm.h  898  #define VM_FAULT_MAJOR 0x0004
VM_FAULT_WRITE  macro  include/linux/mm.h  899  #define VM_FAULT_WRITE 0x0008
VM_FAULT_HWPOISON  macro  include/linux/mm.h  900  #define VM_FAULT_HWPOISON 0x0010
VM_FAULT_HWPOISON_LARGE  macro  include/linux/mm.h  901  #define VM_FAULT_HWPOISON_LARGE 0x0020
VM_FAULT_NOPAGE  macro  include/linux/mm.h  903  #define VM_FAULT_NOPAGE 0x0100
VM_FAULT_LOCKED  macro  include/linux/mm.h  904  #define VM_FAULT_LOCKED 0x0200
VM_FAULT_RETRY  macro  include/linux/mm.h  905  #define VM_FAULT_RETRY 0x0400
VM_FAULT_HWPOISON_LARGE_MASK  macro  include/linux/mm.h  907  #define VM_FAULT_HWPOISON_LARGE_MASK 0xf000
VM_FAULT_ERROR  macro  include/linux/mm.h  910  #define VM_FAULT_ERROR (VM_FAULT_OOM | VM_FAULT_SIGBUS | VM_FAULT_HWPOISON | VM_FAULT_HWPOISON_LARGE)
VM_FAULT_SET_HINDEX  macro  include/linux/mm.h  913  #define VM_FAULT_SET_HINDEX(x) ((x) << 12)
VM_FAULT_GET_HINDEX  macro  include/linux/mm.h  914  #define VM_FAULT_GET_HINDEX(x) (((x) >> 12) & 0xf)
pagefault_out_of_memory  prototype  include/linux/mm.h  919  extern void pagefault_out_of_memory(void);
offset_in_page  macro  include/linux/mm.h  921  #define offset_in_page(p) ((unsigned long)(p) & ~PAGE_MASK)
SHOW_MEM_FILTER_NODES  macro  include/linux/mm.h  927  #define SHOW_MEM_FILTER_NODES (0x0001u)
show_free_areas  prototype  include/linux/mm.h  929  extern void show_free_areas(unsigned int flags);
skip_free_areas_node  prototype  include/linux/mm.h  930  extern bool skip_free_areas_node(unsigned int flags,int nid);
shmem_zero_setup  prototype  include/linux/mm.h  932  int shmem_zero_setup(struct vm_area_struct *);
can_do_mlock  prototype  include/linux/mm.h  934  extern int can_do_mlock(void);
user_shm_lock  prototype  include/linux/mm.h  935  extern int user_shm_lock(size_t,struct user_struct *);
user_shm_unlock  prototype  include/linux/mm.h  936  extern void user_shm_unlock(size_t,struct user_struct *);
zap_details  struct  include/linux/mm.h  941  struct zap_details {
vm_normal_page  prototype  include/linux/mm.h  949  struct page *vm_normal_page(struct vm_area_struct *vma,unsigned long addr,pte_t pte);
zap_vma_ptes  prototype  include/linux/mm.h  952  int zap_vma_ptes(struct vm_area_struct *vma,unsigned long address,unsigned long size);
zap_page_range  prototype  include/linux/mm.h  954  void zap_page_range(struct vm_area_struct *vma,unsigned long address,unsigned long size, struct zap_details *);
unmap_vmas  prototype  include/linux/mm.h  956  void unmap_vmas(struct mmu_gather *tlb,struct vm_area_struct *start_vma,unsigned long start, unsigned long end);
mm_walk  struct  include/linux/mm.h  974  struct mm_walk {
walk_page_range  prototype  include/linux/mm.h  987  int walk_page_range(unsigned long addr,unsigned long end,struct mm_walk *walk);
free_pgd_range  prototype  include/linux/mm.h  989  void free_pgd_range(struct mmu_gather *tlb,unsigned long addr,unsigned long end, unsigned long floor, unsigned long ceiling);
copy_page_range  prototype  include/linux/mm.h  991  int copy_page_range(struct mm_struct *dst,struct mm_struct *src,struct vm_area_struct *vma);
unmap_mapping_range  prototype  include/linux/mm.h  993  void unmap_mapping_range(struct address_space *mapping,loff_t const holebegin, loff_t const holelen, int even_cows);
follow_pfn  prototype  include/linux/mm.h  995  int follow_pfn(struct vm_area_struct *vma,unsigned long address,unsigned long *pfn);
follow_phys  prototype  include/linux/mm.h  997  int follow_phys(struct vm_area_struct *vma,unsigned long address,unsigned int flags, unsigned long *prot, resource_size_t *phys);
generic_access_phys  prototype  include/linux/mm.h  999  int generic_access_phys(struct vm_area_struct *vma,unsigned long addr,void *buf, int len, int write);
unmap_shared_mapping_range  function  include/linux/mm.h  1002  static inline void unmap_shared_mapping_range(struct address_space *mapping,loff_t const holebegin, loff_t const holelen)
truncate_pagecache  prototype  include/linux/mm.h  1007  extern void truncate_pagecache(struct inode *inode,loff_t old,loff_t new);
truncate_setsize  prototype  include/linux/mm.h  1008  extern void truncate_setsize(struct inode *inode,loff_t newsize);
truncate_pagecache_range  prototype  include/linux/mm.h  1009  void truncate_pagecache_range(struct inode *inode,loff_t offset,loff_t end);
truncate_inode_page  prototype  include/linux/mm.h  1010  int truncate_inode_page(struct address_space *mapping,struct page *page);
generic_error_remove_page  prototype  include/linux/mm.h  1011  int generic_error_remove_page(struct address_space *mapping,struct page *page);
invalidate_inode_page  prototype  include/linux/mm.h  1012  int invalidate_inode_page(struct page *page);
handle_mm_fault  function  include/linux/mm.h  1022  static inline int handle_mm_fault(struct mm_struct *mm,struct vm_area_struct *vma, unsigned long address,unsigned int flags)
fixup_user_fault  function  include/linux/mm.h  1030  static inline int fixup_user_fault(struct task_struct *tsk,struct mm_struct *mm, unsigned long address,unsigned int fault_flags)
make_pages_present  prototype  include/linux/mm.h  1038  extern int make_pages_present(unsigned long addr,unsigned long end);
access_process_vm  prototype  include/linux/mm.h  1039  extern int access_process_vm(struct task_struct *tsk,unsigned long addr,void *buf,int len,int write);
access_remote_vm  prototype  include/linux/mm.h  1041  extern int access_remote_vm(struct mm_struct *mm,unsigned long addr,void *buf, int len, int write);
__get_user_pages  prototype  include/linux/mm.h  1046  int __get_user_pages(struct task_struct *tsk,struct mm_struct *mm,unsigned long start, int len, unsigned int foll_flags,struct page **pages, struct vm_area_struct **vmas,int *nonblocking);
get_user_pages  prototype  include/linux/mm.h  1049  int get_user_pages(struct task_struct *tsk,struct mm_struct *mm,unsigned long start, int nr_pages, int write, int force,struct page **pages, struct vm_area_struct **vmas);
get_user_pages_fast  prototype  include/linux/mm.h  1051  int get_user_pages_fast(unsigned long start,int nr_pages,int write,struct page **pages);
get_kernel_pages  prototype  include/linux/mm.h  1054  int get_kernel_pages(const struct kvec *iov,int nr_pages,int write,struct page **pages);
get_kernel_page  prototype  include/linux/mm.h  1055  int get_kernel_page(unsigned long start,int write,struct page **pages);
get_dump_page  prototype  include/linux/mm.h  1056  struct page *get_dump_page(unsigned long addr);
try_to_release_page  prototype  include/linux/mm.h  1058  extern int try_to_release_page(struct page * page,gfp_t gfp_mask);
do_invalidatepage  prototype  include/linux/mm.h  1059  extern void do_invalidatepage(struct page *page,unsigned long offset);
__set_page_dirty_nobuffers  prototype  include/linux/mm.h  1061  int __set_page_dirty_nobuffers(struct page *page);
__set_page_dirty_no_writeback  prototype  include/linux/mm.h  1062  int __set_page_dirty_no_writeback(struct page *page);
redirty_page_for_writepage  prototype  include/linux/mm.h  1064  int redirty_page_for_writepage(struct writeback_control *wbc,struct page *page);
account_page_dirtied  prototype  include/linux/mm.h  1065  void account_page_dirtied(struct page *page,struct address_space *mapping);
account_page_writeback  prototype  include/linux/mm.h  1066  void account_page_writeback(struct page *page);
set_page_dirty  prototype  include/linux/mm.h  1067  int set_page_dirty(struct page *page);
set_page_dirty_lock  prototype  include/linux/mm.h  1068  int set_page_dirty_lock(struct page *page);
clear_page_dirty_for_io  prototype  include/linux/mm.h  1069  int clear_page_dirty_for_io(struct page *page);
vma_growsdown  function  include/linux/mm.h  1072  static inline int vma_growsdown(struct vm_area_struct *vma,unsigned long addr)
stack_guard_page_start  function  include/linux/mm.h  1078  static inline int stack_guard_page_start(struct vm_area_struct *vma,unsigned long addr)
vma_growsup  function  include/linux/mm.h  1086  static inline int vma_growsup(struct vm_area_struct *vma,unsigned long addr)
stack_guard_page_end  function  include/linux/mm.h  1092  static inline int stack_guard_page_end(struct vm_area_struct *vma,unsigned long addr)
vm_is_stack  prototype  include/linux/mm.h  1100  vm_is_stack(struct task_struct *task,struct vm_area_struct *vma,int in_group);
move_page_tables  prototype  include/linux/mm.h  1105  extern unsigned long move_page_tables(struct vm_area_struct *vma,unsigned long old_addr, struct vm_area_struct *new_vma,unsigned long new_addr, unsigned long len,bool need_rmap_locks);
do_mremap  prototype  include/linux/mm.h  1108  extern unsigned long do_mremap(unsigned long addr,unsigned long old_len, unsigned long new_len,unsigned long flags, unsigned long new_addr);
change_protection  prototype  include/linux/mm.h  1111  extern unsigned long change_protection(struct vm_area_struct *vma,unsigned long start,unsigned long end, pgprot_t newprot,int dirty_accountable, int prot_numa);
mprotect_fixup  prototype  include/linux/mm.h  1114  extern int mprotect_fixup(struct vm_area_struct *vma,struct vm_area_struct **pprev, unsigned long start,unsigned long end, unsigned long newflags);
__get_user_pages_fast  prototype  include/linux/mm.h  1120  int __get_user_pages_fast(unsigned long start,int nr_pages,int write,struct page **pages);
get_mm_counter  function  include/linux/mm.h  1124  static inline unsigned long get_mm_counter(struct mm_struct *mm,int member)
add_mm_counter  function  include/linux/mm.h  1139  static inline void add_mm_counter(struct mm_struct *mm,int member,long value)
inc_mm_counter  function  include/linux/mm.h  1144  static inline void inc_mm_counter(struct mm_struct *mm,int member)
dec_mm_counter  function  include/linux/mm.h  1149  static inline void dec_mm_counter(struct mm_struct *mm,int member)
get_mm_rss  function  include/linux/mm.h  1154  static inline unsigned long get_mm_rss(struct mm_struct *mm)
get_mm_hiwater_rss  function  include/linux/mm.h  1160  static inline unsigned long get_mm_hiwater_rss(struct mm_struct *mm)
get_mm_hiwater_vm  function  include/linux/mm.h  1165  static inline unsigned long get_mm_hiwater_vm(struct mm_struct *mm)
update_hiwater_rss  function  include/linux/mm.h  1170  static inline void update_hiwater_rss(struct mm_struct *mm)
update_hiwater_vm  function  include/linux/mm.h  1178  static inline void update_hiwater_vm(struct mm_struct *mm)
setmax_mm_hiwater_rss  function  include/linux/mm.h  1185  static inline void setmax_mm_hiwater_rss(unsigned long *maxrss,struct mm_struct *mm)
sync_mm_rss  function  include/linux/mm.h  1196  static inline void sync_mm_rss(struct mm_struct *mm)
vma_wants_writenotify  prototype  include/linux/mm.h  1201  int vma_wants_writenotify(struct vm_area_struct *vma);
__get_locked_pte  prototype  include/linux/mm.h  1204  extern pte_t *__get_locked_pte(struct mm_struct *mm,unsigned long addr,spinlock_t **ptl);
get_locked_pte  function  include/linux/mm.h  1206  static inline pte_t *get_locked_pte(struct mm_struct *mm,unsigned long addr,spinlock_t **ptl)
__pud_alloc  prototype  include/linux/mm.h  1220  int __pud_alloc(struct mm_struct *mm,pgd_t *pgd,unsigned long address);
__pmd_alloc  prototype  include/linux/mm.h  1230  int __pmd_alloc(struct mm_struct *mm,pud_t *pud,unsigned long address);
__pte_alloc  prototype  include/linux/mm.h  1234  int __pte_alloc(struct mm_struct *mm,struct vm_area_struct *vma,pmd_t *pmd, unsigned long address);
__pte_alloc_kernel  prototype  include/linux/mm.h  1235  int __pte_alloc_kernel(pmd_t *pmd,unsigned long address);
pud_alloc  function  include/linux/mm.h  1242  static inline pud_t *pud_alloc(struct mm_struct *mm,pgd_t *pgd,unsigned long address)
pmd_alloc  function  include/linux/mm.h  1248  static inline pmd_t *pmd_alloc(struct mm_struct *mm,pud_t *pud,unsigned long address)
__pte_lockptr  macro  include/linux/mm.h  1262  #define __pte_lockptr(page) &((page)->ptl)
pte_lock_init  macro  include/linux/mm.h  1272  #define pte_lock_init(page) do {} while (0)
pte_lock_deinit  macro  include/linux/mm.h  1273  #define pte_lock_deinit(page) do {} while (0)
pte_lockptr  macro  include/linux/mm.h  1274  #define pte_lockptr(mm,pmd) ({(void)(pmd); &(mm)->page_table_lock;})
pgtable_page_ctor  function  include/linux/mm.h  1277  static inline void pgtable_page_ctor(struct page *page)
pgtable_page_dtor  function  include/linux/mm.h  1283  static inline void pgtable_page_dtor(struct page *page)
pte_offset_map_lock  macro  include/linux/mm.h  1296  #define pte_offset_map_lock(mm,pmd,address,ptlp) ({ spinlock_t *__ptl = pte_lockptr(mm, pmd); pte_t *__pte = pte_offset_map(pmd, address); *(ptlp) = __ptl; spin_lock(__ptl); __pte; })
pte_unmap_unlock  macro  include/linux/mm.h  1301  #define pte_unmap_unlock(pte,ptl) do { spin_unlock(ptl); pte_unmap(pte); } while (0)
pte_alloc_map  macro  include/linux/mm.h  1306  #define pte_alloc_map(mm,vma,pmd,address) ((unlikely(pmd_none(*(pmd))) && __pte_alloc(mm, vma, pmd, address))? NULL: pte_offset_map(pmd, address))
pte_alloc_map_lock  macro  include/linux/mm.h  1311  #define pte_alloc_map_lock(mm,pmd,address,ptlp) ((unlikely(pmd_none(*(pmd))) && __pte_alloc(mm, NULL, pmd, address))? NULL: pte_offset_map_lock(mm, pmd, address, ptlp))
pte_alloc_kernel  macro  include/linux/mm.h  1315  #define pte_alloc_kernel(pmd,address) ((unlikely(pmd_none(*(pmd))) && __pte_alloc_kernel(pmd, address))? NULL: pte_offset_kernel(pmd, address))
free_area_init  prototype  include/linux/mm.h  1317  extern void free_area_init(unsigned long * zones_size);
free_area_init_node  prototype  include/linux/mm.h  1319  extern void free_area_init_node(int nid,unsigned long * zones_size,unsigned long zone_start_pfn, unsigned long *zholes_size);
free_initmem  prototype  include/linux/mm.h  1320  extern void free_initmem(void);
free_area_init_nodes  prototype  include/linux/mm.h  1349  extern void free_area_init_nodes(unsigned long *max_zone_pfn);
node_map_pfn_alignment  prototype  include/linux/mm.h  1350  unsigned long node_map_pfn_alignment(void);
__absent_pages_in_range  prototype  include/linux/mm.h  1352  unsigned long __absent_pages_in_range(int nid,unsigned long start_pfn,unsigned long end_pfn);
absent_pages_in_range  prototype  include/linux/mm.h  1354  extern unsigned long absent_pages_in_range(unsigned long start_pfn,unsigned long end_pfn);
get_pfn_range_for_nid  prototype  include/linux/mm.h  1356  extern void get_pfn_range_for_nid(unsigned int nid,unsigned long *start_pfn, unsigned long *end_pfn);
find_min_pfn_with_active_regions  prototype  include/linux/mm.h  1357  extern unsigned long find_min_pfn_with_active_regions(void);
free_bootmem_with_active_regions  prototype  include/linux/mm.h  1359  extern void free_bootmem_with_active_regions(int nid,unsigned long max_low_pfn);
sparse_memory_present_with_active_regions  prototype  include/linux/mm.h  1360  extern void sparse_memory_present_with_active_regions(int nid);
__early_pfn_to_nid  prototype  include/linux/mm.h  1375  extern int __meminit __early_pfn_to_nid(unsigned long pfn);
set_dma_reserve  prototype  include/linux/mm.h  1379  extern void set_dma_reserve(unsigned long new_dma_reserve);
memmap_init_zone  prototype  include/linux/mm.h  1381  extern void memmap_init_zone(unsigned long,int,unsigned long,unsigned long, enum memmap_context);
setup_per_zone_wmarks  prototype  include/linux/mm.h  1382  extern void setup_per_zone_wmarks(void);
init_per_zone_wmark_min  prototype  include/linux/mm.h  1383  extern int __meminit init_per_zone_wmark_min(void);
mem_init  prototype  include/linux/mm.h  1384  extern void mem_init(void);
mmap_init  prototype  include/linux/mm.h  1385  extern void __init mmap_init(void);
show_mem  prototype  include/linux/mm.h  1386  extern void show_mem(unsigned int flags);
si_meminfo  prototype  include/linux/mm.h  1387  extern void si_meminfo(struct sysinfo * val);
si_meminfo_node  prototype  include/linux/mm.h  1388  extern void si_meminfo_node(struct sysinfo *val,int nid);
warn_alloc_failed  prototype  include/linux/mm.h  1392  void warn_alloc_failed(gfp_t gfp_mask,int order,const char *fmt,...);
setup_per_cpu_pageset  prototype  include/linux/mm.h  1394  extern void setup_per_cpu_pageset(void);
zone_pcp_update  prototype  include/linux/mm.h  1396  extern void zone_pcp_update(struct zone *zone);
zone_pcp_reset  prototype  include/linux/mm.h  1397  extern void zone_pcp_reset(struct zone *zone);
nommu_shrink_inode_mappings  prototype  include/linux/mm.h  1401  extern int nommu_shrink_inode_mappings(struct inode *,size_t,size_t);
vma_interval_tree_insert  prototype  include/linux/mm.h  1405  void vma_interval_tree_insert(struct vm_area_struct *node,struct rb_root *root);
vma_interval_tree_insert_after  prototype  include/linux/mm.h  1408  void vma_interval_tree_insert_after(struct vm_area_struct *node,struct vm_area_struct *prev,struct rb_root *root);
vma_interval_tree_remove  prototype  include/linux/mm.h  1410  void vma_interval_tree_remove(struct vm_area_struct *node,struct rb_root *root);
vma_interval_tree_iter_first  prototype  include/linux/mm.h  1412  struct vm_area_struct *vma_interval_tree_iter_first(struct rb_root *root,unsigned long start, unsigned long last);
vma_interval_tree_iter_next  prototype  include/linux/mm.h  1414  struct vm_area_struct *vma_interval_tree_iter_next(struct vm_area_struct *node,unsigned long start, unsigned long last);
vma_interval_tree_foreach  macro  include/linux/mm.h  1418  #define vma_interval_tree_foreach(vma,root,start,last) for (vma = vma_interval_tree_iter_first(root, start, last); vma; vma = vma_interval_tree_iter_next(vma, start, last))
vma_nonlinear_insert  function  include/linux/mm.h  1421  static inline void vma_nonlinear_insert(struct vm_area_struct *vma,struct list_head *list)
anon_vma_interval_tree_insert  prototype  include/linux/mm.h  1427  void anon_vma_interval_tree_insert(struct anon_vma_chain *node,struct rb_root *root);
anon_vma_interval_tree_remove  prototype  include/linux/mm.h  1429  void anon_vma_interval_tree_remove(struct anon_vma_chain *node,struct rb_root *root);
anon_vma_interval_tree_iter_first  prototype  include/linux/mm.h  1430  struct anon_vma_chain *anon_vma_interval_tree_iter_first(
anon_vma_interval_tree_iter_next  prototype  include/linux/mm.h  1432  struct anon_vma_chain *anon_vma_interval_tree_iter_next(
anon_vma_interval_tree_verify  prototype  include/linux/mm.h  1435  void anon_vma_interval_tree_verify(struct anon_vma_chain *node);
anon_vma_interval_tree_foreach  macro  include/linux/mm.h  1440  #define anon_vma_interval_tree_foreach(avc,root,start,last) for (avc = anon_vma_interval_tree_iter_first(root, start, last); avc; avc = anon_vma_interval_tree_iter_next(avc, start, last))
__vm_enough_memory  prototype  include/linux/mm.h  1443  extern int __vm_enough_memory(struct mm_struct *mm,long pages,int cap_sys_admin);
vma_adjust  prototype  include/linux/mm.h  1445  extern int vma_adjust(struct vm_area_struct *vma,unsigned long start,unsigned long end, pgoff_t pgoff, struct vm_area_struct *insert);
vma_merge  prototype  include/linux/mm.h  1449  extern struct vm_area_struct *vma_merge(struct mm_struct *,struct vm_area_struct *prev, unsigned long addr, unsigned long end,unsigned long vm_flags, struct anon_vma *, struct file *, pgoff_t,struct mempolicy *);
find_mergeable_anon_vma  prototype  include/linux/mm.h  1450  extern struct anon_vma *find_mergeable_anon_vma(struct vm_area_struct *);
split_vma  prototype  include/linux/mm.h  1452  extern int split_vma(struct mm_struct *,struct vm_area_struct *, unsigned long addr, int new_below);
insert_vm_struct  prototype  include/linux/mm.h  1453  extern int insert_vm_struct(struct mm_struct *,struct vm_area_struct *);
__vma_link_rb  prototype  include/linux/mm.h  1455  extern void __vma_link_rb(struct mm_struct *,struct vm_area_struct *,struct rb_node **, struct rb_node *);
unlink_file_vma  prototype  include/linux/mm.h  1456  extern void unlink_file_vma(struct vm_area_struct *);
copy_vma  prototype  include/linux/mm.h  1459  extern struct vm_area_struct *copy_vma(struct vm_area_struct **,unsigned long addr, unsigned long len, pgoff_t pgoff,bool *need_rmap_locks);
exit_mmap  prototype  include/linux/mm.h  1460  extern void exit_mmap(struct mm_struct *);
mm_take_all_locks  prototype  include/linux/mm.h  1462  extern int mm_take_all_locks(struct mm_struct *mm);
mm_drop_all_locks  prototype  include/linux/mm.h  1463  extern void mm_drop_all_locks(struct mm_struct *mm);
set_mm_exe_file  prototype  include/linux/mm.h  1465  extern void set_mm_exe_file(struct mm_struct *mm,struct file *new_exe_file);
get_mm_exe_file  prototype  include/linux/mm.h  1466  extern struct file *get_mm_exe_file(struct mm_struct *mm);
may_expand_vm  prototype  include/linux/mm.h  1468  extern int may_expand_vm(struct mm_struct *mm,unsigned long npages);
install_special_mapping  prototype  include/linux/mm.h  1471  extern int install_special_mapping(struct mm_struct *mm,unsigned long addr, unsigned long len,unsigned long flags, struct page **pages);
get_unmapped_area  prototype  include/linux/mm.h  1473  extern unsigned long get_unmapped_area(struct file *,unsigned long,unsigned long,unsigned long,unsigned long);
mmap_region  prototype  include/linux/mm.h  1477  extern unsigned long mmap_region(struct file *file,unsigned long addr,unsigned long len, unsigned long flags,vm_flags_t vm_flags, unsigned long pgoff);
do_mmap_pgoff  prototype  include/linux/mm.h  1480  extern unsigned long do_mmap_pgoff(struct file *,unsigned long,unsigned long, unsigned long,unsigned long, unsigned long);
do_munmap  prototype  include/linux/mm.h  1481  extern int do_munmap(struct mm_struct *,unsigned long,size_t);
vm_brk  prototype  include/linux/mm.h  1484  extern unsigned long vm_brk(unsigned long,unsigned long);
vm_munmap  prototype  include/linux/mm.h  1485  extern int vm_munmap(unsigned long,size_t);
vm_mmap  prototype  include/linux/mm.h  1488  extern unsigned long vm_mmap(struct file *,unsigned long,unsigned long, unsigned long,unsigned long, unsigned long);
vm_unmapped_area_info  struct  include/linux/mm.h  1490  struct vm_unmapped_area_info {
VM_UNMAPPED_AREA_TOPDOWN  macro  include/linux/mm.h  1491  #define VM_UNMAPPED_AREA_TOPDOWN 1
unmapped_area  prototype  include/linux/mm.h  1500  extern unsigned long unmapped_area(struct vm_unmapped_area_info *info);
unmapped_area_topdown  prototype  include/linux/mm.h  1501  extern unsigned long unmapped_area_topdown(struct vm_unmapped_area_info *info);
vm_unmapped_area  function  include/linux/mm.h  1513  vm_unmapped_area(struct vm_unmapped_area_info *info)
truncate_inode_pages  prototype  include/linux/mm.h  1522  extern void truncate_inode_pages(struct address_space *,loff_t);
truncate_inode_pages_range  prototype  include/linux/mm.h  1524  extern void truncate_inode_pages_range(struct address_space *,loff_t lstart, loff_t lend);
filemap_fault  prototype  include/linux/mm.h  1527  extern int filemap_fault(struct vm_area_struct *,struct vm_fault *);
filemap_page_mkwrite  prototype  include/linux/mm.h  1528  extern int filemap_page_mkwrite(struct vm_area_struct *vma,struct vm_fault *vmf);
write_one_page  prototype  include/linux/mm.h  1531  int write_one_page(struct page *page,int wait);
task_dirty_inc  prototype  include/linux/mm.h  1532  void task_dirty_inc(struct task_struct *tsk);
VM_MAX_READAHEAD  macro  include/linux/mm.h  1535  #define VM_MAX_READAHEAD 128
VM_MIN_READAHEAD  macro  include/linux/mm.h  1536  #define VM_MIN_READAHEAD 16
force_page_cache_readahead  prototype  include/linux/mm.h  1539  int force_page_cache_readahead(struct address_space *mapping,struct file *filp,pgoff_t offset, unsigned long nr_to_read);
page_cache_sync_readahead  prototype  include/linux/mm.h  1545  void page_cache_sync_readahead(struct address_space *mapping,struct file_ra_state *ra,struct file *filp,pgoff_t offset,unsigned long size);
page_cache_async_readahead  prototype  include/linux/mm.h  1552  void page_cache_async_readahead(struct address_space *mapping,struct file_ra_state *ra,struct file *filp,struct page *pg,pgoff_t offset,unsigned long size);
max_sane_readahead  prototype  include/linux/mm.h  1554  unsigned long max_sane_readahead(unsigned long nr);
ra_submit  prototype  include/linux/mm.h  1557  unsigned long ra_submit(struct file_ra_state *ra,struct address_space *mapping,struct file *filp);
expand_stack  prototype  include/linux/mm.h  1560  extern int expand_stack(struct vm_area_struct *vma,unsigned long address);
expand_downwards  prototype  include/linux/mm.h  1564  extern int expand_downwards(struct vm_area_struct *vma,unsigned long address);
expand_upwards  macro  include/linux/mm.h  1568  #define expand_upwards(vma,address) do { } while (0)
find_vma  prototype  include/linux/mm.h  1572  extern struct vm_area_struct * find_vma(struct mm_struct * mm,unsigned long addr);
find_vma_prev  prototype  include/linux/mm.h  1574  extern struct vm_area_struct * find_vma_prev(struct mm_struct * mm,unsigned long addr,struct vm_area_struct **pprev);
find_vma_intersection  function  include/linux/mm.h  1578  static inline struct vm_area_struct * find_vma_intersection(struct mm_struct * mm,unsigned long start_addr,unsigned long end_addr)
vma_pages  function  include/linux/mm.h  1587  static inline unsigned long vma_pages(struct vm_area_struct *vma)
find_exact_vma  function  include/linux/mm.h  1594  static inline struct vm_area_struct *find_exact_vma(struct mm_struct *mm,unsigned long vm_start, unsigned long vm_end)
vm_get_page_prot  function  include/linux/mm.h  1607  static inline pgprot_t vm_get_page_prot(unsigned long vm_flags)
change_prot_numa  prototype  include/linux/mm.h  1615  unsigned long change_prot_numa(struct vm_area_struct *vma,unsigned long start, unsigned long end);
find_extend_vma  prototype  include/linux/mm.h  1618  struct vm_area_struct *find_extend_vma(struct mm_struct *,unsigned long addr);
remap_pfn_range  prototype  include/linux/mm.h  1620  int remap_pfn_range(struct vm_area_struct *,unsigned long addr,unsigned long pfn, unsigned long size, pgprot_t);
vm_insert_page  prototype  include/linux/mm.h  1621  int vm_insert_page(struct vm_area_struct *,unsigned long addr,struct page *);
vm_insert_pfn  prototype  include/linux/mm.h  1623  int vm_insert_pfn(struct vm_area_struct *vma,unsigned long addr,unsigned long pfn);
vm_insert_mixed  prototype  include/linux/mm.h  1625  int vm_insert_mixed(struct vm_area_struct *vma,unsigned long addr,unsigned long pfn);
vm_iomap_memory  prototype  include/linux/mm.h  1626  int vm_iomap_memory(struct vm_area_struct *vma,phys_addr_t start,unsigned long len);
follow_page  prototype  include/linux/mm.h  1630  struct page *follow_page(struct vm_area_struct *,unsigned long address,unsigned int foll_flags);
FOLL_WRITE  macro  include/linux/mm.h  1631  #define FOLL_WRITE 0x01
FOLL_TOUCH  macro  include/linux/mm.h  1632  #define FOLL_TOUCH 0x02
FOLL_GET  macro  include/linux/mm.h  1633  #define FOLL_GET 0x04
FOLL_DUMP  macro  include/linux/mm.h  1634  #define FOLL_DUMP 0x08
FOLL_FORCE  macro  include/linux/mm.h  1635  #define FOLL_FORCE 0x10
FOLL_NOWAIT  macro  include/linux/mm.h  1636  #define FOLL_NOWAIT 0x20
FOLL_MLOCK  macro  include/linux/mm.h  1638  #define FOLL_MLOCK 0x40
FOLL_SPLIT  macro  include/linux/mm.h  1639  #define FOLL_SPLIT 0x80
FOLL_HWPOISON  macro  include/linux/mm.h  1640  #define FOLL_HWPOISON 0x100
FOLL_NUMA  macro  include/linux/mm.h  1641  #define FOLL_NUMA 0x200
apply_to_page_range  prototype  include/linux/mm.h  1646  extern int apply_to_page_range(struct mm_struct *mm,unsigned long address,unsigned long size, pte_fn_t fn, void *data);
vm_stat_account  function  include/linux/mm.h  1652  static inline void vm_stat_account(struct mm_struct *mm,unsigned long flags, struct file *file, long pages)
kernel_map_pages  function  include/linux/mm.h  1665  kernel_map_pages(struct page *page,int numpages,int enable) {}
kernel_page_present  function  include/linux/mm.h  1667  static inline bool kernel_page_present(struct page *page) { return true; }
get_gate_vma  prototype  include/linux/mm.h  1671  extern struct vm_area_struct *get_gate_vma(struct mm_struct *mm);
in_gate_area_no_mm  prototype  include/linux/mm.h  1676  int in_gate_area_no_mm(unsigned long addr);
in_gate_area  macro  include/linux/mm.h  1677  #define in_gate_area(mm,addr) ({(void)mm; in_gate_area_no_mm(addr);})
drop_caches_sysctl_handler  prototype  include/linux/mm.h  1681  int drop_caches_sysctl_handler(struct ctl_table *,int,void __user *, size_t *, loff_t *);
shrink_slab  prototype  include/linux/mm.h  1684  unsigned long shrink_slab(struct shrink_control *shrink,unsigned long nr_pages_scanned,unsigned long lru_pages);
randomize_va_space  macro  include/linux/mm.h  1687  #define randomize_va_space 0
arch_vma_name  prototype  include/linux/mm.h  1692  const char * arch_vma_name(struct vm_area_struct *vma);
print_vma_addr  prototype  include/linux/mm.h  1693  void print_vma_addr(char *prefix,unsigned long rip);
sparse_mem_maps_populate_node  prototype  include/linux/mm.h  1699  void sparse_mem_maps_populate_node(struct page **map_map,unsigned long pnum_begin,unsigned long pnum_end,unsigned long map_count,int nodeid);
sparse_mem_map_populate  prototype  include/linux/mm.h  1701  struct page *sparse_mem_map_populate(unsigned long pnum,int nid);
vmemmap_pgd_populate  prototype  include/linux/mm.h  1702  pgd_t *vmemmap_pgd_populate(unsigned long addr,int node);
vmemmap_pud_populate  prototype  include/linux/mm.h  1703  pud_t *vmemmap_pud_populate(pgd_t *pgd,unsigned long addr,int node);
vmemmap_pmd_populate  prototype  include/linux/mm.h  1704  pmd_t *vmemmap_pmd_populate(pud_t *pud,unsigned long addr,int node);
vmemmap_pte_populate  prototype  include/linux/mm.h  1705  pte_t *vmemmap_pte_populate(pmd_t *pmd,unsigned long addr,int node);
vmemmap_alloc_block  prototype  include/linux/mm.h  1706  void *vmemmap_alloc_block(unsigned long size,int node);
vmemmap_alloc_block_buf  prototype  include/linux/mm.h  1707  void *vmemmap_alloc_block_buf(unsigned long size,int node);
vmemmap_verify  prototype  include/linux/mm.h  1708  void vmemmap_verify(pte_t *,int,unsigned long,unsigned long);
vmemmap_populate_basepages  prototype  include/linux/mm.h  1710  int vmemmap_populate_basepages(struct page *start_page,unsigned long pages, int node);
vmemmap_populate  prototype  include/linux/mm.h  1711  int vmemmap_populate(struct page *start_page,unsigned long pages,int node);
vmemmap_populate_print_last  prototype  include/linux/mm.h  1712  void vmemmap_populate_print_last(void);
mf_flags  enum  include/linux/mm.h  1715  enum mf_flags {
memory_failure  prototype  include/linux/mm.h  1720  extern int memory_failure(unsigned long pfn,int trapno,int flags);
memory_failure_queue  prototype  include/linux/mm.h  1721  extern void memory_failure_queue(unsigned long pfn,int trapno,int flags);
unpoison_memory  prototype  include/linux/mm.h  1722  extern int unpoison_memory(unsigned long pfn);
shake_page  prototype  include/linux/mm.h  1725  extern void shake_page(struct page *p,int access);
soft_offline_page  prototype  include/linux/mm.h  1727  extern int soft_offline_page(struct page *page,int flags);
dump_page  prototype  include/linux/mm.h  1729  extern void dump_page(struct page *page);
clear_huge_page  prototype  include/linux/mm.h  1734  extern void clear_huge_page(struct page *page,unsigned long addr,unsigned int pages_per_huge_page);
copy_user_huge_page  prototype  include/linux/mm.h  1737  extern void copy_user_huge_page(struct page *dst,struct page *src,unsigned long addr, struct vm_area_struct *vma,unsigned int pages_per_huge_page);
debug_guardpage_minorder  function  include/linux/mm.h  1753  static inline unsigned int debug_guardpage_minorder(void) { return 0; }
page_is_guard  function  include/linux/mm.h  1754  static inline bool page_is_guard(struct page *page) { return false; }
_ASM_X86_PLATFORM_H  macro  arch/x86/include/asm/x86_init.h  2  #define _ASM_X86_PLATFORM_H
x86_init_mpparse  struct  arch/x86/include/asm/x86_init.h  23  struct x86_init_mpparse {
x86_init_resources  struct  arch/x86/include/asm/x86_init.h  42  struct x86_init_resources {
x86_init_irqs  struct  arch/x86/include/asm/x86_init.h  55  struct x86_init_irqs {
x86_init_oem  struct  arch/x86/include/asm/x86_init.h  66  struct x86_init_oem {
x86_init_mapping  struct  arch/x86/include/asm/x86_init.h  78  struct x86_init_mapping {
x86_init_paging  struct  arch/x86/include/asm/x86_init.h  89  struct x86_init_paging {
x86_init_timers  struct  arch/x86/include/asm/x86_init.h  101  struct x86_init_timers {
x86_init_iommu  struct  arch/x86/include/asm/x86_init.h  112  struct x86_init_iommu {
x86_init_pci  struct  arch/x86/include/asm/x86_init.h  123  struct x86_init_pci {
x86_init_ops  struct  arch/x86/include/asm/x86_init.h  134  struct x86_init_ops {
x86_cpuinit_ops  struct  arch/x86/include/asm/x86_init.h  151  struct x86_cpuinit_ops {
x86_platform_ops  struct  arch/x86/include/asm/x86_init.h  169  struct x86_platform_ops {
x86_msi_ops  struct  arch/x86/include/asm/x86_init.h  185  struct x86_msi_ops {
x86_io_apic_ops  struct  arch/x86/include/asm/x86_init.h  192  struct x86_io_apic_ops {
x86_init_noop  prototype  arch/x86/include/asm/x86_init.h  204  extern void x86_init_noop(void);
x86_init_uint_noop  prototype  arch/x86/include/asm/x86_init.h  205  extern void x86_init_uint_noop(unsigned int unused);
_ASM_X86_PCI_64_H  macro  arch/x86/include/asm/pci_64.h  2  #define _ASM_X86_PCI_64_H
pci_iommu  function  arch/x86/include/asm/pci_64.h  7  static inline void *pci_iommu(struct pci_bus *bus)
set_pci_iommu  function  arch/x86/include/asm/pci_64.h  13  static inline void set_pci_iommu(struct pci_bus *bus,void *val)
_ASM_GENERIC_PCI_DMA_COMPAT_H  macro  include/asm-generic/pci-dma-compat.h  5  #define _ASM_GENERIC_PCI_DMA_COMPAT_H
pci_dma_supported  function  include/asm-generic/pci-dma-compat.h  10  pci_dma_supported(struct pci_dev *hwdev,u64 mask)
pci_alloc_consistent  function  include/asm-generic/pci-dma-compat.h  17  pci_alloc_consistent(struct pci_dev *hwdev,size_t size,dma_addr_t *dma_handle)
pci_free_consistent  function  include/asm-generic/pci-dma-compat.h  24  pci_free_consistent(struct pci_dev *hwdev,size_t size,void *vaddr, dma_addr_t dma_handle)
pci_map_single  function  include/asm-generic/pci-dma-compat.h  30  pci_map_single(struct pci_dev *hwdev,void *ptr,size_t size,int direction)
pci_unmap_single  function  include/asm-generic/pci-dma-compat.h  37  pci_unmap_single(struct pci_dev *hwdev,dma_addr_t dma_addr,size_t size, int direction)
pci_map_page  function  include/asm-generic/pci-dma-compat.h  44  pci_map_page(struct pci_dev *hwdev,struct page *page,unsigned long offset, size_t size, int direction)
pci_unmap_page  function  include/asm-generic/pci-dma-compat.h  51  pci_unmap_page(struct pci_dev *hwdev,dma_addr_t dma_address,size_t size, int direction)
pci_map_sg  function  include/asm-generic/pci-dma-compat.h  58  pci_map_sg(struct pci_dev *hwdev,struct scatterlist *sg,int nents, int direction)
pci_unmap_sg  function  include/asm-generic/pci-dma-compat.h  65  pci_unmap_sg(struct pci_dev *hwdev,struct scatterlist *sg,int nents, int direction)
pci_dma_sync_single_for_cpu  function  include/asm-generic/pci-dma-compat.h  72  pci_dma_sync_single_for_cpu(struct pci_dev *hwdev,dma_addr_t dma_handle,size_t size, int direction)
pci_dma_sync_single_for_device  function  include/asm-generic/pci-dma-compat.h  79  pci_dma_sync_single_for_device(struct pci_dev *hwdev,dma_addr_t dma_handle,size_t size, int direction)
pci_dma_sync_sg_for_cpu  function  include/asm-generic/pci-dma-compat.h  86  pci_dma_sync_sg_for_cpu(struct pci_dev *hwdev,struct scatterlist *sg,int nelems, int direction)
pci_dma_sync_sg_for_device  function  include/asm-generic/pci-dma-compat.h  93  pci_dma_sync_sg_for_device(struct pci_dev *hwdev,struct scatterlist *sg,int nelems, int direction)
pci_dma_mapping_error  function  include/asm-generic/pci-dma-compat.h  99  pci_dma_mapping_error(struct pci_dev *pdev,dma_addr_t dma_addr)
_ASM_GENERIC_PCI_H  macro  include/asm-generic/pci.h  7  #define _ASM_GENERIC_PCI_H
pcibios_select_root  function  include/asm-generic/pci.h  10  pcibios_select_root(struct pci_dev *pdev,struct resource *res)
pci_get_legacy_ide_irq  function  include/asm-generic/pci.h  23  static inline int pci_get_legacy_ide_irq(struct pci_dev *dev,int channel)
__ASM_GENERIC_DELAY_H  macro  include/asm-generic/delay.h  2  #define __ASM_GENERIC_DELAY_H
__bad_udelay  prototype  include/asm-generic/delay.h  5  extern void __bad_udelay(void);
__bad_ndelay  prototype  include/asm-generic/delay.h  6  extern void __bad_ndelay(void);
__udelay  prototype  include/asm-generic/delay.h  8  extern void __udelay(unsigned long usecs);
__ndelay  prototype  include/asm-generic/delay.h  9  extern void __ndelay(unsigned long nsecs);
__const_udelay  prototype  include/asm-generic/delay.h  10  extern void __const_udelay(unsigned long xloops);
__delay  prototype  include/asm-generic/delay.h  11  extern void __delay(unsigned long loops);
udelay  macro  include/asm-generic/delay.h  29  #define udelay(n) ({ if (__builtin_constant_p(n)) { if ((n) / 20000 >= 1) __bad_udelay(); else __const_udelay((n) * 0x10c7ul); } else { __udelay(n); } })
_LINUX_SOCKET_H  macro  include/linux/socket.h  2  #define _LINUX_SOCKET_H
__sockaddr_check_size  macro  include/linux/socket.h  16  #define __sockaddr_check_size(size) BUILD_BUG_ON(((size) > sizeof(struct __kernel_sockaddr_storage)))
socket_seq_show  prototype  include/linux/socket.h  20  extern void socket_seq_show(struct seq_file *seq);
sockaddr  struct  include/linux/socket.h  29  struct sockaddr {
linger  struct  include/linux/socket.h  34  struct linger {
sockaddr_storage  macro  include/linux/socket.h  39  #define sockaddr_storage __kernel_sockaddr_storage
msghdr  struct  include/linux/socket.h  47  struct msghdr {
mmsghdr  struct  include/linux/socket.h  58  struct mmsghdr {
cmsghdr  struct  include/linux/socket.h  69  struct cmsghdr {
__CMSG_NXTHDR  macro  include/linux/socket.h  80  #define __CMSG_NXTHDR(ctl,len,cmsg) __cmsg_nxthdr((ctl),(len),(cmsg))
CMSG_NXTHDR  macro  include/linux/socket.h  81  #define CMSG_NXTHDR(mhdr,cmsg) cmsg_nxthdr((mhdr),(cmsg))
CMSG_ALIGN  macro  include/linux/socket.h  83  #define CMSG_ALIGN(len) ( ((len)+sizeof(long)-1) & ~(sizeof(long)-1) )
CMSG_DATA  macro  include/linux/socket.h  85  #define CMSG_DATA(cmsg) ((void *)((char *)(cmsg) + CMSG_ALIGN(sizeof(struct cmsghdr))))
CMSG_SPACE  macro  include/linux/socket.h  86  #define CMSG_SPACE(len) (CMSG_ALIGN(sizeof(struct cmsghdr)) + CMSG_ALIGN(len))
CMSG_LEN  macro  include/linux/socket.h  87  #define CMSG_LEN(len) (CMSG_ALIGN(sizeof(struct cmsghdr)) + (len))
__CMSG_FIRSTHDR  macro  include/linux/socket.h  91  #define __CMSG_FIRSTHDR(ctl,len) ((len) >= sizeof(struct cmsghdr) ? (struct cmsghdr *)(ctl) : (struct cmsghdr *)NULL)
CMSG_FIRSTHDR  macro  include/linux/socket.h  92  #define CMSG_FIRSTHDR(msg) __CMSG_FIRSTHDR((msg)->msg_control,(msg)->msg_controllen)
CMSG_OK  macro  include/linux/socket.h  96  #define CMSG_OK(mhdr,cmsg) ((cmsg)->cmsg_len >= sizeof(struct cmsghdr) && (cmsg)->cmsg_len <= (unsigned long) ((mhdr)->msg_controllen - ((char *)(cmsg) - (char *)(mhdr)->msg_control)))
__cmsg_nxthdr  function  include/linux/socket.h  112  static inline struct cmsghdr * __cmsg_nxthdr(void *__ctl,__kernel_size_t __size,struct cmsghdr *__cmsg)
cmsg_nxthdr  function  include/linux/socket.h  123  static inline struct cmsghdr * cmsg_nxthdr (struct msghdr *__msg,struct cmsghdr *__cmsg)
SCM_RIGHTS  macro  include/linux/socket.h  130  #define SCM_RIGHTS 0x01
SCM_CREDENTIALS  macro  include/linux/socket.h  131  #define SCM_CREDENTIALS 0x02
SCM_SECURITY  macro  include/linux/socket.h  132  #define SCM_SECURITY 0x03
ucred  struct  include/linux/socket.h  134  struct ucred {
AF_UNSPEC  macro  include/linux/socket.h  141  #define AF_UNSPEC 0
AF_UNIX  macro  include/linux/socket.h  142  #define AF_UNIX 1
AF_LOCAL  macro  include/linux/socket.h  143  #define AF_LOCAL 1
AF_INET  macro  include/linux/socket.h  144  #define AF_INET 2
AF_AX25  macro  include/linux/socket.h  145  #define AF_AX25 3
AF_IPX  macro  include/linux/socket.h  146  #define AF_IPX 4
AF_APPLETALK  macro  include/linux/socket.h  147  #define AF_APPLETALK 5
AF_NETROM  macro  include/linux/socket.h  148  #define AF_NETROM 6
AF_BRIDGE  macro  include/linux/socket.h  149  #define AF_BRIDGE 7
AF_ATMPVC  macro  include/linux/socket.h  150  #define AF_ATMPVC 8
AF_X25  macro  include/linux/socket.h  151  #define AF_X25 9
AF_INET6  macro  include/linux/socket.h  152  #define AF_INET6 10
AF_ROSE  macro  include/linux/socket.h  153  #define AF_ROSE 11
AF_DECnet  macro  include/linux/socket.h  154  #define AF_DECnet 12
AF_NETBEUI  macro  include/linux/socket.h  155  #define AF_NETBEUI 13
AF_SECURITY  macro  include/linux/socket.h  156  #define AF_SECURITY 14
AF_KEY  macro  include/linux/socket.h  157  #define AF_KEY 15
AF_NETLINK  macro  include/linux/socket.h  158  #define AF_NETLINK 16
AF_ROUTE  macro  include/linux/socket.h  159  #define AF_ROUTE AF_NETLINK
AF_PACKET  macro  include/linux/socket.h  160  #define AF_PACKET 17
AF_ASH  macro  include/linux/socket.h  161  #define AF_ASH 18
AF_ECONET  macro  include/linux/socket.h  162  #define AF_ECONET 19
AF_ATMSVC  macro  include/linux/socket.h  163  #define AF_ATMSVC 20
AF_RDS  macro  include/linux/socket.h  164  #define AF_RDS 21
AF_SNA  macro  include/linux/socket.h  165  #define AF_SNA 22
AF_IRDA  macro  include/linux/socket.h  166  #define AF_IRDA 23
AF_PPPOX  macro  include/linux/socket.h  167  #define AF_PPPOX 24
AF_WANPIPE  macro  include/linux/socket.h  168  #define AF_WANPIPE 25
AF_LLC  macro  include/linux/socket.h  169  #define AF_LLC 26
AF_CAN  macro  include/linux/socket.h  170  #define AF_CAN 29
AF_TIPC  macro  include/linux/socket.h  171  #define AF_TIPC 30
AF_BLUETOOTH  macro  include/linux/socket.h  172  #define AF_BLUETOOTH 31
AF_IUCV  macro  include/linux/socket.h  173  #define AF_IUCV 32
AF_RXRPC  macro  include/linux/socket.h  174  #define AF_RXRPC 33
AF_ISDN  macro  include/linux/socket.h  175  #define AF_ISDN 34
AF_PHONET  macro  include/linux/socket.h  176  #define AF_PHONET 35
AF_IEEE802154  macro  include/linux/socket.h  177  #define AF_IEEE802154 36
AF_CAIF  macro  include/linux/socket.h  178  #define AF_CAIF 37
AF_ALG  macro  include/linux/socket.h  179  #define AF_ALG 38
AF_NFC  macro  include/linux/socket.h  180  #define AF_NFC 39
AF_MAX  macro  include/linux/socket.h  181  #define AF_MAX 40
PF_UNSPEC  macro  include/linux/socket.h  184  #define PF_UNSPEC AF_UNSPEC
PF_UNIX  macro  include/linux/socket.h  185  #define PF_UNIX AF_UNIX
PF_LOCAL  macro  include/linux/socket.h  186  #define PF_LOCAL AF_LOCAL
PF_INET  macro  include/linux/socket.h  187  #define PF_INET AF_INET
PF_AX25  macro  include/linux/socket.h  188  #define PF_AX25 AF_AX25
PF_IPX  macro  include/linux/socket.h  189  #define PF_IPX AF_IPX
PF_APPLETALK  macro  include/linux/socket.h  190  #define PF_APPLETALK AF_APPLETALK
PF_NETROM  macro  include/linux/socket.h  191  #define PF_NETROM AF_NETROM
PF_BRIDGE  macro  include/linux/socket.h  192  #define PF_BRIDGE AF_BRIDGE
PF_ATMPVC  macro  include/linux/socket.h  193  #define PF_ATMPVC AF_ATMPVC
PF_X25  macro  include/linux/socket.h  194  #define PF_X25 AF_X25
PF_INET6  macro  include/linux/socket.h  195  #define PF_INET6 AF_INET6
PF_ROSE  macro  include/linux/socket.h  196  #define PF_ROSE AF_ROSE
PF_DECnet  macro  include/linux/socket.h  197  #define PF_DECnet AF_DECnet
PF_NETBEUI  macro  include/linux/socket.h  198  #define PF_NETBEUI AF_NETBEUI
PF_SECURITY  macro  include/linux/socket.h  199  #define PF_SECURITY AF_SECURITY
PF_KEY  macro  include/linux/socket.h  200  #define PF_KEY AF_KEY
PF_NETLINK  macro  include/linux/socket.h  201  #define PF_NETLINK AF_NETLINK
PF_ROUTE  macro  include/linux/socket.h  202  #define PF_ROUTE AF_ROUTE
PF_PACKET  macro  include/linux/socket.h  203  #define PF_PACKET AF_PACKET
PF_ASH  macro  include/linux/socket.h  204  #define PF_ASH AF_ASH
PF_ECONET  macro  include/linux/socket.h  205  #define PF_ECONET AF_ECONET
PF_ATMSVC  macro  include/linux/socket.h  206  #define PF_ATMSVC AF_ATMSVC
PF_RDS  macro  include/linux/socket.h  207  #define PF_RDS AF_RDS
PF_SNA  macro  include/linux/socket.h  208  #define PF_SNA AF_SNA
PF_IRDA  macro  include/linux/socket.h  209  #define PF_IRDA AF_IRDA
PF_PPPOX  macro  include/linux/socket.h  210  #define PF_PPPOX AF_PPPOX
PF_WANPIPE  macro  include/linux/socket.h  211  #define PF_WANPIPE AF_WANPIPE
PF_LLC  macro  include/linux/socket.h  212  #define PF_LLC AF_LLC
PF_CAN  macro  include/linux/socket.h  213  #define PF_CAN AF_CAN
PF_TIPC  macro  include/linux/socket.h  214  #define PF_TIPC AF_TIPC
PF_BLUETOOTH  macro  include/linux/socket.h  215  #define PF_BLUETOOTH AF_BLUETOOTH
PF_IUCV  macro  include/linux/socket.h  216  #define PF_IUCV AF_IUCV
PF_RXRPC  macro  include/linux/socket.h  217  #define PF_RXRPC AF_RXRPC
PF_ISDN  macro  include/linux/socket.h  218  #define PF_ISDN AF_ISDN
PF_PHONET  macro  include/linux/socket.h  219  #define PF_PHONET AF_PHONET
PF_IEEE802154  macro  include/linux/socket.h  220  #define PF_IEEE802154 AF_IEEE802154
PF_CAIF  macro  include/linux/socket.h  221  #define PF_CAIF AF_CAIF
PF_ALG  macro  include/linux/socket.h  222  #define PF_ALG AF_ALG
PF_NFC  macro  include/linux/socket.h  223  #define PF_NFC AF_NFC
PF_MAX  macro  include/linux/socket.h  224  #define PF_MAX AF_MAX
SOMAXCONN  macro  include/linux/socket.h  227  #define SOMAXCONN 128
MSG_OOB  macro  include/linux/socket.h  233  #define MSG_OOB 1
MSG_PEEK  macro  include/linux/socket.h  234  #define MSG_PEEK 2
MSG_DONTROUTE  macro  include/linux/socket.h  235  #define MSG_DONTROUTE 4
MSG_TRYHARD  macro  include/linux/socket.h  236  #define MSG_TRYHARD 4
MSG_CTRUNC  macro  include/linux/socket.h  237  #define MSG_CTRUNC 8
MSG_PROBE  macro  include/linux/socket.h  238  #define MSG_PROBE 0x10
MSG_TRUNC  macro  include/linux/socket.h  239  #define MSG_TRUNC 0x20
MSG_DONTWAIT  macro  include/linux/socket.h  240  #define MSG_DONTWAIT 0x40
MSG_EOR  macro  include/linux/socket.h  241  #define MSG_EOR 0x80
MSG_WAITALL  macro  include/linux/socket.h  242  #define MSG_WAITALL 0x100
MSG_FIN  macro  include/linux/socket.h  243  #define MSG_FIN 0x200
MSG_SYN  macro  include/linux/socket.h  244  #define MSG_SYN 0x400
MSG_CONFIRM  macro  include/linux/socket.h  245  #define MSG_CONFIRM 0x800
MSG_RST  macro  include/linux/socket.h  246  #define MSG_RST 0x1000
MSG_ERRQUEUE  macro  include/linux/socket.h  247  #define MSG_ERRQUEUE 0x2000
MSG_NOSIGNAL  macro  include/linux/socket.h  248  #define MSG_NOSIGNAL 0x4000
MSG_MORE  macro  include/linux/socket.h  249  #define MSG_MORE 0x8000
MSG_WAITFORONE  macro  include/linux/socket.h  250  #define MSG_WAITFORONE 0x10000
MSG_SENDPAGE_NOTLAST  macro  include/linux/socket.h  251  #define MSG_SENDPAGE_NOTLAST 0x20000
MSG_EOF  macro  include/linux/socket.h  252  #define MSG_EOF MSG_FIN
MSG_FASTOPEN  macro  include/linux/socket.h  254  #define MSG_FASTOPEN 0x20000000
MSG_CMSG_CLOEXEC  macro  include/linux/socket.h  255  #define MSG_CMSG_CLOEXEC 0x40000000
MSG_CMSG_COMPAT  macro  include/linux/socket.h  261  #define MSG_CMSG_COMPAT 0
SOL_IP  macro  include/linux/socket.h  266  #define SOL_IP 0
SOL_TCP  macro  include/linux/socket.h  268  #define SOL_TCP 6
SOL_UDP  macro  include/linux/socket.h  269  #define SOL_UDP 17
SOL_IPV6  macro  include/linux/socket.h  270  #define SOL_IPV6 41
SOL_ICMPV6  macro  include/linux/socket.h  271  #define SOL_ICMPV6 58
SOL_SCTP  macro  include/linux/socket.h  272  #define SOL_SCTP 132
SOL_UDPLITE  macro  include/linux/socket.h  273  #define SOL_UDPLITE 136
SOL_RAW  macro  include/linux/socket.h  274  #define SOL_RAW 255
SOL_IPX  macro  include/linux/socket.h  275  #define SOL_IPX 256
SOL_AX25  macro  include/linux/socket.h  276  #define SOL_AX25 257
SOL_ATALK  macro  include/linux/socket.h  277  #define SOL_ATALK 258
SOL_NETROM  macro  include/linux/socket.h  278  #define SOL_NETROM 259
SOL_ROSE  macro  include/linux/socket.h  279  #define SOL_ROSE 260
SOL_DECNET  macro  include/linux/socket.h  280  #define SOL_DECNET 261
SOL_X25  macro  include/linux/socket.h  281  #define SOL_X25 262
SOL_PACKET  macro  include/linux/socket.h  282  #define SOL_PACKET 263
SOL_ATM  macro  include/linux/socket.h  283  #define SOL_ATM 264
SOL_AAL  macro  include/linux/socket.h  284  #define SOL_AAL 265
SOL_IRDA  macro  include/linux/socket.h  285  #define SOL_IRDA 266
SOL_NETBEUI  macro  include/linux/socket.h  286  #define SOL_NETBEUI 267
SOL_LLC  macro  include/linux/socket.h  287  #define SOL_LLC 268
SOL_DCCP  macro  include/linux/socket.h  288  #define SOL_DCCP 269
SOL_NETLINK  macro  include/linux/socket.h  289  #define SOL_NETLINK 270
SOL_TIPC  macro  include/linux/socket.h  290  #define SOL_TIPC 271
SOL_RXRPC  macro  include/linux/socket.h  291  #define SOL_RXRPC 272
SOL_PPPOL2TP  macro  include/linux/socket.h  292  #define SOL_PPPOL2TP 273
SOL_BLUETOOTH  macro  include/linux/socket.h  293  #define SOL_BLUETOOTH 274
SOL_PNPIPE  macro  include/linux/socket.h  294  #define SOL_PNPIPE 275
SOL_RDS  macro  include/linux/socket.h  295  #define SOL_RDS 276
SOL_IUCV  macro  include/linux/socket.h  296  #define SOL_IUCV 277
SOL_CAIF  macro  include/linux/socket.h  297  #define SOL_CAIF 278
SOL_ALG  macro  include/linux/socket.h  298  #define SOL_ALG 279
IPX_TYPE  macro  include/linux/socket.h  301  #define IPX_TYPE 1
cred_to_ucred  prototype  include/linux/socket.h  303  extern void cred_to_ucred(struct pid *pid,const struct cred *cred,struct ucred *ucred);
memcpy_fromiovec  prototype  include/linux/socket.h  305  extern int memcpy_fromiovec(unsigned char *kdata,struct iovec *iov,int len);
memcpy_fromiovecend  prototype  include/linux/socket.h  307  extern int memcpy_fromiovecend(unsigned char *kdata,const struct iovec *iov,int offset, int len);
csum_partial_copy_fromiovecend  prototype  include/linux/socket.h  311  extern int csum_partial_copy_fromiovecend(unsigned char *kdata,struct iovec *iov,int offset,unsigned int len, __wsum *csump);
verify_iovec  prototype  include/linux/socket.h  313  extern int verify_iovec(struct msghdr *m,struct iovec *iov,struct sockaddr_storage *address,int mode);
memcpy_toiovec  prototype  include/linux/socket.h  314  extern int memcpy_toiovec(struct iovec *v,unsigned char *kdata,int len);
memcpy_toiovecend  prototype  include/linux/socket.h  316  extern int memcpy_toiovecend(const struct iovec *v,unsigned char *kdata,int offset, int len);
move_addr_to_kernel  prototype  include/linux/socket.h  317  extern int move_addr_to_kernel(void __user *uaddr,int ulen,struct sockaddr_storage *kaddr);
put_cmsg  prototype  include/linux/socket.h  318  extern int put_cmsg(struct msghdr*,int level,int type,int len,void *data);
__sys_recvmmsg  prototype  include/linux/socket.h  323  extern int __sys_recvmmsg(int fd,struct mmsghdr __user *mmsg,unsigned int vlen,unsigned int flags, struct timespec *timeout);
__sys_sendmmsg  prototype  include/linux/socket.h  325  extern int __sys_sendmmsg(int fd,struct mmsghdr __user *mmsg,unsigned int vlen, unsigned int flags);
_LINUX_FS_H  macro  include/linux/fs.h  2  #define _LINUX_FS_H
inode_init  prototype  include/linux/fs.h  49  extern void __init inode_init(void);
inode_init_early  prototype  include/linux/fs.h  50  extern void __init inode_init_early(void);
files_init  prototype  include/linux/fs.h  51  extern void __init files_init(unsigned long);
get_max_files  prototype  include/linux/fs.h  54  extern unsigned long get_max_files(void);
MAY_EXEC  macro  include/linux/fs.h  68  #define MAY_EXEC 0x00000001
MAY_WRITE  macro  include/linux/fs.h  69  #define MAY_WRITE 0x00000002
MAY_READ  macro  include/linux/fs.h  70  #define MAY_READ 0x00000004
MAY_APPEND  macro  include/linux/fs.h  71  #define MAY_APPEND 0x00000008
MAY_ACCESS  macro  include/linux/fs.h  72  #define MAY_ACCESS 0x00000010
MAY_OPEN  macro  include/linux/fs.h  73  #define MAY_OPEN 0x00000020
MAY_CHDIR  macro  include/linux/fs.h  74  #define MAY_CHDIR 0x00000040
MAY_NOT_BLOCK  macro  include/linux/fs.h  76  #define MAY_NOT_BLOCK 0x00000080
FMODE_READ  macro  include/linux/fs.h  84  #define FMODE_READ ((__force fmode_t)0x1)
FMODE_WRITE  macro  include/linux/fs.h  86  #define FMODE_WRITE ((__force fmode_t)0x2)
FMODE_LSEEK  macro  include/linux/fs.h  88  #define FMODE_LSEEK ((__force fmode_t)0x4)
FMODE_PREAD  macro  include/linux/fs.h  90  #define FMODE_PREAD ((__force fmode_t)0x8)
FMODE_PWRITE  macro  include/linux/fs.h  92  #define FMODE_PWRITE ((__force fmode_t)0x10)
FMODE_EXEC  macro  include/linux/fs.h  94  #define FMODE_EXEC ((__force fmode_t)0x20)
FMODE_NDELAY  macro  include/linux/fs.h  96  #define FMODE_NDELAY ((__force fmode_t)0x40)
FMODE_EXCL  macro  include/linux/fs.h  98  #define FMODE_EXCL ((__force fmode_t)0x80)
FMODE_WRITE_IOCTL  macro  include/linux/fs.h  101  #define FMODE_WRITE_IOCTL ((__force fmode_t)0x100)
FMODE_32BITHASH  macro  include/linux/fs.h  103  #define FMODE_32BITHASH ((__force fmode_t)0x200)
FMODE_64BITHASH  macro  include/linux/fs.h  105  #define FMODE_64BITHASH ((__force fmode_t)0x400)
FMODE_NOCMTIME  macro  include/linux/fs.h  113  #define FMODE_NOCMTIME ((__force fmode_t)0x800)
FMODE_RANDOM  macro  include/linux/fs.h  116  #define FMODE_RANDOM ((__force fmode_t)0x1000)
FMODE_UNSIGNED_OFFSET  macro  include/linux/fs.h  119  #define FMODE_UNSIGNED_OFFSET ((__force fmode_t)0x2000)
FMODE_PATH  macro  include/linux/fs.h  122  #define FMODE_PATH ((__force fmode_t)0x4000)
FMODE_NONOTIFY  macro  include/linux/fs.h  125  #define FMODE_NONOTIFY ((__force fmode_t)0x1000000)
CHECK_IOVEC_ONLY  macro  include/linux/fs.h  133  #define CHECK_IOVEC_ONLY -1
RW_MASK  macro  include/linux/fs.h  177  #define RW_MASK REQ_WRITE
RWA_MASK  macro  include/linux/fs.h  178  #define RWA_MASK REQ_RAHEAD
READ  macro  include/linux/fs.h  180  #define READ 0
WRITE  macro  include/linux/fs.h  181  #define WRITE RW_MASK
READA  macro  include/linux/fs.h  182  #define READA RWA_MASK
KERNEL_READ  macro  include/linux/fs.h  183  #define KERNEL_READ (READ|REQ_KERNEL)
KERNEL_WRITE  macro  include/linux/fs.h  184  #define KERNEL_WRITE (WRITE|REQ_KERNEL)
READ_SYNC  macro  include/linux/fs.h  186  #define READ_SYNC (READ | REQ_SYNC)
WRITE_SYNC  macro  include/linux/fs.h  187  #define WRITE_SYNC (WRITE | REQ_SYNC | REQ_NOIDLE)
WRITE_ODIRECT  macro  include/linux/fs.h  188  #define WRITE_ODIRECT (WRITE | REQ_SYNC)
WRITE_FLUSH  macro  include/linux/fs.h  189  #define WRITE_FLUSH (WRITE | REQ_SYNC | REQ_NOIDLE | REQ_FLUSH)
WRITE_FUA  macro  include/linux/fs.h  190  #define WRITE_FUA (WRITE | REQ_SYNC | REQ_NOIDLE | REQ_FUA)
WRITE_FLUSH_FUA  macro  include/linux/fs.h  191  #define WRITE_FLUSH_FUA (WRITE | REQ_SYNC | REQ_NOIDLE | REQ_FLUSH | REQ_FUA)
ATTR_MODE  macro  include/linux/fs.h  197  #define ATTR_MODE (1 << 0)
ATTR_UID  macro  include/linux/fs.h  198  #define ATTR_UID (1 << 1)
ATTR_GID  macro  include/linux/fs.h  199  #define ATTR_GID (1 << 2)
ATTR_SIZE  macro  include/linux/fs.h  200  #define ATTR_SIZE (1 << 3)
ATTR_ATIME  macro  include/linux/fs.h  201  #define ATTR_ATIME (1 << 4)
ATTR_MTIME  macro  include/linux/fs.h  202  #define ATTR_MTIME (1 << 5)
ATTR_CTIME  macro  include/linux/fs.h  203  #define ATTR_CTIME (1 << 6)
ATTR_ATIME_SET  macro  include/linux/fs.h  204  #define ATTR_ATIME_SET (1 << 7)
ATTR_MTIME_SET  macro  include/linux/fs.h  205  #define ATTR_MTIME_SET (1 << 8)
ATTR_FORCE  macro  include/linux/fs.h  206  #define ATTR_FORCE (1 << 9)
ATTR_ATTR_FLAG  macro  include/linux/fs.h  207  #define ATTR_ATTR_FLAG (1 << 10)
ATTR_KILL_SUID  macro  include/linux/fs.h  208  #define ATTR_KILL_SUID (1 << 11)
ATTR_KILL_SGID  macro  include/linux/fs.h  209  #define ATTR_KILL_SGID (1 << 12)
ATTR_FILE  macro  include/linux/fs.h  210  #define ATTR_FILE (1 << 13)
ATTR_KILL_PRIV  macro  include/linux/fs.h  211  #define ATTR_KILL_PRIV (1 << 14)
ATTR_OPEN  macro  include/linux/fs.h  212  #define ATTR_OPEN (1 << 15)
ATTR_TIMES_SET  macro  include/linux/fs.h  213  #define ATTR_TIMES_SET (1 << 16)
iattr  struct  include/linux/fs.h  224  struct iattr {
positive_aop_returns  enum  include/linux/fs.h  273  enum positive_aop_returns {
AOP_FLAG_UNINTERRUPTIBLE  macro  include/linux/fs.h  278  #define AOP_FLAG_UNINTERRUPTIBLE 0x0001
AOP_FLAG_CONT_EXPAND  macro  include/linux/fs.h  279  #define AOP_FLAG_CONT_EXPAND 0x0002
AOP_FLAG_NOFS  macro  include/linux/fs.h  280  #define AOP_FLAG_NOFS 0x0004
iov_iter  struct  include/linux/fs.h  291  struct iov_iter {
iov_iter_copy_from_user_atomic  prototype  include/linux/fs.h  299  size_t iov_iter_copy_from_user_atomic(struct page *page,struct iov_iter *i, unsigned long offset, size_t bytes);
iov_iter_copy_from_user  prototype  include/linux/fs.h  301  size_t iov_iter_copy_from_user(struct page *page,struct iov_iter *i, unsigned long offset, size_t bytes);
iov_iter_advance  prototype  include/linux/fs.h  302  void iov_iter_advance(struct iov_iter *i,size_t bytes);
iov_iter_fault_in_readable  prototype  include/linux/fs.h  303  int iov_iter_fault_in_readable(struct iov_iter *i,size_t bytes);
iov_iter_single_seg_count  prototype  include/linux/fs.h  304  size_t iov_iter_single_seg_count(struct iov_iter *i);
iov_iter_init  function  include/linux/fs.h  308  static inline void iov_iter_init(struct iov_iter *i,const struct iovec *iov, unsigned long nr_segs,size_t count, size_t written)
iov_iter_count  function  include/linux/fs.h  318  static inline size_t iov_iter_count(struct iov_iter *i)
address_space_operations  struct  include/linux/fs.h  345  struct address_space_operations {
pagecache_write_begin  prototype  include/linux/fs.h  399  int pagecache_write_begin(struct file *,struct address_space *mapping,loff_t pos, unsigned len, unsigned flags,struct page **pagep, void **fsdata);
pagecache_write_end  prototype  include/linux/fs.h  403  int pagecache_write_end(struct file *,struct address_space *mapping,loff_t pos, unsigned len, unsigned copied,struct page *page, void *fsdata);
address_space  struct  include/linux/fs.h  406  struct address_space {
block_device  struct  include/linux/fs.h  431  struct block_device {
PAGECACHE_TAG_DIRTY  macro  include/linux/fs.h  472  #define PAGECACHE_TAG_DIRTY 0
PAGECACHE_TAG_WRITEBACK  macro  include/linux/fs.h  473  #define PAGECACHE_TAG_WRITEBACK 1
PAGECACHE_TAG_TOWRITE  macro  include/linux/fs.h  474  #define PAGECACHE_TAG_TOWRITE 2
mapping_tagged  prototype  include/linux/fs.h  476  int mapping_tagged(struct address_space *mapping,int tag);
mapping_mapped  function  include/linux/fs.h  481  static inline int mapping_mapped(struct address_space *mapping)
mapping_writably_mapped  function  include/linux/fs.h  493  static inline int mapping_writably_mapped(struct address_space *mapping)
__NEED_I_SIZE_ORDERED  macro  include/linux/fs.h  503  #define __NEED_I_SIZE_ORDERED
i_size_ordered_init  macro  include/linux/fs.h  506  #define i_size_ordered_init(inode) do { } while (0)
ACL_NOT_CACHED  macro  include/linux/fs.h  510  #define ACL_NOT_CACHED ((void *)(-1))
IOP_FASTPERM  macro  include/linux/fs.h  512  #define IOP_FASTPERM 0x0001
IOP_LOOKUP  macro  include/linux/fs.h  513  #define IOP_LOOKUP 0x0002
IOP_NOFOLLOW  macro  include/linux/fs.h  514  #define IOP_NOFOLLOW 0x0004
inode  struct  include/linux/fs.h  521  struct inode {
inode_unhashed  function  include/linux/fs.h  612  static inline int inode_unhashed(struct inode *inode)
inode_i_mutex_lock_class  enum  include/linux/fs.h  628  enum inode_i_mutex_lock_class
i_size_read  function  include/linux/fs.h  647  static inline loff_t i_size_read(const struct inode *inode)
i_size_write  function  include/linux/fs.h  675  static inline void i_size_write(struct inode *inode,loff_t i_size)
i_uid_read  function  include/linux/fs.h  695  static inline uid_t i_uid_read(const struct inode *inode)
i_gid_read  function  include/linux/fs.h  700  static inline gid_t i_gid_read(const struct inode *inode)
i_uid_write  function  include/linux/fs.h  705  static inline void i_uid_write(struct inode *inode,uid_t uid)
i_gid_write  function  include/linux/fs.h  710  static inline void i_gid_write(struct inode *inode,gid_t gid)
iminor  function  include/linux/fs.h  715  static inline unsigned iminor(const struct inode *inode)
imajor  function  include/linux/fs.h  720  static inline unsigned imajor(const struct inode *inode)
I_BDEV  prototype  include/linux/fs.h  725  extern struct block_device *I_BDEV(struct inode *inode);
fown_struct  struct  include/linux/fs.h  727  struct fown_struct {
file_ra_state  struct  include/linux/fs.h  738  struct file_ra_state {
ra_has_index  function  include/linux/fs.h  752  static inline int ra_has_index(struct file_ra_state *ra,pgoff_t index)
FILE_MNT_WRITE_TAKEN  macro  include/linux/fs.h  758  #define FILE_MNT_WRITE_TAKEN 1
FILE_MNT_WRITE_RELEASED  macro  include/linux/fs.h  759  #define FILE_MNT_WRITE_RELEASED 2
file  struct  include/linux/fs.h  761  struct file {
f_dentry  macro  include/linux/fs.h  771  #define f_dentry f_path.dentry
f_vfsmnt  macro  include/linux/fs.h  772  #define f_vfsmnt f_path.mnt
file_handle  struct  include/linux/fs.h  809  struct file_handle {
get_file  function  include/linux/fs.h  816  static inline struct file *get_file(struct file *f)
fput_atomic  macro  include/linux/fs.h  821  #define fput_atomic(x) atomic_long_add_unless(&(x)->f_count,-1,1)
file_count  macro  include/linux/fs.h  822  #define file_count(x) atomic_long_read(&(x)->f_count)
file_take_write  function  include/linux/fs.h  857  static inline void file_take_write(struct file *filp) {}
file_release_write  function  include/linux/fs.h  858  static inline void file_release_write(struct file *filp) {}
file_reset_write  function  include/linux/fs.h  859  static inline void file_reset_write(struct file *filp) {}
file_check_state  function  include/linux/fs.h  860  static inline void file_check_state(struct file *filp) {}
file_check_writeable  function  include/linux/fs.h  861  static inline int file_check_writeable(struct file *filp)
MAX_NON_LFS  macro  include/linux/fs.h  867  #define MAX_NON_LFS ((1UL<<31) - 1)
MAX_LFS_FILESIZE  macro  include/linux/fs.h  874  #define MAX_LFS_FILESIZE ((loff_t)0x7fffffffffffffffLL)
FL_POSIX  macro  include/linux/fs.h  877  #define FL_POSIX 1
FL_FLOCK  macro  include/linux/fs.h  878  #define FL_FLOCK 2
FL_ACCESS  macro  include/linux/fs.h  879  #define FL_ACCESS 8
FL_EXISTS  macro  include/linux/fs.h  880  #define FL_EXISTS 16
FL_LEASE  macro  include/linux/fs.h  881  #define FL_LEASE 32
FL_CLOSE  macro  include/linux/fs.h  882  #define FL_CLOSE 64
FL_SLEEP  macro  include/linux/fs.h  883  #define FL_SLEEP 128
FL_DOWNGRADE_PENDING  macro  include/linux/fs.h  884  #define FL_DOWNGRADE_PENDING 256
FL_UNLOCK_PENDING  macro  include/linux/fs.h  885  #define FL_UNLOCK_PENDING 512
FILE_LOCK_DEFERRED  macro  include/linux/fs.h  891  #define FILE_LOCK_DEFERRED 1
file_lock_operations  struct  include/linux/fs.h  902  struct file_lock_operations {
lock_manager_operations  struct  include/linux/fs.h  907  struct lock_manager_operations {
lock_manager  struct  include/linux/fs.h  915  struct lock_manager {
locks_start_grace  prototype  include/linux/fs.h  920  void locks_start_grace(struct net *,struct lock_manager *);
locks_end_grace  prototype  include/linux/fs.h  921  void locks_end_grace(struct lock_manager *);
locks_in_grace  prototype  include/linux/fs.h  922  int locks_in_grace(struct net *);
file_lock  struct  include/linux/fs.h  927  struct file_lock {
INT_LIMIT  macro  include/linux/fs.h  960  #define INT_LIMIT(x) (~((x)1 << (sizeof(x)*8 - 1)))
OFFSET_MAX  macro  include/linux/fs.h  961  #define OFFSET_MAX INT_LIMIT(loff_t)
OFFT_OFFSET_MAX  macro  include/linux/fs.h  962  #define OFFT_OFFSET_MAX INT_LIMIT(off_t)
send_sigio  prototype  include/linux/fs.h  967  extern void send_sigio(struct fown_struct *fown,int fd,int band);
fcntl_getlk  function  include/linux/fs.h  1011  static inline int fcntl_getlk(struct file *file,struct flock __user *user)
fcntl_setlk  function  include/linux/fs.h  1017  static inline int fcntl_setlk(unsigned int fd,struct file *file,unsigned int cmd, struct flock __user *user)
fcntl_getlk64  function  include/linux/fs.h  1023  static inline int fcntl_getlk64(struct file *file,struct flock64 __user *user)
fcntl_setlk64  function  include/linux/fs.h  1029  static inline int fcntl_setlk64(unsigned int fd,struct file *file,unsigned int cmd, struct flock64 __user *user)
fcntl_setlease  function  include/linux/fs.h  1034  static inline int fcntl_setlease(unsigned int fd,struct file *filp,long arg)
fcntl_getlease  function  include/linux/fs.h  1039  static inline int fcntl_getlease(struct file *filp)
locks_free_lock  prototype  include/linux/fs.h  984  void locks_free_lock(struct file_lock *fl);
locks_init_lock  function  include/linux/fs.h  1044  static inline void locks_init_lock(struct file_lock *fl)
locks_alloc_lock  prototype  include/linux/fs.h  986  extern struct file_lock * locks_alloc_lock(void);
locks_copy_lock  function  include/linux/fs.h  1054  static inline void locks_copy_lock(struct file_lock *new,struct file_lock *fl)
__locks_copy_lock  function  include/linux/fs.h  1049  static inline void __locks_copy_lock(struct file_lock *new,struct file_lock *fl)
locks_remove_posix  function  include/linux/fs.h  1059  static inline void locks_remove_posix(struct file *filp,fl_owner_t owner)
locks_remove_flock  function  include/linux/fs.h  1064  static inline void locks_remove_flock(struct file *filp)
locks_release_private  prototype  include/linux/fs.h  991  extern void locks_release_private(struct file_lock *);
posix_test_lock  function  include/linux/fs.h  1069  static inline void posix_test_lock(struct file *filp,struct file_lock *fl)
posix_lock_file  function  include/linux/fs.h  1075  static inline int posix_lock_file(struct file *filp,struct file_lock *fl,struct file_lock *conflock)
posix_lock_file_wait  function  include/linux/fs.h  1080  static inline int posix_lock_file_wait(struct file *filp,struct file_lock *fl)
posix_unblock_lock  function  include/linux/fs.h  1086  static inline int posix_unblock_lock(struct file *filp,struct file_lock *waiter)
vfs_test_lock  function  include/linux/fs.h  1091  static inline int vfs_test_lock(struct file *filp,struct file_lock *fl)
vfs_lock_file  function  include/linux/fs.h  1097  static inline int vfs_lock_file(struct file *filp,unsigned int cmd,struct file_lock *fl, struct file_lock *conf)
vfs_cancel_lock  function  include/linux/fs.h  1102  static inline int vfs_cancel_lock(struct file *filp,struct file_lock *fl)
flock_lock_file_wait  function  include/linux/fs.h  1108  static inline int flock_lock_file_wait(struct file *filp,struct file_lock *request)
__break_lease  function  include/linux/fs.h  1113  static inline int __break_lease(struct inode *inode,unsigned int mode)
lease_get_mtime  function  include/linux/fs.h  1118  static inline void lease_get_mtime(struct inode *inode,struct timespec *time)
generic_setlease  function  include/linux/fs.h  1124  static inline int generic_setlease(struct file *filp,long arg,struct file_lock **flp)
vfs_setlease  function  include/linux/fs.h  1130  static inline int vfs_setlease(struct file *filp,long arg,struct file_lock **lease)
lease_modify  function  include/linux/fs.h  1135  static inline int lease_modify(struct file_lock **before,int arg)
lock_may_read  function  include/linux/fs.h  1141  static inline int lock_may_read(struct inode *inode,loff_t start,unsigned long len)
lock_may_write  function  include/linux/fs.h  1147  static inline int lock_may_write(struct inode *inode,loff_t start,unsigned long len)
locks_delete_block  function  include/linux/fs.h  1152  static inline void locks_delete_block(struct file_lock *waiter)
lock_flocks  function  include/linux/fs.h  1156  static inline void lock_flocks(void)
unlock_flocks  function  include/linux/fs.h  1160  static inline void unlock_flocks(void)
fasync_struct  struct  include/linux/fs.h  1167  struct fasync_struct {
FASYNC_MAGIC  macro  include/linux/fs.h  1176  #define FASYNC_MAGIC 0x4601
fasync_helper  prototype  include/linux/fs.h  1179  extern int fasync_helper(int,struct file *,int,struct fasync_struct **);
fasync_insert_entry  prototype  include/linux/fs.h  1180  extern struct fasync_struct *fasync_insert_entry(int,struct file *,struct fasync_struct **,struct fasync_struct *);
fasync_remove_entry  prototype  include/linux/fs.h  1181  extern int fasync_remove_entry(struct file *,struct fasync_struct **);
fasync_alloc  prototype  include/linux/fs.h  1182  extern struct fasync_struct *fasync_alloc(void);
fasync_free  prototype  include/linux/fs.h  1183  extern void fasync_free(struct fasync_struct *);
kill_fasync  prototype  include/linux/fs.h  1186  extern void kill_fasync(struct fasync_struct **,int,int);
__f_setown  prototype  include/linux/fs.h  1188  extern int __f_setown(struct file *filp,struct pid *,enum pid_type,int force);
f_setown  prototype  include/linux/fs.h  1189  extern int f_setown(struct file *filp,unsigned long arg,int force);
f_delown  prototype  include/linux/fs.h  1190  extern void f_delown(struct file *filp);
f_getown  prototype  include/linux/fs.h  1191  extern pid_t f_getown(struct file *filp);
send_sigurg  prototype  include/linux/fs.h  1192  extern int send_sigurg(struct fown_struct *fown);
MNT_FORCE  macro  include/linux/fs.h  1200  #define MNT_FORCE 0x00000001
MNT_DETACH  macro  include/linux/fs.h  1201  #define MNT_DETACH 0x00000002
MNT_EXPIRE  macro  include/linux/fs.h  1202  #define MNT_EXPIRE 0x00000004
UMOUNT_NOFOLLOW  macro  include/linux/fs.h  1203  #define UMOUNT_NOFOLLOW 0x00000008
UMOUNT_UNUSED  macro  include/linux/fs.h  1204  #define UMOUNT_UNUSED 0x80000000
SB_FREEZE_LEVELS  macro  include/linux/fs.h  1219  #define SB_FREEZE_LEVELS (SB_FREEZE_COMPLETE - 1)
sb_writers  struct  include/linux/fs.h  1221  struct sb_writers {
super_block  struct  include/linux/fs.h  1234  struct super_block {
prune_icache_sb  prototype  include/linux/fs.h  1326  extern void prune_icache_sb(struct super_block *sb,int nr_to_scan);
prune_dcache_sb  prototype  include/linux/fs.h  1327  extern void prune_dcache_sb(struct super_block *sb,int nr_to_scan);
current_fs_time  prototype  include/linux/fs.h  1329  extern struct timespec current_fs_time(struct super_block *sb);
__sb_end_write  prototype  include/linux/fs.h  1335  void __sb_end_write(struct super_block *sb,int level);
__sb_start_write  prototype  include/linux/fs.h  1336  int __sb_start_write(struct super_block *sb,int level,bool wait);
sb_end_write  function  include/linux/fs.h  1345  static inline void sb_end_write(struct super_block *sb)
sb_end_pagefault  function  include/linux/fs.h  1357  static inline void sb_end_pagefault(struct super_block *sb)
sb_end_intwrite  function  include/linux/fs.h  1369  static inline void sb_end_intwrite(struct super_block *sb)
sb_start_write  function  include/linux/fs.h  1393  static inline void sb_start_write(struct super_block *sb)
sb_start_write_trylock  function  include/linux/fs.h  1398  static inline int sb_start_write_trylock(struct super_block *sb)
sb_start_pagefault  function  include/linux/fs.h  1422  static inline void sb_start_pagefault(struct super_block *sb)
sb_start_intwrite  function  include/linux/fs.h  1440  static inline void sb_start_intwrite(struct super_block *sb)
inode_owner_or_capable  prototype  include/linux/fs.h  1446  extern bool inode_owner_or_capable(const struct inode *inode);
vfs_create  prototype  include/linux/fs.h  1451  extern int vfs_create(struct inode *,struct dentry *,umode_t,bool);
vfs_mkdir  prototype  include/linux/fs.h  1452  extern int vfs_mkdir(struct inode *,struct dentry *,umode_t);
vfs_mknod  prototype  include/linux/fs.h  1453  extern int vfs_mknod(struct inode *,struct dentry *,umode_t,dev_t);
vfs_symlink  prototype  include/linux/fs.h  1454  extern int vfs_symlink(struct inode *,struct dentry *,const char *);
vfs_link  prototype  include/linux/fs.h  1455  extern int vfs_link(struct dentry *,struct inode *,struct dentry *);
vfs_rmdir  prototype  include/linux/fs.h  1456  extern int vfs_rmdir(struct inode *,struct dentry *);
vfs_unlink  prototype  include/linux/fs.h  1457  extern int vfs_unlink(struct inode *,struct dentry *);
vfs_rename  prototype  include/linux/fs.h  1458  extern int vfs_rename(struct inode *,struct dentry *,struct inode *,struct dentry *);
dentry_unhash  prototype  include/linux/fs.h  1463  extern void dentry_unhash(struct dentry *dentry);
inode_init_owner  prototype  include/linux/fs.h  1469  extern void inode_init_owner(struct inode *inode,const struct inode *dir,umode_t mode);
fiemap_extent_info  struct  include/linux/fs.h  1473  struct fiemap_extent_info {
fiemap_fill_next_extent  prototype  include/linux/fs.h  1481  int fiemap_fill_next_extent(struct fiemap_extent_info *info,u64 logical,u64 phys, u64 len, u32 flags);
fiemap_check_flags  prototype  include/linux/fs.h  1482  int fiemap_check_flags(struct fiemap_extent_info *fieinfo,u32 fs_flags);
DT_UNKNOWN  macro  include/linux/fs.h  1490  #define DT_UNKNOWN 0
DT_FIFO  macro  include/linux/fs.h  1491  #define DT_FIFO 1
DT_CHR  macro  include/linux/fs.h  1492  #define DT_CHR 2
DT_DIR  macro  include/linux/fs.h  1493  #define DT_DIR 4
DT_BLK  macro  include/linux/fs.h  1494  #define DT_BLK 6
DT_REG  macro  include/linux/fs.h  1495  #define DT_REG 8
DT_LNK  macro  include/linux/fs.h  1496  #define DT_LNK 10
DT_SOCK  macro  include/linux/fs.h  1497  #define DT_SOCK 12
DT_WHT  macro  include/linux/fs.h  1498  #define DT_WHT 14
HAVE_COMPAT_IOCTL  macro  include/linux/fs.h  1512  #define HAVE_COMPAT_IOCTL 1
HAVE_UNLOCKED_IOCTL  macro  include/linux/fs.h  1513  #define HAVE_UNLOCKED_IOCTL 1
file_operations  struct  include/linux/fs.h  1515  struct file_operations {
inode_operations  struct  include/linux/fs.h  1546  struct inode_operations {
rw_copy_check_uvector  prototype  include/linux/fs.h  1581  ssize_t rw_copy_check_uvector(int type,const struct iovec __user * uvector,unsigned long nr_segs, unsigned long fast_segs,struct iovec *fast_pointer,struct iovec **ret_pointer);
vfs_read  prototype  include/linux/fs.h  1583  extern ssize_t vfs_read(struct file *,char __user *,size_t,loff_t *);
vfs_write  prototype  include/linux/fs.h  1584  extern ssize_t vfs_write(struct file *,const char __user *,size_t,loff_t *);
vfs_readv  prototype  include/linux/fs.h  1586  extern ssize_t vfs_readv(struct file *,const struct iovec __user *,unsigned long, loff_t *);
vfs_writev  prototype  include/linux/fs.h  1588  extern ssize_t vfs_writev(struct file *,const struct iovec __user *,unsigned long, loff_t *);
super_operations  struct  include/linux/fs.h  1590  struct super_operations {
S_SYNC  macro  include/linux/fs.h  1622  #define S_SYNC 1
S_NOATIME  macro  include/linux/fs.h  1623  #define S_NOATIME 2
S_APPEND  macro  include/linux/fs.h  1624  #define S_APPEND 4
S_IMMUTABLE  macro  include/linux/fs.h  1625  #define S_IMMUTABLE 8
S_DEAD  macro  include/linux/fs.h  1626  #define S_DEAD 16
S_NOQUOTA  macro  include/linux/fs.h  1627  #define S_NOQUOTA 32
S_DIRSYNC  macro  include/linux/fs.h  1628  #define S_DIRSYNC 64
S_NOCMTIME  macro  include/linux/fs.h  1629  #define S_NOCMTIME 128
S_SWAPFILE  macro  include/linux/fs.h  1630  #define S_SWAPFILE 256
S_PRIVATE  macro  include/linux/fs.h  1631  #define S_PRIVATE 512
S_IMA  macro  include/linux/fs.h  1632  #define S_IMA 1024
S_AUTOMOUNT  macro  include/linux/fs.h  1633  #define S_AUTOMOUNT 2048
S_NOSEC  macro  include/linux/fs.h  1634  #define S_NOSEC 4096
__IS_FLG  macro  include/linux/fs.h  1649  #define __IS_FLG(inode,flg) ((inode)->i_sb->s_flags & (flg))
IS_RDONLY  macro  include/linux/fs.h  1651  #define IS_RDONLY(inode) ((inode)->i_sb->s_flags & MS_RDONLY)
IS_SYNC  macro  include/linux/fs.h  1653  #define IS_SYNC(inode) (__IS_FLG(inode,MS_SYNCHRONOUS) || ((inode)->i_flags & S_SYNC))
IS_DIRSYNC  macro  include/linux/fs.h  1655  #define IS_DIRSYNC(inode) (__IS_FLG(inode,MS_SYNCHRONOUS|MS_DIRSYNC) || ((inode)->i_flags & (S_SYNC|S_DIRSYNC)))
IS_MANDLOCK  macro  include/linux/fs.h  1656  #define IS_MANDLOCK(inode) __IS_FLG(inode,MS_MANDLOCK)
IS_NOATIME  macro  include/linux/fs.h  1657  #define IS_NOATIME(inode) __IS_FLG(inode,MS_RDONLY|MS_NOATIME)
IS_I_VERSION  macro  include/linux/fs.h  1658  #define IS_I_VERSION(inode) __IS_FLG(inode,MS_I_VERSION)
IS_NOQUOTA  macro  include/linux/fs.h  1660  #define IS_NOQUOTA(inode) ((inode)->i_flags & S_NOQUOTA)
IS_APPEND  macro  include/linux/fs.h  1661  #define IS_APPEND(inode) ((inode)->i_flags & S_APPEND)
IS_IMMUTABLE  macro  include/linux/fs.h  1662  #define IS_IMMUTABLE(inode) ((inode)->i_flags & S_IMMUTABLE)
IS_POSIXACL  macro  include/linux/fs.h  1663  #define IS_POSIXACL(inode) __IS_FLG(inode,MS_POSIXACL)
IS_DEADDIR  macro  include/linux/fs.h  1665  #define IS_DEADDIR(inode) ((inode)->i_flags & S_DEAD)
IS_NOCMTIME  macro  include/linux/fs.h  1666  #define IS_NOCMTIME(inode) ((inode)->i_flags & S_NOCMTIME)
IS_SWAPFILE  macro  include/linux/fs.h  1667  #define IS_SWAPFILE(inode) ((inode)->i_flags & S_SWAPFILE)
IS_PRIVATE  macro  include/linux/fs.h  1668  #define IS_PRIVATE(inode) ((inode)->i_flags & S_PRIVATE)
IS_IMA  macro  include/linux/fs.h  1669  #define IS_IMA(inode) ((inode)->i_flags & S_IMA)
IS_AUTOMOUNT  macro  include/linux/fs.h  1670  #define IS_AUTOMOUNT(inode) ((inode)->i_flags & S_AUTOMOUNT)
IS_NOSEC  macro  include/linux/fs.h  1671  #define IS_NOSEC(inode) ((inode)->i_flags & S_NOSEC)
I_DIRTY_SYNC  macro  include/linux/fs.h  1726  #define I_DIRTY_SYNC (1 << 0)
I_DIRTY_DATASYNC  macro  include/linux/fs.h  1727  #define I_DIRTY_DATASYNC (1 << 1)
I_DIRTY_PAGES  macro  include/linux/fs.h  1728  #define I_DIRTY_PAGES (1 << 2)
__I_NEW  macro  include/linux/fs.h  1729  #define __I_NEW 3
I_NEW  macro  include/linux/fs.h  1730  #define I_NEW (1 << __I_NEW)
I_WILL_FREE  macro  include/linux/fs.h  1731  #define I_WILL_FREE (1 << 4)
I_FREEING  macro  include/linux/fs.h  1732  #define I_FREEING (1 << 5)
I_CLEAR  macro  include/linux/fs.h  1733  #define I_CLEAR (1 << 6)
__I_SYNC  macro  include/linux/fs.h  1734  #define __I_SYNC 7
I_SYNC  macro  include/linux/fs.h  1735  #define I_SYNC (1 << __I_SYNC)
I_REFERENCED  macro  include/linux/fs.h  1736  #define I_REFERENCED (1 << 8)
__I_DIO_WAKEUP  macro  include/linux/fs.h  1737  #define __I_DIO_WAKEUP 9
I_DIO_WAKEUP  macro  include/linux/fs.h  1738  #define I_DIO_WAKEUP (1 << I_DIO_WAKEUP)
I_DIRTY  macro  include/linux/fs.h  1740  #define I_DIRTY (I_DIRTY_SYNC | I_DIRTY_DATASYNC | I_DIRTY_PAGES)
__mark_inode_dirty  prototype  include/linux/fs.h  1742  extern void __mark_inode_dirty(struct inode *,int);
mark_inode_dirty  function  include/linux/fs.h  1743  static inline void mark_inode_dirty(struct inode *inode)
mark_inode_dirty_sync  function  include/linux/fs.h  1748  static inline void mark_inode_dirty_sync(struct inode *inode)
inc_nlink  prototype  include/linux/fs.h  1753  extern void inc_nlink(struct inode *inode);
drop_nlink  prototype  include/linux/fs.h  1754  extern void drop_nlink(struct inode *inode);
clear_nlink  prototype  include/linux/fs.h  1755  extern void clear_nlink(struct inode *inode);
set_nlink  prototype  include/linux/fs.h  1756  extern void set_nlink(struct inode *inode,unsigned int nlink);
inode_inc_link_count  function  include/linux/fs.h  1758  static inline void inode_inc_link_count(struct inode *inode)
inode_dec_link_count  function  include/linux/fs.h  1764  static inline void inode_dec_link_count(struct inode *inode)
inode_inc_iversion  function  include/linux/fs.h  1778  static inline void inode_inc_iversion(struct inode *inode)
file_time_flags  enum  include/linux/fs.h  1785  enum file_time_flags {
touch_atime  prototype  include/linux/fs.h  1792  extern void touch_atime(struct path *);
file_accessed  function  include/linux/fs.h  1793  static inline void file_accessed(struct file *file)
sync_inode  prototype  include/linux/fs.h  1799  int sync_inode(struct inode *inode,struct writeback_control *wbc);
sync_inode_metadata  prototype  include/linux/fs.h  1800  int sync_inode_metadata(struct inode *inode,int wait);
file_system_type  struct  include/linux/fs.h  1802  struct file_system_type {
FS_REQUIRES_DEV  macro  include/linux/fs.h  1805  #define FS_REQUIRES_DEV 1
FS_BINARY_MOUNTDATA  macro  include/linux/fs.h  1806  #define FS_BINARY_MOUNTDATA 2
FS_HAS_SUBTYPE  macro  include/linux/fs.h  1807  #define FS_HAS_SUBTYPE 4
FS_USERNS_MOUNT  macro  include/linux/fs.h  1808  #define FS_USERNS_MOUNT 8
FS_USERNS_DEV_MOUNT  macro  include/linux/fs.h  1809  #define FS_USERNS_DEV_MOUNT 16
FS_REVAL_DOT  macro  include/linux/fs.h  1810  #define FS_REVAL_DOT 16384
FS_RENAME_DOES_D_MOVE  macro  include/linux/fs.h  1811  #define FS_RENAME_DOES_D_MOVE 32768
mount_ns  prototype  include/linux/fs.h  1830  extern struct dentry *mount_ns(struct file_system_type *fs_type,int flags,void *data, int (*fill_super)(struct super_block *, void *, int));
mount_bdev  prototype  include/linux/fs.h  1833  extern struct dentry *mount_bdev(struct file_system_type *fs_type,int flags, const char *dev_name, void *data,int (*fill_super)(struct super_block *, void *, int));
mount_single  prototype  include/linux/fs.h  1836  extern struct dentry *mount_single(struct file_system_type *fs_type,int flags, void *data,int (*fill_super)(struct super_block *, void *, int));
mount_nodev  prototype  include/linux/fs.h  1839  extern struct dentry *mount_nodev(struct file_system_type *fs_type,int flags, void *data,int (*fill_super)(struct super_block *, void *, int));
mount_subtree  prototype  include/linux/fs.h  1840  extern struct dentry *mount_subtree(struct vfsmount *mnt,const char *path);
generic_shutdown_super  prototype  include/linux/fs.h  1841  void generic_shutdown_super(struct super_block *sb);
kill_block_super  prototype  include/linux/fs.h  1842  void kill_block_super(struct super_block *sb);
kill_anon_super  prototype  include/linux/fs.h  1843  void kill_anon_super(struct super_block *sb);
kill_litter_super  prototype  include/linux/fs.h  1844  void kill_litter_super(struct super_block *sb);
deactivate_super  prototype  include/linux/fs.h  1845  void deactivate_super(struct super_block *sb);
deactivate_locked_super  prototype  include/linux/fs.h  1846  void deactivate_locked_super(struct super_block *sb);
set_anon_super  prototype  include/linux/fs.h  1847  int set_anon_super(struct super_block *s,void *data);
get_anon_bdev  prototype  include/linux/fs.h  1848  int get_anon_bdev(dev_t *);
free_anon_bdev  prototype  include/linux/fs.h  1849  void free_anon_bdev(dev_t);
sget  prototype  include/linux/fs.h  1853  struct super_block *sget(struct file_system_type *type,int (*test)(struct super_block *,void *),int (*set)(struct super_block *,void *),int flags, void *data);
mount_pseudo  prototype  include/linux/fs.h  1857  extern struct dentry *mount_pseudo(struct file_system_type *,char *,const struct super_operations *ops,const struct dentry_operations *dops,unsigned long);
fops_get  macro  include/linux/fs.h  1861  #define fops_get(fops) (((fops) && try_module_get((fops)->owner) ? (fops) : NULL))
fops_put  macro  include/linux/fs.h  1863  #define fops_put(fops) do { if (fops) module_put((fops)->owner); } while(0)
register_filesystem  prototype  include/linux/fs.h  1865  extern int register_filesystem(struct file_system_type *);
unregister_filesystem  prototype  include/linux/fs.h  1866  extern int unregister_filesystem(struct file_system_type *);
kern_mount_data  prototype  include/linux/fs.h  1867  extern struct vfsmount *kern_mount_data(struct file_system_type *,void *data);
kern_mount  macro  include/linux/fs.h  1868  #define kern_mount(type) kern_mount_data(type,NULL)
kern_unmount  prototype  include/linux/fs.h  1869  extern void kern_unmount(struct vfsmount *mnt);
may_umount_tree  prototype  include/linux/fs.h  1870  extern int may_umount_tree(struct vfsmount *);
may_umount  prototype  include/linux/fs.h  1871  extern int may_umount(struct vfsmount *);
do_mount  prototype  include/linux/fs.h  1872  extern long do_mount(const char *,const char *,const char *,unsigned long,void *);
collect_mounts  prototype  include/linux/fs.h  1873  extern struct vfsmount *collect_mounts(struct path *);
drop_collected_mounts  prototype  include/linux/fs.h  1874  extern void drop_collected_mounts(struct vfsmount *);
iterate_mounts  prototype  include/linux/fs.h  1876  extern int iterate_mounts(int (*)(struct vfsmount *,void *),void *,struct vfsmount *);
vfs_statfs  prototype  include/linux/fs.h  1877  extern int vfs_statfs(struct path *,struct kstatfs *);
user_statfs  prototype  include/linux/fs.h  1878  extern int user_statfs(const char __user *,struct kstatfs *);
fd_statfs  prototype  include/linux/fs.h  1879  extern int fd_statfs(int,struct kstatfs *);
vfs_ustat  prototype  include/linux/fs.h  1880  extern int vfs_ustat(dev_t,struct kstatfs *);
freeze_super  prototype  include/linux/fs.h  1881  extern int freeze_super(struct super_block *super);
thaw_super  prototype  include/linux/fs.h  1882  extern int thaw_super(struct super_block *super);
our_mnt  prototype  include/linux/fs.h  1883  extern bool our_mnt(struct vfsmount *mnt);
current_umask  prototype  include/linux/fs.h  1885  extern int current_umask(void);
MAX_RW_COUNT  macro  include/linux/fs.h  1890  #define MAX_RW_COUNT (INT_MAX & PAGE_CACHE_MASK)
rw_verify_area  prototype  include/linux/fs.h  1891  extern int rw_verify_area(int,struct file *,loff_t *,size_t);
FLOCK_VERIFY_READ  macro  include/linux/fs.h  1893  #define FLOCK_VERIFY_READ 1
FLOCK_VERIFY_WRITE  macro  include/linux/fs.h  1894  #define FLOCK_VERIFY_WRITE 2
locks_mandatory_locked  function  include/linux/fs.h  1948  static inline int locks_mandatory_locked(struct inode *inode)
locks_mandatory_area  function  include/linux/fs.h  1955  static inline int locks_mandatory_area(int rw,struct inode *inode,struct file *filp, loff_t offset,size_t count)
__mandatory_lock  function  include/linux/fs.h  1960  static inline int __mandatory_lock(struct inode *inode)
mandatory_lock  function  include/linux/fs.h  1965  static inline int mandatory_lock(struct inode *inode)
locks_verify_locked  function  include/linux/fs.h  1970  static inline int locks_verify_locked(struct inode *inode)
locks_verify_truncate  function  include/linux/fs.h  1976  static inline int locks_verify_truncate(struct inode *inode,struct file *filp,size_t size)
break_lease  function  include/linux/fs.h  1981  static inline int break_lease(struct inode *inode,unsigned int mode)
filename  struct  include/linux/fs.h  1990  struct filename {
vfs_truncate  prototype  include/linux/fs.h  1997  extern long vfs_truncate(struct path *,loff_t);
do_truncate  prototype  include/linux/fs.h  1999  extern int do_truncate(struct dentry *,loff_t start,unsigned int time_attrs,struct file *filp);
do_fallocate  prototype  include/linux/fs.h  2001  extern int do_fallocate(struct file *file,int mode,loff_t offset,loff_t len);
do_sys_open  prototype  include/linux/fs.h  2003  extern long do_sys_open(int dfd,const char __user *filename,int flags,umode_t mode);
file_open_name  prototype  include/linux/fs.h  2004  extern struct file *file_open_name(struct filename *,int,umode_t);
filp_open  prototype  include/linux/fs.h  2005  extern struct file *filp_open(const char *,int,umode_t);
file_open_root  prototype  include/linux/fs.h  2007  extern struct file *file_open_root(struct dentry *,struct vfsmount *,const char *, int);
dentry_open  prototype  include/linux/fs.h  2008  extern struct file * dentry_open(const struct path *,int,const struct cred *);
filp_close  prototype  include/linux/fs.h  2009  extern int filp_close(struct file *,fl_owner_t id);
getname  prototype  include/linux/fs.h  2011  extern struct filename *getname(const char __user *);
finish_open  prototype  include/linux/fs.h  2019  extern int finish_open(struct file *file,struct dentry *dentry,int (*open)(struct inode *, struct file *),int *opened);
finish_no_open  prototype  include/linux/fs.h  2020  extern int finish_no_open(struct file *file,struct dentry *dentry);
ioctl_preallocate  prototype  include/linux/fs.h  2024  extern int ioctl_preallocate(struct file *filp,void __user *argp);
vfs_caches_init_early  prototype  include/linux/fs.h  2027  extern void __init vfs_caches_init_early(void);
vfs_caches_init  prototype  include/linux/fs.h  2028  extern void __init vfs_caches_init(unsigned long);
final_putname  prototype  include/linux/fs.h  2032  extern void final_putname(struct filename *name);
__getname  macro  include/linux/fs.h  2034  #define __getname() kmem_cache_alloc(names_cachep,GFP_KERNEL)
__putname  macro  include/linux/fs.h  2035  #define __putname(name) kmem_cache_free(names_cachep,(void *)(name))
putname  prototype  include/linux/fs.h  2039  extern void putname(struct filename *name);
register_blkdev  prototype  include/linux/fs.h  2043  extern int register_blkdev(unsigned int,const char *);
unregister_blkdev  prototype  include/linux/fs.h  2044  extern void unregister_blkdev(unsigned int,const char *);
bdget  prototype  include/linux/fs.h  2045  extern struct block_device *bdget(dev_t);
bdgrab  prototype  include/linux/fs.h  2046  extern struct block_device *bdgrab(struct block_device *bdev);
bd_set_size  prototype  include/linux/fs.h  2047  extern void bd_set_size(struct block_device *,loff_t size);
bd_forget  function  include/linux/fs.h  2059  static inline void bd_forget(struct inode *inode) {}
bdput  prototype  include/linux/fs.h  2049  extern void bdput(struct block_device *);
invalidate_bdev  function  include/linux/fs.h  2062  static inline void invalidate_bdev(struct block_device *bdev) {}
iterate_bdevs  function  include/linux/fs.h  2074  static inline void iterate_bdevs(void (*f)(struct block_device *,void *),void *arg)
sync_blockdev  function  include/linux/fs.h  2060  static inline int sync_blockdev(struct block_device *bdev) { return 0; }
kill_bdev  function  include/linux/fs.h  2061  static inline void kill_bdev(struct block_device *bdev) {}
freeze_bdev  function  include/linux/fs.h  2064  static inline struct super_block *freeze_bdev(struct block_device *sb)
emergency_thaw_all  prototype  include/linux/fs.h  2055  extern void emergency_thaw_all(void);
thaw_bdev  function  include/linux/fs.h  2069  static inline int thaw_bdev(struct block_device *bdev,struct super_block *sb)
fsync_bdev  prototype  include/linux/fs.h  2057  extern int fsync_bdev(struct block_device *);
sync_filesystem  prototype  include/linux/fs.h  2078  extern int sync_filesystem(struct super_block *);
ioctl_by_bdev  prototype  include/linux/fs.h  2084  extern int ioctl_by_bdev(struct block_device *,unsigned,unsigned long);
blkdev_ioctl  prototype  include/linux/fs.h  2085  extern int blkdev_ioctl(struct block_device *,fmode_t,unsigned,unsigned long);
compat_blkdev_ioctl  prototype  include/linux/fs.h  2086  extern long compat_blkdev_ioctl(struct file *,unsigned,unsigned long);
blkdev_get  prototype  include/linux/fs.h  2087  extern int blkdev_get(struct block_device *bdev,fmode_t mode,void *holder);
blkdev_get_by_path  prototype  include/linux/fs.h  2089  extern struct block_device *blkdev_get_by_path(const char *path,fmode_t mode,void *holder);
blkdev_get_by_dev  prototype  include/linux/fs.h  2091  extern struct block_device *blkdev_get_by_dev(dev_t dev,fmode_t mode,void *holder);
blkdev_put  prototype  include/linux/fs.h  2092  extern int blkdev_put(struct block_device *bdev,fmode_t mode);
bd_link_disk_holder  function  include/linux/fs.h  2099  static inline int bd_link_disk_holder(struct block_device *bdev,struct gendisk *disk)
bd_unlink_disk_holder  function  include/linux/fs.h  2104  static inline void bd_unlink_disk_holder(struct block_device *bdev,struct gendisk *disk)
CHRDEV_MAJOR_HASH_SIZE  macro  include/linux/fs.h  2111  #define CHRDEV_MAJOR_HASH_SIZE 255
alloc_chrdev_region  prototype  include/linux/fs.h  2112  extern int alloc_chrdev_region(dev_t *,unsigned,unsigned,const char *);
register_chrdev_region  prototype  include/linux/fs.h  2113  extern int register_chrdev_region(dev_t,unsigned,const char *);
__register_chrdev  prototype  include/linux/fs.h  2116  extern int __register_chrdev(unsigned int major,unsigned int baseminor,unsigned int count, const char *name,const struct file_operations *fops);
__unregister_chrdev  prototype  include/linux/fs.h  2118  extern void __unregister_chrdev(unsigned int major,unsigned int baseminor,unsigned int count, const char *name);
unregister_chrdev_region  prototype  include/linux/fs.h  2119  extern void unregister_chrdev_region(dev_t,unsigned);
chrdev_show  prototype  include/linux/fs.h  2120  extern void chrdev_show(struct seq_file *,off_t);
register_chrdev  function  include/linux/fs.h  2123  static inline int register_chrdev(unsigned int major,const char *name,const struct file_operations *fops)
unregister_chrdev  function  include/linux/fs.h  2128  static inline void unregister_chrdev(unsigned int major,const char *name)
BDEVNAME_SIZE  macro  include/linux/fs.h  2134  #define BDEVNAME_SIZE 32
BDEVT_SIZE  macro  include/linux/fs.h  2135  #define BDEVT_SIZE 10
BLKDEV_MAJOR_HASH_SIZE  macro  include/linux/fs.h  2145  #define BLKDEV_MAJOR_HASH_SIZE 0
__bdevname  prototype  include/linux/fs.h  2139  extern const char *__bdevname(dev_t,char *buffer);
bdevname  prototype  include/linux/fs.h  2140  extern const char *bdevname(struct block_device *bdev,char *buffer);
lookup_bdev  prototype  include/linux/fs.h  2141  extern struct block_device *lookup_bdev(const char *);
blkdev_show  prototype  include/linux/fs.h  2142  extern void blkdev_show(struct seq_file *,off_t);
init_special_inode  prototype  include/linux/fs.h  2148  extern void init_special_inode(struct inode *,umode_t,dev_t);
make_bad_inode  prototype  include/linux/fs.h  2151  extern void make_bad_inode(struct inode *);
is_bad_inode  prototype  include/linux/fs.h  2152  extern int is_bad_inode(struct inode *);
bio_rw  macro  include/linux/fs.h  2162  #define bio_rw(bio) ((bio)->bi_rw & (RW_MASK | RWA_MASK))
bio_data_dir  macro  include/linux/fs.h  2167  #define bio_data_dir(bio) ((bio)->bi_rw & 1)
check_disk_size_change  prototype  include/linux/fs.h  2170  extern void check_disk_size_change(struct gendisk *disk,struct block_device *bdev);
revalidate_disk  prototype  include/linux/fs.h  2171  extern int revalidate_disk(struct gendisk *);
check_disk_change  prototype  include/linux/fs.h  2172  extern int check_disk_change(struct block_device *);
__invalidate_device  prototype  include/linux/fs.h  2173  extern int __invalidate_device(struct block_device *,bool);
invalidate_partition  prototype  include/linux/fs.h  2174  extern int invalidate_partition(struct gendisk *,int);
invalidate_mapping_pages  prototype  include/linux/fs.h  2177  unsigned long invalidate_mapping_pages(struct address_space *mapping,pgoff_t start, pgoff_t end);
invalidate_remote_inode  function  include/linux/fs.h  2179  static inline void invalidate_remote_inode(struct inode *inode)
invalidate_inode_pages2  prototype  include/linux/fs.h  2185  extern int invalidate_inode_pages2(struct address_space *mapping);
invalidate_inode_pages2_range  prototype  include/linux/fs.h  2187  extern int invalidate_inode_pages2_range(struct address_space *mapping,pgoff_t start, pgoff_t end);
write_inode_now  prototype  include/linux/fs.h  2188  extern int write_inode_now(struct inode *,int);
filemap_fdatawrite  prototype  include/linux/fs.h  2189  extern int filemap_fdatawrite(struct address_space *);
filemap_flush  prototype  include/linux/fs.h  2190  extern int filemap_flush(struct address_space *);
filemap_fdatawait  prototype  include/linux/fs.h  2191  extern int filemap_fdatawait(struct address_space *);
filemap_fdatawait_range  prototype  include/linux/fs.h  2193  extern int filemap_fdatawait_range(struct address_space *,loff_t lstart,loff_t lend);
filemap_write_and_wait  prototype  include/linux/fs.h  2194  extern int filemap_write_and_wait(struct address_space *mapping);
filemap_write_and_wait_range  prototype  include/linux/fs.h  2196  extern int filemap_write_and_wait_range(struct address_space *mapping,loff_t lstart, loff_t lend);
__filemap_fdatawrite_range  prototype  include/linux/fs.h  2198  extern int __filemap_fdatawrite_range(struct address_space *mapping,loff_t start, loff_t end, int sync_mode);
filemap_fdatawrite_range  prototype  include/linux/fs.h  2200  extern int filemap_fdatawrite_range(struct address_space *mapping,loff_t start, loff_t end);
vfs_fsync_range  prototype  include/linux/fs.h  2203  extern int vfs_fsync_range(struct file *file,loff_t start,loff_t end,int datasync);
vfs_fsync  prototype  include/linux/fs.h  2204  extern int vfs_fsync(struct file *file,int datasync);
generic_write_sync  prototype  include/linux/fs.h  2205  extern int generic_write_sync(struct file *file,loff_t pos,loff_t count);
emergency_sync  prototype  include/linux/fs.h  2206  extern void emergency_sync(void);
emergency_remount  prototype  include/linux/fs.h  2207  extern void emergency_remount(void);
bmap  prototype  include/linux/fs.h  2209  extern sector_t bmap(struct inode *,sector_t);
notify_change  prototype  include/linux/fs.h  2211  extern int notify_change(struct dentry *,struct iattr *);
inode_permission  prototype  include/linux/fs.h  2212  extern int inode_permission(struct inode *,int);
generic_permission  prototype  include/linux/fs.h  2213  extern int generic_permission(struct inode *,int);
execute_ok  function  include/linux/fs.h  2215  static inline bool execute_ok(struct inode *inode)
get_write_access  function  include/linux/fs.h  2236  static inline int get_write_access(struct inode *inode)
deny_write_access  function  include/linux/fs.h  2240  static inline int deny_write_access(struct file *file)
put_write_access  function  include/linux/fs.h  2245  static inline void put_write_access(struct inode * inode)
allow_write_access  function  include/linux/fs.h  2249  static inline void allow_write_access(struct file *file)
i_readcount_dec  function  include/linux/fs.h  2265  static inline void i_readcount_dec(struct inode *inode)
i_readcount_inc  function  include/linux/fs.h  2269  static inline void i_readcount_inc(struct inode *inode)
do_pipe_flags  prototype  include/linux/fs.h  2274  extern int do_pipe_flags(int *,int);
kernel_read  prototype  include/linux/fs.h  2276  extern int kernel_read(struct file *,loff_t,char *,unsigned long);
open_exec  prototype  include/linux/fs.h  2277  extern struct file * open_exec(const char *);
is_subdir  prototype  include/linux/fs.h  2280  extern int is_subdir(struct dentry *,struct dentry *);
path_is_under  prototype  include/linux/fs.h  2281  extern int path_is_under(struct path *,struct path *);
find_inode_number  prototype  include/linux/fs.h  2282  extern ino_t find_inode_number(struct dentry *,struct qstr *);
default_llseek  prototype  include/linux/fs.h  2287  extern loff_t default_llseek(struct file *file,loff_t offset,int whence);
vfs_llseek  prototype  include/linux/fs.h  2289  extern loff_t vfs_llseek(struct file *file,loff_t offset,int whence);
inode_init_always  prototype  include/linux/fs.h  2291  extern int inode_init_always(struct super_block *,struct inode *);
inode_init_once  prototype  include/linux/fs.h  2292  extern void inode_init_once(struct inode *);
address_space_init_once  prototype  include/linux/fs.h  2293  extern void address_space_init_once(struct address_space *mapping);
ihold  prototype  include/linux/fs.h  2294  extern void ihold(struct inode * inode);
iput  prototype  include/linux/fs.h  2295  extern void iput(struct inode *);
igrab  prototype  include/linux/fs.h  2296  extern struct inode * igrab(struct inode *);
iunique  prototype  include/linux/fs.h  2297  extern ino_t iunique(struct super_block *,ino_t);
inode_needs_sync  prototype  include/linux/fs.h  2298  extern int inode_needs_sync(struct inode *inode);
generic_delete_inode  prototype  include/linux/fs.h  2299  extern int generic_delete_inode(struct inode *inode);
generic_drop_inode  function  include/linux/fs.h  2300  static inline int generic_drop_inode(struct inode *inode)
ilookup5_nowait  prototype  include/linux/fs.h  2307  extern struct inode *ilookup5_nowait(struct super_block *sb,unsigned long hashval, int (*test)(struct inode *, void *),void *data);
ilookup5  prototype  include/linux/fs.h  2309  extern struct inode *ilookup5(struct super_block *sb,unsigned long hashval,int (*test)(struct inode *, void *), void *data);
ilookup  prototype  include/linux/fs.h  2310  extern struct inode *ilookup(struct super_block *sb,unsigned long ino);
iget5_locked  prototype  include/linux/fs.h  2312  extern struct inode * iget5_locked(struct super_block *,unsigned long,int (*test)(struct inode *,void *),int (*set)(struct inode *,void *),void *);
iget_locked  prototype  include/linux/fs.h  2313  extern struct inode * iget_locked(struct super_block *,unsigned long);
insert_inode_locked4  prototype  include/linux/fs.h  2314  extern int insert_inode_locked4(struct inode *,unsigned long,int (*test)(struct inode *,void *),void *);
insert_inode_locked  prototype  include/linux/fs.h  2315  extern int insert_inode_locked(struct inode *);
lockdep_annotate_inode_mutex_key  function  include/linux/fs.h  2319  static inline void lockdep_annotate_inode_mutex_key(struct inode *inode) { };
unlock_new_inode  prototype  include/linux/fs.h  2321  extern void unlock_new_inode(struct inode *);
get_next_ino  prototype  include/linux/fs.h  2322  extern unsigned int get_next_ino(void);
__iget  prototype  include/linux/fs.h  2324  extern void __iget(struct inode * inode);
iget_failed  prototype  include/linux/fs.h  2325  extern void iget_failed(struct inode *);
clear_inode  prototype  include/linux/fs.h  2326  extern void clear_inode(struct inode *);
__destroy_inode  prototype  include/linux/fs.h  2327  extern void __destroy_inode(struct inode *);
new_inode_pseudo  prototype  include/linux/fs.h  2328  extern struct inode *new_inode_pseudo(struct super_block *sb);
new_inode  prototype  include/linux/fs.h  2329  extern struct inode *new_inode(struct super_block *sb);
free_inode_nonrcu  prototype  include/linux/fs.h  2330  extern void free_inode_nonrcu(struct inode *inode);
should_remove_suid  prototype  include/linux/fs.h  2331  extern int should_remove_suid(struct dentry *);
file_remove_suid  prototype  include/linux/fs.h  2332  extern int file_remove_suid(struct file *);
__insert_inode_hash  prototype  include/linux/fs.h  2334  extern void __insert_inode_hash(struct inode *,unsigned long hashval);
insert_inode_hash  function  include/linux/fs.h  2335  static inline void insert_inode_hash(struct inode *inode)
__remove_inode_hash  prototype  include/linux/fs.h  2340  extern void __remove_inode_hash(struct inode *);
remove_inode_hash  function  include/linux/fs.h  2341  static inline void remove_inode_hash(struct inode *inode)
inode_sb_list_add  prototype  include/linux/fs.h  2347  extern void inode_sb_list_add(struct inode *inode);
submit_bio  prototype  include/linux/fs.h  2350  extern void submit_bio(int,struct bio *);
bdev_read_only  prototype  include/linux/fs.h  2351  extern int bdev_read_only(struct block_device *);
set_blocksize  prototype  include/linux/fs.h  2353  extern int set_blocksize(struct block_device *,int);
sb_set_blocksize  prototype  include/linux/fs.h  2354  extern int sb_set_blocksize(struct super_block *,int);
sb_min_blocksize  prototype  include/linux/fs.h  2355  extern int sb_min_blocksize(struct super_block *,int);
generic_file_mmap  prototype  include/linux/fs.h  2357  extern int generic_file_mmap(struct file *,struct vm_area_struct *);
generic_file_readonly_mmap  prototype  include/linux/fs.h  2358  extern int generic_file_readonly_mmap(struct file *,struct vm_area_struct *);
generic_file_remap_pages  prototype  include/linux/fs.h  2360  extern int generic_file_remap_pages(struct vm_area_struct *,unsigned long addr,unsigned long size, pgoff_t pgoff);
file_read_actor  prototype  include/linux/fs.h  2361  extern int file_read_actor(read_descriptor_t * desc,struct page *page,unsigned long offset,unsigned long size);
generic_write_checks  prototype  include/linux/fs.h  2362  int generic_write_checks(struct file *file,loff_t *pos,size_t *count,int isblk);
generic_file_aio_read  prototype  include/linux/fs.h  2363  extern ssize_t generic_file_aio_read(struct kiocb *,const struct iovec *,unsigned long,loff_t);
__generic_file_aio_write  prototype  include/linux/fs.h  2365  extern ssize_t __generic_file_aio_write(struct kiocb *,const struct iovec *,unsigned long,loff_t *);
generic_file_aio_write  prototype  include/linux/fs.h  2366  extern ssize_t generic_file_aio_write(struct kiocb *,const struct iovec *,unsigned long,loff_t);
generic_file_direct_write  prototype  include/linux/fs.h  2368  extern ssize_t generic_file_direct_write(struct kiocb *,const struct iovec *,unsigned long *, loff_t, loff_t *, size_t, size_t);
generic_file_buffered_write  prototype  include/linux/fs.h  2370  extern ssize_t generic_file_buffered_write(struct kiocb *,const struct iovec *,unsigned long, loff_t, loff_t *, size_t, ssize_t);
do_sync_read  prototype  include/linux/fs.h  2371  extern ssize_t do_sync_read(struct file *filp,char __user *buf,size_t len,loff_t *ppos);
do_sync_write  prototype  include/linux/fs.h  2372  extern ssize_t do_sync_write(struct file *filp,const char __user *buf,size_t len,loff_t *ppos);
generic_segment_checks  prototype  include/linux/fs.h  2374  extern int generic_segment_checks(const struct iovec *iov,unsigned long *nr_segs, size_t *count, int access_flags);
blkdev_aio_write  prototype  include/linux/fs.h  2378  extern ssize_t blkdev_aio_write(struct kiocb *iocb,const struct iovec *iov,unsigned long nr_segs, loff_t pos);
blkdev_fsync  prototype  include/linux/fs.h  2380  extern int blkdev_fsync(struct file *filp,loff_t start,loff_t end,int datasync);
block_sync_page  prototype  include/linux/fs.h  2381  extern void block_sync_page(struct page *page);
generic_file_splice_read  prototype  include/linux/fs.h  2385  extern ssize_t generic_file_splice_read(struct file *,loff_t *,struct pipe_inode_info *, size_t, unsigned int);
default_file_splice_read  prototype  include/linux/fs.h  2387  extern ssize_t default_file_splice_read(struct file *,loff_t *,struct pipe_inode_info *, size_t, unsigned int);
generic_file_splice_write  prototype  include/linux/fs.h  2389  extern ssize_t generic_file_splice_write(struct pipe_inode_info *,struct file *, loff_t *, size_t, unsigned int);
generic_splice_sendpage  prototype  include/linux/fs.h  2391  extern ssize_t generic_splice_sendpage(struct pipe_inode_info *pipe,struct file *out, loff_t *, size_t len, unsigned int flags);
do_splice_direct  prototype  include/linux/fs.h  2393  extern long do_splice_direct(struct file *in,loff_t *ppos,struct file *out,size_t len, unsigned int flags);
file_ra_state_init  prototype  include/linux/fs.h  2396  file_ra_state_init(struct file_ra_state *ra,struct address_space *mapping);
noop_llseek  prototype  include/linux/fs.h  2397  extern loff_t noop_llseek(struct file *file,loff_t offset,int whence);
no_llseek  prototype  include/linux/fs.h  2398  extern loff_t no_llseek(struct file *file,loff_t offset,int whence);
generic_file_llseek  prototype  include/linux/fs.h  2399  extern loff_t generic_file_llseek(struct file *file,loff_t offset,int whence);
generic_file_llseek_size  prototype  include/linux/fs.h  2401  extern loff_t generic_file_llseek_size(struct file *file,loff_t offset,int whence, loff_t maxsize, loff_t eof);
generic_file_open  prototype  include/linux/fs.h  2402  extern int generic_file_open(struct inode * inode,struct file * filp);
nonseekable_open  prototype  include/linux/fs.h  2403  extern int nonseekable_open(struct inode * inode,struct file * filp);
xip_file_read  prototype  include/linux/fs.h  2407  extern ssize_t xip_file_read(struct file *filp,char __user *buf,size_t len,loff_t *ppos);
xip_file_mmap  prototype  include/linux/fs.h  2408  extern int xip_file_mmap(struct file * file,struct vm_area_struct * vma);
xip_file_write  prototype  include/linux/fs.h  2410  extern ssize_t xip_file_write(struct file *filp,const char __user *buf,size_t len, loff_t *ppos);
xip_truncate_page  function  include/linux/fs.h  2413  static inline int xip_truncate_page(struct address_space *mapping,loff_t from)
dio_end_io  prototype  include/linux/fs.h  2431  void dio_end_io(struct bio *bio,int error);
__blockdev_direct_IO  prototype  include/linux/fs.h  2436  ssize_t __blockdev_direct_IO(int rw,struct kiocb *iocb,struct inode *inode,struct block_device *bdev, const struct iovec *iov, loff_t offset,unsigned long nr_segs, get_block_t get_block, dio_iodone_t end_io,dio_submit_t submit_io,	int flags);
blockdev_direct_IO  function  include/linux/fs.h  2440  static inline ssize_t blockdev_direct_IO(int rw,struct kiocb *iocb,struct inode *inode, const struct iovec *iov, loff_t offset,unsigned long nr_segs, get_block_t get_block)
inode_dio_wait  prototype  include/linux/fs.h  2448  void inode_dio_wait(struct inode *inode);
inode_dio_done  prototype  include/linux/fs.h  2449  void inode_dio_done(struct inode *inode);
special_file  macro  include/linux/fs.h  2453  #define special_file(m) (S_ISCHR(m)||S_ISBLK(m)||S_ISFIFO(m)||S_ISSOCK(m))
vfs_readlink  prototype  include/linux/fs.h  2455  extern int vfs_readlink(struct dentry *,char __user *,int,const char *);
vfs_follow_link  prototype  include/linux/fs.h  2456  extern int vfs_follow_link(struct nameidata *,const char *);
page_readlink  prototype  include/linux/fs.h  2457  extern int page_readlink(struct dentry *,char __user *,int);
page_follow_link_light  prototype  include/linux/fs.h  2458  extern void *page_follow_link_light(struct dentry *,struct nameidata *);
page_put_link  prototype  include/linux/fs.h  2459  extern void page_put_link(struct dentry *,struct nameidata *,void *);
__page_symlink  prototype  include/linux/fs.h  2461  extern int __page_symlink(struct inode *inode,const char *symname,int len,int nofs);
page_symlink  prototype  include/linux/fs.h  2462  extern int page_symlink(struct inode *inode,const char *symname,int len);
generic_readlink  prototype  include/linux/fs.h  2464  extern int generic_readlink(struct dentry *,char __user *,int);
generic_fillattr  prototype  include/linux/fs.h  2465  extern void generic_fillattr(struct inode *,struct kstat *);
vfs_getattr  prototype  include/linux/fs.h  2466  extern int vfs_getattr(struct vfsmount *,struct dentry *,struct kstat *);
__inode_add_bytes  prototype  include/linux/fs.h  2467  void __inode_add_bytes(struct inode *inode,loff_t bytes);
inode_add_bytes  prototype  include/linux/fs.h  2468  void inode_add_bytes(struct inode *inode,loff_t bytes);
inode_sub_bytes  prototype  include/linux/fs.h  2469  void inode_sub_bytes(struct inode *inode,loff_t bytes);
inode_get_bytes  prototype  include/linux/fs.h  2470  loff_t inode_get_bytes(struct inode *inode);
inode_set_bytes  prototype  include/linux/fs.h  2471  void inode_set_bytes(struct inode *inode,loff_t bytes);
vfs_readdir  prototype  include/linux/fs.h  2473  extern int vfs_readdir(struct file *,filldir_t,void *);
vfs_stat  prototype  include/linux/fs.h  2475  extern int vfs_stat(const char __user *,struct kstat *);
vfs_lstat  prototype  include/linux/fs.h  2476  extern int vfs_lstat(const char __user *,struct kstat *);
vfs_fstat  prototype  include/linux/fs.h  2477  extern int vfs_fstat(unsigned int,struct kstat *);
vfs_fstatat  prototype  include/linux/fs.h  2478  extern int vfs_fstatat(int ,const char __user *,struct kstat *,int);
do_vfs_ioctl  prototype  include/linux/fs.h  2481  extern int do_vfs_ioctl(struct file *filp,unsigned int fd,unsigned int cmd,unsigned long arg);
__generic_block_fiemap  prototype  include/linux/fs.h  2485  extern int __generic_block_fiemap(struct inode *inode,struct fiemap_extent_info *fieinfo,loff_t start, loff_t len,get_block_t *get_block);
generic_block_fiemap  prototype  include/linux/fs.h  2488  extern int generic_block_fiemap(struct inode *inode,struct fiemap_extent_info *fieinfo, u64 start,u64 len, get_block_t *get_block);
get_filesystem  prototype  include/linux/fs.h  2490  extern void get_filesystem(struct file_system_type *fs);
put_filesystem  prototype  include/linux/fs.h  2491  extern void put_filesystem(struct file_system_type *fs);
get_fs_type  prototype  include/linux/fs.h  2492  extern struct file_system_type *get_fs_type(const char *name);
get_super  prototype  include/linux/fs.h  2493  extern struct super_block *get_super(struct block_device *);
get_super_thawed  prototype  include/linux/fs.h  2494  extern struct super_block *get_super_thawed(struct block_device *);
get_active_super  prototype  include/linux/fs.h  2495  extern struct super_block *get_active_super(struct block_device *bdev);
drop_super  prototype  include/linux/fs.h  2496  extern void drop_super(struct super_block *sb);
iterate_supers  prototype  include/linux/fs.h  2497  extern void iterate_supers(void (*)(struct super_block *,void *),void *);
iterate_supers_type  prototype  include/linux/fs.h  2499  extern void iterate_supers_type(struct file_system_type *,void (*)(struct super_block *, void *), void *);
dcache_dir_open  prototype  include/linux/fs.h  2501  extern int dcache_dir_open(struct inode *,struct file *);
dcache_dir_close  prototype  include/linux/fs.h  2502  extern int dcache_dir_close(struct inode *,struct file *);
dcache_dir_lseek  prototype  include/linux/fs.h  2503  extern loff_t dcache_dir_lseek(struct file *,loff_t,int);
dcache_readdir  prototype  include/linux/fs.h  2504  extern int dcache_readdir(struct file *,void *,filldir_t);
simple_setattr  prototype  include/linux/fs.h  2505  extern int simple_setattr(struct dentry *,struct iattr *);
simple_getattr  prototype  include/linux/fs.h  2506  extern int simple_getattr(struct vfsmount *,struct dentry *,struct kstat *);
simple_statfs  prototype  include/linux/fs.h  2507  extern int simple_statfs(struct dentry *,struct kstatfs *);
simple_open  prototype  include/linux/fs.h  2508  extern int simple_open(struct inode *inode,struct file *file);
simple_link  prototype  include/linux/fs.h  2509  extern int simple_link(struct dentry *,struct inode *,struct dentry *);
simple_unlink  prototype  include/linux/fs.h  2510  extern int simple_unlink(struct inode *,struct dentry *);
simple_rmdir  prototype  include/linux/fs.h  2511  extern int simple_rmdir(struct inode *,struct dentry *);
simple_rename  prototype  include/linux/fs.h  2512  extern int simple_rename(struct inode *,struct dentry *,struct inode *,struct dentry *);
noop_fsync  prototype  include/linux/fs.h  2513  extern int noop_fsync(struct file *,loff_t,loff_t,int);
simple_empty  prototype  include/linux/fs.h  2514  extern int simple_empty(struct dentry *);
simple_readpage  prototype  include/linux/fs.h  2515  extern int simple_readpage(struct file *file,struct page *page);
simple_write_begin  prototype  include/linux/fs.h  2518  extern int simple_write_begin(struct file *file,struct address_space *mapping,loff_t pos, unsigned len, unsigned flags,struct page **pagep, void **fsdata);
simple_write_end  prototype  include/linux/fs.h  2521  extern int simple_write_end(struct file *file,struct address_space *mapping,loff_t pos, unsigned len, unsigned copied,struct page *page, void *fsdata);
simple_lookup  prototype  include/linux/fs.h  2523  extern struct dentry *simple_lookup(struct inode *,struct dentry *,unsigned int flags);
generic_read_dir  prototype  include/linux/fs.h  2524  extern ssize_t generic_read_dir(struct file *,char __user *,size_t,loff_t *);
tree_descr  struct  include/linux/fs.h  2527  struct tree_descr { char *name; const struct file_operations *ops; int mode; };
d_alloc_name  prototype  include/linux/fs.h  2528  struct dentry *d_alloc_name(struct dentry *,const char *);
simple_fill_super  prototype  include/linux/fs.h  2529  extern int simple_fill_super(struct super_block *,unsigned long,struct tree_descr *);
simple_pin_fs  prototype  include/linux/fs.h  2530  extern int simple_pin_fs(struct file_system_type *,struct vfsmount **mount,int *count);
simple_release_fs  prototype  include/linux/fs.h  2531  extern void simple_release_fs(struct vfsmount **mount,int *count);
simple_read_from_buffer  prototype  include/linux/fs.h  2534  extern ssize_t simple_read_from_buffer(void __user *to,size_t count,loff_t *ppos, const void *from, size_t available);
simple_write_to_buffer  prototype  include/linux/fs.h  2536  extern ssize_t simple_write_to_buffer(void *to,size_t available,loff_t *ppos,const void __user *from, size_t count);
generic_file_fsync  prototype  include/linux/fs.h  2538  extern int generic_file_fsync(struct file *,loff_t,loff_t,int);
generic_check_addressable  prototype  include/linux/fs.h  2540  extern int generic_check_addressable(unsigned,u64);
buffer_migrate_page  macro  include/linux/fs.h  2547  #define buffer_migrate_page NULL
inode_change_ok  prototype  include/linux/fs.h  2550  extern int inode_change_ok(const struct inode *,struct iattr *);
inode_newsize_ok  prototype  include/linux/fs.h  2551  extern int inode_newsize_ok(const struct inode *,loff_t offset);
setattr_copy  prototype  include/linux/fs.h  2552  extern void setattr_copy(struct inode *inode,const struct iattr *attr);
file_update_time  prototype  include/linux/fs.h  2554  extern int file_update_time(struct file *file);
generic_show_options  prototype  include/linux/fs.h  2556  extern int generic_show_options(struct seq_file *m,struct dentry *root);
save_mount_options  prototype  include/linux/fs.h  2557  extern void save_mount_options(struct super_block *sb,char *options);
replace_mount_options  prototype  include/linux/fs.h  2558  extern void replace_mount_options(struct super_block *sb,char *options);
parent_ino  function  include/linux/fs.h  2560  static inline ino_t parent_ino(struct dentry *dentry)
simple_transaction_argresp  struct  include/linux/fs.h  2580  struct simple_transaction_argresp {
SIMPLE_TRANSACTION_LIMIT  macro  include/linux/fs.h  2585  #define SIMPLE_TRANSACTION_LIMIT (PAGE_SIZE - sizeof(struct simple_transaction_argresp))
simple_transaction_get  prototype  include/linux/fs.h  2588  char *simple_transaction_get(struct file *file,const char __user *buf,size_t size);
simple_transaction_read  prototype  include/linux/fs.h  2590  ssize_t simple_transaction_read(struct file *file,char __user *buf,size_t size, loff_t *pos);
simple_transaction_release  prototype  include/linux/fs.h  2591  int simple_transaction_release(struct inode *inode,struct file *file);
simple_transaction_set  prototype  include/linux/fs.h  2593  void simple_transaction_set(struct file *file,size_t n);
DEFINE_SIMPLE_ATTRIBUTE  macro  include/linux/fs.h  2624  #define DEFINE_SIMPLE_ATTRIBUTE(__fops,__get,__set,__fmt) static int __fops ## _open(struct inode *inode, struct file *file) { __simple_attr_check_format(__fmt, 0ull); return simple_attr_open(inode, file, __get, __set, __fmt); } static const struct file_operations __fops = { .owner	 = THIS_MODULE, .open	 = __fops ## _open, .release = simple_attr_release, .read	 = simple_attr_read, .write	 = simple_attr_write, .llseek	 = generic_file_llseek, };
__simple_attr_check_format  function  include/linux/fs.h  2627  void __simple_attr_check_format(const char *fmt,...)
simple_attr_open  prototype  include/linux/fs.h  2634  int simple_attr_open(struct inode *inode,struct file *file,int (*get)(void *, u64 *), int (*set)(void *, u64),const char *fmt);
simple_attr_release  prototype  include/linux/fs.h  2635  int simple_attr_release(struct inode *inode,struct file *file);
simple_attr_read  prototype  include/linux/fs.h  2637  ssize_t simple_attr_read(struct file *file,char __user *buf,size_t len, loff_t *ppos);
simple_attr_write  prototype  include/linux/fs.h  2639  ssize_t simple_attr_write(struct file *file,const char __user *buf,size_t len, loff_t *ppos);
proc_nr_files  prototype  include/linux/fs.h  2643  int proc_nr_files(struct ctl_table *table,int write,void __user *buffer, size_t *lenp, loff_t *ppos);
proc_nr_dentry  prototype  include/linux/fs.h  2645  int proc_nr_dentry(struct ctl_table *table,int write,void __user *buffer, size_t *lenp, loff_t *ppos);
proc_nr_inodes  prototype  include/linux/fs.h  2647  int proc_nr_inodes(struct ctl_table *table,int write,void __user *buffer, size_t *lenp, loff_t *ppos);
get_filesystem_list  prototype  include/linux/fs.h  2648  int __init get_filesystem_list(char *buf);
__FMODE_EXEC  macro  include/linux/fs.h  2650  #define __FMODE_EXEC ((__force int) FMODE_EXEC)
__FMODE_NONOTIFY  macro  include/linux/fs.h  2651  #define __FMODE_NONOTIFY ((__force int) FMODE_NONOTIFY)
ACC_MODE  macro  include/linux/fs.h  2653  #define ACC_MODE(x) ("\004\002\006\006"[(x)&O_ACCMODE])
OPEN_FMODE  macro  include/linux/fs.h  2655  #define OPEN_FMODE(flag) ((__force fmode_t)(((flag + 1) & O_ACCMODE) | (flag & __FMODE_NONOTIFY)))
is_sxid  function  include/linux/fs.h  2657  static inline int is_sxid(umode_t mode)
inode_has_no_xattr  function  include/linux/fs.h  2662  static inline void inode_has_no_xattr(struct inode *inode)
_ASM_X86_COMPAT_H  macro  arch/x86/include/asm/compat.h  2  #define _ASM_X86_COMPAT_H
COMPAT_USER_HZ  macro  arch/x86/include/asm/compat.h  13  #define COMPAT_USER_HZ 100
COMPAT_UTS_MACHINE  macro  arch/x86/include/asm/compat.h  14  #define COMPAT_UTS_MACHINE "i686\0\0"
compat_timespec  struct  arch/x86/include/asm/compat.h  46  struct compat_timespec {
compat_timeval  struct  arch/x86/include/asm/compat.h  51  struct compat_timeval {
compat_stat  struct  arch/x86/include/asm/compat.h  56  struct compat_stat {
compat_flock  struct  arch/x86/include/asm/compat.h  79  struct compat_flock {
F_GETLK64  macro  arch/x86/include/asm/compat.h  87  #define F_GETLK64 12
F_SETLK64  macro  arch/x86/include/asm/compat.h  88  #define F_SETLK64 13
F_SETLKW64  macro  arch/x86/include/asm/compat.h  89  #define F_SETLKW64 14
compat_flock64  struct  arch/x86/include/asm/compat.h  95  struct compat_flock64 {
compat_statfs  struct  arch/x86/include/asm/compat.h  103  struct compat_statfs {
COMPAT_RLIM_OLD_INFINITY  macro  arch/x86/include/asm/compat.h  118  #define COMPAT_RLIM_OLD_INFINITY 0x7fffffff
COMPAT_RLIM_INFINITY  macro  arch/x86/include/asm/compat.h  119  #define COMPAT_RLIM_INFINITY 0xffffffff
_COMPAT_NSIG  macro  arch/x86/include/asm/compat.h  123  #define _COMPAT_NSIG 64
_COMPAT_NSIG_BPW  macro  arch/x86/include/asm/compat.h  124  #define _COMPAT_NSIG_BPW 32
compat_sigval  union  arch/x86/include/asm/compat.h  128  typedef union compat_sigval {
compat_siginfo  struct  arch/x86/include/asm/compat.h  133  typedef struct compat_siginfo {
COMPAT_OFF_T_MAX  macro  arch/x86/include/asm/compat.h  200  #define COMPAT_OFF_T_MAX 0x7fffffff
COMPAT_LOFF_T_MAX  macro  arch/x86/include/asm/compat.h  201  #define COMPAT_LOFF_T_MAX 0x7fffffffffffffffL
compat_ipc64_perm  struct  arch/x86/include/asm/compat.h  203  struct compat_ipc64_perm {
compat_semid64_ds  struct  arch/x86/include/asm/compat.h  217  struct compat_semid64_ds {
compat_msqid64_ds  struct  arch/x86/include/asm/compat.h  228  struct compat_msqid64_ds {
compat_shmid64_ds  struct  arch/x86/include/asm/compat.h  245  struct compat_shmid64_ds {
PR_REG_SIZE  macro  arch/x86/include/asm/compat.h  267  #define PR_REG_SIZE(S) (test_thread_flag(TIF_IA32) ? 68 : 216)
PRSTATUS_SIZE  macro  arch/x86/include/asm/compat.h  268  #define PRSTATUS_SIZE(S) (test_thread_flag(TIF_IA32) ? 144 : 296)
SET_PR_FPVALID  macro  arch/x86/include/asm/compat.h  271  #define SET_PR_FPVALID(S,V) do { *(int *) (((void *) &((S)->pr_reg)) + PR_REG_SIZE(0)) = (V); } while (0)
compat_ptr  function  arch/x86/include/asm/compat.h  286  static inline void __user *compat_ptr(compat_uptr_t uptr)
ptr_to_compat  function  arch/x86/include/asm/compat.h  291  static inline compat_uptr_t ptr_to_compat(void __user *uptr)
arch_compat_alloc_user_space  function  arch/x86/include/asm/compat.h  296  static inline void __user *arch_compat_alloc_user_space(long len)
is_x32_task  function  arch/x86/include/asm/compat.h  310  static inline bool is_x32_task(void)
_ASM_X86_SIGINFO_H  macro  arch/x86/include/uapi/asm/siginfo.h  2  #define _ASM_X86_SIGINFO_H
__ARCH_SI_CLOCK_T  macro  arch/x86/include/uapi/asm/siginfo.h  7  # define __ARCH_SI_CLOCK_T __kernel_si_clock_t
__ARCH_SI_ATTRIBUTES  macro  arch/x86/include/uapi/asm/siginfo.h  8  # define __ARCH_SI_ATTRIBUTES __attribute__((aligned(8)))
__ARCH_SI_PREAMBLE_SIZE  macro  arch/x86/include/uapi/asm/siginfo.h  10  # define __ARCH_SI_PREAMBLE_SIZE (4 * sizeof(int))
_ASM_X86_SIGNAL_H  macro  arch/x86/include/asm/signal.h  2  #define _ASM_X86_SIGNAL_H
_NSIG  macro  arch/x86/include/asm/signal.h  10  #define _NSIG 64
_NSIG_BPW  macro  arch/x86/include/asm/signal.h  15  # define _NSIG_BPW 64
_NSIG_WORDS  macro  arch/x86/include/asm/signal.h  18  #define _NSIG_WORDS (_NSIG / _NSIG_BPW)
do_notify_resume  prototype  arch/x86/include/asm/signal.h  33  extern void do_notify_resume(struct pt_regs *,void *,__u32);
__ARCH_HAS_SA_RESTORER  macro  arch/x86/include/asm/signal.h  35  #define __ARCH_HAS_SA_RESTORER
old_sigaction  struct  arch/x86/include/asm/signal.h  38  struct old_sigaction {
sigaction  struct  arch/x86/include/asm/signal.h  45  struct sigaction {
k_sigaction  struct  arch/x86/include/asm/signal.h  52  struct k_sigaction {
__HAVE_ARCH_SIG_BITOPS  macro  arch/x86/include/asm/signal.h  126  #undef __HAVE_ARCH_SIG_BITOPS
__gen_sigaddset  function  arch/x86/include/asm/signal.h  69  static inline void __gen_sigaddset(sigset_t *set,int _sig)
__const_sigaddset  function  arch/x86/include/asm/signal.h  74  static inline void __const_sigaddset(sigset_t *set,int _sig)
__gen_sigdelset  function  arch/x86/include/asm/signal.h  86  static inline void __gen_sigdelset(sigset_t *set,int _sig)
__const_sigdelset  function  arch/x86/include/asm/signal.h  91  static inline void __const_sigdelset(sigset_t *set,int _sig)
__const_sigismember  function  arch/x86/include/asm/signal.h  97  static inline int __const_sigismember(sigset_t *set,int _sig)
__gen_sigismember  function  arch/x86/include/asm/signal.h  103  static inline int __gen_sigismember(sigset_t *set,int _sig)
_LINUX_MISCDEVICE_H  macro  include/linux/miscdevice.h  2  #define _LINUX_MISCDEVICE_H
PSMOUSE_MINOR  macro  include/linux/miscdevice.h  13  #define PSMOUSE_MINOR 1
MS_BUSMOUSE_MINOR  macro  include/linux/miscdevice.h  14  #define MS_BUSMOUSE_MINOR 2
ATIXL_BUSMOUSE_MINOR  macro  include/linux/miscdevice.h  15  #define ATIXL_BUSMOUSE_MINOR 3
ATARIMOUSE_MINOR  macro  include/linux/miscdevice.h  17  #define ATARIMOUSE_MINOR 5
SUN_MOUSE_MINOR  macro  include/linux/miscdevice.h  18  #define SUN_MOUSE_MINOR 6
APOLLO_MOUSE_MINOR  macro  include/linux/miscdevice.h  19  #define APOLLO_MOUSE_MINOR 7
PC110PAD_MINOR  macro  include/linux/miscdevice.h  20  #define PC110PAD_MINOR 9
WATCHDOG_MINOR  macro  include/linux/miscdevice.h  22  #define WATCHDOG_MINOR 130
TEMP_MINOR  macro  include/linux/miscdevice.h  23  #define TEMP_MINOR 131
RTC_MINOR  macro  include/linux/miscdevice.h  24  #define RTC_MINOR 135
EFI_RTC_MINOR  macro  include/linux/miscdevice.h  25  #define EFI_RTC_MINOR 136
SUN_OPENPROM_MINOR  macro  include/linux/miscdevice.h  26  #define SUN_OPENPROM_MINOR 139
DMAPI_MINOR  macro  include/linux/miscdevice.h  27  #define DMAPI_MINOR 140
NVRAM_MINOR  macro  include/linux/miscdevice.h  28  #define NVRAM_MINOR 144
SGI_MMTIMER  macro  include/linux/miscdevice.h  29  #define SGI_MMTIMER 153
STORE_QUEUE_MINOR  macro  include/linux/miscdevice.h  30  #define STORE_QUEUE_MINOR 155
I2O_MINOR  macro  include/linux/miscdevice.h  31  #define I2O_MINOR 166
MICROCODE_MINOR  macro  include/linux/miscdevice.h  32  #define MICROCODE_MINOR 184
TUN_MINOR  macro  include/linux/miscdevice.h  33  #define TUN_MINOR 200
MWAVE_MINOR  macro  include/linux/miscdevice.h  34  #define MWAVE_MINOR 219
MPT_MINOR  macro  include/linux/miscdevice.h  35  #define MPT_MINOR 220
MPT2SAS_MINOR  macro  include/linux/miscdevice.h  36  #define MPT2SAS_MINOR 221
MPT3SAS_MINOR  macro  include/linux/miscdevice.h  37  #define MPT3SAS_MINOR 222
UINPUT_MINOR  macro  include/linux/miscdevice.h  38  #define UINPUT_MINOR 223
MISC_MCELOG_MINOR  macro  include/linux/miscdevice.h  39  #define MISC_MCELOG_MINOR 227
HPET_MINOR  macro  include/linux/miscdevice.h  40  #define HPET_MINOR 228
FUSE_MINOR  macro  include/linux/miscdevice.h  41  #define FUSE_MINOR 229
KVM_MINOR  macro  include/linux/miscdevice.h  42  #define KVM_MINOR 232
BTRFS_MINOR  macro  include/linux/miscdevice.h  43  #define BTRFS_MINOR 234
AUTOFS_MINOR  macro  include/linux/miscdevice.h  44  #define AUTOFS_MINOR 235
MAPPER_CTRL_MINOR  macro  include/linux/miscdevice.h  45  #define MAPPER_CTRL_MINOR 236
LOOP_CTRL_MINOR  macro  include/linux/miscdevice.h  46  #define LOOP_CTRL_MINOR 237
VHOST_NET_MINOR  macro  include/linux/miscdevice.h  47  #define VHOST_NET_MINOR 238
MISC_DYNAMIC_MINOR  macro  include/linux/miscdevice.h  48  #define MISC_DYNAMIC_MINOR 255
miscdevice  struct  include/linux/miscdevice.h  52  struct miscdevice {
misc_register  prototype  include/linux/miscdevice.h  63  extern int misc_register(struct miscdevice * misc);
misc_deregister  prototype  include/linux/miscdevice.h  64  extern int misc_deregister(struct miscdevice *misc);
MODULE_ALIAS_MISCDEV  macro  include/linux/miscdevice.h  68  #define MODULE_ALIAS_MISCDEV(minor) MODULE_ALIAS("char-major-" __stringify(MISC_MAJOR) "-" __stringify(minor))
_ASM_X86_BUG_H  macro  arch/x86/include/asm/bug.h  2  #define _ASM_X86_BUG_H
HAVE_ARCH_BUG  macro  arch/x86/include/asm/bug.h  5  #define HAVE_ARCH_BUG
__BUG_C0  macro  arch/x86/include/asm/bug.h  12  # define __BUG_C0 "2:\t.long 1b - 2b,%c0 - 2b\n"
BUG  macro  include/asm-generic/bug.h  111  #define BUG() do {} while(0)
show_regs_common  prototype  arch/x86/include/asm/bug.h  41  extern void show_regs_common(void);
_ASM_GENERIC_BUG_H  macro  include/asm-generic/bug.h  2  #define _ASM_GENERIC_BUG_H
BUGFLAG_WARNING  macro  include/asm-generic/bug.h  7  #define BUGFLAG_WARNING (1 << 0)
BUGFLAG_TAINT  macro  include/asm-generic/bug.h  8  #define BUGFLAG_TAINT(taint) (BUGFLAG_WARNING | ((taint) << 8))
BUG_GET_TAINT  macro  include/asm-generic/bug.h  9  #define BUG_GET_TAINT(bug) ((bug)->flags >> 8)
bug_entry  struct  include/asm-generic/bug.h  18  struct bug_entry {
BUG_ON  macro  include/asm-generic/bug.h  115  #define BUG_ON(condition) do { if (condition) ; } while(0)
warn_slowpath_fmt  prototype  include/asm-generic/bug.h  67  void warn_slowpath_fmt(const char *file,const int line,const char *fmt, ...);
warn_slowpath_fmt_taint  prototype  include/asm-generic/bug.h  70  void warn_slowpath_fmt_taint(const char *file,const int line,unsigned taint,const char *fmt, ...);
warn_slowpath_null  prototype  include/asm-generic/bug.h  71  extern void warn_slowpath_null(const char *file,const int line);
WANT_WARN_ON_SLOWPATH  macro  include/asm-generic/bug.h  72  #define WANT_WARN_ON_SLOWPATH
__WARN  macro  include/asm-generic/bug.h  78  #define __WARN() __WARN_TAINT(TAINT_WARN)
__WARN_printf  macro  include/asm-generic/bug.h  79  #define __WARN_printf(arg...) do { printk(arg); __WARN(); } while (0)
__WARN_printf_taint  macro  include/asm-generic/bug.h  81  #define __WARN_printf_taint(taint,arg...) do { printk(arg); __WARN_TAINT(taint); } while (0)
WARN_ON  macro  include/asm-generic/bug.h  122  #define WARN_ON(condition) ({ int __ret_warn_on = !!(condition); unlikely(__ret_warn_on); })
WARN  macro  include/asm-generic/bug.h  129  #define WARN(condition,format...) ({ int __ret_warn_on = !!(condition); unlikely(__ret_warn_on); })
WARN_TAINT  macro  include/asm-generic/bug.h  132  #define WARN_TAINT(condition,taint,format...) WARN_ON(condition)
WARN_ON_ONCE  macro  include/asm-generic/bug.h  144  #define WARN_ON_ONCE(condition) ({ static bool __section(.data.unlikely) __warned; int __ret_warn_once = !!(condition); if (unlikely(__ret_warn_once)) if (WARN_ON(!__warned)) __warned = true; unlikely(__ret_warn_once); })
WARN_ONCE  macro  include/asm-generic/bug.h  154  #define WARN_ONCE(condition,format...) ({ static bool __section(.data.unlikely) __warned; int __ret_warn_once = !!(condition); if (unlikely(__ret_warn_once)) if (WARN(!__warned, format)) __warned = true; unlikely(__ret_warn_once); })
WARN_TAINT_ONCE  macro  include/asm-generic/bug.h  164  #define WARN_TAINT_ONCE(condition,taint,format...) ({ static bool __section(.data.unlikely) __warned; int __ret_warn_once = !!(condition); if (unlikely(__ret_warn_once)) if (WARN_TAINT(!__warned, taint, format)) __warned = true; unlikely(__ret_warn_once); })
WARN_ON_SMP  macro  include/asm-generic/bug.h  202  # define WARN_ON_SMP(x) ({0;})
_LINUX_SCATTERLIST_H  macro  include/linux/scatterlist.h  2  #define _LINUX_SCATTERLIST_H
sg_table  struct  include/linux/scatterlist.h  12  struct sg_table {
SG_MAGIC  macro  include/linux/scatterlist.h  35  #define SG_MAGIC 0x87654321
sg_is_chain  macro  include/linux/scatterlist.h  42  #define sg_is_chain(sg) ((sg)->page_link & 0x01)
sg_is_last  macro  include/linux/scatterlist.h  43  #define sg_is_last(sg) ((sg)->page_link & 0x02)
sg_chain_ptr  macro  include/linux/scatterlist.h  45  #define sg_chain_ptr(sg) ((struct scatterlist *) ((sg)->page_link & ~0x03))
sg_assign_page  function  include/linux/scatterlist.h  57  static inline void sg_assign_page(struct scatterlist *sg,struct page *page)
sg_set_page  function  include/linux/scatterlist.h  88  static inline void sg_set_page(struct scatterlist *sg,struct page *page,unsigned int len, unsigned int offset)
sg_page  function  include/linux/scatterlist.h  95  static inline struct page *sg_page(struct scatterlist *sg)
sg_set_buf  function  include/linux/scatterlist.h  112  static inline void sg_set_buf(struct scatterlist *sg,const void *buf,unsigned int buflen)
for_each_sg  macro  include/linux/scatterlist.h  121  #define for_each_sg(sglist,sg,nr,__i) for (__i = 0, sg = (sglist); __i < (nr); __i++, sg = sg_next(sg))
sg_chain  function  include/linux/scatterlist.h  134  static inline void sg_chain(struct scatterlist *prv,unsigned int prv_nents,struct scatterlist *sgl)
sg_mark_end  function  include/linux/scatterlist.h  162  static inline void sg_mark_end(struct scatterlist *sg)
sg_phys  function  include/linux/scatterlist.h  184  static inline dma_addr_t sg_phys(struct scatterlist *sg)
sg_virt  function  include/linux/scatterlist.h  199  static inline void *sg_virt(struct scatterlist *sg)
sg_nents  prototype  include/linux/scatterlist.h  204  int sg_nents(struct scatterlist *sg);
sg_next  prototype  include/linux/scatterlist.h  205  struct scatterlist *sg_next(struct scatterlist *);
sg_last  prototype  include/linux/scatterlist.h  206  struct scatterlist *sg_last(struct scatterlist *s,unsigned int);
sg_init_table  prototype  include/linux/scatterlist.h  207  void sg_init_table(struct scatterlist *,unsigned int);
sg_init_one  prototype  include/linux/scatterlist.h  208  void sg_init_one(struct scatterlist *,const void *,unsigned int);
__sg_free_table  prototype  include/linux/scatterlist.h  213  void __sg_free_table(struct sg_table *,unsigned int,sg_free_fn *);
sg_free_table  prototype  include/linux/scatterlist.h  214  void sg_free_table(struct sg_table *);
__sg_alloc_table  prototype  include/linux/scatterlist.h  216  int __sg_alloc_table(struct sg_table *,unsigned int,unsigned int,gfp_t,sg_alloc_fn *);
sg_alloc_table  prototype  include/linux/scatterlist.h  217  int sg_alloc_table(struct sg_table *,unsigned int,gfp_t);
sg_alloc_table_from_pages  prototype  include/linux/scatterlist.h  221  int sg_alloc_table_from_pages(struct sg_table *sgt,struct page **pages, unsigned int n_pages,unsigned long offset, unsigned long size,gfp_t gfp_mask);
sg_copy_from_buffer  prototype  include/linux/scatterlist.h  224  size_t sg_copy_from_buffer(struct scatterlist *sgl,unsigned int nents,void *buf, size_t buflen);
sg_copy_to_buffer  prototype  include/linux/scatterlist.h  226  size_t sg_copy_to_buffer(struct scatterlist *sgl,unsigned int nents,void *buf, size_t buflen);
SG_MAX_SINGLE_ALLOC  macro  include/linux/scatterlist.h  232  #define SG_MAX_SINGLE_ALLOC (PAGE_SIZE / sizeof(struct scatterlist))
SG_MITER_ATOMIC  macro  include/linux/scatterlist.h  251  #define SG_MITER_ATOMIC (1 << 0)
SG_MITER_TO_SG  macro  include/linux/scatterlist.h  252  #define SG_MITER_TO_SG (1 << 1)
SG_MITER_FROM_SG  macro  include/linux/scatterlist.h  253  #define SG_MITER_FROM_SG (1 << 2)
sg_mapping_iter  struct  include/linux/scatterlist.h  255  struct sg_mapping_iter {
sg_miter_start  prototype  include/linux/scatterlist.h  270  void sg_miter_start(struct sg_mapping_iter *miter,struct scatterlist *sgl,unsigned int nents, unsigned int flags);
sg_miter_next  prototype  include/linux/scatterlist.h  271  bool sg_miter_next(struct sg_mapping_iter *miter);
sg_miter_stop  prototype  include/linux/scatterlist.h  272  void sg_miter_stop(struct sg_mapping_iter *miter);
__NETNS_CORE_H__  macro  include/net/netns/core.h  2  #define __NETNS_CORE_H__
netns_core  struct  include/net/netns/core.h  7  struct netns_core {
__NETNS_MIB_H__  macro  include/net/netns/mib.h  2  #define __NETNS_MIB_H__
netns_mib  struct  include/net/netns/mib.h  6  struct netns_mib {
DEFINE_SNMP_STAT  prototype  include/net/netns/sctp.h  10  DEFINE_SNMP_STAT(struct sctp_mib,sctp_statistics);
DEFINE_SNMP_STAT_ATOMIC  prototype  include/net/netns/mib.h  21  DEFINE_SNMP_STAT_ATOMIC(struct icmpv6msg_mib,icmpv6msg_statistics);
__NETNS_UNIX_H__  macro  include/net/netns/unix.h  5  #define __NETNS_UNIX_H__
netns_unix  struct  include/net/netns/unix.h  8  struct netns_unix {
__NETNS_PACKET_H__  macro  include/net/netns/packet.h  5  #define __NETNS_PACKET_H__
netns_packet  struct  include/net/netns/packet.h  10  struct netns_packet {
__NETNS_IPV4_H__  macro  include/net/netns/ipv4.h  6  #define __NETNS_IPV4_H__
netns_ipv4  struct  include/net/netns/ipv4.h  19  struct netns_ipv4 {
__NETNS_IPV6_H__  macro  include/net/netns/ipv6.h  8  #define __NETNS_IPV6_H__
netns_sysctl_ipv6  struct  include/net/netns/ipv6.h  13  struct netns_sysctl_ipv6 {
netns_ipv6  struct  include/net/netns/ipv6.h  32  struct netns_ipv6 {
netns_nf_frag  struct  include/net/netns/ipv6.h  76  struct netns_nf_frag {
__NETNS_SCTP_H__  macro  include/net/netns/sctp.h  2  #define __NETNS_SCTP_H__
netns_sctp  struct  include/net/netns/sctp.h  9  struct netns_sctp {
__NETNS_DCCP_H__  macro  include/net/netns/dccp.h  2  #define __NETNS_DCCP_H__
netns_dccp  struct  include/net/netns/dccp.h  6  struct netns_dccp {
__NETNS_X_TABLES_H  macro  include/net/netns/x_tables.h  2  #define __NETNS_X_TABLES_H
netns_xt  struct  include/net/netns/x_tables.h  9  struct netns_xt {
__NETNS_CONNTRACK_H  macro  include/net/netns/conntrack.h  2  #define __NETNS_CONNTRACK_H
nf_proto_net  struct  include/net/netns/conntrack.h  12  struct nf_proto_net {
nf_generic_net  struct  include/net/netns/conntrack.h  24  struct nf_generic_net {
nf_tcp_net  struct  include/net/netns/conntrack.h  29  struct nf_tcp_net {
udp_conntrack  enum  include/net/netns/conntrack.h  37  enum udp_conntrack {
nf_udp_net  struct  include/net/netns/conntrack.h  43  struct nf_udp_net {
nf_icmp_net  struct  include/net/netns/conntrack.h  48  struct nf_icmp_net {
nf_ip_net  struct  include/net/netns/conntrack.h  53  struct nf_ip_net {
netns_ct  struct  include/net/netns/conntrack.h  65  struct netns_ct {
__NETNS_XFRM_H  macro  include/net/netns/xfrm.h  2  #define __NETNS_XFRM_H
xfrm_policy_hash  struct  include/net/netns/xfrm.h  12  struct xfrm_policy_hash {
netns_xfrm  struct  include/net/netns/xfrm.h  17  struct netns_xfrm {
__SEQ_FILE_NET_H__  macro  include/linux/seq_file_net.h  2  #define __SEQ_FILE_NET_H__
seq_net_private  struct  include/linux/seq_file_net.h  9  struct seq_net_private {
seq_open_net  prototype  include/linux/seq_file_net.h  16  int seq_open_net(struct inode *,struct file *,const struct seq_operations *, int);
single_open_net  prototype  include/linux/seq_file_net.h  18  int single_open_net(struct inode *,struct file *file,int (*show)(struct seq_file *, void *));
seq_release_net  prototype  include/linux/seq_file_net.h  19  int seq_release_net(struct inode *,struct file *);
single_release_net  prototype  include/linux/seq_file_net.h  20  int single_release_net(struct inode *,struct file *);
seq_file_net  function  include/linux/seq_file_net.h  21  static inline struct net *seq_file_net(struct seq_file *seq)
_LINUX_NSPROXY_H  macro  include/linux/nsproxy.h  2  #define _LINUX_NSPROXY_H
nsproxy  struct  include/linux/nsproxy.h  25  struct nsproxy {
task_nsproxy  function  include/linux/nsproxy.h  60  static inline struct nsproxy *task_nsproxy(struct task_struct *tsk)
copy_namespaces  prototype  include/linux/nsproxy.h  65  int copy_namespaces(unsigned long flags,struct task_struct *tsk);
exit_task_namespaces  prototype  include/linux/nsproxy.h  66  void exit_task_namespaces(struct task_struct *tsk);
switch_task_namespaces  prototype  include/linux/nsproxy.h  67  void switch_task_namespaces(struct task_struct *tsk,struct nsproxy *new);
free_nsproxy  prototype  include/linux/nsproxy.h  68  void free_nsproxy(struct nsproxy *ns);
unshare_nsproxy_namespaces  prototype  include/linux/nsproxy.h  70  int unshare_nsproxy_namespaces(unsigned long,struct nsproxy **,struct cred *, struct fs_struct *);
nsproxy_cache_init  prototype  include/linux/nsproxy.h  71  int __init nsproxy_cache_init(void);
put_nsproxy  function  include/linux/nsproxy.h  73  static inline void put_nsproxy(struct nsproxy *ns)
get_nsproxy  function  include/linux/nsproxy.h  80  static inline void get_nsproxy(struct nsproxy *ns)
__LINUX_DCBNL_H__  macro  include/uapi/linux/dcbnl.h  21  #define __LINUX_DCBNL_H__
IEEE_8021QAZ_MAX_TCS  macro  include/uapi/linux/dcbnl.h  26  #define IEEE_8021QAZ_MAX_TCS 8
IEEE_8021QAZ_TSA_STRICT  macro  include/uapi/linux/dcbnl.h  28  #define IEEE_8021QAZ_TSA_STRICT 0
IEEE_8021QAZ_TSA_CB_SHAPER  macro  include/uapi/linux/dcbnl.h  29  #define IEEE_8021QAZ_TSA_CB_SHAPER 1
IEEE_8021QAZ_TSA_ETS  macro  include/uapi/linux/dcbnl.h  30  #define IEEE_8021QAZ_TSA_ETS 2
IEEE_8021QAZ_TSA_VENDOR  macro  include/uapi/linux/dcbnl.h  31  #define IEEE_8021QAZ_TSA_VENDOR 255
ieee_ets  struct  include/uapi/linux/dcbnl.h  57  struct ieee_ets {
ieee_maxrate  struct  include/uapi/linux/dcbnl.h  77  struct ieee_maxrate {
ieee_pfc  struct  include/uapi/linux/dcbnl.h  92  struct ieee_pfc {
CEE_DCBX_MAX_PGS  macro  include/uapi/linux/dcbnl.h  102  #define CEE_DCBX_MAX_PGS 8
CEE_DCBX_MAX_PRIO  macro  include/uapi/linux/dcbnl.h  103  #define CEE_DCBX_MAX_PRIO 8
cee_pg  struct  include/uapi/linux/dcbnl.h  115  struct cee_pg {
cee_pfc  struct  include/uapi/linux/dcbnl.h  132  struct cee_pfc {
IEEE_8021QAZ_APP_SEL_ETHERTYPE  macro  include/uapi/linux/dcbnl.h  140  #define IEEE_8021QAZ_APP_SEL_ETHERTYPE 1
IEEE_8021QAZ_APP_SEL_STREAM  macro  include/uapi/linux/dcbnl.h  141  #define IEEE_8021QAZ_APP_SEL_STREAM 2
IEEE_8021QAZ_APP_SEL_DGRAM  macro  include/uapi/linux/dcbnl.h  142  #define IEEE_8021QAZ_APP_SEL_DGRAM 3
IEEE_8021QAZ_APP_SEL_ANY  macro  include/uapi/linux/dcbnl.h  143  #define IEEE_8021QAZ_APP_SEL_ANY 4
dcb_app  struct  include/uapi/linux/dcbnl.h  162  struct dcb_app {
dcb_peer_app_info  struct  include/uapi/linux/dcbnl.h  177  struct dcb_peer_app_info {
dcbmsg  struct  include/uapi/linux/dcbnl.h  182  struct dcbmsg {
dcbnl_commands  enum  include/uapi/linux/dcbnl.h  219  enum dcbnl_commands {
dcbnl_attrs  enum  include/uapi/linux/dcbnl.h  287  enum dcbnl_attrs {
ieee_attrs  enum  include/uapi/linux/dcbnl.h  327  enum ieee_attrs {
DCB_ATTR_IEEE_MAX  macro  include/uapi/linux/dcbnl.h  338  #define DCB_ATTR_IEEE_MAX (__DCB_ATTR_IEEE_MAX - 1)
ieee_attrs_app  enum  include/uapi/linux/dcbnl.h  340  enum ieee_attrs_app {
DCB_ATTR_IEEE_APP_MAX  macro  include/uapi/linux/dcbnl.h  345  #define DCB_ATTR_IEEE_APP_MAX (__DCB_ATTR_IEEE_APP_MAX - 1)
cee_attrs  enum  include/uapi/linux/dcbnl.h  362  enum cee_attrs {
DCB_ATTR_CEE_MAX  macro  include/uapi/linux/dcbnl.h  374  #define DCB_ATTR_CEE_MAX (__DCB_ATTR_CEE_MAX - 1)
peer_app_attr  enum  include/uapi/linux/dcbnl.h  376  enum peer_app_attr {
DCB_ATTR_CEE_PEER_APP_MAX  macro  include/uapi/linux/dcbnl.h  382  #define DCB_ATTR_CEE_PEER_APP_MAX (__DCB_ATTR_CEE_PEER_APP_MAX - 1)
cee_attrs_app  enum  include/uapi/linux/dcbnl.h  384  enum cee_attrs_app {
DCB_ATTR_CEE_APP_MAX  macro  include/uapi/linux/dcbnl.h  389  #define DCB_ATTR_CEE_APP_MAX (__DCB_ATTR_CEE_APP_MAX - 1)
dcbnl_pfc_up_attrs  enum  include/uapi/linux/dcbnl.h  407  enum dcbnl_pfc_up_attrs {
dcbnl_pg_attrs  enum  include/uapi/linux/dcbnl.h  450  enum dcbnl_pg_attrs {
dcbnl_tc_attrs  enum  include/uapi/linux/dcbnl.h  499  enum dcbnl_tc_attrs {
dcbnl_cap_attrs  enum  include/uapi/linux/dcbnl.h  533  enum dcbnl_cap_attrs {
DCB_CAP_DCBX_HOST  macro  include/uapi/linux/dcbnl.h  575  #define DCB_CAP_DCBX_HOST 0x01
DCB_CAP_DCBX_LLD_MANAGED  macro  include/uapi/linux/dcbnl.h  576  #define DCB_CAP_DCBX_LLD_MANAGED 0x02
DCB_CAP_DCBX_VER_CEE  macro  include/uapi/linux/dcbnl.h  577  #define DCB_CAP_DCBX_VER_CEE 0x04
DCB_CAP_DCBX_VER_IEEE  macro  include/uapi/linux/dcbnl.h  578  #define DCB_CAP_DCBX_VER_IEEE 0x08
DCB_CAP_DCBX_STATIC  macro  include/uapi/linux/dcbnl.h  579  #define DCB_CAP_DCBX_STATIC 0x10
dcbnl_numtcs_attrs  enum  include/uapi/linux/dcbnl.h  591  enum dcbnl_numtcs_attrs {
dcbnl_bcn_attrs  enum  include/uapi/linux/dcbnl.h  601  enum dcbnl_bcn_attrs{
dcb_general_attr_values  enum  include/uapi/linux/dcbnl.h  641  enum dcb_general_attr_values {
DCB_APP_IDTYPE_ETHTYPE  macro  include/uapi/linux/dcbnl.h  645  #define DCB_APP_IDTYPE_ETHTYPE 0x00
DCB_APP_IDTYPE_PORTNUM  macro  include/uapi/linux/dcbnl.h  646  #define DCB_APP_IDTYPE_PORTNUM 0x01
dcbnl_app_attrs  enum  include/uapi/linux/dcbnl.h  647  enum dcbnl_app_attrs {
DCB_FEATCFG_ERROR  macro  include/uapi/linux/dcbnl.h  669  #define DCB_FEATCFG_ERROR 0x01
DCB_FEATCFG_ENABLE  macro  include/uapi/linux/dcbnl.h  670  #define DCB_FEATCFG_ENABLE 0x02
DCB_FEATCFG_WILLING  macro  include/uapi/linux/dcbnl.h  671  #define DCB_FEATCFG_WILLING 0x04
DCB_FEATCFG_ADVERTISE  macro  include/uapi/linux/dcbnl.h  672  #define DCB_FEATCFG_ADVERTISE 0x08
dcbnl_featcfg_attrs  enum  include/uapi/linux/dcbnl.h  673  enum dcbnl_featcfg_attrs {
_LINUX_CGROUP_H  macro  include/linux/cgroup.h  2  #define _LINUX_CGROUP_H
cgroup_init_early  function  include/linux/cgroup.h  703  static inline int cgroup_init_early(void) { return 0; }
cgroup_init  function  include/linux/cgroup.h  704  static inline int cgroup_init(void) { return 0; }
cgroup_lock  function  include/linux/cgroup.h  710  static inline void cgroup_lock(void) {}
cgroup_lock_is_held  prototype  include/linux/cgroup.h  34  extern int cgroup_lock_is_held(void);
cgroup_lock_live_group  prototype  include/linux/cgroup.h  35  extern bool cgroup_lock_live_group(struct cgroup *cgrp);
cgroup_unlock  function  include/linux/cgroup.h  711  static inline void cgroup_unlock(void) {}
cgroup_fork  function  include/linux/cgroup.h  705  static inline void cgroup_fork(struct task_struct *p) {}
cgroup_post_fork  function  include/linux/cgroup.h  707  static inline void cgroup_post_fork(struct task_struct *p) {}
cgroup_exit  function  include/linux/cgroup.h  708  static inline void cgroup_exit(struct task_struct *p,int callbacks) {}
cgroupstats_build  function  include/linux/cgroup.h  713  static inline int cgroupstats_build(struct cgroupstats *stats,struct dentry *dentry)
cgroup_load_subsys  prototype  include/linux/cgroup.h  42  extern int cgroup_load_subsys(struct cgroup_subsys *ss);
cgroup_unload_subsys  prototype  include/linux/cgroup.h  43  extern void cgroup_unload_subsys(struct cgroup_subsys *ss);
SUBSYS  macro  include/linux/cgroup.h  509  #undef SUBSYS
IS_SUBSYS_ENABLED  macro  include/linux/cgroup.h  508  #undef IS_SUBSYS_ENABLED
cgroup_subsys_id  enum  include/linux/cgroup.h  50  enum cgroup_subsys_id {
cgroup_subsys_state  function  include/linux/cgroup.h  511  static inline struct cgroup_subsys_state *cgroup_subsys_state(
__css_get  function  include/linux/cgroup.h  89  static inline void __css_get(struct cgroup_subsys_state *css,int count)
css_get  function  include/linux/cgroup.h  101  static inline void css_get(struct cgroup_subsys_state *css)
__css_tryget  prototype  include/linux/cgroup.h  114  extern bool __css_tryget(struct cgroup_subsys_state *css);
css_tryget  function  include/linux/cgroup.h  115  static inline bool css_tryget(struct cgroup_subsys_state *css)
__css_put  prototype  include/linux/cgroup.h  127  extern void __css_put(struct cgroup_subsys_state *css);
css_put  function  include/linux/cgroup.h  128  static inline void css_put(struct cgroup_subsys_state *css)
cgroup  struct  include/linux/cgroup.h  153  struct cgroup {
css_set  struct  include/linux/cgroup.h  223  struct css_set {
cgroup_map_cb  struct  include/linux/cgroup.h  264  struct cgroup_map_cb {
CFTYPE_ONLY_ON_ROOT  macro  include/linux/cgroup.h  278  #define CFTYPE_ONLY_ON_ROOT (1U << 0)
CFTYPE_NOT_ON_ROOT  macro  include/linux/cgroup.h  279  #define CFTYPE_NOT_ON_ROOT (1U << 1)
MAX_CFTYPE_NAME  macro  include/linux/cgroup.h  281  #define MAX_CFTYPE_NAME 64
cftype  struct  include/linux/cgroup.h  283  struct cftype {
cftype_set  struct  include/linux/cgroup.h  389  struct cftype_set {
cgroup_scanner  struct  include/linux/cgroup.h  394  struct cgroup_scanner {
cgroup_add_cftypes  prototype  include/linux/cgroup.h  403  int cgroup_add_cftypes(struct cgroup_subsys *ss,struct cftype *cfts);
cgroup_rm_cftypes  prototype  include/linux/cgroup.h  404  int cgroup_rm_cftypes(struct cgroup_subsys *ss,struct cftype *cfts);
cgroup_is_removed  prototype  include/linux/cgroup.h  406  int cgroup_is_removed(const struct cgroup *cgrp);
cgroup_path  prototype  include/linux/cgroup.h  408  int cgroup_path(const struct cgroup *cgrp,char *buf,int buflen);
cgroup_task_count  prototype  include/linux/cgroup.h  410  int cgroup_task_count(const struct cgroup *cgrp);
cgroup_is_descendant  prototype  include/linux/cgroup.h  413  int cgroup_is_descendant(const struct cgroup *cgrp,struct task_struct *task);
cgroup_taskset_first  prototype  include/linux/cgroup.h  420  struct task_struct *cgroup_taskset_first(struct cgroup_taskset *tset);
cgroup_taskset_next  prototype  include/linux/cgroup.h  421  struct task_struct *cgroup_taskset_next(struct cgroup_taskset *tset);
cgroup_taskset_cur_cgroup  prototype  include/linux/cgroup.h  422  struct cgroup *cgroup_taskset_cur_cgroup(struct cgroup_taskset *tset);
cgroup_taskset_size  prototype  include/linux/cgroup.h  423  int cgroup_taskset_size(struct cgroup_taskset *tset);
cgroup_taskset_for_each  macro  include/linux/cgroup.h  435  #define cgroup_taskset_for_each(task,skip_cgrp,tset) for ((task) = cgroup_taskset_first((tset)); (task); (task) = cgroup_taskset_next((tset))) if (!(skip_cgrp) || cgroup_taskset_cur_cgroup((tset)) != (skip_cgrp))
cgroup_subsys  struct  include/linux/cgroup.h  442  struct cgroup_subsys {
MAX_CGROUP_TYPE_NAMELEN  macro  include/linux/cgroup.h  481  #define MAX_CGROUP_TYPE_NAMELEN 32
task_subsys_state_check  macro  include/linux/cgroup.h  525  #define task_subsys_state_check(task,subsys_id,__c) rcu_dereference_check(task->cgroups->subsys[subsys_id], lockdep_is_held(&task->alloc_lock) || cgroup_lock_is_held() || (__c))
task_subsys_state  function  include/linux/cgroup.h  528  task_subsys_state(struct task_struct *task,int subsys_id)
task_cgroup  function  include/linux/cgroup.h  534  static inline struct cgroup* task_cgroup(struct task_struct *task,int subsys_id)
cgroup_for_each_child  macro  include/linux/cgroup.h  554  #define cgroup_for_each_child(pos,cgroup) list_for_each_entry_rcu(pos, &(cgroup)->children, sibling)
cgroup_next_descendant_pre  prototype  include/linux/cgroup.h  557  struct cgroup *cgroup_next_descendant_pre(struct cgroup *pos,struct cgroup *cgroup);
cgroup_for_each_descendant_pre  macro  include/linux/cgroup.h  615  #define cgroup_for_each_descendant_pre(pos,cgroup) for (pos = cgroup_next_descendant_pre(NULL, (cgroup)); (pos); pos = cgroup_next_descendant_pre((pos), (cgroup)))
cgroup_next_descendant_post  prototype  include/linux/cgroup.h  618  struct cgroup *cgroup_next_descendant_post(struct cgroup *pos,struct cgroup *cgroup);
cgroup_for_each_descendant_post  macro  include/linux/cgroup.h  631  #define cgroup_for_each_descendant_post(pos,cgroup) for (pos = cgroup_next_descendant_post(NULL, (cgroup)); (pos); pos = cgroup_next_descendant_post((pos), (cgroup)))
cgroup_iter  struct  include/linux/cgroup.h  634  struct cgroup_iter {
cgroup_iter_start  prototype  include/linux/cgroup.h  654  void cgroup_iter_start(struct cgroup *cgrp,struct cgroup_iter *it);
cgroup_iter_next  prototype  include/linux/cgroup.h  656  struct task_struct *cgroup_iter_next(struct cgroup *cgrp,struct cgroup_iter *it);
cgroup_iter_end  prototype  include/linux/cgroup.h  657  void cgroup_iter_end(struct cgroup *cgrp,struct cgroup_iter *it);
cgroup_scan_tasks  prototype  include/linux/cgroup.h  658  int cgroup_scan_tasks(struct cgroup_scanner *scan);
cgroup_attach_task  prototype  include/linux/cgroup.h  659  int cgroup_attach_task(struct cgroup *,struct task_struct *);
cgroup_attach_task_all  function  include/linux/cgroup.h  720  static inline int cgroup_attach_task_all(struct task_struct *from,struct task_struct *t)
free_css_id  prototype  include/linux/cgroup.h  679  void free_css_id(struct cgroup_subsys *ss,struct cgroup_subsys_state *css);
css_lookup  prototype  include/linux/cgroup.h  683  struct cgroup_subsys_state *css_lookup(struct cgroup_subsys *ss,int id);
css_get_next  prototype  include/linux/cgroup.h  690  struct cgroup_subsys_state *css_get_next(struct cgroup_subsys *ss,int id,struct cgroup_subsys_state *root, int *foundid);
css_is_ancestor  prototype  include/linux/cgroup.h  694  bool css_is_ancestor(struct cgroup_subsys_state *cg,const struct cgroup_subsys_state *root);
css_id  prototype  include/linux/cgroup.h  697  unsigned short css_id(struct cgroup_subsys_state *css);
css_depth  prototype  include/linux/cgroup.h  698  unsigned short css_depth(struct cgroup_subsys_state *css);
cgroup_css_from_dir  prototype  include/linux/cgroup.h  699  struct cgroup_subsys_state *cgroup_css_from_dir(struct file *f,int id);
cgroup_fork_callbacks  function  include/linux/cgroup.h  706  static inline void cgroup_fork_callbacks(struct task_struct *p) {}
__LINUX_IF_PACKET_H  macro  include/uapi/linux/if_packet.h  2  #define __LINUX_IF_PACKET_H
sockaddr_pkt  struct  include/uapi/linux/if_packet.h  6  struct sockaddr_pkt {
sockaddr_ll  struct  include/uapi/linux/if_packet.h  12  struct sockaddr_ll {
PACKET_HOST  macro  include/uapi/linux/if_packet.h  24  #define PACKET_HOST 0
PACKET_BROADCAST  macro  include/uapi/linux/if_packet.h  25  #define PACKET_BROADCAST 1
PACKET_MULTICAST  macro  include/uapi/linux/if_packet.h  26  #define PACKET_MULTICAST 2
PACKET_OTHERHOST  macro  include/uapi/linux/if_packet.h  27  #define PACKET_OTHERHOST 3
PACKET_OUTGOING  macro  include/uapi/linux/if_packet.h  28  #define PACKET_OUTGOING 4
PACKET_LOOPBACK  macro  include/uapi/linux/if_packet.h  30  #define PACKET_LOOPBACK 5
PACKET_FASTROUTE  macro  include/uapi/linux/if_packet.h  31  #define PACKET_FASTROUTE 6
PACKET_ADD_MEMBERSHIP  macro  include/uapi/linux/if_packet.h  35  #define PACKET_ADD_MEMBERSHIP 1
PACKET_DROP_MEMBERSHIP  macro  include/uapi/linux/if_packet.h  36  #define PACKET_DROP_MEMBERSHIP 2
PACKET_RECV_OUTPUT  macro  include/uapi/linux/if_packet.h  37  #define PACKET_RECV_OUTPUT 3
PACKET_RX_RING  macro  include/uapi/linux/if_packet.h  39  #define PACKET_RX_RING 5
PACKET_STATISTICS  macro  include/uapi/linux/if_packet.h  40  #define PACKET_STATISTICS 6
PACKET_COPY_THRESH  macro  include/uapi/linux/if_packet.h  41  #define PACKET_COPY_THRESH 7
PACKET_AUXDATA  macro  include/uapi/linux/if_packet.h  42  #define PACKET_AUXDATA 8
PACKET_ORIGDEV  macro  include/uapi/linux/if_packet.h  43  #define PACKET_ORIGDEV 9
PACKET_VERSION  macro  include/uapi/linux/if_packet.h  44  #define PACKET_VERSION 10
PACKET_HDRLEN  macro  include/uapi/linux/if_packet.h  45  #define PACKET_HDRLEN 11
PACKET_RESERVE  macro  include/uapi/linux/if_packet.h  46  #define PACKET_RESERVE 12
PACKET_TX_RING  macro  include/uapi/linux/if_packet.h  47  #define PACKET_TX_RING 13
PACKET_LOSS  macro  include/uapi/linux/if_packet.h  48  #define PACKET_LOSS 14
PACKET_VNET_HDR  macro  include/uapi/linux/if_packet.h  49  #define PACKET_VNET_HDR 15
PACKET_TX_TIMESTAMP  macro  include/uapi/linux/if_packet.h  50  #define PACKET_TX_TIMESTAMP 16
PACKET_TIMESTAMP  macro  include/uapi/linux/if_packet.h  51  #define PACKET_TIMESTAMP 17
PACKET_FANOUT  macro  include/uapi/linux/if_packet.h  52  #define PACKET_FANOUT 18
PACKET_TX_HAS_OFF  macro  include/uapi/linux/if_packet.h  53  #define PACKET_TX_HAS_OFF 19
PACKET_FANOUT_HASH  macro  include/uapi/linux/if_packet.h  55  #define PACKET_FANOUT_HASH 0
PACKET_FANOUT_LB  macro  include/uapi/linux/if_packet.h  56  #define PACKET_FANOUT_LB 1
PACKET_FANOUT_CPU  macro  include/uapi/linux/if_packet.h  57  #define PACKET_FANOUT_CPU 2
PACKET_FANOUT_FLAG_DEFRAG  macro  include/uapi/linux/if_packet.h  58  #define PACKET_FANOUT_FLAG_DEFRAG 0x8000
tpacket_stats  struct  include/uapi/linux/if_packet.h  60  struct tpacket_stats {
tpacket_stats_v3  struct  include/uapi/linux/if_packet.h  65  struct tpacket_stats_v3 {
tpacket_stats_u  union  include/uapi/linux/if_packet.h  71  union tpacket_stats_u {
tpacket_auxdata  struct  include/uapi/linux/if_packet.h  76  struct tpacket_auxdata {
TP_STATUS_KERNEL  macro  include/uapi/linux/if_packet.h  87  #define TP_STATUS_KERNEL 0x0
TP_STATUS_USER  macro  include/uapi/linux/if_packet.h  88  #define TP_STATUS_USER 0x1
TP_STATUS_COPY  macro  include/uapi/linux/if_packet.h  89  #define TP_STATUS_COPY 0x2
TP_STATUS_LOSING  macro  include/uapi/linux/if_packet.h  90  #define TP_STATUS_LOSING 0x4
TP_STATUS_CSUMNOTREADY  macro  include/uapi/linux/if_packet.h  91  #define TP_STATUS_CSUMNOTREADY 0x8
TP_STATUS_VLAN_VALID  macro  include/uapi/linux/if_packet.h  92  #define TP_STATUS_VLAN_VALID 0x10
TP_STATUS_BLK_TMO  macro  include/uapi/linux/if_packet.h  93  #define TP_STATUS_BLK_TMO 0x20
TP_STATUS_AVAILABLE  macro  include/uapi/linux/if_packet.h  96  #define TP_STATUS_AVAILABLE 0x0
TP_STATUS_SEND_REQUEST  macro  include/uapi/linux/if_packet.h  97  #define TP_STATUS_SEND_REQUEST 0x1
TP_STATUS_SENDING  macro  include/uapi/linux/if_packet.h  98  #define TP_STATUS_SENDING 0x2
TP_STATUS_WRONG_FORMAT  macro  include/uapi/linux/if_packet.h  99  #define TP_STATUS_WRONG_FORMAT 0x4
TP_FT_REQ_FILL_RXHASH  macro  include/uapi/linux/if_packet.h  102  #define TP_FT_REQ_FILL_RXHASH 0x1
tpacket_hdr  struct  include/uapi/linux/if_packet.h  104  struct tpacket_hdr {
TPACKET_ALIGNMENT  macro  include/uapi/linux/if_packet.h  114  #define TPACKET_ALIGNMENT 16
TPACKET_ALIGN  macro  include/uapi/linux/if_packet.h  115  #define TPACKET_ALIGN(x) (((x)+TPACKET_ALIGNMENT-1)&~(TPACKET_ALIGNMENT-1))
TPACKET_HDRLEN  macro  include/uapi/linux/if_packet.h  116  #define TPACKET_HDRLEN (TPACKET_ALIGN(sizeof(struct tpacket_hdr)) + sizeof(struct sockaddr_ll))
tpacket2_hdr  struct  include/uapi/linux/if_packet.h  118  struct tpacket2_hdr {
tpacket_hdr_variant1  struct  include/uapi/linux/if_packet.h  130  struct tpacket_hdr_variant1 {
tpacket3_hdr  struct  include/uapi/linux/if_packet.h  135  struct tpacket3_hdr {
tpacket_bd_ts  struct  include/uapi/linux/if_packet.h  150  struct tpacket_bd_ts {
tpacket_hdr_v1  struct  include/uapi/linux/if_packet.h  158  struct tpacket_hdr_v1 {
tpacket_bd_header_u  union  include/uapi/linux/if_packet.h  207  union tpacket_bd_header_u {
tpacket_block_desc  struct  include/uapi/linux/if_packet.h  211  struct tpacket_block_desc {
TPACKET2_HDRLEN  macro  include/uapi/linux/if_packet.h  217  #define TPACKET2_HDRLEN (TPACKET_ALIGN(sizeof(struct tpacket2_hdr)) + sizeof(struct sockaddr_ll))
TPACKET3_HDRLEN  macro  include/uapi/linux/if_packet.h  218  #define TPACKET3_HDRLEN (TPACKET_ALIGN(sizeof(struct tpacket3_hdr)) + sizeof(struct sockaddr_ll))
tpacket_versions  enum  include/uapi/linux/if_packet.h  220  enum tpacket_versions {
tpacket_req  struct  include/uapi/linux/if_packet.h  239  struct tpacket_req {
tpacket_req3  struct  include/uapi/linux/if_packet.h  246  struct tpacket_req3 {
tpacket_req_u  union  include/uapi/linux/if_packet.h  256  union tpacket_req_u {
packet_mreq  struct  include/uapi/linux/if_packet.h  261  struct packet_mreq {
PACKET_MR_MULTICAST  macro  include/uapi/linux/if_packet.h  268  #define PACKET_MR_MULTICAST 0
PACKET_MR_PROMISC  macro  include/uapi/linux/if_packet.h  269  #define PACKET_MR_PROMISC 1
PACKET_MR_ALLMULTI  macro  include/uapi/linux/if_packet.h  270  #define PACKET_MR_ALLMULTI 2
PACKET_MR_UNICAST  macro  include/uapi/linux/if_packet.h  271  #define PACKET_MR_UNICAST 3
_LINUX_IF_LINK_H  macro  include/linux/if_link.h  2  #define _LINUX_IF_LINK_H
ifla_vf_info  struct  include/linux/if_link.h  8  struct ifla_vf_info {
_LINUX_JUMP_LABEL_H  macro  include/linux/jump_label.h  2  #define _LINUX_JUMP_LABEL_H
static_key  struct  include/linux/jump_label.h  136  struct static_key {
static_key_deferred  struct  include/linux/jump_label.h  144  struct static_key_deferred {
HAVE_JUMP_LABEL  macro  include/linux/jump_label.h  71  # define HAVE_JUMP_LABEL
jump_label_type  enum  include/linux/jump_label.h  74  enum jump_label_type {
JUMP_LABEL_TRUE_BRANCH  macro  include/linux/jump_label.h  83  #define JUMP_LABEL_TRUE_BRANCH 1UL
jump_label_get_entries  function  include/linux/jump_label.h  86  inline struct jump_entry *jump_label_get_entries(struct static_key *key)
jump_label_get_branch_default  function  include/linux/jump_label.h  92  static inline bool jump_label_get_branch_default(struct static_key *key)
static_key_false  function  include/linux/jump_label.h  148  static __always_inline bool static_key_false(struct static_key *key)
static_key_true  function  include/linux/jump_label.h  155  static __always_inline bool static_key_true(struct static_key *key)
jump_label_init  function  include/linux/jump_label.h  140  static __always_inline void jump_label_init(void)
jump_label_lock  function  include/linux/jump_label.h  182  static inline void jump_label_lock(void) {}
jump_label_unlock  function  include/linux/jump_label.h  183  static inline void jump_label_unlock(void) {}
arch_jump_label_transform  prototype  include/linux/jump_label.h  116  extern void arch_jump_label_transform(struct jump_entry *entry,enum jump_label_type type);
arch_jump_label_transform_static  prototype  include/linux/jump_label.h  118  extern void arch_jump_label_transform_static(struct jump_entry *entry,enum jump_label_type type);
jump_label_text_reserved  function  include/linux/jump_label.h  177  static inline int jump_label_text_reserved(void *start,void *end)
static_key_slow_inc  function  include/linux/jump_label.h  162  static inline void static_key_slow_inc(struct static_key *key)
static_key_slow_dec  function  include/linux/jump_label.h  167  static inline void static_key_slow_dec(struct static_key *key)
static_key_slow_dec_deferred  function  include/linux/jump_label.h  172  static inline void static_key_slow_dec_deferred(struct static_key_deferred *key)
jump_label_apply_nops  function  include/linux/jump_label.h  185  static inline int jump_label_apply_nops(struct module *mod)
jump_label_rate_limit  function  include/linux/jump_label.h  192  jump_label_rate_limit(struct static_key_deferred *key,unsigned long rl)
STATIC_KEY_INIT_TRUE  macro  include/linux/jump_label.h  197  #define STATIC_KEY_INIT_TRUE ((struct static_key) { .enabled = ATOMIC_INIT(1) })
STATIC_KEY_INIT_FALSE  macro  include/linux/jump_label.h  199  #define STATIC_KEY_INIT_FALSE ((struct static_key) { .enabled = ATOMIC_INIT(0) })
STATIC_KEY_INIT  macro  include/linux/jump_label.h  203  #define STATIC_KEY_INIT STATIC_KEY_INIT_FALSE
jump_label_enabled  macro  include/linux/jump_label.h  204  #define jump_label_enabled static_key_enabled
static_key_enabled  function  include/linux/jump_label.h  206  static inline bool static_key_enabled(struct static_key *key)
_LINUX_SRCU_H  macro  include/linux/srcu.h  30  #define _LINUX_SRCU_H
srcu_struct_array  struct  include/linux/srcu.h  36  struct srcu_struct_array {
rcu_batch  struct  include/linux/srcu.h  41  struct rcu_batch {
RCU_BATCH_INIT  macro  include/linux/srcu.h  45  #define RCU_BATCH_INIT(name) { NULL,&(name.head) }
srcu_struct  struct  include/linux/srcu.h  47  struct srcu_struct {
__init_srcu_struct  prototype  include/linux/srcu.h  68  int __init_srcu_struct(struct srcu_struct *sp,const char *name,struct lock_class_key *key);
init_srcu_struct  prototype  include/linux/srcu.h  80  int init_srcu_struct(struct srcu_struct *sp);
__SRCU_DEP_MAP_INIT  macro  include/linux/srcu.h  82  #define __SRCU_DEP_MAP_INIT(srcu_name)
process_srcu  prototype  include/linux/srcu.h  85  void process_srcu(struct work_struct *work);
__SRCU_STRUCT_INIT  macro  include/linux/srcu.h  99  #define __SRCU_STRUCT_INIT(name) { .completed = -300, .per_cpu_ref = &name##_srcu_array, .queue_lock = __SPIN_LOCK_UNLOCKED(name.queue_lock), .running = false, .batch_queue = RCU_BATCH_INIT(name.batch_queue), .batch_check0 = RCU_BATCH_INIT(name.batch_check0), .batch_check1 = RCU_BATCH_INIT(name.batch_check1), .batch_done = RCU_BATCH_INIT(name.batch_done), .work = __DELAYED_WORK_INITIALIZER(name.work, process_srcu, 0), __SRCU_DEP_MAP_INIT(name) }
DEFINE_SRCU  macro  include/linux/srcu.h  107  #define DEFINE_SRCU(name) static DEFINE_PER_CPU(struct srcu_struct_array, name##_srcu_array); struct srcu_struct name = __SRCU_STRUCT_INIT(name);
DEFINE_STATIC_SRCU  macro  include/linux/srcu.h  111  #define DEFINE_STATIC_SRCU(name) static DEFINE_PER_CPU(struct srcu_struct_array, name##_srcu_array); static struct srcu_struct name = __SRCU_STRUCT_INIT(name);
call_srcu  prototype  include/linux/srcu.h  131  void call_srcu(struct srcu_struct *sp,struct rcu_head *head,void (*func)(struct rcu_head *head));
cleanup_srcu_struct  prototype  include/linux/srcu.h  133  void cleanup_srcu_struct(struct srcu_struct *sp);
synchronize_srcu  prototype  include/linux/srcu.h  136  void synchronize_srcu(struct srcu_struct *sp);
synchronize_srcu_expedited  prototype  include/linux/srcu.h  137  void synchronize_srcu_expedited(struct srcu_struct *sp);
srcu_batches_completed  prototype  include/linux/srcu.h  138  long srcu_batches_completed(struct srcu_struct *sp);
srcu_barrier  prototype  include/linux/srcu.h  139  void srcu_barrier(struct srcu_struct *sp);
srcu_read_lock_held  function  include/linux/srcu.h  183  static inline int srcu_read_lock_held(struct srcu_struct *sp)
srcu_dereference_check  macro  include/linux/srcu.h  203  #define srcu_dereference_check(p,sp,c) __rcu_dereference_check((p), srcu_read_lock_held(sp) || (c), __rcu)
srcu_dereference  macro  include/linux/srcu.h  215  #define srcu_dereference(p,sp) srcu_dereference_check((p),(sp),0)
srcu_read_lock_raw  function  include/linux/srcu.h  275  static inline int srcu_read_lock_raw(struct srcu_struct *sp)
srcu_read_unlock_raw  function  include/linux/srcu.h  294  static inline void srcu_read_unlock_raw(struct srcu_struct *sp,int idx)
_UAPI_LINUX_RANDOM_H  macro  include/uapi/linux/random.h  8  #define _UAPI_LINUX_RANDOM_H
RNDGETENTCNT  macro  include/uapi/linux/random.h  17  #define RNDGETENTCNT _IOR( 'R',0x00,int )
RNDADDTOENTCNT  macro  include/uapi/linux/random.h  20  #define RNDADDTOENTCNT _IOW( 'R',0x01,int )
RNDGETPOOL  macro  include/uapi/linux/random.h  23  #define RNDGETPOOL _IOR( 'R',0x02,int [2] )
RNDADDENTROPY  macro  include/uapi/linux/random.h  29  #define RNDADDENTROPY _IOW( 'R',0x03,int [2] )
RNDZAPENTCNT  macro  include/uapi/linux/random.h  32  #define RNDZAPENTCNT _IO( 'R',0x04 )
RNDCLEARPOOL  macro  include/uapi/linux/random.h  35  #define RNDCLEARPOOL _IO( 'R',0x06 )
rand_pool_info  struct  include/uapi/linux/random.h  37  struct rand_pool_info {
rnd_state  struct  include/uapi/linux/random.h  43  struct rnd_state {
ASM_X86_ARCHRANDOM_H  macro  arch/x86/include/asm/archrandom.h  24  #define ASM_X86_ARCHRANDOM_H
RDRAND_RETRY_LOOPS  macro  arch/x86/include/asm/archrandom.h  31  #define RDRAND_RETRY_LOOPS 10
RDRAND_INT  macro  arch/x86/include/asm/archrandom.h  33  #define RDRAND_INT ".byte 0x0f,0xc7,0xf0"
RDRAND_LONG  macro  arch/x86/include/asm/archrandom.h  37  # define RDRAND_LONG RDRAND_INT
GET_RANDOM  macro  arch/x86/include/asm/archrandom.h  57  #define GET_RANDOM(name,type,rdrand,nop) static inline int name(type *v) { int ok; alternative_io("movl $0, %0\n\t" nop, "\n1: " rdrand "\n\t" "jc 2f\n\t" "decl %0\n\t" "jnz 1b\n\t" "2:", X86_FEATURE_RDRAND, ASM_OUTPUT2("=r" (ok), "=a" (*v)), "0" (RDRAND_RETRY_LOOPS)); return ok; }
x86_init_rdrand  prototype  arch/x86/include/asm/archrandom.h  73  extern void x86_init_rdrand(struct cpuinfo_x86 *c);
_LINUX_UNALIGNED_ACCESS_OK_H  macro  include/linux/unaligned/access_ok.h  2  #define _LINUX_UNALIGNED_ACCESS_OK_H
get_unaligned_le16  function  include/linux/unaligned/access_ok.h  7  static inline u16 get_unaligned_le16(const void *p)
get_unaligned_le32  function  include/linux/unaligned/access_ok.h  12  static inline u32 get_unaligned_le32(const void *p)
get_unaligned_le64  function  include/linux/unaligned/access_ok.h  17  static inline u64 get_unaligned_le64(const void *p)
get_unaligned_be16  function  include/linux/unaligned/access_ok.h  22  static inline u16 get_unaligned_be16(const void *p)
get_unaligned_be32  function  include/linux/unaligned/access_ok.h  27  static inline u32 get_unaligned_be32(const void *p)
get_unaligned_be64  function  include/linux/unaligned/access_ok.h  32  static inline u64 get_unaligned_be64(const void *p)
put_unaligned_le16  function  include/linux/unaligned/access_ok.h  37  static inline void put_unaligned_le16(u16 val,void *p)
put_unaligned_le32  function  include/linux/unaligned/access_ok.h  42  static inline void put_unaligned_le32(u32 val,void *p)
put_unaligned_le64  function  include/linux/unaligned/access_ok.h  47  static inline void put_unaligned_le64(u64 val,void *p)
put_unaligned_be16  function  include/linux/unaligned/access_ok.h  52  static inline void put_unaligned_be16(u16 val,void *p)
put_unaligned_be32  function  include/linux/unaligned/access_ok.h  57  static inline void put_unaligned_be32(u32 val,void *p)
put_unaligned_be64  function  include/linux/unaligned/access_ok.h  62  static inline void put_unaligned_be64(u64 val,void *p)
_LINUX_UNALIGNED_GENERIC_H  macro  include/linux/unaligned/generic.h  2  #define _LINUX_UNALIGNED_GENERIC_H
__bad_unaligned_access_size  prototype  include/linux/unaligned/generic.h  8  extern void __bad_unaligned_access_size(void);
__get_unaligned_le  macro  include/linux/unaligned/generic.h  16  #define __get_unaligned_le(ptr) ((__force typeof(*(ptr)))({ __builtin_choose_expr(sizeof(*(ptr)) == 1, *(ptr), __builtin_choose_expr(sizeof(*(ptr)) == 2, get_unaligned_le16((ptr)), __builtin_choose_expr(sizeof(*(ptr)) == 4, get_unaligned_le32((ptr)), __builtin_choose_expr(sizeof(*(ptr)) == 8, get_unaligned_le64((ptr)), __bad_unaligned_access_size())))); }))
__get_unaligned_be  macro  include/linux/unaligned/generic.h  24  #define __get_unaligned_be(ptr) ((__force typeof(*(ptr)))({ __builtin_choose_expr(sizeof(*(ptr)) == 1, *(ptr), __builtin_choose_expr(sizeof(*(ptr)) == 2, get_unaligned_be16((ptr)), __builtin_choose_expr(sizeof(*(ptr)) == 4, get_unaligned_be32((ptr)), __builtin_choose_expr(sizeof(*(ptr)) == 8, get_unaligned_be64((ptr)), __bad_unaligned_access_size())))); }))
__put_unaligned_le  macro  include/linux/unaligned/generic.h  45  #define __put_unaligned_le(val,ptr) ({ void *__gu_p = (ptr); switch (sizeof(*(ptr))) { case 1: *(u8 *)__gu_p = (__force u8)(val); break; case 2: put_unaligned_le16((__force u16)(val), __gu_p); break; case 4: put_unaligned_le32((__force u32)(val), __gu_p); break; case 8: put_unaligned_le64((__force u64)(val), __gu_p); break; default: __bad_unaligned_access_size(); break; } (void)0; })
__put_unaligned_be  macro  include/linux/unaligned/generic.h  66  #define __put_unaligned_be(val,ptr) ({ void *__gu_p = (ptr); switch (sizeof(*(ptr))) { case 1: *(u8 *)__gu_p = (__force u8)(val); break; case 2: put_unaligned_be16((__force u16)(val), __gu_p); break; case 4: put_unaligned_be32((__force u32)(val), __gu_p); break; case 8: put_unaligned_be64((__force u64)(val), __gu_p); break; default: __bad_unaligned_access_size(); break; } (void)0; })
_LINUX_FCNTL_H  macro  include/linux/fcntl.h  2  #define _LINUX_FCNTL_H
force_o_largefile  macro  include/linux/fcntl.h  8  #define force_o_largefile() (BITS_PER_LONG != 32)
IS_GETLK32  macro  include/linux/fcntl.h  19  #define IS_GETLK32(cmd) (0)
IS_SETLK32  macro  include/linux/fcntl.h  20  #define IS_SETLK32(cmd) (0)
IS_SETLKW32  macro  include/linux/fcntl.h  21  #define IS_SETLKW32(cmd) (0)
IS_GETLK64  macro  include/linux/fcntl.h  22  #define IS_GETLK64(cmd) ((cmd) == F_GETLK)
IS_SETLK64  macro  include/linux/fcntl.h  23  #define IS_SETLK64(cmd) ((cmd) == F_SETLK)
IS_SETLKW64  macro  include/linux/fcntl.h  24  #define IS_SETLKW64(cmd) ((cmd) == F_SETLKW)
IS_GETLK  macro  include/linux/fcntl.h  27  #define IS_GETLK(cmd) (IS_GETLK32(cmd) || IS_GETLK64(cmd))
IS_SETLK  macro  include/linux/fcntl.h  28  #define IS_SETLK(cmd) (IS_SETLK32(cmd) || IS_SETLK64(cmd))
IS_SETLKW  macro  include/linux/fcntl.h  29  #define IS_SETLKW(cmd) (IS_SETLKW32(cmd) || IS_SETLKW64(cmd))
_UAPI_LINUX_NET_H  macro  include/uapi/linux/net.h  19  #define _UAPI_LINUX_NET_H
NPROTO  macro  include/uapi/linux/net.h  24  #define NPROTO AF_MAX
SYS_SOCKET  macro  include/uapi/linux/net.h  26  #define SYS_SOCKET 1
SYS_BIND  macro  include/uapi/linux/net.h  27  #define SYS_BIND 2
SYS_CONNECT  macro  include/uapi/linux/net.h  28  #define SYS_CONNECT 3
SYS_LISTEN  macro  include/uapi/linux/net.h  29  #define SYS_LISTEN 4
SYS_ACCEPT  macro  include/uapi/linux/net.h  30  #define SYS_ACCEPT 5
SYS_GETSOCKNAME  macro  include/uapi/linux/net.h  31  #define SYS_GETSOCKNAME 6
SYS_GETPEERNAME  macro  include/uapi/linux/net.h  32  #define SYS_GETPEERNAME 7
SYS_SOCKETPAIR  macro  include/uapi/linux/net.h  33  #define SYS_SOCKETPAIR 8
SYS_SEND  macro  include/uapi/linux/net.h  34  #define SYS_SEND 9
SYS_RECV  macro  include/uapi/linux/net.h  35  #define SYS_RECV 10
SYS_SENDTO  macro  include/uapi/linux/net.h  36  #define SYS_SENDTO 11
SYS_RECVFROM  macro  include/uapi/linux/net.h  37  #define SYS_RECVFROM 12
SYS_SHUTDOWN  macro  include/uapi/linux/net.h  38  #define SYS_SHUTDOWN 13
SYS_SETSOCKOPT  macro  include/uapi/linux/net.h  39  #define SYS_SETSOCKOPT 14
SYS_GETSOCKOPT  macro  include/uapi/linux/net.h  40  #define SYS_GETSOCKOPT 15
SYS_SENDMSG  macro  include/uapi/linux/net.h  41  #define SYS_SENDMSG 16
SYS_RECVMSG  macro  include/uapi/linux/net.h  42  #define SYS_RECVMSG 17
SYS_ACCEPT4  macro  include/uapi/linux/net.h  43  #define SYS_ACCEPT4 18
SYS_RECVMMSG  macro  include/uapi/linux/net.h  44  #define SYS_RECVMMSG 19
SYS_SENDMMSG  macro  include/uapi/linux/net.h  45  #define SYS_SENDMMSG 20
__SO_ACCEPTCON  macro  include/uapi/linux/net.h  55  #define __SO_ACCEPTCON (1 << 16)
_DMA_ATTR_H  macro  include/linux/dma-attrs.h  2  #define _DMA_ATTR_H
dma_attr  enum  include/linux/dma-attrs.h  13  enum dma_attr {
__DMA_ATTRS_LONGS  macro  include/linux/dma-attrs.h  24  #define __DMA_ATTRS_LONGS BITS_TO_LONGS(DMA_ATTR_MAX)
dma_attrs  struct  include/linux/dma-attrs.h  30  struct dma_attrs {
DEFINE_DMA_ATTRS  macro  include/linux/dma-attrs.h  37  #define DEFINE_DMA_ATTRS(x) struct dma_attrs x = { .flags = { [0 ... __DMA_ATTRS_LONGS-1] = 0 }, }
init_dma_attrs  function  include/linux/dma-attrs.h  39  static inline void init_dma_attrs(struct dma_attrs *attrs)
dma_set_attr  function  include/linux/dma-attrs.h  71  static inline void dma_set_attr(enum dma_attr attr,struct dma_attrs *attrs)
dma_get_attr  function  include/linux/dma-attrs.h  75  static inline int dma_get_attr(enum dma_attr attr,struct dma_attrs *attrs)
_LINUX_DMA_DIRECTION_H  macro  include/linux/dma-direction.h  2  #define _LINUX_DMA_DIRECTION_H
dma_data_direction  enum  include/linux/dma-direction.h  7  enum dma_data_direction {
_ASM_X86_DMA_MAPPING_H  macro  arch/x86/include/asm/dma-mapping.h  2  #define _ASM_X86_DMA_MAPPING_H
ISA_DMA_BIT_MASK  macro  arch/x86/include/asm/dma-mapping.h  21  # define ISA_DMA_BIT_MASK DMA_BIT_MASK(32)
DMA_ERROR_CODE  macro  arch/x86/include/asm/dma-mapping.h  24  #define DMA_ERROR_CODE 0
get_dma_ops  function  arch/x86/include/asm/dma-mapping.h  32  static inline struct dma_map_ops *get_dma_ops(struct device *dev)
dma_mapping_error  prototype  include/asm-generic/dma-mapping-broken.h  80  dma_mapping_error(struct device *dev,dma_addr_t dma_addr);
dma_alloc_noncoherent  macro  include/asm-generic/dma-mapping-broken.h  35  #define dma_alloc_noncoherent(d,s,h,f) dma_alloc_coherent(d,s,h,f)
dma_free_noncoherent  macro  include/asm-generic/dma-mapping-broken.h  36  #define dma_free_noncoherent(d,s,v,h) dma_free_coherent(d,s,v,h)
dma_supported  prototype  include/asm-generic/dma-mapping-broken.h  83  dma_supported(struct device *dev,u64 mask);
dma_set_mask  prototype  include/asm-generic/dma-mapping-broken.h  86  dma_set_mask(struct device *dev,u64 mask);
dma_generic_alloc_coherent  prototype  arch/x86/include/asm/dma-mapping.h  65  extern void *dma_generic_alloc_coherent(struct device *dev,size_t size,dma_addr_t *dma_addr, gfp_t flag,struct dma_attrs *attrs);
dma_generic_free_coherent  prototype  arch/x86/include/asm/dma-mapping.h  69  extern void dma_generic_free_coherent(struct device *dev,size_t size,void *vaddr, dma_addr_t dma_addr,struct dma_attrs *attrs);
dma_capable  function  arch/x86/include/asm/dma-mapping.h  77  static inline bool dma_capable(struct device *dev,dma_addr_t addr,size_t size)
phys_to_dma  function  arch/x86/include/asm/dma-mapping.h  85  static inline dma_addr_t phys_to_dma(struct device *dev,phys_addr_t paddr)
dma_to_phys  function  arch/x86/include/asm/dma-mapping.h  90  static inline phys_addr_t dma_to_phys(struct device *dev,dma_addr_t daddr)
dma_cache_sync  prototype  include/asm-generic/dma-mapping-broken.h  93  dma_cache_sync(struct device *dev,void *vaddr,size_t size,enum dma_data_direction direction);
dma_alloc_coherent_mask  function  arch/x86/include/asm/dma-mapping.h  104  static inline unsigned long dma_alloc_coherent_mask(struct device *dev,gfp_t gfp)
dma_alloc_coherent_gfp_flags  function  arch/x86/include/asm/dma-mapping.h  115  static inline gfp_t dma_alloc_coherent_gfp_flags(struct device *dev,gfp_t gfp)
dma_alloc_coherent  prototype  include/asm-generic/dma-mapping-broken.h  13  dma_alloc_coherent(struct device *dev,size_t size,dma_addr_t *dma_handle,gfp_t flag);
dma_alloc_attrs  function  include/asm-generic/dma-mapping-broken.h  21  static inline void *dma_alloc_attrs(struct device *dev,size_t size,dma_addr_t *dma_handle, gfp_t flag,struct dma_attrs *attrs)
dma_free_coherent  prototype  include/asm-generic/dma-mapping-broken.h  17  dma_free_coherent(struct device *dev,size_t size,void *cpu_addr,dma_addr_t dma_handle);
dma_free_attrs  function  include/asm-generic/dma-mapping-broken.h  29  static inline void dma_free_attrs(struct device *dev,size_t size,void *cpu_addr, dma_addr_t dma_handle,struct dma_attrs *attrs)
_ASM_GENERIC_DMA_MAPPING_H  macro  include/asm-generic/dma-mapping-common.h  2  #define _ASM_GENERIC_DMA_MAPPING_H
dma_map_single  macro  include/asm-generic/dma-mapping-common.h  174  #define dma_map_single(d,a,s,r) dma_map_single_attrs(d,a,s,r,NULL)
dma_unmap_single  macro  include/asm-generic/dma-mapping-common.h  175  #define dma_unmap_single(d,a,s,r) dma_unmap_single_attrs(d,a,s,r,NULL)
dma_map_sg  macro  include/asm-generic/dma-mapping-common.h  176  #define dma_map_sg(d,s,n,r) dma_map_sg_attrs(d,s,n,r,NULL)
dma_unmap_sg  macro  include/asm-generic/dma-mapping-common.h  177  #define dma_unmap_sg(d,s,n,r) dma_unmap_sg_attrs(d,s,n,r,NULL)
dma_map_page  function  include/asm-generic/dma-mapping-common.h  73  static inline dma_addr_t dma_map_page(struct device *dev,struct page *page,size_t offset, size_t size,enum dma_data_direction dir)
dma_unmap_page  function  include/asm-generic/dma-mapping-common.h  87  static inline void dma_unmap_page(struct device *dev,dma_addr_t addr,size_t size, enum dma_data_direction dir)
dma_sync_single_for_cpu  function  include/asm-generic/dma-mapping-common.h  99  static inline void dma_sync_single_for_cpu(struct device *dev,dma_addr_t addr,size_t size,enum dma_data_direction dir)
dma_sync_single_range_for_cpu  function  include/asm-generic/dma-mapping-common.h  125  static inline void dma_sync_single_range_for_cpu(struct device *dev,dma_addr_t addr,unsigned long offset,size_t size,enum dma_data_direction dir)
dma_sync_sg_for_cpu  function  include/asm-generic/dma-mapping-common.h  151  dma_sync_sg_for_cpu(struct device *dev,struct scatterlist *sg,int nelems, enum dma_data_direction dir)
dma_sync_single_for_device  function  include/asm-generic/dma-mapping-common.h  111  static inline void dma_sync_single_for_device(struct device *dev,dma_addr_t addr, size_t size,enum dma_data_direction dir)
dma_sync_single_range_for_device  function  include/asm-generic/dma-mapping-common.h  139  static inline void dma_sync_single_range_for_device(struct device *dev,dma_addr_t addr,unsigned long offset,size_t size,enum dma_data_direction dir)
dma_sync_sg_for_device  function  include/asm-generic/dma-mapping-common.h  163  dma_sync_sg_for_device(struct device *dev,struct scatterlist *sg,int nelems, enum dma_data_direction dir)
_ASM_X86_ALTERNATIVE_H  macro  arch/x86/include/asm/alternative.h  2  #define _ASM_X86_ALTERNATIVE_H
LOCK_PREFIX_HERE  macro  arch/x86/include/asm/alternative.h  41  #define LOCK_PREFIX_HERE ""
LOCK_PREFIX  macro  arch/x86/include/asm/alternative.h  42  #define LOCK_PREFIX ""
alt_instr  struct  arch/x86/include/asm/alternative.h  45  struct alt_instr {
alternative_instructions  prototype  arch/x86/include/asm/alternative.h  53  extern void alternative_instructions(void);
apply_alternatives  prototype  arch/x86/include/asm/alternative.h  54  extern void apply_alternatives(struct alt_instr *start,struct alt_instr *end);
alternatives_smp_module_add  function  arch/x86/include/asm/alternative.h  69  static inline void alternatives_smp_module_add(struct module *mod,char *name,void *locks, void *locks_end,void *text, void *text_end) {}
alternatives_smp_module_del  function  arch/x86/include/asm/alternative.h  70  static inline void alternatives_smp_module_del(struct module *mod) {}
alternatives_enable_smp  function  arch/x86/include/asm/alternative.h  71  static inline void alternatives_enable_smp(void) {}
alternatives_text_reserved  function  arch/x86/include/asm/alternative.h  72  static inline int alternatives_text_reserved(void *start,void *end)
OLDINSTR  macro  arch/x86/include/asm/alternative.h  78  #define OLDINSTR(oldinstr) "661:\n\t" oldinstr "\n662:\n"
b_replacement  macro  arch/x86/include/asm/alternative.h  80  #define b_replacement(number) "663"#number
e_replacement  macro  arch/x86/include/asm/alternative.h  81  #define e_replacement(number) "664"#number
alt_slen  macro  arch/x86/include/asm/alternative.h  83  #define alt_slen "662b-661b"
alt_rlen  macro  arch/x86/include/asm/alternative.h  84  #define alt_rlen(number) e_replacement(number)"f-"b_replacement(number)"f"
ALTINSTR_ENTRY  macro  arch/x86/include/asm/alternative.h  91  #define ALTINSTR_ENTRY(feature,number) " .long 661b - .\n"				/* label           */ " .long " b_replacement(number)"f - .\n"	/* new instruction */ " .word " __stringify(feature) "\n"		/* feature bit     */ " .byte " alt_slen "\n"				/* source len      */ " .byte " alt_rlen(number) "\n"			/* replacement len */
DISCARD_ENTRY  macro  arch/x86/include/asm/alternative.h  93  #define DISCARD_ENTRY(number)
ALTINSTR_REPLACEMENT  macro  arch/x86/include/asm/alternative.h  96  #define ALTINSTR_REPLACEMENT(newinstr,feature,number)
ALTERNATIVE  macro  arch/x86/include/asm/alternative.h  110  #define ALTERNATIVE(oldinstr,newinstr,feature) OLDINSTR(oldinstr) ".pushsection .altinstructions,\"a\"\n" ALTINSTR_ENTRY(feature, 1) ".popsection\n" ".pushsection .discard,\"aw\",@progbits\n" DISCARD_ENTRY(1) ".popsection\n" ".pushsection .altinstr_replacement, \"ax\"\n" ALTINSTR_REPLACEMENT(newinstr, feature, 1) ".popsection"
ALTERNATIVE_2  macro  arch/x86/include/asm/alternative.h  125  #define ALTERNATIVE_2(oldinstr,newinstr1,feature1,newinstr2,feature2) OLDINSTR(oldinstr) ".pushsection .altinstructions,\"a\"\n" ALTINSTR_ENTRY(feature1, 1) ALTINSTR_ENTRY(feature2, 2) ".popsection\n" ".pushsection .discard,\"aw\",@progbits\n" DISCARD_ENTRY(1) DISCARD_ENTRY(2) ".popsection\n" ".pushsection .altinstr_replacement, \"ax\"\n" ALTINSTR_REPLACEMENT(newinstr1, feature1, 1) ALTINSTR_REPLACEMENT(newinstr2, feature2, 2) ".popsection"
alternative  macro  arch/x86/include/asm/alternative.h  146  #define alternative(oldinstr,newinstr,feature) asm volatile (ALTERNATIVE(oldinstr, newinstr, feature) : : : "memory")
alternative_input  macro  arch/x86/include/asm/alternative.h  161  #define alternative_input(oldinstr,newinstr,feature,input...) asm volatile (ALTERNATIVE(oldinstr, newinstr, feature) : : "i" (0), ## input)
alternative_io  macro  arch/x86/include/asm/alternative.h  166  #define alternative_io(oldinstr,newinstr,feature,output,input...) asm volatile (ALTERNATIVE(oldinstr, newinstr, feature) : output : "i" (0), ## input)
alternative_call  macro  arch/x86/include/asm/alternative.h  171  #define alternative_call(oldfunc,newfunc,feature,output,input...) asm volatile (ALTERNATIVE("call %P[old]", "call %P[new]", feature) : output : [old] "i" (oldfunc), [new] "i" (newfunc), ## input)
alternative_call_2  macro  arch/x86/include/asm/alternative.h  184  #define alternative_call_2(oldfunc,newfunc1,feature1,newfunc2,feature2, output, input...) asm volatile (ALTERNATIVE_2("call %P[old]", "call %P[new1]", feature1, "call %P[new2]", feature2) : output : [old] "i" (oldfunc), [new1] "i" (newfunc1), [new2] "i" (newfunc2), ## input)
ASM_OUTPUT2  macro  arch/x86/include/asm/alternative.h  190  #define ASM_OUTPUT2(a...) a
ASM_NO_INPUT_CLOBBER  macro  arch/x86/include/asm/alternative.h  196  #define ASM_NO_INPUT_CLOBBER(clbr...) "i" (0) : clbr
apply_paravirt  function  arch/x86/include/asm/alternative.h  204  static inline void apply_paravirt(struct paravirt_patch_site *start,struct paravirt_patch_site *end)
__parainstructions  macro  arch/x86/include/asm/alternative.h  206  #define __parainstructions NULL
__parainstructions_end  macro  arch/x86/include/asm/alternative.h  207  #define __parainstructions_end NULL
text_poke_early  prototype  arch/x86/include/asm/alternative.h  210  extern void *text_poke_early(void *addr,const void *opcode,size_t len);
text_poke_param  struct  arch/x86/include/asm/alternative.h  229  struct text_poke_param {
text_poke  prototype  arch/x86/include/asm/alternative.h  235  extern void *text_poke(void *addr,const void *opcode,size_t len);
text_poke_smp  prototype  arch/x86/include/asm/alternative.h  236  extern void *text_poke_smp(void *addr,const void *opcode,size_t len);
text_poke_smp_batch  prototype  arch/x86/include/asm/alternative.h  237  extern void text_poke_smp_batch(struct text_poke_param *params,int n);
_ASM_X86_SPINLOCK_TYPES_H  macro  arch/x86/include/asm/spinlock_types.h  2  #define _ASM_X86_SPINLOCK_TYPES_H
TICKET_SHIFT  macro  arch/x86/include/asm/spinlock_types.h  18  #define TICKET_SHIFT (sizeof(__ticket_t) * 8)
arch_spinlock  struct  arch/x86/include/asm/spinlock_types.h  20  typedef struct arch_spinlock {
__raw_tickets  struct  arch/x86/include/asm/spinlock_types.h  23  struct __raw_tickets {
__ARCH_SPIN_LOCK_UNLOCKED  macro  include/linux/spinlock_types_up.h  27  #define __ARCH_SPIN_LOCK_UNLOCKED { }
__LINUX_SPINLOCK_TYPES_UP_H  macro  include/linux/spinlock_types_up.h  2  #define __LINUX_SPINLOCK_TYPES_UP_H
__ARCH_RW_LOCK_UNLOCKED  macro  include/linux/spinlock_types_up.h  35  #define __ARCH_RW_LOCK_UNLOCKED { }
__LINUX_RWLOCK_TYPES_H  macro  include/linux/rwlock_types.h  2  #define __LINUX_RWLOCK_TYPES_H
RWLOCK_MAGIC  macro  include/linux/rwlock_types.h  25  #define RWLOCK_MAGIC 0xdeaf1eed
RW_DEP_MAP_INIT  macro  include/linux/rwlock_types.h  30  # define RW_DEP_MAP_INIT(lockname)
__RW_LOCK_UNLOCKED  macro  include/linux/rwlock_types.h  43  #define __RW_LOCK_UNLOCKED(lockname) (rwlock_t)	{	.raw_lock = __ARCH_RW_LOCK_UNLOCKED, RW_DEP_MAP_INIT(lockname) }
DEFINE_RWLOCK  macro  include/linux/rwlock_types.h  46  #define DEFINE_RWLOCK(x) rwlock_t x = __RW_LOCK_UNLOCKED(x)
__LINUX_RWLOCK_API_SMP_H  macro  include/linux/rwlock_api_smp.h  2  #define __LINUX_RWLOCK_API_SMP_H
__raw_read_trylock  function  include/linux/rwlock_api_smp.h  117  static inline int __raw_read_trylock(rwlock_t *lock)
__raw_write_trylock  function  include/linux/rwlock_api_smp.h  128  static inline int __raw_write_trylock(rwlock_t *lock)
__raw_read_lock  function  include/linux/rwlock_api_smp.h  146  static inline void __raw_read_lock(rwlock_t *lock)
__raw_read_lock_irqsave  function  include/linux/rwlock_api_smp.h  153  static inline unsigned long __raw_read_lock_irqsave(rwlock_t *lock)
__raw_read_lock_irq  function  include/linux/rwlock_api_smp.h  165  static inline void __raw_read_lock_irq(rwlock_t *lock)
__raw_read_lock_bh  function  include/linux/rwlock_api_smp.h  173  static inline void __raw_read_lock_bh(rwlock_t *lock)
__raw_write_lock_irqsave  function  include/linux/rwlock_api_smp.h  181  static inline unsigned long __raw_write_lock_irqsave(rwlock_t *lock)
__raw_write_lock_irq  function  include/linux/rwlock_api_smp.h  193  static inline void __raw_write_lock_irq(rwlock_t *lock)
__raw_write_lock_bh  function  include/linux/rwlock_api_smp.h  201  static inline void __raw_write_lock_bh(rwlock_t *lock)
__raw_write_lock  function  include/linux/rwlock_api_smp.h  209  static inline void __raw_write_lock(rwlock_t *lock)
__raw_write_unlock  function  include/linux/rwlock_api_smp.h  218  static inline void __raw_write_unlock(rwlock_t *lock)
__raw_read_unlock  function  include/linux/rwlock_api_smp.h  225  static inline void __raw_read_unlock(rwlock_t *lock)
__raw_read_unlock_irqrestore  function  include/linux/rwlock_api_smp.h  233  __raw_read_unlock_irqrestore(rwlock_t *lock,unsigned long flags)
__raw_read_unlock_irq  function  include/linux/rwlock_api_smp.h  241  static inline void __raw_read_unlock_irq(rwlock_t *lock)
__raw_read_unlock_bh  function  include/linux/rwlock_api_smp.h  249  static inline void __raw_read_unlock_bh(rwlock_t *lock)
__raw_write_unlock_irqrestore  function  include/linux/rwlock_api_smp.h  258  static inline void __raw_write_unlock_irqrestore(rwlock_t *lock,unsigned long flags)
__raw_write_unlock_irq  function  include/linux/rwlock_api_smp.h  266  static inline void __raw_write_unlock_irq(rwlock_t *lock)
__raw_write_unlock_bh  function  include/linux/rwlock_api_smp.h  274  static inline void __raw_write_unlock_bh(rwlock_t *lock)
_ASM_GENERIC_BITOPS_FLS64_H_  macro  include/asm-generic/bitops/fls64.h  2  #define _ASM_GENERIC_BITOPS_FLS64_H_
_ASM_GENERIC_BITOPS_FIND_H_  macro  include/asm-generic/bitops/find.h  2  #define _ASM_GENERIC_BITOPS_FIND_H_
find_next_bit  prototype  include/asm-generic/bitops/find.h  11  extern unsigned long find_next_bit(const unsigned long *addr,unsigned long
find_next_zero_bit  prototype  include/asm-generic/bitops/find.h  22  extern unsigned long find_next_zero_bit(const unsigned long *addr,unsigned
find_first_bit  macro  include/asm-generic/bitops/find.h  49  #define find_first_bit(addr,size) find_next_bit((addr),(size),0)
find_first_zero_bit  macro  include/asm-generic/bitops/find.h  50  #define find_first_zero_bit(addr,size) find_next_zero_bit((addr),(size),0)
_ASM_GENERIC_BITOPS_SCHED_H_  macro  include/asm-generic/bitops/sched.h  2  #define _ASM_GENERIC_BITOPS_SCHED_H_
sched_find_first_bit  function  include/asm-generic/bitops/sched.h  12  static inline int sched_find_first_bit(const unsigned long *b)
_ASM_X86_HWEIGHT_H  macro  arch/x86/include/asm/arch_hweight.h  2  #define _ASM_X86_HWEIGHT_H
POPCNT32  macro  arch/x86/include/asm/arch_hweight.h  13  #define POPCNT32 ".byte 0xf3,0x0f,0xb8,0xc0"
POPCNT64  macro  arch/x86/include/asm/arch_hweight.h  8  #define POPCNT64 ".byte 0xf3,0x48,0x0f,0xb8,0xc7"
REG_IN  macro  arch/x86/include/asm/arch_hweight.h  14  #define REG_IN "a"
REG_OUT  macro  arch/x86/include/asm/arch_hweight.h  15  #define REG_OUT "a"
__arch_hweight32  function  arch/x86/include/asm/arch_hweight.h  24  static inline unsigned int __arch_hweight32(unsigned int w)
__arch_hweight16  function  arch/x86/include/asm/arch_hweight.h  35  static inline unsigned int __arch_hweight16(unsigned int w)
__arch_hweight8  function  arch/x86/include/asm/arch_hweight.h  40  static inline unsigned int __arch_hweight8(unsigned int w)
__arch_hweight64  function  arch/x86/include/asm/arch_hweight.h  45  static inline unsigned long __arch_hweight64(__u64 w)
_ASM_GENERIC_BITOPS_CONST_HWEIGHT_H_  macro  include/asm-generic/bitops/const_hweight.h  2  #define _ASM_GENERIC_BITOPS_CONST_HWEIGHT_H_
__const_hweight8  macro  include/asm-generic/bitops/const_hweight.h  15  #define __const_hweight8(w) (	(!!((w) & (1ULL << 0))) + (!!((w) & (1ULL << 1))) + (!!((w) & (1ULL << 2))) + (!!((w) & (1ULL << 3))) + (!!((w) & (1ULL << 4))) + (!!((w) & (1ULL << 5))) + (!!((w) & (1ULL << 6))) + (!!((w) & (1ULL << 7)))	)
__const_hweight16  macro  include/asm-generic/bitops/const_hweight.h  17  #define __const_hweight16(w) (__const_hweight8(w) + __const_hweight8((w) >> 8 ))
__const_hweight32  macro  include/asm-generic/bitops/const_hweight.h  18  #define __const_hweight32(w) (__const_hweight16(w) + __const_hweight16((w) >> 16))
__const_hweight64  macro  include/asm-generic/bitops/const_hweight.h  19  #define __const_hweight64(w) (__const_hweight32(w) + __const_hweight32((w) >> 32))
hweight8  macro  include/asm-generic/bitops/const_hweight.h  24  #define hweight8(w) (__builtin_constant_p(w) ? __const_hweight8(w) : __arch_hweight8(w))
hweight16  macro  include/asm-generic/bitops/const_hweight.h  25  #define hweight16(w) (__builtin_constant_p(w) ? __const_hweight16(w) : __arch_hweight16(w))
hweight32  macro  include/asm-generic/bitops/const_hweight.h  26  #define hweight32(w) (__builtin_constant_p(w) ? __const_hweight32(w) : __arch_hweight32(w))
hweight64  macro  include/asm-generic/bitops/const_hweight.h  27  #define hweight64(w) (__builtin_constant_p(w) ? __const_hweight64(w) : __arch_hweight64(w))
HWEIGHT8  macro  include/asm-generic/bitops/const_hweight.h  32  #define HWEIGHT8(w) (BUILD_BUG_ON_ZERO(!__builtin_constant_p(w)) + __const_hweight8(w))
HWEIGHT16  macro  include/asm-generic/bitops/const_hweight.h  33  #define HWEIGHT16(w) (BUILD_BUG_ON_ZERO(!__builtin_constant_p(w)) + __const_hweight16(w))
HWEIGHT32  macro  include/asm-generic/bitops/const_hweight.h  34  #define HWEIGHT32(w) (BUILD_BUG_ON_ZERO(!__builtin_constant_p(w)) + __const_hweight32(w))
HWEIGHT64  macro  include/asm-generic/bitops/const_hweight.h  35  #define HWEIGHT64(w) (BUILD_BUG_ON_ZERO(!__builtin_constant_p(w)) + __const_hweight64(w))
HWEIGHT  macro  include/asm-generic/bitops/const_hweight.h  40  #define HWEIGHT(w) HWEIGHT64((u64)w)
_ASM_GENERIC_BITOPS_LE_H_  macro  include/asm-generic/bitops/le.h  2  #define _ASM_GENERIC_BITOPS_LE_H_
BITOP_LE_SWIZZLE  macro  include/asm-generic/bitops/le.h  31  #define BITOP_LE_SWIZZLE ((BITS_PER_LONG-1) & ~0x7)
find_next_zero_bit_le  prototype  include/asm-generic/bitops/le.h  35  extern unsigned long find_next_zero_bit_le(const void *addr,unsigned long size, unsigned long offset);
find_next_bit_le  prototype  include/asm-generic/bitops/le.h  40  extern unsigned long find_next_bit_le(const void *addr,unsigned long size, unsigned long offset);
find_first_zero_bit_le  macro  include/asm-generic/bitops/le.h  45  #define find_first_zero_bit_le(addr,size) find_next_zero_bit_le((addr), (size), 0)
test_bit_le  function  include/asm-generic/bitops/le.h  52  static inline int test_bit_le(int nr,const void *addr)
set_bit_le  function  include/asm-generic/bitops/le.h  57  static inline void set_bit_le(int nr,void *addr)
clear_bit_le  function  include/asm-generic/bitops/le.h  62  static inline void clear_bit_le(int nr,void *addr)
__set_bit_le  function  include/asm-generic/bitops/le.h  67  static inline void __set_bit_le(int nr,void *addr)
__clear_bit_le  function  include/asm-generic/bitops/le.h  72  static inline void __clear_bit_le(int nr,void *addr)
test_and_set_bit_le  function  include/asm-generic/bitops/le.h  77  static inline int test_and_set_bit_le(int nr,void *addr)
test_and_clear_bit_le  function  include/asm-generic/bitops/le.h  82  static inline int test_and_clear_bit_le(int nr,void *addr)
__test_and_set_bit_le  function  include/asm-generic/bitops/le.h  87  static inline int __test_and_set_bit_le(int nr,void *addr)
__test_and_clear_bit_le  function  include/asm-generic/bitops/le.h  92  static inline int __test_and_clear_bit_le(int nr,void *addr)
_ASM_GENERIC_BITOPS_EXT2_ATOMIC_SETBIT_H_  macro  include/asm-generic/bitops/ext2-atomic-setbit.h  2  #define _ASM_GENERIC_BITOPS_EXT2_ATOMIC_SETBIT_H_
ext2_set_bit_atomic  macro  include/asm-generic/bitops/ext2-atomic-setbit.h  8  #define ext2_set_bit_atomic(l,nr,addr) test_and_set_bit_le(nr,addr)
ext2_clear_bit_atomic  macro  include/asm-generic/bitops/ext2-atomic-setbit.h  9  #define ext2_clear_bit_atomic(l,nr,addr) test_and_clear_bit_le(nr,addr)
__GENERIC_IO_H  macro  include/asm-generic/iomap.h  2  #define __GENERIC_IO_H
ioread8  prototype  include/asm-generic/iomap.h  28  extern unsigned int ioread8(void __iomem *);
ioread16  prototype  include/asm-generic/iomap.h  29  extern unsigned int ioread16(void __iomem *);
ioread16be  prototype  include/asm-generic/iomap.h  30  extern unsigned int ioread16be(void __iomem *);
ioread32  prototype  include/asm-generic/iomap.h  31  extern unsigned int ioread32(void __iomem *);
ioread32be  prototype  include/asm-generic/iomap.h  32  extern unsigned int ioread32be(void __iomem *);
iowrite8  prototype  include/asm-generic/iomap.h  34  extern void iowrite8(u8,void __iomem *);
iowrite16  prototype  include/asm-generic/iomap.h  35  extern void iowrite16(u16,void __iomem *);
iowrite16be  prototype  include/asm-generic/iomap.h  36  extern void iowrite16be(u16,void __iomem *);
iowrite32  prototype  include/asm-generic/iomap.h  37  extern void iowrite32(u32,void __iomem *);
iowrite32be  prototype  include/asm-generic/iomap.h  38  extern void iowrite32be(u32,void __iomem *);
ioread8_rep  prototype  include/asm-generic/iomap.h  51  extern void ioread8_rep(void __iomem *port,void *buf,unsigned long count);
ioread16_rep  prototype  include/asm-generic/iomap.h  52  extern void ioread16_rep(void __iomem *port,void *buf,unsigned long count);
ioread32_rep  prototype  include/asm-generic/iomap.h  53  extern void ioread32_rep(void __iomem *port,void *buf,unsigned long count);
iowrite8_rep  prototype  include/asm-generic/iomap.h  55  extern void iowrite8_rep(void __iomem *port,const void *buf,unsigned long count);
iowrite16_rep  prototype  include/asm-generic/iomap.h  56  extern void iowrite16_rep(void __iomem *port,const void *buf,unsigned long count);
iowrite32_rep  prototype  include/asm-generic/iomap.h  57  extern void iowrite32_rep(void __iomem *port,const void *buf,unsigned long count);
ioport_map  prototype  include/asm-generic/iomap.h  61  extern void __iomem *ioport_map(unsigned long port,unsigned int nr);
ioport_unmap  prototype  include/asm-generic/iomap.h  62  extern void ioport_unmap(void __iomem *);
pci_iounmap  function  include/asm-generic/iomap.h  75  static inline void pci_iounmap(struct pci_dev *dev,void __iomem *addr)
_LINUX_VMALLOC_H  macro  include/linux/vmalloc.h  2  #define _LINUX_VMALLOC_H
VM_IOREMAP  macro  include/linux/vmalloc.h  11  #define VM_IOREMAP 0x00000001
VM_ALLOC  macro  include/linux/vmalloc.h  12  #define VM_ALLOC 0x00000002
VM_MAP  macro  include/linux/vmalloc.h  13  #define VM_MAP 0x00000004
VM_USERMAP  macro  include/linux/vmalloc.h  14  #define VM_USERMAP 0x00000008
VM_VPAGES  macro  include/linux/vmalloc.h  15  #define VM_VPAGES 0x00000010
VM_UNLIST  macro  include/linux/vmalloc.h  16  #define VM_UNLIST 0x00000020
IOREMAP_MAX_ORDER  macro  include/linux/vmalloc.h  24  #define IOREMAP_MAX_ORDER (7 + PAGE_SHIFT)
vm_struct  struct  include/linux/vmalloc.h  27  struct vm_struct {
vm_unmap_ram  prototype  include/linux/vmalloc.h  41  extern void vm_unmap_ram(const void *mem,unsigned int count);
vm_map_ram  prototype  include/linux/vmalloc.h  43  extern void *vm_map_ram(struct page **pages,unsigned int count,int node, pgprot_t prot);
vm_unmap_aliases  prototype  include/linux/vmalloc.h  44  extern void vm_unmap_aliases(void);
vmalloc_init  function  include/linux/vmalloc.h  49  static inline void vmalloc_init(void)
vmalloc  prototype  include/linux/vmalloc.h  54  extern void *vmalloc(unsigned long size);
vzalloc  prototype  include/linux/vmalloc.h  55  extern void *vzalloc(unsigned long size);
vmalloc_user  prototype  include/linux/vmalloc.h  56  extern void *vmalloc_user(unsigned long size);
vmalloc_node  prototype  include/linux/vmalloc.h  57  extern void *vmalloc_node(unsigned long size,int node);
vzalloc_node  prototype  include/linux/vmalloc.h  58  extern void *vzalloc_node(unsigned long size,int node);
vmalloc_exec  prototype  include/linux/vmalloc.h  59  extern void *vmalloc_exec(unsigned long size);
vmalloc_32  prototype  include/linux/vmalloc.h  60  extern void *vmalloc_32(unsigned long size);
vmalloc_32_user  prototype  include/linux/vmalloc.h  61  extern void *vmalloc_32_user(unsigned long size);
__vmalloc  prototype  include/linux/vmalloc.h  62  extern void *__vmalloc(unsigned long size,gfp_t gfp_mask,pgprot_t prot);
__vmalloc_node_range  prototype  include/linux/vmalloc.h  65  extern void *__vmalloc_node_range(unsigned long size,unsigned long align,unsigned long start, unsigned long end, gfp_t gfp_mask,pgprot_t prot, int node, const void *caller);
vfree  prototype  include/linux/vmalloc.h  66  extern void vfree(const void *addr);
vmap  prototype  include/linux/vmalloc.h  69  extern void *vmap(struct page **pages,unsigned int count,unsigned long flags, pgprot_t prot);
vunmap  prototype  include/linux/vmalloc.h  70  extern void vunmap(const void *addr);
remap_vmalloc_range  prototype  include/linux/vmalloc.h  73  extern int remap_vmalloc_range(struct vm_area_struct *vma,void *addr,unsigned long pgoff);
vmalloc_sync_all  prototype  include/linux/vmalloc.h  74  void vmalloc_sync_all(void);
get_vm_area_size  function  include/linux/vmalloc.h  80  static inline size_t get_vm_area_size(const struct vm_struct *area)
get_vm_area  prototype  include/linux/vmalloc.h  86  extern struct vm_struct *get_vm_area(unsigned long size,unsigned long flags);
get_vm_area_caller  prototype  include/linux/vmalloc.h  88  extern struct vm_struct *get_vm_area_caller(unsigned long size,unsigned long flags, const void *caller);
__get_vm_area  prototype  include/linux/vmalloc.h  90  extern struct vm_struct *__get_vm_area(unsigned long size,unsigned long flags,unsigned long start, unsigned long end);
__get_vm_area_caller  prototype  include/linux/vmalloc.h  94  extern struct vm_struct *__get_vm_area_caller(unsigned long size,unsigned long flags,unsigned long start, unsigned long end,const void *caller);
remove_vm_area  prototype  include/linux/vmalloc.h  95  extern struct vm_struct *remove_vm_area(const void *addr);
find_vm_area  prototype  include/linux/vmalloc.h  96  extern struct vm_struct *find_vm_area(const void *addr);
map_vm_area  prototype  include/linux/vmalloc.h  99  extern int map_vm_area(struct vm_struct *area,pgprot_t prot,struct page ***pages);
map_kernel_range_noflush  function  include/linux/vmalloc.h  108  map_kernel_range_noflush(unsigned long start,unsigned long size,pgprot_t prot, struct page **pages)
unmap_kernel_range_noflush  function  include/linux/vmalloc.h  113  unmap_kernel_range_noflush(unsigned long addr,unsigned long size)
unmap_kernel_range  function  include/linux/vmalloc.h  117  unmap_kernel_range(unsigned long addr,unsigned long size)
alloc_vm_area  prototype  include/linux/vmalloc.h  123  extern struct vm_struct *alloc_vm_area(size_t size,pte_t **ptes);
free_vm_area  prototype  include/linux/vmalloc.h  124  extern void free_vm_area(struct vm_struct *area);
vread  prototype  include/linux/vmalloc.h  127  extern long vread(char *buf,char *addr,unsigned long count);
vwrite  prototype  include/linux/vmalloc.h  128  extern long vwrite(char *buf,char *addr,unsigned long count);
vm_area_add_early  prototype  include/linux/vmalloc.h  135  extern __init void vm_area_add_early(struct vm_struct *vm);
vm_area_register_early  prototype  include/linux/vmalloc.h  136  extern __init void vm_area_register_early(struct vm_struct *vm,size_t align);
pcpu_get_vm_areas  function  include/linux/vmalloc.h  149  pcpu_get_vm_areas(const unsigned long *offsets,const size_t *sizes, int nr_vms,size_t align)
pcpu_free_vm_areas  function  include/linux/vmalloc.h  155  pcpu_free_vm_areas(struct vm_struct **vms,int nr_vms)
_XEN_XEN_H  macro  include/xen/xen.h  2  #define _XEN_XEN_H
xen_domain_type  macro  include/xen/xen.h  13  #define xen_domain_type XEN_NATIVE
xen_domain  macro  include/xen/xen.h  16  #define xen_domain() (xen_domain_type != XEN_NATIVE)
xen_pv_domain  macro  include/xen/xen.h  18  #define xen_pv_domain() (xen_domain() && xen_domain_type == XEN_PV_DOMAIN)
xen_hvm_domain  macro  include/xen/xen.h  20  #define xen_hvm_domain() (xen_domain() && xen_domain_type == XEN_HVM_DOMAIN)
xen_initial_domain  macro  include/xen/xen.h  29  #define xen_initial_domain() (0)
_ASM_X86_ASM_H  macro  arch/x86/include/asm/asm.h  2  #define _ASM_X86_ASM_H
__ASM_FORM  macro  arch/x86/include/asm/asm.h  8  # define __ASM_FORM(x) " " #x " "
__ASM_FORM_COMMA  macro  arch/x86/include/asm/asm.h  9  # define __ASM_FORM_COMMA(x) " " #x ","
__ASM_SEL  macro  arch/x86/include/asm/asm.h  15  # define __ASM_SEL(a,b) __ASM_FORM(b)
__ASM_SIZE  macro  arch/x86/include/asm/asm.h  19  #define __ASM_SIZE(inst,...) __ASM_SEL(inst##l##__VA_ARGS__, inst##q##__VA_ARGS__)
__ASM_REG  macro  arch/x86/include/asm/asm.h  20  #define __ASM_REG(reg) __ASM_SEL(e##reg,r##reg)
_ASM_PTR  macro  arch/x86/include/asm/asm.h  22  #define _ASM_PTR __ASM_SEL(.long,.quad)
_ASM_ALIGN  macro  arch/x86/include/asm/asm.h  23  #define _ASM_ALIGN __ASM_SEL(.balign 4,.balign 8)
_ASM_MOV  macro  arch/x86/include/asm/asm.h  25  #define _ASM_MOV __ASM_SIZE(mov)
_ASM_INC  macro  arch/x86/include/asm/asm.h  26  #define _ASM_INC __ASM_SIZE(inc)
_ASM_DEC  macro  arch/x86/include/asm/asm.h  27  #define _ASM_DEC __ASM_SIZE(dec)
_ASM_ADD  macro  arch/x86/include/asm/asm.h  28  #define _ASM_ADD __ASM_SIZE(add)
_ASM_SUB  macro  arch/x86/include/asm/asm.h  29  #define _ASM_SUB __ASM_SIZE(sub)
_ASM_XADD  macro  arch/x86/include/asm/asm.h  30  #define _ASM_XADD __ASM_SIZE(xadd)
_ASM_AX  macro  arch/x86/include/asm/asm.h  32  #define _ASM_AX __ASM_REG(ax)
_ASM_BX  macro  arch/x86/include/asm/asm.h  33  #define _ASM_BX __ASM_REG(bx)
_ASM_CX  macro  arch/x86/include/asm/asm.h  34  #define _ASM_CX __ASM_REG(cx)
_ASM_DX  macro  arch/x86/include/asm/asm.h  35  #define _ASM_DX __ASM_REG(dx)
_ASM_SP  macro  arch/x86/include/asm/asm.h  36  #define _ASM_SP __ASM_REG(sp)
_ASM_BP  macro  arch/x86/include/asm/asm.h  37  #define _ASM_BP __ASM_REG(bp)
_ASM_SI  macro  arch/x86/include/asm/asm.h  38  #define _ASM_SI __ASM_REG(si)
_ASM_DI  macro  arch/x86/include/asm/asm.h  39  #define _ASM_DI __ASM_REG(di)
_ASM_EXTABLE  macro  arch/x86/include/asm/asm.h  62  # define _ASM_EXTABLE(from,to) " .pushsection \"__ex_table\",\"a\"\n" " .balign 8\n" " .long (" #from ") - .\n" " .long (" #to ") - .\n" " .popsection\n"
_ASM_EXTABLE_EX  macro  arch/x86/include/asm/asm.h  69  # define _ASM_EXTABLE_EX(from,to) " .pushsection \"__ex_table\",\"a\"\n" " .balign 8\n" " .long (" #from ") - .\n" " .long (" #to ") - . + 0x7ffffff0\n" " .popsection\n"
_ASM_X86_SMAP_H  macro  arch/x86/include/asm/smap.h  14  #define _ASM_X86_SMAP_H
__ASM_CLAC  macro  arch/x86/include/asm/smap.h  21  #define __ASM_CLAC .byte 0x0f,0x01,0xca
__ASM_STAC  macro  arch/x86/include/asm/smap.h  22  #define __ASM_STAC .byte 0x0f,0x01,0xcb
ASM_CLAC  macro  arch/x86/include/asm/smap.h  84  #define ASM_CLAC
ASM_STAC  macro  arch/x86/include/asm/smap.h  85  #define ASM_STAC
clac  function  arch/x86/include/asm/smap.h  81  static inline void clac(void) { }
stac  function  arch/x86/include/asm/smap.h  82  static inline void stac(void) { }
_ASM_X86_UACCESS_32_H  macro  arch/x86/include/asm/uaccess_32.h  2  #define _ASM_X86_UACCESS_32_H
__copy_to_user_ll  prototype  arch/x86/include/asm/uaccess_32.h  13  unsigned long __must_check __copy_to_user_ll
__copy_from_user_ll  prototype  arch/x86/include/asm/uaccess_32.h  15  unsigned long __must_check __copy_from_user_ll
__copy_from_user_ll_nozero  prototype  arch/x86/include/asm/uaccess_32.h  17  unsigned long __must_check __copy_from_user_ll_nozero
__copy_from_user_ll_nocache  prototype  arch/x86/include/asm/uaccess_32.h  19  unsigned long __must_check __copy_from_user_ll_nocache
__copy_from_user_ll_nocache_nozero  prototype  arch/x86/include/asm/uaccess_32.h  21  unsigned long __must_check __copy_from_user_ll_nocache_nozero
__copy_to_user_inatomic  function  arch/x86/include/asm/uaccess_64.h  227  __copy_to_user_inatomic(void __user *dst,const void *src,unsigned size)
__copy_to_user  function  arch/x86/include/asm/uaccess_64.h  124  int __copy_to_user(void __user *dst,const void *src,unsigned size)
__copy_from_user_inatomic  function  arch/x86/include/asm/uaccess_64.h  221  __copy_from_user_inatomic(void *dst,const void __user *src,unsigned size)
__copy_from_user  function  arch/x86/include/asm/uaccess_64.h  80  int __copy_from_user(void *dst,const void __user *src,unsigned size)
copy_to_user  function  arch/x86/include/asm/uaccess_64.h  72  int copy_to_user(void __user *dst,const void *src,unsigned size)
_copy_from_user  prototype  arch/x86/include/asm/uaccess_64.h  51  _copy_from_user(void *to,const void __user *from,unsigned len);
copy_from_user  function  arch/x86/include/asm/uaccess_64.h  57  static inline unsigned long __must_check copy_from_user(void *to,const void __user *from,unsigned long n)
_ASM_X86_UACCESS_64_H  macro  arch/x86/include/asm/uaccess_64.h  2  #define _ASM_X86_UACCESS_64_H
copy_user_enhanced_fast_string  prototype  arch/x86/include/asm/uaccess_64.h  20  copy_user_enhanced_fast_string(void *to,const void *from,unsigned len);
copy_user_generic_string  prototype  arch/x86/include/asm/uaccess_64.h  22  copy_user_generic_string(void *to,const void *from,unsigned len);
copy_user_generic_unrolled  prototype  arch/x86/include/asm/uaccess_64.h  24  copy_user_generic_unrolled(void *to,const void *from,unsigned len);
copy_user_generic  function  arch/x86/include/asm/uaccess_64.h  27  copy_user_generic(void *to,const void *from,unsigned len)
_copy_to_user  prototype  arch/x86/include/asm/uaccess_64.h  49  _copy_to_user(void __user *to,const void *from,unsigned len);
copy_in_user  prototype  arch/x86/include/asm/uaccess_64.h  53  copy_in_user(void __user *to,const void __user *from,unsigned len);
__copy_in_user  function  arch/x86/include/asm/uaccess_64.h  168  int __copy_in_user(void __user *dst,const void __user *src,unsigned size)
__copy_user_nocache  prototype  arch/x86/include/asm/uaccess_64.h  233  extern long __copy_user_nocache(void *dst,const void __user *src,unsigned size, int zerorest);
copy_user_handle_tail  prototype  arch/x86/include/asm/uaccess_64.h  250  copy_user_handle_tail(char *to,char *from,unsigned len,unsigned zerorest);
_ASM_X86_SWAB_H  macro  arch/x86/include/uapi/asm/swab.h  2  #define _ASM_X86_SWAB_H
__arch_swab32  macro  arch/x86/include/uapi/asm/swab.h  12  #define __arch_swab32 __arch_swab32
__arch_swab64  macro  arch/x86/include/uapi/asm/swab.h  34  #define __arch_swab64 __arch_swab64
_LINUX_SWAB_H  macro  include/linux/swab.h  2  #define _LINUX_SWAB_H
swab16  macro  include/linux/swab.h  6  # define swab16 __swab16
swab32  macro  include/linux/swab.h  7  # define swab32 __swab32
swab64  macro  include/linux/swab.h  8  # define swab64 __swab64
swahw32  macro  include/linux/swab.h  9  # define swahw32 __swahw32
swahb32  macro  include/linux/swab.h  10  # define swahb32 __swahb32
swab16p  macro  include/linux/swab.h  11  # define swab16p __swab16p
swab32p  macro  include/linux/swab.h  12  # define swab32p __swab32p
swab64p  macro  include/linux/swab.h  13  # define swab64p __swab64p
swahw32p  macro  include/linux/swab.h  14  # define swahw32p __swahw32p
swahb32p  macro  include/linux/swab.h  15  # define swahb32p __swahb32p
swab16s  macro  include/linux/swab.h  16  # define swab16s __swab16s
swab32s  macro  include/linux/swab.h  17  # define swab32s __swab32s
swab64s  macro  include/linux/swab.h  18  # define swab64s __swab64s
swahw32s  macro  include/linux/swab.h  19  # define swahw32s __swahw32s
swahb32s  macro  include/linux/swab.h  20  # define swahb32s __swahb32s
_LINUX_BYTEORDER_LITTLE_ENDIAN_H  macro  include/linux/byteorder/little_endian.h  2  #define _LINUX_BYTEORDER_LITTLE_ENDIAN_H
_LINUX_BYTEORDER_GENERIC_H  macro  include/linux/byteorder/generic.h  2  #define _LINUX_BYTEORDER_GENERIC_H
cpu_to_le64  macro  include/linux/byteorder/generic.h  85  #define cpu_to_le64 __cpu_to_le64
le64_to_cpu  macro  include/linux/byteorder/generic.h  86  #define le64_to_cpu __le64_to_cpu
cpu_to_le32  macro  include/linux/byteorder/generic.h  87  #define cpu_to_le32 __cpu_to_le32
le32_to_cpu  macro  include/linux/byteorder/generic.h  88  #define le32_to_cpu __le32_to_cpu
cpu_to_le16  macro  include/linux/byteorder/generic.h  89  #define cpu_to_le16 __cpu_to_le16
le16_to_cpu  macro  include/linux/byteorder/generic.h  90  #define le16_to_cpu __le16_to_cpu
cpu_to_be64  macro  include/linux/byteorder/generic.h  91  #define cpu_to_be64 __cpu_to_be64
be64_to_cpu  macro  include/linux/byteorder/generic.h  92  #define be64_to_cpu __be64_to_cpu
cpu_to_be32  macro  include/linux/byteorder/generic.h  93  #define cpu_to_be32 __cpu_to_be32
be32_to_cpu  macro  include/linux/byteorder/generic.h  94  #define be32_to_cpu __be32_to_cpu
cpu_to_be16  macro  include/linux/byteorder/generic.h  95  #define cpu_to_be16 __cpu_to_be16
be16_to_cpu  macro  include/linux/byteorder/generic.h  96  #define be16_to_cpu __be16_to_cpu
cpu_to_le64p  macro  include/linux/byteorder/generic.h  97  #define cpu_to_le64p __cpu_to_le64p
le64_to_cpup  macro  include/linux/byteorder/generic.h  98  #define le64_to_cpup __le64_to_cpup
cpu_to_le32p  macro  include/linux/byteorder/generic.h  99  #define cpu_to_le32p __cpu_to_le32p
le32_to_cpup  macro  include/linux/byteorder/generic.h  100  #define le32_to_cpup __le32_to_cpup
cpu_to_le16p  macro  include/linux/byteorder/generic.h  101  #define cpu_to_le16p __cpu_to_le16p
le16_to_cpup  macro  include/linux/byteorder/generic.h  102  #define le16_to_cpup __le16_to_cpup
cpu_to_be64p  macro  include/linux/byteorder/generic.h  103  #define cpu_to_be64p __cpu_to_be64p
be64_to_cpup  macro  include/linux/byteorder/generic.h  104  #define be64_to_cpup __be64_to_cpup
cpu_to_be32p  macro  include/linux/byteorder/generic.h  105  #define cpu_to_be32p __cpu_to_be32p
be32_to_cpup  macro  include/linux/byteorder/generic.h  106  #define be32_to_cpup __be32_to_cpup
cpu_to_be16p  macro  include/linux/byteorder/generic.h  107  #define cpu_to_be16p __cpu_to_be16p
be16_to_cpup  macro  include/linux/byteorder/generic.h  108  #define be16_to_cpup __be16_to_cpup
cpu_to_le64s  macro  include/linux/byteorder/generic.h  109  #define cpu_to_le64s __cpu_to_le64s
le64_to_cpus  macro  include/linux/byteorder/generic.h  110  #define le64_to_cpus __le64_to_cpus
cpu_to_le32s  macro  include/linux/byteorder/generic.h  111  #define cpu_to_le32s __cpu_to_le32s
le32_to_cpus  macro  include/linux/byteorder/generic.h  112  #define le32_to_cpus __le32_to_cpus
cpu_to_le16s  macro  include/linux/byteorder/generic.h  113  #define cpu_to_le16s __cpu_to_le16s
le16_to_cpus  macro  include/linux/byteorder/generic.h  114  #define le16_to_cpus __le16_to_cpus
cpu_to_be64s  macro  include/linux/byteorder/generic.h  115  #define cpu_to_be64s __cpu_to_be64s
be64_to_cpus  macro  include/linux/byteorder/generic.h  116  #define be64_to_cpus __be64_to_cpus
cpu_to_be32s  macro  include/linux/byteorder/generic.h  117  #define cpu_to_be32s __cpu_to_be32s
be32_to_cpus  macro  include/linux/byteorder/generic.h  118  #define be32_to_cpus __be32_to_cpus
cpu_to_be16s  macro  include/linux/byteorder/generic.h  119  #define cpu_to_be16s __cpu_to_be16s
be16_to_cpus  macro  include/linux/byteorder/generic.h  120  #define be16_to_cpus __be16_to_cpus
ntohl  macro  include/linux/byteorder/generic.h  139  #define ntohl(x) ___ntohl(x)
ntohs  macro  include/linux/byteorder/generic.h  141  #define ntohs(x) ___ntohs(x)
htonl  macro  include/linux/byteorder/generic.h  138  #define htonl(x) ___htonl(x)
htons  macro  include/linux/byteorder/generic.h  140  #define htons(x) ___htons(x)
___htonl  macro  include/linux/byteorder/generic.h  133  #define ___htonl(x) __cpu_to_be32(x)
___htons  macro  include/linux/byteorder/generic.h  134  #define ___htons(x) __cpu_to_be16(x)
___ntohl  macro  include/linux/byteorder/generic.h  135  #define ___ntohl(x) __be32_to_cpu(x)
___ntohs  macro  include/linux/byteorder/generic.h  136  #define ___ntohs(x) __be16_to_cpu(x)
le16_add_cpu  function  include/linux/byteorder/generic.h  143  static inline void le16_add_cpu(__le16 *var,u16 val)
le32_add_cpu  function  include/linux/byteorder/generic.h  148  static inline void le32_add_cpu(__le32 *var,u32 val)
le64_add_cpu  function  include/linux/byteorder/generic.h  153  static inline void le64_add_cpu(__le64 *var,u64 val)
be16_add_cpu  function  include/linux/byteorder/generic.h  158  static inline void be16_add_cpu(__be16 *var,u16 val)
be32_add_cpu  function  include/linux/byteorder/generic.h  163  static inline void be32_add_cpu(__be32 *var,u32 val)
be64_add_cpu  function  include/linux/byteorder/generic.h  168  static inline void be64_add_cpu(__be64 *var,u64 val)
_PGTABLE_NOPUD_H  macro  include/asm-generic/pgtable-nopud.h  2  #define _PGTABLE_NOPUD_H
__PAGETABLE_PUD_FOLDED  macro  include/asm-generic/pgtable-nopud.h  6  #define __PAGETABLE_PUD_FOLDED
PUD_SHIFT  macro  include/asm-generic/pgtable-nopud.h  15  #define PUD_SHIFT PGDIR_SHIFT
PTRS_PER_PUD  macro  include/asm-generic/pgtable-nopud.h  16  #define PTRS_PER_PUD 1
PUD_SIZE  macro  include/asm-generic/pgtable-nopud.h  17  #define PUD_SIZE (1UL << PUD_SHIFT)
PUD_MASK  macro  include/asm-generic/pgtable-nopud.h  18  #define PUD_MASK (~(PUD_SIZE-1))
pgd_none  function  arch/x86/include/asm/pgtable.h  589  static inline int pgd_none(pgd_t pgd)
pgd_bad  function  arch/x86/include/asm/pgtable.h  584  static inline int pgd_bad(pgd_t pgd)
pgd_present  function  arch/x86/include/asm/pgtable.h  557  static inline int pgd_present(pgd_t pgd)
pud_ERROR  macro  include/asm-generic/pgtable-nopud.h  29  #define pud_ERROR(pud) (pgd_ERROR((pud).pgd))
pgd_populate  macro  include/asm-generic/pgtable-nopud.h  31  #define pgd_populate(mm,pgd,pud) do { } while (0)
pud_offset  function  arch/x86/include/asm/pgtable.h  579  static inline pud_t *pud_offset(pgd_t *pgd,unsigned long address)
pgd_page  macro  arch/x86/include/asm/pgtable.h  571  #define pgd_page(pgd) pfn_to_page(pgd_val(pgd) >> PAGE_SHIFT)
pgd_page_vaddr  function  arch/x86/include/asm/pgtable.h  562  static inline unsigned long pgd_page_vaddr(pgd_t pgd)
pud_alloc_one  macro  include/asm-generic/pgtable-nopud.h  53  #define pud_alloc_one(mm,address) NULL
pud_free  macro  include/asm-generic/pgtable-nopud.h  54  #define pud_free(mm,x) do { } while (0)
__pud_free_tlb  macro  include/asm-generic/pgtable-nopud.h  55  #define __pud_free_tlb(tlb,x,a) do { } while (0)
pud_addr_end  macro  include/asm-generic/pgtable.h  263  #define pud_addr_end(addr,end) ({	unsigned long __boundary = ((addr) + PUD_SIZE) & PUD_MASK; (__boundary - 1 < (end) - 1)? __boundary: (end); })
_PGTABLE_NOPMD_H  macro  include/asm-generic/pgtable-nopmd.h  2  #define _PGTABLE_NOPMD_H
__PAGETABLE_PMD_FOLDED  macro  include/asm-generic/pgtable-nopmd.h  10  #define __PAGETABLE_PMD_FOLDED
PMD_SHIFT  macro  include/asm-generic/pgtable-nopmd.h  19  #define PMD_SHIFT PUD_SHIFT
PTRS_PER_PMD  macro  include/asm-generic/pgtable-nopmd.h  20  #define PTRS_PER_PMD 1
PMD_SIZE  macro  include/asm-generic/pgtable-nopmd.h  21  #define PMD_SIZE (1UL << PMD_SHIFT)
PMD_MASK  macro  include/asm-generic/pgtable-nopmd.h  22  #define PMD_MASK (~(PMD_SIZE-1))
pud_none  function  arch/x86/include/asm/pgtable.h  512  static inline int pud_none(pud_t pud)
pud_bad  function  arch/x86/include/asm/pgtable.h  545  static inline int pud_bad(pud_t pud)
pud_present  function  arch/x86/include/asm/pgtable.h  517  static inline int pud_present(pud_t pud)
pmd_ERROR  macro  include/asm-generic/pgtable-nopmd.h  33  #define pmd_ERROR(pmd) (pud_ERROR((pmd).pud))
pud_populate  macro  include/asm-generic/pgtable-nopmd.h  35  #define pud_populate(mm,pmd,pte) do { } while (0)
pmd_offset  function  arch/x86/include/asm/pgtable.h  534  static inline pmd_t *pmd_offset(pud_t *pud,unsigned long address)
pud_page  macro  arch/x86/include/asm/pgtable.h  531  #define pud_page(pud) pfn_to_page(pud_val(pud) >> PAGE_SHIFT)
pud_page_vaddr  function  arch/x86/include/asm/pgtable.h  522  static inline unsigned long pud_page_vaddr(pud_t pud)
pmd_alloc_one  macro  include/asm-generic/pgtable-nopmd.h  58  #define pmd_alloc_one(mm,address) NULL
pmd_free  function  include/asm-generic/pgtable-nopmd.h  59  static inline void pmd_free(struct mm_struct *mm,pmd_t *pmd)
__pmd_free_tlb  macro  include/asm-generic/pgtable-nopmd.h  62  #define __pmd_free_tlb(tlb,x,a) do { } while (0)
pmd_addr_end  macro  include/asm-generic/pgtable.h  270  #define pmd_addr_end(addr,end) ({	unsigned long __boundary = ((addr) + PMD_SIZE) & PMD_MASK; (__boundary - 1 < (end) - 1)? __boundary: (end); })
_ASM_X86_CMPXCHG_32_H  macro  arch/x86/include/asm/cmpxchg_32.h  2  #define _ASM_X86_CMPXCHG_32_H
set_64bit  function  arch/x86/include/asm/cmpxchg_32.h  23  static inline void set_64bit(volatile u64 *ptr,u64 value)
__HAVE_ARCH_CMPXCHG  macro  arch/x86/include/asm/cmpxchg_32.h  37  #define __HAVE_ARCH_CMPXCHG 1
cmpxchg64  macro  arch/x86/include/asm/cmpxchg_32.h  94  #define cmpxchg64(ptr,o,n) ({ __typeof__(*(ptr)) __ret; __typeof__(*(ptr)) __old = (o); __typeof__(*(ptr)) __new = (n); alternative_io(LOCK_PREFIX_HERE "call cmpxchg8b_emu", "lock; cmpxchg8b (%%esi)" , X86_FEATURE_CX8, "=A" (__ret), "S" ((ptr)), "0" (__old), "b" ((unsigned int)__new), "c" ((unsigned int)(__new>>32)) : "memory"); __ret; })
cmpxchg64_local  macro  arch/x86/include/asm/cmpxchg_32.h  110  #define cmpxchg64_local(ptr,o,n) ({ __typeof__(*(ptr)) __ret; __typeof__(*(ptr)) __old = (o); __typeof__(*(ptr)) __new = (n); alternative_io("call cmpxchg8b_emu", "cmpxchg8b (%%esi)" , X86_FEATURE_CX8, "=A" (__ret), "S" ((ptr)), "0" (__old), "b" ((unsigned int)__new), "c" ((unsigned int)(__new>>32)) : "memory"); __ret; })
__cmpxchg64  function  arch/x86/include/asm/cmpxchg_32.h  48  static inline u64 __cmpxchg64(volatile u64 *ptr,u64 old,u64 new)
__cmpxchg64_local  function  arch/x86/include/asm/cmpxchg_32.h  61  static inline u64 __cmpxchg64_local(volatile u64 *ptr,u64 old,u64 new)
system_has_cmpxchg_double  macro  arch/x86/include/asm/cmpxchg_32.h  114  #define system_has_cmpxchg_double() cpu_has_cx8
_ASM_X86_ATOMIC64_32_H  macro  arch/x86/include/asm/atomic64_32.h  2  #define _ASM_X86_ATOMIC64_32_H
__ATOMIC64_DECL  macro  arch/x86/include/asm/atomic64_32.h  61  #undef __ATOMIC64_DECL
ATOMIC64_DECL_ONE  macro  arch/x86/include/asm/atomic64_32.h  60  #undef ATOMIC64_DECL_ONE
__alternative_atomic64  macro  arch/x86/include/asm/atomic64_32.h  314  #undef __alternative_atomic64
ATOMIC64_DECL  macro  arch/x86/include/asm/atomic64_32.h  59  #undef ATOMIC64_DECL
alternative_atomic64  macro  arch/x86/include/asm/atomic64_32.h  313  #undef alternative_atomic64
ATOMIC64_EXPORT  macro  arch/x86/include/asm/atomic64_32.h  62  #undef ATOMIC64_EXPORT
_ASM_X86_TSC_H  macro  arch/x86/include/asm/tsc.h  5  #define _ASM_X86_TSC_H
NS_SCALE  macro  arch/x86/include/asm/tsc.h  9  #define NS_SCALE 10
US_SCALE  macro  arch/x86/include/asm/tsc.h  10  #define US_SCALE 32
disable_TSC  prototype  arch/x86/include/asm/tsc.h  20  extern void disable_TSC(void);
get_cycles  function  arch/x86/include/asm/tsc.h  22  static inline cycles_t get_cycles(void)
vget_cycles  function  arch/x86/include/asm/tsc.h  35  static __always_inline cycles_t vget_cycles(void)
tsc_init  prototype  arch/x86/include/asm/tsc.h  48  extern void tsc_init(void);
mark_tsc_unstable  prototype  arch/x86/include/asm/tsc.h  49  extern void mark_tsc_unstable(char *reason);
unsynchronized_tsc  prototype  arch/x86/include/asm/tsc.h  50  extern int unsynchronized_tsc(void);
check_tsc_unstable  prototype  arch/x86/include/asm/tsc.h  51  extern int check_tsc_unstable(void);
native_calibrate_tsc  prototype  arch/x86/include/asm/tsc.h  52  extern unsigned long native_calibrate_tsc(void);
check_tsc_sync_source  prototype  arch/x86/include/asm/tsc.h  60  extern void check_tsc_sync_source(int cpu);
check_tsc_sync_target  prototype  arch/x86/include/asm/tsc.h  61  extern void check_tsc_sync_target(void);
notsc_setup  prototype  arch/x86/include/asm/tsc.h  63  extern int notsc_setup(char *);
tsc_save_sched_clock_state  prototype  arch/x86/include/asm/tsc.h  64  extern void tsc_save_sched_clock_state(void);
tsc_restore_sched_clock_state  prototype  arch/x86/include/asm/tsc.h  65  extern void tsc_restore_sched_clock_state(void);
__LINUX_MEMORY_HOTPLUG_H  macro  include/linux/memory_hotplug.h  2  #define __LINUX_MEMORY_HOTPLUG_H
pgdat_resize_lock  function  include/linux/memory_hotplug.h  201  static inline void pgdat_resize_lock(struct pglist_data *p,unsigned long *f) {}
pgdat_resize_unlock  function  include/linux/memory_hotplug.h  202  static inline void pgdat_resize_unlock(struct pglist_data *p,unsigned long *f) {}
pgdat_resize_init  function  include/linux/memory_hotplug.h  203  static inline void pgdat_resize_init(struct pglist_data *pgdat) {}
zone_span_seqbegin  function  include/linux/memory_hotplug.h  205  static inline unsigned zone_span_seqbegin(struct zone *zone)
zone_span_seqretry  function  include/linux/memory_hotplug.h  209  static inline int zone_span_seqretry(struct zone *zone,unsigned iv)
zone_span_writelock  function  include/linux/memory_hotplug.h  213  static inline void zone_span_writelock(struct zone *zone) {}
zone_span_writeunlock  function  include/linux/memory_hotplug.h  214  static inline void zone_span_writeunlock(struct zone *zone) {}
zone_seqlock_init  function  include/linux/memory_hotplug.h  215  static inline void zone_seqlock_init(struct zone *zone) {}
zone_grow_free_lists  prototype  include/linux/memory_hotplug.h  81  extern int zone_grow_free_lists(struct zone *zone,unsigned long new_nr_pages);
zone_grow_waitqueues  prototype  include/linux/memory_hotplug.h  82  extern int zone_grow_waitqueues(struct zone *zone,unsigned long nr_pages);
add_one_highpage  prototype  include/linux/memory_hotplug.h  83  extern int add_one_highpage(struct page *page,int pfn,int bad_ppro);
online_pages  prototype  include/linux/memory_hotplug.h  85  extern int online_pages(unsigned long,unsigned long,int);
__offline_isolated_pages  prototype  include/linux/memory_hotplug.h  86  extern void __offline_isolated_pages(unsigned long,unsigned long);
set_online_page_callback  prototype  include/linux/memory_hotplug.h  90  extern int set_online_page_callback(online_page_callback_t callback);
restore_online_page_callback  prototype  include/linux/memory_hotplug.h  91  extern int restore_online_page_callback(online_page_callback_t callback);
__online_page_set_limits  prototype  include/linux/memory_hotplug.h  93  extern void __online_page_set_limits(struct page *page);
__online_page_increment_counters  prototype  include/linux/memory_hotplug.h  94  extern void __online_page_increment_counters(struct page *page);
__online_page_free  prototype  include/linux/memory_hotplug.h  95  extern void __online_page_free(struct page *page);
is_pageblock_removable_nolock  prototype  include/linux/memory_hotplug.h  98  extern bool is_pageblock_removable_nolock(struct page *page);
__add_pages  prototype  include/linux/memory_hotplug.h  103  extern int __add_pages(int nid,struct zone *zone,unsigned long start_pfn,unsigned long nr_pages);
__remove_pages  prototype  include/linux/memory_hotplug.h  105  extern int __remove_pages(struct zone *zone,unsigned long start_pfn,unsigned long nr_pages);
memory_add_physaddr_to_nid  function  include/linux/memory_hotplug.h  110  static inline int memory_add_physaddr_to_nid(u64 start)
arch_alloc_nodedata  macro  include/linux/memory_hotplug.h  133  #define arch_alloc_nodedata(nid) generic_alloc_nodedata(nid)
arch_free_nodedata  macro  include/linux/memory_hotplug.h  134  #define arch_free_nodedata(pgdat) generic_free_nodedata(pgdat)
arch_refresh_nodedata  function  include/linux/memory_hotplug.h  170  static inline void arch_refresh_nodedata(int nid,pg_data_t *pgdat)
generic_alloc_nodedata  function  include/linux/memory_hotplug.h  162  static inline pg_data_t *generic_alloc_nodedata(int nid)
generic_free_nodedata  function  include/linux/memory_hotplug.h  167  static inline void generic_free_nodedata(pg_data_t *pgdat)
register_page_bootmem_info_node  function  include/linux/memory_hotplug.h  224  static inline void register_page_bootmem_info_node(struct pglist_data *pgdat)
put_page_bootmem  prototype  include/linux/memory_hotplug.h  185  extern void put_page_bootmem(struct page *page);
lock_memory_hotplug  function  include/linux/memory_hotplug.h  228  static inline void lock_memory_hotplug(void) {}
unlock_memory_hotplug  function  include/linux/memory_hotplug.h  229  static inline void unlock_memory_hotplug(void) {}
mhp_notimplemented  function  include/linux/memory_hotplug.h  217  static inline int mhp_notimplemented(const char *func)
is_mem_section_removable  function  include/linux/memory_hotplug.h  239  static inline int is_mem_section_removable(unsigned long pfn,unsigned long nr_pages)
mem_online_node  prototype  include/linux/memory_hotplug.h  245  extern int mem_online_node(int nid);
add_memory  prototype  include/linux/memory_hotplug.h  246  extern int add_memory(int nid,u64 start,u64 size);
arch_add_memory  prototype  include/linux/memory_hotplug.h  247  extern int arch_add_memory(int nid,u64 start,u64 size);
offline_pages  prototype  include/linux/memory_hotplug.h  248  extern int offline_pages(unsigned long start_pfn,unsigned long nr_pages);
offline_memory_block  prototype  include/linux/memory_hotplug.h  249  extern int offline_memory_block(struct memory_block *mem);
remove_memory  prototype  include/linux/memory_hotplug.h  250  extern int remove_memory(u64 start,u64 size);
sparse_add_one_section  prototype  include/linux/memory_hotplug.h  252  extern int sparse_add_one_section(struct zone *zone,unsigned long start_pfn,int nr_pages);
sparse_remove_one_section  prototype  include/linux/memory_hotplug.h  253  extern void sparse_remove_one_section(struct zone *zone,struct mem_section *ms);
sparse_decode_mem_map  prototype  include/linux/memory_hotplug.h  255  extern struct page *sparse_decode_mem_map(unsigned long coded_mem_map,unsigned long pnum);
_ASM_X86_DESC_H  macro  arch/x86/include/asm/desc.h  2  #define _ASM_X86_DESC_H
fill_ldt  function  arch/x86/include/asm/desc.h  11  static inline void fill_ldt(struct desc_struct *desc,const struct user_desc *info)
gdt_page  struct  arch/x86/include/asm/desc.h  42  struct gdt_page {
get_cpu_gdt_table  function  arch/x86/include/asm/desc.h  48  static inline struct desc_struct *get_cpu_gdt_table(unsigned int cpu)
pack_gate  function  arch/x86/include/asm/desc.h  73  static inline void pack_gate(gate_desc *gate,unsigned char type,unsigned long base, unsigned dpl, unsigned flags,unsigned short seg)
desc_empty  function  arch/x86/include/asm/desc.h  81  static inline int desc_empty(const void *ptr)
load_tr  macro  arch/x86/include/asm/desc.h  94  #define load_tr(tr) asm volatile("ltr %0"::"m" (tr))
load_ldt  macro  arch/x86/include/asm/desc.h  95  #define load_ldt(ldt) asm volatile("lldt %0"::"m" (ldt))
store_ldt  macro  arch/x86/include/asm/desc.h  117  #define store_ldt(ldt) asm("sldt %0" : "=m"(ldt))
native_write_idt_entry  function  arch/x86/include/asm/desc.h  119  static inline void native_write_idt_entry(gate_desc *idt,int entry,const gate_desc *gate)
native_write_ldt_entry  function  arch/x86/include/asm/desc.h  124  static inline void native_write_ldt_entry(struct desc_struct *ldt,int entry,const void *desc)
native_write_gdt_entry  function  arch/x86/include/asm/desc.h  130  native_write_gdt_entry(struct desc_struct *gdt,int entry,const void *desc,int type)
pack_descriptor  function  arch/x86/include/asm/desc.h  145  static inline void pack_descriptor(struct desc_struct *desc,unsigned long base,unsigned long limit, unsigned char type,unsigned char flags)
set_tssldt_descriptor  function  arch/x86/include/asm/desc.h  155  static inline void set_tssldt_descriptor(void *d,unsigned long addr,unsigned type,unsigned size)
__set_tss_desc  function  arch/x86/include/asm/desc.h  175  static inline void __set_tss_desc(unsigned cpu,unsigned int entry,void *addr)
set_tss_desc  macro  arch/x86/include/asm/desc.h  193  #define set_tss_desc(cpu,addr) __set_tss_desc(cpu,GDT_ENTRY_TSS,addr)
native_set_ldt  function  arch/x86/include/asm/desc.h  195  static inline void native_set_ldt(const void *addr,unsigned int entries)
native_load_tr_desc  function  arch/x86/include/asm/desc.h  211  static inline void native_load_tr_desc(void)
native_load_gdt  function  arch/x86/include/asm/desc.h  216  static inline void native_load_gdt(const struct desc_ptr *dtr)
native_load_idt  function  arch/x86/include/asm/desc.h  221  static inline void native_load_idt(const struct desc_ptr *dtr)
native_store_gdt  function  arch/x86/include/asm/desc.h  226  static inline void native_store_gdt(struct desc_ptr *dtr)
native_store_idt  function  arch/x86/include/asm/desc.h  231  static inline void native_store_idt(struct desc_ptr *dtr)
native_store_tr  function  arch/x86/include/asm/desc.h  236  static inline unsigned long native_store_tr(void)
native_load_tls  function  arch/x86/include/asm/desc.h  245  static inline void native_load_tls(struct thread_struct *t,unsigned int cpu)
_LDT_empty  macro  arch/x86/include/asm/desc.h  262  #define _LDT_empty(info) ((info)->base_addr		== 0	&& (info)->limit			== 0	&& (info)->contents		== 0	&& (info)->read_exec_only		== 1	&& (info)->seg_32bit		== 0	&& (info)->limit_in_pages		== 0	&& (info)->seg_not_present	== 1	&& (info)->useable		== 0)
LDT_empty  macro  arch/x86/include/asm/desc.h  267  #define LDT_empty(info) (_LDT_empty(info))
clear_LDT  function  arch/x86/include/asm/desc.h  270  static inline void clear_LDT(void)
load_LDT_nolock  function  arch/x86/include/asm/desc.h  278  static inline void load_LDT_nolock(mm_context_t *pc)
load_LDT  function  arch/x86/include/asm/desc.h  283  static inline void load_LDT(mm_context_t *pc)
get_desc_base  function  arch/x86/include/asm/desc.h  290  static inline unsigned long get_desc_base(const struct desc_struct *desc)
set_desc_base  function  arch/x86/include/asm/desc.h  295  static inline void set_desc_base(struct desc_struct *desc,unsigned long base)
get_desc_limit  function  arch/x86/include/asm/desc.h  302  static inline unsigned long get_desc_limit(const struct desc_struct *desc)
set_desc_limit  function  arch/x86/include/asm/desc.h  307  static inline void set_desc_limit(struct desc_struct *desc,unsigned long limit)
set_nmi_gate  function  arch/x86/include/asm/desc.h  314  static inline void set_nmi_gate(int gate,void *addr)
_set_gate  function  arch/x86/include/asm/desc.h  324  static inline void _set_gate(int gate,unsigned type,void *addr,unsigned dpl, unsigned ist, unsigned seg)
set_intr_gate  function  arch/x86/include/asm/desc.h  342  static inline void set_intr_gate(unsigned int n,void *addr)
alloc_system_vector  function  arch/x86/include/asm/desc.h  352  static inline void alloc_system_vector(int vector)
alloc_intr_gate  function  arch/x86/include/asm/desc.h  363  static inline void alloc_intr_gate(unsigned int n,void *addr)
set_system_intr_gate  function  arch/x86/include/asm/desc.h  372  static inline void set_system_intr_gate(unsigned int n,void *addr)
set_system_trap_gate  function  arch/x86/include/asm/desc.h  378  static inline void set_system_trap_gate(unsigned int n,void *addr)
set_trap_gate  function  arch/x86/include/asm/desc.h  384  static inline void set_trap_gate(unsigned int n,void *addr)
set_task_gate  function  arch/x86/include/asm/desc.h  390  static inline void set_task_gate(unsigned int n,unsigned int gdt_entry)
set_intr_gate_ist  function  arch/x86/include/asm/desc.h  396  static inline void set_intr_gate_ist(int n,void *addr,unsigned ist)
set_system_intr_gate_ist  function  arch/x86/include/asm/desc.h  402  static inline void set_system_intr_gate_ist(int n,void *addr,unsigned ist)
_ASM_GENERIC_SIGINFO_H  macro  include/asm-generic/siginfo.h  2  #define _ASM_GENERIC_SIGINFO_H
__SI_MASK  macro  include/asm-generic/siginfo.h  6  #define __SI_MASK 0xffff0000u
__SI_KILL  macro  include/asm-generic/siginfo.h  7  #define __SI_KILL (0 << 16)
__SI_TIMER  macro  include/asm-generic/siginfo.h  8  #define __SI_TIMER (1 << 16)
__SI_POLL  macro  include/asm-generic/siginfo.h  9  #define __SI_POLL (2 << 16)
__SI_FAULT  macro  include/asm-generic/siginfo.h  10  #define __SI_FAULT (3 << 16)
__SI_CHLD  macro  include/asm-generic/siginfo.h  11  #define __SI_CHLD (4 << 16)
__SI_RT  macro  include/asm-generic/siginfo.h  12  #define __SI_RT (5 << 16)
__SI_MESGQ  macro  include/asm-generic/siginfo.h  13  #define __SI_MESGQ (6 << 16)
__SI_SYS  macro  include/asm-generic/siginfo.h  14  #define __SI_SYS (7 << 16)
__SI_CODE  macro  include/asm-generic/siginfo.h  15  #define __SI_CODE(T,N) ((T) | ((N) & 0xffff))
do_schedule_next_timer  prototype  include/asm-generic/siginfo.h  18  void do_schedule_next_timer(struct siginfo *info);
copy_siginfo  function  include/asm-generic/siginfo.h  24  static inline void copy_siginfo(struct siginfo *to,struct siginfo *from)
copy_siginfo_to_user  prototype  include/asm-generic/siginfo.h  35  extern int copy_siginfo_to_user(struct siginfo __user *to,struct siginfo *from);
_ASM_X86_IRQ_REGS_H  macro  arch/x86/include/asm/irq_regs.h  8  #define _ASM_X86_IRQ_REGS_H
ARCH_HAS_OWN_IRQ_REGS  macro  arch/x86/include/asm/irq_regs.h  12  #define ARCH_HAS_OWN_IRQ_REGS
get_irq_regs  function  arch/x86/include/asm/irq_regs.h  16  static inline struct pt_regs *get_irq_regs(void)
set_irq_regs  function  arch/x86/include/asm/irq_regs.h  21  static inline struct pt_regs *set_irq_regs(struct pt_regs *new_regs)
_LINUX_IRQ_H  macro  include/linux/irq.h  2  #define _LINUX_IRQ_H
IRQF_MODIFY_MASK  macro  include/linux/irq.h  102  #define IRQF_MODIFY_MASK (IRQ_TYPE_SENSE_MASK | IRQ_NOPROBE | IRQ_NOREQUEST | IRQ_NOAUTOEN | IRQ_MOVE_PCNTXT | IRQ_LEVEL | IRQ_NO_BALANCING | IRQ_PER_CPU | IRQ_NESTED_THREAD | IRQ_NOTHREAD | IRQ_PER_CPU_DEVID)
IRQ_NO_BALANCING_MASK  macro  include/linux/irq.h  104  #define IRQ_NO_BALANCING_MASK (IRQ_PER_CPU | IRQ_NO_BALANCING)
irq_data  struct  include/linux/irq.h  140  struct irq_data {
irqd_is_setaffinity_pending  function  include/linux/irq.h  184  static inline bool irqd_is_setaffinity_pending(struct irq_data *d)
irqd_is_per_cpu  function  include/linux/irq.h  189  static inline bool irqd_is_per_cpu(struct irq_data *d)
irqd_can_balance  function  include/linux/irq.h  194  static inline bool irqd_can_balance(struct irq_data *d)
irqd_affinity_was_set  function  include/linux/irq.h  199  static inline bool irqd_affinity_was_set(struct irq_data *d)
irqd_mark_affinity_was_set  function  include/linux/irq.h  204  static inline void irqd_mark_affinity_was_set(struct irq_data *d)
irqd_get_trigger_type  function  include/linux/irq.h  209  static inline u32 irqd_get_trigger_type(struct irq_data *d)
irqd_set_trigger_type  function  include/linux/irq.h  217  static inline void irqd_set_trigger_type(struct irq_data *d,u32 type)
irqd_is_level_type  function  include/linux/irq.h  223  static inline bool irqd_is_level_type(struct irq_data *d)
irqd_is_wakeup_set  function  include/linux/irq.h  228  static inline bool irqd_is_wakeup_set(struct irq_data *d)
irqd_can_move_in_process_context  function  include/linux/irq.h  233  static inline bool irqd_can_move_in_process_context(struct irq_data *d)
irqd_irq_disabled  function  include/linux/irq.h  238  static inline bool irqd_irq_disabled(struct irq_data *d)
irqd_irq_masked  function  include/linux/irq.h  243  static inline bool irqd_irq_masked(struct irq_data *d)
irqd_irq_inprogress  function  include/linux/irq.h  248  static inline bool irqd_irq_inprogress(struct irq_data *d)
irqd_set_chained_irq_inprogress  function  include/linux/irq.h  258  static inline void irqd_set_chained_irq_inprogress(struct irq_data *d)
irqd_clr_chained_irq_inprogress  function  include/linux/irq.h  263  static inline void irqd_clr_chained_irq_inprogress(struct irq_data *d)
irqd_to_hwirq  function  include/linux/irq.h  268  static inline irq_hw_number_t irqd_to_hwirq(struct irq_data *d)
irq_chip  struct  include/linux/irq.h  300  struct irq_chip {
ARCH_IRQ_INIT_FLAGS  macro  include/linux/irq.h  365  # define ARCH_IRQ_INIT_FLAGS 0
IRQ_DEFAULT_INIT_FLAGS  macro  include/linux/irq.h  368  #define IRQ_DEFAULT_INIT_FLAGS ARCH_IRQ_INIT_FLAGS
setup_irq  prototype  include/linux/irq.h  371  extern int setup_irq(unsigned int irq,struct irqaction *new);
remove_irq  prototype  include/linux/irq.h  372  extern void remove_irq(unsigned int irq,struct irqaction *act);
setup_percpu_irq  prototype  include/linux/irq.h  373  extern int setup_percpu_irq(unsigned int irq,struct irqaction *new);
remove_percpu_irq  prototype  include/linux/irq.h  374  extern void remove_percpu_irq(unsigned int irq,struct irqaction *act);
irq_cpu_online  prototype  include/linux/irq.h  376  extern void irq_cpu_online(void);
irq_cpu_offline  prototype  include/linux/irq.h  377  extern void irq_cpu_offline(void);
__irq_set_affinity_locked  prototype  include/linux/irq.h  378  extern int __irq_set_affinity_locked(struct irq_data *data,const struct cpumask *cpumask);
irq_move_irq  function  include/linux/irq.h  386  static inline void irq_move_irq(struct irq_data *data) { }
irq_move_masked_irq  function  include/linux/irq.h  387  static inline void irq_move_masked_irq(struct irq_data *data) { }
irq_set_parent  function  include/linux/irq.h  395  static inline int irq_set_parent(int irq,int parent_irq)
handle_level_irq  prototype  include/linux/irq.h  405  extern void handle_level_irq(unsigned int irq,struct irq_desc *desc);
handle_fasteoi_irq  prototype  include/linux/irq.h  406  extern void handle_fasteoi_irq(unsigned int irq,struct irq_desc *desc);
handle_edge_irq  prototype  include/linux/irq.h  407  extern void handle_edge_irq(unsigned int irq,struct irq_desc *desc);
handle_edge_eoi_irq  prototype  include/linux/irq.h  408  extern void handle_edge_eoi_irq(unsigned int irq,struct irq_desc *desc);
handle_simple_irq  prototype  include/linux/irq.h  409  extern void handle_simple_irq(unsigned int irq,struct irq_desc *desc);
handle_percpu_irq  prototype  include/linux/irq.h  410  extern void handle_percpu_irq(unsigned int irq,struct irq_desc *desc);
handle_percpu_devid_irq  prototype  include/linux/irq.h  411  extern void handle_percpu_devid_irq(unsigned int irq,struct irq_desc *desc);
handle_bad_irq  prototype  include/linux/irq.h  412  extern void handle_bad_irq(unsigned int irq,struct irq_desc *desc);
handle_nested_irq  prototype  include/linux/irq.h  413  extern void handle_nested_irq(unsigned int irq);
note_interrupt  prototype  include/linux/irq.h  417  extern void note_interrupt(unsigned int irq,struct irq_desc *desc,irqreturn_t action_ret);
noirqdebug_setup  prototype  include/linux/irq.h  421  extern int noirqdebug_setup(char *str);
can_request_irq  prototype  include/linux/irq.h  424  extern int can_request_irq(unsigned int irq,unsigned long irqflags);
irq_set_chip_and_handler_name  prototype  include/linux/irq.h  432  irq_set_chip_and_handler_name(unsigned int irq,struct irq_chip *chip,irq_flow_handler_t handle, const char *name);
irq_set_chip_and_handler  function  include/linux/irq.h  435  static inline void irq_set_chip_and_handler(unsigned int irq,struct irq_chip *chip,irq_flow_handler_t handle)
irq_set_percpu_devid  prototype  include/linux/irq.h  440  extern int irq_set_percpu_devid(unsigned int irq);
__irq_set_handler  prototype  include/linux/irq.h  444  __irq_set_handler(unsigned int irq,irq_flow_handler_t handle,int is_chained,const char *name);
irq_set_handler  function  include/linux/irq.h  447  irq_set_handler(unsigned int irq,irq_flow_handler_t handle)
irq_set_chained_handler  function  include/linux/irq.h  458  irq_set_chained_handler(unsigned int irq,irq_flow_handler_t handle)
irq_modify_status  prototype  include/linux/irq.h  463  void irq_modify_status(unsigned int irq,unsigned long clr,unsigned long set);
irq_set_status_flags  function  include/linux/irq.h  465  static inline void irq_set_status_flags(unsigned int irq,unsigned long set)
irq_clear_status_flags  function  include/linux/irq.h  470  static inline void irq_clear_status_flags(unsigned int irq,unsigned long clr)
irq_set_noprobe  function  include/linux/irq.h  475  static inline void irq_set_noprobe(unsigned int irq)
irq_set_probe  function  include/linux/irq.h  480  static inline void irq_set_probe(unsigned int irq)
irq_set_nothread  function  include/linux/irq.h  485  static inline void irq_set_nothread(unsigned int irq)
irq_set_thread  function  include/linux/irq.h  490  static inline void irq_set_thread(unsigned int irq)
irq_set_nested_thread  function  include/linux/irq.h  495  static inline void irq_set_nested_thread(unsigned int irq,bool nest)
irq_set_percpu_devid_flags  function  include/linux/irq.h  503  static inline void irq_set_percpu_devid_flags(unsigned int irq)
create_irq_nr  prototype  include/linux/irq.h  511  extern unsigned int create_irq_nr(unsigned int irq_want,int node);
create_irq  prototype  include/linux/irq.h  512  extern int create_irq(void);
destroy_irq  prototype  include/linux/irq.h  513  extern void destroy_irq(unsigned int irq);
dynamic_irq_cleanup  prototype  include/linux/irq.h  519  extern void dynamic_irq_cleanup(unsigned int irq);
dynamic_irq_init  function  include/linux/irq.h  520  static inline void dynamic_irq_init(unsigned int irq)
irq_set_chip  prototype  include/linux/irq.h  526  extern int irq_set_chip(unsigned int irq,struct irq_chip *chip);
irq_set_handler_data  prototype  include/linux/irq.h  527  extern int irq_set_handler_data(unsigned int irq,void *data);
irq_set_chip_data  prototype  include/linux/irq.h  528  extern int irq_set_chip_data(unsigned int irq,void *data);
irq_set_irq_type  prototype  include/linux/irq.h  529  extern int irq_set_irq_type(unsigned int irq,unsigned int type);
irq_set_msi_desc  prototype  include/linux/irq.h  749  extern int irq_set_msi_desc(unsigned int irq,struct msi_desc *entry);
irq_get_irq_data  prototype  include/linux/irq.h  531  extern struct irq_data *irq_get_irq_data(unsigned int irq);
irq_get_chip  function  include/linux/irq.h  533  static inline struct irq_chip *irq_get_chip(unsigned int irq)
irq_data_get_irq_chip  function  include/linux/irq.h  539  static inline struct irq_chip *irq_data_get_irq_chip(struct irq_data *d)
irq_get_chip_data  function  include/linux/irq.h  544  static inline void *irq_get_chip_data(unsigned int irq)
irq_data_get_irq_chip_data  function  include/linux/irq.h  550  static inline void *irq_data_get_irq_chip_data(struct irq_data *d)
irq_get_handler_data  function  include/linux/irq.h  555  static inline void *irq_get_handler_data(unsigned int irq)
irq_data_get_irq_handler_data  function  include/linux/irq.h  561  static inline void *irq_data_get_irq_handler_data(struct irq_data *d)
irq_get_msi_desc  prototype  include/linux/irq.h  748  extern struct msi_desc *irq_get_msi_desc(unsigned int irq);
irq_data_get_msi  function  include/linux/irq.h  572  static inline struct msi_desc *irq_data_get_msi(struct irq_data *d)
__irq_alloc_descs  prototype  include/linux/irq.h  578  int __irq_alloc_descs(int irq,unsigned int from,unsigned int cnt,int node,struct module *owner);
irq_alloc_descs  macro  include/linux/irq.h  582  #define irq_alloc_descs(irq,from,cnt,node) __irq_alloc_descs(irq, from, cnt, node, THIS_MODULE)
irq_alloc_desc  macro  include/linux/irq.h  585  #define irq_alloc_desc(node) irq_alloc_descs(-1, 0, 1, node)
irq_alloc_desc_at  macro  include/linux/irq.h  588  #define irq_alloc_desc_at(at,node) irq_alloc_descs(at, at, 1, node)
irq_alloc_desc_from  macro  include/linux/irq.h  591  #define irq_alloc_desc_from(from,node) irq_alloc_descs(-1, from, 1, node)
irq_free_descs  prototype  include/linux/irq.h  593  void irq_free_descs(unsigned int irq,unsigned int cnt);
irq_reserve_irqs  prototype  include/linux/irq.h  594  int irq_reserve_irqs(unsigned int from,unsigned int cnt);
irq_free_desc  function  include/linux/irq.h  596  static inline void irq_free_desc(unsigned int irq)
irq_reserve_irq  function  include/linux/irq.h  601  static inline int irq_reserve_irq(unsigned int irq)
irq_reg_writel  macro  include/linux/irq.h  607  # define irq_reg_writel(val,addr) writel(val,addr)
irq_reg_readl  macro  include/linux/irq.h  610  # define irq_reg_readl(addr) readl(addr)
irq_chip_regs  struct  include/linux/irq.h  623  struct irq_chip_regs {
irq_chip_type  struct  include/linux/irq.h  644  struct irq_chip_type {
irq_chip_generic  struct  include/linux/irq.h  673  struct irq_chip_generic {
irq_gc_flags  enum  include/linux/irq.h  696  enum irq_gc_flags {
irq_gc_noop  prototype  include/linux/irq.h  702  void irq_gc_noop(struct irq_data *d);
irq_gc_mask_disable_reg  prototype  include/linux/irq.h  703  void irq_gc_mask_disable_reg(struct irq_data *d);
irq_gc_mask_set_bit  prototype  include/linux/irq.h  704  void irq_gc_mask_set_bit(struct irq_data *d);
irq_gc_mask_clr_bit  prototype  include/linux/irq.h  705  void irq_gc_mask_clr_bit(struct irq_data *d);
irq_gc_unmask_enable_reg  prototype  include/linux/irq.h  706  void irq_gc_unmask_enable_reg(struct irq_data *d);
irq_gc_ack_set_bit  prototype  include/linux/irq.h  707  void irq_gc_ack_set_bit(struct irq_data *d);
irq_gc_ack_clr_bit  prototype  include/linux/irq.h  708  void irq_gc_ack_clr_bit(struct irq_data *d);
irq_gc_mask_disable_reg_and_ack  prototype  include/linux/irq.h  709  void irq_gc_mask_disable_reg_and_ack(struct irq_data *d);
irq_gc_eoi  prototype  include/linux/irq.h  710  void irq_gc_eoi(struct irq_data *d);
irq_gc_set_wake  prototype  include/linux/irq.h  711  int irq_gc_set_wake(struct irq_data *d,unsigned int on);
irq_alloc_generic_chip  prototype  include/linux/irq.h  716  irq_alloc_generic_chip(const char *name,int nr_ct,unsigned int irq_base,void __iomem *reg_base, irq_flow_handler_t handler);
irq_setup_generic_chip  prototype  include/linux/irq.h  719  void irq_setup_generic_chip(struct irq_chip_generic *gc,u32 msk,enum irq_gc_flags flags, unsigned int clr,unsigned int set);
irq_setup_alt_chip  prototype  include/linux/irq.h  720  int irq_setup_alt_chip(struct irq_data *d,unsigned int type);
irq_remove_generic_chip  prototype  include/linux/irq.h  722  void irq_remove_generic_chip(struct irq_chip_generic *gc,u32 msk,unsigned int clr, unsigned int set);
irq_data_get_chip_type  function  include/linux/irq.h  724  static inline struct irq_chip_type *irq_data_get_chip_type(struct irq_data *d)
IRQ_MSK  macro  include/linux/irq.h  729  #define IRQ_MSK(n) (u32)((n) < 32 ? ((1 << (n)) - 1) : UINT_MAX)
irq_gc_lock  function  include/linux/irq.h  742  static inline void irq_gc_lock(struct irq_chip_generic *gc) { }
irq_gc_unlock  function  include/linux/irq.h  743  static inline void irq_gc_unlock(struct irq_chip_generic *gc) { }
_LINUX_IRQDESC_H  macro  include/linux/irqdesc.h  2  #define _LINUX_IRQDESC_H
irq_desc  struct  include/linux/irqdesc.h  40  struct irq_desc {
irq_desc_get_irq_data  function  include/linux/irqdesc.h  81  static inline struct irq_data *irq_desc_get_irq_data(struct irq_desc *desc)
irq_desc_get_chip  function  include/linux/irqdesc.h  86  static inline struct irq_chip *irq_desc_get_chip(struct irq_desc *desc)
irq_desc_get_chip_data  function  include/linux/irqdesc.h  91  static inline void *irq_desc_get_chip_data(struct irq_desc *desc)
irq_desc_get_handler_data  function  include/linux/irqdesc.h  96  static inline void *irq_desc_get_handler_data(struct irq_desc *desc)
irq_desc_get_msi_desc  function  include/linux/irqdesc.h  101  static inline struct msi_desc *irq_desc_get_msi_desc(struct irq_desc *desc)
generic_handle_irq_desc  function  include/linux/irqdesc.h  112  static inline void generic_handle_irq_desc(unsigned int irq,struct irq_desc *desc)
generic_handle_irq  prototype  include/linux/irqdesc.h  117  int generic_handle_irq(unsigned int irq);
irq_has_action  function  include/linux/irqdesc.h  120  static inline int irq_has_action(unsigned int irq)
__irq_set_handler_locked  function  include/linux/irqdesc.h  128  static inline void __irq_set_handler_locked(unsigned int irq,irq_flow_handler_t handler)
__irq_set_chip_handler_name_locked  function  include/linux/irqdesc.h  139  __irq_set_chip_handler_name_locked(unsigned int irq,struct irq_chip *chip,irq_flow_handler_t handler, const char *name)
irq_balancing_disabled  function  include/linux/irqdesc.h  149  static inline int irq_balancing_disabled(unsigned int irq)
irq_set_lockdep_class  function  include/linux/irqdesc.h  158  irq_set_lockdep_class(unsigned int irq,struct lock_class_key *class)
__irq_set_preflow_handler  function  include/linux/irqdesc.h  168  __irq_set_preflow_handler(unsigned int irq,irq_preflow_handler_t handler)
_LINUX_PROFILE_H  macro  include/linux/profile.h  2  #define _LINUX_PROFILE_H
CPU_PROFILING  macro  include/linux/profile.h  11  #define CPU_PROFILING 1
SCHED_PROFILING  macro  include/linux/profile.h  12  #define SCHED_PROFILING 2
SLEEP_PROFILING  macro  include/linux/profile.h  13  #define SLEEP_PROFILING 3
KVM_PROFILING  macro  include/linux/profile.h  14  #define KVM_PROFILING 4
create_prof_cpu_mask  function  include/linux/profile.h  24  static inline void create_prof_cpu_mask(struct proc_dir_entry *de)
create_proc_profile  function  include/linux/profile.h  28  static inline int create_proc_profile(void)
profile_type  enum  include/linux/profile.h  34  enum profile_type {
profile_init  function  include/linux/profile.h  94  static inline int profile_init(void)
profile_setup  prototype  include/linux/profile.h  45  int profile_setup(char *str);
profile_tick  function  include/linux/profile.h  99  static inline void profile_tick(int type)
profile_hits  function  include/linux/profile.h  104  static inline void profile_hits(int type,void *ip,unsigned int nr_hits)
profile_hit  function  include/linux/profile.h  109  static inline void profile_hit(int type,void *ip)
profile_task_exit  macro  include/linux/profile.h  134  #define profile_task_exit(a) do { } while (0)
profile_handoff_task  macro  include/linux/profile.h  135  #define profile_handoff_task(a) (0)
profile_munmap  macro  include/linux/profile.h  136  #define profile_munmap(a) do { } while (0)
task_handoff_register  function  include/linux/profile.h  114  static inline int task_handoff_register(struct notifier_block * n)
task_handoff_unregister  function  include/linux/profile.h  119  static inline int task_handoff_unregister(struct notifier_block * n)
profile_event_register  function  include/linux/profile.h  124  static inline int profile_event_register(enum profile_type t,struct notifier_block * n)
profile_event_unregister  function  include/linux/profile.h  129  static inline int profile_event_unregister(enum profile_type t,struct notifier_block * n)
register_timer_hook  function  include/linux/profile.h  138  static inline int register_timer_hook(int (*hook)(struct pt_regs *))
unregister_timer_hook  function  include/linux/profile.h  143  static inline void unregister_timer_hook(int (*hook)(struct pt_regs *))
prof_on  macro  include/linux/profile.h  92  #define prof_on 0
_ASM_GENERIC_SECTIONS_H_  macro  include/asm-generic/sections.h  2  #define _ASM_GENERIC_SECTIONS_H_
dereference_function_descriptor  macro  include/asm-generic/sections.h  24  #define dereference_function_descriptor(p) (p)
arch_is_kernel_text  function  include/asm-generic/sections.h  30  static inline int arch_is_kernel_text(unsigned long addr)
arch_is_kernel_data  function  include/asm-generic/sections.h  37  static inline int arch_is_kernel_data(unsigned long addr)
_ASM_X86_HW_IRQ_H  macro  arch/x86/include/asm/hw_irq.h  2  #define _ASM_X86_HW_IRQ_H
apic_timer_interrupt  prototype  arch/x86/include/asm/hw_irq.h  29  extern void apic_timer_interrupt(void);
x86_platform_ipi  prototype  arch/x86/include/asm/hw_irq.h  30  extern void x86_platform_ipi(void);
error_interrupt  prototype  arch/x86/include/asm/hw_irq.h  31  extern void error_interrupt(void);
irq_work_interrupt  prototype  arch/x86/include/asm/hw_irq.h  32  extern void irq_work_interrupt(void);
spurious_interrupt  prototype  arch/x86/include/asm/hw_irq.h  34  extern void spurious_interrupt(void);
thermal_interrupt  prototype  arch/x86/include/asm/hw_irq.h  35  extern void thermal_interrupt(void);
reschedule_interrupt  prototype  arch/x86/include/asm/hw_irq.h  36  extern void reschedule_interrupt(void);
invalidate_interrupt  prototype  arch/x86/include/asm/hw_irq.h  38  extern void invalidate_interrupt(void);
invalidate_interrupt0  prototype  arch/x86/include/asm/hw_irq.h  39  extern void invalidate_interrupt0(void);
invalidate_interrupt1  prototype  arch/x86/include/asm/hw_irq.h  40  extern void invalidate_interrupt1(void);
invalidate_interrupt2  prototype  arch/x86/include/asm/hw_irq.h  41  extern void invalidate_interrupt2(void);
invalidate_interrupt3  prototype  arch/x86/include/asm/hw_irq.h  42  extern void invalidate_interrupt3(void);
invalidate_interrupt4  prototype  arch/x86/include/asm/hw_irq.h  43  extern void invalidate_interrupt4(void);
invalidate_interrupt5  prototype  arch/x86/include/asm/hw_irq.h  44  extern void invalidate_interrupt5(void);
invalidate_interrupt6  prototype  arch/x86/include/asm/hw_irq.h  45  extern void invalidate_interrupt6(void);
invalidate_interrupt7  prototype  arch/x86/include/asm/hw_irq.h  46  extern void invalidate_interrupt7(void);
invalidate_interrupt8  prototype  arch/x86/include/asm/hw_irq.h  47  extern void invalidate_interrupt8(void);
invalidate_interrupt9  prototype  arch/x86/include/asm/hw_irq.h  48  extern void invalidate_interrupt9(void);
invalidate_interrupt10  prototype  arch/x86/include/asm/hw_irq.h  49  extern void invalidate_interrupt10(void);
invalidate_interrupt11  prototype  arch/x86/include/asm/hw_irq.h  50  extern void invalidate_interrupt11(void);
invalidate_interrupt12  prototype  arch/x86/include/asm/hw_irq.h  51  extern void invalidate_interrupt12(void);
invalidate_interrupt13  prototype  arch/x86/include/asm/hw_irq.h  52  extern void invalidate_interrupt13(void);
invalidate_interrupt14  prototype  arch/x86/include/asm/hw_irq.h  53  extern void invalidate_interrupt14(void);
invalidate_interrupt15  prototype  arch/x86/include/asm/hw_irq.h  54  extern void invalidate_interrupt15(void);
invalidate_interrupt16  prototype  arch/x86/include/asm/hw_irq.h  55  extern void invalidate_interrupt16(void);
invalidate_interrupt17  prototype  arch/x86/include/asm/hw_irq.h  56  extern void invalidate_interrupt17(void);
invalidate_interrupt18  prototype  arch/x86/include/asm/hw_irq.h  57  extern void invalidate_interrupt18(void);
invalidate_interrupt19  prototype  arch/x86/include/asm/hw_irq.h  58  extern void invalidate_interrupt19(void);
invalidate_interrupt20  prototype  arch/x86/include/asm/hw_irq.h  59  extern void invalidate_interrupt20(void);
invalidate_interrupt21  prototype  arch/x86/include/asm/hw_irq.h  60  extern void invalidate_interrupt21(void);
invalidate_interrupt22  prototype  arch/x86/include/asm/hw_irq.h  61  extern void invalidate_interrupt22(void);
invalidate_interrupt23  prototype  arch/x86/include/asm/hw_irq.h  62  extern void invalidate_interrupt23(void);
invalidate_interrupt24  prototype  arch/x86/include/asm/hw_irq.h  63  extern void invalidate_interrupt24(void);
invalidate_interrupt25  prototype  arch/x86/include/asm/hw_irq.h  64  extern void invalidate_interrupt25(void);
invalidate_interrupt26  prototype  arch/x86/include/asm/hw_irq.h  65  extern void invalidate_interrupt26(void);
invalidate_interrupt27  prototype  arch/x86/include/asm/hw_irq.h  66  extern void invalidate_interrupt27(void);
invalidate_interrupt28  prototype  arch/x86/include/asm/hw_irq.h  67  extern void invalidate_interrupt28(void);
invalidate_interrupt29  prototype  arch/x86/include/asm/hw_irq.h  68  extern void invalidate_interrupt29(void);
invalidate_interrupt30  prototype  arch/x86/include/asm/hw_irq.h  69  extern void invalidate_interrupt30(void);
invalidate_interrupt31  prototype  arch/x86/include/asm/hw_irq.h  70  extern void invalidate_interrupt31(void);
irq_move_cleanup_interrupt  prototype  arch/x86/include/asm/hw_irq.h  72  extern void irq_move_cleanup_interrupt(void);
reboot_interrupt  prototype  arch/x86/include/asm/hw_irq.h  73  extern void reboot_interrupt(void);
threshold_interrupt  prototype  arch/x86/include/asm/hw_irq.h  74  extern void threshold_interrupt(void);
call_function_interrupt  prototype  arch/x86/include/asm/hw_irq.h  76  extern void call_function_interrupt(void);
call_function_single_interrupt  prototype  arch/x86/include/asm/hw_irq.h  77  extern void call_function_single_interrupt(void);
IO_APIC_IRQ  macro  arch/x86/include/asm/hw_irq.h  80  #define IO_APIC_IRQ(x) (((x) >= NR_IRQS_LEGACY) || ((1<<(x)) & io_apic_irqs))
init_VISWS_APIC_irqs  prototype  arch/x86/include/asm/hw_irq.h  83  extern void init_VISWS_APIC_irqs(void);
setup_IO_APIC  prototype  arch/x86/include/asm/hw_irq.h  84  extern void setup_IO_APIC(void);
disable_IO_APIC  prototype  arch/x86/include/asm/hw_irq.h  85  extern void disable_IO_APIC(void);
io_apic_irq_attr  struct  arch/x86/include/asm/hw_irq.h  87  struct io_apic_irq_attr {
set_io_apic_irq_attr  function  arch/x86/include/asm/hw_irq.h  96  static inline void set_io_apic_irq_attr(struct io_apic_irq_attr *irq_attr,int ioapic, int ioapic_pin,int trigger, int polarity)
irq_2_iommu  struct  arch/x86/include/asm/hw_irq.h  104  struct irq_2_iommu {
irq_cfg  struct  arch/x86/include/asm/hw_irq.h  116  struct irq_cfg {
assign_irq_vector  prototype  arch/x86/include/asm/hw_irq.h  127  extern int assign_irq_vector(int,struct irq_cfg *,const struct cpumask *);
send_cleanup_vector  prototype  arch/x86/include/asm/hw_irq.h  128  extern void send_cleanup_vector(struct irq_cfg *);
__ioapic_set_affinity  prototype  arch/x86/include/asm/hw_irq.h  132  int __ioapic_set_affinity(struct irq_data *,const struct cpumask *,unsigned int *dest_id);
IO_APIC_get_PCI_irq_vector  prototype  arch/x86/include/asm/hw_irq.h  133  extern int IO_APIC_get_PCI_irq_vector(int bus,int devfn,int pin,struct io_apic_irq_attr *irq_attr);
setup_ioapic_dest  prototype  arch/x86/include/asm/hw_irq.h  134  extern void setup_ioapic_dest(void);
enable_IO_APIC  prototype  arch/x86/include/asm/hw_irq.h  136  extern void enable_IO_APIC(void);
eisa_set_level_irq  prototype  arch/x86/include/asm/hw_irq.h  143  extern void eisa_set_level_irq(unsigned int irq);
smp_apic_timer_interrupt  prototype  arch/x86/include/asm/hw_irq.h  146  extern void smp_apic_timer_interrupt(struct pt_regs *);
smp_spurious_interrupt  prototype  arch/x86/include/asm/hw_irq.h  147  extern void smp_spurious_interrupt(struct pt_regs *);
smp_x86_platform_ipi  prototype  arch/x86/include/asm/hw_irq.h  148  extern void smp_x86_platform_ipi(struct pt_regs *);
smp_error_interrupt  prototype  arch/x86/include/asm/hw_irq.h  149  extern void smp_error_interrupt(struct pt_regs *);
smp_irq_move_cleanup_interrupt  prototype  arch/x86/include/asm/hw_irq.h  151  extern asmlinkage void smp_irq_move_cleanup_interrupt(void);
smp_reschedule_interrupt  prototype  arch/x86/include/asm/hw_irq.h  154  extern void smp_reschedule_interrupt(struct pt_regs *);
smp_call_function_interrupt  prototype  arch/x86/include/asm/hw_irq.h  155  extern void smp_call_function_interrupt(struct pt_regs *);
smp_call_function_single_interrupt  prototype  arch/x86/include/asm/hw_irq.h  156  extern void smp_call_function_single_interrupt(struct pt_regs *);
smp_invalidate_interrupt  prototype  arch/x86/include/asm/hw_irq.h  160  extern asmlinkage void smp_invalidate_interrupt(struct pt_regs *);
setup_vector_irq  prototype  arch/x86/include/asm/hw_irq.h  168  extern void setup_vector_irq(int cpu);
lock_vector_lock  function  arch/x86/include/asm/hw_irq.h  175  static inline void lock_vector_lock(void) {}
unlock_vector_lock  function  arch/x86/include/asm/hw_irq.h  176  static inline void unlock_vector_lock(void) {}
__setup_vector_irq  function  arch/x86/include/asm/hw_irq.h  177  static inline void __setup_vector_irq(int cpu) {}
__LINUX_DEBUG_LOCKING_H  macro  include/linux/debug_locks.h  2  #define __LINUX_DEBUG_LOCKING_H
__debug_locks_off  function  include/linux/debug_locks.h  14  static inline int __debug_locks_off(void)
debug_locks_off  prototype  include/linux/debug_locks.h  22  extern int debug_locks_off(void);
DEBUG_LOCKS_WARN_ON  macro  include/linux/debug_locks.h  34  #define DEBUG_LOCKS_WARN_ON(c) ({ int __ret = 0; if (!oops_in_progress && unlikely(c)) { if (debug_locks_off() && !debug_locks_silent) WARN_ON(1); __ret = 1; } __ret; })
SMP_DEBUG_LOCKS_WARN_ON  macro  include/linux/debug_locks.h  39  # define SMP_DEBUG_LOCKS_WARN_ON(c) do { } while (0)
locking_selftest  macro  include/linux/debug_locks.h  45  # define locking_selftest() do { } while (0)
debug_show_all_locks  function  include/linux/debug_locks.h  56  static inline void debug_show_all_locks(void)
debug_show_held_locks  function  include/linux/debug_locks.h  60  static inline void debug_show_held_locks(struct task_struct *task)
debug_check_no_locks_freed  function  include/linux/debug_locks.h  65  debug_check_no_locks_freed(const void *from,unsigned long len)
debug_check_no_locks_held  function  include/linux/debug_locks.h  70  debug_check_no_locks_held(struct task_struct *task)
_LINUX_RANGE_H  macro  include/linux/range.h  2  #define _LINUX_RANGE_H
range  struct  include/linux/range.h  4  struct range {
add_range  prototype  include/linux/range.h  10  int add_range(struct range *range,int az,int nr_range,u64 start, u64 end);
add_range_with_merge  prototype  include/linux/range.h  14  int add_range_with_merge(struct range *range,int az,int nr_range,u64 start, u64 end);
subtract_range  prototype  include/linux/range.h  16  void subtract_range(struct range *range,int az,u64 start,u64 end);
clean_sort_range  prototype  include/linux/range.h  18  int clean_sort_range(struct range *range,int az);
sort_range  prototype  include/linux/range.h  20  void sort_range(struct range *range,int nr_range);
MAX_RESOURCE  macro  include/linux/range.h  22  #define MAX_RESOURCE ((resource_size_t)~0)
cap_resource  function  include/linux/range.h  23  static inline resource_size_t cap_resource(u64 val)
__LINUX_BIT_SPINLOCK_H  macro  include/linux/bit_spinlock.h  2  #define __LINUX_BIT_SPINLOCK_H
bit_spin_lock  function  include/linux/bit_spinlock.h  15  static inline void bit_spin_lock(int bitnum,unsigned long *addr)
bit_spin_trylock  function  include/linux/bit_spinlock.h  40  static inline int bit_spin_trylock(int bitnum,unsigned long *addr)
bit_spin_unlock  function  include/linux/bit_spinlock.h  56  static inline void bit_spin_unlock(int bitnum,unsigned long *addr)
__bit_spin_unlock  function  include/linux/bit_spinlock.h  73  static inline void __bit_spin_unlock(int bitnum,unsigned long *addr)
bit_spin_is_locked  function  include/linux/bit_spinlock.h  88  static inline int bit_spin_is_locked(int bitnum,unsigned long *addr)
_ASM_X86_E820_H  macro  arch/x86/include/asm/e820.h  2  #define _ASM_X86_E820_H
E820_X_MAX  macro  arch/x86/include/asm/e820.h  8  #define E820_X_MAX E820MAX
e820_any_mapped  prototype  arch/x86/include/asm/e820.h  17  extern int e820_any_mapped(u64 start,u64 end,unsigned type);
e820_all_mapped  prototype  arch/x86/include/asm/e820.h  18  extern int e820_all_mapped(u64 start,u64 end,unsigned type);
e820_add_region  prototype  arch/x86/include/asm/e820.h  19  extern void e820_add_region(u64 start,u64 size,int type);
e820_print_map  prototype  arch/x86/include/asm/e820.h  20  extern void e820_print_map(char *who);
sanitize_e820_map  prototype  arch/x86/include/asm/e820.h  22  sanitize_e820_map(struct e820entry *biosmap,int max_nr_map,u32 *pnr_map);
e820_update_range  prototype  arch/x86/include/asm/e820.h  24  extern u64 e820_update_range(u64 start,u64 size,unsigned old_type,unsigned new_type);
e820_remove_range  prototype  arch/x86/include/asm/e820.h  26  extern u64 e820_remove_range(u64 start,u64 size,unsigned old_type,int checktype);
update_e820  prototype  arch/x86/include/asm/e820.h  27  extern void update_e820(void);
e820_setup_gap  prototype  arch/x86/include/asm/e820.h  28  extern void e820_setup_gap(void);
e820_search_gap  prototype  arch/x86/include/asm/e820.h  30  extern int e820_search_gap(unsigned long *gapstart,unsigned long *gapsize,unsigned long start_addr, unsigned long long end_addr);
parse_e820_ext  prototype  arch/x86/include/asm/e820.h  32  extern void parse_e820_ext(struct setup_data *data);
e820_mark_nosave_regions  function  arch/x86/include/asm/e820.h  38  static inline void e820_mark_nosave_regions(unsigned long limit_pfn)
early_memtest  function  arch/x86/include/asm/e820.h  46  static inline void early_memtest(unsigned long start,unsigned long end)
e820_end_of_ram_pfn  prototype  arch/x86/include/asm/e820.h  51  extern unsigned long e820_end_of_ram_pfn(void);
e820_end_of_low_ram_pfn  prototype  arch/x86/include/asm/e820.h  52  extern unsigned long e820_end_of_low_ram_pfn(void);
early_reserve_e820  prototype  arch/x86/include/asm/e820.h  53  extern u64 early_reserve_e820(u64 sizet,u64 align);
memblock_x86_fill  prototype  arch/x86/include/asm/e820.h  55  void memblock_x86_fill(void);
memblock_find_dma_reserve  prototype  arch/x86/include/asm/e820.h  56  void memblock_find_dma_reserve(void);
finish_e820_parsing  prototype  arch/x86/include/asm/e820.h  58  extern void finish_e820_parsing(void);
e820_reserve_resources  prototype  arch/x86/include/asm/e820.h  59  extern void e820_reserve_resources(void);
e820_reserve_resources_late  prototype  arch/x86/include/asm/e820.h  60  extern void e820_reserve_resources_late(void);
setup_memory_map  prototype  arch/x86/include/asm/e820.h  61  extern void setup_memory_map(void);
default_machine_specific_memory_setup  prototype  arch/x86/include/asm/e820.h  62  extern char *default_machine_specific_memory_setup(void);
is_ISA_range  function  arch/x86/include/asm/e820.h  68  static inline bool is_ISA_range(u64 s,u64 e)
HIGH_MEMORY  macro  arch/x86/include/asm/e820.h  76  #define HIGH_MEMORY (1024*1024)
_ASM_X86_PGTABLE_H  macro  arch/x86/include/asm/pgtable.h  2  #define _ASM_X86_PGTABLE_H
pgprot_noncached  macro  include/asm-generic/pgtable.h  241  #define pgprot_noncached(prot) (prot)
ZERO_PAGE  macro  arch/x86/include/asm/pgtable.h  26  #define ZERO_PAGE(vaddr) (virt_to_page(empty_zero_page))
pgd_page_get_mm  prototype  arch/x86/include/asm/pgtable.h  31  extern struct mm_struct *pgd_page_get_mm(struct page *page);
pte_dirty  function  arch/x86/include/asm/pgtable.h  90  static inline int pte_dirty(pte_t pte)
pte_young  function  arch/x86/include/asm/pgtable.h  95  static inline int pte_young(pte_t pte)
pmd_young  function  arch/x86/include/asm/pgtable.h  100  static inline int pmd_young(pmd_t pmd)
pte_write  function  arch/x86/include/asm/pgtable.h  105  static inline int pte_write(pte_t pte)
pte_file  function  arch/x86/include/asm/pgtable.h  110  static inline int pte_file(pte_t pte)
pte_huge  function  arch/x86/include/asm/pgtable.h  115  static inline int pte_huge(pte_t pte)
pte_global  function  arch/x86/include/asm/pgtable.h  120  static inline int pte_global(pte_t pte)
pte_exec  function  arch/x86/include/asm/pgtable.h  125  static inline int pte_exec(pte_t pte)
pte_special  function  arch/x86/include/asm/pgtable.h  130  static inline int pte_special(pte_t pte)
pte_pfn  function  arch/x86/include/asm/pgtable.h  135  static inline unsigned long pte_pfn(pte_t pte)
pmd_pfn  function  arch/x86/include/asm/pgtable.h  140  static inline unsigned long pmd_pfn(pmd_t pmd)
pud_pfn  function  arch/x86/include/asm/pgtable.h  145  static inline unsigned long pud_pfn(pud_t pud)
pte_page  macro  arch/x86/include/asm/pgtable.h  150  #define pte_page(pte) pfn_to_page(pte_pfn(pte))
pmd_large  function  arch/x86/include/asm/pgtable.h  152  static inline int pmd_large(pmd_t pte)
pmd_trans_splitting  function  include/asm-generic/pgtable.h  497  static inline int pmd_trans_splitting(pmd_t pmd)
pmd_trans_huge  function  include/asm-generic/pgtable.h  493  static inline int pmd_trans_huge(pmd_t pmd)
has_transparent_hugepage  function  arch/x86/include/asm/pgtable.h  168  static inline int has_transparent_hugepage(void)
pte_set_flags  function  arch/x86/include/asm/pgtable.h  174  static inline pte_t pte_set_flags(pte_t pte,pteval_t set)
pte_clear_flags  function  arch/x86/include/asm/pgtable.h  181  static inline pte_t pte_clear_flags(pte_t pte,pteval_t clear)
pte_mkclean  function  arch/x86/include/asm/pgtable.h  188  static inline pte_t pte_mkclean(pte_t pte)
pte_mkold  function  arch/x86/include/asm/pgtable.h  193  static inline pte_t pte_mkold(pte_t pte)
pte_wrprotect  function  arch/x86/include/asm/pgtable.h  198  static inline pte_t pte_wrprotect(pte_t pte)
pte_mkexec  function  arch/x86/include/asm/pgtable.h  203  static inline pte_t pte_mkexec(pte_t pte)
pte_mkdirty  function  arch/x86/include/asm/pgtable.h  208  static inline pte_t pte_mkdirty(pte_t pte)
pte_mkyoung  function  arch/x86/include/asm/pgtable.h  213  static inline pte_t pte_mkyoung(pte_t pte)
pte_mkwrite  function  arch/x86/include/asm/pgtable.h  218  static inline pte_t pte_mkwrite(pte_t pte)
pte_mkhuge  function  arch/x86/include/asm/pgtable.h  223  static inline pte_t pte_mkhuge(pte_t pte)
pte_clrhuge  function  arch/x86/include/asm/pgtable.h  228  static inline pte_t pte_clrhuge(pte_t pte)
pte_mkglobal  function  arch/x86/include/asm/pgtable.h  233  static inline pte_t pte_mkglobal(pte_t pte)
pte_clrglobal  function  arch/x86/include/asm/pgtable.h  238  static inline pte_t pte_clrglobal(pte_t pte)
pte_mkspecial  function  arch/x86/include/asm/pgtable.h  243  static inline pte_t pte_mkspecial(pte_t pte)
pmd_set_flags  function  arch/x86/include/asm/pgtable.h  248  static inline pmd_t pmd_set_flags(pmd_t pmd,pmdval_t set)
pmd_clear_flags  function  arch/x86/include/asm/pgtable.h  255  static inline pmd_t pmd_clear_flags(pmd_t pmd,pmdval_t clear)
pmd_mkold  function  arch/x86/include/asm/pgtable.h  262  static inline pmd_t pmd_mkold(pmd_t pmd)
pmd_wrprotect  function  arch/x86/include/asm/pgtable.h  267  static inline pmd_t pmd_wrprotect(pmd_t pmd)
pmd_mkdirty  function  arch/x86/include/asm/pgtable.h  272  static inline pmd_t pmd_mkdirty(pmd_t pmd)
pmd_mkhuge  function  arch/x86/include/asm/pgtable.h  277  static inline pmd_t pmd_mkhuge(pmd_t pmd)
pmd_mkyoung  function  arch/x86/include/asm/pgtable.h  282  static inline pmd_t pmd_mkyoung(pmd_t pmd)
pmd_mkwrite  function  arch/x86/include/asm/pgtable.h  287  static inline pmd_t pmd_mkwrite(pmd_t pmd)
pmd_mknotpresent  function  arch/x86/include/asm/pgtable.h  292  static inline pmd_t pmd_mknotpresent(pmd_t pmd)
massage_pgprot  function  arch/x86/include/asm/pgtable.h  301  static inline pgprotval_t massage_pgprot(pgprot_t pgprot)
pfn_pte  function  arch/x86/include/asm/pgtable.h  311  static inline pte_t pfn_pte(unsigned long page_nr,pgprot_t pgprot)
pfn_pmd  function  arch/x86/include/asm/pgtable.h  317  static inline pmd_t pfn_pmd(unsigned long page_nr,pgprot_t pgprot)
pte_modify  function  arch/x86/include/asm/pgtable.h  323  static inline pte_t pte_modify(pte_t pte,pgprot_t newprot)
pmd_modify  function  arch/x86/include/asm/pgtable.h  337  static inline pmd_t pmd_modify(pmd_t pmd,pgprot_t newprot)
pgprot_modify  function  arch/x86/include/asm/pgtable.h  349  static inline pgprot_t pgprot_modify(pgprot_t oldprot,pgprot_t newprot)
pte_pgprot  macro  arch/x86/include/asm/pgtable.h  356  #define pte_pgprot(x) __pgprot(pte_flags(x) & PTE_FLAGS_MASK)
canon_pgprot  macro  arch/x86/include/asm/pgtable.h  358  #define canon_pgprot(p) __pgprot(massage_pgprot(p))
is_new_memtype_allowed  function  arch/x86/include/asm/pgtable.h  362  static inline int is_new_memtype_allowed(u64 paddr,unsigned long size,unsigned long flags,unsigned long new_flags)
populate_extra_pmd  prototype  arch/x86/include/asm/pgtable.h  386  pmd_t *populate_extra_pmd(unsigned long vaddr);
populate_extra_pte  prototype  arch/x86/include/asm/pgtable.h  387  pte_t *populate_extra_pte(unsigned long vaddr);
pte_none  function  arch/x86/include/asm/pgtable.h  399  static inline int pte_none(pte_t pte)
__HAVE_ARCH_PTE_SAME  macro  arch/x86/include/asm/pgtable.h  404  #define __HAVE_ARCH_PTE_SAME
pte_same  function  include/asm-generic/pgtable.h  189  static inline int pte_same(pte_t pte_a,pte_t pte_b)
pte_present  function  arch/x86/include/asm/pgtable.h  410  static inline int pte_present(pte_t a)
pte_accessible  macro  include/asm-generic/pgtable.h  233  # define pte_accessible(pte) ((void)(pte),1)
pte_hidden  function  arch/x86/include/asm/pgtable.h  422  static inline int pte_hidden(pte_t pte)
pmd_present  function  arch/x86/include/asm/pgtable.h  427  static inline int pmd_present(pmd_t pmd)
pmd_none  function  arch/x86/include/asm/pgtable.h  439  static inline int pmd_none(pmd_t pmd)
pmd_page_vaddr  function  arch/x86/include/asm/pgtable.h  446  static inline unsigned long pmd_page_vaddr(pmd_t pmd)
pmd_page  macro  arch/x86/include/asm/pgtable.h  455  #define pmd_page(pmd) pfn_to_page((pmd_val(pmd) & PTE_PFN_MASK) >> PAGE_SHIFT)
pmd_index  function  arch/x86/include/asm/pgtable.h  463  static inline unsigned long pmd_index(unsigned long address)
mk_pte  macro  arch/x86/include/asm/pgtable.h  475  #define mk_pte(page,pgprot) pfn_pte(page_to_pfn(page),(pgprot))
pte_index  function  arch/x86/include/asm/pgtable.h  483  static inline unsigned long pte_index(unsigned long address)
pte_offset_kernel  function  arch/x86/include/asm/pgtable.h  488  static inline pte_t *pte_offset_kernel(pmd_t *pmd,unsigned long address)
pmd_bad  function  arch/x86/include/asm/pgtable.h  493  static inline int pmd_bad(pmd_t pmd)
pages_to_mb  function  arch/x86/include/asm/pgtable.h  503  static inline unsigned long pages_to_mb(unsigned long npg)
io_remap_pfn_range  macro  arch/x86/include/asm/pgtable.h  509  #define io_remap_pfn_range(vma,vaddr,pfn,size,prot) remap_pfn_range(vma, vaddr, pfn, size, prot)
pud_large  function  arch/x86/include/asm/pgtable.h  550  static inline int pud_large(pud_t pud)
pud_index  function  arch/x86/include/asm/pgtable.h  574  static inline unsigned long pud_index(unsigned long address)
pgd_index  macro  arch/x86/include/asm/pgtable.h  603  #define pgd_index(address) (((address) >> PGDIR_SHIFT) & (PTRS_PER_PGD - 1))
pgd_offset  macro  arch/x86/include/asm/pgtable.h  609  #define pgd_offset(mm,address) ((mm)->pgd + pgd_index((address)))
pgd_offset_k  macro  arch/x86/include/asm/pgtable.h  614  #define pgd_offset_k(address) pgd_offset(&init_mm,(address))
KERNEL_PGD_BOUNDARY  macro  arch/x86/include/asm/pgtable.h  617  #define KERNEL_PGD_BOUNDARY pgd_index(PAGE_OFFSET)
KERNEL_PGD_PTRS  macro  arch/x86/include/asm/pgtable.h  618  #define KERNEL_PGD_PTRS (PTRS_PER_PGD - KERNEL_PGD_BOUNDARY)
native_local_ptep_get_and_clear  function  arch/x86/include/asm/pgtable.h  625  static inline pte_t native_local_ptep_get_and_clear(pte_t *ptep)
native_local_pmdp_get_and_clear  function  arch/x86/include/asm/pgtable.h  634  static inline pmd_t native_local_pmdp_get_and_clear(pmd_t *pmdp)
native_set_pte_at  function  arch/x86/include/asm/pgtable.h  643  static inline void native_set_pte_at(struct mm_struct *mm,unsigned long addr,pte_t *ptep , pte_t pte)
native_set_pmd_at  function  arch/x86/include/asm/pgtable.h  649  static inline void native_set_pmd_at(struct mm_struct *mm,unsigned long addr,pmd_t *pmdp , pmd_t pmd)
__HAVE_ARCH_PTEP_SET_ACCESS_FLAGS  macro  arch/x86/include/asm/pgtable.h  681  #define __HAVE_ARCH_PTEP_SET_ACCESS_FLAGS
ptep_set_access_flags  prototype  include/asm-generic/pgtable.h  23  extern int ptep_set_access_flags(struct vm_area_struct *vma,unsigned long address, pte_t *ptep,pte_t entry, int dirty);
__HAVE_ARCH_PTEP_TEST_AND_CLEAR_YOUNG  macro  arch/x86/include/asm/pgtable.h  686  #define __HAVE_ARCH_PTEP_TEST_AND_CLEAR_YOUNG
ptep_test_and_clear_young  function  include/asm-generic/pgtable.h  35  static inline int ptep_test_and_clear_young(struct vm_area_struct *vma,unsigned long address,pte_t *ptep)
__HAVE_ARCH_PTEP_CLEAR_YOUNG_FLUSH  macro  arch/x86/include/asm/pgtable.h  690  #define __HAVE_ARCH_PTEP_CLEAR_YOUNG_FLUSH
ptep_clear_flush_young  prototype  include/asm-generic/pgtable.h  74  int ptep_clear_flush_young(struct vm_area_struct *vma,unsigned long address, pte_t *ptep);
__HAVE_ARCH_PTEP_GET_AND_CLEAR  macro  arch/x86/include/asm/pgtable.h  694  #define __HAVE_ARCH_PTEP_GET_AND_CLEAR
ptep_get_and_clear  function  include/asm-generic/pgtable.h  85  static inline pte_t ptep_get_and_clear(struct mm_struct *mm,unsigned long address,pte_t *ptep)
__HAVE_ARCH_PTEP_GET_AND_CLEAR_FULL  macro  arch/x86/include/asm/pgtable.h  703  #define __HAVE_ARCH_PTEP_GET_AND_CLEAR_FULL
ptep_get_and_clear_full  function  include/asm-generic/pgtable.h  109  static inline pte_t ptep_get_and_clear_full(struct mm_struct *mm,unsigned long address, pte_t *ptep,int full)
__HAVE_ARCH_PTEP_SET_WRPROTECT  macro  arch/x86/include/asm/pgtable.h  721  #define __HAVE_ARCH_PTEP_SET_WRPROTECT
ptep_set_wrprotect  function  include/asm-generic/pgtable.h  146  static inline void ptep_set_wrprotect(struct mm_struct *mm,unsigned long address,pte_t *ptep)
flush_tlb_fix_spurious_fault  macro  include/asm-generic/pgtable.h  237  #define flush_tlb_fix_spurious_fault(vma,address) flush_tlb_page(vma,address)
mk_pmd  macro  arch/x86/include/asm/pgtable.h  731  #define mk_pmd(page,pgprot) pfn_pmd(page_to_pfn(page),(pgprot))
__HAVE_ARCH_PMDP_SET_ACCESS_FLAGS  macro  arch/x86/include/asm/pgtable.h  733  #define __HAVE_ARCH_PMDP_SET_ACCESS_FLAGS
pmdp_set_access_flags  prototype  include/asm-generic/pgtable.h  29  extern int pmdp_set_access_flags(struct vm_area_struct *vma,unsigned long address, pmd_t *pmdp,pmd_t entry, int dirty);
__HAVE_ARCH_PMDP_TEST_AND_CLEAR_YOUNG  macro  arch/x86/include/asm/pgtable.h  738  #define __HAVE_ARCH_PMDP_TEST_AND_CLEAR_YOUNG
pmdp_test_and_clear_young  function  include/asm-generic/pgtable.h  64  static inline int pmdp_test_and_clear_young(struct vm_area_struct *vma,unsigned long address,pmd_t *pmdp)
__HAVE_ARCH_PMDP_CLEAR_YOUNG_FLUSH  macro  arch/x86/include/asm/pgtable.h  742  #define __HAVE_ARCH_PMDP_CLEAR_YOUNG_FLUSH
pmdp_clear_flush_young  prototype  include/asm-generic/pgtable.h  79  int pmdp_clear_flush_young(struct vm_area_struct *vma,unsigned long address, pmd_t *pmdp);
__HAVE_ARCH_PMDP_SPLITTING_FLUSH  macro  arch/x86/include/asm/pgtable.h  747  #define __HAVE_ARCH_PMDP_SPLITTING_FLUSH
pmdp_splitting_flush  prototype  include/asm-generic/pgtable.h  172  extern void pmdp_splitting_flush(struct vm_area_struct *vma,unsigned long address, pmd_t *pmdp);
__HAVE_ARCH_PMD_WRITE  macro  arch/x86/include/asm/pgtable.h  751  #define __HAVE_ARCH_PMD_WRITE
pmd_write  function  include/asm-generic/pgtable.h  502  static inline int pmd_write(pmd_t pmd)
__HAVE_ARCH_PMDP_GET_AND_CLEAR  macro  arch/x86/include/asm/pgtable.h  757  #define __HAVE_ARCH_PMDP_GET_AND_CLEAR
pmdp_get_and_clear  function  include/asm-generic/pgtable.h  97  static inline pmd_t pmdp_get_and_clear(struct mm_struct *mm,unsigned long address,pmd_t *pmdp)
__HAVE_ARCH_PMDP_SET_WRPROTECT  macro  arch/x86/include/asm/pgtable.h  766  #define __HAVE_ARCH_PMDP_SET_WRPROTECT
pmdp_set_wrprotect  function  include/asm-generic/pgtable.h  163  static inline void pmdp_set_wrprotect(struct mm_struct *mm,unsigned long address, pmd_t *pmdp)
clone_pgd_range  function  arch/x86/include/asm/pgtable.h  784  static inline void clone_pgd_range(pgd_t *dst,pgd_t *src,int count)
_ASM_X86_NUMA_H  macro  arch/x86/include/asm/numa.h  2  #define _ASM_X86_NUMA_H
NR_NODE_MEMBLKS  macro  arch/x86/include/asm/numa.h  11  #define NR_NODE_MEMBLKS (MAX_NUMNODES*2)
ZONE_ALIGN  macro  arch/x86/include/asm/numa.h  12  #define ZONE_ALIGN (1UL << (MAX_ORDER+PAGE_SHIFT))
NODE_MIN_SIZE  macro  arch/x86/include/asm/numa.h  19  #define NODE_MIN_SIZE (4*1024*1024)
numa_add_memblk  prototype  arch/x86/include/asm/numa.h  34  extern int __init numa_add_memblk(int nodeid,u64 start,u64 end);
numa_set_distance  prototype  arch/x86/include/asm/numa.h  35  extern void __init numa_set_distance(int from,int to,int distance);
set_apicid_to_node  function  arch/x86/include/asm/numa.h  45  static inline void set_apicid_to_node(int apicid,s16 node)
numa_cpu_node  function  arch/x86/include/asm/numa.h  49  static inline int numa_cpu_node(int cpu)
numa_set_node  function  arch/x86/include/asm/numa.h  68  static inline void numa_set_node(int cpu,int node) { }
numa_clear_node  function  arch/x86/include/asm/numa.h  69  static inline void numa_clear_node(int cpu) { }
init_cpu_to_node  function  arch/x86/include/asm/numa.h  70  static inline void init_cpu_to_node(void) { }
numa_add_cpu  function  arch/x86/include/asm/numa.h  71  static inline void numa_add_cpu(int cpu) { }
numa_remove_cpu  function  arch/x86/include/asm/numa.h  72  static inline void numa_remove_cpu(int cpu) { }
debug_cpumask_set_cpu  prototype  arch/x86/include/asm/numa.h  76  void debug_cpumask_set_cpu(int cpu,int node,bool enable);
FAKE_NODE_MIN_SIZE  macro  arch/x86/include/asm/numa.h  80  #define FAKE_NODE_MIN_SIZE ((u64)32 << 20)
FAKE_NODE_MIN_HASH_MASK  macro  arch/x86/include/asm/numa.h  81  #define FAKE_NODE_MIN_HASH_MASK (~(FAKE_NODE_MIN_SIZE - 1UL))
numa_emu_cmdline  prototype  arch/x86/include/asm/numa.h  82  void numa_emu_cmdline(char *);
_ASM_X86_MPSPEC_H  macro  arch/x86/include/asm/mpspec.h  2  #define _ASM_X86_MPSPEC_H
MAX_MP_BUSSES  macro  arch/x86/include/asm/mpspec.h  37  #define MAX_MP_BUSSES 256
MAX_IRQ_SOURCES  macro  arch/x86/include/asm/mpspec.h  39  #define MAX_IRQ_SOURCES (MAX_MP_BUSSES * 4)
smp_found_config  macro  arch/x86/include/asm/mpspec.h  57  # define smp_found_config 0
get_smp_config  function  arch/x86/include/asm/mpspec.h  60  static inline void get_smp_config(void)
early_get_smp_config  function  arch/x86/include/asm/mpspec.h  65  static inline void early_get_smp_config(void)
find_smp_config  function  arch/x86/include/asm/mpspec.h  70  static inline void find_smp_config(void)
early_reserve_e820_mpc_new  function  arch/x86/include/asm/mpspec.h  88  static inline void early_reserve_e820_mpc_new(void) { }
default_mpc_apic_id  macro  arch/x86/include/asm/mpspec.h  90  #define default_mpc_apic_id NULL
default_smp_read_mpc_oem  macro  arch/x86/include/asm/mpspec.h  91  #define default_smp_read_mpc_oem NULL
default_mpc_oem_bus_info  macro  arch/x86/include/asm/mpspec.h  92  #define default_mpc_oem_bus_info NULL
default_find_smp_config  macro  arch/x86/include/asm/mpspec.h  93  #define default_find_smp_config x86_init_noop
default_get_smp_config  macro  arch/x86/include/asm/mpspec.h  94  #define default_get_smp_config x86_init_uint_noop
enable_update_mptable  macro  arch/x86/include/asm/mpspec.h  89  #define enable_update_mptable 0
generic_processor_info  prototype  arch/x86/include/asm/mpspec.h  97  void __cpuinit generic_processor_info(int apicid,int version);
mp_register_ioapic  prototype  arch/x86/include/asm/mpspec.h  99  extern void mp_register_ioapic(int id,u32 address,u32 gsi_base);
mp_override_legacy_irq  prototype  arch/x86/include/asm/mpspec.h  101  extern void mp_override_legacy_irq(u8 bus_irq,u8 polarity,u8 trigger,u32 gsi);
mp_config_acpi_legacy_irqs  prototype  arch/x86/include/asm/mpspec.h  102  extern void mp_config_acpi_legacy_irqs(void);
mp_register_gsi  prototype  arch/x86/include/asm/mpspec.h  105  extern int mp_register_gsi(struct device *dev,u32 gsi,int edge_level,int active_high_low);
PHYSID_ARRAY_SIZE  macro  arch/x86/include/asm/mpspec.h  108  #define PHYSID_ARRAY_SIZE BITS_TO_LONGS(MAX_LOCAL_APIC)
physid_mask  struct  arch/x86/include/asm/mpspec.h  110  struct physid_mask {
physid_set  macro  arch/x86/include/asm/mpspec.h  116  #define physid_set(physid,map) set_bit(physid,(map).mask)
physid_clear  macro  arch/x86/include/asm/mpspec.h  117  #define physid_clear(physid,map) clear_bit(physid,(map).mask)
physid_isset  macro  arch/x86/include/asm/mpspec.h  118  #define physid_isset(physid,map) test_bit(physid,(map).mask)
physid_test_and_set  macro  arch/x86/include/asm/mpspec.h  120  #define physid_test_and_set(physid,map) test_and_set_bit(physid, (map).mask)
physids_and  macro  arch/x86/include/asm/mpspec.h  123  #define physids_and(dst,src1,src2) bitmap_and((dst).mask, (src1).mask, (src2).mask, MAX_LOCAL_APIC)
physids_or  macro  arch/x86/include/asm/mpspec.h  126  #define physids_or(dst,src1,src2) bitmap_or((dst).mask, (src1).mask, (src2).mask, MAX_LOCAL_APIC)
physids_clear  macro  arch/x86/include/asm/mpspec.h  129  #define physids_clear(map) bitmap_zero((map).mask, MAX_LOCAL_APIC)
physids_complement  macro  arch/x86/include/asm/mpspec.h  132  #define physids_complement(dst,src) bitmap_complement((dst).mask, (src).mask, MAX_LOCAL_APIC)
physids_empty  macro  arch/x86/include/asm/mpspec.h  135  #define physids_empty(map) bitmap_empty((map).mask, MAX_LOCAL_APIC)
physids_equal  macro  arch/x86/include/asm/mpspec.h  138  #define physids_equal(map1,map2) bitmap_equal((map1).mask, (map2).mask, MAX_LOCAL_APIC)
physids_weight  macro  arch/x86/include/asm/mpspec.h  141  #define physids_weight(map) bitmap_weight((map).mask, MAX_LOCAL_APIC)
physids_shift_right  macro  arch/x86/include/asm/mpspec.h  144  #define physids_shift_right(d,s,n) bitmap_shift_right((d).mask, (s).mask, n, MAX_LOCAL_APIC)
physids_shift_left  macro  arch/x86/include/asm/mpspec.h  147  #define physids_shift_left(d,s,n) bitmap_shift_left((d).mask, (s).mask, n, MAX_LOCAL_APIC)
physids_coerce  function  arch/x86/include/asm/mpspec.h  149  static inline unsigned long physids_coerce(physid_mask_t *map)
physids_promote  function  arch/x86/include/asm/mpspec.h  154  static inline void physids_promote(unsigned long physids,physid_mask_t *map)
physid_set_mask_of_physid  function  arch/x86/include/asm/mpspec.h  160  static inline void physid_set_mask_of_physid(int physid,physid_mask_t *map)
PHYSID_MASK_ALL  macro  arch/x86/include/asm/mpspec.h  166  #define PHYSID_MASK_ALL { {[0 ... PHYSID_ARRAY_SIZE-1] = ~0UL} }
PHYSID_MASK_NONE  macro  arch/x86/include/asm/mpspec.h  167  #define PHYSID_MASK_NONE { {[0 ... PHYSID_ARRAY_SIZE-1] = 0UL} }
generic_mps_oem_check  prototype  arch/x86/include/asm/mpspec.h  171  extern int generic_mps_oem_check(struct mpc_table *,char *,char *);
default_acpi_madt_oem_check  prototype  arch/x86/include/asm/mpspec.h  173  extern int default_acpi_madt_oem_check(char *,char *);
_ASM_X86_ACPI_H  macro  arch/x86/include/asm/acpi.h  2  #define _ASM_X86_ACPI_H
COMPILER_DEPENDENT_INT64  macro  arch/x86/include/asm/acpi.h  34  #define COMPILER_DEPENDENT_INT64 long long
COMPILER_DEPENDENT_UINT64  macro  arch/x86/include/asm/acpi.h  35  #define COMPILER_DEPENDENT_UINT64 unsigned long long
ACPI_SYSTEM_XFACE  macro  arch/x86/include/asm/acpi.h  45  #define ACPI_SYSTEM_XFACE
ACPI_EXTERNAL_XFACE  macro  arch/x86/include/asm/acpi.h  46  #define ACPI_EXTERNAL_XFACE
ACPI_INTERNAL_XFACE  macro  arch/x86/include/asm/acpi.h  47  #define ACPI_INTERNAL_XFACE
ACPI_INTERNAL_VAR_XFACE  macro  arch/x86/include/asm/acpi.h  48  #define ACPI_INTERNAL_VAR_XFACE
ACPI_ASM_MACROS  macro  arch/x86/include/asm/acpi.h  52  #define ACPI_ASM_MACROS
BREAKPOINT3  macro  arch/x86/include/asm/acpi.h  53  #define BREAKPOINT3
ACPI_DISABLE_IRQS  macro  arch/x86/include/asm/acpi.h  54  #define ACPI_DISABLE_IRQS() local_irq_disable()
ACPI_ENABLE_IRQS  macro  arch/x86/include/asm/acpi.h  55  #define ACPI_ENABLE_IRQS() local_irq_enable()
ACPI_FLUSH_CPU_CACHE  macro  arch/x86/include/asm/acpi.h  56  #define ACPI_FLUSH_CPU_CACHE() wbinvd()
__acpi_acquire_global_lock  prototype  arch/x86/include/asm/acpi.h  58  int __acpi_acquire_global_lock(unsigned int *lock);
__acpi_release_global_lock  prototype  arch/x86/include/asm/acpi.h  59  int __acpi_release_global_lock(unsigned int *lock);
ACPI_ACQUIRE_GLOBAL_LOCK  macro  arch/x86/include/asm/acpi.h  62  #define ACPI_ACQUIRE_GLOBAL_LOCK(facs,Acq) ((Acq) = __acpi_acquire_global_lock(&facs->global_lock))
ACPI_RELEASE_GLOBAL_LOCK  macro  arch/x86/include/asm/acpi.h  65  #define ACPI_RELEASE_GLOBAL_LOCK(facs,Acq) ((Acq) = __acpi_release_global_lock(&facs->global_lock))
ACPI_DIV_64_BY_32  macro  arch/x86/include/asm/acpi.h  74  #define ACPI_DIV_64_BY_32(n_hi,n_lo,d32,q32,r32) asm("divl %2;" : "=a"(q32), "=d"(r32) : "r"(d32), "0"(n_lo), "1"(n_hi))
ACPI_SHIFT_RIGHT_64  macro  arch/x86/include/asm/acpi.h  81  #define ACPI_SHIFT_RIGHT_64(n_hi,n_lo) asm("shrl   $1,%2	;" "rcrl   $1,%3;" : "=r"(n_hi), "=r"(n_lo) : "0"(n_hi), "1"(n_lo))
acpi_pic_sci_set_trigger  prototype  arch/x86/include/asm/acpi.h  96  void acpi_pic_sci_set_trigger(unsigned int,u16);
disable_acpi  function  arch/x86/include/asm/acpi.h  177  static inline void disable_acpi(void) { }
acpi_gsi_to_irq  prototype  arch/x86/include/asm/acpi.h  108  extern int acpi_gsi_to_irq(u32 gsi,unsigned int *irq);
acpi_noirq_set  function  arch/x86/include/asm/acpi.h  175  static inline void acpi_noirq_set(void) { }
acpi_disable_pci  function  arch/x86/include/asm/acpi.h  176  static inline void acpi_disable_pci(void) { }
acpi_suspend_lowlevel  prototype  arch/x86/include/asm/acpi.h  118  extern int acpi_suspend_lowlevel(void);
acpi_wakeup_address  macro  arch/x86/include/asm/acpi.h  121  #define acpi_wakeup_address ((unsigned long)(real_mode_header->wakeup_start))
acpi_processor_cstate_check  function  arch/x86/include/asm/acpi.h  126  static inline unsigned int acpi_processor_cstate_check(unsigned int max_cstate)
arch_has_acpi_pdc  function  arch/x86/include/asm/acpi.h  145  static inline bool arch_has_acpi_pdc(void)
arch_acpi_set_pdc_bits  function  arch/x86/include/asm/acpi.h  152  static inline void arch_acpi_set_pdc_bits(u32 *buf)
acpi_lapic  macro  arch/x86/include/asm/acpi.h  173  #define acpi_lapic 0
acpi_ioapic  macro  arch/x86/include/asm/acpi.h  174  #define acpi_ioapic 0
ARCH_HAS_POWER_INIT  macro  arch/x86/include/asm/acpi.h  181  #define ARCH_HAS_POWER_INIT 1
x86_acpi_numa_init  prototype  arch/x86/include/asm/acpi.h  185  extern int x86_acpi_numa_init(void);
acpi_unlazy_tlb  macro  arch/x86/include/asm/acpi.h  188  #define acpi_unlazy_tlb(x) leave_mm(x)
_ASM_X86_FIXMAP_H  macro  arch/x86/include/asm/fixmap.h  15  #define _ASM_X86_FIXMAP_H
FIXADDR_TOP  macro  arch/x86/include/asm/fixmap.h  47  #define FIXADDR_TOP (VSYSCALL_END-PAGE_SIZE)
FIXADDR_USER_START  macro  arch/x86/include/asm/fixmap.h  50  #define FIXADDR_USER_START ((unsigned long)VSYSCALL32_VSYSCALL)
FIXADDR_USER_END  macro  arch/x86/include/asm/fixmap.h  51  #define FIXADDR_USER_END (FIXADDR_USER_START + PAGE_SIZE)
fixed_addresses  enum  arch/x86/include/asm/fixmap.h  74  enum fixed_addresses {
NR_FIX_BTMAPS  macro  arch/x86/include/asm/fixmap.h  137  #define NR_FIX_BTMAPS 64
FIX_BTMAPS_SLOTS  macro  arch/x86/include/asm/fixmap.h  138  #define FIX_BTMAPS_SLOTS 4
TOTAL_FIX_BTMAPS  macro  arch/x86/include/asm/fixmap.h  139  #define TOTAL_FIX_BTMAPS (NR_FIX_BTMAPS * FIX_BTMAPS_SLOTS)
reserve_top_address  prototype  arch/x86/include/asm/fixmap.h  158  extern void reserve_top_address(unsigned long reserve);
FIXADDR_SIZE  macro  arch/x86/include/asm/fixmap.h  160  #define FIXADDR_SIZE (__end_of_permanent_fixed_addresses << PAGE_SHIFT)
FIXADDR_BOOT_SIZE  macro  arch/x86/include/asm/fixmap.h  161  #define FIXADDR_BOOT_SIZE (__end_of_fixed_addresses << PAGE_SHIFT)
FIXADDR_START  macro  arch/x86/include/asm/fixmap.h  162  #define FIXADDR_START (FIXADDR_TOP - FIXADDR_SIZE)
FIXADDR_BOOT_START  macro  arch/x86/include/asm/fixmap.h  163  #define FIXADDR_BOOT_START (FIXADDR_TOP - FIXADDR_BOOT_SIZE)
__native_set_fixmap  prototype  arch/x86/include/asm/fixmap.h  171  void __native_set_fixmap(enum fixed_addresses idx,pte_t pte);
native_set_fixmap  prototype  arch/x86/include/asm/fixmap.h  173  void native_set_fixmap(enum fixed_addresses idx,phys_addr_t phys, pgprot_t flags);
set_fixmap  macro  arch/x86/include/asm/fixmap.h  184  #define set_fixmap(idx,phys) __set_fixmap(idx, phys, PAGE_KERNEL)
set_fixmap_nocache  macro  arch/x86/include/asm/fixmap.h  190  #define set_fixmap_nocache(idx,phys) __set_fixmap(idx, phys, PAGE_KERNEL_NOCACHE)
clear_fixmap  macro  arch/x86/include/asm/fixmap.h  193  #define clear_fixmap(idx) __set_fixmap(idx, 0, __pgprot(0))
__fix_to_virt  macro  arch/x86/include/asm/fixmap.h  195  #define __fix_to_virt(x) (FIXADDR_TOP - ((x) << PAGE_SHIFT))
__virt_to_fix  macro  arch/x86/include/asm/fixmap.h  196  #define __virt_to_fix(x) ((FIXADDR_TOP - ((x)&PAGE_MASK)) >> PAGE_SHIFT)
__this_fixmap_does_not_exist  prototype  arch/x86/include/asm/fixmap.h  198  extern void __this_fixmap_does_not_exist(void);
fix_to_virt  function  arch/x86/include/asm/fixmap.h  205  static __always_inline unsigned long fix_to_virt(const unsigned int idx)
virt_to_fix  function  arch/x86/include/asm/fixmap.h  222  static inline unsigned long virt_to_fix(const unsigned long vaddr)
__set_fixmap_offset  function  arch/x86/include/asm/fixmap.h  230  __set_fixmap_offset(enum fixed_addresses idx,phys_addr_t phys,pgprot_t flags)
set_fixmap_offset  macro  arch/x86/include/asm/fixmap.h  237  #define set_fixmap_offset(idx,phys) __set_fixmap_offset(idx, phys, PAGE_KERNEL)
set_fixmap_offset_nocache  macro  arch/x86/include/asm/fixmap.h  240  #define set_fixmap_offset_nocache(idx,phys) __set_fixmap_offset(idx, phys, PAGE_KERNEL_NOCACHE)
_ASM_X86_PGTABLE_32_H  macro  arch/x86/include/asm/pgtable_32.h  2  #define _ASM_X86_PGTABLE_32_H
pgtable_cache_init  function  arch/x86/include/asm/pgtable_32.h  31  static inline void pgtable_cache_init(void) { }
check_pgt_cache  function  arch/x86/include/asm/pgtable_32.h  32  static inline void check_pgt_cache(void) { }
paging_init  prototype  arch/x86/include/asm/pgtable_32.h  33  void paging_init(void);
set_pmd_pfn  prototype  arch/x86/include/asm/pgtable_32.h  35  extern void set_pmd_pfn(unsigned long,unsigned long,pgprot_t);
TEST_ACCESS_OK  macro  arch/x86/include/asm/pgtable_32.h  43  #undef TEST_ACCESS_OK
pte_offset_map  macro  arch/x86/include/asm/pgtable_32.h  58  #define pte_offset_map(dir,address) ((pte_t *)page_address(pmd_page(*(dir))) + pte_index((address)))
pte_unmap  macro  arch/x86/include/asm/pgtable_32.h  59  #define pte_unmap(pte) do { } while (0)
kpte_clear_flush  macro  arch/x86/include/asm/pgtable_32.h  67  #define kpte_clear_flush(ptep,vaddr) do { pte_clear(&init_mm, (vaddr), (ptep)); __flush_tlb_one((vaddr)); } while (0)
update_mmu_cache  macro  arch/x86/include/asm/pgtable_32.h  73  #define update_mmu_cache(vma,address,ptep) do { } while (0)
update_mmu_cache_pmd  macro  arch/x86/include/asm/pgtable_32.h  74  #define update_mmu_cache_pmd(vma,address,pmd) do { } while (0)
kern_addr_valid  macro  arch/x86/include/asm/pgtable_32.h  85  #define kern_addr_valid(kaddr) (0)
_ASM_X86_PGTABLE_2LEVEL_H  macro  arch/x86/include/asm/pgtable-2level.h  2  #define _ASM_X86_PGTABLE_2LEVEL_H
pte_ERROR  macro  arch/x86/include/asm/pgtable-2level.h  5  #define pte_ERROR(e) pr_err("%s:%d: bad pte %08lx\n", __FILE__, __LINE__, (e).pte_low)
pgd_ERROR  macro  arch/x86/include/asm/pgtable-2level.h  7  #define pgd_ERROR(e) pr_err("%s:%d: bad pgd %08lx\n", __FILE__, __LINE__, pgd_val(e))
native_set_pte  function  arch/x86/include/asm/pgtable-2level.h  14  static inline void native_set_pte(pte_t *ptep ,pte_t pte)
native_set_pmd  function  arch/x86/include/asm/pgtable-2level.h  19  static inline void native_set_pmd(pmd_t *pmdp,pmd_t pmd)
native_set_pte_atomic  function  arch/x86/include/asm/pgtable-2level.h  24  static inline void native_set_pte_atomic(pte_t *ptep,pte_t pte)
native_pmd_clear  function  arch/x86/include/asm/pgtable-2level.h  29  static inline void native_pmd_clear(pmd_t *pmdp)
native_pte_clear  function  arch/x86/include/asm/pgtable-2level.h  35  static inline void native_pte_clear(struct mm_struct *mm,unsigned long addr, pte_t *xp)
native_ptep_get_and_clear  macro  arch/x86/include/asm/pgtable-2level.h  46  #define native_ptep_get_and_clear(xp) native_local_ptep_get_and_clear(xp)
native_pmdp_get_and_clear  macro  arch/x86/include/asm/pgtable-2level.h  55  #define native_pmdp_get_and_clear(xp) native_local_pmdp_get_and_clear(xp)
PTE_FILE_MAX_BITS  macro  arch/x86/include/asm/pgtable-2level.h  62  #define PTE_FILE_MAX_BITS 29
PTE_FILE_SHIFT1  macro  arch/x86/include/asm/pgtable-2level.h  63  #define PTE_FILE_SHIFT1 (_PAGE_BIT_PRESENT + 1)
PTE_FILE_SHIFT2  macro  arch/x86/include/asm/pgtable-2level.h  68  #define PTE_FILE_SHIFT2 (_PAGE_BIT_PROTNONE + 1)
PTE_FILE_SHIFT3  macro  arch/x86/include/asm/pgtable-2level.h  69  #define PTE_FILE_SHIFT3 (_PAGE_BIT_FILE + 1)
PTE_FILE_BITS1  macro  arch/x86/include/asm/pgtable-2level.h  71  #define PTE_FILE_BITS1 (PTE_FILE_SHIFT2 - PTE_FILE_SHIFT1 - 1)
PTE_FILE_BITS2  macro  arch/x86/include/asm/pgtable-2level.h  72  #define PTE_FILE_BITS2 (PTE_FILE_SHIFT3 - PTE_FILE_SHIFT2 - 1)
pte_to_pgoff  macro  arch/x86/include/asm/pgtable-2level.h  80  #define pte_to_pgoff(pte) ((((pte).pte_low >> PTE_FILE_SHIFT1) & ((1U << PTE_FILE_BITS1) - 1)) + ((((pte).pte_low >> PTE_FILE_SHIFT2) & ((1U << PTE_FILE_BITS2) - 1)) << PTE_FILE_BITS1) + (((pte).pte_low >> PTE_FILE_SHIFT3) << (PTE_FILE_BITS1 + PTE_FILE_BITS2)))
pgoff_to_pte  macro  arch/x86/include/asm/pgtable-2level.h  89  #define pgoff_to_pte(off) ((pte_t) { .pte_low = (((off) & ((1U << PTE_FILE_BITS1) - 1)) << PTE_FILE_SHIFT1) + ((((off) >> PTE_FILE_BITS1) & ((1U << PTE_FILE_BITS2) - 1)) << PTE_FILE_SHIFT2) + (((off) >> (PTE_FILE_BITS1 + PTE_FILE_BITS2)) << PTE_FILE_SHIFT3) + _PAGE_FILE })
SWP_TYPE_BITS  macro  arch/x86/include/asm/pgtable-2level.h  96  #define SWP_TYPE_BITS (_PAGE_BIT_PROTNONE - _PAGE_BIT_PRESENT - 1)
SWP_OFFSET_SHIFT  macro  arch/x86/include/asm/pgtable-2level.h  97  #define SWP_OFFSET_SHIFT (_PAGE_BIT_FILE + 1)
MAX_SWAPFILES_CHECK  macro  arch/x86/include/asm/pgtable-2level.h  100  #define MAX_SWAPFILES_CHECK() BUILD_BUG_ON(MAX_SWAPFILES_SHIFT > SWP_TYPE_BITS)
__swp_type  macro  arch/x86/include/asm/pgtable-2level.h  103  #define __swp_type(x) (((x).val >> (_PAGE_BIT_PRESENT + 1)) & ((1U << SWP_TYPE_BITS) - 1))
__swp_offset  macro  arch/x86/include/asm/pgtable-2level.h  104  #define __swp_offset(x) ((x).val >> SWP_OFFSET_SHIFT)
__swp_entry  macro  arch/x86/include/asm/pgtable-2level.h  107  #define __swp_entry(type,offset) ((swp_entry_t) { ((type) << (_PAGE_BIT_PRESENT + 1)) | ((offset) << SWP_OFFSET_SHIFT) })
__pte_to_swp_entry  macro  arch/x86/include/asm/pgtable-2level.h  108  #define __pte_to_swp_entry(pte) ((swp_entry_t) { (pte).pte_low })
__swp_entry_to_pte  macro  arch/x86/include/asm/pgtable-2level.h  109  #define __swp_entry_to_pte(x) ((pte_t) { .pte = (x).val })
_ASM_GENERIC_PGTABLE_H  macro  include/asm-generic/pgtable.h  2  #define _ASM_GENERIC_PGTABLE_H
USER_PGTABLES_CEILING  macro  include/asm-generic/pgtable.h  17  #define USER_PGTABLES_CEILING 0UL
pte_clear_not_present_full  function  include/asm-generic/pgtable.h  126  static inline void pte_clear_not_present_full(struct mm_struct *mm,unsigned long address,pte_t *ptep,int full)
ptep_clear_flush  prototype  include/asm-generic/pgtable.h  135  extern pte_t ptep_clear_flush(struct vm_area_struct *vma,unsigned long address,pte_t *ptep);
pmdp_clear_flush  prototype  include/asm-generic/pgtable.h  141  extern pmd_t pmdp_clear_flush(struct vm_area_struct *vma,unsigned long address,pmd_t *pmdp);
pgtable_trans_huge_deposit  prototype  include/asm-generic/pgtable.h  176  extern void pgtable_trans_huge_deposit(struct mm_struct *mm,pgtable_t pgtable);
pgtable_trans_huge_withdraw  prototype  include/asm-generic/pgtable.h  180  extern pgtable_t pgtable_trans_huge_withdraw(struct mm_struct *mm);
pmdp_invalidate  prototype  include/asm-generic/pgtable.h  185  extern void pmdp_invalidate(struct vm_area_struct *vma,unsigned long address,pmd_t *pmdp);
pmd_same  function  include/asm-generic/pgtable.h  202  static inline int pmd_same(pmd_t pmd_a,pmd_t pmd_b)
page_test_and_clear_dirty  macro  include/asm-generic/pgtable.h  211  #define page_test_and_clear_dirty(pfn,mapped) (0)
pte_maybe_dirty  macro  include/asm-generic/pgtable.h  217  #define pte_maybe_dirty(pte) (1)
page_test_and_clear_young  macro  include/asm-generic/pgtable.h  221  #define page_test_and_clear_young(pfn) (0)
pgd_offset_gate  macro  include/asm-generic/pgtable.h  225  #define pgd_offset_gate(mm,addr) pgd_offset(mm,addr)
move_pte  macro  include/asm-generic/pgtable.h  229  #define move_pte(pte,prot,old_addr,new_addr) (pte)
pgd_addr_end  macro  include/asm-generic/pgtable.h  257  #define pgd_addr_end(addr,end) ({	unsigned long __boundary = ((addr) + PGDIR_SIZE) & PGDIR_MASK; (__boundary - 1 < (end) - 1)? __boundary: (end); })
pgd_clear_bad  prototype  include/asm-generic/pgtable.h  278  void pgd_clear_bad(pgd_t *);
pud_clear_bad  prototype  include/asm-generic/pgtable.h  279  void pud_clear_bad(pud_t *);
pmd_clear_bad  prototype  include/asm-generic/pgtable.h  280  void pmd_clear_bad(pmd_t *);
pgd_none_or_clear_bad  function  include/asm-generic/pgtable.h  282  static inline int pgd_none_or_clear_bad(pgd_t *pgd)
pud_none_or_clear_bad  function  include/asm-generic/pgtable.h  293  static inline int pud_none_or_clear_bad(pud_t *pud)
pmd_none_or_clear_bad  function  include/asm-generic/pgtable.h  304  static inline int pmd_none_or_clear_bad(pmd_t *pmd)
__ptep_modify_prot_start  function  include/asm-generic/pgtable.h  317  static inline pte_t __ptep_modify_prot_start(struct mm_struct *mm,unsigned long addr,pte_t *ptep)
__ptep_modify_prot_commit  function  include/asm-generic/pgtable.h  329  static inline void __ptep_modify_prot_commit(struct mm_struct *mm,unsigned long addr,pte_t *ptep, pte_t pte)
track_pfn_remap  prototype  include/asm-generic/pgtable.h  458  extern int track_pfn_remap(struct vm_area_struct *vma,pgprot_t *prot,unsigned long pfn, unsigned long addr,unsigned long size);
track_pfn_insert  prototype  include/asm-generic/pgtable.h  460  extern int track_pfn_insert(struct vm_area_struct *vma,pgprot_t *prot,unsigned long pfn);
track_pfn_copy  prototype  include/asm-generic/pgtable.h  461  extern int track_pfn_copy(struct vm_area_struct *vma);
untrack_pfn  prototype  include/asm-generic/pgtable.h  463  extern void untrack_pfn(struct vm_area_struct *vma,unsigned long pfn,unsigned long size);
is_zero_pfn  function  include/asm-generic/pgtable.h  477  static inline int is_zero_pfn(unsigned long pfn)
my_zero_pfn  function  include/asm-generic/pgtable.h  483  static inline unsigned long my_zero_pfn(unsigned long addr)
pmd_read_atomic  function  include/asm-generic/pgtable.h  511  static inline pmd_t pmd_read_atomic(pmd_t *pmdp)
pmd_none_or_trans_huge_or_clear_bad  function  include/asm-generic/pgtable.h  543  static inline int pmd_none_or_trans_huge_or_clear_bad(pmd_t *pmd)
pmd_trans_unstable  function  include/asm-generic/pgtable.h  586  static inline int pmd_trans_unstable(pmd_t *pmd)
pte_numa  function  include/asm-generic/pgtable.h  675  static inline int pte_numa(pte_t pte)
pmd_numa  function  include/asm-generic/pgtable.h  670  static inline int pmd_numa(pmd_t pmd)
pte_mknonnuma  function  include/asm-generic/pgtable.h  680  static inline pte_t pte_mknonnuma(pte_t pte)
pmd_mknonnuma  function  include/asm-generic/pgtable.h  685  static inline pmd_t pmd_mknonnuma(pmd_t pmd)
pte_mknuma  function  include/asm-generic/pgtable.h  690  static inline pte_t pte_mknuma(pte_t pte)
pmd_mknuma  function  include/asm-generic/pgtable.h  695  static inline pmd_t pmd_mknuma(pmd_t pmd)
PAGE_FLAGS_H  macro  include/linux/page-flags.h  6  #define PAGE_FLAGS_H
pageflags  enum  include/linux/page-flags.h  74  enum pageflags {
TESTPAGEFLAG  macro  include/linux/page-flags.h  138  #define TESTPAGEFLAG(uname,lname) static inline int Page##uname(const struct page *page) { return test_bit(PG_##lname, &page->flags); }
SETPAGEFLAG  macro  include/linux/page-flags.h  142  #define SETPAGEFLAG(uname,lname) static inline void SetPage##uname(struct page *page) { set_bit(PG_##lname, &page->flags); }
CLEARPAGEFLAG  macro  include/linux/page-flags.h  146  #define CLEARPAGEFLAG(uname,lname) static inline void ClearPage##uname(struct page *page) { clear_bit(PG_##lname, &page->flags); }
__SETPAGEFLAG  macro  include/linux/page-flags.h  150  #define __SETPAGEFLAG(uname,lname) static inline void __SetPage##uname(struct page *page) { __set_bit(PG_##lname, &page->flags); }
__CLEARPAGEFLAG  macro  include/linux/page-flags.h  154  #define __CLEARPAGEFLAG(uname,lname) static inline void __ClearPage##uname(struct page *page) { __clear_bit(PG_##lname, &page->flags); }
TESTSETFLAG  macro  include/linux/page-flags.h  158  #define TESTSETFLAG(uname,lname) static inline int TestSetPage##uname(struct page *page) { return test_and_set_bit(PG_##lname, &page->flags); }
TESTCLEARFLAG  macro  include/linux/page-flags.h  162  #define TESTCLEARFLAG(uname,lname) static inline int TestClearPage##uname(struct page *page) { return test_and_clear_bit(PG_##lname, &page->flags); }
__TESTCLEARFLAG  macro  include/linux/page-flags.h  166  #define __TESTCLEARFLAG(uname,lname) static inline int __TestClearPage##uname(struct page *page) { return __test_and_clear_bit(PG_##lname, &page->flags); }
PAGEFLAG  macro  include/linux/page-flags.h  169  #define PAGEFLAG(uname,lname) TESTPAGEFLAG(uname,lname) SETPAGEFLAG(uname, lname) CLEARPAGEFLAG(uname, lname)
__PAGEFLAG  macro  include/linux/page-flags.h  172  #define __PAGEFLAG(uname,lname) TESTPAGEFLAG(uname,lname) __SETPAGEFLAG(uname, lname)  __CLEARPAGEFLAG(uname, lname)
PAGEFLAG_FALSE  macro  include/linux/page-flags.h  176  #define PAGEFLAG_FALSE(uname) static inline int Page##uname(const struct page *page) { return 0; }
TESTSCFLAG  macro  include/linux/page-flags.h  179  #define TESTSCFLAG(uname,lname) TESTSETFLAG(uname, lname) TESTCLEARFLAG(uname, lname)
SETPAGEFLAG_NOOP  macro  include/linux/page-flags.h  182  #define SETPAGEFLAG_NOOP(uname) static inline void SetPage##uname(struct page *page) {  }
CLEARPAGEFLAG_NOOP  macro  include/linux/page-flags.h  185  #define CLEARPAGEFLAG_NOOP(uname) static inline void ClearPage##uname(struct page *page) {  }
__CLEARPAGEFLAG_NOOP  macro  include/linux/page-flags.h  188  #define __CLEARPAGEFLAG_NOOP(uname) static inline void __ClearPage##uname(struct page *page) {  }
TESTCLEARFLAG_FALSE  macro  include/linux/page-flags.h  191  #define TESTCLEARFLAG_FALSE(uname) static inline int TestClearPage##uname(struct page *page) { return 0; }
__TESTCLEARFLAG_FALSE  macro  include/linux/page-flags.h  194  #define __TESTCLEARFLAG_FALSE(uname) static inline int __TestClearPage##uname(struct page *page) { return 0; }
PageHighMem  macro  include/linux/page-flags.h  240  #define PageHighMem(__p) is_highmem(page_zone(__p))
__PG_HWPOISON  macro  include/linux/page-flags.h  272  #define __PG_HWPOISON (1UL << PG_hwpoison)
stable_page_flags  prototype  include/linux/page-flags.h  278  u64 stable_page_flags(struct page *page);
PageUptodate  function  include/linux/page-flags.h  280  static inline int PageUptodate(struct page *page)
__SetPageUptodate  function  include/linux/page-flags.h  298  static inline void __SetPageUptodate(struct page *page)
SetPageUptodate  function  include/linux/page-flags.h  304  static inline void SetPageUptodate(struct page *page)
cancel_dirty_page  prototype  include/linux/page-flags.h  325  extern void cancel_dirty_page(struct page *page,unsigned int account_size);
test_clear_page_writeback  prototype  include/linux/page-flags.h  327  int test_clear_page_writeback(struct page *page);
test_set_page_writeback  prototype  include/linux/page-flags.h  328  int test_set_page_writeback(struct page *page);
set_page_writeback  function  include/linux/page-flags.h  330  static inline void set_page_writeback(struct page *page)
PageCompound  function  include/linux/page-flags.h  345  static inline int PageCompound(struct page *page)
ClearPageCompound  function  include/linux/page-flags.h  401  static inline void ClearPageCompound(struct page *page)
PG_head_mask  macro  include/linux/page-flags.h  377  #define PG_head_mask ((1L << PG_compound))
PG_head_tail_mask  macro  include/linux/page-flags.h  378  #define PG_head_tail_mask ((1L << PG_compound) | (1L << PG_reclaim))
PageHead  function  include/linux/page-flags.h  380  static inline int PageHead(struct page *page)
PageTail  function  include/linux/page-flags.h  385  static inline int PageTail(struct page *page)
__SetPageTail  function  include/linux/page-flags.h  390  static inline void __SetPageTail(struct page *page)
__ClearPageTail  function  include/linux/page-flags.h  395  static inline void __ClearPageTail(struct page *page)
PageTransHuge  function  include/linux/page-flags.h  447  static inline int PageTransHuge(struct page *page)
PageTransCompound  function  include/linux/page-flags.h  452  static inline int PageTransCompound(struct page *page)
PageTransTail  function  include/linux/page-flags.h  457  static inline int PageTransTail(struct page *page)
PageSlabPfmemalloc  function  include/linux/page-flags.h  467  static inline int PageSlabPfmemalloc(struct page *page)
SetPageSlabPfmemalloc  function  include/linux/page-flags.h  473  static inline void SetPageSlabPfmemalloc(struct page *page)
__ClearPageSlabPfmemalloc  function  include/linux/page-flags.h  479  static inline void __ClearPageSlabPfmemalloc(struct page *page)
ClearPageSlabPfmemalloc  function  include/linux/page-flags.h  485  static inline void ClearPageSlabPfmemalloc(struct page *page)
__PG_MLOCKED  macro  include/linux/page-flags.h  494  #define __PG_MLOCKED 0
__PG_COMPOUND_LOCK  macro  include/linux/page-flags.h  500  #define __PG_COMPOUND_LOCK 0
PAGE_FLAGS_CHECK_AT_FREE  macro  include/linux/page-flags.h  513  #define PAGE_FLAGS_CHECK_AT_FREE (1 << PG_lru	 | 1 << PG_locked    | 1 << PG_private | 1 << PG_private_2 | 1 << PG_writeback | 1 << PG_reserved | 1 << PG_slab	 | 1 << PG_swapcache | 1 << PG_active | 1 << PG_unevictable | __PG_MLOCKED | __PG_HWPOISON | __PG_COMPOUND_LOCK)
PAGE_FLAGS_CHECK_AT_PREP  macro  include/linux/page-flags.h  520  #define PAGE_FLAGS_CHECK_AT_PREP ((1 << NR_PAGEFLAGS) - 1)
PAGE_FLAGS_PRIVATE  macro  include/linux/page-flags.h  523  #define PAGE_FLAGS_PRIVATE (1 << PG_private | 1 << PG_private_2)
page_has_private  function  include/linux/page-flags.h  531  static inline int page_has_private(struct page *page)
_LINUX_HUGE_MM_H  macro  include/linux/huge_mm.h  2  #define _LINUX_HUGE_MM_H
do_huge_pmd_anonymous_page  prototype  include/linux/huge_mm.h  7  extern int do_huge_pmd_anonymous_page(struct mm_struct *mm,struct vm_area_struct *vma,unsigned long address, pmd_t *pmd,unsigned int flags);
copy_huge_pmd  prototype  include/linux/huge_mm.h  10  extern int copy_huge_pmd(struct mm_struct *dst_mm,struct mm_struct *src_mm,pmd_t *dst_pmd, pmd_t *src_pmd, unsigned long addr,struct vm_area_struct *vma);
huge_pmd_set_accessed  prototype  include/linux/huge_mm.h  14  extern void huge_pmd_set_accessed(struct mm_struct *mm,struct vm_area_struct *vma,unsigned long address, pmd_t *pmd,pmd_t orig_pmd, int dirty);
do_huge_pmd_wp_page  prototype  include/linux/huge_mm.h  17  extern int do_huge_pmd_wp_page(struct mm_struct *mm,struct vm_area_struct *vma,unsigned long address, pmd_t *pmd,pmd_t orig_pmd);
follow_trans_huge_pmd  prototype  include/linux/huge_mm.h  21  extern struct page *follow_trans_huge_pmd(struct vm_area_struct *vma,unsigned long addr,pmd_t *pmd,unsigned int flags);
zap_huge_pmd  prototype  include/linux/huge_mm.h  24  extern int zap_huge_pmd(struct mmu_gather *tlb,struct vm_area_struct *vma,pmd_t *pmd, unsigned long addr);
mincore_huge_pmd  prototype  include/linux/huge_mm.h  27  extern int mincore_huge_pmd(struct vm_area_struct *vma,pmd_t *pmd,unsigned long addr, unsigned long end,unsigned char *vec);
move_huge_pmd  prototype  include/linux/huge_mm.h  32  extern int move_huge_pmd(struct vm_area_struct *vma,struct vm_area_struct *new_vma,unsigned long old_addr,unsigned long new_addr, unsigned long old_end,pmd_t *old_pmd, pmd_t *new_pmd);
change_huge_pmd  prototype  include/linux/huge_mm.h  35  extern int change_huge_pmd(struct vm_area_struct *vma,pmd_t *pmd,unsigned long addr, pgprot_t newprot,int prot_numa);
transparent_hugepage_flag  enum  include/linux/huge_mm.h  37  enum transparent_hugepage_flag {
page_check_address_pmd_flag  enum  include/linux/huge_mm.h  49  enum page_check_address_pmd_flag {
page_check_address_pmd  prototype  include/linux/huge_mm.h  57  extern pmd_t *page_check_address_pmd(struct page *page,struct mm_struct *mm,unsigned long address,enum page_check_address_pmd_flag flag);
HPAGE_PMD_ORDER  macro  include/linux/huge_mm.h  59  #define HPAGE_PMD_ORDER (HPAGE_PMD_SHIFT-PAGE_SHIFT)
HPAGE_PMD_NR  macro  include/linux/huge_mm.h  60  #define HPAGE_PMD_NR (1<<HPAGE_PMD_ORDER)
HPAGE_PMD_SHIFT  macro  include/linux/huge_mm.h  180  #define HPAGE_PMD_SHIFT ({ BUILD_BUG(); 0; })
HPAGE_PMD_MASK  macro  include/linux/huge_mm.h  181  #define HPAGE_PMD_MASK ({ BUILD_BUG(); 0; })
HPAGE_PMD_SIZE  macro  include/linux/huge_mm.h  182  #define HPAGE_PMD_SIZE ({ BUILD_BUG(); 0; })
is_vma_temporary_stack  prototype  include/linux/huge_mm.h  67  extern bool is_vma_temporary_stack(struct vm_area_struct *vma);
transparent_hugepage_enabled  macro  include/linux/huge_mm.h  186  #define transparent_hugepage_enabled(__vma) 0
transparent_hugepage_defrag  macro  include/linux/huge_mm.h  82  #define transparent_hugepage_defrag(__vma) ((transparent_hugepage_flags & (1<<TRANSPARENT_HUGEPAGE_DEFRAG_FLAG)) || (transparent_hugepage_flags & (1<<TRANSPARENT_HUGEPAGE_DEFRAG_REQ_MADV_FLAG) && (__vma)->vm_flags & VM_HUGEPAGE))
transparent_hugepage_use_zero_page  macro  include/linux/huge_mm.h  85  #define transparent_hugepage_use_zero_page() (transparent_hugepage_flags & (1<<TRANSPARENT_HUGEPAGE_USE_ZERO_PAGE_FLAG))
transparent_hugepage_debug_cow  macro  include/linux/huge_mm.h  91  #define transparent_hugepage_debug_cow() 0
copy_pte_range  prototype  include/linux/huge_mm.h  98  extern int copy_pte_range(struct mm_struct *dst_mm,struct mm_struct *src_mm,pmd_t *dst_pmd, pmd_t *src_pmd,struct vm_area_struct *vma,unsigned long addr, unsigned long end);
handle_pte_fault  prototype  include/linux/huge_mm.h  101  extern int handle_pte_fault(struct mm_struct *mm,struct vm_area_struct *vma, unsigned long address,pte_t *pte, pmd_t *pmd, unsigned int flags);
split_huge_page  function  include/linux/huge_mm.h  189  static inline int split_huge_page(struct page *page)
__split_huge_page_pmd  prototype  include/linux/huge_mm.h  104  extern void __split_huge_page_pmd(struct vm_area_struct *vma,unsigned long address, pmd_t *pmd);
split_huge_page_pmd  macro  include/linux/huge_mm.h  194  #define split_huge_page_pmd(__vma,__address,__pmd) do { } while (0)
wait_split_huge_page  macro  include/linux/huge_mm.h  196  #define wait_split_huge_page(__anon_vma,__pmd) do { } while (0)
split_huge_page_pmd_mm  macro  include/linux/huge_mm.h  198  #define split_huge_page_pmd_mm(__mm,__address,__pmd) do { } while (0)
hugepage_madvise  function  include/linux/huge_mm.h  201  static inline int hugepage_madvise(struct vm_area_struct *vma,unsigned long *vm_flags, int advice)
__vma_adjust_trans_huge  prototype  include/linux/huge_mm.h  130  extern void __vma_adjust_trans_huge(struct vm_area_struct *vma,unsigned long start,unsigned long end,long adjust_next);
__pmd_trans_huge_lock  prototype  include/linux/huge_mm.h  132  extern int __pmd_trans_huge_lock(pmd_t *pmd,struct vm_area_struct *vma);
pmd_trans_huge_lock  function  include/linux/huge_mm.h  213  static inline int pmd_trans_huge_lock(pmd_t *pmd,struct vm_area_struct *vma)
vma_adjust_trans_huge  function  include/linux/huge_mm.h  209  static inline void vma_adjust_trans_huge(struct vm_area_struct *vma,unsigned long start,unsigned long end,long adjust_next)
hpage_nr_pages  macro  include/linux/huge_mm.h  184  #define hpage_nr_pages(x) 1
compound_trans_head  macro  include/linux/huge_mm.h  199  #define compound_trans_head(page) compound_head(page)
do_huge_pmd_numa_page  function  include/linux/huge_mm.h  219  static inline int do_huge_pmd_numa_page(struct mm_struct *mm,struct vm_area_struct *vma,unsigned long addr, pmd_t pmd, pmd_t *pmdp)
transparent_hugepage_flags  macro  include/linux/huge_mm.h  188  #define transparent_hugepage_flags 0UL
_LINUX_VMSTAT_H  macro  include/linux/vmstat.h  2  #define _LINUX_VMSTAT_H
vm_event_state  struct  include/linux/vmstat.h  24  struct vm_event_state {
__count_vm_event  function  include/linux/vmstat.h  68  static inline void __count_vm_event(enum vm_event_item item)
count_vm_event  function  include/linux/vmstat.h  62  static inline void count_vm_event(enum vm_event_item item)
__count_vm_events  function  include/linux/vmstat.h  71  static inline void __count_vm_events(enum vm_event_item item,long delta)
count_vm_events  function  include/linux/vmstat.h  65  static inline void count_vm_events(enum vm_event_item item,long delta)
all_vm_events  function  include/linux/vmstat.h  74  static inline void all_vm_events(unsigned long *ret)
vm_events_fold_cpu  function  include/linux/vmstat.h  77  static inline void vm_events_fold_cpu(int cpu)
count_vm_numa_event  macro  include/linux/vmstat.h  87  #define count_vm_numa_event(x) do {} while (0)
count_vm_numa_events  macro  include/linux/vmstat.h  88  #define count_vm_numa_events(x,y) do {} while (0)
__count_zone_vm_events  macro  include/linux/vmstat.h  93  #define __count_zone_vm_events(item,zone,delta) __count_vm_events(item##_NORMAL - ZONE_NORMAL + zone_idx(zone), delta)
zone_page_state_add  function  include/linux/vmstat.h  101  static inline void zone_page_state_add(long x,struct zone *zone,enum zone_stat_item item)
global_page_state  function  include/linux/vmstat.h  107  static inline unsigned long global_page_state(enum zone_stat_item item)
zone_page_state  function  include/linux/vmstat.h  118  static inline unsigned long zone_page_state(struct zone *zone,enum zone_stat_item item)
zone_page_state_snapshot  function  include/linux/vmstat.h  135  static inline unsigned long zone_page_state_snapshot(struct zone *zone,enum zone_stat_item item)
global_reclaimable_pages  prototype  include/linux/vmstat.h  150  extern unsigned long global_reclaimable_pages(void);
zone_reclaimable_pages  prototype  include/linux/vmstat.h  151  extern unsigned long zone_reclaimable_pages(struct zone *zone);
node_page_state  macro  include/linux/vmstat.h  182  #define node_page_state(node,item) global_page_state(item)
zone_statistics  macro  include/linux/vmstat.h  183  #define zone_statistics(_zl,_z,gfp) do { } while (0)
add_zone_page_state  macro  include/linux/vmstat.h  187  #define add_zone_page_state(__z,__i,__d) mod_zone_page_state(__z,__i,__d)
sub_zone_page_state  macro  include/linux/vmstat.h  188  #define sub_zone_page_state(__z,__i,__d) mod_zone_page_state(__z,__i,-(__d))
inc_zone_state  prototype  include/linux/vmstat.h  201  extern void inc_zone_state(struct zone *,enum zone_stat_item);
__mod_zone_page_state  function  include/linux/vmstat.h  222  static inline void __mod_zone_page_state(struct zone *zone,enum zone_stat_item item, int delta)
__inc_zone_page_state  function  include/linux/vmstat.h  234  static inline void __inc_zone_page_state(struct page *page,enum zone_stat_item item)
__dec_zone_page_state  function  include/linux/vmstat.h  246  static inline void __dec_zone_page_state(struct page *page,enum zone_stat_item item)
mod_zone_page_state  macro  include/linux/vmstat.h  257  #define mod_zone_page_state __mod_zone_page_state
inc_zone_page_state  macro  include/linux/vmstat.h  255  #define inc_zone_page_state __inc_zone_page_state
dec_zone_page_state  macro  include/linux/vmstat.h  256  #define dec_zone_page_state __dec_zone_page_state
__inc_zone_state  function  include/linux/vmstat.h  227  static inline void __inc_zone_state(struct zone *zone,enum zone_stat_item item)
dec_zone_state  prototype  include/linux/vmstat.h  203  extern void dec_zone_state(struct zone *,enum zone_stat_item);
__dec_zone_state  function  include/linux/vmstat.h  239  static inline void __dec_zone_state(struct zone *zone,enum zone_stat_item item)
refresh_cpu_vm_stats  function  include/linux/vmstat.h  261  static inline void refresh_cpu_vm_stats(int cpu) { }
refresh_zone_stat_thresholds  function  include/linux/vmstat.h  262  static inline void refresh_zone_stat_thresholds(void) { }
drain_zonestat  function  include/linux/vmstat.h  265  static inline void drain_zonestat(struct zone *zone,struct per_cpu_pageset *pset) { }
calculate_pressure_threshold  prototype  include/linux/vmstat.h  211  int calculate_pressure_threshold(struct zone *zone);
calculate_normal_threshold  prototype  include/linux/vmstat.h  212  int calculate_normal_threshold(struct zone *zone);
set_pgdat_percpu_threshold  macro  include/linux/vmstat.h  259  #define set_pgdat_percpu_threshold(pgdat,callback) { }
__mod_zone_freepage_state  function  include/linux/vmstat.h  269  static inline void __mod_zone_freepage_state(struct zone *zone,int nr_pages,int migratetype)
__DMA_DEBUG_H  macro  include/linux/dma-debug.h  21  #define __DMA_DEBUG_H
dma_debug_add_bus  function  include/linux/dma-debug.h  90  static inline void dma_debug_add_bus(struct bus_type *bus)
dma_debug_init  function  include/linux/dma-debug.h  94  static inline void dma_debug_init(u32 num_entries)
dma_debug_resize_entries  function  include/linux/dma-debug.h  98  static inline int dma_debug_resize_entries(u32 num_entries)
debug_dma_map_page  function  include/linux/dma-debug.h  106  static inline void debug_dma_map_page(struct device *dev,struct page *page,size_t offset, size_t size,int direction, dma_addr_t dma_addr,bool map_single)
debug_dma_mapping_error  function  include/linux/dma-debug.h  111  static inline void debug_dma_mapping_error(struct device *dev,dma_addr_t dma_addr)
debug_dma_unmap_page  function  include/linux/dma-debug.h  117  static inline void debug_dma_unmap_page(struct device *dev,dma_addr_t addr,size_t size, int direction,bool map_single)
debug_dma_map_sg  function  include/linux/dma-debug.h  122  static inline void debug_dma_map_sg(struct device *dev,struct scatterlist *sg,int nents, int mapped_ents, int direction)
debug_dma_unmap_sg  function  include/linux/dma-debug.h  128  static inline void debug_dma_unmap_sg(struct device *dev,struct scatterlist *sglist,int nelems, int dir)
debug_dma_alloc_coherent  function  include/linux/dma-debug.h  133  static inline void debug_dma_alloc_coherent(struct device *dev,size_t size,dma_addr_t dma_addr, void *virt)
debug_dma_free_coherent  function  include/linux/dma-debug.h  138  static inline void debug_dma_free_coherent(struct device *dev,size_t size,void *virt, dma_addr_t addr)
debug_dma_sync_single_for_cpu  function  include/linux/dma-debug.h  144  static inline void debug_dma_sync_single_for_cpu(struct device *dev,dma_addr_t dma_handle,size_t size, int direction)
debug_dma_sync_single_for_device  function  include/linux/dma-debug.h  150  static inline void debug_dma_sync_single_for_device(struct device *dev,dma_addr_t dma_handle,size_t size, int direction)
debug_dma_sync_single_range_for_cpu  function  include/linux/dma-debug.h  158  static inline void debug_dma_sync_single_range_for_cpu(struct device *dev,dma_addr_t dma_handle,unsigned long offset,size_t size,int direction)
debug_dma_sync_single_range_for_device  function  include/linux/dma-debug.h  166  static inline void debug_dma_sync_single_range_for_device(struct device *dev,dma_addr_t dma_handle,unsigned long offset,size_t size,int direction)
debug_dma_sync_sg_for_cpu  function  include/linux/dma-debug.h  172  static inline void debug_dma_sync_sg_for_cpu(struct device *dev,struct scatterlist *sg,int nelems, int direction)
debug_dma_sync_sg_for_device  function  include/linux/dma-debug.h  178  static inline void debug_dma_sync_sg_for_device(struct device *dev,struct scatterlist *sg,int nelems, int direction)
debug_dma_dump_mappings  function  include/linux/dma-debug.h  182  static inline void debug_dma_dump_mappings(struct device *dev)
__LINUX_SWIOTLB_H  macro  include/linux/swiotlb.h  2  #define __LINUX_SWIOTLB_H
IO_TLB_SEGSIZE  macro  include/linux/swiotlb.h  17  #define IO_TLB_SEGSIZE 128
IO_TLB_SHIFT  macro  include/linux/swiotlb.h  23  #define IO_TLB_SHIFT 11
swiotlb_init  prototype  include/linux/swiotlb.h  25  extern void swiotlb_init(int verbose);
swiotlb_init_with_tbl  prototype  include/linux/swiotlb.h  26  extern void swiotlb_init_with_tbl(char *tlb,unsigned long nslabs,int verbose);
swiotlb_nr_tbl  prototype  include/linux/swiotlb.h  27  extern unsigned long swiotlb_nr_tbl(void);
swiotlb_late_init_with_tbl  prototype  include/linux/swiotlb.h  28  extern int swiotlb_late_init_with_tbl(char *tlb,unsigned long nslabs);
dma_sync_target  enum  include/linux/swiotlb.h  33  enum dma_sync_target {
SWIOTLB_MAP_ERROR  macro  include/linux/swiotlb.h  39  #define SWIOTLB_MAP_ERROR (~(phys_addr_t)0x0)
swiotlb_tbl_map_single  prototype  include/linux/swiotlb.h  44  extern phys_addr_t swiotlb_tbl_map_single(struct device *hwdev,dma_addr_t tbl_dma_addr,phys_addr_t phys, size_t size,enum dma_data_direction dir);
swiotlb_tbl_unmap_single  prototype  include/linux/swiotlb.h  48  extern void swiotlb_tbl_unmap_single(struct device *hwdev,phys_addr_t tlb_addr,size_t size, enum dma_data_direction dir);
swiotlb_tbl_sync_single  prototype  include/linux/swiotlb.h  53  extern void swiotlb_tbl_sync_single(struct device *hwdev,phys_addr_t tlb_addr,size_t size, enum dma_data_direction dir,enum dma_sync_target target);
swiotlb_alloc_coherent  prototype  include/linux/swiotlb.h  58  *swiotlb_alloc_coherent(struct device *hwdev,size_t size,dma_addr_t *dma_handle, gfp_t flags);
swiotlb_free_coherent  prototype  include/linux/swiotlb.h  62  swiotlb_free_coherent(struct device *hwdev,size_t size,void *vaddr, dma_addr_t dma_handle);
swiotlb_map_page  prototype  include/linux/swiotlb.h  67  extern dma_addr_t swiotlb_map_page(struct device *dev,struct page *page,unsigned long offset, size_t size,enum dma_data_direction dir,struct dma_attrs *attrs);
swiotlb_unmap_page  prototype  include/linux/swiotlb.h  70  extern void swiotlb_unmap_page(struct device *hwdev,dma_addr_t dev_addr,size_t size, enum dma_data_direction dir,struct dma_attrs *attrs);
swiotlb_map_sg  prototype  include/linux/swiotlb.h  74  swiotlb_map_sg(struct device *hwdev,struct scatterlist *sg,int nents,enum dma_data_direction dir);
swiotlb_unmap_sg  prototype  include/linux/swiotlb.h  78  swiotlb_unmap_sg(struct device *hwdev,struct scatterlist *sg,int nents,enum dma_data_direction dir);
swiotlb_map_sg_attrs  prototype  include/linux/swiotlb.h  82  swiotlb_map_sg_attrs(struct device *hwdev,struct scatterlist *sgl,int nelems,enum dma_data_direction dir, struct dma_attrs *attrs);
swiotlb_unmap_sg_attrs  prototype  include/linux/swiotlb.h  87  swiotlb_unmap_sg_attrs(struct device *hwdev,struct scatterlist *sgl,int nelems, enum dma_data_direction dir,struct dma_attrs *attrs);
swiotlb_sync_single_for_cpu  prototype  include/linux/swiotlb.h  91  swiotlb_sync_single_for_cpu(struct device *hwdev,dma_addr_t dev_addr,size_t size, enum dma_data_direction dir);
swiotlb_sync_sg_for_cpu  prototype  include/linux/swiotlb.h  95  swiotlb_sync_sg_for_cpu(struct device *hwdev,struct scatterlist *sg,int nelems, enum dma_data_direction dir);
swiotlb_sync_single_for_device  prototype  include/linux/swiotlb.h  99  swiotlb_sync_single_for_device(struct device *hwdev,dma_addr_t dev_addr,size_t size, enum dma_data_direction dir);
swiotlb_sync_sg_for_device  prototype  include/linux/swiotlb.h  103  swiotlb_sync_sg_for_device(struct device *hwdev,struct scatterlist *sg,int nelems, enum dma_data_direction dir);
swiotlb_dma_mapping_error  prototype  include/linux/swiotlb.h  106  swiotlb_dma_mapping_error(struct device *hwdev,dma_addr_t dma_addr);
swiotlb_dma_supported  prototype  include/linux/swiotlb.h  109  swiotlb_dma_supported(struct device *hwdev,u64 mask);
swiotlb_free  function  include/linux/swiotlb.h  114  static inline void swiotlb_free(void) { }
swiotlb_print_info  prototype  include/linux/swiotlb.h  117  extern void swiotlb_print_info(void);
_ASM_X86_SWIOTLB_H  macro  arch/x86/include/asm/swiotlb.h  2  #define _ASM_X86_SWIOTLB_H
pci_swiotlb_detect_override  function  arch/x86/include/asm/swiotlb.h  14  static inline int pci_swiotlb_detect_override(void)
pci_swiotlb_detect_4gb  function  arch/x86/include/asm/swiotlb.h  18  static inline int pci_swiotlb_detect_4gb(void)
pci_swiotlb_init  function  arch/x86/include/asm/swiotlb.h  22  static inline void pci_swiotlb_init(void)
pci_swiotlb_late_init  function  arch/x86/include/asm/swiotlb.h  25  static inline void pci_swiotlb_late_init(void)
swiotlb  macro  arch/x86/include/asm/swiotlb.h  13  #define swiotlb 0
dma_mark_clean  function  arch/x86/include/asm/swiotlb.h  30  static inline void dma_mark_clean(void *addr,size_t size) {}
__LINUX_CMA_H  macro  include/linux/dma-contiguous.h  2  #define __LINUX_CMA_H
MAX_CMA_AREAS  macro  include/linux/dma-contiguous.h  81  #define MAX_CMA_AREAS (0)
dma_contiguous_reserve  function  include/linux/dma-contiguous.h  83  static inline void dma_contiguous_reserve(phys_addr_t limit) { }
dma_declare_contiguous  function  include/linux/dma-contiguous.h  87  int dma_declare_contiguous(struct device *dev,phys_addr_t size,phys_addr_t base, phys_addr_t limit)
dma_alloc_from_contiguous  function  include/linux/dma-contiguous.h  94  struct page *dma_alloc_from_contiguous(struct device *dev,int count,unsigned int order)
dma_release_from_contiguous  function  include/linux/dma-contiguous.h  101  bool dma_release_from_contiguous(struct device *dev,struct page *pages,int count)
dma_common_mmap  prototype  include/asm-generic/dma-mapping-common.h  180  extern int dma_common_mmap(struct device *dev,struct vm_area_struct *vma,void *cpu_addr, dma_addr_t dma_addr, size_t size);
dma_mmap_attrs  function  include/asm-generic/dma-mapping-common.h  197  dma_mmap_attrs(struct device *dev,struct vm_area_struct *vma,void *cpu_addr,dma_addr_t dma_addr, size_t size, struct dma_attrs *attrs)
dma_mmap_coherent  macro  include/asm-generic/dma-mapping-common.h  206  #define dma_mmap_coherent(d,v,c,h,s) dma_mmap_attrs(d,v,c,h,s,NULL)
dma_mmap_writecombine  function  include/asm-generic/dma-mapping-common.h  209  static inline int dma_mmap_writecombine(struct device *dev,struct vm_area_struct *vma,void *cpu_addr, dma_addr_t dma_addr, size_t size)
dma_common_get_sgtable  prototype  include/asm-generic/dma-mapping-common.h  218  dma_common_get_sgtable(struct device *dev,struct sg_table *sgt,void *cpu_addr, dma_addr_t dma_addr, size_t size);
dma_get_sgtable_attrs  function  include/asm-generic/dma-mapping-common.h  222  dma_get_sgtable_attrs(struct device *dev,struct sg_table *sgt,void *cpu_addr,dma_addr_t dma_addr, size_t size, struct dma_attrs *attrs)
dma_get_sgtable  macro  include/asm-generic/dma-mapping-common.h  232  #define dma_get_sgtable(d,t,v,h,s) dma_get_sgtable_attrs(d,t,v,h,s,NULL)
_ASM_X86_CHECKSUM_32_H  macro  arch/x86/include/asm/checksum_32.h  2  #define _ASM_X86_CHECKSUM_32_H
csum_partial  prototype  arch/x86/include/asm/checksum_32.h  20  asmlinkage __wsum csum_partial(const void *buff,int len,__wsum sum);
csum_partial_copy_generic  prototype  arch/x86/include/asm/checksum_32.h  32  asmlinkage __wsum csum_partial_copy_generic(const void *src,void *dst,int len, __wsum sum,int *src_err_ptr, int *dst_err_ptr);
csum_partial_copy_nocheck  function  arch/x86/include/asm/checksum_32.h  42  static inline __wsum csum_partial_copy_nocheck(const void *src,void *dst,int len, __wsum sum)
csum_partial_copy_from_user  function  arch/x86/include/asm/checksum_32.h  50  static inline __wsum csum_partial_copy_from_user(const void __user *src,void *dst,int len, __wsum sum,int *err_ptr)
ip_fast_csum  function  arch/x86/include/asm/checksum_32.h  64  static inline __sum16 ip_fast_csum(const void *iph,unsigned int ihl)
csum_fold  function  arch/x86/include/asm/checksum_32.h  98  static inline __sum16 csum_fold(__wsum sum)
csum_tcpudp_nofold  function  arch/x86/include/asm/checksum_32.h  111  static inline __wsum csum_tcpudp_nofold(__be32 saddr,__be32 daddr,unsigned short len,unsigned short proto,__wsum sum)
csum_tcpudp_magic  function  arch/x86/include/asm/checksum_32.h  130  static inline __sum16 csum_tcpudp_magic(__be32 saddr,__be32 daddr,unsigned short len,unsigned short proto,__wsum sum)
ip_compute_csum  function  arch/x86/include/asm/checksum_32.h  140  static inline __sum16 ip_compute_csum(const void *buff,int len)
_HAVE_ARCH_IPV6_CSUM  macro  arch/x86/include/asm/checksum_32.h  145  #define _HAVE_ARCH_IPV6_CSUM
csum_ipv6_magic  function  arch/x86/include/asm/checksum_32.h  149  static inline __sum16 csum_ipv6_magic(const struct in6_addr *saddr,const struct in6_addr *daddr,__u32 len, unsigned short proto,__wsum sum)
HAVE_CSUM_COPY_USER  macro  arch/x86/include/asm/checksum_32.h  173  #define HAVE_CSUM_COPY_USER
__LINUX_NETLINK_H  macro  include/linux/netlink.h  2  #define __LINUX_NETLINK_H
nlmsg_hdr  function  include/linux/netlink.h  13  static inline struct nlmsghdr *nlmsg_hdr(const struct sk_buff *skb)
netlink_skb_parms  struct  include/linux/netlink.h  18  struct netlink_skb_parms {
NETLINK_CB  macro  include/linux/netlink.h  25  #define NETLINK_CB(skb) (*(struct netlink_skb_parms*)&((skb)->cb))
NETLINK_CREDS  macro  include/linux/netlink.h  26  #define NETLINK_CREDS(skb) (&NETLINK_CB((skb)).creds)
netlink_table_grab  prototype  include/linux/netlink.h  29  extern void netlink_table_grab(void);
netlink_table_ungrab  prototype  include/linux/netlink.h  30  extern void netlink_table_ungrab(void);
NL_CFG_F_NONROOT_RECV  macro  include/linux/netlink.h  32  #define NL_CFG_F_NONROOT_RECV (1 << 0)
NL_CFG_F_NONROOT_SEND  macro  include/linux/netlink.h  33  #define NL_CFG_F_NONROOT_SEND (1 << 1)
netlink_kernel_cfg  struct  include/linux/netlink.h  36  struct netlink_kernel_cfg {
__netlink_kernel_create  prototype  include/linux/netlink.h  46  extern struct sock *__netlink_kernel_create(struct net *net,int unit,struct module *module,struct netlink_kernel_cfg *cfg);
netlink_kernel_create  function  include/linux/netlink.h  48  netlink_kernel_create(struct net *net,int unit,struct netlink_kernel_cfg *cfg)
netlink_kernel_release  prototype  include/linux/netlink.h  53  extern void netlink_kernel_release(struct sock *sk);
__netlink_change_ngroups  prototype  include/linux/netlink.h  54  extern int __netlink_change_ngroups(struct sock *sk,unsigned int groups);
netlink_change_ngroups  prototype  include/linux/netlink.h  55  extern int netlink_change_ngroups(struct sock *sk,unsigned int groups);
__netlink_clear_multicast_users  prototype  include/linux/netlink.h  56  extern void __netlink_clear_multicast_users(struct sock *sk,unsigned int group);
netlink_clear_multicast_users  prototype  include/linux/netlink.h  57  extern void netlink_clear_multicast_users(struct sock *sk,unsigned int group);
netlink_ack  prototype  include/linux/netlink.h  58  extern void netlink_ack(struct sk_buff *in_skb,struct nlmsghdr *nlh,int err);
netlink_has_listeners  prototype  include/linux/netlink.h  59  extern int netlink_has_listeners(struct sock *sk,unsigned int group);
netlink_unicast  prototype  include/linux/netlink.h  60  extern int netlink_unicast(struct sock *ssk,struct sk_buff *skb,__u32 portid,int nonblock);
netlink_broadcast  prototype  include/linux/netlink.h  62  extern int netlink_broadcast(struct sock *ssk,struct sk_buff *skb,__u32 portid,__u32 group, gfp_t allocation);
netlink_broadcast_filtered  prototype  include/linux/netlink.h  66  extern int netlink_broadcast_filtered(struct sock *ssk,struct sk_buff *skb,__u32 portid, __u32 group, gfp_t allocation,int (*filter)(struct sock *dsk, struct sk_buff *skb, void *data),void *filter_data);
netlink_set_err  prototype  include/linux/netlink.h  67  extern int netlink_set_err(struct sock *ssk,__u32 portid,__u32 group,int code);
netlink_register_notifier  prototype  include/linux/netlink.h  68  extern int netlink_register_notifier(struct notifier_block *nb);
netlink_unregister_notifier  prototype  include/linux/netlink.h  69  extern int netlink_unregister_notifier(struct notifier_block *nb);
netlink_getsockbyfilp  prototype  include/linux/netlink.h  72  struct sock *netlink_getsockbyfilp(struct file *filp);
netlink_attachskb  prototype  include/linux/netlink.h  74  int netlink_attachskb(struct sock *sk,struct sk_buff *skb,long *timeo, struct sock *ssk);
netlink_detachskb  prototype  include/linux/netlink.h  75  void netlink_detachskb(struct sock *sk,struct sk_buff *skb);
netlink_sendskb  prototype  include/linux/netlink.h  76  int netlink_sendskb(struct sock *sk,struct sk_buff *skb);
NLMSG_GOODSIZE  macro  include/linux/netlink.h  87  #define NLMSG_GOODSIZE SKB_WITH_OVERHEAD(8192UL)
NLMSG_DEFAULT_SIZE  macro  include/linux/netlink.h  90  #define NLMSG_DEFAULT_SIZE (NLMSG_GOODSIZE - NLMSG_HDRLEN)
netlink_callback  struct  include/linux/netlink.h  93  struct netlink_callback {
netlink_notify  struct  include/linux/netlink.h  108  struct netlink_notify {
__nlmsg_put  prototype  include/linux/netlink.h  115  __nlmsg_put(struct sk_buff *skb,u32 portid,u32 seq,int type,int len,int flags);
netlink_dump_control  struct  include/linux/netlink.h  117  struct netlink_dump_control {
__netlink_dump_start  prototype  include/linux/netlink.h  127  extern int __netlink_dump_start(struct sock *ssk,struct sk_buff *skb,const struct nlmsghdr *nlh,struct netlink_dump_control *control);
netlink_dump_start  function  include/linux/netlink.h  130  static inline int netlink_dump_start(struct sock *ssk,struct sk_buff *skb,const struct nlmsghdr *nlh,struct netlink_dump_control *control)
_LINUX_U64_STATS_SYNC_H  macro  include/linux/u64_stats_sync.h  2  #define _LINUX_U64_STATS_SYNC_H
u64_stats_sync  struct  include/linux/u64_stats_sync.h  64  struct u64_stats_sync {
u64_stats_update_begin  function  include/linux/u64_stats_sync.h  70  static inline void u64_stats_update_begin(struct u64_stats_sync *syncp)
u64_stats_update_end  function  include/linux/u64_stats_sync.h  77  static inline void u64_stats_update_end(struct u64_stats_sync *syncp)
u64_stats_fetch_begin  function  include/linux/u64_stats_sync.h  84  static inline unsigned int u64_stats_fetch_begin(const struct u64_stats_sync *syncp)
u64_stats_fetch_retry  function  include/linux/u64_stats_sync.h  97  static inline bool u64_stats_fetch_retry(const struct u64_stats_sync *syncp,unsigned int start)
u64_stats_fetch_begin_bh  function  include/linux/u64_stats_sync.h  115  static inline unsigned int u64_stats_fetch_begin_bh(const struct u64_stats_sync *syncp)
u64_stats_fetch_retry_bh  function  include/linux/u64_stats_sync.h  128  static inline bool u64_stats_fetch_retry_bh(const struct u64_stats_sync *syncp,unsigned int start)
__NET_FRAG_H__  macro  include/net/inet_frag.h  2  #define __NET_FRAG_H__
netns_frags  struct  include/net/inet_frag.h  4  struct netns_frags {
inet_frag_queue  struct  include/net/inet_frag.h  15  struct inet_frag_queue {
INET_FRAG_COMPLETE  macro  include/net/inet_frag.h  29  #define INET_FRAG_COMPLETE 4
INET_FRAG_FIRST_IN  macro  include/net/inet_frag.h  30  #define INET_FRAG_FIRST_IN 2
INET_FRAG_LAST_IN  macro  include/net/inet_frag.h  31  #define INET_FRAG_LAST_IN 1
INETFRAGS_HASHSZ  macro  include/net/inet_frag.h  36  #define INETFRAGS_HASHSZ 64
INETFRAGS_MAXDEPTH  macro  include/net/inet_frag.h  43  #define INETFRAGS_MAXDEPTH 128
inet_frags  struct  include/net/inet_frag.h  45  struct inet_frags {
inet_frags_init  prototype  include/net/inet_frag.h  62  void inet_frags_init(struct inet_frags *);
inet_frags_fini  prototype  include/net/inet_frag.h  63  void inet_frags_fini(struct inet_frags *);
inet_frags_init_net  prototype  include/net/inet_frag.h  65  void inet_frags_init_net(struct netns_frags *nf);
inet_frags_exit_net  prototype  include/net/inet_frag.h  66  void inet_frags_exit_net(struct netns_frags *nf,struct inet_frags *f);
inet_frag_kill  prototype  include/net/inet_frag.h  68  void inet_frag_kill(struct inet_frag_queue *q,struct inet_frags *f);
inet_frag_destroy  prototype  include/net/inet_frag.h  70  void inet_frag_destroy(struct inet_frag_queue *q,struct inet_frags *f, int *work);
inet_frag_evictor  prototype  include/net/inet_frag.h  71  int inet_frag_evictor(struct netns_frags *nf,struct inet_frags *f,bool force);
inet_frag_maybe_warn_overflow  prototype  include/net/inet_frag.h  76  void inet_frag_maybe_warn_overflow(struct inet_frag_queue *q,const char *prefix);
inet_frag_put  function  include/net/inet_frag.h  78  static inline void inet_frag_put(struct inet_frag_queue *q,struct inet_frags *f)
_NET_DST_OPS_H  macro  include/net/dst_ops.h  2  #define _NET_DST_OPS_H
dst_ops  struct  include/net/dst_ops.h  13  struct dst_ops {
dst_entries_get_fast  function  include/net/dst_ops.h  42  static inline int dst_entries_get_fast(struct dst_ops *dst)
dst_entries_get_slow  function  include/net/dst_ops.h  47  static inline int dst_entries_get_slow(struct dst_ops *dst)
dst_entries_add  function  include/net/dst_ops.h  57  static inline void dst_entries_add(struct dst_ops *dst,int val)
dst_entries_init  function  include/net/dst_ops.h  64  static inline int dst_entries_init(struct dst_ops *dst)
dst_entries_destroy  function  include/net/dst_ops.h  69  static inline void dst_entries_destroy(struct dst_ops *dst)
_LINUX_IN_H  macro  include/linux/in.h  19  #define _LINUX_IN_H
proto_ports_offset  function  include/linux/in.h  25  static inline int proto_ports_offset(int proto)
ipv4_is_loopback  function  include/linux/in.h  42  static inline bool ipv4_is_loopback(__be32 addr)
ipv4_is_multicast  function  include/linux/in.h  47  static inline bool ipv4_is_multicast(__be32 addr)
ipv4_is_local_multicast  function  include/linux/in.h  52  static inline bool ipv4_is_local_multicast(__be32 addr)
ipv4_is_lbcast  function  include/linux/in.h  57  static inline bool ipv4_is_lbcast(__be32 addr)
ipv4_is_zeronet  function  include/linux/in.h  63  static inline bool ipv4_is_zeronet(__be32 addr)
ipv4_is_private_10  function  include/linux/in.h  70  static inline bool ipv4_is_private_10(__be32 addr)
ipv4_is_private_172  function  include/linux/in.h  75  static inline bool ipv4_is_private_172(__be32 addr)
ipv4_is_private_192  function  include/linux/in.h  80  static inline bool ipv4_is_private_192(__be32 addr)
ipv4_is_linklocal_169  function  include/linux/in.h  85  static inline bool ipv4_is_linklocal_169(__be32 addr)
ipv4_is_anycast_6to4  function  include/linux/in.h  90  static inline bool ipv4_is_anycast_6to4(__be32 addr)
ipv4_is_test_192  function  include/linux/in.h  95  static inline bool ipv4_is_test_192(__be32 addr)
ipv4_is_test_198  function  include/linux/in.h  100  static inline bool ipv4_is_test_198(__be32 addr)
__LINUX_NETFILTER_H  macro  include/linux/netfilter.h  2  #define __LINUX_NETFILTER_H
NF_DROP_GETERR  function  include/linux/netfilter.h  14  static inline int NF_DROP_GETERR(int verdict)
nf_inet_addr_cmp  function  include/linux/netfilter.h  20  static inline int nf_inet_addr_cmp(const union nf_inet_addr *a1,const union nf_inet_addr *a2)
nf_inet_addr_mask  function  include/linux/netfilter.h  30  static inline void nf_inet_addr_mask(const union nf_inet_addr *a1,union nf_inet_addr *result,const union nf_inet_addr *mask)
netfilter_init  prototype  include/linux/netfilter.h  38  extern void netfilter_init(void);
NF_MAX_HOOKS  macro  include/linux/netfilter.h  41  #define NF_MAX_HOOKS 8
nf_hook_ops  struct  include/linux/netfilter.h  51  struct nf_hook_ops {
nf_sockopt_ops  struct  include/linux/netfilter.h  63  struct nf_sockopt_ops {
nf_register_hook  prototype  include/linux/netfilter.h  88  int nf_register_hook(struct nf_hook_ops *reg);
nf_unregister_hook  prototype  include/linux/netfilter.h  89  void nf_unregister_hook(struct nf_hook_ops *reg);
nf_register_hooks  prototype  include/linux/netfilter.h  90  int nf_register_hooks(struct nf_hook_ops *reg,unsigned int n);
nf_unregister_hooks  prototype  include/linux/netfilter.h  91  void nf_unregister_hooks(struct nf_hook_ops *reg,unsigned int n);
nf_register_sockopt  prototype  include/linux/netfilter.h  95  int nf_register_sockopt(struct nf_sockopt_ops *reg);
nf_unregister_sockopt  prototype  include/linux/netfilter.h  96  void nf_unregister_sockopt(struct nf_sockopt_ops *reg);
nf_hooks_active  function  include/linux/netfilter.h  112  static inline bool nf_hooks_active(u_int8_t pf,unsigned int hook)
nf_hook_slow  prototype  include/linux/netfilter.h  120  int nf_hook_slow(u_int8_t pf,unsigned int hook,struct sk_buff *skb,struct net_device *indev, struct net_device *outdev,int (*okfn)(struct sk_buff *), int thresh);
nf_hook_thresh  function  include/linux/netfilter.h  304  static inline int nf_hook_thresh(u_int8_t pf,unsigned int hook,struct sk_buff *skb,struct net_device *indev,struct net_device *outdev,int (*okfn)(struct sk_buff *), int thresh)
nf_hook  function  include/linux/netfilter.h  310  static inline int nf_hook(u_int8_t pf,unsigned int hook,struct sk_buff *skb,struct net_device *indev, struct net_device *outdev,int (*okfn)(struct sk_buff *))
NF_HOOK_THRESH  function  include/linux/netfilter.h  167  NF_HOOK_THRESH(uint8_t pf,unsigned int hook,struct sk_buff *skb,struct net_device *in, struct net_device *out,int (*okfn)(struct sk_buff *), int thresh)
NF_HOOK_COND  macro  include/linux/netfilter.h  299  #define NF_HOOK_COND(pf,hook,skb,indev,outdev,okfn,cond) (okfn)(skb)
NF_HOOK  macro  include/linux/netfilter.h  298  #define NF_HOOK(pf,hook,skb,indev,outdev,okfn) (okfn)(skb)
nf_setsockopt  prototype  include/linux/netfilter.h  198  int nf_setsockopt(struct sock *sk,u_int8_t pf,int optval,char __user *opt,unsigned int len);
nf_getsockopt  prototype  include/linux/netfilter.h  200  int nf_getsockopt(struct sock *sk,u_int8_t pf,int optval,char __user *opt,int *len);
compat_nf_setsockopt  prototype  include/linux/netfilter.h  203  int compat_nf_setsockopt(struct sock *sk,u_int8_t pf,int optval,char __user *opt, unsigned int len);
compat_nf_getsockopt  prototype  include/linux/netfilter.h  205  int compat_nf_getsockopt(struct sock *sk,u_int8_t pf,int optval,char __user *opt, int *len);
skb_make_writable  prototype  include/linux/netfilter.h  211  extern int skb_make_writable(struct sk_buff *skb,unsigned int writable_len);
nf_afinfo  struct  include/linux/netfilter.h  216  struct nf_afinfo {
nf_get_afinfo  function  include/linux/netfilter.h  235  static inline const struct nf_afinfo *nf_get_afinfo(unsigned short family)
nf_checksum  function  include/linux/netfilter.h  242  nf_checksum(struct sk_buff *skb,unsigned int hook,unsigned int dataoff,u_int8_t protocol, unsigned short family)
nf_checksum_partial  function  include/linux/netfilter.h  258  nf_checksum_partial(struct sk_buff *skb,unsigned int hook,unsigned int dataoff, unsigned int len,u_int8_t protocol, unsigned short family)
nf_register_afinfo  prototype  include/linux/netfilter.h  272  extern int nf_register_afinfo(const struct nf_afinfo *afinfo);
nf_unregister_afinfo  prototype  include/linux/netfilter.h  273  extern void nf_unregister_afinfo(const struct nf_afinfo *afinfo);
nf_nat_decode_session  function  include/linux/netfilter.h  316  nf_nat_decode_session(struct sk_buff *skb,struct flowi *fl,u_int8_t family)
nf_ct_attach  function  include/linux/netfilter.h  342  static inline void nf_ct_attach(struct sk_buff *new,struct sk_buff *skb) {}
nfq_ct_hook  struct  include/linux/netfilter.h  329  struct nfq_ct_hook {
nfq_ct_nat_hook  struct  include/linux/netfilter.h  336  struct nfq_ct_nat_hook {
_LINUX_SEQ_FILE_H  macro  include/linux/seq_file.h  2  #define _LINUX_SEQ_FILE_H
seq_file  struct  include/linux/seq_file.h  18  struct seq_file {
seq_operations  struct  include/linux/seq_file.h  35  struct seq_operations {
SEQ_SKIP  macro  include/linux/seq_file.h  42  #define SEQ_SKIP 1
seq_get_buf  function  include/linux/seq_file.h  52  static inline size_t seq_get_buf(struct seq_file *m,char **bufp)
seq_commit  function  include/linux/seq_file.h  72  static inline void seq_commit(struct seq_file *m,int num)
mangle_path  prototype  include/linux/seq_file.h  82  char *mangle_path(char *s,const char *p,const char *esc);
seq_open  prototype  include/linux/seq_file.h  83  int seq_open(struct file *,const struct seq_operations *);
seq_read  prototype  include/linux/seq_file.h  84  ssize_t seq_read(struct file *,char __user *,size_t,loff_t *);
seq_lseek  prototype  include/linux/seq_file.h  85  loff_t seq_lseek(struct file *,loff_t,int);
seq_release  prototype  include/linux/seq_file.h  86  int seq_release(struct inode *,struct file *);
seq_escape  prototype  include/linux/seq_file.h  87  int seq_escape(struct seq_file *,const char *,const char *);
seq_putc  prototype  include/linux/seq_file.h  88  int seq_putc(struct seq_file *m,char c);
seq_puts  prototype  include/linux/seq_file.h  89  int seq_puts(struct seq_file *m,const char *s);
seq_write  prototype  include/linux/seq_file.h  90  int seq_write(struct seq_file *seq,const void *data,size_t len);
seq_printf  prototype  include/linux/seq_file.h  92  __printf(2,3) int seq_printf(struct seq_file *,const char *,...);
seq_vprintf  prototype  include/linux/seq_file.h  93  __printf(2,0) int seq_vprintf(struct seq_file *,const char *,va_list args);
seq_path  prototype  include/linux/seq_file.h  95  int seq_path(struct seq_file *,const struct path *,const char *);
seq_dentry  prototype  include/linux/seq_file.h  96  int seq_dentry(struct seq_file *,struct dentry *,const char *);
seq_path_root  prototype  include/linux/seq_file.h  98  int seq_path_root(struct seq_file *m,const struct path *path,const struct path *root, const char *esc);
seq_bitmap  prototype  include/linux/seq_file.h  100  int seq_bitmap(struct seq_file *m,const unsigned long *bits,unsigned int nr_bits);
seq_cpumask  function  include/linux/seq_file.h  101  static inline int seq_cpumask(struct seq_file *m,const struct cpumask *mask)
seq_nodemask  function  include/linux/seq_file.h  106  static inline int seq_nodemask(struct seq_file *m,nodemask_t *mask)
seq_bitmap_list  prototype  include/linux/seq_file.h  112  int seq_bitmap_list(struct seq_file *m,const unsigned long *bits,unsigned int nr_bits);
seq_cpumask_list  function  include/linux/seq_file.h  115  static inline int seq_cpumask_list(struct seq_file *m,const struct cpumask *mask)
seq_nodemask_list  function  include/linux/seq_file.h  120  static inline int seq_nodemask_list(struct seq_file *m,nodemask_t *mask)
single_open  prototype  include/linux/seq_file.h  125  int single_open(struct file *,int (*)(struct seq_file *,void *),void *);
single_release  prototype  include/linux/seq_file.h  126  int single_release(struct inode *,struct file *);
__seq_open_private  prototype  include/linux/seq_file.h  127  void *__seq_open_private(struct file *,const struct seq_operations *,int);
seq_open_private  prototype  include/linux/seq_file.h  128  int seq_open_private(struct file *,const struct seq_operations *,int);
seq_release_private  prototype  include/linux/seq_file.h  129  int seq_release_private(struct inode *,struct file *);
seq_put_decimal_ull  prototype  include/linux/seq_file.h  131  int seq_put_decimal_ull(struct seq_file *m,char delimiter,unsigned long long num);
seq_put_decimal_ll  prototype  include/linux/seq_file.h  133  int seq_put_decimal_ll(struct seq_file *m,char delimiter,long long num);
seq_user_ns  function  include/linux/seq_file.h  135  static inline struct user_namespace *seq_user_ns(struct seq_file *seq)
SEQ_START_TOKEN  macro  include/linux/seq_file.h  145  #define SEQ_START_TOKEN ((void *)1)
seq_list_start  prototype  include/linux/seq_file.h  151  extern struct list_head *seq_list_start(struct list_head *head,loff_t pos);
seq_list_start_head  prototype  include/linux/seq_file.h  153  extern struct list_head *seq_list_start_head(struct list_head *head,loff_t pos);
seq_list_next  prototype  include/linux/seq_file.h  155  extern struct list_head *seq_list_next(void *v,struct list_head *head,loff_t *ppos);
seq_hlist_start  prototype  include/linux/seq_file.h  162  extern struct hlist_node *seq_hlist_start(struct hlist_head *head,loff_t pos);
seq_hlist_start_head  prototype  include/linux/seq_file.h  164  extern struct hlist_node *seq_hlist_start_head(struct hlist_head *head,loff_t pos);
seq_hlist_next  prototype  include/linux/seq_file.h  166  extern struct hlist_node *seq_hlist_next(void *v,struct hlist_head *head,loff_t *ppos);
seq_hlist_start_rcu  prototype  include/linux/seq_file.h  169  extern struct hlist_node *seq_hlist_start_rcu(struct hlist_head *head,loff_t pos);
seq_hlist_start_head_rcu  prototype  include/linux/seq_file.h  171  extern struct hlist_node *seq_hlist_start_head_rcu(struct hlist_head *head,loff_t pos);
seq_hlist_next_rcu  prototype  include/linux/seq_file.h  174  extern struct hlist_node *seq_hlist_next_rcu(void *v,struct hlist_head *head,loff_t *ppos);
