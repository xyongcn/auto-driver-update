_LINUX_MODULE_H  macro  include/linux/module.h  2  #define _LINUX_MODULE_H
MODULE_SIG_STRING  macro  include/linux/module.h  25  #define MODULE_SIG_STRING "~Module signature appended~\n"
MODULE_SUPPORTED_DEVICE  macro  include/linux/module.h  28  #define MODULE_SUPPORTED_DEVICE(name)
MODULE_NAME_LEN  macro  include/linux/module.h  30  #define MODULE_NAME_LEN MAX_PARAM_PREFIX_LEN
__modver_version_show  prototype  include/linux/module.h  65  extern ssize_t __modver_version_show(struct module_attribute *,struct module_kobject *, char *);
init_module  prototype  include/linux/module.h  70  extern int init_module(void);
cleanup_module  prototype  include/linux/module.h  71  extern void cleanup_module(void);
search_extable  prototype  include/linux/module.h  79  search_extable(const struct exception_table_entry *first,const struct exception_table_entry *last,unsigned long value);
sort_extable  prototype  include/linux/module.h  81  void sort_extable(struct exception_table_entry *start,struct exception_table_entry *finish);
sort_main_extable  prototype  include/linux/module.h  82  void sort_main_extable(void);
trim_init_extable  prototype  include/linux/module.h  83  void trim_init_extable(struct module *m);
MODULE_GENERIC_TABLE  macro  include/linux/module.h  91  #define MODULE_GENERIC_TABLE(gtype,name)
MODULE_INFO  macro  include/linux/module.h  95  #define MODULE_INFO(tag, info) __MODULE_INFO(tag, tag, info)
MODULE_ALIAS  macro  include/linux/module.h  98  #define MODULE_ALIAS(_alias) MODULE_INFO(alias, _alias)
MODULE_LICENSE  macro  include/linux/module.h  128  #define MODULE_LICENSE(_license) MODULE_INFO(license, _license)
MODULE_AUTHOR  macro  include/linux/module.h  134  #define MODULE_AUTHOR(_author) MODULE_INFO(author, _author)
MODULE_DESCRIPTION  macro  include/linux/module.h  137  #define MODULE_DESCRIPTION(_description) MODULE_INFO(description, _description)
MODULE_DEVICE_TABLE  macro  include/linux/module.h  139  #define MODULE_DEVICE_TABLE(type,name) \
MODULE_VERSION  macro  include/linux/module.h  160  #define MODULE_VERSION(_version) \
MODULE_FIRMWARE  macro  include/linux/module.h  180  #define MODULE_FIRMWARE(_firmware) MODULE_INFO(firmware, _firmware)
search_exception_tables  prototype  include/linux/module.h  183  const struct exception_table_entry *search_exception_tables(unsigned long add);
__symbol_get  prototype  include/linux/module.h  191  void *__symbol_get(const char *symbol);
__symbol_get_gpl  prototype  include/linux/module.h  192  void *__symbol_get_gpl(const char *symbol);
symbol_get  macro  include/linux/module.h  547  #define symbol_get(x) ({ extern typeof(x) x __attribute__((weak)); &(x); })
__attribute  prototype  include/linux/module.h  221  } __attribute((aligned(2 * sizeof(unsigned long))));
MODULE_ARCH_INIT  macro  include/linux/module.h  380  #define MODULE_ARCH_INIT {}
module_is_live  function  include/linux/module.h  388  static inline int module_is_live(struct module *mod)
__module_text_address  function  include/linux/module.h  526  static inline struct module *__module_text_address(unsigned long addr)
__module_address  function  include/linux/module.h  521  static inline struct module *__module_address(unsigned long addr)
is_module_address  function  include/linux/module.h  531  static inline bool is_module_address(unsigned long addr)
is_module_percpu_address  function  include/linux/module.h  536  static inline bool is_module_percpu_address(unsigned long addr)
is_module_text_address  function  include/linux/module.h  541  static inline bool is_module_text_address(unsigned long addr)
within_module_core  function  include/linux/module.h  399  static inline int within_module_core(unsigned long addr, struct module *mod)
within_module_init  function  include/linux/module.h  405  static inline int within_module_init(unsigned long addr, struct module *mod)
find_module  prototype  include/linux/module.h  412  struct module *find_module(const char *name);
find_symbol  prototype  include/linux/module.h  430  const struct kernel_symbol *find_symbol(const char *name,struct module **owner,const unsigned long **crc,bool gplok,bool warn);
each_symbol_section  prototype  include/linux/module.h  435  bool each_symbol_section(bool (*fn)(const struct symsearch *arr,struct module *owner,void *data), void *data);
module_get_kallsym  function  include/linux/module.h  588  static inline int module_get_kallsym(unsigned int symnum, unsigned long *value,char *type, char *name,char *module_name, int *exported)
module_kallsyms_lookup_name  function  include/linux/module.h  593  static inline unsigned long module_kallsyms_lookup_name(const char *name)
module_kallsyms_on_each_symbol  function  include/linux/module.h  601  static inline int module_kallsyms_on_each_symbol(int (*fn)(void *, const char *,struct module *,unsigned long),void *data)
__module_put_and_exit  prototype  include/linux/module.h  449  extern void __module_put_and_exit(struct module *mod, long code)
module_put_and_exit  macro  include/linux/module.h  617  #define module_put_and_exit(code) do_exit(code)
module_refcount  prototype  include/linux/module.h  454  unsigned long module_refcount(struct module *mod);
__symbol_put  prototype  include/linux/module.h  455  void __symbol_put(const char *symbol);
symbol_put  macro  include/linux/module.h  548  #define symbol_put(x) do { } while(0)
symbol_put_addr  macro  include/linux/module.h  549  #define symbol_put_addr(x) do { } while(0)
__module_get  function  include/linux/module.h  551  static inline void __module_get(struct module *module)
try_module_get  function  include/linux/module.h  555  static inline int try_module_get(struct module *module)
module_put  function  include/linux/module.h  560  static inline void module_put(struct module *module)
ref_module  prototype  include/linux/module.h  484  int ref_module(struct module *a, struct module *b);
module_name  macro  include/linux/module.h  564  #define module_name(mod) "kernel"
module_address_lookup  function  include/linux/module.h  571  static inline const char *module_address_lookup(unsigned long addr,unsigned long *symbolsize,unsigned long *offset,char **modname,char *namebuf)
lookup_module_symbol_name  function  include/linux/module.h  576  static inline int lookup_module_symbol_name(unsigned long addr, char *symname)
lookup_module_symbol_attrs  function  include/linux/module.h  581  static inline int lookup_module_symbol_attrs(unsigned long addr, unsigned long *size, unsigned long *offset, char *modname, char *name)
search_module_extables  function  include/linux/module.h  516  search_module_extables(unsigned long addr)
register_module_notifier  function  include/linux/module.h  606  static inline int register_module_notifier(struct notifier_block * nb)
unregister_module_notifier  function  include/linux/module.h  612  static inline int unregister_module_notifier(struct notifier_block * nb)
print_modules  function  include/linux/module.h  619  static inline void print_modules(void)
symbol_request  macro  include/linux/module.h  630  #define symbol_request(x) try_then_request_module(symbol_get(x), "symbol:" #x)
__MODULE_STRING  macro  include/linux/module.h  634  #define __MODULE_STRING(x) __stringify(x)
set_all_modules_text_rw  function  include/linux/module.h  640  static inline void set_all_modules_text_rw(void) { }
set_all_modules_text_ro  function  include/linux/module.h  641  static inline void set_all_modules_text_ro(void) { }
module_bug_finalize  function  include/linux/module.h  653  static inline void module_bug_finalize(const Elf_Ehdr *hdr,const Elf_Shdr *sechdrs,struct module *mod)
module_bug_cleanup  function  include/linux/module.h  656  static inline void module_bug_cleanup(struct module *mod) {}
_LINUX_TYPES_H  macro  include/linux/types.h  2  #define _LINUX_TYPES_H
__EXPORTED_HEADERS__  macro  include/linux/types.h  4  #define __EXPORTED_HEADERS__
DECLARE_BITMAP  macro  include/linux/types.h  9  #define DECLARE_BITMAP(name,bits) \
_SIZE_T  macro  include/linux/types.h  53  #define _SIZE_T
_SSIZE_T  macro  include/linux/types.h  58  #define _SSIZE_T
_PTRDIFF_T  macro  include/linux/types.h  63  #define _PTRDIFF_T
_TIME_T  macro  include/linux/types.h  68  #define _TIME_T
_CLOCK_T  macro  include/linux/types.h  73  #define _CLOCK_T
_CADDR_T  macro  include/linux/types.h  78  #define _CADDR_T
__BIT_TYPES_DEFINED__  macro  include/linux/types.h  95  #define __BIT_TYPES_DEFINED__
aligned_u64  macro  include/linux/types.h  117  #define aligned_u64 __u64 __attribute__((aligned(8)))
aligned_be64  macro  include/linux/types.h  118  #define aligned_be64 __be64 __attribute__((aligned(8)))
aligned_le64  macro  include/linux/types.h  119  #define aligned_le64 __le64 __attribute__((aligned(8)))
pgoff_t  macro  include/linux/types.h  142  #define pgoff_t unsigned long
rcu_head  macro  include/linux/types.h  213  #define rcu_head callback_head
_LINUX_FS_H  macro  include/linux/fs.h  2  #define _LINUX_FS_H
inode_init  prototype  include/linux/fs.h  49  extern void __init inode_init(void);
inode_init_early  prototype  include/linux/fs.h  50  extern void __init inode_init_early(void);
files_init  prototype  include/linux/fs.h  51  extern void __init files_init(unsigned long);
get_max_files  prototype  include/linux/fs.h  54  extern unsigned long get_max_files(void);
MAY_EXEC  macro  include/linux/fs.h  68  #define MAY_EXEC 0x00000001
MAY_WRITE  macro  include/linux/fs.h  69  #define MAY_WRITE 0x00000002
MAY_READ  macro  include/linux/fs.h  70  #define MAY_READ 0x00000004
MAY_APPEND  macro  include/linux/fs.h  71  #define MAY_APPEND 0x00000008
MAY_ACCESS  macro  include/linux/fs.h  72  #define MAY_ACCESS 0x00000010
MAY_OPEN  macro  include/linux/fs.h  73  #define MAY_OPEN 0x00000020
MAY_CHDIR  macro  include/linux/fs.h  74  #define MAY_CHDIR 0x00000040
MAY_NOT_BLOCK  macro  include/linux/fs.h  76  #define MAY_NOT_BLOCK 0x00000080
FMODE_READ  macro  include/linux/fs.h  84  #define FMODE_READ ((__force fmode_t)0x1)
FMODE_WRITE  macro  include/linux/fs.h  86  #define FMODE_WRITE ((__force fmode_t)0x2)
FMODE_LSEEK  macro  include/linux/fs.h  88  #define FMODE_LSEEK ((__force fmode_t)0x4)
FMODE_PREAD  macro  include/linux/fs.h  90  #define FMODE_PREAD ((__force fmode_t)0x8)
FMODE_PWRITE  macro  include/linux/fs.h  92  #define FMODE_PWRITE ((__force fmode_t)0x10)
FMODE_EXEC  macro  include/linux/fs.h  94  #define FMODE_EXEC ((__force fmode_t)0x20)
FMODE_NDELAY  macro  include/linux/fs.h  96  #define FMODE_NDELAY ((__force fmode_t)0x40)
FMODE_EXCL  macro  include/linux/fs.h  98  #define FMODE_EXCL ((__force fmode_t)0x80)
FMODE_WRITE_IOCTL  macro  include/linux/fs.h  101  #define FMODE_WRITE_IOCTL ((__force fmode_t)0x100)
FMODE_32BITHASH  macro  include/linux/fs.h  103  #define FMODE_32BITHASH ((__force fmode_t)0x200)
FMODE_64BITHASH  macro  include/linux/fs.h  105  #define FMODE_64BITHASH ((__force fmode_t)0x400)
FMODE_NOCMTIME  macro  include/linux/fs.h  113  #define FMODE_NOCMTIME ((__force fmode_t)0x800)
FMODE_RANDOM  macro  include/linux/fs.h  116  #define FMODE_RANDOM ((__force fmode_t)0x1000)
FMODE_UNSIGNED_OFFSET  macro  include/linux/fs.h  119  #define FMODE_UNSIGNED_OFFSET ((__force fmode_t)0x2000)
FMODE_PATH  macro  include/linux/fs.h  122  #define FMODE_PATH ((__force fmode_t)0x4000)
FMODE_NONOTIFY  macro  include/linux/fs.h  125  #define FMODE_NONOTIFY ((__force fmode_t)0x1000000)
CHECK_IOVEC_ONLY  macro  include/linux/fs.h  133  #define CHECK_IOVEC_ONLY -1
RW_MASK  macro  include/linux/fs.h  177  #define RW_MASK REQ_WRITE
RWA_MASK  macro  include/linux/fs.h  178  #define RWA_MASK REQ_RAHEAD
READ  macro  include/linux/fs.h  180  #define READ 0
WRITE  macro  include/linux/fs.h  181  #define WRITE RW_MASK
READA  macro  include/linux/fs.h  182  #define READA RWA_MASK
KERNEL_READ  macro  include/linux/fs.h  183  #define KERNEL_READ (READ|REQ_KERNEL)
KERNEL_WRITE  macro  include/linux/fs.h  184  #define KERNEL_WRITE (WRITE|REQ_KERNEL)
READ_SYNC  macro  include/linux/fs.h  186  #define READ_SYNC (READ | REQ_SYNC)
WRITE_SYNC  macro  include/linux/fs.h  187  #define WRITE_SYNC (WRITE | REQ_SYNC | REQ_NOIDLE)
WRITE_ODIRECT  macro  include/linux/fs.h  188  #define WRITE_ODIRECT (WRITE | REQ_SYNC)
WRITE_FLUSH  macro  include/linux/fs.h  189  #define WRITE_FLUSH (WRITE | REQ_SYNC | REQ_NOIDLE | REQ_FLUSH)
WRITE_FUA  macro  include/linux/fs.h  190  #define WRITE_FUA (WRITE | REQ_SYNC | REQ_NOIDLE | REQ_FUA)
WRITE_FLUSH_FUA  macro  include/linux/fs.h  191  #define WRITE_FLUSH_FUA (WRITE | REQ_SYNC | REQ_NOIDLE | REQ_FLUSH | REQ_FUA)
ATTR_MODE  macro  include/linux/fs.h  197  #define ATTR_MODE (1 << 0)
ATTR_UID  macro  include/linux/fs.h  198  #define ATTR_UID (1 << 1)
ATTR_GID  macro  include/linux/fs.h  199  #define ATTR_GID (1 << 2)
ATTR_SIZE  macro  include/linux/fs.h  200  #define ATTR_SIZE (1 << 3)
ATTR_ATIME  macro  include/linux/fs.h  201  #define ATTR_ATIME (1 << 4)
ATTR_MTIME  macro  include/linux/fs.h  202  #define ATTR_MTIME (1 << 5)
ATTR_CTIME  macro  include/linux/fs.h  203  #define ATTR_CTIME (1 << 6)
ATTR_ATIME_SET  macro  include/linux/fs.h  204  #define ATTR_ATIME_SET (1 << 7)
ATTR_MTIME_SET  macro  include/linux/fs.h  205  #define ATTR_MTIME_SET (1 << 8)
ATTR_FORCE  macro  include/linux/fs.h  206  #define ATTR_FORCE (1 << 9) /* Not a change, but a change it */
ATTR_ATTR_FLAG  macro  include/linux/fs.h  207  #define ATTR_ATTR_FLAG (1 << 10)
ATTR_KILL_SUID  macro  include/linux/fs.h  208  #define ATTR_KILL_SUID (1 << 11)
ATTR_KILL_SGID  macro  include/linux/fs.h  209  #define ATTR_KILL_SGID (1 << 12)
ATTR_FILE  macro  include/linux/fs.h  210  #define ATTR_FILE (1 << 13)
ATTR_KILL_PRIV  macro  include/linux/fs.h  211  #define ATTR_KILL_PRIV (1 << 14)
ATTR_OPEN  macro  include/linux/fs.h  212  #define ATTR_OPEN (1 << 15) /* Truncating from open(O_TRUNC) */
ATTR_TIMES_SET  macro  include/linux/fs.h  213  #define ATTR_TIMES_SET (1 << 16)
AOP_FLAG_UNINTERRUPTIBLE  macro  include/linux/fs.h  278  #define AOP_FLAG_UNINTERRUPTIBLE 0x0001 /* will not do a short write */
AOP_FLAG_CONT_EXPAND  macro  include/linux/fs.h  279  #define AOP_FLAG_CONT_EXPAND 0x0002 /* called from cont_expand */
AOP_FLAG_NOFS  macro  include/linux/fs.h  280  #define AOP_FLAG_NOFS 0x0004 /* used by filesystem to direct
iov_iter_copy_from_user_atomic  prototype  include/linux/fs.h  299  size_t iov_iter_copy_from_user_atomic(struct page *page,struct iov_iter *i, unsigned long offset, size_t bytes);
iov_iter_copy_from_user  prototype  include/linux/fs.h  301  size_t iov_iter_copy_from_user(struct page *page,struct iov_iter *i, unsigned long offset, size_t bytes);
iov_iter_advance  prototype  include/linux/fs.h  302  void iov_iter_advance(struct iov_iter *i, size_t bytes);
iov_iter_fault_in_readable  prototype  include/linux/fs.h  303  int iov_iter_fault_in_readable(struct iov_iter *i, size_t bytes);
iov_iter_single_seg_count  prototype  include/linux/fs.h  304  size_t iov_iter_single_seg_count(struct iov_iter *i);
iov_iter_init  function  include/linux/fs.h  308  static inline void iov_iter_init(struct iov_iter *i,const struct iovec *iov, unsigned long nr_segs,size_t count, size_t written)
iov_iter_count  function  include/linux/fs.h  318  static inline size_t iov_iter_count(struct iov_iter *i)
pagecache_write_begin  prototype  include/linux/fs.h  399  int pagecache_write_begin(struct file *, struct address_space *mapping,loff_t pos, unsigned len, unsigned flags,struct page **pagep, void **fsdata);
pagecache_write_end  prototype  include/linux/fs.h  403  int pagecache_write_end(struct file *, struct address_space *mapping,loff_t pos, unsigned len, unsigned copied,struct page *page, void *fsdata);
PAGECACHE_TAG_DIRTY  macro  include/linux/fs.h  472  #define PAGECACHE_TAG_DIRTY 0
PAGECACHE_TAG_WRITEBACK  macro  include/linux/fs.h  473  #define PAGECACHE_TAG_WRITEBACK 1
PAGECACHE_TAG_TOWRITE  macro  include/linux/fs.h  474  #define PAGECACHE_TAG_TOWRITE 2
mapping_tagged  prototype  include/linux/fs.h  476  int mapping_tagged(struct address_space *mapping, int tag);
mapping_mapped  function  include/linux/fs.h  481  static inline int mapping_mapped(struct address_space *mapping)
mapping_writably_mapped  function  include/linux/fs.h  493  static inline int mapping_writably_mapped(struct address_space *mapping)
__NEED_I_SIZE_ORDERED  macro  include/linux/fs.h  503  #define __NEED_I_SIZE_ORDERED
i_size_ordered_init  macro  include/linux/fs.h  506  #define i_size_ordered_init(inode) do { } while (0)
ACL_NOT_CACHED  macro  include/linux/fs.h  510  #define ACL_NOT_CACHED ((void *)(-1))
IOP_FASTPERM  macro  include/linux/fs.h  512  #define IOP_FASTPERM 0x0001
IOP_LOOKUP  macro  include/linux/fs.h  513  #define IOP_LOOKUP 0x0002
IOP_NOFOLLOW  macro  include/linux/fs.h  514  #define IOP_NOFOLLOW 0x0004
inode_unhashed  function  include/linux/fs.h  612  static inline int inode_unhashed(struct inode *inode)
i_size_read  function  include/linux/fs.h  647  static inline loff_t i_size_read(const struct inode *inode)
i_size_write  function  include/linux/fs.h  675  static inline void i_size_write(struct inode *inode, loff_t i_size)
i_uid_read  function  include/linux/fs.h  695  static inline uid_t i_uid_read(const struct inode *inode)
i_gid_read  function  include/linux/fs.h  700  static inline gid_t i_gid_read(const struct inode *inode)
i_uid_write  function  include/linux/fs.h  705  static inline void i_uid_write(struct inode *inode, uid_t uid)
i_gid_write  function  include/linux/fs.h  710  static inline void i_gid_write(struct inode *inode, gid_t gid)
iminor  function  include/linux/fs.h  715  static inline unsigned iminor(const struct inode *inode)
imajor  function  include/linux/fs.h  720  static inline unsigned imajor(const struct inode *inode)
I_BDEV  prototype  include/linux/fs.h  725  extern struct block_device *I_BDEV(struct inode *inode);
ra_has_index  function  include/linux/fs.h  752  static inline int ra_has_index(struct file_ra_state *ra, pgoff_t index)
FILE_MNT_WRITE_TAKEN  macro  include/linux/fs.h  758  #define FILE_MNT_WRITE_TAKEN 1
FILE_MNT_WRITE_RELEASED  macro  include/linux/fs.h  759  #define FILE_MNT_WRITE_RELEASED 2
f_dentry  macro  include/linux/fs.h  771  #define f_dentry f_path.dentry
f_vfsmnt  macro  include/linux/fs.h  772  #define f_vfsmnt f_path.mnt
get_file  function  include/linux/fs.h  816  static inline struct file *get_file(struct file *f)
fput_atomic  macro  include/linux/fs.h  821  #define fput_atomic(x) atomic_long_add_unless(&(x)->f_count, -1, 1)
file_count  macro  include/linux/fs.h  822  #define file_count(x) atomic_long_read(&(x)->f_count)
file_take_write  function  include/linux/fs.h  857  static inline void file_take_write(struct file *filp) {}
file_release_write  function  include/linux/fs.h  858  static inline void file_release_write(struct file *filp) {}
file_reset_write  function  include/linux/fs.h  859  static inline void file_reset_write(struct file *filp) {}
file_check_state  function  include/linux/fs.h  860  static inline void file_check_state(struct file *filp) {}
file_check_writeable  function  include/linux/fs.h  861  static inline int file_check_writeable(struct file *filp)
MAX_NON_LFS  macro  include/linux/fs.h  867  #define MAX_NON_LFS ((1UL<<31) - 1)
MAX_LFS_FILESIZE  macro  include/linux/fs.h  874  #define MAX_LFS_FILESIZE ((loff_t)0x7fffffffffffffffLL)
FL_POSIX  macro  include/linux/fs.h  877  #define FL_POSIX 1
FL_FLOCK  macro  include/linux/fs.h  878  #define FL_FLOCK 2
FL_ACCESS  macro  include/linux/fs.h  879  #define FL_ACCESS 8 /* not trying to lock, just looking */
FL_EXISTS  macro  include/linux/fs.h  880  #define FL_EXISTS 16 /* when unlocking, test for existence */
FL_LEASE  macro  include/linux/fs.h  881  #define FL_LEASE 32 /* lease held on this file */
FL_CLOSE  macro  include/linux/fs.h  882  #define FL_CLOSE 64 /* unlock on close */
FL_SLEEP  macro  include/linux/fs.h  883  #define FL_SLEEP 128 /* A blocking lock */
FL_DOWNGRADE_PENDING  macro  include/linux/fs.h  884  #define FL_DOWNGRADE_PENDING 256 /* Lease is being downgraded */
FL_UNLOCK_PENDING  macro  include/linux/fs.h  885  #define FL_UNLOCK_PENDING 512 /* Lease is being broken */
FILE_LOCK_DEFERRED  macro  include/linux/fs.h  891  #define FILE_LOCK_DEFERRED 1
locks_start_grace  prototype  include/linux/fs.h  920  void locks_start_grace(struct net *, struct lock_manager *);
locks_end_grace  prototype  include/linux/fs.h  921  void locks_end_grace(struct lock_manager *);
locks_in_grace  prototype  include/linux/fs.h  922  int locks_in_grace(struct net *);
INT_LIMIT  macro  include/linux/fs.h  960  #define INT_LIMIT(x) (~((x)1 << (sizeof(x)*8 - 1)))
OFFSET_MAX  macro  include/linux/fs.h  961  #define OFFSET_MAX INT_LIMIT(loff_t)
OFFT_OFFSET_MAX  macro  include/linux/fs.h  962  #define OFFT_OFFSET_MAX INT_LIMIT(off_t)
send_sigio  prototype  include/linux/fs.h  967  extern void send_sigio(struct fown_struct *fown, int fd, int band);
fcntl_getlk  function  include/linux/fs.h  1011  static inline int fcntl_getlk(struct file *file, struct flock __user *user)
fcntl_setlk  function  include/linux/fs.h  1017  static inline int fcntl_setlk(unsigned int fd, struct file *file,unsigned int cmd, struct flock __user *user)
fcntl_getlk64  function  include/linux/fs.h  1023  static inline int fcntl_getlk64(struct file *file, struct flock64 __user *user)
fcntl_setlk64  function  include/linux/fs.h  1029  static inline int fcntl_setlk64(unsigned int fd, struct file *file,unsigned int cmd, struct flock64 __user *user)
fcntl_setlease  function  include/linux/fs.h  1034  static inline int fcntl_setlease(unsigned int fd, struct file *filp, long arg)
fcntl_getlease  function  include/linux/fs.h  1039  static inline int fcntl_getlease(struct file *filp)
locks_free_lock  prototype  include/linux/fs.h  984  void locks_free_lock(struct file_lock *fl);
locks_init_lock  function  include/linux/fs.h  1044  static inline void locks_init_lock(struct file_lock *fl)
locks_alloc_lock  prototype  include/linux/fs.h  986  extern struct file_lock * locks_alloc_lock(void);
locks_copy_lock  function  include/linux/fs.h  1054  static inline void locks_copy_lock(struct file_lock *new, struct file_lock *fl)
__locks_copy_lock  function  include/linux/fs.h  1049  static inline void __locks_copy_lock(struct file_lock *new, struct file_lock *fl)
locks_remove_posix  function  include/linux/fs.h  1059  static inline void locks_remove_posix(struct file *filp, fl_owner_t owner)
locks_remove_flock  function  include/linux/fs.h  1064  static inline void locks_remove_flock(struct file *filp)
locks_release_private  prototype  include/linux/fs.h  991  extern void locks_release_private(struct file_lock *);
posix_test_lock  function  include/linux/fs.h  1069  static inline void posix_test_lock(struct file *filp, struct file_lock *fl)
posix_lock_file  function  include/linux/fs.h  1075  static inline int posix_lock_file(struct file *filp, struct file_lock *fl,struct file_lock *conflock)
posix_lock_file_wait  function  include/linux/fs.h  1080  static inline int posix_lock_file_wait(struct file *filp, struct file_lock *fl)
posix_unblock_lock  function  include/linux/fs.h  1086  static inline int posix_unblock_lock(struct file *filp,struct file_lock *waiter)
vfs_test_lock  function  include/linux/fs.h  1091  static inline int vfs_test_lock(struct file *filp, struct file_lock *fl)
vfs_lock_file  function  include/linux/fs.h  1097  static inline int vfs_lock_file(struct file *filp, unsigned int cmd,struct file_lock *fl, struct file_lock *conf)
vfs_cancel_lock  function  include/linux/fs.h  1102  static inline int vfs_cancel_lock(struct file *filp, struct file_lock *fl)
flock_lock_file_wait  function  include/linux/fs.h  1108  static inline int flock_lock_file_wait(struct file *filp,struct file_lock *request)
__break_lease  function  include/linux/fs.h  1113  static inline int __break_lease(struct inode *inode, unsigned int mode)
lease_get_mtime  function  include/linux/fs.h  1118  static inline void lease_get_mtime(struct inode *inode, struct timespec *time)
generic_setlease  function  include/linux/fs.h  1124  static inline int generic_setlease(struct file *filp, long arg,struct file_lock **flp)
vfs_setlease  function  include/linux/fs.h  1130  static inline int vfs_setlease(struct file *filp, long arg,struct file_lock **lease)
lease_modify  function  include/linux/fs.h  1135  static inline int lease_modify(struct file_lock **before, int arg)
lock_may_read  function  include/linux/fs.h  1141  static inline int lock_may_read(struct inode *inode, loff_t start,unsigned long len)
lock_may_write  function  include/linux/fs.h  1147  static inline int lock_may_write(struct inode *inode, loff_t start,unsigned long len)
locks_delete_block  function  include/linux/fs.h  1152  static inline void locks_delete_block(struct file_lock *waiter)
lock_flocks  function  include/linux/fs.h  1156  static inline void lock_flocks(void)
unlock_flocks  function  include/linux/fs.h  1160  static inline void unlock_flocks(void)
FASYNC_MAGIC  macro  include/linux/fs.h  1176  #define FASYNC_MAGIC 0x4601
fasync_helper  prototype  include/linux/fs.h  1179  extern int fasync_helper(int, struct file *, int, struct fasync_struct **);
fasync_insert_entry  prototype  include/linux/fs.h  1180  extern struct fasync_struct *fasync_insert_entry(int, struct file *, struct fasync_struct **, struct fasync_struct *);
fasync_remove_entry  prototype  include/linux/fs.h  1181  extern int fasync_remove_entry(struct file *, struct fasync_struct **);
fasync_alloc  prototype  include/linux/fs.h  1182  extern struct fasync_struct *fasync_alloc(void);
fasync_free  prototype  include/linux/fs.h  1183  extern void fasync_free(struct fasync_struct *);
kill_fasync  prototype  include/linux/fs.h  1186  extern void kill_fasync(struct fasync_struct **, int, int);
__f_setown  prototype  include/linux/fs.h  1188  extern int __f_setown(struct file *filp, struct pid *, enum pid_type, int force);
f_setown  prototype  include/linux/fs.h  1189  extern int f_setown(struct file *filp, unsigned long arg, int force);
f_delown  prototype  include/linux/fs.h  1190  extern void f_delown(struct file *filp);
f_getown  prototype  include/linux/fs.h  1191  extern pid_t f_getown(struct file *filp);
send_sigurg  prototype  include/linux/fs.h  1192  extern int send_sigurg(struct fown_struct *fown);
MNT_FORCE  macro  include/linux/fs.h  1200  #define MNT_FORCE 0x00000001 /* Attempt to forcibily umount */
MNT_DETACH  macro  include/linux/fs.h  1201  #define MNT_DETACH 0x00000002 /* Just detach from the tree */
MNT_EXPIRE  macro  include/linux/fs.h  1202  #define MNT_EXPIRE 0x00000004 /* Mark for expiry */
UMOUNT_NOFOLLOW  macro  include/linux/fs.h  1203  #define UMOUNT_NOFOLLOW 0x00000008 /* Don't follow symlink on umount */
UMOUNT_UNUSED  macro  include/linux/fs.h  1204  #define UMOUNT_UNUSED 0x80000000 /* Flag guaranteed to be unused */
SB_FREEZE_LEVELS  macro  include/linux/fs.h  1219  #define SB_FREEZE_LEVELS (SB_FREEZE_COMPLETE - 1)
prune_icache_sb  prototype  include/linux/fs.h  1326  extern void prune_icache_sb(struct super_block *sb, int nr_to_scan);
prune_dcache_sb  prototype  include/linux/fs.h  1327  extern void prune_dcache_sb(struct super_block *sb, int nr_to_scan);
current_fs_time  prototype  include/linux/fs.h  1329  extern struct timespec current_fs_time(struct super_block *sb);
__sb_end_write  prototype  include/linux/fs.h  1335  void __sb_end_write(struct super_block *sb, int level);
__sb_start_write  prototype  include/linux/fs.h  1336  int __sb_start_write(struct super_block *sb, int level, bool wait);
sb_end_write  function  include/linux/fs.h  1345  static inline void sb_end_write(struct super_block *sb)
sb_end_pagefault  function  include/linux/fs.h  1357  static inline void sb_end_pagefault(struct super_block *sb)
sb_end_intwrite  function  include/linux/fs.h  1369  static inline void sb_end_intwrite(struct super_block *sb)
sb_start_write  function  include/linux/fs.h  1393  static inline void sb_start_write(struct super_block *sb)
sb_start_write_trylock  function  include/linux/fs.h  1398  static inline int sb_start_write_trylock(struct super_block *sb)
sb_start_pagefault  function  include/linux/fs.h  1422  static inline void sb_start_pagefault(struct super_block *sb)
sb_start_intwrite  function  include/linux/fs.h  1440  static inline void sb_start_intwrite(struct super_block *sb)
inode_owner_or_capable  prototype  include/linux/fs.h  1446  extern bool inode_owner_or_capable(const struct inode *inode);
vfs_create  prototype  include/linux/fs.h  1451  extern int vfs_create(struct inode *, struct dentry *, umode_t, bool);
vfs_mkdir  prototype  include/linux/fs.h  1452  extern int vfs_mkdir(struct inode *, struct dentry *, umode_t);
vfs_mknod  prototype  include/linux/fs.h  1453  extern int vfs_mknod(struct inode *, struct dentry *, umode_t, dev_t);
vfs_symlink  prototype  include/linux/fs.h  1454  extern int vfs_symlink(struct inode *, struct dentry *, const char *);
vfs_link  prototype  include/linux/fs.h  1455  extern int vfs_link(struct dentry *, struct inode *, struct dentry *);
vfs_rmdir  prototype  include/linux/fs.h  1456  extern int vfs_rmdir(struct inode *, struct dentry *);
vfs_unlink  prototype  include/linux/fs.h  1457  extern int vfs_unlink(struct inode *, struct dentry *);
vfs_rename  prototype  include/linux/fs.h  1458  extern int vfs_rename(struct inode *, struct dentry *, struct inode *, struct dentry *);
dentry_unhash  prototype  include/linux/fs.h  1463  extern void dentry_unhash(struct dentry *dentry);
inode_init_owner  prototype  include/linux/fs.h  1469  extern void inode_init_owner(struct inode *inode, const struct inode *dir,umode_t mode);
fiemap_fill_next_extent  prototype  include/linux/fs.h  1481  int fiemap_fill_next_extent(struct fiemap_extent_info *info, u64 logical,u64 phys, u64 len, u32 flags);
fiemap_check_flags  prototype  include/linux/fs.h  1482  int fiemap_check_flags(struct fiemap_extent_info *fieinfo, u32 fs_flags);
DT_UNKNOWN  macro  include/linux/fs.h  1490  #define DT_UNKNOWN 0
DT_FIFO  macro  include/linux/fs.h  1491  #define DT_FIFO 1
DT_CHR  macro  include/linux/fs.h  1492  #define DT_CHR 2
DT_DIR  macro  include/linux/fs.h  1493  #define DT_DIR 4
DT_BLK  macro  include/linux/fs.h  1494  #define DT_BLK 6
DT_REG  macro  include/linux/fs.h  1495  #define DT_REG 8
DT_LNK  macro  include/linux/fs.h  1496  #define DT_LNK 10
DT_SOCK  macro  include/linux/fs.h  1497  #define DT_SOCK 12
DT_WHT  macro  include/linux/fs.h  1498  #define DT_WHT 14
HAVE_COMPAT_IOCTL  macro  include/linux/fs.h  1512  #define HAVE_COMPAT_IOCTL 1
HAVE_UNLOCKED_IOCTL  macro  include/linux/fs.h  1513  #define HAVE_UNLOCKED_IOCTL 1
rw_copy_check_uvector  prototype  include/linux/fs.h  1581  ssize_t rw_copy_check_uvector(int type, const struct iovec __user * uvector,unsigned long nr_segs, unsigned long fast_segs,struct iovec *fast_pointer,struct iovec **ret_pointer);
vfs_read  prototype  include/linux/fs.h  1583  extern ssize_t vfs_read(struct file *, char __user *, size_t, loff_t *);
vfs_write  prototype  include/linux/fs.h  1584  extern ssize_t vfs_write(struct file *, const char __user *, size_t, loff_t *);
vfs_readv  prototype  include/linux/fs.h  1586  extern ssize_t vfs_readv(struct file *, const struct iovec __user *,unsigned long, loff_t *);
vfs_writev  prototype  include/linux/fs.h  1588  extern ssize_t vfs_writev(struct file *, const struct iovec __user *,unsigned long, loff_t *);
S_SYNC  macro  include/linux/fs.h  1622  #define S_SYNC 1 /* Writes are synced at once */
S_NOATIME  macro  include/linux/fs.h  1623  #define S_NOATIME 2 /* Do not update access times */
S_APPEND  macro  include/linux/fs.h  1624  #define S_APPEND 4 /* Append-only file */
S_IMMUTABLE  macro  include/linux/fs.h  1625  #define S_IMMUTABLE 8 /* Immutable file */
S_DEAD  macro  include/linux/fs.h  1626  #define S_DEAD 16 /* removed, but still open directory */
S_NOQUOTA  macro  include/linux/fs.h  1627  #define S_NOQUOTA 32 /* Inode is not counted to quota */
S_DIRSYNC  macro  include/linux/fs.h  1628  #define S_DIRSYNC 64 /* Directory modifications are synchronous */
S_NOCMTIME  macro  include/linux/fs.h  1629  #define S_NOCMTIME 128 /* Do not update file c/mtime */
S_SWAPFILE  macro  include/linux/fs.h  1630  #define S_SWAPFILE 256 /* Do not truncate: swapon got its bmaps */
S_PRIVATE  macro  include/linux/fs.h  1631  #define S_PRIVATE 512 /* Inode is fs-internal */
S_IMA  macro  include/linux/fs.h  1632  #define S_IMA 1024 /* Inode has an associated IMA struct */
S_AUTOMOUNT  macro  include/linux/fs.h  1633  #define S_AUTOMOUNT 2048 /* Automount/referral quasi-directory */
S_NOSEC  macro  include/linux/fs.h  1634  #define S_NOSEC 4096 /* no suid or xattr security attributes */
__IS_FLG  macro  include/linux/fs.h  1649  #define __IS_FLG(inode, flg) ((inode)->i_sb->s_flags & (flg))
IS_RDONLY  macro  include/linux/fs.h  1651  #define IS_RDONLY(inode) ((inode)->i_sb->s_flags & MS_RDONLY)
IS_SYNC  macro  include/linux/fs.h  1652  #define IS_SYNC(inode) (__IS_FLG(inode, MS_SYNCHRONOUS) || \
IS_DIRSYNC  macro  include/linux/fs.h  1654  #define IS_DIRSYNC(inode) (__IS_FLG(inode, MS_SYNCHRONOUS|MS_DIRSYNC) || \
IS_MANDLOCK  macro  include/linux/fs.h  1656  #define IS_MANDLOCK(inode) __IS_FLG(inode, MS_MANDLOCK)
IS_NOATIME  macro  include/linux/fs.h  1657  #define IS_NOATIME(inode) __IS_FLG(inode, MS_RDONLY|MS_NOATIME)
IS_I_VERSION  macro  include/linux/fs.h  1658  #define IS_I_VERSION(inode) __IS_FLG(inode, MS_I_VERSION)
IS_NOQUOTA  macro  include/linux/fs.h  1660  #define IS_NOQUOTA(inode) ((inode)->i_flags & S_NOQUOTA)
IS_APPEND  macro  include/linux/fs.h  1661  #define IS_APPEND(inode) ((inode)->i_flags & S_APPEND)
IS_IMMUTABLE  macro  include/linux/fs.h  1662  #define IS_IMMUTABLE(inode) ((inode)->i_flags & S_IMMUTABLE)
IS_POSIXACL  macro  include/linux/fs.h  1663  #define IS_POSIXACL(inode) __IS_FLG(inode, MS_POSIXACL)
IS_DEADDIR  macro  include/linux/fs.h  1665  #define IS_DEADDIR(inode) ((inode)->i_flags & S_DEAD)
IS_NOCMTIME  macro  include/linux/fs.h  1666  #define IS_NOCMTIME(inode) ((inode)->i_flags & S_NOCMTIME)
IS_SWAPFILE  macro  include/linux/fs.h  1667  #define IS_SWAPFILE(inode) ((inode)->i_flags & S_SWAPFILE)
IS_PRIVATE  macro  include/linux/fs.h  1668  #define IS_PRIVATE(inode) ((inode)->i_flags & S_PRIVATE)
IS_IMA  macro  include/linux/fs.h  1669  #define IS_IMA(inode) ((inode)->i_flags & S_IMA)
IS_AUTOMOUNT  macro  include/linux/fs.h  1670  #define IS_AUTOMOUNT(inode) ((inode)->i_flags & S_AUTOMOUNT)
IS_NOSEC  macro  include/linux/fs.h  1671  #define IS_NOSEC(inode) ((inode)->i_flags & S_NOSEC)
I_DIRTY_SYNC  macro  include/linux/fs.h  1726  #define I_DIRTY_SYNC (1 << 0)
I_DIRTY_DATASYNC  macro  include/linux/fs.h  1727  #define I_DIRTY_DATASYNC (1 << 1)
I_DIRTY_PAGES  macro  include/linux/fs.h  1728  #define I_DIRTY_PAGES (1 << 2)
__I_NEW  macro  include/linux/fs.h  1729  #define __I_NEW 3
I_NEW  macro  include/linux/fs.h  1730  #define I_NEW (1 << __I_NEW)
I_WILL_FREE  macro  include/linux/fs.h  1731  #define I_WILL_FREE (1 << 4)
I_FREEING  macro  include/linux/fs.h  1732  #define I_FREEING (1 << 5)
I_CLEAR  macro  include/linux/fs.h  1733  #define I_CLEAR (1 << 6)
__I_SYNC  macro  include/linux/fs.h  1734  #define __I_SYNC 7
I_SYNC  macro  include/linux/fs.h  1735  #define I_SYNC (1 << __I_SYNC)
I_REFERENCED  macro  include/linux/fs.h  1736  #define I_REFERENCED (1 << 8)
__I_DIO_WAKEUP  macro  include/linux/fs.h  1737  #define __I_DIO_WAKEUP 9
I_DIO_WAKEUP  macro  include/linux/fs.h  1738  #define I_DIO_WAKEUP (1 << I_DIO_WAKEUP)
I_DIRTY  macro  include/linux/fs.h  1740  #define I_DIRTY (I_DIRTY_SYNC | I_DIRTY_DATASYNC | I_DIRTY_PAGES)
__mark_inode_dirty  prototype  include/linux/fs.h  1742  extern void __mark_inode_dirty(struct inode *, int);
mark_inode_dirty  function  include/linux/fs.h  1743  static inline void mark_inode_dirty(struct inode *inode)
mark_inode_dirty_sync  function  include/linux/fs.h  1748  static inline void mark_inode_dirty_sync(struct inode *inode)
inc_nlink  prototype  include/linux/fs.h  1753  extern void inc_nlink(struct inode *inode);
drop_nlink  prototype  include/linux/fs.h  1754  extern void drop_nlink(struct inode *inode);
clear_nlink  prototype  include/linux/fs.h  1755  extern void clear_nlink(struct inode *inode);
set_nlink  prototype  include/linux/fs.h  1756  extern void set_nlink(struct inode *inode, unsigned int nlink);
inode_inc_link_count  function  include/linux/fs.h  1758  static inline void inode_inc_link_count(struct inode *inode)
inode_dec_link_count  function  include/linux/fs.h  1764  static inline void inode_dec_link_count(struct inode *inode)
inode_inc_iversion  function  include/linux/fs.h  1778  static inline void inode_inc_iversion(struct inode *inode)
touch_atime  prototype  include/linux/fs.h  1792  extern void touch_atime(struct path *);
file_accessed  function  include/linux/fs.h  1793  static inline void file_accessed(struct file *file)
sync_inode  prototype  include/linux/fs.h  1799  int sync_inode(struct inode *inode, struct writeback_control *wbc);
sync_inode_metadata  prototype  include/linux/fs.h  1800  int sync_inode_metadata(struct inode *inode, int wait);
FS_REQUIRES_DEV  macro  include/linux/fs.h  1805  #define FS_REQUIRES_DEV 1
FS_BINARY_MOUNTDATA  macro  include/linux/fs.h  1806  #define FS_BINARY_MOUNTDATA 2
FS_HAS_SUBTYPE  macro  include/linux/fs.h  1807  #define FS_HAS_SUBTYPE 4
FS_USERNS_MOUNT  macro  include/linux/fs.h  1808  #define FS_USERNS_MOUNT 8 /* Can be mounted by userns root */
FS_USERNS_DEV_MOUNT  macro  include/linux/fs.h  1809  #define FS_USERNS_DEV_MOUNT 16 /* A userns mount does not imply MNT_NODEV */
FS_REVAL_DOT  macro  include/linux/fs.h  1810  #define FS_REVAL_DOT 16384 /* Check the paths ".", ".." for staleness */
FS_RENAME_DOES_D_MOVE  macro  include/linux/fs.h  1811  #define FS_RENAME_DOES_D_MOVE 32768 /* FS will handle d_move() during rename() internally. */
mount_ns  prototype  include/linux/fs.h  1830  extern struct dentry *mount_ns(struct file_system_type *fs_type, int flags,void *data, int (*fill_super)(struct super_block *, void *, int));
mount_bdev  prototype  include/linux/fs.h  1833  extern struct dentry *mount_bdev(struct file_system_type *fs_type,int flags, const char *dev_name, void *data,int (*fill_super)(struct super_block *, void *, int));
mount_single  prototype  include/linux/fs.h  1836  extern struct dentry *mount_single(struct file_system_type *fs_type,int flags, void *data,int (*fill_super)(struct super_block *, void *, int));
mount_nodev  prototype  include/linux/fs.h  1839  extern struct dentry *mount_nodev(struct file_system_type *fs_type,int flags, void *data,int (*fill_super)(struct super_block *, void *, int));
mount_subtree  prototype  include/linux/fs.h  1840  extern struct dentry *mount_subtree(struct vfsmount *mnt, const char *path);
generic_shutdown_super  prototype  include/linux/fs.h  1841  void generic_shutdown_super(struct super_block *sb);
kill_block_super  prototype  include/linux/fs.h  1842  void kill_block_super(struct super_block *sb);
kill_anon_super  prototype  include/linux/fs.h  1843  void kill_anon_super(struct super_block *sb);
kill_litter_super  prototype  include/linux/fs.h  1844  void kill_litter_super(struct super_block *sb);
deactivate_super  prototype  include/linux/fs.h  1845  void deactivate_super(struct super_block *sb);
deactivate_locked_super  prototype  include/linux/fs.h  1846  void deactivate_locked_super(struct super_block *sb);
set_anon_super  prototype  include/linux/fs.h  1847  int set_anon_super(struct super_block *s, void *data);
get_anon_bdev  prototype  include/linux/fs.h  1848  int get_anon_bdev(dev_t *);
free_anon_bdev  prototype  include/linux/fs.h  1849  void free_anon_bdev(dev_t);
sget  prototype  include/linux/fs.h  1853  struct super_block *sget(struct file_system_type *type,int (*test)(struct super_block *,void *),int (*set)(struct super_block *,void *),int flags, void *data);
mount_pseudo  prototype  include/linux/fs.h  1857  extern struct dentry *mount_pseudo(struct file_system_type *, char *,const struct super_operations *ops,const struct dentry_operations *dops,unsigned long);
fops_get  macro  include/linux/fs.h  1860  #define fops_get(fops) \
fops_put  macro  include/linux/fs.h  1862  #define fops_put(fops) \
register_filesystem  prototype  include/linux/fs.h  1865  extern int register_filesystem(struct file_system_type *);
unregister_filesystem  prototype  include/linux/fs.h  1866  extern int unregister_filesystem(struct file_system_type *);
kern_mount_data  prototype  include/linux/fs.h  1867  extern struct vfsmount *kern_mount_data(struct file_system_type *, void *data);
kern_mount  macro  include/linux/fs.h  1868  #define kern_mount(type) kern_mount_data(type, NULL)
kern_unmount  prototype  include/linux/fs.h  1869  extern void kern_unmount(struct vfsmount *mnt);
may_umount_tree  prototype  include/linux/fs.h  1870  extern int may_umount_tree(struct vfsmount *);
may_umount  prototype  include/linux/fs.h  1871  extern int may_umount(struct vfsmount *);
do_mount  prototype  include/linux/fs.h  1872  extern long do_mount(const char *, const char *, const char *, unsigned long, void *);
collect_mounts  prototype  include/linux/fs.h  1873  extern struct vfsmount *collect_mounts(struct path *);
drop_collected_mounts  prototype  include/linux/fs.h  1874  extern void drop_collected_mounts(struct vfsmount *);
iterate_mounts  prototype  include/linux/fs.h  1876  extern int iterate_mounts(int (*)(struct vfsmount *, void *), void *,struct vfsmount *);
vfs_statfs  prototype  include/linux/fs.h  1877  extern int vfs_statfs(struct path *, struct kstatfs *);
user_statfs  prototype  include/linux/fs.h  1878  extern int user_statfs(const char __user *, struct kstatfs *);
fd_statfs  prototype  include/linux/fs.h  1879  extern int fd_statfs(int, struct kstatfs *);
vfs_ustat  prototype  include/linux/fs.h  1880  extern int vfs_ustat(dev_t, struct kstatfs *);
freeze_super  prototype  include/linux/fs.h  1881  extern int freeze_super(struct super_block *super);
thaw_super  prototype  include/linux/fs.h  1882  extern int thaw_super(struct super_block *super);
our_mnt  prototype  include/linux/fs.h  1883  extern bool our_mnt(struct vfsmount *mnt);
current_umask  prototype  include/linux/fs.h  1885  extern int current_umask(void);
MAX_RW_COUNT  macro  include/linux/fs.h  1890  #define MAX_RW_COUNT (INT_MAX & PAGE_CACHE_MASK)
rw_verify_area  prototype  include/linux/fs.h  1891  extern int rw_verify_area(int, struct file *, loff_t *, size_t);
FLOCK_VERIFY_READ  macro  include/linux/fs.h  1893  #define FLOCK_VERIFY_READ 1
FLOCK_VERIFY_WRITE  macro  include/linux/fs.h  1894  #define FLOCK_VERIFY_WRITE 2
locks_mandatory_locked  function  include/linux/fs.h  1948  static inline int locks_mandatory_locked(struct inode *inode)
locks_mandatory_area  function  include/linux/fs.h  1955  static inline int locks_mandatory_area(int rw, struct inode *inode,struct file *filp, loff_t offset,size_t count)
__mandatory_lock  function  include/linux/fs.h  1960  static inline int __mandatory_lock(struct inode *inode)
mandatory_lock  function  include/linux/fs.h  1965  static inline int mandatory_lock(struct inode *inode)
locks_verify_locked  function  include/linux/fs.h  1970  static inline int locks_verify_locked(struct inode *inode)
locks_verify_truncate  function  include/linux/fs.h  1976  static inline int locks_verify_truncate(struct inode *inode, struct file *filp,size_t size)
break_lease  function  include/linux/fs.h  1981  static inline int break_lease(struct inode *inode, unsigned int mode)
vfs_truncate  prototype  include/linux/fs.h  1997  extern long vfs_truncate(struct path *, loff_t);
do_truncate  prototype  include/linux/fs.h  1999  extern int do_truncate(struct dentry *, loff_t start, unsigned int time_attrs,struct file *filp);
do_fallocate  prototype  include/linux/fs.h  2001  extern int do_fallocate(struct file *file, int mode, loff_t offset,loff_t len);
do_sys_open  prototype  include/linux/fs.h  2003  extern long do_sys_open(int dfd, const char __user *filename, int flags,umode_t mode);
file_open_name  prototype  include/linux/fs.h  2004  extern struct file *file_open_name(struct filename *, int, umode_t);
filp_open  prototype  include/linux/fs.h  2005  extern struct file *filp_open(const char *, int, umode_t);
file_open_root  prototype  include/linux/fs.h  2007  extern struct file *file_open_root(struct dentry *, struct vfsmount *,const char *, int);
dentry_open  prototype  include/linux/fs.h  2008  extern struct file * dentry_open(const struct path *, int, const struct cred *);
filp_close  prototype  include/linux/fs.h  2009  extern int filp_close(struct file *, fl_owner_t id);
getname  prototype  include/linux/fs.h  2011  extern struct filename *getname(const char __user *);
finish_open  prototype  include/linux/fs.h  2019  extern int finish_open(struct file *file, struct dentry *dentry,int (*open)(struct inode *, struct file *),int *opened);
finish_no_open  prototype  include/linux/fs.h  2020  extern int finish_no_open(struct file *file, struct dentry *dentry);
ioctl_preallocate  prototype  include/linux/fs.h  2024  extern int ioctl_preallocate(struct file *filp, void __user *argp);
vfs_caches_init_early  prototype  include/linux/fs.h  2027  extern void __init vfs_caches_init_early(void);
vfs_caches_init  prototype  include/linux/fs.h  2028  extern void __init vfs_caches_init(unsigned long);
final_putname  prototype  include/linux/fs.h  2032  extern void final_putname(struct filename *name);
__getname  macro  include/linux/fs.h  2034  #define __getname() kmem_cache_alloc(names_cachep, GFP_KERNEL)
__putname  macro  include/linux/fs.h  2035  #define __putname(name) kmem_cache_free(names_cachep, (void *)(name))
putname  prototype  include/linux/fs.h  2039  extern void putname(struct filename *name);
register_blkdev  prototype  include/linux/fs.h  2043  extern int register_blkdev(unsigned int, const char *);
unregister_blkdev  prototype  include/linux/fs.h  2044  extern void unregister_blkdev(unsigned int, const char *);
bdget  prototype  include/linux/fs.h  2045  extern struct block_device *bdget(dev_t);
bdgrab  prototype  include/linux/fs.h  2046  extern struct block_device *bdgrab(struct block_device *bdev);
bd_set_size  prototype  include/linux/fs.h  2047  extern void bd_set_size(struct block_device *, loff_t size);
bd_forget  function  include/linux/fs.h  2059  static inline void bd_forget(struct inode *inode) {}
bdput  prototype  include/linux/fs.h  2049  extern void bdput(struct block_device *);
invalidate_bdev  function  include/linux/fs.h  2062  static inline void invalidate_bdev(struct block_device *bdev) {}
iterate_bdevs  function  include/linux/fs.h  2074  static inline void iterate_bdevs(void (*f)(struct block_device *, void *), void *arg)
sync_blockdev  function  include/linux/fs.h  2060  static inline int sync_blockdev(struct block_device *bdev) { return 0; }
kill_bdev  function  include/linux/fs.h  2061  static inline void kill_bdev(struct block_device *bdev) {}
freeze_bdev  function  include/linux/fs.h  2064  static inline struct super_block *freeze_bdev(struct block_device *sb)
emergency_thaw_all  prototype  include/linux/fs.h  2055  extern void emergency_thaw_all(void);
thaw_bdev  function  include/linux/fs.h  2069  static inline int thaw_bdev(struct block_device *bdev, struct super_block *sb)
fsync_bdev  prototype  include/linux/fs.h  2057  extern int fsync_bdev(struct block_device *);
sync_filesystem  prototype  include/linux/fs.h  2078  extern int sync_filesystem(struct super_block *);
ioctl_by_bdev  prototype  include/linux/fs.h  2084  extern int ioctl_by_bdev(struct block_device *, unsigned, unsigned long);
blkdev_ioctl  prototype  include/linux/fs.h  2085  extern int blkdev_ioctl(struct block_device *, fmode_t, unsigned, unsigned long);
compat_blkdev_ioctl  prototype  include/linux/fs.h  2086  extern long compat_blkdev_ioctl(struct file *, unsigned, unsigned long);
blkdev_get  prototype  include/linux/fs.h  2087  extern int blkdev_get(struct block_device *bdev, fmode_t mode, void *holder);
blkdev_get_by_path  prototype  include/linux/fs.h  2089  extern struct block_device *blkdev_get_by_path(const char *path, fmode_t mode,void *holder);
blkdev_get_by_dev  prototype  include/linux/fs.h  2091  extern struct block_device *blkdev_get_by_dev(dev_t dev, fmode_t mode,void *holder);
blkdev_put  prototype  include/linux/fs.h  2092  extern int blkdev_put(struct block_device *bdev, fmode_t mode);
bd_link_disk_holder  function  include/linux/fs.h  2099  static inline int bd_link_disk_holder(struct block_device *bdev,struct gendisk *disk)
bd_unlink_disk_holder  function  include/linux/fs.h  2104  static inline void bd_unlink_disk_holder(struct block_device *bdev,struct gendisk *disk)
CHRDEV_MAJOR_HASH_SIZE  macro  include/linux/fs.h  2111  #define CHRDEV_MAJOR_HASH_SIZE 255
alloc_chrdev_region  prototype  include/linux/fs.h  2112  extern int alloc_chrdev_region(dev_t *, unsigned, unsigned, const char *);
register_chrdev_region  prototype  include/linux/fs.h  2113  extern int register_chrdev_region(dev_t, unsigned, const char *);
__register_chrdev  prototype  include/linux/fs.h  2116  extern int __register_chrdev(unsigned int major, unsigned int baseminor,unsigned int count, const char *name,const struct file_operations *fops);
__unregister_chrdev  prototype  include/linux/fs.h  2118  extern void __unregister_chrdev(unsigned int major, unsigned int baseminor,unsigned int count, const char *name);
unregister_chrdev_region  prototype  include/linux/fs.h  2119  extern void unregister_chrdev_region(dev_t, unsigned);
chrdev_show  prototype  include/linux/fs.h  2120  extern void chrdev_show(struct seq_file *,off_t);
register_chrdev  function  include/linux/fs.h  2123  static inline int register_chrdev(unsigned int major, const char *name,const struct file_operations *fops)
unregister_chrdev  function  include/linux/fs.h  2128  static inline void unregister_chrdev(unsigned int major, const char *name)
BDEVNAME_SIZE  macro  include/linux/fs.h  2134  #define BDEVNAME_SIZE 32 /* Largest string for a blockdev identifier */
BDEVT_SIZE  macro  include/linux/fs.h  2135  #define BDEVT_SIZE 10 /* Largest string for MAJ:MIN for blkdev */
BLKDEV_MAJOR_HASH_SIZE  macro  include/linux/fs.h  2145  #define BLKDEV_MAJOR_HASH_SIZE 0
__bdevname  prototype  include/linux/fs.h  2139  extern const char *__bdevname(dev_t, char *buffer);
bdevname  prototype  include/linux/fs.h  2140  extern const char *bdevname(struct block_device *bdev, char *buffer);
lookup_bdev  prototype  include/linux/fs.h  2141  extern struct block_device *lookup_bdev(const char *);
blkdev_show  prototype  include/linux/fs.h  2142  extern void blkdev_show(struct seq_file *,off_t);
init_special_inode  prototype  include/linux/fs.h  2148  extern void init_special_inode(struct inode *, umode_t, dev_t);
make_bad_inode  prototype  include/linux/fs.h  2151  extern void make_bad_inode(struct inode *);
is_bad_inode  prototype  include/linux/fs.h  2152  extern int is_bad_inode(struct inode *);
bio_rw  macro  include/linux/fs.h  2162  #define bio_rw(bio) ((bio)->bi_rw & (RW_MASK | RWA_MASK))
bio_data_dir  macro  include/linux/fs.h  2167  #define bio_data_dir(bio) ((bio)->bi_rw & 1)
check_disk_size_change  prototype  include/linux/fs.h  2170  extern void check_disk_size_change(struct gendisk *disk,struct block_device *bdev);
revalidate_disk  prototype  include/linux/fs.h  2171  extern int revalidate_disk(struct gendisk *);
check_disk_change  prototype  include/linux/fs.h  2172  extern int check_disk_change(struct block_device *);
__invalidate_device  prototype  include/linux/fs.h  2173  extern int __invalidate_device(struct block_device *, bool);
invalidate_partition  prototype  include/linux/fs.h  2174  extern int invalidate_partition(struct gendisk *, int);
invalidate_mapping_pages  prototype  include/linux/fs.h  2177  unsigned long invalidate_mapping_pages(struct address_space *mapping,pgoff_t start, pgoff_t end);
invalidate_remote_inode  function  include/linux/fs.h  2179  static inline void invalidate_remote_inode(struct inode *inode)
invalidate_inode_pages2  prototype  include/linux/fs.h  2185  extern int invalidate_inode_pages2(struct address_space *mapping);
invalidate_inode_pages2_range  prototype  include/linux/fs.h  2187  extern int invalidate_inode_pages2_range(struct address_space *mapping,pgoff_t start, pgoff_t end);
write_inode_now  prototype  include/linux/fs.h  2188  extern int write_inode_now(struct inode *, int);
filemap_fdatawrite  prototype  include/linux/fs.h  2189  extern int filemap_fdatawrite(struct address_space *);
filemap_flush  prototype  include/linux/fs.h  2190  extern int filemap_flush(struct address_space *);
filemap_fdatawait  prototype  include/linux/fs.h  2191  extern int filemap_fdatawait(struct address_space *);
filemap_fdatawait_range  prototype  include/linux/fs.h  2193  extern int filemap_fdatawait_range(struct address_space *, loff_t lstart,loff_t lend);
filemap_write_and_wait  prototype  include/linux/fs.h  2194  extern int filemap_write_and_wait(struct address_space *mapping);
filemap_write_and_wait_range  prototype  include/linux/fs.h  2196  extern int filemap_write_and_wait_range(struct address_space *mapping,loff_t lstart, loff_t lend);
__filemap_fdatawrite_range  prototype  include/linux/fs.h  2198  extern int __filemap_fdatawrite_range(struct address_space *mapping,loff_t start, loff_t end, int sync_mode);
filemap_fdatawrite_range  prototype  include/linux/fs.h  2200  extern int filemap_fdatawrite_range(struct address_space *mapping,loff_t start, loff_t end);
vfs_fsync_range  prototype  include/linux/fs.h  2203  extern int vfs_fsync_range(struct file *file, loff_t start, loff_t end,int datasync);
vfs_fsync  prototype  include/linux/fs.h  2204  extern int vfs_fsync(struct file *file, int datasync);
generic_write_sync  prototype  include/linux/fs.h  2205  extern int generic_write_sync(struct file *file, loff_t pos, loff_t count);
emergency_sync  prototype  include/linux/fs.h  2206  extern void emergency_sync(void);
emergency_remount  prototype  include/linux/fs.h  2207  extern void emergency_remount(void);
bmap  prototype  include/linux/fs.h  2209  extern sector_t bmap(struct inode *, sector_t);
notify_change  prototype  include/linux/fs.h  2211  extern int notify_change(struct dentry *, struct iattr *);
inode_permission  prototype  include/linux/fs.h  2212  extern int inode_permission(struct inode *, int);
generic_permission  prototype  include/linux/fs.h  2213  extern int generic_permission(struct inode *, int);
execute_ok  function  include/linux/fs.h  2215  static inline bool execute_ok(struct inode *inode)
get_write_access  function  include/linux/fs.h  2236  static inline int get_write_access(struct inode *inode)
deny_write_access  function  include/linux/fs.h  2240  static inline int deny_write_access(struct file *file)
put_write_access  function  include/linux/fs.h  2245  static inline void put_write_access(struct inode * inode)
allow_write_access  function  include/linux/fs.h  2249  static inline void allow_write_access(struct file *file)
i_readcount_dec  function  include/linux/fs.h  2265  static inline void i_readcount_dec(struct inode *inode)
i_readcount_inc  function  include/linux/fs.h  2269  static inline void i_readcount_inc(struct inode *inode)
do_pipe_flags  prototype  include/linux/fs.h  2274  extern int do_pipe_flags(int *, int);
kernel_read  prototype  include/linux/fs.h  2276  extern int kernel_read(struct file *, loff_t, char *, unsigned long);
open_exec  prototype  include/linux/fs.h  2277  extern struct file * open_exec(const char *);
is_subdir  prototype  include/linux/fs.h  2280  extern int is_subdir(struct dentry *, struct dentry *);
path_is_under  prototype  include/linux/fs.h  2281  extern int path_is_under(struct path *, struct path *);
find_inode_number  prototype  include/linux/fs.h  2282  extern ino_t find_inode_number(struct dentry *, struct qstr *);
default_llseek  prototype  include/linux/fs.h  2287  extern loff_t default_llseek(struct file *file, loff_t offset, int whence);
vfs_llseek  prototype  include/linux/fs.h  2289  extern loff_t vfs_llseek(struct file *file, loff_t offset, int whence);
inode_init_always  prototype  include/linux/fs.h  2291  extern int inode_init_always(struct super_block *, struct inode *);
inode_init_once  prototype  include/linux/fs.h  2292  extern void inode_init_once(struct inode *);
address_space_init_once  prototype  include/linux/fs.h  2293  extern void address_space_init_once(struct address_space *mapping);
ihold  prototype  include/linux/fs.h  2294  extern void ihold(struct inode * inode);
iput  prototype  include/linux/fs.h  2295  extern void iput(struct inode *);
igrab  prototype  include/linux/fs.h  2296  extern struct inode * igrab(struct inode *);
iunique  prototype  include/linux/fs.h  2297  extern ino_t iunique(struct super_block *, ino_t);
inode_needs_sync  prototype  include/linux/fs.h  2298  extern int inode_needs_sync(struct inode *inode);
generic_delete_inode  prototype  include/linux/fs.h  2299  extern int generic_delete_inode(struct inode *inode);
generic_drop_inode  function  include/linux/fs.h  2300  static inline int generic_drop_inode(struct inode *inode)
ilookup5_nowait  prototype  include/linux/fs.h  2307  extern struct inode *ilookup5_nowait(struct super_block *sb,unsigned long hashval, int (*test)(struct inode *, void *),void *data);
ilookup5  prototype  include/linux/fs.h  2309  extern struct inode *ilookup5(struct super_block *sb, unsigned long hashval,int (*test)(struct inode *, void *), void *data);
ilookup  prototype  include/linux/fs.h  2310  extern struct inode *ilookup(struct super_block *sb, unsigned long ino);
iget5_locked  prototype  include/linux/fs.h  2312  extern struct inode * iget5_locked(struct super_block *, unsigned long, int (*test)(struct inode *, void *), int (*set)(struct inode *, void *), void *);
iget_locked  prototype  include/linux/fs.h  2313  extern struct inode * iget_locked(struct super_block *, unsigned long);
insert_inode_locked4  prototype  include/linux/fs.h  2314  extern int insert_inode_locked4(struct inode *, unsigned long, int (*test)(struct inode *, void *), void *);
insert_inode_locked  prototype  include/linux/fs.h  2315  extern int insert_inode_locked(struct inode *);
lockdep_annotate_inode_mutex_key  function  include/linux/fs.h  2319  static inline void lockdep_annotate_inode_mutex_key(struct inode *inode) { };
unlock_new_inode  prototype  include/linux/fs.h  2321  extern void unlock_new_inode(struct inode *);
get_next_ino  prototype  include/linux/fs.h  2322  extern unsigned int get_next_ino(void);
__iget  prototype  include/linux/fs.h  2324  extern void __iget(struct inode * inode);
iget_failed  prototype  include/linux/fs.h  2325  extern void iget_failed(struct inode *);
clear_inode  prototype  include/linux/fs.h  2326  extern void clear_inode(struct inode *);
__destroy_inode  prototype  include/linux/fs.h  2327  extern void __destroy_inode(struct inode *);
new_inode_pseudo  prototype  include/linux/fs.h  2328  extern struct inode *new_inode_pseudo(struct super_block *sb);
new_inode  prototype  include/linux/fs.h  2329  extern struct inode *new_inode(struct super_block *sb);
free_inode_nonrcu  prototype  include/linux/fs.h  2330  extern void free_inode_nonrcu(struct inode *inode);
should_remove_suid  prototype  include/linux/fs.h  2331  extern int should_remove_suid(struct dentry *);
file_remove_suid  prototype  include/linux/fs.h  2332  extern int file_remove_suid(struct file *);
__insert_inode_hash  prototype  include/linux/fs.h  2334  extern void __insert_inode_hash(struct inode *, unsigned long hashval);
insert_inode_hash  function  include/linux/fs.h  2335  static inline void insert_inode_hash(struct inode *inode)
__remove_inode_hash  prototype  include/linux/fs.h  2340  extern void __remove_inode_hash(struct inode *);
remove_inode_hash  function  include/linux/fs.h  2341  static inline void remove_inode_hash(struct inode *inode)
inode_sb_list_add  prototype  include/linux/fs.h  2347  extern void inode_sb_list_add(struct inode *inode);
submit_bio  prototype  include/linux/fs.h  2350  extern void submit_bio(int, struct bio *);
bdev_read_only  prototype  include/linux/fs.h  2351  extern int bdev_read_only(struct block_device *);
set_blocksize  prototype  include/linux/fs.h  2353  extern int set_blocksize(struct block_device *, int);
sb_set_blocksize  prototype  include/linux/fs.h  2354  extern int sb_set_blocksize(struct super_block *, int);
sb_min_blocksize  prototype  include/linux/fs.h  2355  extern int sb_min_blocksize(struct super_block *, int);
generic_file_mmap  prototype  include/linux/fs.h  2357  extern int generic_file_mmap(struct file *, struct vm_area_struct *);
generic_file_readonly_mmap  prototype  include/linux/fs.h  2358  extern int generic_file_readonly_mmap(struct file *, struct vm_area_struct *);
generic_file_remap_pages  prototype  include/linux/fs.h  2360  extern int generic_file_remap_pages(struct vm_area_struct *, unsigned long addr,unsigned long size, pgoff_t pgoff);
file_read_actor  prototype  include/linux/fs.h  2361  extern int file_read_actor(read_descriptor_t * desc, struct page *page, unsigned long offset, unsigned long size);
generic_write_checks  prototype  include/linux/fs.h  2362  int generic_write_checks(struct file *file, loff_t *pos, size_t *count, int isblk);
generic_file_aio_read  prototype  include/linux/fs.h  2363  extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec *, unsigned long, loff_t);
__generic_file_aio_write  prototype  include/linux/fs.h  2365  extern ssize_t __generic_file_aio_write(struct kiocb *, const struct iovec *, unsigned long,loff_t *);
generic_file_aio_write  prototype  include/linux/fs.h  2366  extern ssize_t generic_file_aio_write(struct kiocb *, const struct iovec *, unsigned long, loff_t);
generic_file_direct_write  prototype  include/linux/fs.h  2368  extern ssize_t generic_file_direct_write(struct kiocb *, const struct iovec *,unsigned long *, loff_t, loff_t *, size_t, size_t);
generic_file_buffered_write  prototype  include/linux/fs.h  2370  extern ssize_t generic_file_buffered_write(struct kiocb *, const struct iovec *,unsigned long, loff_t, loff_t *, size_t, ssize_t);
do_sync_read  prototype  include/linux/fs.h  2371  extern ssize_t do_sync_read(struct file *filp, char __user *buf, size_t len, loff_t *ppos);
do_sync_write  prototype  include/linux/fs.h  2372  extern ssize_t do_sync_write(struct file *filp, const char __user *buf, size_t len, loff_t *ppos);
generic_segment_checks  prototype  include/linux/fs.h  2374  extern int generic_segment_checks(const struct iovec *iov,unsigned long *nr_segs, size_t *count, int access_flags);
blkdev_aio_write  prototype  include/linux/fs.h  2378  extern ssize_t blkdev_aio_write(struct kiocb *iocb, const struct iovec *iov,unsigned long nr_segs, loff_t pos);
blkdev_fsync  prototype  include/linux/fs.h  2380  extern int blkdev_fsync(struct file *filp, loff_t start, loff_t end,int datasync);
block_sync_page  prototype  include/linux/fs.h  2381  extern void block_sync_page(struct page *page);
generic_file_splice_read  prototype  include/linux/fs.h  2385  extern ssize_t generic_file_splice_read(struct file *, loff_t *,struct pipe_inode_info *, size_t, unsigned int);
default_file_splice_read  prototype  include/linux/fs.h  2387  extern ssize_t default_file_splice_read(struct file *, loff_t *,struct pipe_inode_info *, size_t, unsigned int);
generic_file_splice_write  prototype  include/linux/fs.h  2389  extern ssize_t generic_file_splice_write(struct pipe_inode_info *,struct file *, loff_t *, size_t, unsigned int);
generic_splice_sendpage  prototype  include/linux/fs.h  2391  extern ssize_t generic_splice_sendpage(struct pipe_inode_info *pipe,struct file *out, loff_t *, size_t len, unsigned int flags);
do_splice_direct  prototype  include/linux/fs.h  2393  extern long do_splice_direct(struct file *in, loff_t *ppos, struct file *out,size_t len, unsigned int flags);
file_ra_state_init  prototype  include/linux/fs.h  2396  file_ra_state_init(struct file_ra_state *ra, struct address_space *mapping);
noop_llseek  prototype  include/linux/fs.h  2397  extern loff_t noop_llseek(struct file *file, loff_t offset, int whence);
no_llseek  prototype  include/linux/fs.h  2398  extern loff_t no_llseek(struct file *file, loff_t offset, int whence);
generic_file_llseek  prototype  include/linux/fs.h  2399  extern loff_t generic_file_llseek(struct file *file, loff_t offset, int whence);
generic_file_llseek_size  prototype  include/linux/fs.h  2401  extern loff_t generic_file_llseek_size(struct file *file, loff_t offset,int whence, loff_t maxsize, loff_t eof);
generic_file_open  prototype  include/linux/fs.h  2402  extern int generic_file_open(struct inode * inode, struct file * filp);
nonseekable_open  prototype  include/linux/fs.h  2403  extern int nonseekable_open(struct inode * inode, struct file * filp);
xip_file_read  prototype  include/linux/fs.h  2407  extern ssize_t xip_file_read(struct file *filp, char __user *buf, size_t len,loff_t *ppos);
xip_file_mmap  prototype  include/linux/fs.h  2408  extern int xip_file_mmap(struct file * file, struct vm_area_struct * vma);
xip_file_write  prototype  include/linux/fs.h  2410  extern ssize_t xip_file_write(struct file *filp, const char __user *buf,size_t len, loff_t *ppos);
xip_truncate_page  function  include/linux/fs.h  2413  static inline int xip_truncate_page(struct address_space *mapping, loff_t from)
dio_end_io  prototype  include/linux/fs.h  2431  void dio_end_io(struct bio *bio, int error);
__blockdev_direct_IO  prototype  include/linux/fs.h  2436  ssize_t __blockdev_direct_IO(int rw, struct kiocb *iocb, struct inode *inode,struct block_device *bdev, const struct iovec *iov, loff_t offset,unsigned long nr_segs, get_block_t get_block, dio_iodone_t end_io,dio_submit_t submit_io,	int flags);
blockdev_direct_IO  function  include/linux/fs.h  2440  static inline ssize_t blockdev_direct_IO(int rw, struct kiocb *iocb,struct inode *inode, const struct iovec *iov, loff_t offset,unsigned long nr_segs, get_block_t get_block)
inode_dio_wait  prototype  include/linux/fs.h  2448  void inode_dio_wait(struct inode *inode);
inode_dio_done  prototype  include/linux/fs.h  2449  void inode_dio_done(struct inode *inode);
special_file  macro  include/linux/fs.h  2453  #define special_file(m) (S_ISCHR(m)||S_ISBLK(m)||S_ISFIFO(m)||S_ISSOCK(m))
vfs_readlink  prototype  include/linux/fs.h  2455  extern int vfs_readlink(struct dentry *, char __user *, int, const char *);
vfs_follow_link  prototype  include/linux/fs.h  2456  extern int vfs_follow_link(struct nameidata *, const char *);
page_readlink  prototype  include/linux/fs.h  2457  extern int page_readlink(struct dentry *, char __user *, int);
page_follow_link_light  prototype  include/linux/fs.h  2458  extern void *page_follow_link_light(struct dentry *, struct nameidata *);
page_put_link  prototype  include/linux/fs.h  2459  extern void page_put_link(struct dentry *, struct nameidata *, void *);
__page_symlink  prototype  include/linux/fs.h  2461  extern int __page_symlink(struct inode *inode, const char *symname, int len,int nofs);
page_symlink  prototype  include/linux/fs.h  2462  extern int page_symlink(struct inode *inode, const char *symname, int len);
generic_readlink  prototype  include/linux/fs.h  2464  extern int generic_readlink(struct dentry *, char __user *, int);
generic_fillattr  prototype  include/linux/fs.h  2465  extern void generic_fillattr(struct inode *, struct kstat *);
vfs_getattr  prototype  include/linux/fs.h  2466  extern int vfs_getattr(struct vfsmount *, struct dentry *, struct kstat *);
__inode_add_bytes  prototype  include/linux/fs.h  2467  void __inode_add_bytes(struct inode *inode, loff_t bytes);
inode_add_bytes  prototype  include/linux/fs.h  2468  void inode_add_bytes(struct inode *inode, loff_t bytes);
inode_sub_bytes  prototype  include/linux/fs.h  2469  void inode_sub_bytes(struct inode *inode, loff_t bytes);
inode_get_bytes  prototype  include/linux/fs.h  2470  loff_t inode_get_bytes(struct inode *inode);
inode_set_bytes  prototype  include/linux/fs.h  2471  void inode_set_bytes(struct inode *inode, loff_t bytes);
vfs_readdir  prototype  include/linux/fs.h  2473  extern int vfs_readdir(struct file *, filldir_t, void *);
vfs_stat  prototype  include/linux/fs.h  2475  extern int vfs_stat(const char __user *, struct kstat *);
vfs_lstat  prototype  include/linux/fs.h  2476  extern int vfs_lstat(const char __user *, struct kstat *);
vfs_fstat  prototype  include/linux/fs.h  2477  extern int vfs_fstat(unsigned int, struct kstat *);
vfs_fstatat  prototype  include/linux/fs.h  2478  extern int vfs_fstatat(int , const char __user *, struct kstat *, int);
do_vfs_ioctl  prototype  include/linux/fs.h  2481  extern int do_vfs_ioctl(struct file *filp, unsigned int fd, unsigned int cmd,unsigned long arg);
__generic_block_fiemap  prototype  include/linux/fs.h  2485  extern int __generic_block_fiemap(struct inode *inode,struct fiemap_extent_info *fieinfo,loff_t start, loff_t len,get_block_t *get_block);
generic_block_fiemap  prototype  include/linux/fs.h  2488  extern int generic_block_fiemap(struct inode *inode,struct fiemap_extent_info *fieinfo, u64 start,u64 len, get_block_t *get_block);
get_filesystem  prototype  include/linux/fs.h  2490  extern void get_filesystem(struct file_system_type *fs);
put_filesystem  prototype  include/linux/fs.h  2491  extern void put_filesystem(struct file_system_type *fs);
get_fs_type  prototype  include/linux/fs.h  2492  extern struct file_system_type *get_fs_type(const char *name);
get_super  prototype  include/linux/fs.h  2493  extern struct super_block *get_super(struct block_device *);
get_super_thawed  prototype  include/linux/fs.h  2494  extern struct super_block *get_super_thawed(struct block_device *);
get_active_super  prototype  include/linux/fs.h  2495  extern struct super_block *get_active_super(struct block_device *bdev);
drop_super  prototype  include/linux/fs.h  2496  extern void drop_super(struct super_block *sb);
iterate_supers  prototype  include/linux/fs.h  2497  extern void iterate_supers(void (*)(struct super_block *, void *), void *);
iterate_supers_type  prototype  include/linux/fs.h  2499  extern void iterate_supers_type(struct file_system_type *,void (*)(struct super_block *, void *), void *);
dcache_dir_open  prototype  include/linux/fs.h  2501  extern int dcache_dir_open(struct inode *, struct file *);
dcache_dir_close  prototype  include/linux/fs.h  2502  extern int dcache_dir_close(struct inode *, struct file *);
dcache_dir_lseek  prototype  include/linux/fs.h  2503  extern loff_t dcache_dir_lseek(struct file *, loff_t, int);
dcache_readdir  prototype  include/linux/fs.h  2504  extern int dcache_readdir(struct file *, void *, filldir_t);
simple_setattr  prototype  include/linux/fs.h  2505  extern int simple_setattr(struct dentry *, struct iattr *);
simple_getattr  prototype  include/linux/fs.h  2506  extern int simple_getattr(struct vfsmount *, struct dentry *, struct kstat *);
simple_statfs  prototype  include/linux/fs.h  2507  extern int simple_statfs(struct dentry *, struct kstatfs *);
simple_open  prototype  include/linux/fs.h  2508  extern int simple_open(struct inode *inode, struct file *file);
simple_link  prototype  include/linux/fs.h  2509  extern int simple_link(struct dentry *, struct inode *, struct dentry *);
simple_unlink  prototype  include/linux/fs.h  2510  extern int simple_unlink(struct inode *, struct dentry *);
simple_rmdir  prototype  include/linux/fs.h  2511  extern int simple_rmdir(struct inode *, struct dentry *);
simple_rename  prototype  include/linux/fs.h  2512  extern int simple_rename(struct inode *, struct dentry *, struct inode *, struct dentry *);
noop_fsync  prototype  include/linux/fs.h  2513  extern int noop_fsync(struct file *, loff_t, loff_t, int);
simple_empty  prototype  include/linux/fs.h  2514  extern int simple_empty(struct dentry *);
simple_readpage  prototype  include/linux/fs.h  2515  extern int simple_readpage(struct file *file, struct page *page);
simple_write_begin  prototype  include/linux/fs.h  2518  extern int simple_write_begin(struct file *file, struct address_space *mapping,loff_t pos, unsigned len, unsigned flags,struct page **pagep, void **fsdata);
simple_write_end  prototype  include/linux/fs.h  2521  extern int simple_write_end(struct file *file, struct address_space *mapping,loff_t pos, unsigned len, unsigned copied,struct page *page, void *fsdata);
simple_lookup  prototype  include/linux/fs.h  2523  extern struct dentry *simple_lookup(struct inode *, struct dentry *, unsigned int flags);
generic_read_dir  prototype  include/linux/fs.h  2524  extern ssize_t generic_read_dir(struct file *, char __user *, size_t, loff_t *);
d_alloc_name  prototype  include/linux/fs.h  2528  struct dentry *d_alloc_name(struct dentry *, const char *);
simple_fill_super  prototype  include/linux/fs.h  2529  extern int simple_fill_super(struct super_block *, unsigned long, struct tree_descr *);
simple_pin_fs  prototype  include/linux/fs.h  2530  extern int simple_pin_fs(struct file_system_type *, struct vfsmount **mount, int *count);
simple_release_fs  prototype  include/linux/fs.h  2531  extern void simple_release_fs(struct vfsmount **mount, int *count);
simple_read_from_buffer  prototype  include/linux/fs.h  2534  extern ssize_t simple_read_from_buffer(void __user *to, size_t count,loff_t *ppos, const void *from, size_t available);
simple_write_to_buffer  prototype  include/linux/fs.h  2536  extern ssize_t simple_write_to_buffer(void *to, size_t available, loff_t *ppos,const void __user *from, size_t count);
generic_file_fsync  prototype  include/linux/fs.h  2538  extern int generic_file_fsync(struct file *, loff_t, loff_t, int);
generic_check_addressable  prototype  include/linux/fs.h  2540  extern int generic_check_addressable(unsigned, u64);
buffer_migrate_page  macro  include/linux/fs.h  2547  #define buffer_migrate_page NULL
inode_change_ok  prototype  include/linux/fs.h  2550  extern int inode_change_ok(const struct inode *, struct iattr *);
inode_newsize_ok  prototype  include/linux/fs.h  2551  extern int inode_newsize_ok(const struct inode *, loff_t offset);
setattr_copy  prototype  include/linux/fs.h  2552  extern void setattr_copy(struct inode *inode, const struct iattr *attr);
file_update_time  prototype  include/linux/fs.h  2554  extern int file_update_time(struct file *file);
generic_show_options  prototype  include/linux/fs.h  2556  extern int generic_show_options(struct seq_file *m, struct dentry *root);
save_mount_options  prototype  include/linux/fs.h  2557  extern void save_mount_options(struct super_block *sb, char *options);
replace_mount_options  prototype  include/linux/fs.h  2558  extern void replace_mount_options(struct super_block *sb, char *options);
parent_ino  function  include/linux/fs.h  2560  static inline ino_t parent_ino(struct dentry *dentry)
SIMPLE_TRANSACTION_LIMIT  macro  include/linux/fs.h  2585  #define SIMPLE_TRANSACTION_LIMIT (PAGE_SIZE - sizeof(struct simple_transaction_argresp))
simple_transaction_get  prototype  include/linux/fs.h  2588  char *simple_transaction_get(struct file *file, const char __user *buf,size_t size);
simple_transaction_read  prototype  include/linux/fs.h  2590  ssize_t simple_transaction_read(struct file *file, char __user *buf,size_t size, loff_t *pos);
simple_transaction_release  prototype  include/linux/fs.h  2591  int simple_transaction_release(struct inode *inode, struct file *file);
simple_transaction_set  prototype  include/linux/fs.h  2593  void simple_transaction_set(struct file *file, size_t n);
DEFINE_SIMPLE_ATTRIBUTE  macro  include/linux/fs.h  2611  #define DEFINE_SIMPLE_ATTRIBUTE(__fops, __get, __set, __fmt) \
__simple_attr_check_format  function  include/linux/fs.h  2627  void __simple_attr_check_format(const char *fmt, ...)
simple_attr_open  prototype  include/linux/fs.h  2634  int simple_attr_open(struct inode *inode, struct file *file,int (*get)(void *, u64 *), int (*set)(void *, u64),const char *fmt);
simple_attr_release  prototype  include/linux/fs.h  2635  int simple_attr_release(struct inode *inode, struct file *file);
simple_attr_read  prototype  include/linux/fs.h  2637  ssize_t simple_attr_read(struct file *file, char __user *buf,size_t len, loff_t *ppos);
simple_attr_write  prototype  include/linux/fs.h  2639  ssize_t simple_attr_write(struct file *file, const char __user *buf,size_t len, loff_t *ppos);
proc_nr_files  prototype  include/linux/fs.h  2643  int proc_nr_files(struct ctl_table *table, int write,void __user *buffer, size_t *lenp, loff_t *ppos);
proc_nr_dentry  prototype  include/linux/fs.h  2645  int proc_nr_dentry(struct ctl_table *table, int write,void __user *buffer, size_t *lenp, loff_t *ppos);
proc_nr_inodes  prototype  include/linux/fs.h  2647  int proc_nr_inodes(struct ctl_table *table, int write,void __user *buffer, size_t *lenp, loff_t *ppos);
get_filesystem_list  prototype  include/linux/fs.h  2648  int __init get_filesystem_list(char *buf);
__FMODE_EXEC  macro  include/linux/fs.h  2650  #define __FMODE_EXEC ((__force int) FMODE_EXEC)
__FMODE_NONOTIFY  macro  include/linux/fs.h  2651  #define __FMODE_NONOTIFY ((__force int) FMODE_NONOTIFY)
ACC_MODE  macro  include/linux/fs.h  2653  #define ACC_MODE(x) ("\004\002\006\006"[(x)&O_ACCMODE])
OPEN_FMODE  macro  include/linux/fs.h  2654  #define OPEN_FMODE(flag) ((__force fmode_t)(((flag + 1) & O_ACCMODE) | \
is_sxid  function  include/linux/fs.h  2657  static inline int is_sxid(umode_t mode)
inode_has_no_xattr  function  include/linux/fs.h  2662  static inline void inode_has_no_xattr(struct inode *inode)
_LINUX_KERNEL_H  macro  include/linux/kernel.h  2  #define _LINUX_KERNEL_H
USHRT_MAX  macro  include/linux/kernel.h  18  #define USHRT_MAX ((u16)(~0U))
SHRT_MAX  macro  include/linux/kernel.h  19  #define SHRT_MAX ((s16)(USHRT_MAX>>1))
SHRT_MIN  macro  include/linux/kernel.h  20  #define SHRT_MIN ((s16)(-SHRT_MAX - 1))
INT_MAX  macro  include/linux/kernel.h  21  #define INT_MAX ((int)(~0U>>1))
INT_MIN  macro  include/linux/kernel.h  22  #define INT_MIN (-INT_MAX - 1)
UINT_MAX  macro  include/linux/kernel.h  23  #define UINT_MAX (~0U)
LONG_MAX  macro  include/linux/kernel.h  24  #define LONG_MAX ((long)(~0UL>>1))
LONG_MIN  macro  include/linux/kernel.h  25  #define LONG_MIN (-LONG_MAX - 1)
ULONG_MAX  macro  include/linux/kernel.h  26  #define ULONG_MAX (~0UL)
LLONG_MAX  macro  include/linux/kernel.h  27  #define LLONG_MAX ((long long)(~0ULL>>1))
LLONG_MIN  macro  include/linux/kernel.h  28  #define LLONG_MIN (-LLONG_MAX - 1)
ULLONG_MAX  macro  include/linux/kernel.h  29  #define ULLONG_MAX (~0ULL)
SIZE_MAX  macro  include/linux/kernel.h  30  #define SIZE_MAX (~(size_t)0)
STACK_MAGIC  macro  include/linux/kernel.h  32  #define STACK_MAGIC 0xdeadbeef
REPEAT_BYTE  macro  include/linux/kernel.h  34  #define REPEAT_BYTE(x) ((~0ul / 0xff) * (x))
ALIGN  macro  include/linux/kernel.h  36  #define ALIGN(x, a) __ALIGN_KERNEL((x), (a))
__ALIGN_MASK  macro  include/linux/kernel.h  37  #define __ALIGN_MASK(x, mask) __ALIGN_KERNEL_MASK((x), (mask))
PTR_ALIGN  macro  include/linux/kernel.h  38  #define PTR_ALIGN(p, a) ((typeof(p))ALIGN((unsigned long)(p), (a)))
IS_ALIGNED  macro  include/linux/kernel.h  39  #define IS_ALIGNED(x, a) (((x) & ((typeof(x))(a) - 1)) == 0)
ARRAY_SIZE  macro  include/linux/kernel.h  41  #define ARRAY_SIZE(arr) (sizeof(arr) / sizeof((arr)[0]) + __must_be_array(arr))
__round_mask  macro  include/linux/kernel.h  49  #define __round_mask(x, y) ((__typeof__(x))((y)-1))
round_up  macro  include/linux/kernel.h  50  #define round_up(x, y) ((((x)-1) | __round_mask(x, y))+1)
round_down  macro  include/linux/kernel.h  51  #define round_down(x, y) ((x) & ~__round_mask(x, y))
FIELD_SIZEOF  macro  include/linux/kernel.h  53  #define FIELD_SIZEOF(t, f) (sizeof(((t*)0)->f))
DIV_ROUND_UP  macro  include/linux/kernel.h  54  #define DIV_ROUND_UP(n,d) (((n) + (d) - 1) / (d))
DIV_ROUND_UP_ULL  macro  include/linux/kernel.h  55  #define DIV_ROUND_UP_ULL(ll,d) \
DIV_ROUND_UP_SECTOR_T  macro  include/linux/kernel.h  61  # define DIV_ROUND_UP_SECTOR_T(ll,d) DIV_ROUND_UP(ll,d)
roundup  macro  include/linux/kernel.h  65  #define roundup(x, y) ( \
rounddown  macro  include/linux/kernel.h  71  #define rounddown(x, y) ( \
DIV_ROUND_CLOSEST  macro  include/linux/kernel.h  83  #define DIV_ROUND_CLOSEST(x, divisor)( \
mult_frac  macro  include/linux/kernel.h  98  #define mult_frac(x, numer, denom)( \
_RET_IP_  macro  include/linux/kernel.h  107  #define _RET_IP_ (unsigned long)__builtin_return_address(0)
_THIS_IP_  macro  include/linux/kernel.h  108  #define _THIS_IP_ ({ __label__ __here; __here: (unsigned long)&&__here; })
sector_div  macro  include/linux/kernel.h  114  # define sector_div(n, b)( \
upper_32_bits  macro  include/linux/kernel.h  132  #define upper_32_bits(n) ((u32)(((n) >> 16) >> 16))
lower_32_bits  macro  include/linux/kernel.h  138  #define lower_32_bits(n) ((u32)(n))
_cond_resched  prototype  include/linux/kernel.h  145  extern int _cond_resched(void);
might_resched  macro  include/linux/kernel.h  148  # define might_resched() do { } while (0)
__might_sleep  function  include/linux/kernel.h  167  static inline void __might_sleep(const char *file, int line,int preempt_offset) { }
might_sleep  macro  include/linux/kernel.h  168  # define might_sleep() do { might_resched(); } while (0)
might_sleep_if  macro  include/linux/kernel.h  171  #define might_sleep_if(cond) do { if (cond) might_sleep(); } while (0)
abs  macro  include/linux/kernel.h  179  #define abs(x) ({ \
abs64  macro  include/linux/kernel.h  191  #define abs64(x) ({ \
might_fault  function  include/linux/kernel.h  199  static inline void might_fault(void)
oops_enter  prototype  include/linux/kernel.h  210  extern void oops_enter(void);
oops_exit  prototype  include/linux/kernel.h  211  extern void oops_exit(void);
print_oops_end_marker  prototype  include/linux/kernel.h  212  void print_oops_end_marker(void);
oops_may_print  prototype  include/linux/kernel.h  213  extern int oops_may_print(void);
_kstrtoul  prototype  include/linux/kernel.h  220  int __must_check _kstrtoul(const char *s, unsigned int base, unsigned long *res);
_kstrtol  prototype  include/linux/kernel.h  221  int __must_check _kstrtol(const char *s, unsigned int base, long *res);
kstrtoull  prototype  include/linux/kernel.h  223  int __must_check kstrtoull(const char *s, unsigned int base, unsigned long long *res);
kstrtoll  prototype  include/linux/kernel.h  224  int __must_check kstrtoll(const char *s, unsigned int base, long long *res);
kstrtoul  function  include/linux/kernel.h  242  static inline int __must_check kstrtoul(const char *s, unsigned int base, unsigned long *res)
kstrtol  function  include/linux/kernel.h  271  static inline int __must_check kstrtol(const char *s, unsigned int base, long *res)
kstrtouint  prototype  include/linux/kernel.h  284  int __must_check kstrtouint(const char *s, unsigned int base, unsigned int *res);
kstrtoint  prototype  include/linux/kernel.h  285  int __must_check kstrtoint(const char *s, unsigned int base, int *res);
kstrtou64  function  include/linux/kernel.h  287  static inline int __must_check kstrtou64(const char *s, unsigned int base, u64 *res)
kstrtos64  function  include/linux/kernel.h  292  static inline int __must_check kstrtos64(const char *s, unsigned int base, s64 *res)
kstrtou32  function  include/linux/kernel.h  297  static inline int __must_check kstrtou32(const char *s, unsigned int base, u32 *res)
kstrtos32  function  include/linux/kernel.h  302  static inline int __must_check kstrtos32(const char *s, unsigned int base, s32 *res)
kstrtou16  prototype  include/linux/kernel.h  307  int __must_check kstrtou16(const char *s, unsigned int base, u16 *res);
kstrtos16  prototype  include/linux/kernel.h  308  int __must_check kstrtos16(const char *s, unsigned int base, s16 *res);
kstrtou8  prototype  include/linux/kernel.h  309  int __must_check kstrtou8(const char *s, unsigned int base, u8 *res);
kstrtos8  prototype  include/linux/kernel.h  310  int __must_check kstrtos8(const char *s, unsigned int base, s8 *res);
kstrtoull_from_user  prototype  include/linux/kernel.h  312  int __must_check kstrtoull_from_user(const char __user *s, size_t count, unsigned int base, unsigned long long *res);
kstrtoll_from_user  prototype  include/linux/kernel.h  313  int __must_check kstrtoll_from_user(const char __user *s, size_t count, unsigned int base, long long *res);
kstrtoul_from_user  prototype  include/linux/kernel.h  314  int __must_check kstrtoul_from_user(const char __user *s, size_t count, unsigned int base, unsigned long *res);
kstrtol_from_user  prototype  include/linux/kernel.h  315  int __must_check kstrtol_from_user(const char __user *s, size_t count, unsigned int base, long *res);
kstrtouint_from_user  prototype  include/linux/kernel.h  316  int __must_check kstrtouint_from_user(const char __user *s, size_t count, unsigned int base, unsigned int *res);
kstrtoint_from_user  prototype  include/linux/kernel.h  317  int __must_check kstrtoint_from_user(const char __user *s, size_t count, unsigned int base, int *res);
kstrtou16_from_user  prototype  include/linux/kernel.h  318  int __must_check kstrtou16_from_user(const char __user *s, size_t count, unsigned int base, u16 *res);
kstrtos16_from_user  prototype  include/linux/kernel.h  319  int __must_check kstrtos16_from_user(const char __user *s, size_t count, unsigned int base, s16 *res);
kstrtou8_from_user  prototype  include/linux/kernel.h  320  int __must_check kstrtou8_from_user(const char __user *s, size_t count, unsigned int base, u8 *res);
kstrtos8_from_user  prototype  include/linux/kernel.h  321  int __must_check kstrtos8_from_user(const char __user *s, size_t count, unsigned int base, s8 *res);
kstrtou64_from_user  function  include/linux/kernel.h  323  static inline int __must_check kstrtou64_from_user(const char __user *s, size_t count, unsigned int base, u64 *res)
kstrtos64_from_user  function  include/linux/kernel.h  328  static inline int __must_check kstrtos64_from_user(const char __user *s, size_t count, unsigned int base, s64 *res)
kstrtou32_from_user  function  include/linux/kernel.h  333  static inline int __must_check kstrtou32_from_user(const char __user *s, size_t count, unsigned int base, u32 *res)
kstrtos32_from_user  function  include/linux/kernel.h  338  static inline int __must_check kstrtos32_from_user(const char __user *s, size_t count, unsigned int base, s32 *res)
simple_strtoul  prototype  include/linux/kernel.h  345  extern unsigned long simple_strtoul(const char *,char **,unsigned int);
simple_strtol  prototype  include/linux/kernel.h  346  extern long simple_strtol(const char *,char **,unsigned int);
simple_strtoull  prototype  include/linux/kernel.h  347  extern unsigned long long simple_strtoull(const char *,char **,unsigned int);
simple_strtoll  prototype  include/linux/kernel.h  348  extern long long simple_strtoll(const char *,char **,unsigned int);
strict_strtoul  macro  include/linux/kernel.h  349  #define strict_strtoul kstrtoul
strict_strtol  macro  include/linux/kernel.h  350  #define strict_strtol kstrtol
strict_strtoull  macro  include/linux/kernel.h  351  #define strict_strtoull kstrtoull
strict_strtoll  macro  include/linux/kernel.h  352  #define strict_strtoll kstrtoll
num_to_str  prototype  include/linux/kernel.h  354  extern int num_to_str(char *buf, int size, unsigned long long num);
sprintf  prototype  include/linux/kernel.h  358  extern __printf(2, 3) int sprintf(char *buf, const char * fmt, ...);
vsprintf  prototype  include/linux/kernel.h  359  extern __printf(2, 0) int vsprintf(char *buf, const char *, va_list);
snprintf  prototype  include/linux/kernel.h  361  int snprintf(char *buf, size_t size, const char *fmt, ...);
vsnprintf  prototype  include/linux/kernel.h  363  int vsnprintf(char *buf, size_t size, const char *fmt, va_list args);
scnprintf  prototype  include/linux/kernel.h  365  int scnprintf(char *buf, size_t size, const char *fmt, ...);
vscnprintf  prototype  include/linux/kernel.h  367  int vscnprintf(char *buf, size_t size, const char *fmt, va_list args);
kasprintf  prototype  include/linux/kernel.h  369  char *kasprintf(gfp_t gfp, const char *fmt, ...);
kvasprintf  prototype  include/linux/kernel.h  370  extern char *kvasprintf(gfp_t gfp, const char *fmt, va_list args);
sscanf  prototype  include/linux/kernel.h  373  int sscanf(const char *, const char *, ...);
vsscanf  prototype  include/linux/kernel.h  375  int vsscanf(const char *, const char *, va_list);
get_option  prototype  include/linux/kernel.h  377  extern int get_option(char **str, int *pint);
get_options  prototype  include/linux/kernel.h  378  extern char *get_options(const char *str, int nints, int *ints);
memparse  prototype  include/linux/kernel.h  379  extern unsigned long long memparse(const char *ptr, char **retptr);
core_kernel_text  prototype  include/linux/kernel.h  381  extern int core_kernel_text(unsigned long addr);
core_kernel_data  prototype  include/linux/kernel.h  382  extern int core_kernel_data(unsigned long addr);
__kernel_text_address  prototype  include/linux/kernel.h  383  extern int __kernel_text_address(unsigned long addr);
kernel_text_address  prototype  include/linux/kernel.h  384  extern int kernel_text_address(unsigned long addr);
func_ptr_is_kernel_text  prototype  include/linux/kernel.h  385  extern int func_ptr_is_kernel_text(void *ptr);
session_of_pgrp  prototype  include/linux/kernel.h  388  extern struct pid *session_of_pgrp(struct pid *pgrp);
int_sqrt  prototype  include/linux/kernel.h  390  unsigned long int_sqrt(unsigned long);
bust_spinlocks  prototype  include/linux/kernel.h  392  extern void bust_spinlocks(int yes);
wake_up_klogd  prototype  include/linux/kernel.h  393  extern void wake_up_klogd(void);
print_tainted  prototype  include/linux/kernel.h  400  extern const char *print_tainted(void);
add_taint  prototype  include/linux/kernel.h  401  extern void add_taint(unsigned flag);
test_taint  prototype  include/linux/kernel.h  402  extern int test_taint(unsigned flag);
get_taint  prototype  include/linux/kernel.h  403  extern unsigned long get_taint(void);
TAINT_PROPRIETARY_MODULE  macro  include/linux/kernel.h  417  #define TAINT_PROPRIETARY_MODULE 0
TAINT_FORCED_MODULE  macro  include/linux/kernel.h  418  #define TAINT_FORCED_MODULE 1
TAINT_UNSAFE_SMP  macro  include/linux/kernel.h  419  #define TAINT_UNSAFE_SMP 2
TAINT_FORCED_RMMOD  macro  include/linux/kernel.h  420  #define TAINT_FORCED_RMMOD 3
TAINT_MACHINE_CHECK  macro  include/linux/kernel.h  421  #define TAINT_MACHINE_CHECK 4
TAINT_BAD_PAGE  macro  include/linux/kernel.h  422  #define TAINT_BAD_PAGE 5
TAINT_USER  macro  include/linux/kernel.h  423  #define TAINT_USER 6
TAINT_DIE  macro  include/linux/kernel.h  424  #define TAINT_DIE 7
TAINT_OVERRIDDEN_ACPI_TABLE  macro  include/linux/kernel.h  425  #define TAINT_OVERRIDDEN_ACPI_TABLE 8
TAINT_WARN  macro  include/linux/kernel.h  426  #define TAINT_WARN 9
TAINT_CRAP  macro  include/linux/kernel.h  427  #define TAINT_CRAP 10
TAINT_FIRMWARE_WORKAROUND  macro  include/linux/kernel.h  428  #define TAINT_FIRMWARE_WORKAROUND 11
TAINT_OOT_MODULE  macro  include/linux/kernel.h  429  #define TAINT_OOT_MODULE 12
hex_asc_lo  macro  include/linux/kernel.h  432  #define hex_asc_lo(x) hex_asc[((x) & 0x0f)]
hex_asc_hi  macro  include/linux/kernel.h  433  #define hex_asc_hi(x) hex_asc[((x) & 0xf0) >> 4]
hex_byte_pack  function  include/linux/kernel.h  435  static inline char *hex_byte_pack(char *buf, u8 byte)
pack_hex_byte  function  include/linux/kernel.h  442  static inline char * __deprecated pack_hex_byte(char *buf, u8 byte)
hex_to_bin  prototype  include/linux/kernel.h  447  extern int hex_to_bin(char ch);
hex2bin  prototype  include/linux/kernel.h  448  extern int __must_check hex2bin(u8 *dst, const char *src, size_t count);
tracing_off_permanent  function  include/linux/kernel.h  473  static inline void tracing_off_permanent(void) { }
tracing_on  function  include/linux/kernel.h  570  static inline void tracing_on(void) { }
tracing_off  function  include/linux/kernel.h  571  static inline void tracing_off(void) { }
tracing_is_on  function  include/linux/kernel.h  572  static inline int tracing_is_on(void) { return 0; }
tracing_start  function  include/linux/kernel.h  565  static inline void tracing_start(void) { }
tracing_stop  function  include/linux/kernel.h  566  static inline void tracing_stop(void) { }
ftrace_off_permanent  function  include/linux/kernel.h  567  static inline void ftrace_off_permanent(void) { }
____trace_printk_check_format  function  include/linux/kernel.h  492  void ____trace_printk_check_format(const char *fmt, ...)
__trace_printk_check_format  macro  include/linux/kernel.h  495  #define __trace_printk_check_format(fmt, args...) \
trace_printk  function  include/linux/kernel.h  575  int trace_printk(const char *fmt, ...)
__trace_bprintk  prototype  include/linux/kernel.h  533  int __trace_bprintk(unsigned long ip, const char *fmt, ...);
__trace_printk  prototype  include/linux/kernel.h  536  int __trace_printk(unsigned long ip, const char *fmt, ...);
trace_dump_stack  function  include/linux/kernel.h  568  static inline void trace_dump_stack(void) { }
ftrace_vprintk  function  include/linux/kernel.h  580  ftrace_vprintk(const char *fmt, va_list ap)
__ftrace_vbprintk  prototype  include/linux/kernel.h  558  __ftrace_vbprintk(unsigned long ip, const char *fmt, va_list ap);
__ftrace_vprintk  prototype  include/linux/kernel.h  561  __ftrace_vprintk(unsigned long ip, const char *fmt, va_list ap);
ftrace_dump  function  include/linux/kernel.h  584  static inline void ftrace_dump(enum ftrace_dump_mode oops_dump_mode) { }
min  macro  include/linux/kernel.h  592  #define min(x, y) ({ \
max  macro  include/linux/kernel.h  598  #define max(x, y) ({ \
min3  macro  include/linux/kernel.h  604  #define min3(x, y, z) ({ \
max3  macro  include/linux/kernel.h  613  #define max3(x, y, z) ({ \
min_not_zero  macro  include/linux/kernel.h  627  #define min_not_zero(x, y) ({ \
clamp  macro  include/linux/kernel.h  641  #define clamp(val, min, max) ({ \
min_t  macro  include/linux/kernel.h  656  #define min_t(type, x, y) ({ \
max_t  macro  include/linux/kernel.h  661  #define max_t(type, x, y) ({ \
clamp_t  macro  include/linux/kernel.h  676  #define clamp_t(type, val, min, max) ({ \
clamp_val  macro  include/linux/kernel.h  694  #define clamp_val(val, min, max) ({ \
swap  macro  include/linux/kernel.h  705  #define swap(a, b) \
container_of  macro  include/linux/kernel.h  715  #define container_of(ptr, type, member) ({ \
__FUNCTION__  macro  include/linux/kernel.h  720  #define __FUNCTION__ (__func__)
SYMBOL_PREFIX  macro  include/linux/kernel.h  726  #define SYMBOL_PREFIX ""
REBUILD_DUE_TO_FTRACE_MCOUNT_RECORD  macro  include/linux/kernel.h  731  # define REBUILD_DUE_TO_FTRACE_MCOUNT_RECORD
do_sysinfo  prototype  include/linux/kernel.h  734  extern int do_sysinfo(struct sysinfo *info);
_LINUX_CONSOLE_H_  macro  include/linux/console.h  15  #define _LINUX_CONSOLE_H_ 1
VT100ID  macro  include/linux/console.h  28  #define VT100ID "\033[?1;2c"
VT102ID  macro  include/linux/console.h  29  #define VT102ID "\033[?6c"
con_is_bound  prototype  include/linux/console.h  77  int con_is_bound(const struct consw *csw);
register_con_driver  prototype  include/linux/console.h  78  int register_con_driver(const struct consw *csw, int first, int last);
unregister_con_driver  prototype  include/linux/console.h  79  int unregister_con_driver(const struct consw *csw);
do_unregister_con_driver  prototype  include/linux/console.h  80  int do_unregister_con_driver(const struct consw *csw);
take_over_console  prototype  include/linux/console.h  81  int take_over_console(const struct consw *sw, int first, int last, int deflt);
do_take_over_console  prototype  include/linux/console.h  82  int do_take_over_console(const struct consw *sw, int first, int last, int deflt);
give_up_console  prototype  include/linux/console.h  83  void give_up_console(const struct consw *sw);
con_debug_enter  function  include/linux/console.h  88  static inline int con_debug_enter(struct vc_data *vc)
con_debug_leave  function  include/linux/console.h  92  static inline int con_debug_leave(void)
SM_UP  macro  include/linux/console.h  99  #define SM_UP (1)
SM_DOWN  macro  include/linux/console.h  100  #define SM_DOWN (2)
CM_DRAW  macro  include/linux/console.h  103  #define CM_DRAW (1)
CM_ERASE  macro  include/linux/console.h  104  #define CM_ERASE (2)
CM_MOVE  macro  include/linux/console.h  105  #define CM_MOVE (3)
CON_PRINTBUFFER  macro  include/linux/console.h  115  #define CON_PRINTBUFFER (1)
CON_CONSDEV  macro  include/linux/console.h  116  #define CON_CONSDEV (2) /* Last on the command line */
CON_ENABLED  macro  include/linux/console.h  117  #define CON_ENABLED (4)
CON_BOOT  macro  include/linux/console.h  118  #define CON_BOOT (8)
CON_ANYTIME  macro  include/linux/console.h  119  #define CON_ANYTIME (16) /* Safe to call when cpu is offline */
CON_BRL  macro  include/linux/console.h  120  #define CON_BRL (32) /* Used for a braille device */
for_each_console  macro  include/linux/console.h  140  #define for_each_console(con) \
add_preferred_console  prototype  include/linux/console.h  145  extern int add_preferred_console(char *name, int idx, char *options);
update_console_cmdline  prototype  include/linux/console.h  146  extern int update_console_cmdline(char *name, int idx, char *name_new, int idx_new, char *options);
register_console  prototype  include/linux/console.h  147  extern void register_console(struct console *);
unregister_console  prototype  include/linux/console.h  148  extern int unregister_console(struct console *);
console_lock  prototype  include/linux/console.h  150  extern void console_lock(void);
console_trylock  prototype  include/linux/console.h  151  extern int console_trylock(void);
console_unlock  prototype  include/linux/console.h  152  extern void console_unlock(void);
console_conditional_schedule  prototype  include/linux/console.h  153  extern void console_conditional_schedule(void);
console_unblank  prototype  include/linux/console.h  154  extern void console_unblank(void);
console_device  prototype  include/linux/console.h  155  extern struct tty_driver *console_device(int *);
console_stop  prototype  include/linux/console.h  156  extern void console_stop(struct console *);
console_start  prototype  include/linux/console.h  157  extern void console_start(struct console *);
is_console_locked  prototype  include/linux/console.h  158  extern int is_console_locked(void);
braille_register_console  prototype  include/linux/console.h  160  extern int braille_register_console(struct console *, int index,char *console_options, char *braille_options);
braille_unregister_console  prototype  include/linux/console.h  161  extern int braille_unregister_console(struct console *);
console_sysfs_notify  prototype  include/linux/console.h  162  extern void console_sysfs_notify(void);
suspend_console  prototype  include/linux/console.h  166  extern void suspend_console(void);
resume_console  prototype  include/linux/console.h  167  extern void resume_console(void);
mda_console_init  prototype  include/linux/console.h  169  int mda_console_init(void);
prom_con_init  prototype  include/linux/console.h  170  void prom_con_init(void);
vcs_make_sysfs  prototype  include/linux/console.h  172  void vcs_make_sysfs(int index);
vcs_remove_sysfs  prototype  include/linux/console.h  173  void vcs_remove_sysfs(int index);
WARN_CONSOLE_UNLOCKED  macro  include/linux/console.h  179  #define WARN_CONSOLE_UNLOCKED()
VESA_NO_BLANKING  macro  include/linux/console.h  183  #define VESA_NO_BLANKING 0
VESA_VSYNC_SUSPEND  macro  include/linux/console.h  184  #define VESA_VSYNC_SUSPEND 1
VESA_HSYNC_SUSPEND  macro  include/linux/console.h  185  #define VESA_HSYNC_SUSPEND 2
VESA_POWERDOWN  macro  include/linux/console.h  186  #define VESA_POWERDOWN 3
vgacon_text_force  prototype  include/linux/console.h  189  extern bool vgacon_text_force(void);
_LINUX_STRING_H_  macro  include/linux/string.h  2  #define _LINUX_STRING_H_
strndup_user  prototype  include/linux/string.h  11  extern char *strndup_user(const char __user *, long);
memdup_user  prototype  include/linux/string.h  12  extern void *memdup_user(const void __user *, size_t);
strcpy  prototype  include/linux/string.h  20  extern char * strcpy(char *,const char *);
strncpy  prototype  include/linux/string.h  23  extern char * strncpy(char *,const char *, __kernel_size_t);
strlcpy  prototype  include/linux/string.h  26  size_t strlcpy(char *, const char *, size_t);
strcat  prototype  include/linux/string.h  29  extern char * strcat(char *, const char *);
strncat  prototype  include/linux/string.h  32  extern char * strncat(char *, const char *, __kernel_size_t);
strlcat  prototype  include/linux/string.h  35  extern size_t strlcat(char *, const char *, __kernel_size_t);
strcmp  prototype  include/linux/string.h  38  extern int strcmp(const char *,const char *);
strncmp  prototype  include/linux/string.h  41  extern int strncmp(const char *,const char *,__kernel_size_t);
strnicmp  prototype  include/linux/string.h  44  extern int strnicmp(const char *, const char *, __kernel_size_t);
strcasecmp  prototype  include/linux/string.h  47  extern int strcasecmp(const char *s1, const char *s2);
strncasecmp  prototype  include/linux/string.h  50  extern int strncasecmp(const char *s1, const char *s2, size_t n);
strchr  prototype  include/linux/string.h  53  extern char * strchr(const char *,int);
strnchr  prototype  include/linux/string.h  56  extern char * strnchr(const char *, size_t, int);
strrchr  prototype  include/linux/string.h  59  extern char * strrchr(const char *,int);
skip_spaces  prototype  include/linux/string.h  61  extern char * __must_check skip_spaces(const char *);
strim  prototype  include/linux/string.h  63  extern char *strim(char *);
strstrip  function  include/linux/string.h  65  static inline __must_check char *strstrip(char *str)
strstr  prototype  include/linux/string.h  71  extern char * strstr(const char *, const char *);
strnstr  prototype  include/linux/string.h  74  extern char * strnstr(const char *, const char *, size_t);
strlen  prototype  include/linux/string.h  77  extern __kernel_size_t strlen(const char *);
strnlen  prototype  include/linux/string.h  80  extern __kernel_size_t strnlen(const char *,__kernel_size_t);
strpbrk  prototype  include/linux/string.h  83  extern char * strpbrk(const char *,const char *);
strsep  prototype  include/linux/string.h  86  extern char * strsep(char **,const char *);
strspn  prototype  include/linux/string.h  89  extern __kernel_size_t strspn(const char *,const char *);
strcspn  prototype  include/linux/string.h  92  extern __kernel_size_t strcspn(const char *,const char *);
memset  prototype  include/linux/string.h  96  extern void * memset(void *,int,__kernel_size_t);
memcpy  prototype  include/linux/string.h  99  extern void * memcpy(void *,const void *,__kernel_size_t);
memmove  prototype  include/linux/string.h  102  extern void * memmove(void *,const void *,__kernel_size_t);
memscan  prototype  include/linux/string.h  105  extern void * memscan(void *,int,__kernel_size_t);
memcmp  prototype  include/linux/string.h  108  extern int memcmp(const void *,const void *,__kernel_size_t);
memchr  prototype  include/linux/string.h  111  extern void * memchr(const void *,int,__kernel_size_t);
memchr_inv  prototype  include/linux/string.h  113  void *memchr_inv(const void *s, int c, size_t n);
kstrdup  prototype  include/linux/string.h  115  extern char *kstrdup(const char *s, gfp_t gfp);
kstrndup  prototype  include/linux/string.h  116  extern char *kstrndup(const char *s, size_t len, gfp_t gfp);
kmemdup  prototype  include/linux/string.h  117  extern void *kmemdup(const void *src, size_t len, gfp_t gfp);
argv_split  prototype  include/linux/string.h  119  extern char **argv_split(gfp_t gfp, const char *str, int *argcp);
argv_free  prototype  include/linux/string.h  120  extern void argv_free(char **argv);
sysfs_streq  prototype  include/linux/string.h  122  extern bool sysfs_streq(const char *s1, const char *s2);
strtobool  prototype  include/linux/string.h  123  extern int strtobool(const char *s, bool *res);
vbin_printf  prototype  include/linux/string.h  126  int vbin_printf(u32 *bin_buf, size_t size, const char *fmt, va_list args);
bstr_printf  prototype  include/linux/string.h  127  int bstr_printf(char *buf, size_t size, const char *fmt, const u32 *bin_buf);
memory_read_from_buffer  prototype  include/linux/string.h  132  extern ssize_t memory_read_from_buffer(void *to, size_t count, loff_t *ppos,const void *from, size_t available);
strstarts  function  include/linux/string.h  139  static inline bool strstarts(const char *str, const char *prefix)
memweight  prototype  include/linux/string.h  144  extern size_t memweight(const void *ptr, size_t bytes);
kbasename  function  include/linux/string.h  151  static inline const char *kbasename(const char *path)
_LINUX_KD_H  macro  include/linux/kd.h  2  #define _LINUX_KD_H
KD_FONT_FLAG_OLD  macro  include/linux/kd.h  6  #define KD_FONT_FLAG_OLD 0x80000000 /* Invoked via old interface [compat] */
_LINUX_SLAB_H  macro  include/linux/slab.h  10  #define _LINUX_SLAB_H
SLAB_DEBUG_FREE  macro  include/linux/slab.h  21  #define SLAB_DEBUG_FREE 0x00000100UL /* DEBUG: Perform (expensive) checks on free */
SLAB_RED_ZONE  macro  include/linux/slab.h  22  #define SLAB_RED_ZONE 0x00000400UL /* DEBUG: Red zone objs in a cache */
SLAB_POISON  macro  include/linux/slab.h  23  #define SLAB_POISON 0x00000800UL /* DEBUG: Poison objects */
SLAB_HWCACHE_ALIGN  macro  include/linux/slab.h  24  #define SLAB_HWCACHE_ALIGN 0x00002000UL /* Align objs on cache lines */
SLAB_CACHE_DMA  macro  include/linux/slab.h  25  #define SLAB_CACHE_DMA 0x00004000UL /* Use GFP_DMA memory */
SLAB_STORE_USER  macro  include/linux/slab.h  26  #define SLAB_STORE_USER 0x00010000UL /* DEBUG: Store the last owner for bug hunting */
SLAB_PANIC  macro  include/linux/slab.h  27  #define SLAB_PANIC 0x00040000UL /* Panic if kmem_cache_create() fails */
SLAB_DESTROY_BY_RCU  macro  include/linux/slab.h  56  #define SLAB_DESTROY_BY_RCU 0x00080000UL /* Defer freeing slabs to RCU */
SLAB_MEM_SPREAD  macro  include/linux/slab.h  57  #define SLAB_MEM_SPREAD 0x00100000UL /* Spread some memory over cpuset */
SLAB_TRACE  macro  include/linux/slab.h  58  #define SLAB_TRACE 0x00200000UL /* Trace allocations and frees */
SLAB_DEBUG_OBJECTS  macro  include/linux/slab.h  64  # define SLAB_DEBUG_OBJECTS 0x00000000UL
SLAB_NOLEAKTRACE  macro  include/linux/slab.h  67  #define SLAB_NOLEAKTRACE 0x00800000UL /* Avoid kmemleak tracing */
SLAB_NOTRACK  macro  include/linux/slab.h  73  # define SLAB_NOTRACK 0x00000000UL
SLAB_FAILSLAB  macro  include/linux/slab.h  78  # define SLAB_FAILSLAB 0x00000000UL
SLAB_RECLAIM_ACCOUNT  macro  include/linux/slab.h  82  #define SLAB_RECLAIM_ACCOUNT 0x00020000UL /* Objects are reclaimable */
SLAB_TEMPORARY  macro  include/linux/slab.h  83  #define SLAB_TEMPORARY SLAB_RECLAIM_ACCOUNT /* Objects are short-lived */
ZERO_SIZE_PTR  macro  include/linux/slab.h  92  #define ZERO_SIZE_PTR ((void *)16)
ZERO_OR_NULL_PTR  macro  include/linux/slab.h  94  #define ZERO_OR_NULL_PTR(x) ((unsigned long)(x) <= \
kmem_cache_init  prototype  include/linux/slab.h  125  void __init kmem_cache_init(void);
slab_is_available  prototype  include/linux/slab.h  126  int slab_is_available(void);
kmem_cache_create  prototype  include/linux/slab.h  130  struct kmem_cache *kmem_cache_create(const char *, size_t, size_t,unsigned long,void (*)(void *));
kmem_cache_create_memcg  prototype  include/linux/slab.h  133  kmem_cache_create_memcg(struct mem_cgroup *, const char *, size_t, size_t,unsigned long, void (*)(void *), struct kmem_cache *);
kmem_cache_destroy  prototype  include/linux/slab.h  134  void kmem_cache_destroy(struct kmem_cache *);
kmem_cache_shrink  prototype  include/linux/slab.h  135  int kmem_cache_shrink(struct kmem_cache *);
kmem_cache_free  prototype  include/linux/slab.h  136  void kmem_cache_free(struct kmem_cache *, void *);
KMEM_CACHE  macro  include/linux/slab.h  146  #define KMEM_CACHE(__struct, __flags) kmem_cache_create(#__struct,\
KMALLOC_SHIFT_HIGH  macro  include/linux/slab.h  159  #define KMALLOC_SHIFT_HIGH ((MAX_ORDER + PAGE_SHIFT - 1) <= 25 ? \
KMALLOC_MAX_SIZE  macro  include/linux/slab.h  162  #define KMALLOC_MAX_SIZE (1UL << KMALLOC_SHIFT_HIGH)
KMALLOC_MAX_ORDER  macro  include/linux/slab.h  163  #define KMALLOC_MAX_ORDER (KMALLOC_SHIFT_HIGH - PAGE_SHIFT)
ARCH_KMALLOC_MINALIGN  macro  include/linux/slab.h  173  #define ARCH_KMALLOC_MINALIGN __alignof__(unsigned long long)
ARCH_SLAB_MINALIGN  macro  include/linux/slab.h  182  #define ARCH_SLAB_MINALIGN __alignof__(unsigned long long)
memcg_update_all_caches  prototype  include/linux/slab.h  221  int memcg_update_all_caches(int num_memcgs);
cache_show  prototype  include/linux/slab.h  224  int cache_show(struct kmem_cache *s, struct seq_file *m);
print_slabinfo_header  prototype  include/linux/slab.h  225  void print_slabinfo_header(struct seq_file *m);
__krealloc  prototype  include/linux/slab.h  230  void * __must_check __krealloc(const void *, size_t, gfp_t);
krealloc  prototype  include/linux/slab.h  231  void * __must_check krealloc(const void *, size_t, gfp_t);
kfree  prototype  include/linux/slab.h  232  void kfree(const void *);
kzfree  prototype  include/linux/slab.h  233  void kzfree(const void *);
ksize  prototype  include/linux/slab.h  234  size_t ksize(const void *);
kmalloc_array  function  include/linux/slab.h  314  static inline void *kmalloc_array(size_t n, size_t size, gfp_t flags)
kcalloc  function  include/linux/slab.h  327  static inline void *kcalloc(size_t n, size_t size, gfp_t flags)
kmalloc_node  function  include/linux/slab.h  343  static inline void *kmalloc_node(size_t size, gfp_t flags, int node)
__kmalloc_node  function  include/linux/slab.h  348  static inline void *__kmalloc_node(size_t size, gfp_t flags, int node)
kmem_cache_alloc  prototype  include/linux/slab.h  353  void *kmem_cache_alloc(struct kmem_cache *, gfp_t);
kmem_cache_alloc_node  function  include/linux/slab.h  356  static inline void *kmem_cache_alloc_node(struct kmem_cache *cachep,gfp_t flags, int node)
__kmalloc_track_caller  prototype  include/linux/slab.h  373  extern void *__kmalloc_track_caller(size_t, gfp_t, unsigned long);
kmalloc_track_caller  macro  include/linux/slab.h  377  #define kmalloc_track_caller(size, flags) \
__kmalloc_node_track_caller  prototype  include/linux/slab.h  393  extern void *__kmalloc_node_track_caller(size_t, gfp_t, int, unsigned long);
kmalloc_node_track_caller  macro  include/linux/slab.h  404  #define kmalloc_node_track_caller(size, flags, node) \
kmem_cache_zalloc  function  include/linux/slab.h  412  static inline void *kmem_cache_zalloc(struct kmem_cache *k, gfp_t flags)
kzalloc  function  include/linux/slab.h  422  static inline void *kzalloc(size_t size, gfp_t flags)
kzalloc_node  function  include/linux/slab.h  433  static inline void *kzalloc_node(size_t size, gfp_t flags, int node)
kmem_cache_size  function  include/linux/slab.h  441  static inline unsigned int kmem_cache_size(struct kmem_cache *s)
kmem_cache_init_late  prototype  include/linux/slab.h  446  void __init kmem_cache_init_late(void);
_VT_KERN_H  macro  include/linux/vt_kern.h  2  #define _VT_KERN_H
BROKEN_GRAPHICS_PROGRAMS  macro  include/linux/vt_kern.h  27  #define BROKEN_GRAPHICS_PROGRAMS 1
kd_mksound  prototype  include/linux/vt_kern.h  30  extern void kd_mksound(unsigned int hz, unsigned int ticks);
kbd_rate  prototype  include/linux/vt_kern.h  31  extern int kbd_rate(struct kbd_repeat *rep);
vc_allocate  prototype  include/linux/vt_kern.h  36  int vc_allocate(unsigned int console);
vc_cons_allocated  prototype  include/linux/vt_kern.h  37  int vc_cons_allocated(unsigned int console);
vc_resize  prototype  include/linux/vt_kern.h  38  int vc_resize(struct vc_data *vc, unsigned int cols, unsigned int lines);
vc_deallocate  prototype  include/linux/vt_kern.h  39  void vc_deallocate(unsigned int console);
reset_palette  prototype  include/linux/vt_kern.h  40  void reset_palette(struct vc_data *vc);
do_blank_screen  prototype  include/linux/vt_kern.h  41  void do_blank_screen(int entering_gfx);
do_unblank_screen  prototype  include/linux/vt_kern.h  42  void do_unblank_screen(int leaving_gfx);
unblank_screen  prototype  include/linux/vt_kern.h  43  void unblank_screen(void);
poke_blanked_console  prototype  include/linux/vt_kern.h  44  void poke_blanked_console(void);
con_font_op  prototype  include/linux/vt_kern.h  45  int con_font_op(struct vc_data *vc, struct console_font_op *op);
con_set_cmap  prototype  include/linux/vt_kern.h  46  int con_set_cmap(unsigned char __user *cmap);
con_get_cmap  prototype  include/linux/vt_kern.h  47  int con_get_cmap(unsigned char __user *cmap);
scrollback  prototype  include/linux/vt_kern.h  48  void scrollback(struct vc_data *vc, int lines);
scrollfront  prototype  include/linux/vt_kern.h  49  void scrollfront(struct vc_data *vc, int lines);
clear_buffer_attributes  prototype  include/linux/vt_kern.h  50  void clear_buffer_attributes(struct vc_data *vc);
update_region  prototype  include/linux/vt_kern.h  51  void update_region(struct vc_data *vc, unsigned long start, int count);
redraw_screen  prototype  include/linux/vt_kern.h  52  void redraw_screen(struct vc_data *vc, int is_switch);
update_screen  macro  include/linux/vt_kern.h  53  #define update_screen(x) redraw_screen(x, 0)
switch_screen  macro  include/linux/vt_kern.h  54  #define switch_screen(x) redraw_screen(x, 1)
tioclinux  prototype  include/linux/vt_kern.h  57  int tioclinux(struct tty_struct *tty, unsigned long arg);
con_set_trans_old  function  include/linux/vt_kern.h  79  static inline int con_set_trans_old(unsigned char __user *table)
con_get_trans_old  function  include/linux/vt_kern.h  83  static inline int con_get_trans_old(unsigned char __user *table)
con_set_trans_new  function  include/linux/vt_kern.h  87  static inline int con_set_trans_new(unsigned short __user *table)
con_get_trans_new  function  include/linux/vt_kern.h  91  static inline int con_get_trans_new(unsigned short __user *table)
con_clear_unimap  function  include/linux/vt_kern.h  95  static inline int con_clear_unimap(struct vc_data *vc, struct unimapinit *ui)
con_set_unimap  function  include/linux/vt_kern.h  100  int con_set_unimap(struct vc_data *vc, ushort ct, struct unipair __user *list)
con_get_unimap  function  include/linux/vt_kern.h  106  int con_get_unimap(struct vc_data *vc, ushort ct, ushort __user *uct,struct unipair __user *list)
con_set_default_unimap  function  include/linux/vt_kern.h  110  static inline int con_set_default_unimap(struct vc_data *vc)
con_free_unimap  function  include/linux/vt_kern.h  114  static inline void con_free_unimap(struct vc_data *vc)
con_copy_unimap  function  include/linux/vt_kern.h  121  int con_copy_unimap(struct vc_data *dst_vc, struct vc_data *src_vc)
vc_translate  macro  include/linux/vt_kern.h  126  #define vc_translate(vc, c) (c)
con_protect_unimap  function  include/linux/vt_kern.h  117  static inline void con_protect_unimap(struct vc_data *vc, int rdonly)
vt_event_post  prototype  include/linux/vt_kern.h  130  void vt_event_post(unsigned int event, unsigned int old, unsigned int new);
vt_waitactive  prototype  include/linux/vt_kern.h  131  int vt_waitactive(int n);
change_console  prototype  include/linux/vt_kern.h  132  void change_console(struct vc_data *new_vc);
reset_vc  prototype  include/linux/vt_kern.h  133  void reset_vc(struct vc_data *vc);
do_unbind_con_driver  prototype  include/linux/vt_kern.h  135  extern int do_unbind_con_driver(const struct consw *csw, int first, int last,int deflt);
unbind_con_driver  prototype  include/linux/vt_kern.h  137  extern int unbind_con_driver(const struct consw *csw, int first, int last,int deflt);
vty_init  prototype  include/linux/vt_kern.h  138  int vty_init(const struct file_operations *console_fops);
vt_force_oops_output  function  include/linux/vt_kern.h  140  static inline bool vt_force_oops_output(struct vc_data *vc)
vt_move_to_console  prototype  include/linux/vt_kern.h  158  extern int vt_move_to_console(unsigned int vt, int alloc);
register_vt_notifier  prototype  include/linux/vt_kern.h  167  extern int register_vt_notifier(struct notifier_block *nb);
unregister_vt_notifier  prototype  include/linux/vt_kern.h  168  extern int unregister_vt_notifier(struct notifier_block *nb);
hide_boot_cursor  prototype  include/linux/vt_kern.h  170  extern void hide_boot_cursor(bool hide);
vt_do_diacrit  prototype  include/linux/vt_kern.h  173  extern int vt_do_diacrit(unsigned int cmd, void __user *up, int eperm);
vt_do_kdskbmode  prototype  include/linux/vt_kern.h  174  extern int vt_do_kdskbmode(int console, unsigned int arg);
vt_do_kdskbmeta  prototype  include/linux/vt_kern.h  175  extern int vt_do_kdskbmeta(int console, unsigned int arg);
vt_do_kbkeycode_ioctl  prototype  include/linux/vt_kern.h  177  extern int vt_do_kbkeycode_ioctl(int cmd, struct kbkeycode __user *user_kbkc,int perm);
vt_do_kdsk_ioctl  prototype  include/linux/vt_kern.h  179  extern int vt_do_kdsk_ioctl(int cmd, struct kbentry __user *user_kbe,int perm, int console);
vt_do_kdgkb_ioctl  prototype  include/linux/vt_kern.h  181  extern int vt_do_kdgkb_ioctl(int cmd, struct kbsentry __user *user_kdgkb,int perm);
vt_do_kdskled  prototype  include/linux/vt_kern.h  182  extern int vt_do_kdskled(int console, int cmd, unsigned long arg, int perm);
vt_do_kdgkbmode  prototype  include/linux/vt_kern.h  183  extern int vt_do_kdgkbmode(int console);
vt_do_kdgkbmeta  prototype  include/linux/vt_kern.h  184  extern int vt_do_kdgkbmeta(int console);
vt_reset_unicode  prototype  include/linux/vt_kern.h  185  extern void vt_reset_unicode(int console);
vt_get_shift_state  prototype  include/linux/vt_kern.h  186  extern int vt_get_shift_state(void);
vt_reset_keyboard  prototype  include/linux/vt_kern.h  187  extern void vt_reset_keyboard(int console);
vt_get_leds  prototype  include/linux/vt_kern.h  188  extern int vt_get_leds(int console, int flag);
vt_get_kbd_mode_bit  prototype  include/linux/vt_kern.h  189  extern int vt_get_kbd_mode_bit(int console, int bit);
vt_set_kbd_mode_bit  prototype  include/linux/vt_kern.h  190  extern void vt_set_kbd_mode_bit(int console, int bit);
vt_clr_kbd_mode_bit  prototype  include/linux/vt_kern.h  191  extern void vt_clr_kbd_mode_bit(int console, int bit);
vt_set_led_state  prototype  include/linux/vt_kern.h  193  extern void vt_set_led_state(int console, int leds);
vt_kbd_con_start  prototype  include/linux/vt_kern.h  194  extern void vt_kbd_con_start(int console);
vt_kbd_con_stop  prototype  include/linux/vt_kern.h  195  extern void vt_kbd_con_stop(int console);
_LINUX_SELECTION_H_  macro  include/linux/selection.h  8  #define _LINUX_SELECTION_H_
clear_selection  prototype  include/linux/selection.h  18  extern void clear_selection(void);
set_selection  prototype  include/linux/selection.h  19  extern int set_selection(const struct tiocl_selection __user *sel, struct tty_struct *tty);
paste_selection  prototype  include/linux/selection.h  20  extern int paste_selection(struct tty_struct *tty);
sel_loadlut  prototype  include/linux/selection.h  21  extern int sel_loadlut(char __user *p);
mouse_reporting  prototype  include/linux/selection.h  22  extern int mouse_reporting(void);
mouse_report  prototype  include/linux/selection.h  23  extern void mouse_report(struct tty_struct * tty, int butt, int mrx, int mry);
screen_pos  prototype  include/linux/selection.h  32  extern unsigned short *screen_pos(struct vc_data *vc, int w_offset, int viewed);
screen_glyph  prototype  include/linux/selection.h  33  extern u16 screen_glyph(struct vc_data *vc, int offset);
complement_pos  prototype  include/linux/selection.h  34  extern void complement_pos(struct vc_data *vc, int offset);
invert_screen  prototype  include/linux/selection.h  35  extern void invert_screen(struct vc_data *vc, int offset, int count, int shift);
getconsxy  prototype  include/linux/selection.h  37  extern void getconsxy(struct vc_data *vc, unsigned char *p);
putconsxy  prototype  include/linux/selection.h  38  extern void putconsxy(struct vc_data *vc, unsigned char *p);
vcs_scr_readw  prototype  include/linux/selection.h  40  extern u16 vcs_scr_readw(struct vc_data *vc, const u16 *org);
vcs_scr_writew  prototype  include/linux/selection.h  41  extern void vcs_scr_writew(struct vc_data *vc, u16 val, u16 *org);
vcs_scr_updated  prototype  include/linux/selection.h  42  extern void vcs_scr_updated(struct vc_data *vc);
__LINUX_SPINLOCK_H  macro  include/linux/spinlock.h  2  #define __LINUX_SPINLOCK_H
LOCK_SECTION_NAME  macro  include/linux/spinlock.h  64  #define LOCK_SECTION_NAME ".text..lock."KBUILD_BASENAME
LOCK_SECTION_START  macro  include/linux/spinlock.h  66  #define LOCK_SECTION_START(extra) \
LOCK_SECTION_END  macro  include/linux/spinlock.h  73  #define LOCK_SECTION_END \
__lockfunc  macro  include/linux/spinlock.h  76  #define __lockfunc __attribute__((section(".spinlock.text")))
__raw_spin_lock_init  prototype  include/linux/spinlock.h  94  extern void __raw_spin_lock_init(raw_spinlock_t *lock, const char *name,struct lock_class_key *key);
raw_spin_lock_init  macro  include/linux/spinlock.h  103  # define raw_spin_lock_init(lock) \
raw_spin_is_locked  macro  include/linux/spinlock.h  107  #define raw_spin_is_locked(lock) arch_spin_is_locked(&(lock)->raw_lock)
raw_spin_is_contended  macro  include/linux/spinlock.h  116  #define raw_spin_is_contended(lock) (((void)(lock), 0))
smp_mb__after_lock  function  include/linux/spinlock.h  122  static inline void smp_mb__after_lock(void) { smp_mb(); }
raw_spin_unlock_wait  macro  include/linux/spinlock.h  129  #define raw_spin_unlock_wait(lock) arch_spin_unlock_wait(&(lock)->raw_lock)
do_raw_spin_lock_flags  macro  include/linux/spinlock.h  133  #define do_raw_spin_lock_flags(lock, flags) do_raw_spin_lock(lock)
do_raw_spin_trylock  function  include/linux/spinlock.h  150  static inline int do_raw_spin_trylock(raw_spinlock_t *lock)
__acquires  function  include/linux/spinlock.h  144  do_raw_spin_lock_flags(raw_spinlock_t *lock, unsigned long *flags) __acquires(lock)
__releases  function  include/linux/spinlock.h  155  static inline void do_raw_spin_unlock(raw_spinlock_t *lock) __releases(lock)
raw_spin_trylock  macro  include/linux/spinlock.h  168  #define raw_spin_trylock(lock) __cond_lock(lock, _raw_spin_trylock(lock))
raw_spin_lock  macro  include/linux/spinlock.h  170  #define raw_spin_lock(lock) _raw_spin_lock(lock)
raw_spin_lock_nested  macro  include/linux/spinlock.h  182  # define raw_spin_lock_nested(lock, subclass) _raw_spin_lock(lock)
raw_spin_lock_nest_lock  macro  include/linux/spinlock.h  183  # define raw_spin_lock_nest_lock(lock, nest_lock) _raw_spin_lock(lock)
raw_spin_lock_irqsave  macro  include/linux/spinlock.h  210  #define raw_spin_lock_irqsave(lock, flags) \
raw_spin_lock_irqsave_nested  macro  include/linux/spinlock.h  216  #define raw_spin_lock_irqsave_nested(lock, flags, subclass) \
raw_spin_lock_irq  macro  include/linux/spinlock.h  221  #define raw_spin_lock_irq(lock) _raw_spin_lock_irq(lock)
raw_spin_lock_bh  macro  include/linux/spinlock.h  222  #define raw_spin_lock_bh(lock) _raw_spin_lock_bh(lock)
raw_spin_unlock  macro  include/linux/spinlock.h  223  #define raw_spin_unlock(lock) _raw_spin_unlock(lock)
raw_spin_unlock_irq  macro  include/linux/spinlock.h  224  #define raw_spin_unlock_irq(lock) _raw_spin_unlock_irq(lock)
raw_spin_unlock_irqrestore  macro  include/linux/spinlock.h  226  #define raw_spin_unlock_irqrestore(lock, flags) \
raw_spin_unlock_bh  macro  include/linux/spinlock.h  231  #define raw_spin_unlock_bh(lock) _raw_spin_unlock_bh(lock)
raw_spin_trylock_bh  macro  include/linux/spinlock.h  233  #define raw_spin_trylock_bh(lock) \
raw_spin_trylock_irq  macro  include/linux/spinlock.h  236  #define raw_spin_trylock_irq(lock) \
raw_spin_trylock_irqsave  macro  include/linux/spinlock.h  243  #define raw_spin_trylock_irqsave(lock, flags) \
raw_spin_can_lock  macro  include/linux/spinlock.h  254  #define raw_spin_can_lock(lock) (!raw_spin_is_locked(lock))
spinlock_check  function  include/linux/spinlock.h  272  static inline raw_spinlock_t *spinlock_check(spinlock_t *lock)
spin_lock_init  macro  include/linux/spinlock.h  277  #define spin_lock_init(_lock) \
spin_lock  function  include/linux/spinlock.h  283  static inline void spin_lock(spinlock_t *lock)
spin_lock_bh  function  include/linux/spinlock.h  288  static inline void spin_lock_bh(spinlock_t *lock)
spin_trylock  function  include/linux/spinlock.h  293  static inline int spin_trylock(spinlock_t *lock)
spin_lock_nested  macro  include/linux/spinlock.h  298  #define spin_lock_nested(lock, subclass) \
spin_lock_nest_lock  macro  include/linux/spinlock.h  303  #define spin_lock_nest_lock(lock, nest_lock) \
spin_lock_irq  function  include/linux/spinlock.h  308  static inline void spin_lock_irq(spinlock_t *lock)
spin_lock_irqsave  macro  include/linux/spinlock.h  313  #define spin_lock_irqsave(lock, flags) \
spin_lock_irqsave_nested  macro  include/linux/spinlock.h  318  #define spin_lock_irqsave_nested(lock, flags, subclass) \
spin_unlock  function  include/linux/spinlock.h  323  static inline void spin_unlock(spinlock_t *lock)
spin_unlock_bh  function  include/linux/spinlock.h  328  static inline void spin_unlock_bh(spinlock_t *lock)
spin_unlock_irq  function  include/linux/spinlock.h  333  static inline void spin_unlock_irq(spinlock_t *lock)
spin_unlock_irqrestore  function  include/linux/spinlock.h  338  static inline void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
spin_trylock_bh  function  include/linux/spinlock.h  343  static inline int spin_trylock_bh(spinlock_t *lock)
spin_trylock_irq  function  include/linux/spinlock.h  348  static inline int spin_trylock_irq(spinlock_t *lock)
spin_trylock_irqsave  macro  include/linux/spinlock.h  353  #define spin_trylock_irqsave(lock, flags) \
spin_unlock_wait  function  include/linux/spinlock.h  358  static inline void spin_unlock_wait(spinlock_t *lock)
spin_is_locked  function  include/linux/spinlock.h  363  static inline int spin_is_locked(spinlock_t *lock)
spin_is_contended  function  include/linux/spinlock.h  368  static inline int spin_is_contended(spinlock_t *lock)
spin_can_lock  function  include/linux/spinlock.h  373  static inline int spin_can_lock(spinlock_t *lock)
assert_spin_locked  macro  include/linux/spinlock.h  378  #define assert_spin_locked(lock) assert_raw_spin_locked(&(lock)->rlock)
_atomic_dec_and_lock  prototype  include/linux/spinlock.h  393  extern int _atomic_dec_and_lock(atomic_t *atomic, spinlock_t *lock);
atomic_dec_and_lock  macro  include/linux/spinlock.h  394  #define atomic_dec_and_lock(atomic, lock) \
_LINUX_IOPORT_H  macro  include/linux/ioport.h  9  #define _LINUX_IOPORT_H
IORESOURCE_BITS  macro  include/linux/ioport.h  29  #define IORESOURCE_BITS 0x000000ff /* Bus-specific bits */
IORESOURCE_TYPE_BITS  macro  include/linux/ioport.h  31  #define IORESOURCE_TYPE_BITS 0x00001f00 /* Resource type */
IORESOURCE_IO  macro  include/linux/ioport.h  32  #define IORESOURCE_IO 0x00000100 /* PCI/ISA I/O ports */
IORESOURCE_MEM  macro  include/linux/ioport.h  33  #define IORESOURCE_MEM 0x00000200
IORESOURCE_REG  macro  include/linux/ioport.h  34  #define IORESOURCE_REG 0x00000300 /* Register offsets */
IORESOURCE_IRQ  macro  include/linux/ioport.h  35  #define IORESOURCE_IRQ 0x00000400
IORESOURCE_DMA  macro  include/linux/ioport.h  36  #define IORESOURCE_DMA 0x00000800
IORESOURCE_BUS  macro  include/linux/ioport.h  37  #define IORESOURCE_BUS 0x00001000
IORESOURCE_PREFETCH  macro  include/linux/ioport.h  39  #define IORESOURCE_PREFETCH 0x00002000 /* No side effects */
IORESOURCE_READONLY  macro  include/linux/ioport.h  40  #define IORESOURCE_READONLY 0x00004000
IORESOURCE_CACHEABLE  macro  include/linux/ioport.h  41  #define IORESOURCE_CACHEABLE 0x00008000
IORESOURCE_RANGELENGTH  macro  include/linux/ioport.h  42  #define IORESOURCE_RANGELENGTH 0x00010000
IORESOURCE_SHADOWABLE  macro  include/linux/ioport.h  43  #define IORESOURCE_SHADOWABLE 0x00020000
IORESOURCE_SIZEALIGN  macro  include/linux/ioport.h  45  #define IORESOURCE_SIZEALIGN 0x00040000 /* size indicates alignment */
IORESOURCE_STARTALIGN  macro  include/linux/ioport.h  46  #define IORESOURCE_STARTALIGN 0x00080000 /* start field is alignment */
IORESOURCE_MEM_64  macro  include/linux/ioport.h  48  #define IORESOURCE_MEM_64 0x00100000
IORESOURCE_WINDOW  macro  include/linux/ioport.h  49  #define IORESOURCE_WINDOW 0x00200000 /* forwarded by bridge */
IORESOURCE_MUXED  macro  include/linux/ioport.h  50  #define IORESOURCE_MUXED 0x00400000 /* Resource is software muxed */
IORESOURCE_EXCLUSIVE  macro  include/linux/ioport.h  52  #define IORESOURCE_EXCLUSIVE 0x08000000 /* Userland may not map this resource */
IORESOURCE_DISABLED  macro  include/linux/ioport.h  53  #define IORESOURCE_DISABLED 0x10000000
IORESOURCE_UNSET  macro  include/linux/ioport.h  54  #define IORESOURCE_UNSET 0x20000000
IORESOURCE_AUTO  macro  include/linux/ioport.h  55  #define IORESOURCE_AUTO 0x40000000
IORESOURCE_BUSY  macro  include/linux/ioport.h  56  #define IORESOURCE_BUSY 0x80000000 /* Driver has marked this resource busy */
IORESOURCE_IRQ_HIGHEDGE  macro  include/linux/ioport.h  59  #define IORESOURCE_IRQ_HIGHEDGE (1<<0)
IORESOURCE_IRQ_LOWEDGE  macro  include/linux/ioport.h  60  #define IORESOURCE_IRQ_LOWEDGE (1<<1)
IORESOURCE_IRQ_HIGHLEVEL  macro  include/linux/ioport.h  61  #define IORESOURCE_IRQ_HIGHLEVEL (1<<2)
IORESOURCE_IRQ_LOWLEVEL  macro  include/linux/ioport.h  62  #define IORESOURCE_IRQ_LOWLEVEL (1<<3)
IORESOURCE_IRQ_SHAREABLE  macro  include/linux/ioport.h  63  #define IORESOURCE_IRQ_SHAREABLE (1<<4)
IORESOURCE_IRQ_OPTIONAL  macro  include/linux/ioport.h  64  #define IORESOURCE_IRQ_OPTIONAL (1<<5)
IORESOURCE_DMA_TYPE_MASK  macro  include/linux/ioport.h  67  #define IORESOURCE_DMA_TYPE_MASK (3<<0)
IORESOURCE_DMA_8BIT  macro  include/linux/ioport.h  68  #define IORESOURCE_DMA_8BIT (0<<0)
IORESOURCE_DMA_8AND16BIT  macro  include/linux/ioport.h  69  #define IORESOURCE_DMA_8AND16BIT (1<<0)
IORESOURCE_DMA_16BIT  macro  include/linux/ioport.h  70  #define IORESOURCE_DMA_16BIT (2<<0)
IORESOURCE_DMA_MASTER  macro  include/linux/ioport.h  72  #define IORESOURCE_DMA_MASTER (1<<2)
IORESOURCE_DMA_BYTE  macro  include/linux/ioport.h  73  #define IORESOURCE_DMA_BYTE (1<<3)
IORESOURCE_DMA_WORD  macro  include/linux/ioport.h  74  #define IORESOURCE_DMA_WORD (1<<4)
IORESOURCE_DMA_SPEED_MASK  macro  include/linux/ioport.h  76  #define IORESOURCE_DMA_SPEED_MASK (3<<6)
IORESOURCE_DMA_COMPATIBLE  macro  include/linux/ioport.h  77  #define IORESOURCE_DMA_COMPATIBLE (0<<6)
IORESOURCE_DMA_TYPEA  macro  include/linux/ioport.h  78  #define IORESOURCE_DMA_TYPEA (1<<6)
IORESOURCE_DMA_TYPEB  macro  include/linux/ioport.h  79  #define IORESOURCE_DMA_TYPEB (2<<6)
IORESOURCE_DMA_TYPEF  macro  include/linux/ioport.h  80  #define IORESOURCE_DMA_TYPEF (3<<6)
IORESOURCE_MEM_WRITEABLE  macro  include/linux/ioport.h  83  #define IORESOURCE_MEM_WRITEABLE (1<<0) /* dup: IORESOURCE_READONLY */
IORESOURCE_MEM_CACHEABLE  macro  include/linux/ioport.h  84  #define IORESOURCE_MEM_CACHEABLE (1<<1) /* dup: IORESOURCE_CACHEABLE */
IORESOURCE_MEM_RANGELENGTH  macro  include/linux/ioport.h  85  #define IORESOURCE_MEM_RANGELENGTH (1<<2) /* dup: IORESOURCE_RANGELENGTH */
IORESOURCE_MEM_TYPE_MASK  macro  include/linux/ioport.h  86  #define IORESOURCE_MEM_TYPE_MASK (3<<3)
IORESOURCE_MEM_8BIT  macro  include/linux/ioport.h  87  #define IORESOURCE_MEM_8BIT (0<<3)
IORESOURCE_MEM_16BIT  macro  include/linux/ioport.h  88  #define IORESOURCE_MEM_16BIT (1<<3)
IORESOURCE_MEM_8AND16BIT  macro  include/linux/ioport.h  89  #define IORESOURCE_MEM_8AND16BIT (2<<3)
IORESOURCE_MEM_32BIT  macro  include/linux/ioport.h  90  #define IORESOURCE_MEM_32BIT (3<<3)
IORESOURCE_MEM_SHADOWABLE  macro  include/linux/ioport.h  91  #define IORESOURCE_MEM_SHADOWABLE (1<<5) /* dup: IORESOURCE_SHADOWABLE */
IORESOURCE_MEM_EXPANSIONROM  macro  include/linux/ioport.h  92  #define IORESOURCE_MEM_EXPANSIONROM (1<<6)
IORESOURCE_IO_16BIT_ADDR  macro  include/linux/ioport.h  95  #define IORESOURCE_IO_16BIT_ADDR (1<<0)
IORESOURCE_IO_FIXED  macro  include/linux/ioport.h  96  #define IORESOURCE_IO_FIXED (1<<1)
IORESOURCE_ROM_ENABLE  macro  include/linux/ioport.h  99  #define IORESOURCE_ROM_ENABLE (1<<0) /* ROM is enabled, same as PCI_ROM_ADDRESS_ENABLE */
IORESOURCE_ROM_SHADOW  macro  include/linux/ioport.h  100  #define IORESOURCE_ROM_SHADOW (1<<1) /* ROM is copy at C000:0 */
IORESOURCE_ROM_COPY  macro  include/linux/ioport.h  101  #define IORESOURCE_ROM_COPY (1<<2) /* ROM is alloc'd copy, resource field overlaid */
IORESOURCE_ROM_BIOS_COPY  macro  include/linux/ioport.h  102  #define IORESOURCE_ROM_BIOS_COPY (1<<3) /* ROM is BIOS copy, resource field overlaid */
IORESOURCE_PCI_FIXED  macro  include/linux/ioport.h  105  #define IORESOURCE_PCI_FIXED (1<<4) /* Do not move resource */
DEFINE_RES_NAMED  macro  include/linux/ioport.h  109  #define DEFINE_RES_NAMED(_start, _size, _name, _flags) \
DEFINE_RES_IO_NAMED  macro  include/linux/ioport.h  117  #define DEFINE_RES_IO_NAMED(_start, _size, _name) \
DEFINE_RES_IO  macro  include/linux/ioport.h  119  #define DEFINE_RES_IO(_start, _size) \
DEFINE_RES_MEM_NAMED  macro  include/linux/ioport.h  122  #define DEFINE_RES_MEM_NAMED(_start, _size, _name) \
DEFINE_RES_MEM  macro  include/linux/ioport.h  124  #define DEFINE_RES_MEM(_start, _size) \
DEFINE_RES_IRQ_NAMED  macro  include/linux/ioport.h  127  #define DEFINE_RES_IRQ_NAMED(_irq, _name) \
DEFINE_RES_IRQ  macro  include/linux/ioport.h  129  #define DEFINE_RES_IRQ(_irq) \
DEFINE_RES_DMA_NAMED  macro  include/linux/ioport.h  132  #define DEFINE_RES_DMA_NAMED(_dma, _name) \
DEFINE_RES_DMA  macro  include/linux/ioport.h  134  #define DEFINE_RES_DMA(_dma) \
request_resource_conflict  prototype  include/linux/ioport.h  141  extern struct resource *request_resource_conflict(struct resource *root, struct resource *new);
request_resource  prototype  include/linux/ioport.h  142  extern int request_resource(struct resource *root, struct resource *new);
release_resource  prototype  include/linux/ioport.h  143  extern int release_resource(struct resource *new);
release_child_resources  prototype  include/linux/ioport.h  144  void release_child_resources(struct resource *new);
reserve_region_with_split  prototype  include/linux/ioport.h  147  extern void reserve_region_with_split(struct resource *root,resource_size_t start, resource_size_t end,const char *name);
insert_resource_conflict  prototype  include/linux/ioport.h  148  extern struct resource *insert_resource_conflict(struct resource *parent, struct resource *new);
insert_resource  prototype  include/linux/ioport.h  149  extern int insert_resource(struct resource *parent, struct resource *new);
insert_resource_expand_to_fit  prototype  include/linux/ioport.h  150  extern void insert_resource_expand_to_fit(struct resource *root, struct resource *new);
arch_remove_reservations  prototype  include/linux/ioport.h  151  extern void arch_remove_reservations(struct resource *avail);
allocate_resource  prototype  include/linux/ioport.h  159  extern int allocate_resource(struct resource *root, struct resource *new,resource_size_t size, resource_size_t min,resource_size_t max, resource_size_t align,resource_size_t (*alignf)(void *,const struct resource *,resource_size_t,resource_size_t),void *alignf_data);
lookup_resource  prototype  include/linux/ioport.h  160  struct resource *lookup_resource(struct resource *root, resource_size_t start);
adjust_resource  prototype  include/linux/ioport.h  162  int adjust_resource(struct resource *res, resource_size_t start,resource_size_t size);
resource_alignment  prototype  include/linux/ioport.h  163  resource_size_t resource_alignment(struct resource *res);
resource_size  function  include/linux/ioport.h  164  static inline resource_size_t resource_size(const struct resource *res)
resource_type  function  include/linux/ioport.h  168  static inline unsigned long resource_type(const struct resource *res)
request_region  macro  include/linux/ioport.h  174  #define request_region(start,n,name) __request_region(&ioport_resource, (start), (n), (name), 0)
request_muxed_region  macro  include/linux/ioport.h  175  #define request_muxed_region(start,n,name) __request_region(&ioport_resource, (start), (n), (name), IORESOURCE_MUXED)
__request_mem_region  macro  include/linux/ioport.h  176  #define __request_mem_region(start,n,name, excl) __request_region(&iomem_resource, (start), (n), (name), excl)
request_mem_region  macro  include/linux/ioport.h  177  #define request_mem_region(start,n,name) __request_region(&iomem_resource, (start), (n), (name), 0)
request_mem_region_exclusive  macro  include/linux/ioport.h  178  #define request_mem_region_exclusive(start,n,name) \
rename_region  macro  include/linux/ioport.h  180  #define rename_region(region, newname) do { (region)->name = (newname); } while (0)
__request_region  prototype  include/linux/ioport.h  185  extern struct resource * __request_region(struct resource *,resource_size_t start,resource_size_t n,const char *name, int flags);
release_region  macro  include/linux/ioport.h  188  #define release_region(start,n) __release_region(&ioport_resource, (start), (n))
check_mem_region  macro  include/linux/ioport.h  189  #define check_mem_region(start,n) __check_region(&iomem_resource, (start), (n))
release_mem_region  macro  include/linux/ioport.h  190  #define release_mem_region(start,n) __release_region(&iomem_resource, (start), (n))
__check_region  prototype  include/linux/ioport.h  192  extern int __check_region(struct resource *, resource_size_t, resource_size_t);
__release_region  prototype  include/linux/ioport.h  194  extern void __release_region(struct resource *, resource_size_t,resource_size_t);
check_region  function  include/linux/ioport.h  197  static inline int __deprecated check_region(resource_size_t s,resource_size_t n)
devm_request_region  macro  include/linux/ioport.h  204  #define devm_request_region(dev,start,n,name) \
devm_request_mem_region  macro  include/linux/ioport.h  206  #define devm_request_mem_region(dev,start,n,name) \
__devm_request_region  prototype  include/linux/ioport.h  211  extern struct resource * __devm_request_region(struct device *dev,struct resource *parent, resource_size_t start,resource_size_t n, const char *name);
devm_release_region  macro  include/linux/ioport.h  213  #define devm_release_region(dev, start, n) \
devm_release_mem_region  macro  include/linux/ioport.h  215  #define devm_release_mem_region(dev, start, n) \
__devm_release_region  prototype  include/linux/ioport.h  219  extern void __devm_release_region(struct device *dev, struct resource *parent,resource_size_t start, resource_size_t n);
iomem_map_sanity_check  prototype  include/linux/ioport.h  220  extern int iomem_map_sanity_check(resource_size_t addr, unsigned long size);
iomem_is_exclusive  prototype  include/linux/ioport.h  221  extern int iomem_is_exclusive(u64 addr);
walk_system_ram_range  prototype  include/linux/ioport.h  225  walk_system_ram_range(unsigned long start_pfn, unsigned long nr_pages,void *arg, int (*func)(unsigned long, unsigned long, void *));
resource_overlaps  function  include/linux/ioport.h  228  static inline bool resource_overlaps(struct resource *r1, struct resource *r2)
_LINUX_INIT_H  macro  include/linux/init.h  2  #define _LINUX_INIT_H
__init  macro  include/linux/init.h  44  #define __init __section(.init.text) __cold notrace
__initdata  macro  include/linux/init.h  45  #define __initdata __section(.init.data)
__initconst  macro  include/linux/init.h  46  #define __initconst __constsection(.init.rodata)
__exitdata  macro  include/linux/init.h  47  #define __exitdata __section(.exit.data)
__exit_call  macro  include/linux/init.h  48  #define __exit_call __used __section(.exitcall.exit)
__constsection  macro  include/linux/init.h  58  #define __constsection(x) __section(x)
__ref  macro  include/linux/init.h  78  #define __ref __section(.ref.text) noinline
__refdata  macro  include/linux/init.h  79  #define __refdata __section(.ref.data)
__refconst  macro  include/linux/init.h  80  #define __refconst __constsection(.ref.rodata)
__init_refok  macro  include/linux/init.h  83  #define __init_refok __ref
__initdata_refok  macro  include/linux/init.h  84  #define __initdata_refok __refdata
__exit_refok  macro  include/linux/init.h  85  #define __exit_refok __ref
__exitused  macro  include/linux/init.h  91  #define __exitused __used
__exit  macro  include/linux/init.h  94  #define __exit __section(.exit.text) __exitused __cold notrace
__cpuinit  macro  include/linux/init.h  97  #define __cpuinit __section(.cpuinit.text) __cold notrace
__cpuinitdata  macro  include/linux/init.h  98  #define __cpuinitdata __section(.cpuinit.data)
__cpuinitconst  macro  include/linux/init.h  99  #define __cpuinitconst __constsection(.cpuinit.rodata)
__cpuexit  macro  include/linux/init.h  100  #define __cpuexit __section(.cpuexit.text) __exitused __cold notrace
__cpuexitdata  macro  include/linux/init.h  101  #define __cpuexitdata __section(.cpuexit.data)
__cpuexitconst  macro  include/linux/init.h  102  #define __cpuexitconst __constsection(.cpuexit.rodata)
__meminit  macro  include/linux/init.h  105  #define __meminit __section(.meminit.text) __cold notrace
__meminitdata  macro  include/linux/init.h  106  #define __meminitdata __section(.meminit.data)
__meminitconst  macro  include/linux/init.h  107  #define __meminitconst __constsection(.meminit.rodata)
__memexit  macro  include/linux/init.h  108  #define __memexit __section(.memexit.text) __exitused __cold notrace
__memexitdata  macro  include/linux/init.h  109  #define __memexitdata __section(.memexit.data)
__memexitconst  macro  include/linux/init.h  110  #define __memexitconst __constsection(.memexit.rodata)
__HEAD  macro  include/linux/init.h  113  #define __HEAD .section ".head.text","ax"
__INIT  macro  include/linux/init.h  114  #define __INIT .section ".init.text","ax"
__FINIT  macro  include/linux/init.h  115  #define __FINIT .previous
__INITDATA  macro  include/linux/init.h  117  #define __INITDATA .section ".init.data","aw",%progbits
__INITRODATA  macro  include/linux/init.h  118  #define __INITRODATA .section ".init.rodata","a",%progbits
__FINITDATA  macro  include/linux/init.h  119  #define __FINITDATA .previous
__CPUINIT  macro  include/linux/init.h  121  #define __CPUINIT .section ".cpuinit.text", "ax"
__CPUINITDATA  macro  include/linux/init.h  122  #define __CPUINITDATA .section ".cpuinit.data", "aw"
__CPUINITRODATA  macro  include/linux/init.h  123  #define __CPUINITRODATA .section ".cpuinit.rodata", "a"
__MEMINIT  macro  include/linux/init.h  125  #define __MEMINIT .section ".meminit.text", "ax"
__MEMINITDATA  macro  include/linux/init.h  126  #define __MEMINITDATA .section ".meminit.data", "aw"
__MEMINITRODATA  macro  include/linux/init.h  127  #define __MEMINITRODATA .section ".meminit.rodata", "a"
__REF  macro  include/linux/init.h  130  #define __REF .section ".ref.text", "ax"
__REFDATA  macro  include/linux/init.h  131  #define __REFDATA .section ".ref.data", "aw"
__REFCONST  macro  include/linux/init.h  132  #define __REFCONST .section ".ref.rodata", "a"
do_one_initcall  prototype  include/linux/init.h  148  extern int do_one_initcall(initcall_t fn);
setup_arch  prototype  include/linux/init.h  154  void setup_arch(char **);
prepare_namespace  prototype  include/linux/init.h  155  void prepare_namespace(void);
__define_initcall  macro  include/linux/init.h  177  #define __define_initcall(fn, id) \
early_initcall  macro  include/linux/init.h  284  #define early_initcall(fn) module_init(fn)
pure_initcall  macro  include/linux/init.h  195  #define pure_initcall(fn) __define_initcall(fn, 0)
core_initcall  macro  include/linux/init.h  285  #define core_initcall(fn) module_init(fn)
core_initcall_sync  macro  include/linux/init.h  198  #define core_initcall_sync(fn) __define_initcall(fn, 1s)
postcore_initcall  macro  include/linux/init.h  286  #define postcore_initcall(fn) module_init(fn)
postcore_initcall_sync  macro  include/linux/init.h  200  #define postcore_initcall_sync(fn) __define_initcall(fn, 2s)
arch_initcall  macro  include/linux/init.h  287  #define arch_initcall(fn) module_init(fn)
arch_initcall_sync  macro  include/linux/init.h  202  #define arch_initcall_sync(fn) __define_initcall(fn, 3s)
subsys_initcall  macro  include/linux/init.h  288  #define subsys_initcall(fn) module_init(fn)
subsys_initcall_sync  macro  include/linux/init.h  204  #define subsys_initcall_sync(fn) __define_initcall(fn, 4s)
fs_initcall  macro  include/linux/init.h  289  #define fs_initcall(fn) module_init(fn)
fs_initcall_sync  macro  include/linux/init.h  206  #define fs_initcall_sync(fn) __define_initcall(fn, 5s)
rootfs_initcall  macro  include/linux/init.h  207  #define rootfs_initcall(fn) __define_initcall(fn, rootfs)
device_initcall  macro  include/linux/init.h  290  #define device_initcall(fn) module_init(fn)
device_initcall_sync  macro  include/linux/init.h  209  #define device_initcall_sync(fn) __define_initcall(fn, 6s)
late_initcall  macro  include/linux/init.h  291  #define late_initcall(fn) module_init(fn)
late_initcall_sync  macro  include/linux/init.h  211  #define late_initcall_sync(fn) __define_initcall(fn, 7s)
__initcall  macro  include/linux/init.h  213  #define __initcall(fn) device_initcall(fn)
__exitcall  macro  include/linux/init.h  215  #define __exitcall(fn) \
console_initcall  macro  include/linux/init.h  218  #define console_initcall(fn) \
security_initcall  macro  include/linux/init.h  293  #define security_initcall(fn) module_init(fn)
__setup_param  macro  include/linux/init.h  307  #define __setup_param(str, unique_id, fn) /* nothing */
__setup  macro  include/linux/init.h  308  #define __setup(str, func) /* nothing */
early_param  macro  include/linux/init.h  251  #define early_param(str, fn) \
parse_early_param  prototype  include/linux/init.h  255  void __init parse_early_param(void);
parse_early_options  prototype  include/linux/init.h  256  void __init parse_early_options(char *cmdline);
module_init  macro  include/linux/init.h  296  #define module_init(initfn) \
module_exit  macro  include/linux/init.h  302  #define module_exit(exitfn) \
__nosavedata  macro  include/linux/init.h  312  #define __nosavedata __section(.data..nosave)
__init_or_module  macro  include/linux/init.h  324  #define __init_or_module __init
__initdata_or_module  macro  include/linux/init.h  325  #define __initdata_or_module __initdata
__initconst_or_module  macro  include/linux/init.h  326  #define __initconst_or_module __initconst
__INIT_OR_MODULE  macro  include/linux/init.h  327  #define __INIT_OR_MODULE __INIT
__INITDATA_OR_MODULE  macro  include/linux/init.h  328  #define __INITDATA_OR_MODULE __INITDATA
__INITRODATA_OR_MODULE  macro  include/linux/init.h  329  #define __INITRODATA_OR_MODULE __INITRODATA
__exit_p  macro  include/linux/init.h  335  #define __exit_p(x) NULL
_SCREEN_INFO_H  macro  include/linux/screen_info.h  2  #define _SCREEN_INFO_H
ORIG_X  macro  include/linux/screen_info.h  8  #define ORIG_X (screen_info.orig_x)
ORIG_Y  macro  include/linux/screen_info.h  9  #define ORIG_Y (screen_info.orig_y)
ORIG_VIDEO_MODE  macro  include/linux/screen_info.h  10  #define ORIG_VIDEO_MODE (screen_info.orig_video_mode)
ORIG_VIDEO_COLS  macro  include/linux/screen_info.h  11  #define ORIG_VIDEO_COLS (screen_info.orig_video_cols)
ORIG_VIDEO_EGA_BX  macro  include/linux/screen_info.h  12  #define ORIG_VIDEO_EGA_BX (screen_info.orig_video_ega_bx)
ORIG_VIDEO_LINES  macro  include/linux/screen_info.h  13  #define ORIG_VIDEO_LINES (screen_info.orig_video_lines)
ORIG_VIDEO_ISVGA  macro  include/linux/screen_info.h  14  #define ORIG_VIDEO_ISVGA (screen_info.orig_video_isVGA)
ORIG_VIDEO_POINTS  macro  include/linux/screen_info.h  15  #define ORIG_VIDEO_POINTS (screen_info.orig_video_points)
__linux_video_vga_h__  macro  include/video/vga.h  18  #define __linux_video_vga_h__
VGA_CRT_DC  macro  include/video/vga.h  38  #define VGA_CRT_DC 0x3D5 /* CRT Controller Data Register - color emulation */
VGA_CRT_DM  macro  include/video/vga.h  39  #define VGA_CRT_DM 0x3B5 /* CRT Controller Data Register - mono emulation */
VGA_ATT_R  macro  include/video/vga.h  40  #define VGA_ATT_R 0x3C1 /* Attribute Controller Data Read Register */
VGA_ATT_W  macro  include/video/vga.h  41  #define VGA_ATT_W 0x3C0 /* Attribute Controller Data Write Register */
VGA_GFX_D  macro  include/video/vga.h  42  #define VGA_GFX_D 0x3CF /* Graphics Controller Data Register */
VGA_SEQ_D  macro  include/video/vga.h  43  #define VGA_SEQ_D 0x3C5 /* Sequencer Data Register */
VGA_MIS_R  macro  include/video/vga.h  44  #define VGA_MIS_R 0x3CC /* Misc Output Read Register */
VGA_MIS_W  macro  include/video/vga.h  45  #define VGA_MIS_W 0x3C2 /* Misc Output Write Register */
VGA_FTC_R  macro  include/video/vga.h  46  #define VGA_FTC_R 0x3CA /* Feature Control Read Register */
VGA_IS1_RC  macro  include/video/vga.h  47  #define VGA_IS1_RC 0x3DA /* Input Status Register 1 - color emulation */
VGA_IS1_RM  macro  include/video/vga.h  48  #define VGA_IS1_RM 0x3BA /* Input Status Register 1 - mono emulation */
VGA_PEL_D  macro  include/video/vga.h  49  #define VGA_PEL_D 0x3C9 /* PEL Data Register */
VGA_PEL_MSK  macro  include/video/vga.h  50  #define VGA_PEL_MSK 0x3C6 /* PEL mask register */
EGA_GFX_E0  macro  include/video/vga.h  53  #define EGA_GFX_E0 0x3CC /* Graphics enable processor 0 */
EGA_GFX_E1  macro  include/video/vga.h  54  #define EGA_GFX_E1 0x3CA /* Graphics enable processor 1 */
VGA_CRT_IC  macro  include/video/vga.h  57  #define VGA_CRT_IC 0x3D4 /* CRT Controller Index - color emulation */
VGA_CRT_IM  macro  include/video/vga.h  58  #define VGA_CRT_IM 0x3B4 /* CRT Controller Index - mono emulation */
VGA_ATT_IW  macro  include/video/vga.h  59  #define VGA_ATT_IW 0x3C0 /* Attribute Controller Index & Data Write Register */
VGA_GFX_I  macro  include/video/vga.h  60  #define VGA_GFX_I 0x3CE /* Graphics Controller Index */
VGA_SEQ_I  macro  include/video/vga.h  61  #define VGA_SEQ_I 0x3C4 /* Sequencer Index */
VGA_PEL_IW  macro  include/video/vga.h  62  #define VGA_PEL_IW 0x3C8 /* PEL Write Index */
VGA_PEL_IR  macro  include/video/vga.h  63  #define VGA_PEL_IR 0x3C7 /* PEL Read Index */
VGA_CRT_C  macro  include/video/vga.h  66  #define VGA_CRT_C 0x19 /* Number of CRT Controller Registers */
VGA_ATT_C  macro  include/video/vga.h  67  #define VGA_ATT_C 0x15 /* Number of Attribute Controller Registers */
VGA_GFX_C  macro  include/video/vga.h  68  #define VGA_GFX_C 0x09 /* Number of Graphics Controller Registers */
VGA_SEQ_C  macro  include/video/vga.h  69  #define VGA_SEQ_C 0x05 /* Number of Sequencer Registers */
VGA_MIS_C  macro  include/video/vga.h  70  #define VGA_MIS_C 0x01 /* Number of Misc Output Register */
VGA_MIS_COLOR  macro  include/video/vga.h  73  #define VGA_MIS_COLOR 0x01
VGA_MIS_ENB_MEM_ACCESS  macro  include/video/vga.h  74  #define VGA_MIS_ENB_MEM_ACCESS 0x02
VGA_MIS_DCLK_28322_720  macro  include/video/vga.h  75  #define VGA_MIS_DCLK_28322_720 0x04
VGA_MIS_ENB_PLL_LOAD  macro  include/video/vga.h  76  #define VGA_MIS_ENB_PLL_LOAD (0x04 | 0x08)
VGA_MIS_SEL_HIGH_PAGE  macro  include/video/vga.h  77  #define VGA_MIS_SEL_HIGH_PAGE 0x20
VGA_CRTC_H_TOTAL  macro  include/video/vga.h  80  #define VGA_CRTC_H_TOTAL 0
VGA_CRTC_H_DISP  macro  include/video/vga.h  81  #define VGA_CRTC_H_DISP 1
VGA_CRTC_H_BLANK_START  macro  include/video/vga.h  82  #define VGA_CRTC_H_BLANK_START 2
VGA_CRTC_H_BLANK_END  macro  include/video/vga.h  83  #define VGA_CRTC_H_BLANK_END 3
VGA_CRTC_H_SYNC_START  macro  include/video/vga.h  84  #define VGA_CRTC_H_SYNC_START 4
VGA_CRTC_H_SYNC_END  macro  include/video/vga.h  85  #define VGA_CRTC_H_SYNC_END 5
VGA_CRTC_V_TOTAL  macro  include/video/vga.h  86  #define VGA_CRTC_V_TOTAL 6
VGA_CRTC_OVERFLOW  macro  include/video/vga.h  87  #define VGA_CRTC_OVERFLOW 7
VGA_CRTC_PRESET_ROW  macro  include/video/vga.h  88  #define VGA_CRTC_PRESET_ROW 8
VGA_CRTC_MAX_SCAN  macro  include/video/vga.h  89  #define VGA_CRTC_MAX_SCAN 9
VGA_CRTC_CURSOR_START  macro  include/video/vga.h  90  #define VGA_CRTC_CURSOR_START 0x0A
VGA_CRTC_CURSOR_END  macro  include/video/vga.h  91  #define VGA_CRTC_CURSOR_END 0x0B
VGA_CRTC_START_HI  macro  include/video/vga.h  92  #define VGA_CRTC_START_HI 0x0C
VGA_CRTC_START_LO  macro  include/video/vga.h  93  #define VGA_CRTC_START_LO 0x0D
VGA_CRTC_CURSOR_HI  macro  include/video/vga.h  94  #define VGA_CRTC_CURSOR_HI 0x0E
VGA_CRTC_CURSOR_LO  macro  include/video/vga.h  95  #define VGA_CRTC_CURSOR_LO 0x0F
VGA_CRTC_V_SYNC_START  macro  include/video/vga.h  96  #define VGA_CRTC_V_SYNC_START 0x10
VGA_CRTC_V_SYNC_END  macro  include/video/vga.h  97  #define VGA_CRTC_V_SYNC_END 0x11
VGA_CRTC_V_DISP_END  macro  include/video/vga.h  98  #define VGA_CRTC_V_DISP_END 0x12
VGA_CRTC_OFFSET  macro  include/video/vga.h  99  #define VGA_CRTC_OFFSET 0x13
VGA_CRTC_UNDERLINE  macro  include/video/vga.h  100  #define VGA_CRTC_UNDERLINE 0x14
VGA_CRTC_V_BLANK_START  macro  include/video/vga.h  101  #define VGA_CRTC_V_BLANK_START 0x15
VGA_CRTC_V_BLANK_END  macro  include/video/vga.h  102  #define VGA_CRTC_V_BLANK_END 0x16
VGA_CRTC_MODE  macro  include/video/vga.h  103  #define VGA_CRTC_MODE 0x17
VGA_CRTC_LINE_COMPARE  macro  include/video/vga.h  104  #define VGA_CRTC_LINE_COMPARE 0x18
VGA_CRTC_REGS  macro  include/video/vga.h  105  #define VGA_CRTC_REGS VGA_CRT_C
VGA_CR11_LOCK_CR0_CR7  macro  include/video/vga.h  108  #define VGA_CR11_LOCK_CR0_CR7 0x80 /* lock writes to CR0 - CR7 */
VGA_CR17_H_V_SIGNALS_ENABLED  macro  include/video/vga.h  109  #define VGA_CR17_H_V_SIGNALS_ENABLED 0x80
VGA_ATC_PALETTE0  macro  include/video/vga.h  112  #define VGA_ATC_PALETTE0 0x00
VGA_ATC_PALETTE1  macro  include/video/vga.h  113  #define VGA_ATC_PALETTE1 0x01
VGA_ATC_PALETTE2  macro  include/video/vga.h  114  #define VGA_ATC_PALETTE2 0x02
VGA_ATC_PALETTE3  macro  include/video/vga.h  115  #define VGA_ATC_PALETTE3 0x03
VGA_ATC_PALETTE4  macro  include/video/vga.h  116  #define VGA_ATC_PALETTE4 0x04
VGA_ATC_PALETTE5  macro  include/video/vga.h  117  #define VGA_ATC_PALETTE5 0x05
VGA_ATC_PALETTE6  macro  include/video/vga.h  118  #define VGA_ATC_PALETTE6 0x06
VGA_ATC_PALETTE7  macro  include/video/vga.h  119  #define VGA_ATC_PALETTE7 0x07
VGA_ATC_PALETTE8  macro  include/video/vga.h  120  #define VGA_ATC_PALETTE8 0x08
VGA_ATC_PALETTE9  macro  include/video/vga.h  121  #define VGA_ATC_PALETTE9 0x09
VGA_ATC_PALETTEA  macro  include/video/vga.h  122  #define VGA_ATC_PALETTEA 0x0A
VGA_ATC_PALETTEB  macro  include/video/vga.h  123  #define VGA_ATC_PALETTEB 0x0B
VGA_ATC_PALETTEC  macro  include/video/vga.h  124  #define VGA_ATC_PALETTEC 0x0C
VGA_ATC_PALETTED  macro  include/video/vga.h  125  #define VGA_ATC_PALETTED 0x0D
VGA_ATC_PALETTEE  macro  include/video/vga.h  126  #define VGA_ATC_PALETTEE 0x0E
VGA_ATC_PALETTEF  macro  include/video/vga.h  127  #define VGA_ATC_PALETTEF 0x0F
VGA_ATC_MODE  macro  include/video/vga.h  128  #define VGA_ATC_MODE 0x10
VGA_ATC_OVERSCAN  macro  include/video/vga.h  129  #define VGA_ATC_OVERSCAN 0x11
VGA_ATC_PLANE_ENABLE  macro  include/video/vga.h  130  #define VGA_ATC_PLANE_ENABLE 0x12
VGA_ATC_PEL  macro  include/video/vga.h  131  #define VGA_ATC_PEL 0x13
VGA_ATC_COLOR_PAGE  macro  include/video/vga.h  132  #define VGA_ATC_COLOR_PAGE 0x14
VGA_AR_ENABLE_DISPLAY  macro  include/video/vga.h  134  #define VGA_AR_ENABLE_DISPLAY 0x20
VGA_SEQ_RESET  macro  include/video/vga.h  137  #define VGA_SEQ_RESET 0x00
VGA_SEQ_CLOCK_MODE  macro  include/video/vga.h  138  #define VGA_SEQ_CLOCK_MODE 0x01
VGA_SEQ_PLANE_WRITE  macro  include/video/vga.h  139  #define VGA_SEQ_PLANE_WRITE 0x02
VGA_SEQ_CHARACTER_MAP  macro  include/video/vga.h  140  #define VGA_SEQ_CHARACTER_MAP 0x03
VGA_SEQ_MEMORY_MODE  macro  include/video/vga.h  141  #define VGA_SEQ_MEMORY_MODE 0x04
VGA_SR01_CHAR_CLK_8DOTS  macro  include/video/vga.h  144  #define VGA_SR01_CHAR_CLK_8DOTS 0x01 /* bit 0: character clocks 8 dots wide are generated */
VGA_SR01_SCREEN_OFF  macro  include/video/vga.h  145  #define VGA_SR01_SCREEN_OFF 0x20 /* bit 5: Screen is off */
VGA_SR02_ALL_PLANES  macro  include/video/vga.h  146  #define VGA_SR02_ALL_PLANES 0x0F /* bits 3-0: enable access to all planes */
VGA_SR04_EXT_MEM  macro  include/video/vga.h  147  #define VGA_SR04_EXT_MEM 0x02 /* bit 1: allows complete mem access to 256K */
VGA_SR04_SEQ_MODE  macro  include/video/vga.h  148  #define VGA_SR04_SEQ_MODE 0x04 /* bit 2: directs system to use a sequential addressing mode */
VGA_SR04_CHN_4M  macro  include/video/vga.h  149  #define VGA_SR04_CHN_4M 0x08 /* bit 3: selects modulo 4 addressing for CPU access to display memory */
VGA_GFX_SR_VALUE  macro  include/video/vga.h  152  #define VGA_GFX_SR_VALUE 0x00
VGA_GFX_SR_ENABLE  macro  include/video/vga.h  153  #define VGA_GFX_SR_ENABLE 0x01
VGA_GFX_COMPARE_VALUE  macro  include/video/vga.h  154  #define VGA_GFX_COMPARE_VALUE 0x02
VGA_GFX_DATA_ROTATE  macro  include/video/vga.h  155  #define VGA_GFX_DATA_ROTATE 0x03
VGA_GFX_PLANE_READ  macro  include/video/vga.h  156  #define VGA_GFX_PLANE_READ 0x04
VGA_GFX_MODE  macro  include/video/vga.h  157  #define VGA_GFX_MODE 0x05
VGA_GFX_MISC  macro  include/video/vga.h  158  #define VGA_GFX_MISC 0x06
VGA_GFX_COMPARE_MASK  macro  include/video/vga.h  159  #define VGA_GFX_COMPARE_MASK 0x07
VGA_GFX_BIT_MASK  macro  include/video/vga.h  160  #define VGA_GFX_BIT_MASK 0x08
VGA_GR06_GRAPHICS_MODE  macro  include/video/vga.h  163  #define VGA_GR06_GRAPHICS_MODE 0x01
VGA_OUT16VAL  macro  include/video/vga.h  167  #define VGA_OUT16VAL(v, r) (((v) << 8) | (r))
VGA_OUTW_WRITE  macro  include/video/vga.h  171  #define VGA_OUTW_WRITE
VGA_SAVE_FONT0  macro  include/video/vga.h  175  #define VGA_SAVE_FONT0 1 /* save/restore plane 2 fonts */
VGA_SAVE_FONT1  macro  include/video/vga.h  176  #define VGA_SAVE_FONT1 2 /* save/restore plane 3 fonts */
VGA_SAVE_TEXT  macro  include/video/vga.h  177  #define VGA_SAVE_TEXT 4 /* save/restore plane 0/1 fonts */
VGA_SAVE_FONTS  macro  include/video/vga.h  178  #define VGA_SAVE_FONTS 7 /* save/restore all fonts */
VGA_SAVE_MODE  macro  include/video/vga.h  179  #define VGA_SAVE_MODE 8 /* save/restore video mode */
VGA_SAVE_CMAP  macro  include/video/vga.h  180  #define VGA_SAVE_CMAP 16 /* save/restore color map/DAC */
save_vga  prototype  include/video/vga.h  195  extern int save_vga(struct vgastate *state);
restore_vga  prototype  include/video/vga.h  196  extern int restore_vga(struct vgastate *state);
vga_io_r  function  include/video/vga.h  202  static inline unsigned char vga_io_r (unsigned short port)
vga_io_w  function  include/video/vga.h  207  static inline void vga_io_w (unsigned short port, unsigned char val)
vga_io_w_fast  function  include/video/vga.h  213  static inline void vga_io_w_fast (unsigned short port, unsigned char reg,unsigned char val)
vga_mm_r  function  include/video/vga.h  218  static inline unsigned char vga_mm_r (void __iomem *regbase, unsigned short port)
vga_mm_w  function  include/video/vga.h  223  static inline void vga_mm_w (void __iomem *regbase, unsigned short port, unsigned char val)
vga_mm_w_fast  function  include/video/vga.h  229  static inline void vga_mm_w_fast (void __iomem *regbase, unsigned short port,unsigned char reg, unsigned char val)
vga_r  function  include/video/vga.h  234  static inline unsigned char vga_r (void __iomem *regbase, unsigned short port)
vga_w  function  include/video/vga.h  242  static inline void vga_w (void __iomem *regbase, unsigned short port, unsigned char val)
vga_w_fast  function  include/video/vga.h  252  static inline void vga_w_fast (void __iomem *regbase, unsigned short port,unsigned char reg, unsigned char val)
vga_rcrt  function  include/video/vga.h  265  static inline unsigned char vga_rcrt (void __iomem *regbase, unsigned char reg)
vga_wcrt  function  include/video/vga.h  271  static inline void vga_wcrt (void __iomem *regbase, unsigned char reg, unsigned char val)
vga_io_rcrt  function  include/video/vga.h  281  static inline unsigned char vga_io_rcrt (unsigned char reg)
vga_io_wcrt  function  include/video/vga.h  287  static inline void vga_io_wcrt (unsigned char reg, unsigned char val)
vga_mm_rcrt  function  include/video/vga.h  297  static inline unsigned char vga_mm_rcrt (void __iomem *regbase, unsigned char reg)
vga_mm_wcrt  function  include/video/vga.h  303  static inline void vga_mm_wcrt (void __iomem *regbase, unsigned char reg, unsigned char val)
vga_rseq  function  include/video/vga.h  318  static inline unsigned char vga_rseq (void __iomem *regbase, unsigned char reg)
vga_wseq  function  include/video/vga.h  324  static inline void vga_wseq (void __iomem *regbase, unsigned char reg, unsigned char val)
vga_io_rseq  function  include/video/vga.h  334  static inline unsigned char vga_io_rseq (unsigned char reg)
vga_io_wseq  function  include/video/vga.h  340  static inline void vga_io_wseq (unsigned char reg, unsigned char val)
vga_mm_rseq  function  include/video/vga.h  350  static inline unsigned char vga_mm_rseq (void __iomem *regbase, unsigned char reg)
vga_mm_wseq  function  include/video/vga.h  356  static inline void vga_mm_wseq (void __iomem *regbase, unsigned char reg, unsigned char val)
vga_rgfx  function  include/video/vga.h  370  static inline unsigned char vga_rgfx (void __iomem *regbase, unsigned char reg)
vga_wgfx  function  include/video/vga.h  376  static inline void vga_wgfx (void __iomem *regbase, unsigned char reg, unsigned char val)
vga_io_rgfx  function  include/video/vga.h  386  static inline unsigned char vga_io_rgfx (unsigned char reg)
vga_io_wgfx  function  include/video/vga.h  392  static inline void vga_io_wgfx (unsigned char reg, unsigned char val)
vga_mm_rgfx  function  include/video/vga.h  402  static inline unsigned char vga_mm_rgfx (void __iomem *regbase, unsigned char reg)
vga_mm_wgfx  function  include/video/vga.h  408  static inline void vga_mm_wgfx (void __iomem *regbase, unsigned char reg, unsigned char val)
vga_rattr  function  include/video/vga.h  423  static inline unsigned char vga_rattr (void __iomem *regbase, unsigned char reg)
vga_wattr  function  include/video/vga.h  429  static inline void vga_wattr (void __iomem *regbase, unsigned char reg, unsigned char val)
vga_io_rattr  function  include/video/vga.h  435  static inline unsigned char vga_io_rattr (unsigned char reg)
vga_io_wattr  function  include/video/vga.h  441  static inline void vga_io_wattr (unsigned char reg, unsigned char val)
vga_mm_rattr  function  include/video/vga.h  447  static inline unsigned char vga_mm_rattr (void __iomem *regbase, unsigned char reg)
vga_mm_wattr  function  include/video/vga.h  453  static inline void vga_mm_wattr (void __iomem *regbase, unsigned char reg, unsigned char val)
_ASM_X86_IO_H  macro  arch/x86/include/asm/io.h  2  #define _ASM_X86_IO_H
ARCH_HAS_IOREMAP_WC  macro  arch/x86/include/asm/io.h  37  #define ARCH_HAS_IOREMAP_WC
build_mmio_read  macro  arch/x86/include/asm/io.h  43  #define build_mmio_read(name, size, type, reg, barrier) \
build_mmio_write  macro  arch/x86/include/asm/io.h  48  #define build_mmio_write(name, size, type, reg, barrier) \
readb_relaxed  macro  arch/x86/include/asm/io.h  69  #define readb_relaxed(a) __readb(a)
readw_relaxed  macro  arch/x86/include/asm/io.h  70  #define readw_relaxed(a) __readw(a)
readl_relaxed  macro  arch/x86/include/asm/io.h  71  #define readl_relaxed(a) __readl(a)
__raw_readb  macro  arch/x86/include/asm/io.h  72  #define __raw_readb __readb
__raw_readw  macro  arch/x86/include/asm/io.h  73  #define __raw_readw __readw
__raw_readl  macro  arch/x86/include/asm/io.h  74  #define __raw_readl __readl
__raw_writeb  macro  arch/x86/include/asm/io.h  76  #define __raw_writeb __writeb
__raw_writew  macro  arch/x86/include/asm/io.h  77  #define __raw_writew __writew
__raw_writel  macro  arch/x86/include/asm/io.h  78  #define __raw_writel __writel
mmiowb  macro  arch/x86/include/asm/io.h  80  #define mmiowb() barrier()
readq_relaxed  macro  arch/x86/include/asm/io.h  87  #define readq_relaxed(a) readq(a)
__raw_readq  macro  arch/x86/include/asm/io.h  89  #define __raw_readq(a) readq(a)
__raw_writeq  macro  arch/x86/include/asm/io.h  90  #define __raw_writeq(val, addr) writeq(val, addr)
readq  macro  arch/x86/include/asm/io.h  93  #define readq readq
writeq  macro  arch/x86/include/asm/io.h  94  #define writeq writeq
virt_to_phys  function  arch/x86/include/asm/io.h  111  static inline phys_addr_t virt_to_phys(volatile void *address)
phys_to_virt  function  arch/x86/include/asm/io.h  129  static inline void *phys_to_virt(phys_addr_t address)
page_to_phys  macro  arch/x86/include/asm/io.h  137  #define page_to_phys(page) ((dma_addr_t)page_to_pfn(page) << PAGE_SHIFT)
isa_virt_to_bus  function  arch/x86/include/asm/io.h  144  static inline unsigned int isa_virt_to_bus(volatile void *address)
isa_page_to_bus  macro  arch/x86/include/asm/io.h  148  #define isa_page_to_bus(page) ((unsigned int)page_to_phys(page))
isa_bus_to_virt  macro  arch/x86/include/asm/io.h  149  #define isa_bus_to_virt phys_to_virt
virt_to_bus  macro  arch/x86/include/asm/io.h  157  #define virt_to_bus virt_to_phys
bus_to_virt  macro  arch/x86/include/asm/io.h  158  #define bus_to_virt phys_to_virt
ioremap_nocache  prototype  arch/x86/include/asm/io.h  174  extern void __iomem *ioremap_nocache(resource_size_t offset, unsigned long size);
ioremap_cache  prototype  arch/x86/include/asm/io.h  175  extern void __iomem *ioremap_cache(resource_size_t offset, unsigned long size);
ioremap_prot  prototype  arch/x86/include/asm/io.h  177  extern void __iomem *ioremap_prot(resource_size_t offset, unsigned long size,unsigned long prot_val);
ioremap  function  arch/x86/include/asm/io.h  182  static inline void __iomem *ioremap(resource_size_t offset, unsigned long size)
iounmap  prototype  arch/x86/include/asm/io.h  187  extern void iounmap(volatile void __iomem *addr);
set_iounmap_nonlazy  prototype  arch/x86/include/asm/io.h  189  extern void set_iounmap_nonlazy(void);
xlate_dev_kmem_ptr  macro  arch/x86/include/asm/io.h  200  #define xlate_dev_kmem_ptr(p) p
memset_io  function  arch/x86/include/asm/io.h  203  memset_io(volatile void __iomem *addr, unsigned char val, size_t count)
memcpy_fromio  function  arch/x86/include/asm/io.h  209  memcpy_fromio(void *dst, const volatile void __iomem *src, size_t count)
memcpy_toio  function  arch/x86/include/asm/io.h  215  memcpy_toio(volatile void __iomem *dst, const void *src, size_t count)
__ISA_IO_base  macro  arch/x86/include/asm/io.h  228  #define __ISA_IO_base ((char __iomem *)(PAGE_OFFSET))
flush_write_buffers  function  arch/x86/include/asm/io.h  238  static inline void flush_write_buffers(void)
native_io_delay  prototype  arch/x86/include/asm/io.h  247  extern void native_io_delay(void);
io_delay_init  prototype  arch/x86/include/asm/io.h  250  extern void io_delay_init(void);
slow_down_io  function  arch/x86/include/asm/io.h  256  static inline void slow_down_io(void)
BUILDIO  macro  arch/x86/include/asm/io.h  268  #define BUILDIO(bwl, bw, type) \
xlate_dev_mem_ptr  prototype  arch/x86/include/asm/io.h  312  extern void *xlate_dev_mem_ptr(unsigned long phys);
unxlate_dev_mem_ptr  prototype  arch/x86/include/asm/io.h  313  extern void unxlate_dev_mem_ptr(unsigned long phys, void *addr);
ioremap_change_attr  prototype  arch/x86/include/asm/io.h  316  extern int ioremap_change_attr(unsigned long vaddr, unsigned long size,unsigned long prot_val);
ioremap_wc  prototype  arch/x86/include/asm/io.h  317  extern void __iomem *ioremap_wc(resource_size_t offset, unsigned long size);
early_ioremap_init  prototype  arch/x86/include/asm/io.h  324  extern void early_ioremap_init(void);
early_ioremap_reset  prototype  arch/x86/include/asm/io.h  325  extern void early_ioremap_reset(void);
early_ioremap  prototype  arch/x86/include/asm/io.h  327  extern void __iomem *early_ioremap(resource_size_t phys_addr,unsigned long size);
early_memremap  prototype  arch/x86/include/asm/io.h  329  extern void __iomem *early_memremap(resource_size_t phys_addr,unsigned long size);
early_iounmap  prototype  arch/x86/include/asm/io.h  330  extern void early_iounmap(void __iomem *addr, unsigned long size);
fixup_early_ioremap  prototype  arch/x86/include/asm/io.h  331  extern void fixup_early_ioremap(void);
is_early_ioremap_ptep  prototype  arch/x86/include/asm/io.h  332  extern bool is_early_ioremap_ptep(pte_t *ptep);
xen_biovec_phys_mergeable  prototype  arch/x86/include/asm/io.h  339  extern bool xen_biovec_phys_mergeable(const struct bio_vec *vec1,const struct bio_vec *vec2);
BIOVEC_PHYS_MERGEABLE  macro  arch/x86/include/asm/io.h  341  #define BIOVEC_PHYS_MERGEABLE(vec1, vec2) \
IO_SPACE_LIMIT  macro  arch/x86/include/asm/io.h  346  #define IO_SPACE_LIMIT 0xffff
_ASM_X86_VGA_H  macro  arch/x86/include/asm/vga.h  8  #define _ASM_X86_VGA_H
VGA_MAP_MEM  macro  arch/x86/include/asm/vga.h  15  #define VGA_MAP_MEM(x, s) (unsigned long)phys_to_virt(x)
vga_readb  macro  arch/x86/include/asm/vga.h  17  #define vga_readb(x) (*(x))
vga_writeb  macro  arch/x86/include/asm/vga.h  18  #define vga_writeb(x, y) (*(y) = (x))
__ARCH_HAS_VGA_DEFAULT_DEVICE  macro  arch/x86/include/asm/vga.h  21  #define __ARCH_HAS_VGA_DEFAULT_DEVICE
vga_default_device  prototype  arch/x86/include/asm/vga.h  22  extern struct pci_dev *vga_default_device(void);
vga_set_default_device  prototype  arch/x86/include/asm/vga.h  23  extern void vga_set_default_device(struct pci_dev *pdev);
_LINUX_VT_BUFFER_H_  macro  include/linux/vt_buffer.h  14  #define _LINUX_VT_BUFFER_H_
scr_writew  macro  include/linux/vt_buffer.h  22  #define scr_writew(val, addr) (*(addr) = (val))
scr_readw  macro  include/linux/vt_buffer.h  23  #define scr_readw(addr) (*(addr))
scr_memcpyw  function  include/linux/vt_buffer.h  40  static inline void scr_memcpyw(u16 *d, const u16 *s, unsigned int count)
scr_memmovew  function  include/linux/vt_buffer.h  49  static inline void scr_memmovew(u16 *d, const u16 *s, unsigned int count)
VT_BUF_HAVE_MEMCPYW  macro  include/linux/vt_buffer.h  26  #define VT_BUF_HAVE_MEMCPYW
VT_BUF_HAVE_MEMMOVEW  macro  include/linux/vt_buffer.h  27  #define VT_BUF_HAVE_MEMMOVEW
scr_memsetw  function  include/linux/vt_buffer.h  31  static inline void scr_memsetw(u16 *s, u16 c, unsigned int count)
_LINUX_CONSOLE_STRUCT_H  macro  include/linux/console_struct.h  13  #define _LINUX_CONSOLE_STRUCT_H
NPAR  macro  include/linux/console_struct.h  21  #define NPAR 16
vc_SAK  prototype  include/linux/console_struct.h  123  extern void vc_SAK(struct work_struct *work);
CUR_DEF  macro  include/linux/console_struct.h  125  #define CUR_DEF 0
CUR_NONE  macro  include/linux/console_struct.h  126  #define CUR_NONE 1
CUR_UNDERLINE  macro  include/linux/console_struct.h  127  #define CUR_UNDERLINE 2
CUR_LOWER_THIRD  macro  include/linux/console_struct.h  128  #define CUR_LOWER_THIRD 3
CUR_LOWER_HALF  macro  include/linux/console_struct.h  129  #define CUR_LOWER_HALF 4
CUR_TWO_THIRDS  macro  include/linux/console_struct.h  130  #define CUR_TWO_THIRDS 5
CUR_BLOCK  macro  include/linux/console_struct.h  131  #define CUR_BLOCK 6
CUR_HWMASK  macro  include/linux/console_struct.h  132  #define CUR_HWMASK 0x0f
CUR_SWMASK  macro  include/linux/console_struct.h  133  #define CUR_SWMASK 0xfff0
CUR_DEFAULT  macro  include/linux/console_struct.h  135  #define CUR_DEFAULT CUR_UNDERLINE
CON_IS_VISIBLE  macro  include/linux/console_struct.h  137  #define CON_IS_VISIBLE(conp) (*conp->vc_display_fg == conp)
