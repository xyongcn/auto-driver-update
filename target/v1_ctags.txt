_LINUX_MODULE_H  macro  include/linux/module.h  2  #define _LINUX_MODULE_H
MODULE_SIG_STRING  macro  include/linux/module.h  25  #define MODULE_SIG_STRING "~Module signature appended~\n"
MODULE_SUPPORTED_DEVICE  macro  include/linux/module.h  28  #define MODULE_SUPPORTED_DEVICE(name)
MODULE_NAME_LEN  macro  include/linux/module.h  30  #define MODULE_NAME_LEN MAX_PARAM_PREFIX_LEN
modversion_info  struct  include/linux/module.h  32  struct modversion_info
module_kobject  struct  include/linux/module.h  40  struct module_kobject {
module_attribute  struct  include/linux/module.h  47  struct module_attribute {
module_version_attribute  struct  include/linux/module.h  58  struct module_version_attribute {
__modver_version_show  prototype  include/linux/module.h  65  extern ssize_t __modver_version_show(struct module_attribute *,struct module_kobject *, char *);
init_module  prototype  include/linux/module.h  70  extern int init_module(void);
cleanup_module  prototype  include/linux/module.h  71  extern void cleanup_module(void);
search_extable  prototype  include/linux/module.h  79  search_extable(const struct exception_table_entry *first,const struct exception_table_entry *last,unsigned long value);
sort_extable  prototype  include/linux/module.h  81  void sort_extable(struct exception_table_entry *start,struct exception_table_entry *finish);
sort_main_extable  prototype  include/linux/module.h  82  void sort_main_extable(void);
trim_init_extable  prototype  include/linux/module.h  83  void trim_init_extable(struct module *m);
MODULE_GENERIC_TABLE  macro  include/linux/module.h  91  #define MODULE_GENERIC_TABLE(gtype,name)
MODULE_INFO  macro  include/linux/module.h  95  #define MODULE_INFO(tag,info) __MODULE_INFO(tag,tag,info)
MODULE_ALIAS  macro  include/linux/module.h  98  #define MODULE_ALIAS(_alias) MODULE_INFO(alias,_alias)
MODULE_LICENSE  macro  include/linux/module.h  128  #define MODULE_LICENSE(_license) MODULE_INFO(license,_license)
MODULE_AUTHOR  macro  include/linux/module.h  134  #define MODULE_AUTHOR(_author) MODULE_INFO(author,_author)
MODULE_DESCRIPTION  macro  include/linux/module.h  137  #define MODULE_DESCRIPTION(_description) MODULE_INFO(description,_description)
MODULE_DEVICE_TABLE  macro  include/linux/module.h  139  #define MODULE_DEVICE_TABLE(type,name) \
MODULE_VERSION  macro  include/linux/module.h  160  #define MODULE_VERSION(_version) \
MODULE_FIRMWARE  macro  include/linux/module.h  180  #define MODULE_FIRMWARE(_firmware) MODULE_INFO(firmware,_firmware)
search_exception_tables  prototype  include/linux/module.h  183  const struct exception_table_entry *search_exception_tables(unsigned long add);
__symbol_get  prototype  include/linux/module.h  191  void *__symbol_get(const char *symbol);
__symbol_get_gpl  prototype  include/linux/module.h  192  void *__symbol_get_gpl(const char *symbol);
symbol_get  macro  include/linux/module.h  547  #define symbol_get(x) ({ extern typeof(x) x __attribute__((weak)); &(x); })
module_use  struct  include/linux/module.h  196  struct module_use {
module_state  enum  include/linux/module.h  202  enum module_state {
MODULE_STATE_LIVE  enumerator  include/linux/module.h  203  MODULE_STATE_LIVE,
MODULE_STATE_COMING  enumerator  include/linux/module.h  204  MODULE_STATE_COMING,
MODULE_STATE_GOING  enumerator  include/linux/module.h  205  MODULE_STATE_GOING,
MODULE_STATE_UNFORMED  enumerator  include/linux/module.h  206  MODULE_STATE_UNFORMED,
module_ref  struct  include/linux/module.h  218  struct module_ref {
__attribute  prototype  include/linux/module.h  221  } __attribute((aligned(2 * sizeof(unsigned long))));
module  struct  include/linux/module.h  223  struct module
MODULE_ARCH_INIT  macro  include/linux/module.h  380  #define MODULE_ARCH_INIT {}
module_is_live  function  include/linux/module.h  388  static inline int module_is_live(struct module *mod)
__module_text_address  function  include/linux/module.h  526  static inline struct module *__module_text_address(unsigned long addr)
__module_address  function  include/linux/module.h  521  static inline struct module *__module_address(unsigned long addr)
is_module_address  function  include/linux/module.h  531  static inline bool is_module_address(unsigned long addr)
is_module_percpu_address  function  include/linux/module.h  536  static inline bool is_module_percpu_address(unsigned long addr)
is_module_text_address  function  include/linux/module.h  541  static inline bool is_module_text_address(unsigned long addr)
within_module_core  function  include/linux/module.h  399  static inline int within_module_core(unsigned long addr,struct module *mod)
within_module_init  function  include/linux/module.h  405  static inline int within_module_init(unsigned long addr,struct module *mod)
find_module  prototype  include/linux/module.h  412  struct module *find_module(const char *name);
symsearch  struct  include/linux/module.h  414  struct symsearch {
NOT_GPL_ONLY  enumerator  include/linux/module.h  418  NOT_GPL_ONLY,
GPL_ONLY  enumerator  include/linux/module.h  419  GPL_ONLY,
WILL_BE_GPL_ONLY  enumerator  include/linux/module.h  420  WILL_BE_GPL_ONLY,
find_symbol  prototype  include/linux/module.h  430  const struct kernel_symbol *find_symbol(const char *name,struct module **owner,const unsigned long **crc,bool gplok,bool warn);
each_symbol_section  prototype  include/linux/module.h  435  bool each_symbol_section(bool (*fn)(const struct symsearch *arr,struct module *owner,void *data), void *data);
module_get_kallsym  function  include/linux/module.h  588  static inline int module_get_kallsym(unsigned int symnum,unsigned long *value,char *type, char *name,char *module_name, int *exported)
module_kallsyms_lookup_name  function  include/linux/module.h  593  static inline unsigned long module_kallsyms_lookup_name(const char *name)
module_kallsyms_on_each_symbol  function  include/linux/module.h  601  static inline int module_kallsyms_on_each_symbol(int (*fn)(void *,const char *,struct module *,unsigned long),void *data)
__module_put_and_exit  prototype  include/linux/module.h  449  extern void __module_put_and_exit(struct module *mod,long code)
module_put_and_exit  macro  include/linux/module.h  617  #define module_put_and_exit(code) do_exit(code)
module_refcount  prototype  include/linux/module.h  454  unsigned long module_refcount(struct module *mod);
__symbol_put  prototype  include/linux/module.h  455  void __symbol_put(const char *symbol);
symbol_put  macro  include/linux/module.h  548  #define symbol_put(x) do { } while(0)
symbol_put_addr  macro  include/linux/module.h  549  #define symbol_put_addr(x) do { } while(0)
__module_get  function  include/linux/module.h  551  static inline void __module_get(struct module *module)
try_module_get  function  include/linux/module.h  555  static inline int try_module_get(struct module *module)
module_put  function  include/linux/module.h  560  static inline void module_put(struct module *module)
ref_module  prototype  include/linux/module.h  484  int ref_module(struct module *a,struct module *b);
module_name  macro  include/linux/module.h  564  #define module_name(mod) "kernel"
module_address_lookup  function  include/linux/module.h  571  static inline const char *module_address_lookup(unsigned long addr,unsigned long *symbolsize,unsigned long *offset,char **modname,char *namebuf)
lookup_module_symbol_name  function  include/linux/module.h  576  static inline int lookup_module_symbol_name(unsigned long addr,char *symname)
lookup_module_symbol_attrs  function  include/linux/module.h  581  static inline int lookup_module_symbol_attrs(unsigned long addr,unsigned long *size,unsigned long *offset,char *modname,char *name)
search_module_extables  function  include/linux/module.h  516  search_module_extables(unsigned long addr)
register_module_notifier  function  include/linux/module.h  606  static inline int register_module_notifier(struct notifier_block * nb)
unregister_module_notifier  function  include/linux/module.h  612  static inline int unregister_module_notifier(struct notifier_block * nb)
print_modules  function  include/linux/module.h  619  static inline void print_modules(void)
symbol_request  macro  include/linux/module.h  630  #define symbol_request(x) try_then_request_module(symbol_get(x),"symbol:" #x)
__MODULE_STRING  macro  include/linux/module.h  634  #define __MODULE_STRING(x) __stringify(x)
set_all_modules_text_rw  function  include/linux/module.h  640  static inline void set_all_modules_text_rw(void) { }
set_all_modules_text_ro  function  include/linux/module.h  641  static inline void set_all_modules_text_ro(void) { }
module_bug_finalize  function  include/linux/module.h  653  static inline void module_bug_finalize(const Elf_Ehdr *hdr,const Elf_Shdr *sechdrs,struct module *mod)
module_bug_cleanup  function  include/linux/module.h  656  static inline void module_bug_cleanup(struct module *mod) {}
_LINUX_TYPES_H  macro  include/linux/types.h  2  #define _LINUX_TYPES_H
__EXPORTED_HEADERS__  macro  include/linux/types.h  4  #define __EXPORTED_HEADERS__
DECLARE_BITMAP  macro  include/linux/types.h  9  #define DECLARE_BITMAP(name,bits) \
__kernel_dev_t  typedef  include/linux/types.h  12  typedef __u32 __kernel_dev_t;
fd_set  typedef  include/linux/types.h  14  typedef __kernel_fd_set fd_set;
dev_t  typedef  include/linux/types.h  15  typedef __kernel_dev_t dev_t;
ino_t  typedef  include/linux/types.h  16  typedef __kernel_ino_t ino_t;
mode_t  typedef  include/linux/types.h  17  typedef __kernel_mode_t mode_t;
umode_t  typedef  include/linux/types.h  18  typedef unsigned short umode_t;
nlink_t  typedef  include/linux/types.h  19  typedef __u32 nlink_t;
off_t  typedef  include/linux/types.h  20  typedef __kernel_off_t off_t;
pid_t  typedef  include/linux/types.h  21  typedef __kernel_pid_t pid_t;
daddr_t  typedef  include/linux/types.h  22  typedef __kernel_daddr_t daddr_t;
key_t  typedef  include/linux/types.h  23  typedef __kernel_key_t key_t;
suseconds_t  typedef  include/linux/types.h  24  typedef __kernel_suseconds_t suseconds_t;
timer_t  typedef  include/linux/types.h  25  typedef __kernel_timer_t timer_t;
clockid_t  typedef  include/linux/types.h  26  typedef __kernel_clockid_t clockid_t;
mqd_t  typedef  include/linux/types.h  27  typedef __kernel_mqd_t mqd_t;
bool  typedef  include/linux/types.h  29  typedef _Bool bool;
uid_t  typedef  include/linux/types.h  31  typedef __kernel_uid32_t uid_t;
gid_t  typedef  include/linux/types.h  32  typedef __kernel_gid32_t gid_t;
uid16_t  typedef  include/linux/types.h  33  typedef __kernel_uid16_t uid16_t;
gid16_t  typedef  include/linux/types.h  34  typedef __kernel_gid16_t gid16_t;
uintptr_t  typedef  include/linux/types.h  36  typedef unsigned long uintptr_t;
old_uid_t  typedef  include/linux/types.h  40  typedef __kernel_old_uid_t old_uid_t;
old_gid_t  typedef  include/linux/types.h  41  typedef __kernel_old_gid_t old_gid_t;
loff_t  typedef  include/linux/types.h  45  typedef __kernel_loff_t loff_t;
_SIZE_T  macro  include/linux/types.h  53  #define _SIZE_T
size_t  typedef  include/linux/types.h  54  typedef __kernel_size_t size_t;
_SSIZE_T  macro  include/linux/types.h  58  #define _SSIZE_T
ssize_t  typedef  include/linux/types.h  59  typedef __kernel_ssize_t ssize_t;
_PTRDIFF_T  macro  include/linux/types.h  63  #define _PTRDIFF_T
ptrdiff_t  typedef  include/linux/types.h  64  typedef __kernel_ptrdiff_t ptrdiff_t;
_TIME_T  macro  include/linux/types.h  68  #define _TIME_T
time_t  typedef  include/linux/types.h  69  typedef __kernel_time_t time_t;
_CLOCK_T  macro  include/linux/types.h  73  #define _CLOCK_T
clock_t  typedef  include/linux/types.h  74  typedef __kernel_clock_t clock_t;
_CADDR_T  macro  include/linux/types.h  78  #define _CADDR_T
caddr_t  typedef  include/linux/types.h  79  typedef __kernel_caddr_t caddr_t;
u_char  typedef  include/linux/types.h  83  typedef unsigned char u_char;
u_short  typedef  include/linux/types.h  84  typedef unsigned short u_short;
u_int  typedef  include/linux/types.h  85  typedef unsigned int u_int;
u_long  typedef  include/linux/types.h  86  typedef unsigned long u_long;
unchar  typedef  include/linux/types.h  89  typedef unsigned char unchar;
ushort  typedef  include/linux/types.h  90  typedef unsigned short ushort;
uint  typedef  include/linux/types.h  91  typedef unsigned int uint;
ulong  typedef  include/linux/types.h  92  typedef unsigned long ulong;
__BIT_TYPES_DEFINED__  macro  include/linux/types.h  95  #define __BIT_TYPES_DEFINED__
u_int8_t  typedef  include/linux/types.h  97  typedef __u8 u_int8_t;
int8_t  typedef  include/linux/types.h  98  typedef __s8 int8_t;
u_int16_t  typedef  include/linux/types.h  99  typedef __u16 u_int16_t;
int16_t  typedef  include/linux/types.h  100  typedef __s16 int16_t;
u_int32_t  typedef  include/linux/types.h  101  typedef __u32 u_int32_t;
int32_t  typedef  include/linux/types.h  102  typedef __s32 int32_t;
uint8_t  typedef  include/linux/types.h  106  typedef __u8 uint8_t;
uint16_t  typedef  include/linux/types.h  107  typedef __u16 uint16_t;
uint32_t  typedef  include/linux/types.h  108  typedef __u32 uint32_t;
uint64_t  typedef  include/linux/types.h  111  typedef __u64 uint64_t;
u_int64_t  typedef  include/linux/types.h  112  typedef __u64 u_int64_t;
int64_t  typedef  include/linux/types.h  113  typedef __s64 int64_t;
aligned_u64  macro  include/linux/types.h  117  #define aligned_u64 __u64 __attribute__((aligned(8)))
aligned_be64  macro  include/linux/types.h  118  #define aligned_be64 __be64 __attribute__((aligned(8)))
aligned_le64  macro  include/linux/types.h  119  #define aligned_le64 __le64 __attribute__((aligned(8)))
sector_t  typedef  include/linux/types.h  133  typedef unsigned long sector_t;
blkcnt_t  typedef  include/linux/types.h  134  typedef unsigned long blkcnt_t;
pgoff_t  macro  include/linux/types.h  142  #define pgoff_t unsigned long
dma_addr_t  typedef  include/linux/types.h  148  typedef u32 dma_addr_t;
gfp_t  typedef  include/linux/types.h  157  typedef unsigned __bitwise__ gfp_t;
fmode_t  typedef  include/linux/types.h  158  typedef unsigned __bitwise__ fmode_t;
oom_flags_t  typedef  include/linux/types.h  159  typedef unsigned __bitwise__ oom_flags_t;
phys_addr_t  typedef  include/linux/types.h  164  typedef u32 phys_addr_t;
resource_size_t  typedef  include/linux/types.h  167  typedef phys_addr_t resource_size_t;
irq_hw_number_t  typedef  include/linux/types.h  173  typedef unsigned long irq_hw_number_t;
atomic_t  typedef  include/linux/types.h  177  } atomic_t;
atomic64_t  typedef  include/linux/types.h  182  } atomic64_t;
list_head  struct  include/linux/types.h  185  struct list_head {
hlist_head  struct  include/linux/types.h  189  struct hlist_head {
hlist_node  struct  include/linux/types.h  193  struct hlist_node {
ustat  struct  include/linux/types.h  197  struct ustat {
callback_head  struct  include/linux/types.h  209  struct callback_head {
rcu_head  macro  include/linux/types.h  213  #define rcu_head callback_head
_LINUX_FS_H  macro  include/linux/fs.h  2  #define _LINUX_FS_H
inode_init  prototype  include/linux/fs.h  49  extern void __init inode_init(void);
inode_init_early  prototype  include/linux/fs.h  50  extern void __init inode_init_early(void);
files_init  prototype  include/linux/fs.h  51  extern void __init files_init(unsigned long);
get_max_files  prototype  include/linux/fs.h  54  extern unsigned long get_max_files(void);
get_block_t  typedef  include/linux/fs.h  62  typedef int (get_block_t)(struct inode *inode,sector_t iblock,
dio_iodone_t  typedef  include/linux/fs.h  64  typedef void (dio_iodone_t)(struct kiocb *iocb,loff_t offset,
MAY_EXEC  macro  include/linux/fs.h  68  #define MAY_EXEC 0x00000001
MAY_WRITE  macro  include/linux/fs.h  69  #define MAY_WRITE 0x00000002
MAY_READ  macro  include/linux/fs.h  70  #define MAY_READ 0x00000004
MAY_APPEND  macro  include/linux/fs.h  71  #define MAY_APPEND 0x00000008
MAY_ACCESS  macro  include/linux/fs.h  72  #define MAY_ACCESS 0x00000010
MAY_OPEN  macro  include/linux/fs.h  73  #define MAY_OPEN 0x00000020
MAY_CHDIR  macro  include/linux/fs.h  74  #define MAY_CHDIR 0x00000040
MAY_NOT_BLOCK  macro  include/linux/fs.h  76  #define MAY_NOT_BLOCK 0x00000080
FMODE_READ  macro  include/linux/fs.h  84  #define FMODE_READ ((__force fmode_t)0x1)
FMODE_WRITE  macro  include/linux/fs.h  86  #define FMODE_WRITE ((__force fmode_t)0x2)
FMODE_LSEEK  macro  include/linux/fs.h  88  #define FMODE_LSEEK ((__force fmode_t)0x4)
FMODE_PREAD  macro  include/linux/fs.h  90  #define FMODE_PREAD ((__force fmode_t)0x8)
FMODE_PWRITE  macro  include/linux/fs.h  92  #define FMODE_PWRITE ((__force fmode_t)0x10)
FMODE_EXEC  macro  include/linux/fs.h  94  #define FMODE_EXEC ((__force fmode_t)0x20)
FMODE_NDELAY  macro  include/linux/fs.h  96  #define FMODE_NDELAY ((__force fmode_t)0x40)
FMODE_EXCL  macro  include/linux/fs.h  98  #define FMODE_EXCL ((__force fmode_t)0x80)
FMODE_WRITE_IOCTL  macro  include/linux/fs.h  101  #define FMODE_WRITE_IOCTL ((__force fmode_t)0x100)
FMODE_32BITHASH  macro  include/linux/fs.h  103  #define FMODE_32BITHASH ((__force fmode_t)0x200)
FMODE_64BITHASH  macro  include/linux/fs.h  105  #define FMODE_64BITHASH ((__force fmode_t)0x400)
FMODE_NOCMTIME  macro  include/linux/fs.h  113  #define FMODE_NOCMTIME ((__force fmode_t)0x800)
FMODE_RANDOM  macro  include/linux/fs.h  116  #define FMODE_RANDOM ((__force fmode_t)0x1000)
FMODE_UNSIGNED_OFFSET  macro  include/linux/fs.h  119  #define FMODE_UNSIGNED_OFFSET ((__force fmode_t)0x2000)
FMODE_PATH  macro  include/linux/fs.h  122  #define FMODE_PATH ((__force fmode_t)0x4000)
FMODE_NONOTIFY  macro  include/linux/fs.h  125  #define FMODE_NONOTIFY ((__force fmode_t)0x1000000)
CHECK_IOVEC_ONLY  macro  include/linux/fs.h  133  #define CHECK_IOVEC_ONLY -1
RW_MASK  macro  include/linux/fs.h  177  #define RW_MASK REQ_WRITE
RWA_MASK  macro  include/linux/fs.h  178  #define RWA_MASK REQ_RAHEAD
READ  macro  include/linux/fs.h  180  #define READ 0
WRITE  macro  include/linux/fs.h  181  #define WRITE RW_MASK
READA  macro  include/linux/fs.h  182  #define READA RWA_MASK
KERNEL_READ  macro  include/linux/fs.h  183  #define KERNEL_READ (READ|REQ_KERNEL)
KERNEL_WRITE  macro  include/linux/fs.h  184  #define KERNEL_WRITE (WRITE|REQ_KERNEL)
READ_SYNC  macro  include/linux/fs.h  186  #define READ_SYNC (READ | REQ_SYNC)
WRITE_SYNC  macro  include/linux/fs.h  187  #define WRITE_SYNC (WRITE | REQ_SYNC | REQ_NOIDLE)
WRITE_ODIRECT  macro  include/linux/fs.h  188  #define WRITE_ODIRECT (WRITE | REQ_SYNC)
WRITE_FLUSH  macro  include/linux/fs.h  189  #define WRITE_FLUSH (WRITE | REQ_SYNC | REQ_NOIDLE | REQ_FLUSH)
WRITE_FUA  macro  include/linux/fs.h  190  #define WRITE_FUA (WRITE | REQ_SYNC | REQ_NOIDLE | REQ_FUA)
WRITE_FLUSH_FUA  macro  include/linux/fs.h  191  #define WRITE_FLUSH_FUA (WRITE | REQ_SYNC | REQ_NOIDLE | REQ_FLUSH | REQ_FUA)
ATTR_MODE  macro  include/linux/fs.h  197  #define ATTR_MODE (1 << 0)
ATTR_UID  macro  include/linux/fs.h  198  #define ATTR_UID (1 << 1)
ATTR_GID  macro  include/linux/fs.h  199  #define ATTR_GID (1 << 2)
ATTR_SIZE  macro  include/linux/fs.h  200  #define ATTR_SIZE (1 << 3)
ATTR_ATIME  macro  include/linux/fs.h  201  #define ATTR_ATIME (1 << 4)
ATTR_MTIME  macro  include/linux/fs.h  202  #define ATTR_MTIME (1 << 5)
ATTR_CTIME  macro  include/linux/fs.h  203  #define ATTR_CTIME (1 << 6)
ATTR_ATIME_SET  macro  include/linux/fs.h  204  #define ATTR_ATIME_SET (1 << 7)
ATTR_MTIME_SET  macro  include/linux/fs.h  205  #define ATTR_MTIME_SET (1 << 8)
ATTR_FORCE  macro  include/linux/fs.h  206  #define ATTR_FORCE (1 << 9)
ATTR_ATTR_FLAG  macro  include/linux/fs.h  207  #define ATTR_ATTR_FLAG (1 << 10)
ATTR_KILL_SUID  macro  include/linux/fs.h  208  #define ATTR_KILL_SUID (1 << 11)
ATTR_KILL_SGID  macro  include/linux/fs.h  209  #define ATTR_KILL_SGID (1 << 12)
ATTR_FILE  macro  include/linux/fs.h  210  #define ATTR_FILE (1 << 13)
ATTR_KILL_PRIV  macro  include/linux/fs.h  211  #define ATTR_KILL_PRIV (1 << 14)
ATTR_OPEN  macro  include/linux/fs.h  212  #define ATTR_OPEN (1 << 15)
ATTR_TIMES_SET  macro  include/linux/fs.h  213  #define ATTR_TIMES_SET (1 << 16)
iattr  struct  include/linux/fs.h  224  struct iattr {
positive_aop_returns  enum  include/linux/fs.h  273  enum positive_aop_returns {
AOP_WRITEPAGE_ACTIVATE  enumerator  include/linux/fs.h  274  AOP_WRITEPAGE_ACTIVATE = 0x80000,
AOP_TRUNCATED_PAGE  enumerator  include/linux/fs.h  275  AOP_TRUNCATED_PAGE = 0x80001,
AOP_FLAG_UNINTERRUPTIBLE  macro  include/linux/fs.h  278  #define AOP_FLAG_UNINTERRUPTIBLE 0x0001
AOP_FLAG_CONT_EXPAND  macro  include/linux/fs.h  279  #define AOP_FLAG_CONT_EXPAND 0x0002
AOP_FLAG_NOFS  macro  include/linux/fs.h  280  #define AOP_FLAG_NOFS 0x0004
iov_iter  struct  include/linux/fs.h  291  struct iov_iter {
iov_iter_copy_from_user_atomic  prototype  include/linux/fs.h  299  size_t iov_iter_copy_from_user_atomic(struct page *page,struct iov_iter *i, unsigned long offset, size_t bytes);
iov_iter_copy_from_user  prototype  include/linux/fs.h  301  size_t iov_iter_copy_from_user(struct page *page,struct iov_iter *i, unsigned long offset, size_t bytes);
iov_iter_advance  prototype  include/linux/fs.h  302  void iov_iter_advance(struct iov_iter *i,size_t bytes);
iov_iter_fault_in_readable  prototype  include/linux/fs.h  303  int iov_iter_fault_in_readable(struct iov_iter *i,size_t bytes);
iov_iter_single_seg_count  prototype  include/linux/fs.h  304  size_t iov_iter_single_seg_count(struct iov_iter *i);
iov_iter_init  function  include/linux/fs.h  308  static inline void iov_iter_init(struct iov_iter *i,const struct iovec *iov, unsigned long nr_segs,size_t count, size_t written)
iov_iter_count  function  include/linux/fs.h  318  static inline size_t iov_iter_count(struct iov_iter *i)
read_descriptor_t  typedef  include/linux/fs.h  340  } read_descriptor_t;
read_actor_t  typedef  include/linux/fs.h  342  typedef int (*read_actor_t)(read_descriptor_t *,struct page *,
address_space_operations  struct  include/linux/fs.h  345  struct address_space_operations {
pagecache_write_begin  prototype  include/linux/fs.h  399  int pagecache_write_begin(struct file *,struct address_space *mapping,loff_t pos, unsigned len, unsigned flags,struct page **pagep, void **fsdata);
pagecache_write_end  prototype  include/linux/fs.h  403  int pagecache_write_end(struct file *,struct address_space *mapping,loff_t pos, unsigned len, unsigned copied,struct page *page, void *fsdata);
address_space  struct  include/linux/fs.h  406  struct address_space {
block_device  struct  include/linux/fs.h  431  struct block_device {
PAGECACHE_TAG_DIRTY  macro  include/linux/fs.h  472  #define PAGECACHE_TAG_DIRTY 0
PAGECACHE_TAG_WRITEBACK  macro  include/linux/fs.h  473  #define PAGECACHE_TAG_WRITEBACK 1
PAGECACHE_TAG_TOWRITE  macro  include/linux/fs.h  474  #define PAGECACHE_TAG_TOWRITE 2
mapping_tagged  prototype  include/linux/fs.h  476  int mapping_tagged(struct address_space *mapping,int tag);
mapping_mapped  function  include/linux/fs.h  481  static inline int mapping_mapped(struct address_space *mapping)
mapping_writably_mapped  function  include/linux/fs.h  493  static inline int mapping_writably_mapped(struct address_space *mapping)
__NEED_I_SIZE_ORDERED  macro  include/linux/fs.h  503  #define __NEED_I_SIZE_ORDERED
i_size_ordered_init  macro  include/linux/fs.h  506  #define i_size_ordered_init(inode) do { } while (0)
ACL_NOT_CACHED  macro  include/linux/fs.h  510  #define ACL_NOT_CACHED ((void *)(-1))
IOP_FASTPERM  macro  include/linux/fs.h  512  #define IOP_FASTPERM 0x0001
IOP_LOOKUP  macro  include/linux/fs.h  513  #define IOP_LOOKUP 0x0002
IOP_NOFOLLOW  macro  include/linux/fs.h  514  #define IOP_NOFOLLOW 0x0004
inode  struct  include/linux/fs.h  521  struct inode {
inode_unhashed  function  include/linux/fs.h  612  static inline int inode_unhashed(struct inode *inode)
inode_i_mutex_lock_class  enum  include/linux/fs.h  628  enum inode_i_mutex_lock_class
I_MUTEX_NORMAL  enumerator  include/linux/fs.h  630  I_MUTEX_NORMAL,
I_MUTEX_PARENT  enumerator  include/linux/fs.h  631  I_MUTEX_PARENT,
I_MUTEX_CHILD  enumerator  include/linux/fs.h  632  I_MUTEX_CHILD,
I_MUTEX_XATTR  enumerator  include/linux/fs.h  633  I_MUTEX_XATTR,
I_MUTEX_QUOTA  enumerator  include/linux/fs.h  634  I_MUTEX_QUOTA
i_size_read  function  include/linux/fs.h  647  static inline loff_t i_size_read(const struct inode *inode)
i_size_write  function  include/linux/fs.h  675  static inline void i_size_write(struct inode *inode,loff_t i_size)
i_uid_read  function  include/linux/fs.h  695  static inline uid_t i_uid_read(const struct inode *inode)
i_gid_read  function  include/linux/fs.h  700  static inline gid_t i_gid_read(const struct inode *inode)
i_uid_write  function  include/linux/fs.h  705  static inline void i_uid_write(struct inode *inode,uid_t uid)
i_gid_write  function  include/linux/fs.h  710  static inline void i_gid_write(struct inode *inode,gid_t gid)
iminor  function  include/linux/fs.h  715  static inline unsigned iminor(const struct inode *inode)
imajor  function  include/linux/fs.h  720  static inline unsigned imajor(const struct inode *inode)
I_BDEV  prototype  include/linux/fs.h  725  extern struct block_device *I_BDEV(struct inode *inode);
fown_struct  struct  include/linux/fs.h  727  struct fown_struct {
file_ra_state  struct  include/linux/fs.h  738  struct file_ra_state {
ra_has_index  function  include/linux/fs.h  752  static inline int ra_has_index(struct file_ra_state *ra,pgoff_t index)
FILE_MNT_WRITE_TAKEN  macro  include/linux/fs.h  758  #define FILE_MNT_WRITE_TAKEN 1
FILE_MNT_WRITE_RELEASED  macro  include/linux/fs.h  759  #define FILE_MNT_WRITE_RELEASED 2
file  struct  include/linux/fs.h  761  struct file {
f_dentry  macro  include/linux/fs.h  771  #define f_dentry f_path.dentry
f_vfsmnt  macro  include/linux/fs.h  772  #define f_vfsmnt f_path.mnt
file_handle  struct  include/linux/fs.h  809  struct file_handle {
get_file  function  include/linux/fs.h  816  static inline struct file *get_file(struct file *f)
fput_atomic  macro  include/linux/fs.h  821  #define fput_atomic(x) atomic_long_add_unless(&(x)->f_count,-1,1)
file_count  macro  include/linux/fs.h  822  #define file_count(x) atomic_long_read(&(x)->f_count)
file_take_write  function  include/linux/fs.h  857  static inline void file_take_write(struct file *filp) {}
file_release_write  function  include/linux/fs.h  858  static inline void file_release_write(struct file *filp) {}
file_reset_write  function  include/linux/fs.h  859  static inline void file_reset_write(struct file *filp) {}
file_check_state  function  include/linux/fs.h  860  static inline void file_check_state(struct file *filp) {}
file_check_writeable  function  include/linux/fs.h  861  static inline int file_check_writeable(struct file *filp)
MAX_NON_LFS  macro  include/linux/fs.h  867  #define MAX_NON_LFS ((1UL<<31) - 1)
MAX_LFS_FILESIZE  macro  include/linux/fs.h  874  #define MAX_LFS_FILESIZE ((loff_t)0x7fffffffffffffffLL)
FL_POSIX  macro  include/linux/fs.h  877  #define FL_POSIX 1
FL_FLOCK  macro  include/linux/fs.h  878  #define FL_FLOCK 2
FL_ACCESS  macro  include/linux/fs.h  879  #define FL_ACCESS 8
FL_EXISTS  macro  include/linux/fs.h  880  #define FL_EXISTS 16
FL_LEASE  macro  include/linux/fs.h  881  #define FL_LEASE 32
FL_CLOSE  macro  include/linux/fs.h  882  #define FL_CLOSE 64
FL_SLEEP  macro  include/linux/fs.h  883  #define FL_SLEEP 128
FL_DOWNGRADE_PENDING  macro  include/linux/fs.h  884  #define FL_DOWNGRADE_PENDING 256
FL_UNLOCK_PENDING  macro  include/linux/fs.h  885  #define FL_UNLOCK_PENDING 512
FILE_LOCK_DEFERRED  macro  include/linux/fs.h  891  #define FILE_LOCK_DEFERRED 1
fl_owner_t  typedef  include/linux/fs.h  900  typedef struct files_struct *fl_owner_t;
file_lock_operations  struct  include/linux/fs.h  902  struct file_lock_operations {
lock_manager_operations  struct  include/linux/fs.h  907  struct lock_manager_operations {
lock_manager  struct  include/linux/fs.h  915  struct lock_manager {
locks_start_grace  prototype  include/linux/fs.h  920  void locks_start_grace(struct net *,struct lock_manager *);
locks_end_grace  prototype  include/linux/fs.h  921  void locks_end_grace(struct lock_manager *);
locks_in_grace  prototype  include/linux/fs.h  922  int locks_in_grace(struct net *);
file_lock  struct  include/linux/fs.h  927  struct file_lock {
INT_LIMIT  macro  include/linux/fs.h  960  #define INT_LIMIT(x) (~((x)1 << (sizeof(x)*8 - 1)))
OFFSET_MAX  macro  include/linux/fs.h  961  #define OFFSET_MAX INT_LIMIT(loff_t)
OFFT_OFFSET_MAX  macro  include/linux/fs.h  962  #define OFFT_OFFSET_MAX INT_LIMIT(off_t)
send_sigio  prototype  include/linux/fs.h  967  extern void send_sigio(struct fown_struct *fown,int fd,int band);
fcntl_getlk  function  include/linux/fs.h  1011  static inline int fcntl_getlk(struct file *file,struct flock __user *user)
fcntl_setlk  function  include/linux/fs.h  1017  static inline int fcntl_setlk(unsigned int fd,struct file *file,unsigned int cmd, struct flock __user *user)
fcntl_getlk64  function  include/linux/fs.h  1023  static inline int fcntl_getlk64(struct file *file,struct flock64 __user *user)
fcntl_setlk64  function  include/linux/fs.h  1029  static inline int fcntl_setlk64(unsigned int fd,struct file *file,unsigned int cmd, struct flock64 __user *user)
fcntl_setlease  function  include/linux/fs.h  1034  static inline int fcntl_setlease(unsigned int fd,struct file *filp,long arg)
fcntl_getlease  function  include/linux/fs.h  1039  static inline int fcntl_getlease(struct file *filp)
locks_free_lock  prototype  include/linux/fs.h  984  void locks_free_lock(struct file_lock *fl);
locks_init_lock  function  include/linux/fs.h  1044  static inline void locks_init_lock(struct file_lock *fl)
locks_alloc_lock  prototype  include/linux/fs.h  986  extern struct file_lock * locks_alloc_lock(void);
locks_copy_lock  function  include/linux/fs.h  1054  static inline void locks_copy_lock(struct file_lock *new,struct file_lock *fl)
__locks_copy_lock  function  include/linux/fs.h  1049  static inline void __locks_copy_lock(struct file_lock *new,struct file_lock *fl)
locks_remove_posix  function  include/linux/fs.h  1059  static inline void locks_remove_posix(struct file *filp,fl_owner_t owner)
locks_remove_flock  function  include/linux/fs.h  1064  static inline void locks_remove_flock(struct file *filp)
locks_release_private  prototype  include/linux/fs.h  991  extern void locks_release_private(struct file_lock *);
posix_test_lock  function  include/linux/fs.h  1069  static inline void posix_test_lock(struct file *filp,struct file_lock *fl)
posix_lock_file  function  include/linux/fs.h  1075  static inline int posix_lock_file(struct file *filp,struct file_lock *fl,struct file_lock *conflock)
posix_lock_file_wait  function  include/linux/fs.h  1080  static inline int posix_lock_file_wait(struct file *filp,struct file_lock *fl)
posix_unblock_lock  function  include/linux/fs.h  1086  static inline int posix_unblock_lock(struct file *filp,struct file_lock *waiter)
vfs_test_lock  function  include/linux/fs.h  1091  static inline int vfs_test_lock(struct file *filp,struct file_lock *fl)
vfs_lock_file  function  include/linux/fs.h  1097  static inline int vfs_lock_file(struct file *filp,unsigned int cmd,struct file_lock *fl, struct file_lock *conf)
vfs_cancel_lock  function  include/linux/fs.h  1102  static inline int vfs_cancel_lock(struct file *filp,struct file_lock *fl)
flock_lock_file_wait  function  include/linux/fs.h  1108  static inline int flock_lock_file_wait(struct file *filp,struct file_lock *request)
__break_lease  function  include/linux/fs.h  1113  static inline int __break_lease(struct inode *inode,unsigned int mode)
lease_get_mtime  function  include/linux/fs.h  1118  static inline void lease_get_mtime(struct inode *inode,struct timespec *time)
generic_setlease  function  include/linux/fs.h  1124  static inline int generic_setlease(struct file *filp,long arg,struct file_lock **flp)
vfs_setlease  function  include/linux/fs.h  1130  static inline int vfs_setlease(struct file *filp,long arg,struct file_lock **lease)
lease_modify  function  include/linux/fs.h  1135  static inline int lease_modify(struct file_lock **before,int arg)
lock_may_read  function  include/linux/fs.h  1141  static inline int lock_may_read(struct inode *inode,loff_t start,unsigned long len)
lock_may_write  function  include/linux/fs.h  1147  static inline int lock_may_write(struct inode *inode,loff_t start,unsigned long len)
locks_delete_block  function  include/linux/fs.h  1152  static inline void locks_delete_block(struct file_lock *waiter)
lock_flocks  function  include/linux/fs.h  1156  static inline void lock_flocks(void)
unlock_flocks  function  include/linux/fs.h  1160  static inline void unlock_flocks(void)
fasync_struct  struct  include/linux/fs.h  1167  struct fasync_struct {
FASYNC_MAGIC  macro  include/linux/fs.h  1176  #define FASYNC_MAGIC 0x4601
fasync_helper  prototype  include/linux/fs.h  1179  extern int fasync_helper(int,struct file *,int,struct fasync_struct **);
fasync_insert_entry  prototype  include/linux/fs.h  1180  extern struct fasync_struct *fasync_insert_entry(int,struct file *,struct fasync_struct **,struct fasync_struct *);
fasync_remove_entry  prototype  include/linux/fs.h  1181  extern int fasync_remove_entry(struct file *,struct fasync_struct **);
fasync_alloc  prototype  include/linux/fs.h  1182  extern struct fasync_struct *fasync_alloc(void);
fasync_free  prototype  include/linux/fs.h  1183  extern void fasync_free(struct fasync_struct *);
kill_fasync  prototype  include/linux/fs.h  1186  extern void kill_fasync(struct fasync_struct **,int,int);
__f_setown  prototype  include/linux/fs.h  1188  extern int __f_setown(struct file *filp,struct pid *,enum pid_type,int force);
f_setown  prototype  include/linux/fs.h  1189  extern int f_setown(struct file *filp,unsigned long arg,int force);
f_delown  prototype  include/linux/fs.h  1190  extern void f_delown(struct file *filp);
f_getown  prototype  include/linux/fs.h  1191  extern pid_t f_getown(struct file *filp);
send_sigurg  prototype  include/linux/fs.h  1192  extern int send_sigurg(struct fown_struct *fown);
MNT_FORCE  macro  include/linux/fs.h  1200  #define MNT_FORCE 0x00000001
MNT_DETACH  macro  include/linux/fs.h  1201  #define MNT_DETACH 0x00000002
MNT_EXPIRE  macro  include/linux/fs.h  1202  #define MNT_EXPIRE 0x00000004
UMOUNT_NOFOLLOW  macro  include/linux/fs.h  1203  #define UMOUNT_NOFOLLOW 0x00000008
UMOUNT_UNUSED  macro  include/linux/fs.h  1204  #define UMOUNT_UNUSED 0x80000000
SB_UNFROZEN  enumerator  include/linux/fs.h  1211  SB_UNFROZEN = 0,
SB_FREEZE_WRITE  enumerator  include/linux/fs.h  1212  SB_FREEZE_WRITE = 1,
SB_FREEZE_PAGEFAULT  enumerator  include/linux/fs.h  1213  SB_FREEZE_PAGEFAULT = 2,
SB_FREEZE_FS  enumerator  include/linux/fs.h  1214  SB_FREEZE_FS = 3,
SB_FREEZE_COMPLETE  enumerator  include/linux/fs.h  1216  SB_FREEZE_COMPLETE = 4,
SB_FREEZE_LEVELS  macro  include/linux/fs.h  1219  #define SB_FREEZE_LEVELS (SB_FREEZE_COMPLETE - 1)
sb_writers  struct  include/linux/fs.h  1221  struct sb_writers {
super_block  struct  include/linux/fs.h  1234  struct super_block {
prune_icache_sb  prototype  include/linux/fs.h  1326  extern void prune_icache_sb(struct super_block *sb,int nr_to_scan);
prune_dcache_sb  prototype  include/linux/fs.h  1327  extern void prune_dcache_sb(struct super_block *sb,int nr_to_scan);
current_fs_time  prototype  include/linux/fs.h  1329  extern struct timespec current_fs_time(struct super_block *sb);
__sb_end_write  prototype  include/linux/fs.h  1335  void __sb_end_write(struct super_block *sb,int level);
__sb_start_write  prototype  include/linux/fs.h  1336  int __sb_start_write(struct super_block *sb,int level,bool wait);
sb_end_write  function  include/linux/fs.h  1345  static inline void sb_end_write(struct super_block *sb)
sb_end_pagefault  function  include/linux/fs.h  1357  static inline void sb_end_pagefault(struct super_block *sb)
sb_end_intwrite  function  include/linux/fs.h  1369  static inline void sb_end_intwrite(struct super_block *sb)
sb_start_write  function  include/linux/fs.h  1393  static inline void sb_start_write(struct super_block *sb)
sb_start_write_trylock  function  include/linux/fs.h  1398  static inline int sb_start_write_trylock(struct super_block *sb)
sb_start_pagefault  function  include/linux/fs.h  1422  static inline void sb_start_pagefault(struct super_block *sb)
sb_start_intwrite  function  include/linux/fs.h  1440  static inline void sb_start_intwrite(struct super_block *sb)
inode_owner_or_capable  prototype  include/linux/fs.h  1446  extern bool inode_owner_or_capable(const struct inode *inode);
vfs_create  prototype  include/linux/fs.h  1451  extern int vfs_create(struct inode *,struct dentry *,umode_t,bool);
vfs_mkdir  prototype  include/linux/fs.h  1452  extern int vfs_mkdir(struct inode *,struct dentry *,umode_t);
vfs_mknod  prototype  include/linux/fs.h  1453  extern int vfs_mknod(struct inode *,struct dentry *,umode_t,dev_t);
vfs_symlink  prototype  include/linux/fs.h  1454  extern int vfs_symlink(struct inode *,struct dentry *,const char *);
vfs_link  prototype  include/linux/fs.h  1455  extern int vfs_link(struct dentry *,struct inode *,struct dentry *);
vfs_rmdir  prototype  include/linux/fs.h  1456  extern int vfs_rmdir(struct inode *,struct dentry *);
vfs_unlink  prototype  include/linux/fs.h  1457  extern int vfs_unlink(struct inode *,struct dentry *);
vfs_rename  prototype  include/linux/fs.h  1458  extern int vfs_rename(struct inode *,struct dentry *,struct inode *,struct dentry *);
dentry_unhash  prototype  include/linux/fs.h  1463  extern void dentry_unhash(struct dentry *dentry);
inode_init_owner  prototype  include/linux/fs.h  1469  extern void inode_init_owner(struct inode *inode,const struct inode *dir,umode_t mode);
fiemap_extent_info  struct  include/linux/fs.h  1473  struct fiemap_extent_info {
fiemap_fill_next_extent  prototype  include/linux/fs.h  1481  int fiemap_fill_next_extent(struct fiemap_extent_info *info,u64 logical,u64 phys, u64 len, u32 flags);
fiemap_check_flags  prototype  include/linux/fs.h  1482  int fiemap_check_flags(struct fiemap_extent_info *fieinfo,u32 fs_flags);
DT_UNKNOWN  macro  include/linux/fs.h  1490  #define DT_UNKNOWN 0
DT_FIFO  macro  include/linux/fs.h  1491  #define DT_FIFO 1
DT_CHR  macro  include/linux/fs.h  1492  #define DT_CHR 2
DT_DIR  macro  include/linux/fs.h  1493  #define DT_DIR 4
DT_BLK  macro  include/linux/fs.h  1494  #define DT_BLK 6
DT_REG  macro  include/linux/fs.h  1495  #define DT_REG 8
DT_LNK  macro  include/linux/fs.h  1496  #define DT_LNK 10
DT_SOCK  macro  include/linux/fs.h  1497  #define DT_SOCK 12
DT_WHT  macro  include/linux/fs.h  1498  #define DT_WHT 14
filldir_t  typedef  include/linux/fs.h  1506  typedef int (*filldir_t)(void *,const char *,int,loff_t,u64,unsigned);
HAVE_COMPAT_IOCTL  macro  include/linux/fs.h  1512  #define HAVE_COMPAT_IOCTL 1
HAVE_UNLOCKED_IOCTL  macro  include/linux/fs.h  1513  #define HAVE_UNLOCKED_IOCTL 1
file_operations  struct  include/linux/fs.h  1515  struct file_operations {
inode_operations  struct  include/linux/fs.h  1546  struct inode_operations {
____cacheline_aligned  variable  include/linux/dcache.h  160  } ____cacheline_aligned;
rw_copy_check_uvector  prototype  include/linux/fs.h  1581  ssize_t rw_copy_check_uvector(int type,const struct iovec __user * uvector,unsigned long nr_segs, unsigned long fast_segs,struct iovec *fast_pointer,struct iovec **ret_pointer);
vfs_read  prototype  include/linux/fs.h  1583  extern ssize_t vfs_read(struct file *,char __user *,size_t,loff_t *);
vfs_write  prototype  include/linux/fs.h  1584  extern ssize_t vfs_write(struct file *,const char __user *,size_t,loff_t *);
vfs_readv  prototype  include/linux/fs.h  1586  extern ssize_t vfs_readv(struct file *,const struct iovec __user *,unsigned long, loff_t *);
vfs_writev  prototype  include/linux/fs.h  1588  extern ssize_t vfs_writev(struct file *,const struct iovec __user *,unsigned long, loff_t *);
super_operations  struct  include/linux/fs.h  1590  struct super_operations {
S_SYNC  macro  include/linux/fs.h  1622  #define S_SYNC 1
S_NOATIME  macro  include/linux/fs.h  1623  #define S_NOATIME 2
S_APPEND  macro  include/linux/fs.h  1624  #define S_APPEND 4
S_IMMUTABLE  macro  include/linux/fs.h  1625  #define S_IMMUTABLE 8
S_DEAD  macro  include/linux/fs.h  1626  #define S_DEAD 16
S_NOQUOTA  macro  include/linux/fs.h  1627  #define S_NOQUOTA 32
S_DIRSYNC  macro  include/linux/fs.h  1628  #define S_DIRSYNC 64
S_NOCMTIME  macro  include/linux/fs.h  1629  #define S_NOCMTIME 128
S_SWAPFILE  macro  include/linux/fs.h  1630  #define S_SWAPFILE 256
S_PRIVATE  macro  include/linux/fs.h  1631  #define S_PRIVATE 512
S_IMA  macro  include/linux/fs.h  1632  #define S_IMA 1024
S_AUTOMOUNT  macro  include/linux/fs.h  1633  #define S_AUTOMOUNT 2048
S_NOSEC  macro  include/linux/fs.h  1634  #define S_NOSEC 4096
__IS_FLG  macro  include/linux/fs.h  1649  #define __IS_FLG(inode,flg) ((inode)->i_sb->s_flags & (flg))
IS_RDONLY  macro  include/linux/fs.h  1651  #define IS_RDONLY(inode) ((inode)->i_sb->s_flags & MS_RDONLY)
IS_SYNC  macro  include/linux/fs.h  1652  #define IS_SYNC(inode) (__IS_FLG(inode,MS_SYNCHRONOUS) || \
IS_DIRSYNC  macro  include/linux/fs.h  1654  #define IS_DIRSYNC(inode) (__IS_FLG(inode,MS_SYNCHRONOUS|MS_DIRSYNC) || \
IS_MANDLOCK  macro  include/linux/fs.h  1656  #define IS_MANDLOCK(inode) __IS_FLG(inode,MS_MANDLOCK)
IS_NOATIME  macro  include/linux/fs.h  1657  #define IS_NOATIME(inode) __IS_FLG(inode,MS_RDONLY|MS_NOATIME)
IS_I_VERSION  macro  include/linux/fs.h  1658  #define IS_I_VERSION(inode) __IS_FLG(inode,MS_I_VERSION)
IS_NOQUOTA  macro  include/linux/fs.h  1660  #define IS_NOQUOTA(inode) ((inode)->i_flags & S_NOQUOTA)
IS_APPEND  macro  include/linux/fs.h  1661  #define IS_APPEND(inode) ((inode)->i_flags & S_APPEND)
IS_IMMUTABLE  macro  include/linux/fs.h  1662  #define IS_IMMUTABLE(inode) ((inode)->i_flags & S_IMMUTABLE)
IS_POSIXACL  macro  include/linux/fs.h  1663  #define IS_POSIXACL(inode) __IS_FLG(inode,MS_POSIXACL)
IS_DEADDIR  macro  include/linux/fs.h  1665  #define IS_DEADDIR(inode) ((inode)->i_flags & S_DEAD)
IS_NOCMTIME  macro  include/linux/fs.h  1666  #define IS_NOCMTIME(inode) ((inode)->i_flags & S_NOCMTIME)
IS_SWAPFILE  macro  include/linux/fs.h  1667  #define IS_SWAPFILE(inode) ((inode)->i_flags & S_SWAPFILE)
IS_PRIVATE  macro  include/linux/fs.h  1668  #define IS_PRIVATE(inode) ((inode)->i_flags & S_PRIVATE)
IS_IMA  macro  include/linux/fs.h  1669  #define IS_IMA(inode) ((inode)->i_flags & S_IMA)
IS_AUTOMOUNT  macro  include/linux/fs.h  1670  #define IS_AUTOMOUNT(inode) ((inode)->i_flags & S_AUTOMOUNT)
IS_NOSEC  macro  include/linux/fs.h  1671  #define IS_NOSEC(inode) ((inode)->i_flags & S_NOSEC)
I_DIRTY_SYNC  macro  include/linux/fs.h  1726  #define I_DIRTY_SYNC (1 << 0)
I_DIRTY_DATASYNC  macro  include/linux/fs.h  1727  #define I_DIRTY_DATASYNC (1 << 1)
I_DIRTY_PAGES  macro  include/linux/fs.h  1728  #define I_DIRTY_PAGES (1 << 2)
__I_NEW  macro  include/linux/fs.h  1729  #define __I_NEW 3
I_NEW  macro  include/linux/fs.h  1730  #define I_NEW (1 << __I_NEW)
I_WILL_FREE  macro  include/linux/fs.h  1731  #define I_WILL_FREE (1 << 4)
I_FREEING  macro  include/linux/fs.h  1732  #define I_FREEING (1 << 5)
I_CLEAR  macro  include/linux/fs.h  1733  #define I_CLEAR (1 << 6)
__I_SYNC  macro  include/linux/fs.h  1734  #define __I_SYNC 7
I_SYNC  macro  include/linux/fs.h  1735  #define I_SYNC (1 << __I_SYNC)
I_REFERENCED  macro  include/linux/fs.h  1736  #define I_REFERENCED (1 << 8)
__I_DIO_WAKEUP  macro  include/linux/fs.h  1737  #define __I_DIO_WAKEUP 9
I_DIO_WAKEUP  macro  include/linux/fs.h  1738  #define I_DIO_WAKEUP (1 << I_DIO_WAKEUP)
I_DIRTY  macro  include/linux/fs.h  1740  #define I_DIRTY (I_DIRTY_SYNC | I_DIRTY_DATASYNC | I_DIRTY_PAGES)
__mark_inode_dirty  prototype  include/linux/fs.h  1742  extern void __mark_inode_dirty(struct inode *,int);
mark_inode_dirty  function  include/linux/fs.h  1743  static inline void mark_inode_dirty(struct inode *inode)
mark_inode_dirty_sync  function  include/linux/fs.h  1748  static inline void mark_inode_dirty_sync(struct inode *inode)
inc_nlink  prototype  include/linux/fs.h  1753  extern void inc_nlink(struct inode *inode);
drop_nlink  prototype  include/linux/fs.h  1754  extern void drop_nlink(struct inode *inode);
clear_nlink  prototype  include/linux/fs.h  1755  extern void clear_nlink(struct inode *inode);
set_nlink  prototype  include/linux/fs.h  1756  extern void set_nlink(struct inode *inode,unsigned int nlink);
inode_inc_link_count  function  include/linux/fs.h  1758  static inline void inode_inc_link_count(struct inode *inode)
inode_dec_link_count  function  include/linux/fs.h  1764  static inline void inode_dec_link_count(struct inode *inode)
inode_inc_iversion  function  include/linux/fs.h  1778  static inline void inode_inc_iversion(struct inode *inode)
file_time_flags  enum  include/linux/fs.h  1785  enum file_time_flags {
S_ATIME  enumerator  include/linux/fs.h  1786  S_ATIME = 1,
S_MTIME  enumerator  include/linux/fs.h  1787  S_MTIME = 2,
S_CTIME  enumerator  include/linux/fs.h  1788  S_CTIME = 4,
S_VERSION  enumerator  include/linux/fs.h  1789  S_VERSION = 8,
touch_atime  prototype  include/linux/fs.h  1792  extern void touch_atime(struct path *);
file_accessed  function  include/linux/fs.h  1793  static inline void file_accessed(struct file *file)
sync_inode  prototype  include/linux/fs.h  1799  int sync_inode(struct inode *inode,struct writeback_control *wbc);
sync_inode_metadata  prototype  include/linux/fs.h  1800  int sync_inode_metadata(struct inode *inode,int wait);
file_system_type  struct  include/linux/fs.h  1802  struct file_system_type {
FS_REQUIRES_DEV  macro  include/linux/fs.h  1805  #define FS_REQUIRES_DEV 1
FS_BINARY_MOUNTDATA  macro  include/linux/fs.h  1806  #define FS_BINARY_MOUNTDATA 2
FS_HAS_SUBTYPE  macro  include/linux/fs.h  1807  #define FS_HAS_SUBTYPE 4
FS_USERNS_MOUNT  macro  include/linux/fs.h  1808  #define FS_USERNS_MOUNT 8
FS_USERNS_DEV_MOUNT  macro  include/linux/fs.h  1809  #define FS_USERNS_DEV_MOUNT 16
FS_REVAL_DOT  macro  include/linux/fs.h  1810  #define FS_REVAL_DOT 16384
FS_RENAME_DOES_D_MOVE  macro  include/linux/fs.h  1811  #define FS_RENAME_DOES_D_MOVE 32768
mount_ns  prototype  include/linux/fs.h  1830  extern struct dentry *mount_ns(struct file_system_type *fs_type,int flags,void *data, int (*fill_super)(struct super_block *, void *, int));
mount_bdev  prototype  include/linux/fs.h  1833  extern struct dentry *mount_bdev(struct file_system_type *fs_type,int flags, const char *dev_name, void *data,int (*fill_super)(struct super_block *, void *, int));
mount_single  prototype  include/linux/fs.h  1836  extern struct dentry *mount_single(struct file_system_type *fs_type,int flags, void *data,int (*fill_super)(struct super_block *, void *, int));
mount_nodev  prototype  include/linux/fs.h  1839  extern struct dentry *mount_nodev(struct file_system_type *fs_type,int flags, void *data,int (*fill_super)(struct super_block *, void *, int));
mount_subtree  prototype  include/linux/fs.h  1840  extern struct dentry *mount_subtree(struct vfsmount *mnt,const char *path);
generic_shutdown_super  prototype  include/linux/fs.h  1841  void generic_shutdown_super(struct super_block *sb);
kill_block_super  prototype  include/linux/fs.h  1842  void kill_block_super(struct super_block *sb);
kill_anon_super  prototype  include/linux/fs.h  1843  void kill_anon_super(struct super_block *sb);
kill_litter_super  prototype  include/linux/fs.h  1844  void kill_litter_super(struct super_block *sb);
deactivate_super  prototype  include/linux/fs.h  1845  void deactivate_super(struct super_block *sb);
deactivate_locked_super  prototype  include/linux/fs.h  1846  void deactivate_locked_super(struct super_block *sb);
set_anon_super  prototype  include/linux/fs.h  1847  int set_anon_super(struct super_block *s,void *data);
get_anon_bdev  prototype  include/linux/fs.h  1848  int get_anon_bdev(dev_t *);
free_anon_bdev  prototype  include/linux/fs.h  1849  void free_anon_bdev(dev_t);
sget  prototype  include/linux/fs.h  1853  struct super_block *sget(struct file_system_type *type,int (*test)(struct super_block *,void *),int (*set)(struct super_block *,void *),int flags, void *data);
mount_pseudo  prototype  include/linux/fs.h  1857  extern struct dentry *mount_pseudo(struct file_system_type *,char *,const struct super_operations *ops,const struct dentry_operations *dops,unsigned long);
fops_get  macro  include/linux/fs.h  1860  #define fops_get(fops) \
fops_put  macro  include/linux/fs.h  1862  #define fops_put(fops) \
register_filesystem  prototype  include/linux/fs.h  1865  extern int register_filesystem(struct file_system_type *);
unregister_filesystem  prototype  include/linux/fs.h  1866  extern int unregister_filesystem(struct file_system_type *);
kern_mount_data  prototype  include/linux/fs.h  1867  extern struct vfsmount *kern_mount_data(struct file_system_type *,void *data);
kern_mount  macro  include/linux/fs.h  1868  #define kern_mount(type) kern_mount_data(type,NULL)
kern_unmount  prototype  include/linux/fs.h  1869  extern void kern_unmount(struct vfsmount *mnt);
may_umount_tree  prototype  include/linux/fs.h  1870  extern int may_umount_tree(struct vfsmount *);
may_umount  prototype  include/linux/fs.h  1871  extern int may_umount(struct vfsmount *);
do_mount  prototype  include/linux/fs.h  1872  extern long do_mount(const char *,const char *,const char *,unsigned long,void *);
collect_mounts  prototype  include/linux/fs.h  1873  extern struct vfsmount *collect_mounts(struct path *);
drop_collected_mounts  prototype  include/linux/fs.h  1874  extern void drop_collected_mounts(struct vfsmount *);
iterate_mounts  prototype  include/linux/fs.h  1876  extern int iterate_mounts(int (*)(struct vfsmount *,void *),void *,struct vfsmount *);
vfs_statfs  prototype  include/linux/fs.h  1877  extern int vfs_statfs(struct path *,struct kstatfs *);
user_statfs  prototype  include/linux/fs.h  1878  extern int user_statfs(const char __user *,struct kstatfs *);
fd_statfs  prototype  include/linux/fs.h  1879  extern int fd_statfs(int,struct kstatfs *);
vfs_ustat  prototype  include/linux/fs.h  1880  extern int vfs_ustat(dev_t,struct kstatfs *);
freeze_super  prototype  include/linux/fs.h  1881  extern int freeze_super(struct super_block *super);
thaw_super  prototype  include/linux/fs.h  1882  extern int thaw_super(struct super_block *super);
our_mnt  prototype  include/linux/fs.h  1883  extern bool our_mnt(struct vfsmount *mnt);
current_umask  prototype  include/linux/fs.h  1885  extern int current_umask(void);
MAX_RW_COUNT  macro  include/linux/fs.h  1890  #define MAX_RW_COUNT (INT_MAX & PAGE_CACHE_MASK)
rw_verify_area  prototype  include/linux/fs.h  1891  extern int rw_verify_area(int,struct file *,loff_t *,size_t);
FLOCK_VERIFY_READ  macro  include/linux/fs.h  1893  #define FLOCK_VERIFY_READ 1
FLOCK_VERIFY_WRITE  macro  include/linux/fs.h  1894  #define FLOCK_VERIFY_WRITE 2
locks_mandatory_locked  function  include/linux/fs.h  1948  static inline int locks_mandatory_locked(struct inode *inode)
locks_mandatory_area  function  include/linux/fs.h  1955  static inline int locks_mandatory_area(int rw,struct inode *inode,struct file *filp, loff_t offset,size_t count)
__mandatory_lock  function  include/linux/fs.h  1960  static inline int __mandatory_lock(struct inode *inode)
mandatory_lock  function  include/linux/fs.h  1965  static inline int mandatory_lock(struct inode *inode)
locks_verify_locked  function  include/linux/fs.h  1970  static inline int locks_verify_locked(struct inode *inode)
locks_verify_truncate  function  include/linux/fs.h  1976  static inline int locks_verify_truncate(struct inode *inode,struct file *filp,size_t size)
break_lease  function  include/linux/fs.h  1981  static inline int break_lease(struct inode *inode,unsigned int mode)
filename  struct  include/linux/fs.h  1990  struct filename {
vfs_truncate  prototype  include/linux/fs.h  1997  extern long vfs_truncate(struct path *,loff_t);
do_truncate  prototype  include/linux/fs.h  1999  extern int do_truncate(struct dentry *,loff_t start,unsigned int time_attrs,struct file *filp);
do_fallocate  prototype  include/linux/fs.h  2001  extern int do_fallocate(struct file *file,int mode,loff_t offset,loff_t len);
do_sys_open  prototype  include/linux/fs.h  2003  extern long do_sys_open(int dfd,const char __user *filename,int flags,umode_t mode);
file_open_name  prototype  include/linux/fs.h  2004  extern struct file *file_open_name(struct filename *,int,umode_t);
filp_open  prototype  include/linux/fs.h  2005  extern struct file *filp_open(const char *,int,umode_t);
file_open_root  prototype  include/linux/fs.h  2007  extern struct file *file_open_root(struct dentry *,struct vfsmount *,const char *, int);
dentry_open  prototype  include/linux/fs.h  2008  extern struct file * dentry_open(const struct path *,int,const struct cred *);
filp_close  prototype  include/linux/fs.h  2009  extern int filp_close(struct file *,fl_owner_t id);
getname  prototype  include/linux/fs.h  2011  extern struct filename *getname(const char __user *);
FILE_CREATED  enumerator  include/linux/fs.h  2014  FILE_CREATED = 1,
FILE_OPENED  enumerator  include/linux/fs.h  2015  FILE_OPENED = 2
finish_open  prototype  include/linux/fs.h  2019  extern int finish_open(struct file *file,struct dentry *dentry,int (*open)(struct inode *, struct file *),int *opened);
finish_no_open  prototype  include/linux/fs.h  2020  extern int finish_no_open(struct file *file,struct dentry *dentry);
ioctl_preallocate  prototype  include/linux/fs.h  2024  extern int ioctl_preallocate(struct file *filp,void __user *argp);
vfs_caches_init_early  prototype  include/linux/fs.h  2027  extern void __init vfs_caches_init_early(void);
vfs_caches_init  prototype  include/linux/fs.h  2028  extern void __init vfs_caches_init(unsigned long);
final_putname  prototype  include/linux/fs.h  2032  extern void final_putname(struct filename *name);
__getname  macro  include/linux/fs.h  2034  #define __getname() kmem_cache_alloc(names_cachep,GFP_KERNEL)
__putname  macro  include/linux/fs.h  2035  #define __putname(name) kmem_cache_free(names_cachep,(void *)(name))
putname  prototype  include/linux/fs.h  2039  extern void putname(struct filename *name);
register_blkdev  prototype  include/linux/fs.h  2043  extern int register_blkdev(unsigned int,const char *);
unregister_blkdev  prototype  include/linux/fs.h  2044  extern void unregister_blkdev(unsigned int,const char *);
bdget  prototype  include/linux/fs.h  2045  extern struct block_device *bdget(dev_t);
bdgrab  prototype  include/linux/fs.h  2046  extern struct block_device *bdgrab(struct block_device *bdev);
bd_set_size  prototype  include/linux/fs.h  2047  extern void bd_set_size(struct block_device *,loff_t size);
bd_forget  function  include/linux/fs.h  2059  static inline void bd_forget(struct inode *inode) {}
bdput  prototype  include/linux/fs.h  2049  extern void bdput(struct block_device *);
invalidate_bdev  function  include/linux/fs.h  2062  static inline void invalidate_bdev(struct block_device *bdev) {}
iterate_bdevs  function  include/linux/fs.h  2074  static inline void iterate_bdevs(void (*f)(struct block_device *,void *),void *arg)
sync_blockdev  function  include/linux/fs.h  2060  static inline int sync_blockdev(struct block_device *bdev) { return 0; }
kill_bdev  function  include/linux/fs.h  2061  static inline void kill_bdev(struct block_device *bdev) {}
freeze_bdev  function  include/linux/fs.h  2064  static inline struct super_block *freeze_bdev(struct block_device *sb)
emergency_thaw_all  prototype  include/linux/fs.h  2055  extern void emergency_thaw_all(void);
thaw_bdev  function  include/linux/fs.h  2069  static inline int thaw_bdev(struct block_device *bdev,struct super_block *sb)
fsync_bdev  prototype  include/linux/fs.h  2057  extern int fsync_bdev(struct block_device *);
sync_filesystem  prototype  include/linux/fs.h  2078  extern int sync_filesystem(struct super_block *);
ioctl_by_bdev  prototype  include/linux/fs.h  2084  extern int ioctl_by_bdev(struct block_device *,unsigned,unsigned long);
blkdev_ioctl  prototype  include/linux/fs.h  2085  extern int blkdev_ioctl(struct block_device *,fmode_t,unsigned,unsigned long);
compat_blkdev_ioctl  prototype  include/linux/fs.h  2086  extern long compat_blkdev_ioctl(struct file *,unsigned,unsigned long);
blkdev_get  prototype  include/linux/fs.h  2087  extern int blkdev_get(struct block_device *bdev,fmode_t mode,void *holder);
blkdev_get_by_path  prototype  include/linux/fs.h  2089  extern struct block_device *blkdev_get_by_path(const char *path,fmode_t mode,void *holder);
blkdev_get_by_dev  prototype  include/linux/fs.h  2091  extern struct block_device *blkdev_get_by_dev(dev_t dev,fmode_t mode,void *holder);
blkdev_put  prototype  include/linux/fs.h  2092  extern int blkdev_put(struct block_device *bdev,fmode_t mode);
bd_link_disk_holder  function  include/linux/fs.h  2099  static inline int bd_link_disk_holder(struct block_device *bdev,struct gendisk *disk)
bd_unlink_disk_holder  function  include/linux/fs.h  2104  static inline void bd_unlink_disk_holder(struct block_device *bdev,struct gendisk *disk)
CHRDEV_MAJOR_HASH_SIZE  macro  include/linux/fs.h  2111  #define CHRDEV_MAJOR_HASH_SIZE 255
alloc_chrdev_region  prototype  include/linux/fs.h  2112  extern int alloc_chrdev_region(dev_t *,unsigned,unsigned,const char *);
register_chrdev_region  prototype  include/linux/fs.h  2113  extern int register_chrdev_region(dev_t,unsigned,const char *);
__register_chrdev  prototype  include/linux/fs.h  2116  extern int __register_chrdev(unsigned int major,unsigned int baseminor,unsigned int count, const char *name,const struct file_operations *fops);
__unregister_chrdev  prototype  include/linux/fs.h  2118  extern void __unregister_chrdev(unsigned int major,unsigned int baseminor,unsigned int count, const char *name);
unregister_chrdev_region  prototype  include/linux/fs.h  2119  extern void unregister_chrdev_region(dev_t,unsigned);
chrdev_show  prototype  include/linux/fs.h  2120  extern void chrdev_show(struct seq_file *,off_t);
register_chrdev  function  include/linux/fs.h  2123  static inline int register_chrdev(unsigned int major,const char *name,const struct file_operations *fops)
unregister_chrdev  function  include/linux/fs.h  2128  static inline void unregister_chrdev(unsigned int major,const char *name)
BDEVNAME_SIZE  macro  include/linux/fs.h  2134  #define BDEVNAME_SIZE 32
BDEVT_SIZE  macro  include/linux/fs.h  2135  #define BDEVT_SIZE 10
BLKDEV_MAJOR_HASH_SIZE  macro  include/linux/fs.h  2145  #define BLKDEV_MAJOR_HASH_SIZE 0
__bdevname  prototype  include/linux/fs.h  2139  extern const char *__bdevname(dev_t,char *buffer);
bdevname  prototype  include/linux/fs.h  2140  extern const char *bdevname(struct block_device *bdev,char *buffer);
lookup_bdev  prototype  include/linux/fs.h  2141  extern struct block_device *lookup_bdev(const char *);
blkdev_show  prototype  include/linux/fs.h  2142  extern void blkdev_show(struct seq_file *,off_t);
init_special_inode  prototype  include/linux/fs.h  2148  extern void init_special_inode(struct inode *,umode_t,dev_t);
make_bad_inode  prototype  include/linux/fs.h  2151  extern void make_bad_inode(struct inode *);
is_bad_inode  prototype  include/linux/fs.h  2152  extern int is_bad_inode(struct inode *);
bio_rw  macro  include/linux/fs.h  2162  #define bio_rw(bio) ((bio)->bi_rw & (RW_MASK | RWA_MASK))
bio_data_dir  macro  include/linux/fs.h  2167  #define bio_data_dir(bio) ((bio)->bi_rw & 1)
check_disk_size_change  prototype  include/linux/fs.h  2170  extern void check_disk_size_change(struct gendisk *disk,struct block_device *bdev);
revalidate_disk  prototype  include/linux/fs.h  2171  extern int revalidate_disk(struct gendisk *);
check_disk_change  prototype  include/linux/fs.h  2172  extern int check_disk_change(struct block_device *);
__invalidate_device  prototype  include/linux/fs.h  2173  extern int __invalidate_device(struct block_device *,bool);
invalidate_partition  prototype  include/linux/fs.h  2174  extern int invalidate_partition(struct gendisk *,int);
invalidate_mapping_pages  prototype  include/linux/fs.h  2177  unsigned long invalidate_mapping_pages(struct address_space *mapping,pgoff_t start, pgoff_t end);
invalidate_remote_inode  function  include/linux/fs.h  2179  static inline void invalidate_remote_inode(struct inode *inode)
invalidate_inode_pages2  prototype  include/linux/fs.h  2185  extern int invalidate_inode_pages2(struct address_space *mapping);
invalidate_inode_pages2_range  prototype  include/linux/fs.h  2187  extern int invalidate_inode_pages2_range(struct address_space *mapping,pgoff_t start, pgoff_t end);
write_inode_now  prototype  include/linux/fs.h  2188  extern int write_inode_now(struct inode *,int);
filemap_fdatawrite  prototype  include/linux/fs.h  2189  extern int filemap_fdatawrite(struct address_space *);
filemap_flush  prototype  include/linux/fs.h  2190  extern int filemap_flush(struct address_space *);
filemap_fdatawait  prototype  include/linux/fs.h  2191  extern int filemap_fdatawait(struct address_space *);
filemap_fdatawait_range  prototype  include/linux/fs.h  2193  extern int filemap_fdatawait_range(struct address_space *,loff_t lstart,loff_t lend);
filemap_write_and_wait  prototype  include/linux/fs.h  2194  extern int filemap_write_and_wait(struct address_space *mapping);
filemap_write_and_wait_range  prototype  include/linux/fs.h  2196  extern int filemap_write_and_wait_range(struct address_space *mapping,loff_t lstart, loff_t lend);
__filemap_fdatawrite_range  prototype  include/linux/fs.h  2198  extern int __filemap_fdatawrite_range(struct address_space *mapping,loff_t start, loff_t end, int sync_mode);
filemap_fdatawrite_range  prototype  include/linux/fs.h  2200  extern int filemap_fdatawrite_range(struct address_space *mapping,loff_t start, loff_t end);
vfs_fsync_range  prototype  include/linux/fs.h  2203  extern int vfs_fsync_range(struct file *file,loff_t start,loff_t end,int datasync);
vfs_fsync  prototype  include/linux/fs.h  2204  extern int vfs_fsync(struct file *file,int datasync);
generic_write_sync  prototype  include/linux/fs.h  2205  extern int generic_write_sync(struct file *file,loff_t pos,loff_t count);
emergency_sync  prototype  include/linux/fs.h  2206  extern void emergency_sync(void);
emergency_remount  prototype  include/linux/fs.h  2207  extern void emergency_remount(void);
bmap  prototype  include/linux/fs.h  2209  extern sector_t bmap(struct inode *,sector_t);
notify_change  prototype  include/linux/fs.h  2211  extern int notify_change(struct dentry *,struct iattr *);
inode_permission  prototype  include/linux/fs.h  2212  extern int inode_permission(struct inode *,int);
generic_permission  prototype  include/linux/fs.h  2213  extern int generic_permission(struct inode *,int);
execute_ok  function  include/linux/fs.h  2215  static inline bool execute_ok(struct inode *inode)
get_write_access  function  include/linux/fs.h  2236  static inline int get_write_access(struct inode *inode)
deny_write_access  function  include/linux/fs.h  2240  static inline int deny_write_access(struct file *file)
put_write_access  function  include/linux/fs.h  2245  static inline void put_write_access(struct inode * inode)
allow_write_access  function  include/linux/fs.h  2249  static inline void allow_write_access(struct file *file)
i_readcount_dec  function  include/linux/fs.h  2265  static inline void i_readcount_dec(struct inode *inode)
i_readcount_inc  function  include/linux/fs.h  2269  static inline void i_readcount_inc(struct inode *inode)
do_pipe_flags  prototype  include/linux/fs.h  2274  extern int do_pipe_flags(int *,int);
kernel_read  prototype  include/linux/fs.h  2276  extern int kernel_read(struct file *,loff_t,char *,unsigned long);
open_exec  prototype  include/linux/fs.h  2277  extern struct file * open_exec(const char *);
is_subdir  prototype  include/linux/fs.h  2280  extern int is_subdir(struct dentry *,struct dentry *);
path_is_under  prototype  include/linux/fs.h  2281  extern int path_is_under(struct path *,struct path *);
find_inode_number  prototype  include/linux/fs.h  2282  extern ino_t find_inode_number(struct dentry *,struct qstr *);
default_llseek  prototype  include/linux/fs.h  2287  extern loff_t default_llseek(struct file *file,loff_t offset,int whence);
vfs_llseek  prototype  include/linux/fs.h  2289  extern loff_t vfs_llseek(struct file *file,loff_t offset,int whence);
inode_init_always  prototype  include/linux/fs.h  2291  extern int inode_init_always(struct super_block *,struct inode *);
inode_init_once  prototype  include/linux/fs.h  2292  extern void inode_init_once(struct inode *);
address_space_init_once  prototype  include/linux/fs.h  2293  extern void address_space_init_once(struct address_space *mapping);
ihold  prototype  include/linux/fs.h  2294  extern void ihold(struct inode * inode);
iput  prototype  include/linux/fs.h  2295  extern void iput(struct inode *);
igrab  prototype  include/linux/fs.h  2296  extern struct inode * igrab(struct inode *);
iunique  prototype  include/linux/fs.h  2297  extern ino_t iunique(struct super_block *,ino_t);
inode_needs_sync  prototype  include/linux/fs.h  2298  extern int inode_needs_sync(struct inode *inode);
generic_delete_inode  prototype  include/linux/fs.h  2299  extern int generic_delete_inode(struct inode *inode);
generic_drop_inode  function  include/linux/fs.h  2300  static inline int generic_drop_inode(struct inode *inode)
ilookup5_nowait  prototype  include/linux/fs.h  2307  extern struct inode *ilookup5_nowait(struct super_block *sb,unsigned long hashval, int (*test)(struct inode *, void *),void *data);
ilookup5  prototype  include/linux/fs.h  2309  extern struct inode *ilookup5(struct super_block *sb,unsigned long hashval,int (*test)(struct inode *, void *), void *data);
ilookup  prototype  include/linux/fs.h  2310  extern struct inode *ilookup(struct super_block *sb,unsigned long ino);
iget5_locked  prototype  include/linux/fs.h  2312  extern struct inode * iget5_locked(struct super_block *,unsigned long,int (*test)(struct inode *,void *),int (*set)(struct inode *,void *),void *);
iget_locked  prototype  include/linux/fs.h  2313  extern struct inode * iget_locked(struct super_block *,unsigned long);
insert_inode_locked4  prototype  include/linux/fs.h  2314  extern int insert_inode_locked4(struct inode *,unsigned long,int (*test)(struct inode *,void *),void *);
insert_inode_locked  prototype  include/linux/fs.h  2315  extern int insert_inode_locked(struct inode *);
lockdep_annotate_inode_mutex_key  function  include/linux/fs.h  2319  static inline void lockdep_annotate_inode_mutex_key(struct inode *inode) { };
unlock_new_inode  prototype  include/linux/fs.h  2321  extern void unlock_new_inode(struct inode *);
get_next_ino  prototype  include/linux/fs.h  2322  extern unsigned int get_next_ino(void);
__iget  prototype  include/linux/fs.h  2324  extern void __iget(struct inode * inode);
iget_failed  prototype  include/linux/fs.h  2325  extern void iget_failed(struct inode *);
clear_inode  prototype  include/linux/fs.h  2326  extern void clear_inode(struct inode *);
__destroy_inode  prototype  include/linux/fs.h  2327  extern void __destroy_inode(struct inode *);
new_inode_pseudo  prototype  include/linux/fs.h  2328  extern struct inode *new_inode_pseudo(struct super_block *sb);
new_inode  prototype  include/linux/fs.h  2329  extern struct inode *new_inode(struct super_block *sb);
free_inode_nonrcu  prototype  include/linux/fs.h  2330  extern void free_inode_nonrcu(struct inode *inode);
should_remove_suid  prototype  include/linux/fs.h  2331  extern int should_remove_suid(struct dentry *);
file_remove_suid  prototype  include/linux/fs.h  2332  extern int file_remove_suid(struct file *);
__insert_inode_hash  prototype  include/linux/fs.h  2334  extern void __insert_inode_hash(struct inode *,unsigned long hashval);
insert_inode_hash  function  include/linux/fs.h  2335  static inline void insert_inode_hash(struct inode *inode)
__remove_inode_hash  prototype  include/linux/fs.h  2340  extern void __remove_inode_hash(struct inode *);
remove_inode_hash  function  include/linux/fs.h  2341  static inline void remove_inode_hash(struct inode *inode)
inode_sb_list_add  prototype  include/linux/fs.h  2347  extern void inode_sb_list_add(struct inode *inode);
submit_bio  prototype  include/linux/fs.h  2350  extern void submit_bio(int,struct bio *);
bdev_read_only  prototype  include/linux/fs.h  2351  extern int bdev_read_only(struct block_device *);
set_blocksize  prototype  include/linux/fs.h  2353  extern int set_blocksize(struct block_device *,int);
sb_set_blocksize  prototype  include/linux/fs.h  2354  extern int sb_set_blocksize(struct super_block *,int);
sb_min_blocksize  prototype  include/linux/fs.h  2355  extern int sb_min_blocksize(struct super_block *,int);
generic_file_mmap  prototype  include/linux/fs.h  2357  extern int generic_file_mmap(struct file *,struct vm_area_struct *);
generic_file_readonly_mmap  prototype  include/linux/fs.h  2358  extern int generic_file_readonly_mmap(struct file *,struct vm_area_struct *);
generic_file_remap_pages  prototype  include/linux/fs.h  2360  extern int generic_file_remap_pages(struct vm_area_struct *,unsigned long addr,unsigned long size, pgoff_t pgoff);
file_read_actor  prototype  include/linux/fs.h  2361  extern int file_read_actor(read_descriptor_t * desc,struct page *page,unsigned long offset,unsigned long size);
generic_write_checks  prototype  include/linux/fs.h  2362  int generic_write_checks(struct file *file,loff_t *pos,size_t *count,int isblk);
generic_file_aio_read  prototype  include/linux/fs.h  2363  extern ssize_t generic_file_aio_read(struct kiocb *,const struct iovec *,unsigned long,loff_t);
__generic_file_aio_write  prototype  include/linux/fs.h  2365  extern ssize_t __generic_file_aio_write(struct kiocb *,const struct iovec *,unsigned long,loff_t *);
generic_file_aio_write  prototype  include/linux/fs.h  2366  extern ssize_t generic_file_aio_write(struct kiocb *,const struct iovec *,unsigned long,loff_t);
generic_file_direct_write  prototype  include/linux/fs.h  2368  extern ssize_t generic_file_direct_write(struct kiocb *,const struct iovec *,unsigned long *, loff_t, loff_t *, size_t, size_t);
generic_file_buffered_write  prototype  include/linux/fs.h  2370  extern ssize_t generic_file_buffered_write(struct kiocb *,const struct iovec *,unsigned long, loff_t, loff_t *, size_t, ssize_t);
do_sync_read  prototype  include/linux/fs.h  2371  extern ssize_t do_sync_read(struct file *filp,char __user *buf,size_t len,loff_t *ppos);
do_sync_write  prototype  include/linux/fs.h  2372  extern ssize_t do_sync_write(struct file *filp,const char __user *buf,size_t len,loff_t *ppos);
generic_segment_checks  prototype  include/linux/fs.h  2374  extern int generic_segment_checks(const struct iovec *iov,unsigned long *nr_segs, size_t *count, int access_flags);
blkdev_aio_write  prototype  include/linux/fs.h  2378  extern ssize_t blkdev_aio_write(struct kiocb *iocb,const struct iovec *iov,unsigned long nr_segs, loff_t pos);
blkdev_fsync  prototype  include/linux/fs.h  2380  extern int blkdev_fsync(struct file *filp,loff_t start,loff_t end,int datasync);
block_sync_page  prototype  include/linux/fs.h  2381  extern void block_sync_page(struct page *page);
generic_file_splice_read  prototype  include/linux/fs.h  2385  extern ssize_t generic_file_splice_read(struct file *,loff_t *,struct pipe_inode_info *, size_t, unsigned int);
default_file_splice_read  prototype  include/linux/fs.h  2387  extern ssize_t default_file_splice_read(struct file *,loff_t *,struct pipe_inode_info *, size_t, unsigned int);
generic_file_splice_write  prototype  include/linux/fs.h  2389  extern ssize_t generic_file_splice_write(struct pipe_inode_info *,struct file *, loff_t *, size_t, unsigned int);
generic_splice_sendpage  prototype  include/linux/fs.h  2391  extern ssize_t generic_splice_sendpage(struct pipe_inode_info *pipe,struct file *out, loff_t *, size_t len, unsigned int flags);
do_splice_direct  prototype  include/linux/fs.h  2393  extern long do_splice_direct(struct file *in,loff_t *ppos,struct file *out,size_t len, unsigned int flags);
file_ra_state_init  prototype  include/linux/fs.h  2396  file_ra_state_init(struct file_ra_state *ra,struct address_space *mapping);
noop_llseek  prototype  include/linux/fs.h  2397  extern loff_t noop_llseek(struct file *file,loff_t offset,int whence);
no_llseek  prototype  include/linux/fs.h  2398  extern loff_t no_llseek(struct file *file,loff_t offset,int whence);
generic_file_llseek  prototype  include/linux/fs.h  2399  extern loff_t generic_file_llseek(struct file *file,loff_t offset,int whence);
generic_file_llseek_size  prototype  include/linux/fs.h  2401  extern loff_t generic_file_llseek_size(struct file *file,loff_t offset,int whence, loff_t maxsize, loff_t eof);
generic_file_open  prototype  include/linux/fs.h  2402  extern int generic_file_open(struct inode * inode,struct file * filp);
nonseekable_open  prototype  include/linux/fs.h  2403  extern int nonseekable_open(struct inode * inode,struct file * filp);
xip_file_read  prototype  include/linux/fs.h  2407  extern ssize_t xip_file_read(struct file *filp,char __user *buf,size_t len,loff_t *ppos);
xip_file_mmap  prototype  include/linux/fs.h  2408  extern int xip_file_mmap(struct file * file,struct vm_area_struct * vma);
xip_file_write  prototype  include/linux/fs.h  2410  extern ssize_t xip_file_write(struct file *filp,const char __user *buf,size_t len, loff_t *ppos);
xip_truncate_page  function  include/linux/fs.h  2413  static inline int xip_truncate_page(struct address_space *mapping,loff_t from)
dio_submit_t  typedef  include/linux/fs.h  2420  typedef void (dio_submit_t)(int rw,struct bio *bio,struct inode *inode,
DIO_LOCKING  enumerator  include/linux/fs.h  2425  DIO_LOCKING = 0x01,
DIO_SKIP_HOLES  enumerator  include/linux/fs.h  2428  DIO_SKIP_HOLES = 0x02,
dio_end_io  prototype  include/linux/fs.h  2431  void dio_end_io(struct bio *bio,int error);
__blockdev_direct_IO  prototype  include/linux/fs.h  2436  ssize_t __blockdev_direct_IO(int rw,struct kiocb *iocb,struct inode *inode,struct block_device *bdev, const struct iovec *iov, loff_t offset,unsigned long nr_segs, get_block_t get_block, dio_iodone_t end_io,dio_submit_t submit_io,	int flags);
blockdev_direct_IO  function  include/linux/fs.h  2440  static inline ssize_t blockdev_direct_IO(int rw,struct kiocb *iocb,struct inode *inode, const struct iovec *iov, loff_t offset,unsigned long nr_segs, get_block_t get_block)
inode_dio_wait  prototype  include/linux/fs.h  2448  void inode_dio_wait(struct inode *inode);
inode_dio_done  prototype  include/linux/fs.h  2449  void inode_dio_done(struct inode *inode);
special_file  macro  include/linux/fs.h  2453  #define special_file(m) (S_ISCHR(m)||S_ISBLK(m)||S_ISFIFO(m)||S_ISSOCK(m))
vfs_readlink  prototype  include/linux/fs.h  2455  extern int vfs_readlink(struct dentry *,char __user *,int,const char *);
vfs_follow_link  prototype  include/linux/fs.h  2456  extern int vfs_follow_link(struct nameidata *,const char *);
page_readlink  prototype  include/linux/fs.h  2457  extern int page_readlink(struct dentry *,char __user *,int);
page_follow_link_light  prototype  include/linux/fs.h  2458  extern void *page_follow_link_light(struct dentry *,struct nameidata *);
page_put_link  prototype  include/linux/fs.h  2459  extern void page_put_link(struct dentry *,struct nameidata *,void *);
__page_symlink  prototype  include/linux/fs.h  2461  extern int __page_symlink(struct inode *inode,const char *symname,int len,int nofs);
page_symlink  prototype  include/linux/fs.h  2462  extern int page_symlink(struct inode *inode,const char *symname,int len);
generic_readlink  prototype  include/linux/fs.h  2464  extern int generic_readlink(struct dentry *,char __user *,int);
generic_fillattr  prototype  include/linux/fs.h  2465  extern void generic_fillattr(struct inode *,struct kstat *);
vfs_getattr  prototype  include/linux/fs.h  2466  extern int vfs_getattr(struct vfsmount *,struct dentry *,struct kstat *);
__inode_add_bytes  prototype  include/linux/fs.h  2467  void __inode_add_bytes(struct inode *inode,loff_t bytes);
inode_add_bytes  prototype  include/linux/fs.h  2468  void inode_add_bytes(struct inode *inode,loff_t bytes);
inode_sub_bytes  prototype  include/linux/fs.h  2469  void inode_sub_bytes(struct inode *inode,loff_t bytes);
inode_get_bytes  prototype  include/linux/fs.h  2470  loff_t inode_get_bytes(struct inode *inode);
inode_set_bytes  prototype  include/linux/fs.h  2471  void inode_set_bytes(struct inode *inode,loff_t bytes);
vfs_readdir  prototype  include/linux/fs.h  2473  extern int vfs_readdir(struct file *,filldir_t,void *);
vfs_stat  prototype  include/linux/fs.h  2475  extern int vfs_stat(const char __user *,struct kstat *);
vfs_lstat  prototype  include/linux/fs.h  2476  extern int vfs_lstat(const char __user *,struct kstat *);
vfs_fstat  prototype  include/linux/fs.h  2477  extern int vfs_fstat(unsigned int,struct kstat *);
vfs_fstatat  prototype  include/linux/fs.h  2478  extern int vfs_fstatat(int ,const char __user *,struct kstat *,int);
do_vfs_ioctl  prototype  include/linux/fs.h  2481  extern int do_vfs_ioctl(struct file *filp,unsigned int fd,unsigned int cmd,unsigned long arg);
__generic_block_fiemap  prototype  include/linux/fs.h  2485  extern int __generic_block_fiemap(struct inode *inode,struct fiemap_extent_info *fieinfo,loff_t start, loff_t len,get_block_t *get_block);
generic_block_fiemap  prototype  include/linux/fs.h  2488  extern int generic_block_fiemap(struct inode *inode,struct fiemap_extent_info *fieinfo, u64 start,u64 len, get_block_t *get_block);
get_filesystem  prototype  include/linux/fs.h  2490  extern void get_filesystem(struct file_system_type *fs);
put_filesystem  prototype  include/linux/fs.h  2491  extern void put_filesystem(struct file_system_type *fs);
get_fs_type  prototype  include/linux/fs.h  2492  extern struct file_system_type *get_fs_type(const char *name);
get_super  prototype  include/linux/fs.h  2493  extern struct super_block *get_super(struct block_device *);
get_super_thawed  prototype  include/linux/fs.h  2494  extern struct super_block *get_super_thawed(struct block_device *);
get_active_super  prototype  include/linux/fs.h  2495  extern struct super_block *get_active_super(struct block_device *bdev);
drop_super  prototype  include/linux/fs.h  2496  extern void drop_super(struct super_block *sb);
iterate_supers  prototype  include/linux/fs.h  2497  extern void iterate_supers(void (*)(struct super_block *,void *),void *);
iterate_supers_type  prototype  include/linux/fs.h  2499  extern void iterate_supers_type(struct file_system_type *,void (*)(struct super_block *, void *), void *);
dcache_dir_open  prototype  include/linux/fs.h  2501  extern int dcache_dir_open(struct inode *,struct file *);
dcache_dir_close  prototype  include/linux/fs.h  2502  extern int dcache_dir_close(struct inode *,struct file *);
dcache_dir_lseek  prototype  include/linux/fs.h  2503  extern loff_t dcache_dir_lseek(struct file *,loff_t,int);
dcache_readdir  prototype  include/linux/fs.h  2504  extern int dcache_readdir(struct file *,void *,filldir_t);
simple_setattr  prototype  include/linux/fs.h  2505  extern int simple_setattr(struct dentry *,struct iattr *);
simple_getattr  prototype  include/linux/fs.h  2506  extern int simple_getattr(struct vfsmount *,struct dentry *,struct kstat *);
simple_statfs  prototype  include/linux/fs.h  2507  extern int simple_statfs(struct dentry *,struct kstatfs *);
simple_open  prototype  include/linux/fs.h  2508  extern int simple_open(struct inode *inode,struct file *file);
simple_link  prototype  include/linux/fs.h  2509  extern int simple_link(struct dentry *,struct inode *,struct dentry *);
simple_unlink  prototype  include/linux/fs.h  2510  extern int simple_unlink(struct inode *,struct dentry *);
simple_rmdir  prototype  include/linux/fs.h  2511  extern int simple_rmdir(struct inode *,struct dentry *);
simple_rename  prototype  include/linux/fs.h  2512  extern int simple_rename(struct inode *,struct dentry *,struct inode *,struct dentry *);
noop_fsync  prototype  include/linux/fs.h  2513  extern int noop_fsync(struct file *,loff_t,loff_t,int);
simple_empty  prototype  include/linux/fs.h  2514  extern int simple_empty(struct dentry *);
simple_readpage  prototype  include/linux/fs.h  2515  extern int simple_readpage(struct file *file,struct page *page);
simple_write_begin  prototype  include/linux/fs.h  2518  extern int simple_write_begin(struct file *file,struct address_space *mapping,loff_t pos, unsigned len, unsigned flags,struct page **pagep, void **fsdata);
simple_write_end  prototype  include/linux/fs.h  2521  extern int simple_write_end(struct file *file,struct address_space *mapping,loff_t pos, unsigned len, unsigned copied,struct page *page, void *fsdata);
simple_lookup  prototype  include/linux/fs.h  2523  extern struct dentry *simple_lookup(struct inode *,struct dentry *,unsigned int flags);
generic_read_dir  prototype  include/linux/fs.h  2524  extern ssize_t generic_read_dir(struct file *,char __user *,size_t,loff_t *);
tree_descr  struct  include/linux/fs.h  2527  struct tree_descr { char *name; const struct file_operations *ops; int mode; };
d_alloc_name  prototype  include/linux/fs.h  2528  struct dentry *d_alloc_name(struct dentry *,const char *);
simple_fill_super  prototype  include/linux/fs.h  2529  extern int simple_fill_super(struct super_block *,unsigned long,struct tree_descr *);
simple_pin_fs  prototype  include/linux/fs.h  2530  extern int simple_pin_fs(struct file_system_type *,struct vfsmount **mount,int *count);
simple_release_fs  prototype  include/linux/fs.h  2531  extern void simple_release_fs(struct vfsmount **mount,int *count);
simple_read_from_buffer  prototype  include/linux/fs.h  2534  extern ssize_t simple_read_from_buffer(void __user *to,size_t count,loff_t *ppos, const void *from, size_t available);
simple_write_to_buffer  prototype  include/linux/fs.h  2536  extern ssize_t simple_write_to_buffer(void *to,size_t available,loff_t *ppos,const void __user *from, size_t count);
generic_file_fsync  prototype  include/linux/fs.h  2538  extern int generic_file_fsync(struct file *,loff_t,loff_t,int);
generic_check_addressable  prototype  include/linux/fs.h  2540  extern int generic_check_addressable(unsigned,u64);
buffer_migrate_page  macro  include/linux/fs.h  2547  #define buffer_migrate_page NULL
inode_change_ok  prototype  include/linux/fs.h  2550  extern int inode_change_ok(const struct inode *,struct iattr *);
inode_newsize_ok  prototype  include/linux/fs.h  2551  extern int inode_newsize_ok(const struct inode *,loff_t offset);
setattr_copy  prototype  include/linux/fs.h  2552  extern void setattr_copy(struct inode *inode,const struct iattr *attr);
file_update_time  prototype  include/linux/fs.h  2554  extern int file_update_time(struct file *file);
generic_show_options  prototype  include/linux/fs.h  2556  extern int generic_show_options(struct seq_file *m,struct dentry *root);
save_mount_options  prototype  include/linux/fs.h  2557  extern void save_mount_options(struct super_block *sb,char *options);
replace_mount_options  prototype  include/linux/fs.h  2558  extern void replace_mount_options(struct super_block *sb,char *options);
parent_ino  function  include/linux/fs.h  2560  static inline ino_t parent_ino(struct dentry *dentry)
simple_transaction_argresp  struct  include/linux/fs.h  2580  struct simple_transaction_argresp {
SIMPLE_TRANSACTION_LIMIT  macro  include/linux/fs.h  2585  #define SIMPLE_TRANSACTION_LIMIT (PAGE_SIZE - sizeof(struct simple_transaction_argresp))
simple_transaction_get  prototype  include/linux/fs.h  2588  char *simple_transaction_get(struct file *file,const char __user *buf,size_t size);
simple_transaction_read  prototype  include/linux/fs.h  2590  ssize_t simple_transaction_read(struct file *file,char __user *buf,size_t size, loff_t *pos);
simple_transaction_release  prototype  include/linux/fs.h  2591  int simple_transaction_release(struct inode *inode,struct file *file);
simple_transaction_set  prototype  include/linux/fs.h  2593  void simple_transaction_set(struct file *file,size_t n);
DEFINE_SIMPLE_ATTRIBUTE  macro  include/linux/fs.h  2611  #define DEFINE_SIMPLE_ATTRIBUTE(__fops,__get,__set,__fmt) \
__simple_attr_check_format  function  include/linux/fs.h  2627  void __simple_attr_check_format(const char *fmt,...)
simple_attr_open  prototype  include/linux/fs.h  2634  int simple_attr_open(struct inode *inode,struct file *file,int (*get)(void *, u64 *), int (*set)(void *, u64),const char *fmt);
simple_attr_release  prototype  include/linux/fs.h  2635  int simple_attr_release(struct inode *inode,struct file *file);
simple_attr_read  prototype  include/linux/fs.h  2637  ssize_t simple_attr_read(struct file *file,char __user *buf,size_t len, loff_t *ppos);
simple_attr_write  prototype  include/linux/fs.h  2639  ssize_t simple_attr_write(struct file *file,const char __user *buf,size_t len, loff_t *ppos);
proc_nr_files  prototype  include/linux/fs.h  2643  int proc_nr_files(struct ctl_table *table,int write,void __user *buffer, size_t *lenp, loff_t *ppos);
proc_nr_dentry  prototype  include/linux/fs.h  2645  int proc_nr_dentry(struct ctl_table *table,int write,void __user *buffer, size_t *lenp, loff_t *ppos);
proc_nr_inodes  prototype  include/linux/fs.h  2647  int proc_nr_inodes(struct ctl_table *table,int write,void __user *buffer, size_t *lenp, loff_t *ppos);
get_filesystem_list  prototype  include/linux/fs.h  2648  int __init get_filesystem_list(char *buf);
__FMODE_EXEC  macro  include/linux/fs.h  2650  #define __FMODE_EXEC ((__force int) FMODE_EXEC)
__FMODE_NONOTIFY  macro  include/linux/fs.h  2651  #define __FMODE_NONOTIFY ((__force int) FMODE_NONOTIFY)
ACC_MODE  macro  include/linux/fs.h  2653  #define ACC_MODE(x) ("\004\002\006\006"[(x)&O_ACCMODE])
OPEN_FMODE  macro  include/linux/fs.h  2654  #define OPEN_FMODE(flag) ((__force fmode_t)(((flag + 1) & O_ACCMODE) | \
is_sxid  function  include/linux/fs.h  2657  static inline int is_sxid(umode_t mode)
inode_has_no_xattr  function  include/linux/fs.h  2662  static inline void inode_has_no_xattr(struct inode *inode)
_LINUX_KERNEL_H  macro  include/linux/kernel.h  2  #define _LINUX_KERNEL_H
USHRT_MAX  macro  include/linux/kernel.h  18  #define USHRT_MAX ((u16)(~0U))
SHRT_MAX  macro  include/linux/kernel.h  19  #define SHRT_MAX ((s16)(USHRT_MAX>>1))
SHRT_MIN  macro  include/linux/kernel.h  20  #define SHRT_MIN ((s16)(-SHRT_MAX - 1))
INT_MAX  macro  include/linux/kernel.h  21  #define INT_MAX ((int)(~0U>>1))
INT_MIN  macro  include/linux/kernel.h  22  #define INT_MIN (-INT_MAX - 1)
UINT_MAX  macro  include/linux/kernel.h  23  #define UINT_MAX (~0U)
LONG_MAX  macro  include/linux/kernel.h  24  #define LONG_MAX ((long)(~0UL>>1))
LONG_MIN  macro  include/linux/kernel.h  25  #define LONG_MIN (-LONG_MAX - 1)
ULONG_MAX  macro  include/linux/kernel.h  26  #define ULONG_MAX (~0UL)
LLONG_MAX  macro  include/linux/kernel.h  27  #define LLONG_MAX ((long long)(~0ULL>>1))
LLONG_MIN  macro  include/linux/kernel.h  28  #define LLONG_MIN (-LLONG_MAX - 1)
ULLONG_MAX  macro  include/linux/kernel.h  29  #define ULLONG_MAX (~0ULL)
SIZE_MAX  macro  include/linux/kernel.h  30  #define SIZE_MAX (~(size_t)0)
STACK_MAGIC  macro  include/linux/kernel.h  32  #define STACK_MAGIC 0xdeadbeef
REPEAT_BYTE  macro  include/linux/kernel.h  34  #define REPEAT_BYTE(x) ((~0ul / 0xff) * (x))
ALIGN  macro  include/linux/linkage.h  57  #define ALIGN __ALIGN
__ALIGN_MASK  macro  include/linux/kernel.h  37  #define __ALIGN_MASK(x,mask) __ALIGN_KERNEL_MASK((x),(mask))
PTR_ALIGN  macro  include/linux/kernel.h  38  #define PTR_ALIGN(p,a) ((typeof(p))ALIGN((unsigned long)(p),(a)))
IS_ALIGNED  macro  include/linux/kernel.h  39  #define IS_ALIGNED(x,a) (((x) & ((typeof(x))(a) - 1)) == 0)
ARRAY_SIZE  macro  include/linux/kernel.h  41  #define ARRAY_SIZE(arr) (sizeof(arr) / sizeof((arr)[0]) + __must_be_array(arr))
__round_mask  macro  include/linux/kernel.h  49  #define __round_mask(x,y) ((__typeof__(x))((y)-1))
round_up  macro  include/linux/kernel.h  50  #define round_up(x,y) ((((x)-1) | __round_mask(x,y))+1)
round_down  macro  include/linux/kernel.h  51  #define round_down(x,y) ((x) & ~__round_mask(x,y))
FIELD_SIZEOF  macro  include/linux/kernel.h  53  #define FIELD_SIZEOF(t,f) (sizeof(((t*)0)->f))
DIV_ROUND_UP  macro  include/linux/kernel.h  54  #define DIV_ROUND_UP(n,d) (((n) + (d) - 1) / (d))
DIV_ROUND_UP_ULL  macro  include/linux/kernel.h  55  #define DIV_ROUND_UP_ULL(ll,d) \
DIV_ROUND_UP_SECTOR_T  macro  include/linux/kernel.h  61  # define DIV_ROUND_UP_SECTOR_T(ll,d) DIV_ROUND_UP(ll,d)
roundup  macro  include/linux/kernel.h  65  #define roundup(x,y) ( \
rounddown  macro  include/linux/kernel.h  71  #define rounddown(x,y) ( \
DIV_ROUND_CLOSEST  macro  include/linux/kernel.h  83  #define DIV_ROUND_CLOSEST(x,divisor)( \
mult_frac  macro  include/linux/kernel.h  98  #define mult_frac(x,numer,denom)( \
_RET_IP_  macro  include/linux/kernel.h  107  #define _RET_IP_ (unsigned long)__builtin_return_address(0)
_THIS_IP_  macro  include/linux/kernel.h  108  #define _THIS_IP_ ({ __label__ __here; __here: (unsigned long)&&__here; })
sector_div  macro  include/linux/kernel.h  114  # define sector_div(n,b)( \
upper_32_bits  macro  include/linux/kernel.h  132  #define upper_32_bits(n) ((u32)(((n) >> 16) >> 16))
lower_32_bits  macro  include/linux/kernel.h  138  #define lower_32_bits(n) ((u32)(n))
_cond_resched  prototype  include/linux/kernel.h  145  extern int _cond_resched(void);
might_resched  macro  include/linux/kernel.h  148  # define might_resched() do { } while (0)
__might_sleep  function  include/linux/kernel.h  167  static inline void __might_sleep(const char *file,int line,int preempt_offset) { }
might_sleep  macro  include/linux/kernel.h  168  # define might_sleep() do { might_resched(); } while (0)
might_sleep_if  macro  include/linux/kernel.h  171  #define might_sleep_if(cond) do { if (cond) might_sleep(); } while (0)
abs  macro  include/linux/kernel.h  179  #define abs(x) ({ \
abs64  macro  include/linux/kernel.h  191  #define abs64(x) ({ \
might_fault  function  include/linux/kernel.h  199  static inline void might_fault(void)
__cold  macro  include/linux/compiler.h  284  #define __cold
oops_enter  prototype  include/linux/kernel.h  210  extern void oops_enter(void);
oops_exit  prototype  include/linux/kernel.h  211  extern void oops_exit(void);
print_oops_end_marker  prototype  include/linux/kernel.h  212  void print_oops_end_marker(void);
oops_may_print  prototype  include/linux/kernel.h  213  extern int oops_may_print(void);
_kstrtoul  prototype  include/linux/kernel.h  220  int __must_check _kstrtoul(const char *s,unsigned int base,unsigned long *res);
_kstrtol  prototype  include/linux/kernel.h  221  int __must_check _kstrtol(const char *s,unsigned int base,long *res);
kstrtoull  prototype  include/linux/kernel.h  223  int __must_check kstrtoull(const char *s,unsigned int base,unsigned long long *res);
kstrtoll  prototype  include/linux/kernel.h  224  int __must_check kstrtoll(const char *s,unsigned int base,long long *res);
kstrtoul  function  include/linux/kernel.h  242  static inline int __must_check kstrtoul(const char *s,unsigned int base,unsigned long *res)
kstrtol  function  include/linux/kernel.h  271  static inline int __must_check kstrtol(const char *s,unsigned int base,long *res)
kstrtouint  prototype  include/linux/kernel.h  284  int __must_check kstrtouint(const char *s,unsigned int base,unsigned int *res);
kstrtoint  prototype  include/linux/kernel.h  285  int __must_check kstrtoint(const char *s,unsigned int base,int *res);
kstrtou64  function  include/linux/kernel.h  287  static inline int __must_check kstrtou64(const char *s,unsigned int base,u64 *res)
kstrtos64  function  include/linux/kernel.h  292  static inline int __must_check kstrtos64(const char *s,unsigned int base,s64 *res)
kstrtou32  function  include/linux/kernel.h  297  static inline int __must_check kstrtou32(const char *s,unsigned int base,u32 *res)
kstrtos32  function  include/linux/kernel.h  302  static inline int __must_check kstrtos32(const char *s,unsigned int base,s32 *res)
kstrtou16  prototype  include/linux/kernel.h  307  int __must_check kstrtou16(const char *s,unsigned int base,u16 *res);
kstrtos16  prototype  include/linux/kernel.h  308  int __must_check kstrtos16(const char *s,unsigned int base,s16 *res);
kstrtou8  prototype  include/linux/kernel.h  309  int __must_check kstrtou8(const char *s,unsigned int base,u8 *res);
kstrtos8  prototype  include/linux/kernel.h  310  int __must_check kstrtos8(const char *s,unsigned int base,s8 *res);
kstrtoull_from_user  prototype  include/linux/kernel.h  312  int __must_check kstrtoull_from_user(const char __user *s,size_t count,unsigned int base,unsigned long long *res);
kstrtoll_from_user  prototype  include/linux/kernel.h  313  int __must_check kstrtoll_from_user(const char __user *s,size_t count,unsigned int base,long long *res);
kstrtoul_from_user  prototype  include/linux/kernel.h  314  int __must_check kstrtoul_from_user(const char __user *s,size_t count,unsigned int base,unsigned long *res);
kstrtol_from_user  prototype  include/linux/kernel.h  315  int __must_check kstrtol_from_user(const char __user *s,size_t count,unsigned int base,long *res);
kstrtouint_from_user  prototype  include/linux/kernel.h  316  int __must_check kstrtouint_from_user(const char __user *s,size_t count,unsigned int base,unsigned int *res);
kstrtoint_from_user  prototype  include/linux/kernel.h  317  int __must_check kstrtoint_from_user(const char __user *s,size_t count,unsigned int base,int *res);
kstrtou16_from_user  prototype  include/linux/kernel.h  318  int __must_check kstrtou16_from_user(const char __user *s,size_t count,unsigned int base,u16 *res);
kstrtos16_from_user  prototype  include/linux/kernel.h  319  int __must_check kstrtos16_from_user(const char __user *s,size_t count,unsigned int base,s16 *res);
kstrtou8_from_user  prototype  include/linux/kernel.h  320  int __must_check kstrtou8_from_user(const char __user *s,size_t count,unsigned int base,u8 *res);
kstrtos8_from_user  prototype  include/linux/kernel.h  321  int __must_check kstrtos8_from_user(const char __user *s,size_t count,unsigned int base,s8 *res);
kstrtou64_from_user  function  include/linux/kernel.h  323  static inline int __must_check kstrtou64_from_user(const char __user *s,size_t count,unsigned int base,u64 *res)
kstrtos64_from_user  function  include/linux/kernel.h  328  static inline int __must_check kstrtos64_from_user(const char __user *s,size_t count,unsigned int base,s64 *res)
kstrtou32_from_user  function  include/linux/kernel.h  333  static inline int __must_check kstrtou32_from_user(const char __user *s,size_t count,unsigned int base,u32 *res)
kstrtos32_from_user  function  include/linux/kernel.h  338  static inline int __must_check kstrtos32_from_user(const char __user *s,size_t count,unsigned int base,s32 *res)
simple_strtoul  prototype  include/linux/kernel.h  345  extern unsigned long simple_strtoul(const char *,char **,unsigned int);
simple_strtol  prototype  include/linux/kernel.h  346  extern long simple_strtol(const char *,char **,unsigned int);
simple_strtoull  prototype  include/linux/kernel.h  347  extern unsigned long long simple_strtoull(const char *,char **,unsigned int);
simple_strtoll  prototype  include/linux/kernel.h  348  extern long long simple_strtoll(const char *,char **,unsigned int);
strict_strtoul  macro  include/linux/kernel.h  349  #define strict_strtoul kstrtoul
strict_strtol  macro  include/linux/kernel.h  350  #define strict_strtol kstrtol
strict_strtoull  macro  include/linux/kernel.h  351  #define strict_strtoull kstrtoull
strict_strtoll  macro  include/linux/kernel.h  352  #define strict_strtoll kstrtoll
num_to_str  prototype  include/linux/kernel.h  354  extern int num_to_str(char *buf,int size,unsigned long long num);
sprintf  prototype  include/linux/kernel.h  358  extern __printf(2,3) int sprintf(char *buf,const char * fmt,...);
vsprintf  prototype  include/linux/kernel.h  359  extern __printf(2,0) int vsprintf(char *buf,const char *,va_list);
snprintf  prototype  include/linux/kernel.h  361  int snprintf(char *buf,size_t size,const char *fmt,...);
vsnprintf  prototype  include/linux/kernel.h  363  int vsnprintf(char *buf,size_t size,const char *fmt,va_list args);
scnprintf  prototype  include/linux/kernel.h  365  int scnprintf(char *buf,size_t size,const char *fmt,...);
vscnprintf  prototype  include/linux/kernel.h  367  int vscnprintf(char *buf,size_t size,const char *fmt,va_list args);
kasprintf  prototype  include/linux/kernel.h  369  char *kasprintf(gfp_t gfp,const char *fmt,...);
kvasprintf  prototype  include/linux/kernel.h  370  extern char *kvasprintf(gfp_t gfp,const char *fmt,va_list args);
sscanf  prototype  include/linux/kernel.h  373  int sscanf(const char *,const char *,...);
vsscanf  prototype  include/linux/kernel.h  375  int vsscanf(const char *,const char *,va_list);
get_option  prototype  include/linux/kernel.h  377  extern int get_option(char **str,int *pint);
get_options  prototype  include/linux/kernel.h  378  extern char *get_options(const char *str,int nints,int *ints);
memparse  prototype  include/linux/kernel.h  379  extern unsigned long long memparse(const char *ptr,char **retptr);
core_kernel_text  prototype  include/linux/kernel.h  381  extern int core_kernel_text(unsigned long addr);
core_kernel_data  prototype  include/linux/kernel.h  382  extern int core_kernel_data(unsigned long addr);
__kernel_text_address  prototype  include/linux/kernel.h  383  extern int __kernel_text_address(unsigned long addr);
kernel_text_address  prototype  include/linux/kernel.h  384  extern int kernel_text_address(unsigned long addr);
func_ptr_is_kernel_text  prototype  include/linux/kernel.h  385  extern int func_ptr_is_kernel_text(void *ptr);
session_of_pgrp  prototype  include/linux/kernel.h  388  extern struct pid *session_of_pgrp(struct pid *pgrp);
int_sqrt  prototype  include/linux/kernel.h  390  unsigned long int_sqrt(unsigned long);
bust_spinlocks  prototype  include/linux/kernel.h  392  extern void bust_spinlocks(int yes);
wake_up_klogd  prototype  include/linux/kernel.h  393  extern void wake_up_klogd(void);
print_tainted  prototype  include/linux/kernel.h  400  extern const char *print_tainted(void);
add_taint  prototype  include/linux/kernel.h  401  extern void add_taint(unsigned flag);
test_taint  prototype  include/linux/kernel.h  402  extern int test_taint(unsigned flag);
get_taint  prototype  include/linux/kernel.h  403  extern unsigned long get_taint(void);
system_states  enum  include/linux/kernel.h  409  extern enum system_states {
SYSTEM_BOOTING  enumerator  include/linux/kernel.h  410  SYSTEM_BOOTING,
SYSTEM_RUNNING  enumerator  include/linux/kernel.h  411  SYSTEM_RUNNING,
SYSTEM_HALT  enumerator  include/linux/kernel.h  412  SYSTEM_HALT,
SYSTEM_POWER_OFF  enumerator  include/linux/kernel.h  413  SYSTEM_POWER_OFF,
SYSTEM_RESTART  enumerator  include/linux/kernel.h  414  SYSTEM_RESTART,
TAINT_PROPRIETARY_MODULE  macro  include/linux/kernel.h  417  #define TAINT_PROPRIETARY_MODULE 0
TAINT_FORCED_MODULE  macro  include/linux/kernel.h  418  #define TAINT_FORCED_MODULE 1
TAINT_UNSAFE_SMP  macro  include/linux/kernel.h  419  #define TAINT_UNSAFE_SMP 2
TAINT_FORCED_RMMOD  macro  include/linux/kernel.h  420  #define TAINT_FORCED_RMMOD 3
TAINT_MACHINE_CHECK  macro  include/linux/kernel.h  421  #define TAINT_MACHINE_CHECK 4
TAINT_BAD_PAGE  macro  include/linux/kernel.h  422  #define TAINT_BAD_PAGE 5
TAINT_USER  macro  include/linux/kernel.h  423  #define TAINT_USER 6
TAINT_DIE  macro  include/linux/kernel.h  424  #define TAINT_DIE 7
TAINT_OVERRIDDEN_ACPI_TABLE  macro  include/linux/kernel.h  425  #define TAINT_OVERRIDDEN_ACPI_TABLE 8
TAINT_WARN  macro  include/linux/kernel.h  426  #define TAINT_WARN 9
TAINT_CRAP  macro  include/linux/kernel.h  427  #define TAINT_CRAP 10
TAINT_FIRMWARE_WORKAROUND  macro  include/linux/kernel.h  428  #define TAINT_FIRMWARE_WORKAROUND 11
TAINT_OOT_MODULE  macro  include/linux/kernel.h  429  #define TAINT_OOT_MODULE 12
hex_asc_lo  macro  include/linux/kernel.h  432  #define hex_asc_lo(x) hex_asc[((x) & 0x0f)]
hex_asc_hi  macro  include/linux/kernel.h  433  #define hex_asc_hi(x) hex_asc[((x) & 0xf0) >> 4]
hex_byte_pack  function  include/linux/kernel.h  435  static inline char *hex_byte_pack(char *buf,u8 byte)
pack_hex_byte  function  include/linux/kernel.h  442  static inline char * __deprecated pack_hex_byte(char *buf,u8 byte)
hex_to_bin  prototype  include/linux/kernel.h  447  extern int hex_to_bin(char ch);
hex2bin  prototype  include/linux/kernel.h  448  extern int __must_check hex2bin(u8 *dst,const char *src,size_t count);
tracing_off_permanent  function  include/linux/kernel.h  473  static inline void tracing_off_permanent(void) { }
ftrace_dump_mode  enum  include/linux/kernel.h  476  enum ftrace_dump_mode {
DUMP_NONE  enumerator  include/linux/kernel.h  477  DUMP_NONE,
DUMP_ALL  enumerator  include/linux/kernel.h  478  DUMP_ALL,
DUMP_ORIG  enumerator  include/linux/kernel.h  479  DUMP_ORIG,
tracing_on  function  include/linux/kernel.h  570  static inline void tracing_on(void) { }
tracing_off  function  include/linux/kernel.h  571  static inline void tracing_off(void) { }
tracing_is_on  function  include/linux/kernel.h  572  static inline int tracing_is_on(void) { return 0; }
tracing_start  function  include/linux/kernel.h  565  static inline void tracing_start(void) { }
tracing_stop  function  include/linux/kernel.h  566  static inline void tracing_stop(void) { }
ftrace_off_permanent  function  include/linux/kernel.h  567  static inline void ftrace_off_permanent(void) { }
____trace_printk_check_format  function  include/linux/kernel.h  492  void ____trace_printk_check_format(const char *fmt,...)
__trace_printk_check_format  macro  include/linux/kernel.h  495  #define __trace_printk_check_format(fmt,args...) \
trace_printk  function  include/linux/kernel.h  575  int trace_printk(const char *fmt,...)
__trace_bprintk  prototype  include/linux/kernel.h  533  int __trace_bprintk(unsigned long ip,const char *fmt,...);
__trace_printk  prototype  include/linux/kernel.h  536  int __trace_printk(unsigned long ip,const char *fmt,...);
trace_dump_stack  function  include/linux/kernel.h  568  static inline void trace_dump_stack(void) { }
ftrace_vprintk  function  include/linux/kernel.h  580  ftrace_vprintk(const char *fmt,va_list ap)
__ftrace_vbprintk  prototype  include/linux/kernel.h  558  __ftrace_vbprintk(unsigned long ip,const char *fmt,va_list ap);
__ftrace_vprintk  prototype  include/linux/kernel.h  561  __ftrace_vprintk(unsigned long ip,const char *fmt,va_list ap);
ftrace_dump  function  include/linux/kernel.h  584  static inline void ftrace_dump(enum ftrace_dump_mode oops_dump_mode) { }
min  macro  include/linux/kernel.h  592  #define min(x,y) ({ \
max  macro  include/linux/kernel.h  598  #define max(x,y) ({ \
min3  macro  include/linux/kernel.h  604  #define min3(x,y,z) ({ \
max3  macro  include/linux/kernel.h  613  #define max3(x,y,z) ({ \
min_not_zero  macro  include/linux/kernel.h  627  #define min_not_zero(x,y) ({ \
clamp  macro  include/linux/kernel.h  641  #define clamp(val,min,max) ({ \
min_t  macro  include/linux/kernel.h  656  #define min_t(type,x,y) ({ \
max_t  macro  include/linux/kernel.h  661  #define max_t(type,x,y) ({ \
clamp_t  macro  include/linux/kernel.h  676  #define clamp_t(type,val,min,max) ({ \
clamp_val  macro  include/linux/kernel.h  694  #define clamp_val(val,min,max) ({ \
swap  macro  include/linux/kernel.h  705  #define swap(a,b) \
container_of  macro  include/linux/kernel.h  715  #define container_of(ptr,type,member) ({ \
__FUNCTION__  macro  include/linux/kernel.h  720  #define __FUNCTION__ (__func__)
SYMBOL_PREFIX  macro  include/linux/kernel.h  726  #define SYMBOL_PREFIX ""
REBUILD_DUE_TO_FTRACE_MCOUNT_RECORD  macro  include/linux/kernel.h  731  # define REBUILD_DUE_TO_FTRACE_MCOUNT_RECORD
do_sysinfo  prototype  include/linux/kernel.h  734  extern int do_sysinfo(struct sysinfo *info);
_LINUX_CONSOLE_H_  macro  include/linux/console.h  15  #define _LINUX_CONSOLE_H_ 1
VT100ID  macro  include/linux/console.h  28  #define VT100ID "\033[?1;2c"
VT102ID  macro  include/linux/console.h  29  #define VT102ID "\033[?6c"
consw  struct  include/linux/console.h  31  struct consw {
con_is_bound  prototype  include/linux/console.h  77  int con_is_bound(const struct consw *csw);
register_con_driver  prototype  include/linux/console.h  78  int register_con_driver(const struct consw *csw,int first,int last);
unregister_con_driver  prototype  include/linux/console.h  79  int unregister_con_driver(const struct consw *csw);
do_unregister_con_driver  prototype  include/linux/console.h  80  int do_unregister_con_driver(const struct consw *csw);
take_over_console  prototype  include/linux/console.h  81  int take_over_console(const struct consw *sw,int first,int last,int deflt);
do_take_over_console  prototype  include/linux/console.h  82  int do_take_over_console(const struct consw *sw,int first,int last,int deflt);
give_up_console  prototype  include/linux/console.h  83  void give_up_console(const struct consw *sw);
con_debug_enter  function  include/linux/console.h  88  static inline int con_debug_enter(struct vc_data *vc)
con_debug_leave  function  include/linux/console.h  92  static inline int con_debug_leave(void)
SM_UP  macro  include/linux/console.h  99  #define SM_UP (1)
SM_DOWN  macro  include/linux/console.h  100  #define SM_DOWN (2)
CM_DRAW  macro  include/linux/console.h  103  #define CM_DRAW (1)
CM_ERASE  macro  include/linux/console.h  104  #define CM_ERASE (2)
CM_MOVE  macro  include/linux/console.h  105  #define CM_MOVE (3)
CON_PRINTBUFFER  macro  include/linux/console.h  115  #define CON_PRINTBUFFER (1)
CON_CONSDEV  macro  include/linux/console.h  116  #define CON_CONSDEV (2)
CON_ENABLED  macro  include/linux/console.h  117  #define CON_ENABLED (4)
CON_BOOT  macro  include/linux/console.h  118  #define CON_BOOT (8)
CON_ANYTIME  macro  include/linux/console.h  119  #define CON_ANYTIME (16)
CON_BRL  macro  include/linux/console.h  120  #define CON_BRL (32)
console  struct  include/linux/console.h  122  struct console {
for_each_console  macro  include/linux/console.h  140  #define for_each_console(con) \
add_preferred_console  prototype  include/linux/console.h  145  extern int add_preferred_console(char *name,int idx,char *options);
update_console_cmdline  prototype  include/linux/console.h  146  extern int update_console_cmdline(char *name,int idx,char *name_new,int idx_new,char *options);
register_console  prototype  include/linux/console.h  147  extern void register_console(struct console *);
unregister_console  prototype  include/linux/console.h  148  extern int unregister_console(struct console *);
console_lock  prototype  include/linux/console.h  150  extern void console_lock(void);
console_trylock  prototype  include/linux/console.h  151  extern int console_trylock(void);
console_unlock  prototype  include/linux/console.h  152  extern void console_unlock(void);
console_conditional_schedule  prototype  include/linux/console.h  153  extern void console_conditional_schedule(void);
console_unblank  prototype  include/linux/console.h  154  extern void console_unblank(void);
console_device  prototype  include/linux/console.h  155  extern struct tty_driver *console_device(int *);
console_stop  prototype  include/linux/console.h  156  extern void console_stop(struct console *);
console_start  prototype  include/linux/console.h  157  extern void console_start(struct console *);
is_console_locked  prototype  include/linux/console.h  158  extern int is_console_locked(void);
braille_register_console  prototype  include/linux/console.h  160  extern int braille_register_console(struct console *,int index,char *console_options, char *braille_options);
braille_unregister_console  prototype  include/linux/console.h  161  extern int braille_unregister_console(struct console *);
console_sysfs_notify  prototype  include/linux/console.h  162  extern void console_sysfs_notify(void);
suspend_console  prototype  include/linux/console.h  166  extern void suspend_console(void);
resume_console  prototype  include/linux/console.h  167  extern void resume_console(void);
mda_console_init  prototype  include/linux/console.h  169  int mda_console_init(void);
prom_con_init  prototype  include/linux/console.h  170  void prom_con_init(void);
vcs_make_sysfs  prototype  include/linux/console.h  172  void vcs_make_sysfs(int index);
vcs_remove_sysfs  prototype  include/linux/console.h  173  void vcs_remove_sysfs(int index);
WARN_CONSOLE_UNLOCKED  macro  include/linux/console.h  179  #define WARN_CONSOLE_UNLOCKED()
VESA_NO_BLANKING  macro  include/linux/console.h  183  #define VESA_NO_BLANKING 0
VESA_VSYNC_SUSPEND  macro  include/linux/console.h  184  #define VESA_VSYNC_SUSPEND 1
VESA_HSYNC_SUSPEND  macro  include/linux/console.h  185  #define VESA_HSYNC_SUSPEND 2
VESA_POWERDOWN  macro  include/linux/console.h  186  #define VESA_POWERDOWN 3
vgacon_text_force  prototype  include/linux/console.h  189  extern bool vgacon_text_force(void);
_LINUX_STRING_H_  macro  include/linux/string.h  2  #define _LINUX_STRING_H_
strndup_user  prototype  include/linux/string.h  11  extern char *strndup_user(const char __user *,long);
memdup_user  prototype  include/linux/string.h  12  extern void *memdup_user(const void __user *,size_t);
strcpy  prototype  include/linux/string.h  20  extern char * strcpy(char *,const char *);
strncpy  prototype  include/linux/string.h  23  extern char * strncpy(char *,const char *,__kernel_size_t);
strlcpy  prototype  include/linux/string.h  26  size_t strlcpy(char *,const char *,size_t);
strcat  prototype  include/linux/string.h  29  extern char * strcat(char *,const char *);
strncat  prototype  include/linux/string.h  32  extern char * strncat(char *,const char *,__kernel_size_t);
strlcat  prototype  include/linux/string.h  35  extern size_t strlcat(char *,const char *,__kernel_size_t);
strcmp  prototype  include/linux/string.h  38  extern int strcmp(const char *,const char *);
strncmp  prototype  include/linux/string.h  41  extern int strncmp(const char *,const char *,__kernel_size_t);
strnicmp  prototype  include/linux/string.h  44  extern int strnicmp(const char *,const char *,__kernel_size_t);
strcasecmp  prototype  include/linux/string.h  47  extern int strcasecmp(const char *s1,const char *s2);
strncasecmp  prototype  include/linux/string.h  50  extern int strncasecmp(const char *s1,const char *s2,size_t n);
strchr  prototype  include/linux/string.h  53  extern char * strchr(const char *,int);
strnchr  prototype  include/linux/string.h  56  extern char * strnchr(const char *,size_t,int);
strrchr  prototype  include/linux/string.h  59  extern char * strrchr(const char *,int);
skip_spaces  prototype  include/linux/string.h  61  extern char * __must_check skip_spaces(const char *);
strim  prototype  include/linux/string.h  63  extern char *strim(char *);
strstrip  function  include/linux/string.h  65  static inline __must_check char *strstrip(char *str)
strstr  prototype  include/linux/string.h  71  extern char * strstr(const char *,const char *);
strnstr  prototype  include/linux/string.h  74  extern char * strnstr(const char *,const char *,size_t);
strlen  prototype  include/linux/string.h  77  extern __kernel_size_t strlen(const char *);
strnlen  prototype  include/linux/string.h  80  extern __kernel_size_t strnlen(const char *,__kernel_size_t);
strpbrk  prototype  include/linux/string.h  83  extern char * strpbrk(const char *,const char *);
strsep  prototype  include/linux/string.h  86  extern char * strsep(char **,const char *);
strspn  prototype  include/linux/string.h  89  extern __kernel_size_t strspn(const char *,const char *);
strcspn  prototype  include/linux/string.h  92  extern __kernel_size_t strcspn(const char *,const char *);
memset  prototype  include/linux/string.h  96  extern void * memset(void *,int,__kernel_size_t);
memcpy  prototype  include/linux/string.h  99  extern void * memcpy(void *,const void *,__kernel_size_t);
memmove  prototype  include/linux/string.h  102  extern void * memmove(void *,const void *,__kernel_size_t);
memscan  prototype  include/linux/string.h  105  extern void * memscan(void *,int,__kernel_size_t);
memcmp  prototype  include/linux/string.h  108  extern int memcmp(const void *,const void *,__kernel_size_t);
memchr  prototype  include/linux/string.h  111  extern void * memchr(const void *,int,__kernel_size_t);
memchr_inv  prototype  include/linux/string.h  113  void *memchr_inv(const void *s,int c,size_t n);
kstrdup  prototype  include/linux/string.h  115  extern char *kstrdup(const char *s,gfp_t gfp);
kstrndup  prototype  include/linux/string.h  116  extern char *kstrndup(const char *s,size_t len,gfp_t gfp);
kmemdup  prototype  include/linux/string.h  117  extern void *kmemdup(const void *src,size_t len,gfp_t gfp);
argv_split  prototype  include/linux/string.h  119  extern char **argv_split(gfp_t gfp,const char *str,int *argcp);
argv_free  prototype  include/linux/string.h  120  extern void argv_free(char **argv);
sysfs_streq  prototype  include/linux/string.h  122  extern bool sysfs_streq(const char *s1,const char *s2);
strtobool  prototype  include/linux/string.h  123  extern int strtobool(const char *s,bool *res);
vbin_printf  prototype  include/linux/string.h  126  int vbin_printf(u32 *bin_buf,size_t size,const char *fmt,va_list args);
bstr_printf  prototype  include/linux/string.h  127  int bstr_printf(char *buf,size_t size,const char *fmt,const u32 *bin_buf);
memory_read_from_buffer  prototype  include/linux/string.h  132  extern ssize_t memory_read_from_buffer(void *to,size_t count,loff_t *ppos,const void *from, size_t available);
strstarts  function  include/linux/string.h  139  static inline bool strstarts(const char *str,const char *prefix)
memweight  prototype  include/linux/string.h  144  extern size_t memweight(const void *ptr,size_t bytes);
kbasename  function  include/linux/string.h  151  static inline const char *kbasename(const char *path)
_LINUX_KD_H  macro  include/linux/kd.h  2  #define _LINUX_KD_H
KD_FONT_FLAG_OLD  macro  include/linux/kd.h  6  #define KD_FONT_FLAG_OLD 0x80000000
_LINUX_SLAB_H  macro  include/linux/slab.h  10  #define _LINUX_SLAB_H
SLAB_DEBUG_FREE  macro  include/linux/slab.h  21  #define SLAB_DEBUG_FREE 0x00000100UL
SLAB_RED_ZONE  macro  include/linux/slab.h  22  #define SLAB_RED_ZONE 0x00000400UL
SLAB_POISON  macro  include/linux/slab.h  23  #define SLAB_POISON 0x00000800UL
SLAB_HWCACHE_ALIGN  macro  include/linux/slab.h  24  #define SLAB_HWCACHE_ALIGN 0x00002000UL
SLAB_CACHE_DMA  macro  include/linux/slab.h  25  #define SLAB_CACHE_DMA 0x00004000UL
SLAB_STORE_USER  macro  include/linux/slab.h  26  #define SLAB_STORE_USER 0x00010000UL
SLAB_PANIC  macro  include/linux/slab.h  27  #define SLAB_PANIC 0x00040000UL
SLAB_DESTROY_BY_RCU  macro  include/linux/slab.h  56  #define SLAB_DESTROY_BY_RCU 0x00080000UL
SLAB_MEM_SPREAD  macro  include/linux/slab.h  57  #define SLAB_MEM_SPREAD 0x00100000UL
SLAB_TRACE  macro  include/linux/slab.h  58  #define SLAB_TRACE 0x00200000UL
SLAB_DEBUG_OBJECTS  macro  include/linux/slab.h  64  # define SLAB_DEBUG_OBJECTS 0x00000000UL
SLAB_NOLEAKTRACE  macro  include/linux/slab.h  67  #define SLAB_NOLEAKTRACE 0x00800000UL
SLAB_NOTRACK  macro  include/linux/slab.h  73  # define SLAB_NOTRACK 0x00000000UL
SLAB_FAILSLAB  macro  include/linux/slab.h  78  # define SLAB_FAILSLAB 0x00000000UL
SLAB_RECLAIM_ACCOUNT  macro  include/linux/slab.h  82  #define SLAB_RECLAIM_ACCOUNT 0x00020000UL
SLAB_TEMPORARY  macro  include/linux/slab.h  83  #define SLAB_TEMPORARY SLAB_RECLAIM_ACCOUNT
ZERO_SIZE_PTR  macro  include/linux/slab.h  92  #define ZERO_SIZE_PTR ((void *)16)
ZERO_OR_NULL_PTR  macro  include/linux/slab.h  94  #define ZERO_OR_NULL_PTR(x) ((unsigned long)(x) <= \
kmem_cache  struct  include/linux/slab_def.h  24  struct kmem_cache {
kmem_cache_init  prototype  include/linux/slab.h  125  void __init kmem_cache_init(void);
slab_is_available  prototype  include/linux/slab.h  126  int slab_is_available(void);
kmem_cache_create  prototype  include/linux/slab.h  130  struct kmem_cache *kmem_cache_create(const char *,size_t,size_t,unsigned long,void (*)(void *));
kmem_cache_create_memcg  prototype  include/linux/slab.h  133  kmem_cache_create_memcg(struct mem_cgroup *,const char *,size_t,size_t,unsigned long, void (*)(void *), struct kmem_cache *);
kmem_cache_destroy  prototype  include/linux/slab.h  134  void kmem_cache_destroy(struct kmem_cache *);
kmem_cache_shrink  prototype  include/linux/slab.h  135  int kmem_cache_shrink(struct kmem_cache *);
kmem_cache_free  prototype  include/linux/slab.h  136  void kmem_cache_free(struct kmem_cache *,void *);
KMEM_CACHE  macro  include/linux/slab.h  146  #define KMEM_CACHE(__struct,__flags) kmem_cache_create(#__struct,\
KMALLOC_SHIFT_HIGH  macro  include/linux/slab.h  159  #define KMALLOC_SHIFT_HIGH ((MAX_ORDER + PAGE_SHIFT - 1) <= 25 ? \
KMALLOC_MAX_SIZE  macro  include/linux/slab.h  162  #define KMALLOC_MAX_SIZE (1UL << KMALLOC_SHIFT_HIGH)
KMALLOC_MAX_ORDER  macro  include/linux/slab.h  163  #define KMALLOC_MAX_ORDER (KMALLOC_SHIFT_HIGH - PAGE_SHIFT)
ARCH_KMALLOC_MINALIGN  macro  include/linux/slab.h  173  #define ARCH_KMALLOC_MINALIGN __alignof__(unsigned long long)
ARCH_SLAB_MINALIGN  macro  include/linux/slab.h  182  #define ARCH_SLAB_MINALIGN __alignof__(unsigned long long)
memcg_cache_params  struct  include/linux/slab.h  206  struct memcg_cache_params {
memcg_update_all_caches  prototype  include/linux/slab.h  221  int memcg_update_all_caches(int num_memcgs);
cache_show  prototype  include/linux/slab.h  224  int cache_show(struct kmem_cache *s,struct seq_file *m);
print_slabinfo_header  prototype  include/linux/slab.h  225  void print_slabinfo_header(struct seq_file *m);
__krealloc  prototype  include/linux/slab.h  230  void * __must_check __krealloc(const void *,size_t,gfp_t);
krealloc  prototype  include/linux/slab.h  231  void * __must_check krealloc(const void *,size_t,gfp_t);
kfree  prototype  include/linux/slab.h  232  void kfree(const void *);
kzfree  prototype  include/linux/slab.h  233  void kzfree(const void *);
ksize  prototype  include/linux/slab.h  234  size_t ksize(const void *);
kmalloc_array  function  include/linux/slab.h  314  static inline void *kmalloc_array(size_t n,size_t size,gfp_t flags)
kcalloc  function  include/linux/slab.h  327  static inline void *kcalloc(size_t n,size_t size,gfp_t flags)
kmalloc_node  function  include/linux/slab_def.h  184  static __always_inline void *kmalloc_node(size_t size,gfp_t flags,int node)
__kmalloc_node  prototype  include/linux/slab_def.h  165  extern void *__kmalloc_node(size_t size,gfp_t flags,int node);
kmem_cache_alloc  prototype  include/linux/slab_def.h  117  void *kmem_cache_alloc(struct kmem_cache *,gfp_t);
kmem_cache_alloc_node  prototype  include/linux/slab_def.h  166  extern void *kmem_cache_alloc_node(struct kmem_cache *,gfp_t flags,int node);
__kmalloc_track_caller  prototype  include/linux/slab.h  373  extern void *__kmalloc_track_caller(size_t,gfp_t,unsigned long);
kmalloc_track_caller  macro  include/linux/slab.h  377  #define kmalloc_track_caller(size,flags) \
__kmalloc_node_track_caller  prototype  include/linux/slab.h  393  extern void *__kmalloc_node_track_caller(size_t,gfp_t,int,unsigned long);
kmalloc_node_track_caller  macro  include/linux/slab.h  404  #define kmalloc_node_track_caller(size,flags,node) \
kmem_cache_zalloc  function  include/linux/slab.h  412  static inline void *kmem_cache_zalloc(struct kmem_cache *k,gfp_t flags)
kzalloc  function  include/linux/slab.h  422  static inline void *kzalloc(size_t size,gfp_t flags)
kzalloc_node  function  include/linux/slab.h  433  static inline void *kzalloc_node(size_t size,gfp_t flags,int node)
kmem_cache_size  function  include/linux/slab.h  441  static inline unsigned int kmem_cache_size(struct kmem_cache *s)
kmem_cache_init_late  prototype  include/linux/slab.h  446  void __init kmem_cache_init_late(void);
_VT_KERN_H  macro  include/linux/vt_kern.h  2  #define _VT_KERN_H
BROKEN_GRAPHICS_PROGRAMS  macro  include/linux/vt_kern.h  27  #define BROKEN_GRAPHICS_PROGRAMS 1
kd_mksound  prototype  include/linux/vt_kern.h  30  extern void kd_mksound(unsigned int hz,unsigned int ticks);
kbd_rate  prototype  include/linux/vt_kern.h  31  extern int kbd_rate(struct kbd_repeat *rep);
vc_allocate  prototype  include/linux/vt_kern.h  36  int vc_allocate(unsigned int console);
vc_cons_allocated  prototype  include/linux/vt_kern.h  37  int vc_cons_allocated(unsigned int console);
vc_resize  prototype  include/linux/vt_kern.h  38  int vc_resize(struct vc_data *vc,unsigned int cols,unsigned int lines);
vc_deallocate  prototype  include/linux/vt_kern.h  39  void vc_deallocate(unsigned int console);
reset_palette  prototype  include/linux/vt_kern.h  40  void reset_palette(struct vc_data *vc);
do_blank_screen  prototype  include/linux/vt_kern.h  41  void do_blank_screen(int entering_gfx);
do_unblank_screen  prototype  include/linux/vt_kern.h  42  void do_unblank_screen(int leaving_gfx);
unblank_screen  prototype  include/linux/vt_kern.h  43  void unblank_screen(void);
poke_blanked_console  prototype  include/linux/vt_kern.h  44  void poke_blanked_console(void);
con_font_op  prototype  include/linux/vt_kern.h  45  int con_font_op(struct vc_data *vc,struct console_font_op *op);
con_set_cmap  prototype  include/linux/vt_kern.h  46  int con_set_cmap(unsigned char __user *cmap);
con_get_cmap  prototype  include/linux/vt_kern.h  47  int con_get_cmap(unsigned char __user *cmap);
scrollback  prototype  include/linux/vt_kern.h  48  void scrollback(struct vc_data *vc,int lines);
scrollfront  prototype  include/linux/vt_kern.h  49  void scrollfront(struct vc_data *vc,int lines);
clear_buffer_attributes  prototype  include/linux/vt_kern.h  50  void clear_buffer_attributes(struct vc_data *vc);
update_region  prototype  include/linux/vt_kern.h  51  void update_region(struct vc_data *vc,unsigned long start,int count);
redraw_screen  prototype  include/linux/vt_kern.h  52  void redraw_screen(struct vc_data *vc,int is_switch);
update_screen  macro  include/linux/vt_kern.h  53  #define update_screen(x) redraw_screen(x,0)
switch_screen  macro  include/linux/vt_kern.h  54  #define switch_screen(x) redraw_screen(x,1)
tioclinux  prototype  include/linux/vt_kern.h  57  int tioclinux(struct tty_struct *tty,unsigned long arg);
con_set_trans_old  function  include/linux/vt_kern.h  79  static inline int con_set_trans_old(unsigned char __user *table)
con_get_trans_old  function  include/linux/vt_kern.h  83  static inline int con_get_trans_old(unsigned char __user *table)
con_set_trans_new  function  include/linux/vt_kern.h  87  static inline int con_set_trans_new(unsigned short __user *table)
con_get_trans_new  function  include/linux/vt_kern.h  91  static inline int con_get_trans_new(unsigned short __user *table)
con_clear_unimap  function  include/linux/vt_kern.h  95  static inline int con_clear_unimap(struct vc_data *vc,struct unimapinit *ui)
con_set_unimap  function  include/linux/vt_kern.h  100  int con_set_unimap(struct vc_data *vc,ushort ct,struct unipair __user *list)
con_get_unimap  function  include/linux/vt_kern.h  106  int con_get_unimap(struct vc_data *vc,ushort ct,ushort __user *uct,struct unipair __user *list)
con_set_default_unimap  function  include/linux/vt_kern.h  110  static inline int con_set_default_unimap(struct vc_data *vc)
con_free_unimap  function  include/linux/vt_kern.h  114  static inline void con_free_unimap(struct vc_data *vc)
con_copy_unimap  function  include/linux/vt_kern.h  121  int con_copy_unimap(struct vc_data *dst_vc,struct vc_data *src_vc)
vc_translate  macro  include/linux/vt_kern.h  126  #define vc_translate(vc,c) (c)
con_protect_unimap  function  include/linux/vt_kern.h  117  static inline void con_protect_unimap(struct vc_data *vc,int rdonly)
vt_event_post  prototype  include/linux/vt_kern.h  130  void vt_event_post(unsigned int event,unsigned int old,unsigned int new);
vt_waitactive  prototype  include/linux/vt_kern.h  131  int vt_waitactive(int n);
change_console  prototype  include/linux/vt_kern.h  132  void change_console(struct vc_data *new_vc);
reset_vc  prototype  include/linux/vt_kern.h  133  void reset_vc(struct vc_data *vc);
do_unbind_con_driver  prototype  include/linux/vt_kern.h  135  extern int do_unbind_con_driver(const struct consw *csw,int first,int last,int deflt);
unbind_con_driver  prototype  include/linux/vt_kern.h  137  extern int unbind_con_driver(const struct consw *csw,int first,int last,int deflt);
vty_init  prototype  include/linux/vt_kern.h  138  int vty_init(const struct file_operations *console_fops);
vt_force_oops_output  function  include/linux/vt_kern.h  140  static inline bool vt_force_oops_output(struct vc_data *vc)
vt_spawn_console  struct  include/linux/vt_kern.h  151  struct vt_spawn_console {
vt_move_to_console  prototype  include/linux/vt_kern.h  158  extern int vt_move_to_console(unsigned int vt,int alloc);
vt_notifier_param  struct  include/linux/vt_kern.h  162  struct vt_notifier_param {
register_vt_notifier  prototype  include/linux/vt_kern.h  167  extern int register_vt_notifier(struct notifier_block *nb);
unregister_vt_notifier  prototype  include/linux/vt_kern.h  168  extern int unregister_vt_notifier(struct notifier_block *nb);
hide_boot_cursor  prototype  include/linux/vt_kern.h  170  extern void hide_boot_cursor(bool hide);
vt_do_diacrit  prototype  include/linux/vt_kern.h  173  extern int vt_do_diacrit(unsigned int cmd,void __user *up,int eperm);
vt_do_kdskbmode  prototype  include/linux/vt_kern.h  174  extern int vt_do_kdskbmode(int console,unsigned int arg);
vt_do_kdskbmeta  prototype  include/linux/vt_kern.h  175  extern int vt_do_kdskbmeta(int console,unsigned int arg);
vt_do_kbkeycode_ioctl  prototype  include/linux/vt_kern.h  177  extern int vt_do_kbkeycode_ioctl(int cmd,struct kbkeycode __user *user_kbkc,int perm);
vt_do_kdsk_ioctl  prototype  include/linux/vt_kern.h  179  extern int vt_do_kdsk_ioctl(int cmd,struct kbentry __user *user_kbe,int perm, int console);
vt_do_kdgkb_ioctl  prototype  include/linux/vt_kern.h  181  extern int vt_do_kdgkb_ioctl(int cmd,struct kbsentry __user *user_kdgkb,int perm);
vt_do_kdskled  prototype  include/linux/vt_kern.h  182  extern int vt_do_kdskled(int console,int cmd,unsigned long arg,int perm);
vt_do_kdgkbmode  prototype  include/linux/vt_kern.h  183  extern int vt_do_kdgkbmode(int console);
vt_do_kdgkbmeta  prototype  include/linux/vt_kern.h  184  extern int vt_do_kdgkbmeta(int console);
vt_reset_unicode  prototype  include/linux/vt_kern.h  185  extern void vt_reset_unicode(int console);
vt_get_shift_state  prototype  include/linux/vt_kern.h  186  extern int vt_get_shift_state(void);
vt_reset_keyboard  prototype  include/linux/vt_kern.h  187  extern void vt_reset_keyboard(int console);
vt_get_leds  prototype  include/linux/vt_kern.h  188  extern int vt_get_leds(int console,int flag);
vt_get_kbd_mode_bit  prototype  include/linux/vt_kern.h  189  extern int vt_get_kbd_mode_bit(int console,int bit);
vt_set_kbd_mode_bit  prototype  include/linux/vt_kern.h  190  extern void vt_set_kbd_mode_bit(int console,int bit);
vt_clr_kbd_mode_bit  prototype  include/linux/vt_kern.h  191  extern void vt_clr_kbd_mode_bit(int console,int bit);
vt_set_led_state  prototype  include/linux/vt_kern.h  193  extern void vt_set_led_state(int console,int leds);
vt_kbd_con_start  prototype  include/linux/vt_kern.h  194  extern void vt_kbd_con_start(int console);
vt_kbd_con_stop  prototype  include/linux/vt_kern.h  195  extern void vt_kbd_con_stop(int console);
_LINUX_SELECTION_H_  macro  include/linux/selection.h  8  #define _LINUX_SELECTION_H_
clear_selection  prototype  include/linux/selection.h  18  extern void clear_selection(void);
set_selection  prototype  include/linux/selection.h  19  extern int set_selection(const struct tiocl_selection __user *sel,struct tty_struct *tty);
paste_selection  prototype  include/linux/selection.h  20  extern int paste_selection(struct tty_struct *tty);
sel_loadlut  prototype  include/linux/selection.h  21  extern int sel_loadlut(char __user *p);
mouse_reporting  prototype  include/linux/selection.h  22  extern int mouse_reporting(void);
mouse_report  prototype  include/linux/selection.h  23  extern void mouse_report(struct tty_struct * tty,int butt,int mrx,int mry);
screen_pos  prototype  include/linux/selection.h  32  extern unsigned short *screen_pos(struct vc_data *vc,int w_offset,int viewed);
screen_glyph  prototype  include/linux/selection.h  33  extern u16 screen_glyph(struct vc_data *vc,int offset);
complement_pos  prototype  include/linux/selection.h  34  extern void complement_pos(struct vc_data *vc,int offset);
invert_screen  prototype  include/linux/selection.h  35  extern void invert_screen(struct vc_data *vc,int offset,int count,int shift);
getconsxy  prototype  include/linux/selection.h  37  extern void getconsxy(struct vc_data *vc,unsigned char *p);
putconsxy  prototype  include/linux/selection.h  38  extern void putconsxy(struct vc_data *vc,unsigned char *p);
vcs_scr_readw  prototype  include/linux/selection.h  40  extern u16 vcs_scr_readw(struct vc_data *vc,const u16 *org);
vcs_scr_writew  prototype  include/linux/selection.h  41  extern void vcs_scr_writew(struct vc_data *vc,u16 val,u16 *org);
vcs_scr_updated  prototype  include/linux/selection.h  42  extern void vcs_scr_updated(struct vc_data *vc);
__LINUX_SPINLOCK_H  macro  include/linux/spinlock.h  2  #define __LINUX_SPINLOCK_H
LOCK_SECTION_NAME  macro  include/linux/spinlock.h  64  #define LOCK_SECTION_NAME ".text..lock."KBUILD_BASENAME
LOCK_SECTION_START  macro  include/linux/spinlock.h  66  #define LOCK_SECTION_START(extra) \
LOCK_SECTION_END  macro  include/linux/spinlock.h  73  #define LOCK_SECTION_END \
__lockfunc  macro  include/linux/spinlock.h  76  #define __lockfunc __attribute__((section(".spinlock.text")))
__raw_spin_lock_init  prototype  include/linux/spinlock.h  94  extern void __raw_spin_lock_init(raw_spinlock_t *lock,const char *name,struct lock_class_key *key);
raw_spin_lock_init  macro  include/linux/spinlock.h  103  # define raw_spin_lock_init(lock) \
raw_spin_is_locked  macro  include/linux/spinlock.h  107  #define raw_spin_is_locked(lock) arch_spin_is_locked(&(lock)->raw_lock)
raw_spin_is_contended  macro  include/linux/spinlock.h  116  #define raw_spin_is_contended(lock) (((void)(lock),0))
smp_mb__after_lock  function  arch/x86/include/asm/spinlock.h  237  static inline void smp_mb__after_lock(void) { }
raw_spin_unlock_wait  macro  include/linux/spinlock.h  129  #define raw_spin_unlock_wait(lock) arch_spin_unlock_wait(&(lock)->raw_lock)
lock  variable  include/linux/spinlock_api_smp.h  44  __releases(lock);
do_raw_spin_lock_flags  macro  include/linux/spinlock.h  133  #define do_raw_spin_lock_flags(lock,flags) do_raw_spin_lock(lock)
do_raw_spin_trylock  function  include/linux/spinlock.h  150  static inline int do_raw_spin_trylock(raw_spinlock_t *lock)
__acquires  macro  include/linux/compiler.h  38  # define __acquires(x)
__releases  macro  include/linux/compiler.h  39  # define __releases(x)
raw_spin_trylock  macro  include/linux/spinlock.h  168  #define raw_spin_trylock(lock) __cond_lock(lock,_raw_spin_trylock(lock))
raw_spin_lock  macro  include/linux/spinlock.h  170  #define raw_spin_lock(lock) _raw_spin_lock(lock)
raw_spin_lock_nested  macro  include/linux/spinlock.h  182  # define raw_spin_lock_nested(lock,subclass) _raw_spin_lock(lock)
raw_spin_lock_nest_lock  macro  include/linux/spinlock.h  183  # define raw_spin_lock_nest_lock(lock,nest_lock) _raw_spin_lock(lock)
raw_spin_lock_irqsave  macro  include/linux/spinlock.h  210  #define raw_spin_lock_irqsave(lock,flags) \
raw_spin_lock_irqsave_nested  macro  include/linux/spinlock.h  216  #define raw_spin_lock_irqsave_nested(lock,flags,subclass) \
raw_spin_lock_irq  macro  include/linux/spinlock.h  221  #define raw_spin_lock_irq(lock) _raw_spin_lock_irq(lock)
raw_spin_lock_bh  macro  include/linux/spinlock.h  222  #define raw_spin_lock_bh(lock) _raw_spin_lock_bh(lock)
raw_spin_unlock  macro  include/linux/spinlock.h  223  #define raw_spin_unlock(lock) _raw_spin_unlock(lock)
raw_spin_unlock_irq  macro  include/linux/spinlock.h  224  #define raw_spin_unlock_irq(lock) _raw_spin_unlock_irq(lock)
raw_spin_unlock_irqrestore  macro  include/linux/spinlock.h  226  #define raw_spin_unlock_irqrestore(lock,flags) \
raw_spin_unlock_bh  macro  include/linux/spinlock.h  231  #define raw_spin_unlock_bh(lock) _raw_spin_unlock_bh(lock)
raw_spin_trylock_bh  macro  include/linux/spinlock.h  233  #define raw_spin_trylock_bh(lock) \
raw_spin_trylock_irq  macro  include/linux/spinlock.h  236  #define raw_spin_trylock_irq(lock) \
raw_spin_trylock_irqsave  macro  include/linux/spinlock.h  243  #define raw_spin_trylock_irqsave(lock,flags) \
raw_spin_can_lock  macro  include/linux/spinlock.h  254  #define raw_spin_can_lock(lock) (!raw_spin_is_locked(lock))
spinlock_check  function  include/linux/spinlock.h  272  static inline raw_spinlock_t *spinlock_check(spinlock_t *lock)
spin_lock_init  macro  include/linux/spinlock.h  277  #define spin_lock_init(_lock) \
spin_lock  function  include/linux/spinlock.h  283  static inline void spin_lock(spinlock_t *lock)
spin_lock_bh  function  include/linux/spinlock.h  288  static inline void spin_lock_bh(spinlock_t *lock)
spin_trylock  function  include/linux/spinlock.h  293  static inline int spin_trylock(spinlock_t *lock)
spin_lock_nested  macro  include/linux/spinlock.h  298  #define spin_lock_nested(lock,subclass) \
spin_lock_nest_lock  macro  include/linux/spinlock.h  303  #define spin_lock_nest_lock(lock,nest_lock) \
spin_lock_irq  function  include/linux/spinlock.h  308  static inline void spin_lock_irq(spinlock_t *lock)
spin_lock_irqsave  macro  include/linux/spinlock.h  313  #define spin_lock_irqsave(lock,flags) \
spin_lock_irqsave_nested  macro  include/linux/spinlock.h  318  #define spin_lock_irqsave_nested(lock,flags,subclass) \
spin_unlock  function  include/linux/spinlock.h  323  static inline void spin_unlock(spinlock_t *lock)
spin_unlock_bh  function  include/linux/spinlock.h  328  static inline void spin_unlock_bh(spinlock_t *lock)
spin_unlock_irq  function  include/linux/spinlock.h  333  static inline void spin_unlock_irq(spinlock_t *lock)
spin_unlock_irqrestore  function  include/linux/spinlock.h  338  static inline void spin_unlock_irqrestore(spinlock_t *lock,unsigned long flags)
spin_trylock_bh  function  include/linux/spinlock.h  343  static inline int spin_trylock_bh(spinlock_t *lock)
spin_trylock_irq  function  include/linux/spinlock.h  348  static inline int spin_trylock_irq(spinlock_t *lock)
spin_trylock_irqsave  macro  include/linux/spinlock.h  353  #define spin_trylock_irqsave(lock,flags) \
spin_unlock_wait  function  include/linux/spinlock.h  358  static inline void spin_unlock_wait(spinlock_t *lock)
spin_is_locked  function  include/linux/spinlock.h  363  static inline int spin_is_locked(spinlock_t *lock)
spin_is_contended  function  include/linux/spinlock.h  368  static inline int spin_is_contended(spinlock_t *lock)
spin_can_lock  function  include/linux/spinlock.h  373  static inline int spin_can_lock(spinlock_t *lock)
assert_spin_locked  macro  include/linux/spinlock.h  378  #define assert_spin_locked(lock) assert_raw_spin_locked(&(lock)->rlock)
_atomic_dec_and_lock  prototype  include/linux/spinlock.h  393  extern int _atomic_dec_and_lock(atomic_t *atomic,spinlock_t *lock);
atomic_dec_and_lock  macro  include/linux/spinlock.h  394  #define atomic_dec_and_lock(atomic,lock) \
_LINUX_IOPORT_H  macro  include/linux/ioport.h  9  #define _LINUX_IOPORT_H
resource  struct  include/linux/ioport.h  18  struct resource {
IORESOURCE_BITS  macro  include/linux/ioport.h  29  #define IORESOURCE_BITS 0x000000ff
IORESOURCE_TYPE_BITS  macro  include/linux/ioport.h  31  #define IORESOURCE_TYPE_BITS 0x00001f00
IORESOURCE_IO  macro  include/linux/ioport.h  32  #define IORESOURCE_IO 0x00000100
IORESOURCE_MEM  macro  include/linux/ioport.h  33  #define IORESOURCE_MEM 0x00000200
IORESOURCE_REG  macro  include/linux/ioport.h  34  #define IORESOURCE_REG 0x00000300
IORESOURCE_IRQ  macro  include/linux/ioport.h  35  #define IORESOURCE_IRQ 0x00000400
IORESOURCE_DMA  macro  include/linux/ioport.h  36  #define IORESOURCE_DMA 0x00000800
IORESOURCE_BUS  macro  include/linux/ioport.h  37  #define IORESOURCE_BUS 0x00001000
IORESOURCE_PREFETCH  macro  include/linux/ioport.h  39  #define IORESOURCE_PREFETCH 0x00002000
IORESOURCE_READONLY  macro  include/linux/ioport.h  40  #define IORESOURCE_READONLY 0x00004000
IORESOURCE_CACHEABLE  macro  include/linux/ioport.h  41  #define IORESOURCE_CACHEABLE 0x00008000
IORESOURCE_RANGELENGTH  macro  include/linux/ioport.h  42  #define IORESOURCE_RANGELENGTH 0x00010000
IORESOURCE_SHADOWABLE  macro  include/linux/ioport.h  43  #define IORESOURCE_SHADOWABLE 0x00020000
IORESOURCE_SIZEALIGN  macro  include/linux/ioport.h  45  #define IORESOURCE_SIZEALIGN 0x00040000
IORESOURCE_STARTALIGN  macro  include/linux/ioport.h  46  #define IORESOURCE_STARTALIGN 0x00080000
IORESOURCE_MEM_64  macro  include/linux/ioport.h  48  #define IORESOURCE_MEM_64 0x00100000
IORESOURCE_WINDOW  macro  include/linux/ioport.h  49  #define IORESOURCE_WINDOW 0x00200000
IORESOURCE_MUXED  macro  include/linux/ioport.h  50  #define IORESOURCE_MUXED 0x00400000
IORESOURCE_EXCLUSIVE  macro  include/linux/ioport.h  52  #define IORESOURCE_EXCLUSIVE 0x08000000
IORESOURCE_DISABLED  macro  include/linux/ioport.h  53  #define IORESOURCE_DISABLED 0x10000000
IORESOURCE_UNSET  macro  include/linux/ioport.h  54  #define IORESOURCE_UNSET 0x20000000
IORESOURCE_AUTO  macro  include/linux/ioport.h  55  #define IORESOURCE_AUTO 0x40000000
IORESOURCE_BUSY  macro  include/linux/ioport.h  56  #define IORESOURCE_BUSY 0x80000000
IORESOURCE_IRQ_HIGHEDGE  macro  include/linux/ioport.h  59  #define IORESOURCE_IRQ_HIGHEDGE (1<<0)
IORESOURCE_IRQ_LOWEDGE  macro  include/linux/ioport.h  60  #define IORESOURCE_IRQ_LOWEDGE (1<<1)
IORESOURCE_IRQ_HIGHLEVEL  macro  include/linux/ioport.h  61  #define IORESOURCE_IRQ_HIGHLEVEL (1<<2)
IORESOURCE_IRQ_LOWLEVEL  macro  include/linux/ioport.h  62  #define IORESOURCE_IRQ_LOWLEVEL (1<<3)
IORESOURCE_IRQ_SHAREABLE  macro  include/linux/ioport.h  63  #define IORESOURCE_IRQ_SHAREABLE (1<<4)
IORESOURCE_IRQ_OPTIONAL  macro  include/linux/ioport.h  64  #define IORESOURCE_IRQ_OPTIONAL (1<<5)
IORESOURCE_DMA_TYPE_MASK  macro  include/linux/ioport.h  67  #define IORESOURCE_DMA_TYPE_MASK (3<<0)
IORESOURCE_DMA_8BIT  macro  include/linux/ioport.h  68  #define IORESOURCE_DMA_8BIT (0<<0)
IORESOURCE_DMA_8AND16BIT  macro  include/linux/ioport.h  69  #define IORESOURCE_DMA_8AND16BIT (1<<0)
IORESOURCE_DMA_16BIT  macro  include/linux/ioport.h  70  #define IORESOURCE_DMA_16BIT (2<<0)
IORESOURCE_DMA_MASTER  macro  include/linux/ioport.h  72  #define IORESOURCE_DMA_MASTER (1<<2)
IORESOURCE_DMA_BYTE  macro  include/linux/ioport.h  73  #define IORESOURCE_DMA_BYTE (1<<3)
IORESOURCE_DMA_WORD  macro  include/linux/ioport.h  74  #define IORESOURCE_DMA_WORD (1<<4)
IORESOURCE_DMA_SPEED_MASK  macro  include/linux/ioport.h  76  #define IORESOURCE_DMA_SPEED_MASK (3<<6)
IORESOURCE_DMA_COMPATIBLE  macro  include/linux/ioport.h  77  #define IORESOURCE_DMA_COMPATIBLE (0<<6)
IORESOURCE_DMA_TYPEA  macro  include/linux/ioport.h  78  #define IORESOURCE_DMA_TYPEA (1<<6)
IORESOURCE_DMA_TYPEB  macro  include/linux/ioport.h  79  #define IORESOURCE_DMA_TYPEB (2<<6)
IORESOURCE_DMA_TYPEF  macro  include/linux/ioport.h  80  #define IORESOURCE_DMA_TYPEF (3<<6)
IORESOURCE_MEM_WRITEABLE  macro  include/linux/ioport.h  83  #define IORESOURCE_MEM_WRITEABLE (1<<0)
IORESOURCE_MEM_CACHEABLE  macro  include/linux/ioport.h  84  #define IORESOURCE_MEM_CACHEABLE (1<<1)
IORESOURCE_MEM_RANGELENGTH  macro  include/linux/ioport.h  85  #define IORESOURCE_MEM_RANGELENGTH (1<<2)
IORESOURCE_MEM_TYPE_MASK  macro  include/linux/ioport.h  86  #define IORESOURCE_MEM_TYPE_MASK (3<<3)
IORESOURCE_MEM_8BIT  macro  include/linux/ioport.h  87  #define IORESOURCE_MEM_8BIT (0<<3)
IORESOURCE_MEM_16BIT  macro  include/linux/ioport.h  88  #define IORESOURCE_MEM_16BIT (1<<3)
IORESOURCE_MEM_8AND16BIT  macro  include/linux/ioport.h  89  #define IORESOURCE_MEM_8AND16BIT (2<<3)
IORESOURCE_MEM_32BIT  macro  include/linux/ioport.h  90  #define IORESOURCE_MEM_32BIT (3<<3)
IORESOURCE_MEM_SHADOWABLE  macro  include/linux/ioport.h  91  #define IORESOURCE_MEM_SHADOWABLE (1<<5)
IORESOURCE_MEM_EXPANSIONROM  macro  include/linux/ioport.h  92  #define IORESOURCE_MEM_EXPANSIONROM (1<<6)
IORESOURCE_IO_16BIT_ADDR  macro  include/linux/ioport.h  95  #define IORESOURCE_IO_16BIT_ADDR (1<<0)
IORESOURCE_IO_FIXED  macro  include/linux/ioport.h  96  #define IORESOURCE_IO_FIXED (1<<1)
IORESOURCE_ROM_ENABLE  macro  include/linux/ioport.h  99  #define IORESOURCE_ROM_ENABLE (1<<0)
IORESOURCE_ROM_SHADOW  macro  include/linux/ioport.h  100  #define IORESOURCE_ROM_SHADOW (1<<1)
IORESOURCE_ROM_COPY  macro  include/linux/ioport.h  101  #define IORESOURCE_ROM_COPY (1<<2)
IORESOURCE_ROM_BIOS_COPY  macro  include/linux/ioport.h  102  #define IORESOURCE_ROM_BIOS_COPY (1<<3)
IORESOURCE_PCI_FIXED  macro  include/linux/ioport.h  105  #define IORESOURCE_PCI_FIXED (1<<4)
DEFINE_RES_NAMED  macro  include/linux/ioport.h  109  #define DEFINE_RES_NAMED(_start,_size,_name,_flags) \
DEFINE_RES_IO_NAMED  macro  include/linux/ioport.h  117  #define DEFINE_RES_IO_NAMED(_start,_size,_name) \
DEFINE_RES_IO  macro  include/linux/ioport.h  119  #define DEFINE_RES_IO(_start,_size) \
DEFINE_RES_MEM_NAMED  macro  include/linux/ioport.h  122  #define DEFINE_RES_MEM_NAMED(_start,_size,_name) \
DEFINE_RES_MEM  macro  include/linux/ioport.h  124  #define DEFINE_RES_MEM(_start,_size) \
DEFINE_RES_IRQ_NAMED  macro  include/linux/ioport.h  127  #define DEFINE_RES_IRQ_NAMED(_irq,_name) \
DEFINE_RES_IRQ  macro  include/linux/ioport.h  129  #define DEFINE_RES_IRQ(_irq) \
DEFINE_RES_DMA_NAMED  macro  include/linux/ioport.h  132  #define DEFINE_RES_DMA_NAMED(_dma,_name) \
DEFINE_RES_DMA  macro  include/linux/ioport.h  134  #define DEFINE_RES_DMA(_dma) \
request_resource_conflict  prototype  include/linux/ioport.h  141  extern struct resource *request_resource_conflict(struct resource *root,struct resource *new);
request_resource  prototype  include/linux/ioport.h  142  extern int request_resource(struct resource *root,struct resource *new);
release_resource  prototype  include/linux/ioport.h  143  extern int release_resource(struct resource *new);
release_child_resources  prototype  include/linux/ioport.h  144  void release_child_resources(struct resource *new);
reserve_region_with_split  prototype  include/linux/ioport.h  147  extern void reserve_region_with_split(struct resource *root,resource_size_t start, resource_size_t end,const char *name);
insert_resource_conflict  prototype  include/linux/ioport.h  148  extern struct resource *insert_resource_conflict(struct resource *parent,struct resource *new);
insert_resource  prototype  include/linux/ioport.h  149  extern int insert_resource(struct resource *parent,struct resource *new);
insert_resource_expand_to_fit  prototype  include/linux/ioport.h  150  extern void insert_resource_expand_to_fit(struct resource *root,struct resource *new);
arch_remove_reservations  prototype  include/linux/ioport.h  151  extern void arch_remove_reservations(struct resource *avail);
allocate_resource  prototype  include/linux/ioport.h  159  extern int allocate_resource(struct resource *root,struct resource *new,resource_size_t size, resource_size_t min,resource_size_t max, resource_size_t align,resource_size_t (*alignf)(void *,const struct resource *,resource_size_t,resource_size_t),void *alignf_data);
lookup_resource  prototype  include/linux/ioport.h  160  struct resource *lookup_resource(struct resource *root,resource_size_t start);
adjust_resource  prototype  include/linux/ioport.h  162  int adjust_resource(struct resource *res,resource_size_t start,resource_size_t size);
resource_alignment  prototype  include/linux/ioport.h  163  resource_size_t resource_alignment(struct resource *res);
resource_size  function  include/linux/ioport.h  164  static inline resource_size_t resource_size(const struct resource *res)
resource_type  function  include/linux/ioport.h  168  static inline unsigned long resource_type(const struct resource *res)
request_region  macro  include/linux/ioport.h  174  #define request_region(start,n,name) __request_region(&ioport_resource,(start),(n),(name),0)
request_muxed_region  macro  include/linux/ioport.h  175  #define request_muxed_region(start,n,name) __request_region(&ioport_resource,(start),(n),(name),IORESOURCE_MUXED)
__request_mem_region  macro  include/linux/ioport.h  176  #define __request_mem_region(start,n,name,excl) __request_region(&iomem_resource,(start),(n),(name),excl)
request_mem_region  macro  include/linux/ioport.h  177  #define request_mem_region(start,n,name) __request_region(&iomem_resource,(start),(n),(name),0)
request_mem_region_exclusive  macro  include/linux/ioport.h  178  #define request_mem_region_exclusive(start,n,name) \
rename_region  macro  include/linux/ioport.h  180  #define rename_region(region,newname) do { (region)->name = (newname); } while (0)
__request_region  prototype  include/linux/ioport.h  185  extern struct resource * __request_region(struct resource *,resource_size_t start,resource_size_t n,const char *name, int flags);
release_region  macro  include/linux/ioport.h  188  #define release_region(start,n) __release_region(&ioport_resource,(start),(n))
check_mem_region  macro  include/linux/ioport.h  189  #define check_mem_region(start,n) __check_region(&iomem_resource,(start),(n))
release_mem_region  macro  include/linux/ioport.h  190  #define release_mem_region(start,n) __release_region(&iomem_resource,(start),(n))
__check_region  prototype  include/linux/ioport.h  192  extern int __check_region(struct resource *,resource_size_t,resource_size_t);
__release_region  prototype  include/linux/ioport.h  194  extern void __release_region(struct resource *,resource_size_t,resource_size_t);
check_region  function  include/linux/ioport.h  197  static inline int __deprecated check_region(resource_size_t s,resource_size_t n)
devm_request_region  macro  include/linux/ioport.h  204  #define devm_request_region(dev,start,n,name) \
devm_request_mem_region  macro  include/linux/ioport.h  206  #define devm_request_mem_region(dev,start,n,name) \
__devm_request_region  prototype  include/linux/ioport.h  211  extern struct resource * __devm_request_region(struct device *dev,struct resource *parent, resource_size_t start,resource_size_t n, const char *name);
devm_release_region  macro  include/linux/ioport.h  213  #define devm_release_region(dev,start,n) \
devm_release_mem_region  macro  include/linux/ioport.h  215  #define devm_release_mem_region(dev,start,n) \
__devm_release_region  prototype  include/linux/ioport.h  219  extern void __devm_release_region(struct device *dev,struct resource *parent,resource_size_t start, resource_size_t n);
iomem_map_sanity_check  prototype  include/linux/ioport.h  220  extern int iomem_map_sanity_check(resource_size_t addr,unsigned long size);
iomem_is_exclusive  prototype  include/linux/ioport.h  221  extern int iomem_is_exclusive(u64 addr);
walk_system_ram_range  prototype  include/linux/ioport.h  225  walk_system_ram_range(unsigned long start_pfn,unsigned long nr_pages,void *arg, int (*func)(unsigned long, unsigned long, void *));
resource_overlaps  function  include/linux/ioport.h  228  static inline bool resource_overlaps(struct resource *r1,struct resource *r2)
_LINUX_INIT_H  macro  include/linux/init.h  2  #define _LINUX_INIT_H
__init  macro  include/linux/init.h  44  #define __init __section(.init.text) __cold notrace
__initdata  macro  include/linux/init.h  45  #define __initdata __section(.init.data)
__initconst  macro  include/linux/init.h  46  #define __initconst __constsection(.init.rodata)
__exitdata  macro  include/linux/init.h  47  #define __exitdata __section(.exit.data)
__exit_call  macro  include/linux/init.h  48  #define __exit_call __used __section(.exitcall.exit)
__constsection  macro  include/linux/init.h  58  #define __constsection(x) __section(x)
__ref  macro  include/linux/init.h  78  #define __ref __section(.ref.text) noinline
__refdata  macro  include/linux/init.h  79  #define __refdata __section(.ref.data)
__refconst  macro  include/linux/init.h  80  #define __refconst __constsection(.ref.rodata)
__init_refok  macro  include/linux/init.h  83  #define __init_refok __ref
__initdata_refok  macro  include/linux/init.h  84  #define __initdata_refok __refdata
__exit_refok  macro  include/linux/init.h  85  #define __exit_refok __ref
__exitused  macro  include/linux/init.h  91  #define __exitused __used
__exit  macro  include/linux/init.h  94  #define __exit __section(.exit.text) __exitused __cold notrace
__cpuinit  macro  include/linux/init.h  97  #define __cpuinit __section(.cpuinit.text) __cold notrace
__cpuinitdata  macro  include/linux/init.h  98  #define __cpuinitdata __section(.cpuinit.data)
__cpuinitconst  macro  include/linux/init.h  99  #define __cpuinitconst __constsection(.cpuinit.rodata)
__cpuexit  macro  include/linux/init.h  100  #define __cpuexit __section(.cpuexit.text) __exitused __cold notrace
__cpuexitdata  macro  include/linux/init.h  101  #define __cpuexitdata __section(.cpuexit.data)
__cpuexitconst  macro  include/linux/init.h  102  #define __cpuexitconst __constsection(.cpuexit.rodata)
__meminit  macro  include/linux/init.h  105  #define __meminit __section(.meminit.text) __cold notrace
__meminitdata  macro  include/linux/init.h  106  #define __meminitdata __section(.meminit.data)
__meminitconst  macro  include/linux/init.h  107  #define __meminitconst __constsection(.meminit.rodata)
__memexit  macro  include/linux/init.h  108  #define __memexit __section(.memexit.text) __exitused __cold notrace
__memexitdata  macro  include/linux/init.h  109  #define __memexitdata __section(.memexit.data)
__memexitconst  macro  include/linux/init.h  110  #define __memexitconst __constsection(.memexit.rodata)
__HEAD  macro  include/linux/init.h  113  #define __HEAD .section ".head.text","ax"
__INIT  macro  include/linux/init.h  114  #define __INIT .section ".init.text","ax"
__FINIT  macro  include/linux/init.h  115  #define __FINIT .previous
__INITDATA  macro  include/linux/init.h  117  #define __INITDATA .section ".init.data","aw",%progbits
__INITRODATA  macro  include/linux/init.h  118  #define __INITRODATA .section ".init.rodata","a",%progbits
__FINITDATA  macro  include/linux/init.h  119  #define __FINITDATA .previous
__CPUINIT  macro  include/linux/init.h  121  #define __CPUINIT .section ".cpuinit.text","ax"
__CPUINITDATA  macro  include/linux/init.h  122  #define __CPUINITDATA .section ".cpuinit.data","aw"
__CPUINITRODATA  macro  include/linux/init.h  123  #define __CPUINITRODATA .section ".cpuinit.rodata","a"
__MEMINIT  macro  include/linux/init.h  125  #define __MEMINIT .section ".meminit.text","ax"
__MEMINITDATA  macro  include/linux/init.h  126  #define __MEMINITDATA .section ".meminit.data","aw"
__MEMINITRODATA  macro  include/linux/init.h  127  #define __MEMINITRODATA .section ".meminit.rodata","a"
__REF  macro  include/linux/init.h  130  #define __REF .section ".ref.text","ax"
__REFDATA  macro  include/linux/init.h  131  #define __REFDATA .section ".ref.data","aw"
__REFCONST  macro  include/linux/init.h  132  #define __REFCONST .section ".ref.rodata","a"
initcall_t  typedef  include/linux/init.h  138  typedef int (*initcall_t)(void);
exitcall_t  typedef  include/linux/init.h  139  typedef void (*exitcall_t)(void);
ctor_fn_t  typedef  include/linux/init.h  145  typedef void (*ctor_fn_t)(void);
do_one_initcall  prototype  include/linux/init.h  148  extern int do_one_initcall(initcall_t fn);
setup_arch  prototype  include/linux/init.h  154  void setup_arch(char **);
prepare_namespace  prototype  include/linux/init.h  155  void prepare_namespace(void);
__define_initcall  macro  include/linux/init.h  177  #define __define_initcall(fn,id) \
early_initcall  macro  include/linux/init.h  284  #define early_initcall(fn) module_init(fn)
pure_initcall  macro  include/linux/init.h  195  #define pure_initcall(fn) __define_initcall(fn,0)
core_initcall  macro  include/linux/init.h  285  #define core_initcall(fn) module_init(fn)
core_initcall_sync  macro  include/linux/init.h  198  #define core_initcall_sync(fn) __define_initcall(fn,1s)
postcore_initcall  macro  include/linux/init.h  286  #define postcore_initcall(fn) module_init(fn)
postcore_initcall_sync  macro  include/linux/init.h  200  #define postcore_initcall_sync(fn) __define_initcall(fn,2s)
arch_initcall  macro  include/linux/init.h  287  #define arch_initcall(fn) module_init(fn)
arch_initcall_sync  macro  include/linux/init.h  202  #define arch_initcall_sync(fn) __define_initcall(fn,3s)
subsys_initcall  macro  include/linux/init.h  288  #define subsys_initcall(fn) module_init(fn)
subsys_initcall_sync  macro  include/linux/init.h  204  #define subsys_initcall_sync(fn) __define_initcall(fn,4s)
fs_initcall  macro  include/linux/init.h  289  #define fs_initcall(fn) module_init(fn)
fs_initcall_sync  macro  include/linux/init.h  206  #define fs_initcall_sync(fn) __define_initcall(fn,5s)
rootfs_initcall  macro  include/linux/init.h  207  #define rootfs_initcall(fn) __define_initcall(fn,rootfs)
device_initcall  macro  include/linux/init.h  290  #define device_initcall(fn) module_init(fn)
device_initcall_sync  macro  include/linux/init.h  209  #define device_initcall_sync(fn) __define_initcall(fn,6s)
late_initcall  macro  include/linux/init.h  291  #define late_initcall(fn) module_init(fn)
late_initcall_sync  macro  include/linux/init.h  211  #define late_initcall_sync(fn) __define_initcall(fn,7s)
__initcall  macro  include/linux/init.h  213  #define __initcall(fn) device_initcall(fn)
__exitcall  macro  include/linux/init.h  215  #define __exitcall(fn) \
console_initcall  macro  include/linux/init.h  218  #define console_initcall(fn) \
security_initcall  macro  include/linux/init.h  293  #define security_initcall(fn) module_init(fn)
obs_kernel_param  struct  include/linux/init.h  226  struct obs_kernel_param {
__setup_param  macro  include/linux/init.h  307  #define __setup_param(str,unique_id,fn)
__setup  macro  include/linux/init.h  308  #define __setup(str,func)
early_param  macro  include/linux/init.h  251  #define early_param(str,fn) \
parse_early_param  prototype  include/linux/init.h  255  void __init parse_early_param(void);
parse_early_options  prototype  include/linux/init.h  256  void __init parse_early_options(char *cmdline);
module_init  macro  include/linux/init.h  296  #define module_init(initfn) \
module_exit  macro  include/linux/init.h  302  #define module_exit(exitfn) \
__nosavedata  macro  include/linux/init.h  312  #define __nosavedata __section(.data..nosave)
__init_or_module  macro  include/linux/init.h  324  #define __init_or_module __init
__initdata_or_module  macro  include/linux/init.h  325  #define __initdata_or_module __initdata
__initconst_or_module  macro  include/linux/init.h  326  #define __initconst_or_module __initconst
__INIT_OR_MODULE  macro  include/linux/init.h  327  #define __INIT_OR_MODULE __INIT
__INITDATA_OR_MODULE  macro  include/linux/init.h  328  #define __INITDATA_OR_MODULE __INITDATA
__INITRODATA_OR_MODULE  macro  include/linux/init.h  329  #define __INITRODATA_OR_MODULE __INITRODATA
__exit_p  macro  include/linux/init.h  335  #define __exit_p(x) NULL
_SCREEN_INFO_H  macro  include/linux/screen_info.h  2  #define _SCREEN_INFO_H
ORIG_X  macro  include/linux/screen_info.h  8  #define ORIG_X (screen_info.orig_x)
ORIG_Y  macro  include/linux/screen_info.h  9  #define ORIG_Y (screen_info.orig_y)
ORIG_VIDEO_MODE  macro  include/linux/screen_info.h  10  #define ORIG_VIDEO_MODE (screen_info.orig_video_mode)
ORIG_VIDEO_COLS  macro  include/linux/screen_info.h  11  #define ORIG_VIDEO_COLS (screen_info.orig_video_cols)
ORIG_VIDEO_EGA_BX  macro  include/linux/screen_info.h  12  #define ORIG_VIDEO_EGA_BX (screen_info.orig_video_ega_bx)
ORIG_VIDEO_LINES  macro  include/linux/screen_info.h  13  #define ORIG_VIDEO_LINES (screen_info.orig_video_lines)
ORIG_VIDEO_ISVGA  macro  include/linux/screen_info.h  14  #define ORIG_VIDEO_ISVGA (screen_info.orig_video_isVGA)
ORIG_VIDEO_POINTS  macro  include/linux/screen_info.h  15  #define ORIG_VIDEO_POINTS (screen_info.orig_video_points)
__linux_video_vga_h__  macro  include/video/vga.h  18  #define __linux_video_vga_h__
VGA_CRT_DC  macro  include/video/vga.h  38  #define VGA_CRT_DC 0x3D5
VGA_CRT_DM  macro  include/video/vga.h  39  #define VGA_CRT_DM 0x3B5
VGA_ATT_R  macro  include/video/vga.h  40  #define VGA_ATT_R 0x3C1
VGA_ATT_W  macro  include/video/vga.h  41  #define VGA_ATT_W 0x3C0
VGA_GFX_D  macro  include/video/vga.h  42  #define VGA_GFX_D 0x3CF
VGA_SEQ_D  macro  include/video/vga.h  43  #define VGA_SEQ_D 0x3C5
VGA_MIS_R  macro  include/video/vga.h  44  #define VGA_MIS_R 0x3CC
VGA_MIS_W  macro  include/video/vga.h  45  #define VGA_MIS_W 0x3C2
VGA_FTC_R  macro  include/video/vga.h  46  #define VGA_FTC_R 0x3CA
VGA_IS1_RC  macro  include/video/vga.h  47  #define VGA_IS1_RC 0x3DA
VGA_IS1_RM  macro  include/video/vga.h  48  #define VGA_IS1_RM 0x3BA
VGA_PEL_D  macro  include/video/vga.h  49  #define VGA_PEL_D 0x3C9
VGA_PEL_MSK  macro  include/video/vga.h  50  #define VGA_PEL_MSK 0x3C6
EGA_GFX_E0  macro  include/video/vga.h  53  #define EGA_GFX_E0 0x3CC
EGA_GFX_E1  macro  include/video/vga.h  54  #define EGA_GFX_E1 0x3CA
VGA_CRT_IC  macro  include/video/vga.h  57  #define VGA_CRT_IC 0x3D4
VGA_CRT_IM  macro  include/video/vga.h  58  #define VGA_CRT_IM 0x3B4
VGA_ATT_IW  macro  include/video/vga.h  59  #define VGA_ATT_IW 0x3C0
VGA_GFX_I  macro  include/video/vga.h  60  #define VGA_GFX_I 0x3CE
VGA_SEQ_I  macro  include/video/vga.h  61  #define VGA_SEQ_I 0x3C4
VGA_PEL_IW  macro  include/video/vga.h  62  #define VGA_PEL_IW 0x3C8
VGA_PEL_IR  macro  include/video/vga.h  63  #define VGA_PEL_IR 0x3C7
VGA_CRT_C  macro  include/video/vga.h  66  #define VGA_CRT_C 0x19
VGA_ATT_C  macro  include/video/vga.h  67  #define VGA_ATT_C 0x15
VGA_GFX_C  macro  include/video/vga.h  68  #define VGA_GFX_C 0x09
VGA_SEQ_C  macro  include/video/vga.h  69  #define VGA_SEQ_C 0x05
VGA_MIS_C  macro  include/video/vga.h  70  #define VGA_MIS_C 0x01
VGA_MIS_COLOR  macro  include/video/vga.h  73  #define VGA_MIS_COLOR 0x01
VGA_MIS_ENB_MEM_ACCESS  macro  include/video/vga.h  74  #define VGA_MIS_ENB_MEM_ACCESS 0x02
VGA_MIS_DCLK_28322_720  macro  include/video/vga.h  75  #define VGA_MIS_DCLK_28322_720 0x04
VGA_MIS_ENB_PLL_LOAD  macro  include/video/vga.h  76  #define VGA_MIS_ENB_PLL_LOAD (0x04 | 0x08)
VGA_MIS_SEL_HIGH_PAGE  macro  include/video/vga.h  77  #define VGA_MIS_SEL_HIGH_PAGE 0x20
VGA_CRTC_H_TOTAL  macro  include/video/vga.h  80  #define VGA_CRTC_H_TOTAL 0
VGA_CRTC_H_DISP  macro  include/video/vga.h  81  #define VGA_CRTC_H_DISP 1
VGA_CRTC_H_BLANK_START  macro  include/video/vga.h  82  #define VGA_CRTC_H_BLANK_START 2
VGA_CRTC_H_BLANK_END  macro  include/video/vga.h  83  #define VGA_CRTC_H_BLANK_END 3
VGA_CRTC_H_SYNC_START  macro  include/video/vga.h  84  #define VGA_CRTC_H_SYNC_START 4
VGA_CRTC_H_SYNC_END  macro  include/video/vga.h  85  #define VGA_CRTC_H_SYNC_END 5
VGA_CRTC_V_TOTAL  macro  include/video/vga.h  86  #define VGA_CRTC_V_TOTAL 6
VGA_CRTC_OVERFLOW  macro  include/video/vga.h  87  #define VGA_CRTC_OVERFLOW 7
VGA_CRTC_PRESET_ROW  macro  include/video/vga.h  88  #define VGA_CRTC_PRESET_ROW 8
VGA_CRTC_MAX_SCAN  macro  include/video/vga.h  89  #define VGA_CRTC_MAX_SCAN 9
VGA_CRTC_CURSOR_START  macro  include/video/vga.h  90  #define VGA_CRTC_CURSOR_START 0x0A
VGA_CRTC_CURSOR_END  macro  include/video/vga.h  91  #define VGA_CRTC_CURSOR_END 0x0B
VGA_CRTC_START_HI  macro  include/video/vga.h  92  #define VGA_CRTC_START_HI 0x0C
VGA_CRTC_START_LO  macro  include/video/vga.h  93  #define VGA_CRTC_START_LO 0x0D
VGA_CRTC_CURSOR_HI  macro  include/video/vga.h  94  #define VGA_CRTC_CURSOR_HI 0x0E
VGA_CRTC_CURSOR_LO  macro  include/video/vga.h  95  #define VGA_CRTC_CURSOR_LO 0x0F
VGA_CRTC_V_SYNC_START  macro  include/video/vga.h  96  #define VGA_CRTC_V_SYNC_START 0x10
VGA_CRTC_V_SYNC_END  macro  include/video/vga.h  97  #define VGA_CRTC_V_SYNC_END 0x11
VGA_CRTC_V_DISP_END  macro  include/video/vga.h  98  #define VGA_CRTC_V_DISP_END 0x12
VGA_CRTC_OFFSET  macro  include/video/vga.h  99  #define VGA_CRTC_OFFSET 0x13
VGA_CRTC_UNDERLINE  macro  include/video/vga.h  100  #define VGA_CRTC_UNDERLINE 0x14
VGA_CRTC_V_BLANK_START  macro  include/video/vga.h  101  #define VGA_CRTC_V_BLANK_START 0x15
VGA_CRTC_V_BLANK_END  macro  include/video/vga.h  102  #define VGA_CRTC_V_BLANK_END 0x16
VGA_CRTC_MODE  macro  include/video/vga.h  103  #define VGA_CRTC_MODE 0x17
VGA_CRTC_LINE_COMPARE  macro  include/video/vga.h  104  #define VGA_CRTC_LINE_COMPARE 0x18
VGA_CRTC_REGS  macro  include/video/vga.h  105  #define VGA_CRTC_REGS VGA_CRT_C
VGA_CR11_LOCK_CR0_CR7  macro  include/video/vga.h  108  #define VGA_CR11_LOCK_CR0_CR7 0x80
VGA_CR17_H_V_SIGNALS_ENABLED  macro  include/video/vga.h  109  #define VGA_CR17_H_V_SIGNALS_ENABLED 0x80
VGA_ATC_PALETTE0  macro  include/video/vga.h  112  #define VGA_ATC_PALETTE0 0x00
VGA_ATC_PALETTE1  macro  include/video/vga.h  113  #define VGA_ATC_PALETTE1 0x01
VGA_ATC_PALETTE2  macro  include/video/vga.h  114  #define VGA_ATC_PALETTE2 0x02
VGA_ATC_PALETTE3  macro  include/video/vga.h  115  #define VGA_ATC_PALETTE3 0x03
VGA_ATC_PALETTE4  macro  include/video/vga.h  116  #define VGA_ATC_PALETTE4 0x04
VGA_ATC_PALETTE5  macro  include/video/vga.h  117  #define VGA_ATC_PALETTE5 0x05
VGA_ATC_PALETTE6  macro  include/video/vga.h  118  #define VGA_ATC_PALETTE6 0x06
VGA_ATC_PALETTE7  macro  include/video/vga.h  119  #define VGA_ATC_PALETTE7 0x07
VGA_ATC_PALETTE8  macro  include/video/vga.h  120  #define VGA_ATC_PALETTE8 0x08
VGA_ATC_PALETTE9  macro  include/video/vga.h  121  #define VGA_ATC_PALETTE9 0x09
VGA_ATC_PALETTEA  macro  include/video/vga.h  122  #define VGA_ATC_PALETTEA 0x0A
VGA_ATC_PALETTEB  macro  include/video/vga.h  123  #define VGA_ATC_PALETTEB 0x0B
VGA_ATC_PALETTEC  macro  include/video/vga.h  124  #define VGA_ATC_PALETTEC 0x0C
VGA_ATC_PALETTED  macro  include/video/vga.h  125  #define VGA_ATC_PALETTED 0x0D
VGA_ATC_PALETTEE  macro  include/video/vga.h  126  #define VGA_ATC_PALETTEE 0x0E
VGA_ATC_PALETTEF  macro  include/video/vga.h  127  #define VGA_ATC_PALETTEF 0x0F
VGA_ATC_MODE  macro  include/video/vga.h  128  #define VGA_ATC_MODE 0x10
VGA_ATC_OVERSCAN  macro  include/video/vga.h  129  #define VGA_ATC_OVERSCAN 0x11
VGA_ATC_PLANE_ENABLE  macro  include/video/vga.h  130  #define VGA_ATC_PLANE_ENABLE 0x12
VGA_ATC_PEL  macro  include/video/vga.h  131  #define VGA_ATC_PEL 0x13
VGA_ATC_COLOR_PAGE  macro  include/video/vga.h  132  #define VGA_ATC_COLOR_PAGE 0x14
VGA_AR_ENABLE_DISPLAY  macro  include/video/vga.h  134  #define VGA_AR_ENABLE_DISPLAY 0x20
VGA_SEQ_RESET  macro  include/video/vga.h  137  #define VGA_SEQ_RESET 0x00
VGA_SEQ_CLOCK_MODE  macro  include/video/vga.h  138  #define VGA_SEQ_CLOCK_MODE 0x01
VGA_SEQ_PLANE_WRITE  macro  include/video/vga.h  139  #define VGA_SEQ_PLANE_WRITE 0x02
VGA_SEQ_CHARACTER_MAP  macro  include/video/vga.h  140  #define VGA_SEQ_CHARACTER_MAP 0x03
VGA_SEQ_MEMORY_MODE  macro  include/video/vga.h  141  #define VGA_SEQ_MEMORY_MODE 0x04
VGA_SR01_CHAR_CLK_8DOTS  macro  include/video/vga.h  144  #define VGA_SR01_CHAR_CLK_8DOTS 0x01
VGA_SR01_SCREEN_OFF  macro  include/video/vga.h  145  #define VGA_SR01_SCREEN_OFF 0x20
VGA_SR02_ALL_PLANES  macro  include/video/vga.h  146  #define VGA_SR02_ALL_PLANES 0x0F
VGA_SR04_EXT_MEM  macro  include/video/vga.h  147  #define VGA_SR04_EXT_MEM 0x02
VGA_SR04_SEQ_MODE  macro  include/video/vga.h  148  #define VGA_SR04_SEQ_MODE 0x04
VGA_SR04_CHN_4M  macro  include/video/vga.h  149  #define VGA_SR04_CHN_4M 0x08
VGA_GFX_SR_VALUE  macro  include/video/vga.h  152  #define VGA_GFX_SR_VALUE 0x00
VGA_GFX_SR_ENABLE  macro  include/video/vga.h  153  #define VGA_GFX_SR_ENABLE 0x01
VGA_GFX_COMPARE_VALUE  macro  include/video/vga.h  154  #define VGA_GFX_COMPARE_VALUE 0x02
VGA_GFX_DATA_ROTATE  macro  include/video/vga.h  155  #define VGA_GFX_DATA_ROTATE 0x03
VGA_GFX_PLANE_READ  macro  include/video/vga.h  156  #define VGA_GFX_PLANE_READ 0x04
VGA_GFX_MODE  macro  include/video/vga.h  157  #define VGA_GFX_MODE 0x05
VGA_GFX_MISC  macro  include/video/vga.h  158  #define VGA_GFX_MISC 0x06
VGA_GFX_COMPARE_MASK  macro  include/video/vga.h  159  #define VGA_GFX_COMPARE_MASK 0x07
VGA_GFX_BIT_MASK  macro  include/video/vga.h  160  #define VGA_GFX_BIT_MASK 0x08
VGA_GR06_GRAPHICS_MODE  macro  include/video/vga.h  163  #define VGA_GR06_GRAPHICS_MODE 0x01
VGA_OUT16VAL  macro  include/video/vga.h  167  #define VGA_OUT16VAL(v,r) (((v) << 8) | (r))
VGA_OUTW_WRITE  macro  include/video/vga.h  171  #define VGA_OUTW_WRITE
VGA_SAVE_FONT0  macro  include/video/vga.h  175  #define VGA_SAVE_FONT0 1
VGA_SAVE_FONT1  macro  include/video/vga.h  176  #define VGA_SAVE_FONT1 2
VGA_SAVE_TEXT  macro  include/video/vga.h  177  #define VGA_SAVE_TEXT 4
VGA_SAVE_FONTS  macro  include/video/vga.h  178  #define VGA_SAVE_FONTS 7
VGA_SAVE_MODE  macro  include/video/vga.h  179  #define VGA_SAVE_MODE 8
VGA_SAVE_CMAP  macro  include/video/vga.h  180  #define VGA_SAVE_CMAP 16
vgastate  struct  include/video/vga.h  182  struct vgastate {
save_vga  prototype  include/video/vga.h  195  extern int save_vga(struct vgastate *state);
restore_vga  prototype  include/video/vga.h  196  extern int restore_vga(struct vgastate *state);
vga_io_r  function  include/video/vga.h  202  static inline unsigned char vga_io_r (unsigned short port)
vga_io_w  function  include/video/vga.h  207  static inline void vga_io_w (unsigned short port,unsigned char val)
vga_io_w_fast  function  include/video/vga.h  213  static inline void vga_io_w_fast (unsigned short port,unsigned char reg,unsigned char val)
vga_mm_r  function  include/video/vga.h  218  static inline unsigned char vga_mm_r (void __iomem *regbase,unsigned short port)
vga_mm_w  function  include/video/vga.h  223  static inline void vga_mm_w (void __iomem *regbase,unsigned short port,unsigned char val)
vga_mm_w_fast  function  include/video/vga.h  229  static inline void vga_mm_w_fast (void __iomem *regbase,unsigned short port,unsigned char reg, unsigned char val)
vga_r  function  include/video/vga.h  234  static inline unsigned char vga_r (void __iomem *regbase,unsigned short port)
vga_w  function  include/video/vga.h  242  static inline void vga_w (void __iomem *regbase,unsigned short port,unsigned char val)
vga_w_fast  function  include/video/vga.h  252  static inline void vga_w_fast (void __iomem *regbase,unsigned short port,unsigned char reg, unsigned char val)
vga_rcrt  function  include/video/vga.h  265  static inline unsigned char vga_rcrt (void __iomem *regbase,unsigned char reg)
vga_wcrt  function  include/video/vga.h  271  static inline void vga_wcrt (void __iomem *regbase,unsigned char reg,unsigned char val)
vga_io_rcrt  function  include/video/vga.h  281  static inline unsigned char vga_io_rcrt (unsigned char reg)
vga_io_wcrt  function  include/video/vga.h  287  static inline void vga_io_wcrt (unsigned char reg,unsigned char val)
vga_mm_rcrt  function  include/video/vga.h  297  static inline unsigned char vga_mm_rcrt (void __iomem *regbase,unsigned char reg)
vga_mm_wcrt  function  include/video/vga.h  303  static inline void vga_mm_wcrt (void __iomem *regbase,unsigned char reg,unsigned char val)
vga_rseq  function  include/video/vga.h  318  static inline unsigned char vga_rseq (void __iomem *regbase,unsigned char reg)
vga_wseq  function  include/video/vga.h  324  static inline void vga_wseq (void __iomem *regbase,unsigned char reg,unsigned char val)
vga_io_rseq  function  include/video/vga.h  334  static inline unsigned char vga_io_rseq (unsigned char reg)
vga_io_wseq  function  include/video/vga.h  340  static inline void vga_io_wseq (unsigned char reg,unsigned char val)
vga_mm_rseq  function  include/video/vga.h  350  static inline unsigned char vga_mm_rseq (void __iomem *regbase,unsigned char reg)
vga_mm_wseq  function  include/video/vga.h  356  static inline void vga_mm_wseq (void __iomem *regbase,unsigned char reg,unsigned char val)
vga_rgfx  function  include/video/vga.h  370  static inline unsigned char vga_rgfx (void __iomem *regbase,unsigned char reg)
vga_wgfx  function  include/video/vga.h  376  static inline void vga_wgfx (void __iomem *regbase,unsigned char reg,unsigned char val)
vga_io_rgfx  function  include/video/vga.h  386  static inline unsigned char vga_io_rgfx (unsigned char reg)
vga_io_wgfx  function  include/video/vga.h  392  static inline void vga_io_wgfx (unsigned char reg,unsigned char val)
vga_mm_rgfx  function  include/video/vga.h  402  static inline unsigned char vga_mm_rgfx (void __iomem *regbase,unsigned char reg)
vga_mm_wgfx  function  include/video/vga.h  408  static inline void vga_mm_wgfx (void __iomem *regbase,unsigned char reg,unsigned char val)
vga_rattr  function  include/video/vga.h  423  static inline unsigned char vga_rattr (void __iomem *regbase,unsigned char reg)
vga_wattr  function  include/video/vga.h  429  static inline void vga_wattr (void __iomem *regbase,unsigned char reg,unsigned char val)
vga_io_rattr  function  include/video/vga.h  435  static inline unsigned char vga_io_rattr (unsigned char reg)
vga_io_wattr  function  include/video/vga.h  441  static inline void vga_io_wattr (unsigned char reg,unsigned char val)
vga_mm_rattr  function  include/video/vga.h  447  static inline unsigned char vga_mm_rattr (void __iomem *regbase,unsigned char reg)
vga_mm_wattr  function  include/video/vga.h  453  static inline void vga_mm_wattr (void __iomem *regbase,unsigned char reg,unsigned char val)
_ASM_X86_IO_H  macro  arch/x86/include/asm/io.h  2  #define _ASM_X86_IO_H
ARCH_HAS_IOREMAP_WC  macro  arch/x86/include/asm/io.h  37  #define ARCH_HAS_IOREMAP_WC
build_mmio_read  macro  arch/x86/include/asm/io.h  43  #define build_mmio_read(name,size,type,reg,barrier) \
build_mmio_write  macro  arch/x86/include/asm/io.h  48  #define build_mmio_write(name,size,type,reg,barrier) \
readb_relaxed  macro  arch/x86/include/asm/io.h  69  #define readb_relaxed(a) __readb(a)
readw_relaxed  macro  arch/x86/include/asm/io.h  70  #define readw_relaxed(a) __readw(a)
readl_relaxed  macro  arch/x86/include/asm/io.h  71  #define readl_relaxed(a) __readl(a)
__raw_readb  macro  arch/x86/include/asm/io.h  72  #define __raw_readb __readb
__raw_readw  macro  arch/x86/include/asm/io.h  73  #define __raw_readw __readw
__raw_readl  macro  arch/x86/include/asm/io.h  74  #define __raw_readl __readl
__raw_writeb  macro  arch/x86/include/asm/io.h  76  #define __raw_writeb __writeb
__raw_writew  macro  arch/x86/include/asm/io.h  77  #define __raw_writew __writew
__raw_writel  macro  arch/x86/include/asm/io.h  78  #define __raw_writel __writel
mmiowb  macro  arch/x86/include/asm/io.h  80  #define mmiowb() barrier()
readq_relaxed  macro  arch/x86/include/asm/io.h  87  #define readq_relaxed(a) readq(a)
__raw_readq  macro  arch/x86/include/asm/io.h  89  #define __raw_readq(a) readq(a)
__raw_writeq  macro  arch/x86/include/asm/io.h  90  #define __raw_writeq(val,addr) writeq(val,addr)
readq  macro  arch/x86/include/asm/io.h  93  #define readq readq
writeq  macro  arch/x86/include/asm/io.h  94  #define writeq writeq
virt_to_phys  function  arch/x86/include/asm/io.h  111  static inline phys_addr_t virt_to_phys(volatile void *address)
phys_to_virt  function  arch/x86/include/asm/io.h  129  static inline void *phys_to_virt(phys_addr_t address)
page_to_phys  macro  arch/x86/include/asm/io.h  137  #define page_to_phys(page) ((dma_addr_t)page_to_pfn(page) << PAGE_SHIFT)
isa_virt_to_bus  function  arch/x86/include/asm/io.h  144  static inline unsigned int isa_virt_to_bus(volatile void *address)
isa_page_to_bus  macro  arch/x86/include/asm/io.h  148  #define isa_page_to_bus(page) ((unsigned int)page_to_phys(page))
isa_bus_to_virt  macro  arch/x86/include/asm/io.h  149  #define isa_bus_to_virt phys_to_virt
virt_to_bus  macro  arch/x86/include/asm/io.h  157  #define virt_to_bus virt_to_phys
bus_to_virt  macro  arch/x86/include/asm/io.h  158  #define bus_to_virt phys_to_virt
ioremap_nocache  prototype  arch/x86/include/asm/io.h  174  extern void __iomem *ioremap_nocache(resource_size_t offset,unsigned long size);
ioremap_cache  prototype  arch/x86/include/asm/io.h  175  extern void __iomem *ioremap_cache(resource_size_t offset,unsigned long size);
ioremap_prot  prototype  arch/x86/include/asm/io.h  177  extern void __iomem *ioremap_prot(resource_size_t offset,unsigned long size,unsigned long prot_val);
ioremap  function  arch/x86/include/asm/io.h  182  static inline void __iomem *ioremap(resource_size_t offset,unsigned long size)
iounmap  prototype  arch/x86/include/asm/io.h  187  extern void iounmap(volatile void __iomem *addr);
set_iounmap_nonlazy  prototype  arch/x86/include/asm/io.h  189  extern void set_iounmap_nonlazy(void);
xlate_dev_kmem_ptr  macro  arch/x86/include/asm/io.h  200  #define xlate_dev_kmem_ptr(p) p
memset_io  function  arch/x86/include/asm/io.h  203  memset_io(volatile void __iomem *addr,unsigned char val,size_t count)
memcpy_fromio  function  arch/x86/include/asm/io.h  209  memcpy_fromio(void *dst,const volatile void __iomem *src,size_t count)
memcpy_toio  function  arch/x86/include/asm/io.h  215  memcpy_toio(volatile void __iomem *dst,const void *src,size_t count)
__ISA_IO_base  macro  arch/x86/include/asm/io.h  228  #define __ISA_IO_base ((char __iomem *)(PAGE_OFFSET))
flush_write_buffers  function  arch/x86/include/asm/io.h  238  static inline void flush_write_buffers(void)
native_io_delay  prototype  arch/x86/include/asm/io.h  247  extern void native_io_delay(void);
io_delay_init  prototype  arch/x86/include/asm/io.h  250  extern void io_delay_init(void);
slow_down_io  function  arch/x86/include/asm/paravirt.h  312  static inline void slow_down_io(void)
BUILDIO  macro  arch/x86/include/asm/io.h  268  #define BUILDIO(bwl,bw,type) \
xlate_dev_mem_ptr  prototype  arch/x86/include/asm/io.h  312  extern void *xlate_dev_mem_ptr(unsigned long phys);
unxlate_dev_mem_ptr  prototype  arch/x86/include/asm/io.h  313  extern void unxlate_dev_mem_ptr(unsigned long phys,void *addr);
ioremap_change_attr  prototype  arch/x86/include/asm/io.h  316  extern int ioremap_change_attr(unsigned long vaddr,unsigned long size,unsigned long prot_val);
ioremap_wc  macro  include/asm-generic/iomap.h  66  #define ioremap_wc ioremap_nocache
early_ioremap_init  prototype  arch/x86/include/asm/io.h  324  extern void early_ioremap_init(void);
early_ioremap_reset  prototype  arch/x86/include/asm/io.h  325  extern void early_ioremap_reset(void);
early_ioremap  prototype  arch/x86/include/asm/io.h  327  extern void __iomem *early_ioremap(resource_size_t phys_addr,unsigned long size);
early_memremap  prototype  arch/x86/include/asm/io.h  329  extern void __iomem *early_memremap(resource_size_t phys_addr,unsigned long size);
early_iounmap  prototype  arch/x86/include/asm/io.h  330  extern void early_iounmap(void __iomem *addr,unsigned long size);
fixup_early_ioremap  prototype  arch/x86/include/asm/io.h  331  extern void fixup_early_ioremap(void);
is_early_ioremap_ptep  prototype  arch/x86/include/asm/io.h  332  extern bool is_early_ioremap_ptep(pte_t *ptep);
xen_biovec_phys_mergeable  prototype  arch/x86/include/asm/io.h  339  extern bool xen_biovec_phys_mergeable(const struct bio_vec *vec1,const struct bio_vec *vec2);
BIOVEC_PHYS_MERGEABLE  macro  arch/x86/include/asm/io.h  341  #define BIOVEC_PHYS_MERGEABLE(vec1,vec2) \
IO_SPACE_LIMIT  macro  arch/x86/include/asm/io.h  346  #define IO_SPACE_LIMIT 0xffff
_LINUX_LIST_H  macro  include/linux/list.h  2  #define _LINUX_LIST_H
LIST_HEAD_INIT  macro  include/linux/list.h  19  #define LIST_HEAD_INIT(name) { &(name),&(name) }
LIST_HEAD  macro  include/linux/list.h  21  #define LIST_HEAD(name) \
INIT_LIST_HEAD  function  include/linux/list.h  24  static inline void INIT_LIST_HEAD(struct list_head *list)
__list_add  prototype  include/linux/list.h  49  extern void __list_add(struct list_head *new,struct list_head *prev,struct list_head *next);
list_add  function  include/linux/list.h  60  static inline void list_add(struct list_head *new,struct list_head *head)
list_add_tail  function  include/linux/list.h  74  static inline void list_add_tail(struct list_head *new,struct list_head *head)
__list_del  function  include/linux/list.h  86  static inline void __list_del(struct list_head * prev,struct list_head * next)
__list_del_entry  prototype  include/linux/list.h  111  extern void __list_del_entry(struct list_head *entry);
list_del  prototype  include/linux/list.h  112  extern void list_del(struct list_head *entry);
list_replace  function  include/linux/list.h  123  static inline void list_replace(struct list_head *old,struct list_head *new)
list_replace_init  function  include/linux/list.h  132  static inline void list_replace_init(struct list_head *old,struct list_head *new)
list_del_init  function  include/linux/list.h  142  static inline void list_del_init(struct list_head *entry)
list_move  function  include/linux/list.h  153  static inline void list_move(struct list_head *list,struct list_head *head)
list_move_tail  function  include/linux/list.h  165  static inline void list_move_tail(struct list_head *list,struct list_head *head)
list_is_last  function  include/linux/list.h  177  static inline int list_is_last(const struct list_head *list,const struct list_head *head)
list_empty  function  include/linux/list.h  186  static inline int list_empty(const struct list_head *head)
list_empty_careful  function  include/linux/list.h  204  static inline int list_empty_careful(const struct list_head *head)
list_rotate_left  function  include/linux/list.h  214  static inline void list_rotate_left(struct list_head *head)
list_is_singular  function  include/linux/list.h  228  static inline int list_is_singular(const struct list_head *head)
__list_cut_position  function  include/linux/list.h  234  static inline void __list_cut_position(struct list_head *list,struct list_head *head, struct list_head *entry)
list_cut_position  function  include/linux/list.h  260  static inline void list_cut_position(struct list_head *list,struct list_head *head, struct list_head *entry)
__list_splice  function  include/linux/list.h  275  static inline void __list_splice(const struct list_head *list,struct list_head *prev,struct list_head *next)
list_splice  function  include/linux/list.h  293  static inline void list_splice(const struct list_head *list,struct list_head *head)
list_splice_tail  function  include/linux/list.h  305  static inline void list_splice_tail(struct list_head *list,struct list_head *head)
list_splice_init  function  include/linux/list.h  319  static inline void list_splice_init(struct list_head *list,struct list_head *head)
list_splice_tail_init  function  include/linux/list.h  336  static inline void list_splice_tail_init(struct list_head *list,struct list_head *head)
list_entry  macro  include/linux/list.h  350  #define list_entry(ptr,type,member) \
list_first_entry  macro  include/linux/list.h  361  #define list_first_entry(ptr,type,member) \
list_for_each  macro  include/linux/list.h  369  #define list_for_each(pos,head) \
__list_for_each  macro  include/linux/list.h  380  #define __list_for_each(pos,head) \
list_for_each_prev  macro  include/linux/list.h  388  #define list_for_each_prev(pos,head) \
list_for_each_safe  macro  include/linux/list.h  397  #define list_for_each_safe(pos,n,head) \
list_for_each_prev_safe  macro  include/linux/list.h  407  #define list_for_each_prev_safe(pos,n,head) \
list_for_each_entry  macro  include/linux/list.h  418  #define list_for_each_entry(pos,head,member) \
list_for_each_entry_reverse  macro  include/linux/list.h  429  #define list_for_each_entry_reverse(pos,head,member) \
list_prepare_entry  macro  include/linux/list.h  442  #define list_prepare_entry(pos,head,member) \
list_for_each_entry_continue  macro  include/linux/list.h  454  #define list_for_each_entry_continue(pos,head,member) \
list_for_each_entry_continue_reverse  macro  include/linux/list.h  468  #define list_for_each_entry_continue_reverse(pos,head,member) \
list_for_each_entry_from  macro  include/linux/list.h  481  #define list_for_each_entry_from(pos,head,member) \
list_for_each_entry_safe  macro  include/linux/list.h  492  #define list_for_each_entry_safe(pos,n,head,member) \
list_for_each_entry_safe_continue  macro  include/linux/list.h  508  #define list_for_each_entry_safe_continue(pos,n,head,member) \
list_for_each_entry_safe_from  macro  include/linux/list.h  524  #define list_for_each_entry_safe_from(pos,n,head,member) \
list_for_each_entry_safe_reverse  macro  include/linux/list.h  539  #define list_for_each_entry_safe_reverse(pos,n,head,member) \
list_safe_reset_next  macro  include/linux/list.h  557  #define list_safe_reset_next(pos,n,member) \
HLIST_HEAD_INIT  macro  include/linux/list.h  567  #define HLIST_HEAD_INIT { .first = NULL }
HLIST_HEAD  macro  include/linux/list.h  568  #define HLIST_HEAD(name) struct hlist_head name = { .first = NULL }
INIT_HLIST_HEAD  macro  include/linux/list.h  569  #define INIT_HLIST_HEAD(ptr) ((ptr)->first = NULL)
INIT_HLIST_NODE  function  include/linux/list.h  570  static inline void INIT_HLIST_NODE(struct hlist_node *h)
hlist_unhashed  function  include/linux/list.h  576  static inline int hlist_unhashed(const struct hlist_node *h)
hlist_empty  function  include/linux/list.h  581  static inline int hlist_empty(const struct hlist_head *h)
__hlist_del  function  include/linux/list.h  586  static inline void __hlist_del(struct hlist_node *n)
hlist_del  function  include/linux/list.h  595  static inline void hlist_del(struct hlist_node *n)
hlist_del_init  function  include/linux/list.h  602  static inline void hlist_del_init(struct hlist_node *n)
hlist_add_head  function  include/linux/list.h  610  static inline void hlist_add_head(struct hlist_node *n,struct hlist_head *h)
hlist_add_before  function  include/linux/list.h  622  static inline void hlist_add_before(struct hlist_node *n,struct hlist_node *next)
hlist_add_after  function  include/linux/list.h  631  static inline void hlist_add_after(struct hlist_node *n,struct hlist_node *next)
hlist_add_fake  function  include/linux/list.h  642  static inline void hlist_add_fake(struct hlist_node *n)
hlist_move_list  function  include/linux/list.h  652  static inline void hlist_move_list(struct hlist_head *old,struct hlist_head *new)
hlist_entry  macro  include/linux/list.h  660  #define hlist_entry(ptr,type,member) container_of(ptr,type,member)
hlist_for_each  macro  include/linux/list.h  662  #define hlist_for_each(pos,head) \
hlist_for_each_safe  macro  include/linux/list.h  665  #define hlist_for_each_safe(pos,n,head) \
hlist_for_each_entry  macro  include/linux/list.h  676  #define hlist_for_each_entry(tpos,pos,head,member) \
hlist_for_each_entry_continue  macro  include/linux/list.h  688  #define hlist_for_each_entry_continue(tpos,pos,member) \
hlist_for_each_entry_from  macro  include/linux/list.h  700  #define hlist_for_each_entry_from(tpos,pos,member) \
hlist_for_each_entry_safe  macro  include/linux/list.h  713  #define hlist_for_each_entry_safe(tpos,pos,n,head,member) \
_LINUX_STAT_H  macro  include/linux/stat.h  2  #define _LINUX_STAT_H
S_IRWXUGO  macro  include/linux/stat.h  8  #define S_IRWXUGO (S_IRWXU|S_IRWXG|S_IRWXO)
S_IALLUGO  macro  include/linux/stat.h  9  #define S_IALLUGO (S_ISUID|S_ISGID|S_ISVTX|S_IRWXUGO)
S_IRUGO  macro  include/linux/stat.h  10  #define S_IRUGO (S_IRUSR|S_IRGRP|S_IROTH)
S_IWUGO  macro  include/linux/stat.h  11  #define S_IWUGO (S_IWUSR|S_IWGRP|S_IWOTH)
S_IXUGO  macro  include/linux/stat.h  12  #define S_IXUGO (S_IXUSR|S_IXGRP|S_IXOTH)
UTIME_NOW  macro  include/linux/stat.h  14  #define UTIME_NOW ((1l << 30) - 1l)
UTIME_OMIT  macro  include/linux/stat.h  15  #define UTIME_OMIT ((1l << 30) - 2l)
kstat  struct  include/linux/stat.h  21  struct kstat {
__LINUX_COMPILER_H  macro  include/linux/compiler.h  2  #define __LINUX_COMPILER_H
__user  macro  include/linux/compiler.h  28  # define __user
__kernel  macro  include/linux/compiler.h  29  # define __kernel
__safe  macro  include/linux/compiler.h  30  # define __safe
__force  macro  include/linux/compiler.h  31  # define __force
__nocast  macro  include/linux/compiler.h  32  # define __nocast
__iomem  macro  include/linux/compiler.h  33  # define __iomem
__must_hold  macro  include/linux/compiler.h  37  # define __must_hold(x)
__acquire  macro  include/linux/compiler.h  40  # define __acquire(x) (void)0
__release  macro  include/linux/compiler.h  41  # define __release(x) (void)0
__cond_lock  macro  include/linux/compiler.h  42  # define __cond_lock(x,c) (c)
__percpu  macro  include/linux/compiler.h  43  # define __percpu
__rcu  macro  include/linux/compiler.h  44  # define __rcu
__chk_user_ptr  macro  include/linux/compiler.h  34  # define __chk_user_ptr(x) (void)0
__chk_io_ptr  macro  include/linux/compiler.h  35  # define __chk_io_ptr(x) (void)0
__builtin_warning  macro  include/linux/compiler.h  36  # define __builtin_warning(x,y...) (1)
___PASTE  macro  include/linux/compiler.h  48  #define ___PASTE(a,b) a##b
__PASTE  macro  include/linux/compiler.h  49  #define __PASTE(a,b) ___PASTE(a,b)
notrace  macro  include/linux/compiler.h  57  #define notrace __attribute__((no_instrument_function))
ftrace_branch_data  struct  include/linux/compiler.h  72  struct ftrace_branch_data {
ftrace_likely_update  prototype  include/linux/compiler.h  95  void ftrace_likely_update(struct ftrace_branch_data *f,int val,int expect);
likely_notrace  macro  include/linux/compiler.h  97  #define likely_notrace(x) __builtin_expect(!!(x),1)
unlikely_notrace  macro  include/linux/compiler.h  98  #define unlikely_notrace(x) __builtin_expect(!!(x),0)
__branch_check__  macro  include/linux/compiler.h  100  #define __branch_check__(x,expect) ({ \
likely  macro  include/linux/compiler.h  152  # define likely(x) __builtin_expect(!!(x),1)
unlikely  macro  include/linux/compiler.h  153  # define unlikely(x) __builtin_expect(!!(x),0)
if  macro  include/linux/compiler.h  132  #define if(cond,...) __trace_if( (cond ,## __VA_ARGS__) )
__trace_if  macro  include/linux/compiler.h  133  #define __trace_if(cond) \
barrier  macro  include/linux/compiler.h  158  # define barrier() __memory_barrier()
unreachable  macro  include/linux/compiler.h  163  # define unreachable() do { } while (1)
RELOC_HIDE  macro  include/linux/compiler.h  167  # define RELOC_HIDE(ptr,off) \
__UNIQUE_ID  macro  include/linux/compiler.h  175  # define __UNIQUE_ID(prefix) __PASTE(__PASTE(__UNIQUE_ID_,prefix),__LINE__)
__deprecated  macro  include/linux/compiler.h  210  #define __deprecated
__deprecated_for_modules  macro  include/linux/compiler.h  211  #define __deprecated_for_modules
__must_check  macro  include/linux/compiler.h  205  #define __must_check
__used  macro  include/linux/compiler.h  233  # define __used
__maybe_unused  macro  include/linux/compiler.h  237  # define __maybe_unused
__always_unused  macro  include/linux/compiler.h  241  # define __always_unused
noinline  macro  include/linux/compiler.h  245  #define noinline
noinline_for_stack  macro  include/linux/compiler.h  252  #define noinline_for_stack noinline
__always_inline  macro  include/linux/compiler.h  255  #define __always_inline inline
__attribute_const__  macro  include/linux/compiler.h  275  # define __attribute_const__
__section  macro  include/linux/compiler.h  289  # define __section(S) __attribute__ ((__section__(#S)))
__visible  macro  include/linux/compiler.h  293  #define __visible
__same_type  macro  include/linux/compiler.h  298  # define __same_type(a,b) __builtin_types_compatible_p(typeof(a),typeof(b))
__compiletime_object_size  macro  include/linux/compiler.h  303  # define __compiletime_object_size(obj) -1
__compiletime_warning  macro  include/linux/compiler.h  306  # define __compiletime_warning(message)
__compiletime_error  macro  include/linux/compiler.h  309  # define __compiletime_error(message)
__linktime_error  macro  include/linux/compiler.h  312  # define __linktime_error(message)
ACCESS_ONCE  macro  include/linux/compiler.h  326  #define ACCESS_ONCE(x) (*(volatile typeof(x) *)&(x))
__LINUX_CACHE_H  macro  include/linux/cache.h  2  #define __LINUX_CACHE_H
L1_CACHE_ALIGN  macro  include/linux/cache.h  8  #define L1_CACHE_ALIGN(x) ALIGN(x,L1_CACHE_BYTES)
SMP_CACHE_BYTES  macro  include/linux/cache.h  12  #define SMP_CACHE_BYTES L1_CACHE_BYTES
__read_mostly  macro  include/linux/cache.h  16  #define __read_mostly
____cacheline_aligned_in_smp  macro  include/linux/cache.h  27  #define ____cacheline_aligned_in_smp
__cacheline_aligned  macro  include/linux/cache.h  32  #define __cacheline_aligned \
__cacheline_aligned_in_smp  macro  include/linux/cache.h  41  #define __cacheline_aligned_in_smp
INTERNODE_CACHE_SHIFT  macro  include/linux/cache.h  51  #define INTERNODE_CACHE_SHIFT L1_CACHE_SHIFT
____cacheline_internodealigned_in_smp  macro  include/linux/cache.h  59  #define ____cacheline_internodealigned_in_smp
cache_line_size  macro  include/linux/cache.h  64  #define cache_line_size() L1_CACHE_BYTES
__LINUX_KMOD_H__  macro  include/linux/kmod.h  2  #define __LINUX_KMOD_H__
KMOD_PATH_LEN  macro  include/linux/kmod.h  29  #define KMOD_PATH_LEN 256
__request_module  prototype  include/linux/kmod.h  36  int __request_module(bool wait,const char *name,...);
request_module  function  include/linux/kmod.h  42  static inline int request_module(const char *name,...) { return -ENOSYS; }
request_module_nowait  function  include/linux/kmod.h  43  static inline int request_module_nowait(const char *name,...) { return -ENOSYS; }
try_then_request_module  macro  include/linux/kmod.h  44  #define try_then_request_module(x,mod...) (x)
UMH_NO_WAIT  macro  include/linux/kmod.h  51  #define UMH_NO_WAIT 0
UMH_WAIT_EXEC  macro  include/linux/kmod.h  52  #define UMH_WAIT_EXEC 1
UMH_WAIT_PROC  macro  include/linux/kmod.h  53  #define UMH_WAIT_PROC 2
UMH_KILLABLE  macro  include/linux/kmod.h  54  #define UMH_KILLABLE 4
subprocess_info  struct  include/linux/kmod.h  56  struct subprocess_info {
call_usermodehelper_fns  prototype  include/linux/kmod.h  72  call_usermodehelper_fns(char *path,char **argv,char **envp,int wait,int (*init)(struct subprocess_info *info, struct cred *new),void (*cleanup)(struct subprocess_info *), void *data);
call_usermodehelper  function  include/linux/kmod.h  75  call_usermodehelper(char *path,char **argv,char **envp,int wait)
umh_disable_depth  enum  include/linux/kmod.h  83  enum umh_disable_depth {
UMH_ENABLED  enumerator  include/linux/kmod.h  84  UMH_ENABLED = 0,
UMH_FREEZING  enumerator  include/linux/kmod.h  85  UMH_FREEZING,
UMH_DISABLED  enumerator  include/linux/kmod.h  86  UMH_DISABLED,
usermodehelper_init  prototype  include/linux/kmod.h  89  extern void usermodehelper_init(void);
__usermodehelper_disable  prototype  include/linux/kmod.h  91  extern int __usermodehelper_disable(enum umh_disable_depth depth);
__usermodehelper_set_disable_depth  prototype  include/linux/kmod.h  92  extern void __usermodehelper_set_disable_depth(enum umh_disable_depth depth);
usermodehelper_disable  function  include/linux/kmod.h  94  static inline int usermodehelper_disable(void)
usermodehelper_enable  function  include/linux/kmod.h  99  static inline void usermodehelper_enable(void)
usermodehelper_read_trylock  prototype  include/linux/kmod.h  104  extern int usermodehelper_read_trylock(void);
usermodehelper_read_lock_wait  prototype  include/linux/kmod.h  105  extern long usermodehelper_read_lock_wait(long timeout);
usermodehelper_read_unlock  prototype  include/linux/kmod.h  106  extern void usermodehelper_read_unlock(void);
_LINUX_ELF_H  macro  include/linux/elf.h  2  #define _LINUX_ELF_H
elf_read_implies_exec  macro  include/linux/elf.h  11  # define elf_read_implies_exec(ex,have_pt_gnu_stack) 0
elfhdr  macro  include/linux/elf.h  27  #define elfhdr elf64_hdr
elf_phdr  macro  include/linux/elf.h  28  #define elf_phdr elf64_phdr
elf_shdr  macro  include/linux/elf.h  29  #define elf_shdr elf64_shdr
elf_note  macro  include/linux/elf.h  30  #define elf_note elf64_note
elf_addr_t  macro  include/linux/elf.h  31  #define elf_addr_t Elf64_Off
Elf_Half  macro  include/linux/elf.h  32  #define Elf_Half Elf64_Half
elf_coredump_extra_notes_size  prototype  include/linux/elf.h  44  extern int elf_coredump_extra_notes_size(void);
elf_coredump_extra_notes_write  prototype  include/linux/elf.h  45  extern int elf_coredump_extra_notes_write(struct file *file,loff_t *foffset);
__LINUX_STRINGIFY_H  macro  include/linux/stringify.h  2  #define __LINUX_STRINGIFY_H
__stringify_1  macro  include/linux/stringify.h  9  #define __stringify_1(x...) #x
__stringify  macro  include/linux/stringify.h  10  #define __stringify(x...) __stringify_1(x)
_KOBJECT_H_  macro  include/linux/kobject.h  17  #define _KOBJECT_H_
UEVENT_HELPER_PATH_LEN  macro  include/linux/kobject.h  30  #define UEVENT_HELPER_PATH_LEN 256
UEVENT_NUM_ENVP  macro  include/linux/kobject.h  31  #define UEVENT_NUM_ENVP 32
UEVENT_BUFFER_SIZE  macro  include/linux/kobject.h  32  #define UEVENT_BUFFER_SIZE 2048
kobject_action  enum  include/linux/kobject.h  50  enum kobject_action {
KOBJ_ADD  enumerator  include/linux/kobject.h  51  KOBJ_ADD,
KOBJ_REMOVE  enumerator  include/linux/kobject.h  52  KOBJ_REMOVE,
KOBJ_CHANGE  enumerator  include/linux/kobject.h  53  KOBJ_CHANGE,
KOBJ_MOVE  enumerator  include/linux/kobject.h  54  KOBJ_MOVE,
KOBJ_ONLINE  enumerator  include/linux/kobject.h  55  KOBJ_ONLINE,
KOBJ_OFFLINE  enumerator  include/linux/kobject.h  56  KOBJ_OFFLINE,
KOBJ_MAX  enumerator  include/linux/kobject.h  57  KOBJ_MAX
kobject  struct  include/linux/kobject.h  60  struct kobject {
kobject_set_name  prototype  include/linux/kobject.h  76  int kobject_set_name(struct kobject *kobj,const char *name,...);
kobject_set_name_vargs  prototype  include/linux/kobject.h  78  extern int kobject_set_name_vargs(struct kobject *kobj,const char *fmt,va_list vargs);
kobject_name  function  include/linux/kobject.h  80  static inline const char *kobject_name(const struct kobject *kobj)
kobject_init  prototype  include/linux/kobject.h  85  extern void kobject_init(struct kobject *kobj,struct kobj_type *ktype);
kobject_add  prototype  include/linux/kobject.h  88  int kobject_add(struct kobject *kobj,struct kobject *parent,const char *fmt, ...);
kobject_init_and_add  prototype  include/linux/kobject.h  92  int kobject_init_and_add(struct kobject *kobj,struct kobj_type *ktype, struct kobject *parent,const char *fmt, ...);
kobject_del  prototype  include/linux/kobject.h  94  extern void kobject_del(struct kobject *kobj);
kobject_create  prototype  include/linux/kobject.h  96  extern struct kobject * __must_check kobject_create(void);
kobject_create_and_add  prototype  include/linux/kobject.h  98  extern struct kobject * __must_check kobject_create_and_add(const char *name,struct kobject *parent);
kobject_rename  prototype  include/linux/kobject.h  100  extern int __must_check kobject_rename(struct kobject *,const char *new_name);
kobject_move  prototype  include/linux/kobject.h  101  extern int __must_check kobject_move(struct kobject *,struct kobject *);
kobject_get  prototype  include/linux/kobject.h  103  extern struct kobject *kobject_get(struct kobject *kobj);
kobject_put  prototype  include/linux/kobject.h  104  extern void kobject_put(struct kobject *kobj);
kobject_get_path  prototype  include/linux/kobject.h  106  extern char *kobject_get_path(struct kobject *kobj,gfp_t flag);
kobj_type  struct  include/linux/kobject.h  108  struct kobj_type {
kobj_uevent_env  struct  include/linux/kobject.h  116  struct kobj_uevent_env {
kset_uevent_ops  struct  include/linux/kobject.h  123  struct kset_uevent_ops {
kobj_attribute  struct  include/linux/kobject.h  130  struct kobj_attribute {
kset  struct  include/linux/kobject.h  159  struct kset {
kset_init  prototype  include/linux/kobject.h  166  extern void kset_init(struct kset *kset);
kset_register  prototype  include/linux/kobject.h  167  extern int __must_check kset_register(struct kset *kset);
kset_unregister  prototype  include/linux/kobject.h  168  extern void kset_unregister(struct kset *kset);
kset_create_and_add  prototype  include/linux/kobject.h  171  extern struct kset * __must_check kset_create_and_add(const char *name,const struct kset_uevent_ops *u,struct kobject *parent_kobj);
to_kset  function  include/linux/kobject.h  173  static inline struct kset *to_kset(struct kobject *kobj)
kset_get  function  include/linux/kobject.h  178  static inline struct kset *kset_get(struct kset *k)
kset_put  function  include/linux/kobject.h  183  static inline void kset_put(struct kset *k)
get_ktype  function  include/linux/kobject.h  188  static inline struct kobj_type *get_ktype(struct kobject *kobj)
kset_find_obj  prototype  include/linux/kobject.h  193  extern struct kobject *kset_find_obj(struct kset *,const char *);
kobject_uevent  prototype  include/linux/kobject.h  206  int kobject_uevent(struct kobject *kobj,enum kobject_action action);
kobject_uevent_env  prototype  include/linux/kobject.h  208  int kobject_uevent_env(struct kobject *kobj,enum kobject_action action,char *envp[]);
add_uevent_var  prototype  include/linux/kobject.h  211  int add_uevent_var(struct kobj_uevent_env *env,const char *format,...);
kobject_action_type  prototype  include/linux/kobject.h  214  int kobject_action_type(const char *buf,size_t count,enum kobject_action *type);
_LINUX_MODULE_PARAMS_H  macro  include/linux/moduleparam.h  2  #define _LINUX_MODULE_PARAMS_H
MODULE_PARAM_PREFIX  macro  include/linux/moduleparam.h  13  #define MODULE_PARAM_PREFIX KBUILD_MODNAME "."
MAX_PARAM_PREFIX_LEN  macro  include/linux/moduleparam.h  17  #define MAX_PARAM_PREFIX_LEN (64 - sizeof(unsigned long))
__MODULE_INFO  macro  include/linux/moduleparam.h  26  #define __MODULE_INFO(tag,name,info) \
__MODULE_PARM_TYPE  macro  include/linux/moduleparam.h  29  #define __MODULE_PARM_TYPE(name,_type) \
MODULE_PARM_DESC  macro  include/linux/moduleparam.h  34  #define MODULE_PARM_DESC(_parm,desc) \
kernel_param_ops  struct  include/linux/moduleparam.h  39  struct kernel_param_ops {
kernel_param  struct  include/linux/moduleparam.h  48  struct kernel_param {
kparam_string  struct  include/linux/moduleparam.h  61  struct kparam_string {
kparam_array  struct  include/linux/moduleparam.h  67  struct kparam_array
module_param  macro  include/linux/moduleparam.h  101  #define module_param(name,type,perm) \
module_param_named  macro  include/linux/moduleparam.h  115  #define module_param_named(name,value,type,perm) \
module_param_cb  macro  include/linux/moduleparam.h  128  #define module_param_cb(name,ops,arg,perm) \
__level_param_cb  macro  include/linux/moduleparam.h  140  #define __level_param_cb(name,ops,arg,perm,level) \
core_param_cb  macro  include/linux/moduleparam.h  143  #define core_param_cb(name,ops,arg,perm) \
postcore_param_cb  macro  include/linux/moduleparam.h  146  #define postcore_param_cb(name,ops,arg,perm) \
arch_param_cb  macro  include/linux/moduleparam.h  149  #define arch_param_cb(name,ops,arg,perm) \
subsys_param_cb  macro  include/linux/moduleparam.h  152  #define subsys_param_cb(name,ops,arg,perm) \
fs_param_cb  macro  include/linux/moduleparam.h  155  #define fs_param_cb(name,ops,arg,perm) \
device_param_cb  macro  include/linux/moduleparam.h  158  #define device_param_cb(name,ops,arg,perm) \
late_param_cb  macro  include/linux/moduleparam.h  161  #define late_param_cb(name,ops,arg,perm) \
__moduleparam_const  macro  include/linux/moduleparam.h  171  #define __moduleparam_const const
__module_param_call  macro  include/linux/moduleparam.h  176  #define __module_param_call(prefix,name,ops,arg,perm,level) \
module_param_call  macro  include/linux/moduleparam.h  188  #define module_param_call(name,set,get,arg,perm) \
__check_old_set_param  function  include/linux/moduleparam.h  197  __check_old_set_param(int (*oldset)(const char *,struct kernel_param *))
kparam_block_sysfs_write  macro  include/linux/moduleparam.h  208  #define kparam_block_sysfs_write(name) \
kparam_unblock_sysfs_write  macro  include/linux/moduleparam.h  218  #define kparam_unblock_sysfs_write(name) \
kparam_block_sysfs_read  macro  include/linux/moduleparam.h  230  #define kparam_block_sysfs_read(name) \
kparam_unblock_sysfs_read  macro  include/linux/moduleparam.h  240  #define kparam_unblock_sysfs_read(name) \
__kernel_param_lock  function  include/linux/moduleparam.h  250  static inline void __kernel_param_lock(void)
__kernel_param_unlock  function  include/linux/moduleparam.h  253  static inline void __kernel_param_unlock(void)
core_param  macro  include/linux/moduleparam.h  271  #define core_param(name,var,type,perm) \
module_param_string  macro  include/linux/moduleparam.h  286  #define module_param_string(name,string,len,perm) \
parameq  prototype  include/linux/moduleparam.h  302  extern bool parameq(const char *name1,const char *name2);
parameqn  prototype  include/linux/moduleparam.h  312  extern bool parameqn(const char *name1,const char *name2,size_t n);
parse_args  prototype  include/linux/moduleparam.h  322  extern int parse_args(const char *name,char *args,const struct kernel_param *params,unsigned num,s16 level_min,s16 level_max,int (*unknown)(char *param, char *val,const char *doing));
destroy_params  function  include/linux/moduleparam.h  329  static inline void destroy_params(const struct kernel_param *params,unsigned num)
__param_check  macro  include/linux/moduleparam.h  337  #define __param_check(name,p,type) \
param_set_byte  prototype  include/linux/moduleparam.h  341  extern int param_set_byte(const char *val,const struct kernel_param *kp);
param_get_byte  prototype  include/linux/moduleparam.h  342  extern int param_get_byte(char *buffer,const struct kernel_param *kp);
param_check_byte  macro  include/linux/moduleparam.h  343  #define param_check_byte(name,p) __param_check(name,p,unsigned char)
param_set_short  prototype  include/linux/moduleparam.h  346  extern int param_set_short(const char *val,const struct kernel_param *kp);
param_get_short  prototype  include/linux/moduleparam.h  347  extern int param_get_short(char *buffer,const struct kernel_param *kp);
param_check_short  macro  include/linux/moduleparam.h  348  #define param_check_short(name,p) __param_check(name,p,short)
param_set_ushort  prototype  include/linux/moduleparam.h  351  extern int param_set_ushort(const char *val,const struct kernel_param *kp);
param_get_ushort  prototype  include/linux/moduleparam.h  352  extern int param_get_ushort(char *buffer,const struct kernel_param *kp);
param_check_ushort  macro  include/linux/moduleparam.h  353  #define param_check_ushort(name,p) __param_check(name,p,unsigned short)
param_set_int  prototype  include/linux/moduleparam.h  356  extern int param_set_int(const char *val,const struct kernel_param *kp);
param_get_int  prototype  include/linux/moduleparam.h  357  extern int param_get_int(char *buffer,const struct kernel_param *kp);
param_check_int  macro  include/linux/moduleparam.h  358  #define param_check_int(name,p) __param_check(name,p,int)
param_set_uint  prototype  include/linux/moduleparam.h  361  extern int param_set_uint(const char *val,const struct kernel_param *kp);
param_get_uint  prototype  include/linux/moduleparam.h  362  extern int param_get_uint(char *buffer,const struct kernel_param *kp);
param_check_uint  macro  include/linux/moduleparam.h  363  #define param_check_uint(name,p) __param_check(name,p,unsigned int)
param_set_long  prototype  include/linux/moduleparam.h  366  extern int param_set_long(const char *val,const struct kernel_param *kp);
param_get_long  prototype  include/linux/moduleparam.h  367  extern int param_get_long(char *buffer,const struct kernel_param *kp);
param_check_long  macro  include/linux/moduleparam.h  368  #define param_check_long(name,p) __param_check(name,p,long)
param_set_ulong  prototype  include/linux/moduleparam.h  371  extern int param_set_ulong(const char *val,const struct kernel_param *kp);
param_get_ulong  prototype  include/linux/moduleparam.h  372  extern int param_get_ulong(char *buffer,const struct kernel_param *kp);
param_check_ulong  macro  include/linux/moduleparam.h  373  #define param_check_ulong(name,p) __param_check(name,p,unsigned long)
param_set_charp  prototype  include/linux/moduleparam.h  376  extern int param_set_charp(const char *val,const struct kernel_param *kp);
param_get_charp  prototype  include/linux/moduleparam.h  377  extern int param_get_charp(char *buffer,const struct kernel_param *kp);
param_check_charp  macro  include/linux/moduleparam.h  378  #define param_check_charp(name,p) __param_check(name,p,char *)
param_set_bool  prototype  include/linux/moduleparam.h  382  extern int param_set_bool(const char *val,const struct kernel_param *kp);
param_get_bool  prototype  include/linux/moduleparam.h  383  extern int param_get_bool(char *buffer,const struct kernel_param *kp);
param_check_bool  macro  include/linux/moduleparam.h  384  #define param_check_bool(name,p) __param_check(name,p,bool)
param_set_invbool  prototype  include/linux/moduleparam.h  387  extern int param_set_invbool(const char *val,const struct kernel_param *kp);
param_get_invbool  prototype  include/linux/moduleparam.h  388  extern int param_get_invbool(char *buffer,const struct kernel_param *kp);
param_check_invbool  macro  include/linux/moduleparam.h  389  #define param_check_invbool(name,p) __param_check(name,p,bool)
param_set_bint  prototype  include/linux/moduleparam.h  393  extern int param_set_bint(const char *val,const struct kernel_param *kp);
param_get_bint  macro  include/linux/moduleparam.h  394  #define param_get_bint param_get_int
param_check_bint  macro  include/linux/moduleparam.h  395  #define param_check_bint param_check_int
module_param_array  macro  include/linux/moduleparam.h  410  #define module_param_array(name,type,nump,perm) \
module_param_array_named  macro  include/linux/moduleparam.h  424  #define module_param_array_named(name,array,type,nump,perm) \
param_set_copystring  prototype  include/linux/moduleparam.h  439  extern int param_set_copystring(const char *val,const struct kernel_param *);
param_get_string  prototype  include/linux/moduleparam.h  440  extern int param_get_string(char *buffer,const struct kernel_param *kp);
module_param_sysfs_setup  function  include/linux/moduleparam.h  455  static inline int module_param_sysfs_setup(struct module *mod,const struct kernel_param *kparam,unsigned int num_params)
module_param_sysfs_remove  function  include/linux/moduleparam.h  460  static inline void module_param_sysfs_remove(struct module *mod)
_LINUX_TRACEPOINT_H  macro  include/linux/tracepoint.h  2  #define _LINUX_TRACEPOINT_H
tracepoint_func  struct  include/linux/tracepoint.h  25  struct tracepoint_func {
tracepoint  struct  include/linux/tracepoint.h  30  struct tracepoint {
tracepoint_probe_register  prototype  include/linux/tracepoint.h  42  extern int tracepoint_probe_register(const char *name,void *probe,void *data);
tracepoint_probe_unregister  prototype  include/linux/tracepoint.h  49  tracepoint_probe_unregister(const char *name,void *probe,void *data);
tracepoint_probe_register_noupdate  prototype  include/linux/tracepoint.h  52  extern int tracepoint_probe_register_noupdate(const char *name,void *probe,void *data);
tracepoint_probe_unregister_noupdate  prototype  include/linux/tracepoint.h  54  extern int tracepoint_probe_unregister_noupdate(const char *name,void *probe,void *data);
tracepoint_probe_update_all  prototype  include/linux/tracepoint.h  55  extern void tracepoint_probe_update_all(void);
tp_module  struct  include/linux/tracepoint.h  58  struct tp_module {
tracepoint_iter  struct  include/linux/tracepoint.h  65  struct tracepoint_iter {
tracepoint_iter_start  prototype  include/linux/tracepoint.h  72  extern void tracepoint_iter_start(struct tracepoint_iter *iter);
tracepoint_iter_next  prototype  include/linux/tracepoint.h  73  extern void tracepoint_iter_next(struct tracepoint_iter *iter);
tracepoint_iter_stop  prototype  include/linux/tracepoint.h  74  extern void tracepoint_iter_stop(struct tracepoint_iter *iter);
tracepoint_iter_reset  prototype  include/linux/tracepoint.h  75  extern void tracepoint_iter_reset(struct tracepoint_iter *iter);
tracepoint_synchronize_unregister  function  include/linux/tracepoint.h  82  static inline void tracepoint_synchronize_unregister(void)
PARAMS  macro  include/linux/tracepoint.h  87  #define PARAMS(args...) args
TP_PROTO  macro  include/linux/tracepoint.h  101  #define TP_PROTO(args...) args
TP_ARGS  macro  include/linux/tracepoint.h  102  #define TP_ARGS(args...) args
TP_CONDITION  macro  include/linux/tracepoint.h  103  #define TP_CONDITION(args...) args
__DO_TRACE  macro  include/linux/tracepoint.h  117  #define __DO_TRACE(tp,proto,args,cond,prercu,postrcu) \
__DECLARE_TRACE_RCU  macro  include/linux/tracepoint.h  152  #define __DECLARE_TRACE_RCU(name,proto,args,cond,data_proto,data_args)
__DECLARE_TRACE  macro  include/linux/tracepoint.h  213  #define __DECLARE_TRACE(name,proto,args,cond,data_proto,data_args) \
DEFINE_TRACE_FN  macro  include/linux/tracepoint.h  234  #define DEFINE_TRACE_FN(name,reg,unreg)
DEFINE_TRACE  macro  include/linux/tracepoint.h  235  #define DEFINE_TRACE(name)
EXPORT_TRACEPOINT_SYMBOL_GPL  macro  include/linux/tracepoint.h  236  #define EXPORT_TRACEPOINT_SYMBOL_GPL(name)
EXPORT_TRACEPOINT_SYMBOL  macro  include/linux/tracepoint.h  237  #define EXPORT_TRACEPOINT_SYMBOL(name)
DECLARE_TRACE_NOARGS  macro  include/linux/tracepoint.h  255  #define DECLARE_TRACE_NOARGS(name) \
DECLARE_TRACE  macro  include/linux/tracepoint.h  258  #define DECLARE_TRACE(name,proto,args) \
DECLARE_TRACE_CONDITION  macro  include/linux/tracepoint.h  263  #define DECLARE_TRACE_CONDITION(name,proto,args,cond) \
TRACE_EVENT_FLAGS  macro  include/linux/tracepoint.h  398  #define TRACE_EVENT_FLAGS(event,flag)
DECLARE_EVENT_CLASS  macro  include/linux/tracepoint.h  378  #define DECLARE_EVENT_CLASS(name,proto,args,tstruct,assign,print)
DEFINE_EVENT  macro  include/linux/tracepoint.h  379  #define DEFINE_EVENT(template,name,proto,args) \
DEFINE_EVENT_PRINT  macro  include/linux/tracepoint.h  381  #define DEFINE_EVENT_PRINT(template,name,proto,args,print) \
DEFINE_EVENT_CONDITION  macro  include/linux/tracepoint.h  383  #define DEFINE_EVENT_CONDITION(template,name,proto,\
TRACE_EVENT  macro  include/linux/tracepoint.h  388  #define TRACE_EVENT(name,proto,args,struct,assign,print) \
TRACE_EVENT_FN  macro  include/linux/tracepoint.h  390  #define TRACE_EVENT_FN(name,proto,args,struct,\
TRACE_EVENT_CONDITION  macro  include/linux/tracepoint.h  393  #define TRACE_EVENT_CONDITION(name,proto,args,cond,\
_LINUX_EXPORT_H  macro  include/linux/export.h  2  #define _LINUX_EXPORT_H
MODULE_SYMBOL_PREFIX  macro  include/linux/export.h  16  #define MODULE_SYMBOL_PREFIX ""
kernel_symbol  struct  include/linux/export.h  19  struct kernel_symbol
THIS_MODULE  macro  include/linux/export.h  29  #define THIS_MODULE ((struct module *)0)
__CRC_SYMBOL  macro  include/linux/export.h  45  #define __CRC_SYMBOL(sym,sec)
__EXPORT_SYMBOL  macro  include/linux/export.h  49  #define __EXPORT_SYMBOL(sym,sec) \
EXPORT_SYMBOL  macro  include/linux/export.h  81  #define EXPORT_SYMBOL(sym)
EXPORT_SYMBOL_GPL  macro  include/linux/export.h  82  #define EXPORT_SYMBOL_GPL(sym)
EXPORT_SYMBOL_GPL_FUTURE  macro  include/linux/export.h  83  #define EXPORT_SYMBOL_GPL_FUTURE(sym)
EXPORT_UNUSED_SYMBOL  macro  include/linux/export.h  84  #define EXPORT_UNUSED_SYMBOL(sym)
EXPORT_UNUSED_SYMBOL_GPL  macro  include/linux/export.h  85  #define EXPORT_UNUSED_SYMBOL_GPL(sym)
__LINUX_PERCPU_H  macro  include/linux/percpu.h  2  #define __LINUX_PERCPU_H
PERCPU_MODULE_RESERVE  macro  include/linux/percpu.h  16  #define PERCPU_MODULE_RESERVE 0
PERCPU_ENOUGH_ROOM  macro  include/linux/percpu.h  20  #define PERCPU_ENOUGH_ROOM \
get_cpu_var  macro  include/linux/percpu.h  29  #define get_cpu_var(var) (*({ \
put_cpu_var  macro  include/linux/percpu.h  37  #define put_cpu_var(var) do { \
get_cpu_ptr  macro  include/linux/percpu.h  42  #define get_cpu_ptr(var) ({ \
put_cpu_ptr  macro  include/linux/percpu.h  46  #define put_cpu_ptr(var) do { \
PCPU_MIN_UNIT_SIZE  macro  include/linux/percpu.h  52  #define PCPU_MIN_UNIT_SIZE PFN_ALIGN(32 << 10)
PERCPU_DYNAMIC_EARLY_SLOTS  macro  include/linux/percpu.h  61  #define PERCPU_DYNAMIC_EARLY_SLOTS 128
PERCPU_DYNAMIC_EARLY_SIZE  macro  include/linux/percpu.h  62  #define PERCPU_DYNAMIC_EARLY_SIZE (12 << 10)
PERCPU_DYNAMIC_RESERVE  macro  include/linux/percpu.h  78  #define PERCPU_DYNAMIC_RESERVE (12 << 10)
pcpu_group_info  struct  include/linux/percpu.h  84  struct pcpu_group_info {
pcpu_alloc_info  struct  include/linux/percpu.h  91  struct pcpu_alloc_info {
pcpu_fc  enum  include/linux/percpu.h  103  enum pcpu_fc {
PCPU_FC_AUTO  enumerator  include/linux/percpu.h  104  PCPU_FC_AUTO,
PCPU_FC_EMBED  enumerator  include/linux/percpu.h  105  PCPU_FC_EMBED,
PCPU_FC_PAGE  enumerator  include/linux/percpu.h  106  PCPU_FC_PAGE,
PCPU_FC_NR  enumerator  include/linux/percpu.h  108  PCPU_FC_NR,
pcpu_fc_alloc_fn_t  typedef  include/linux/percpu.h  114  typedef void * (*pcpu_fc_alloc_fn_t)(unsigned int cpu,size_t size,
pcpu_fc_free_fn_t  typedef  include/linux/percpu.h  116  typedef void (*pcpu_fc_free_fn_t)(void *ptr,size_t size);
pcpu_fc_populate_pte_fn_t  typedef  include/linux/percpu.h  117  typedef void (*pcpu_fc_populate_pte_fn_t)(unsigned long addr);
pcpu_fc_cpu_distance_fn_t  typedef  include/linux/percpu.h  118  typedef int (pcpu_fc_cpu_distance_fn_t)(unsigned int from,unsigned int to);
pcpu_alloc_alloc_info  prototype  include/linux/percpu.h  121  extern struct pcpu_alloc_info * __init pcpu_alloc_alloc_info(int nr_groups,int nr_units);
pcpu_free_alloc_info  prototype  include/linux/percpu.h  122  extern void __init pcpu_free_alloc_info(struct pcpu_alloc_info *ai);
pcpu_setup_first_chunk  prototype  include/linux/percpu.h  125  extern int __init pcpu_setup_first_chunk(const struct pcpu_alloc_info *ai,void *base_addr);
pcpu_embed_first_chunk  prototype  include/linux/percpu.h  132  extern int __init pcpu_embed_first_chunk(size_t reserved_size,size_t dyn_size,size_t atom_size,pcpu_fc_cpu_distance_fn_t cpu_distance_fn,pcpu_fc_alloc_fn_t alloc_fn,pcpu_fc_free_fn_t free_fn);
pcpu_page_first_chunk  prototype  include/linux/percpu.h  139  extern int __init pcpu_page_first_chunk(size_t reserved_size,pcpu_fc_alloc_fn_t alloc_fn,pcpu_fc_free_fn_t free_fn,pcpu_fc_populate_pte_fn_t populate_pte_fn);
per_cpu_ptr  macro  include/linux/percpu.h  150  #define per_cpu_ptr(ptr,cpu) ({ (void)(cpu); VERIFY_PERCPU_PTR((ptr)); })
__alloc_reserved_percpu  prototype  include/linux/percpu.h  153  extern void __percpu *__alloc_reserved_percpu(size_t size,size_t align);
is_kernel_percpu_address  prototype  include/linux/percpu.h  154  extern bool is_kernel_percpu_address(unsigned long addr);
setup_per_cpu_areas  prototype  include/linux/percpu.h  157  extern void __init setup_per_cpu_areas(void);
percpu_init_late  prototype  include/linux/percpu.h  159  extern void __init percpu_init_late(void);
__alloc_percpu  prototype  include/linux/percpu.h  161  extern void __percpu *__alloc_percpu(size_t size,size_t align);
free_percpu  prototype  include/linux/percpu.h  162  extern void free_percpu(void __percpu *__pdata);
per_cpu_ptr_to_phys  prototype  include/linux/percpu.h  163  extern phys_addr_t per_cpu_ptr_to_phys(void *addr);
alloc_percpu  macro  include/linux/percpu.h  165  #define alloc_percpu(type) \
__bad_size_call_parameter  prototype  include/linux/percpu.h  173  extern void __bad_size_call_parameter(void);
__pcpu_size_call_return  macro  include/linux/percpu.h  175  #define __pcpu_size_call_return(stem,variable) \
__pcpu_size_call_return2  macro  include/linux/percpu.h  189  #define __pcpu_size_call_return2(stem,variable,...) \
__pcpu_double_call_return_bool  macro  include/linux/percpu.h  212  #define __pcpu_double_call_return_bool(stem,pcp1,pcp2,...) \
__pcpu_size_call  macro  include/linux/percpu.h  231  #define __pcpu_size_call(stem,variable,...) \
_this_cpu_generic_read  macro  include/linux/percpu.h  270  #define _this_cpu_generic_read(pcp) \
this_cpu_read_1  macro  include/linux/percpu.h  280  # define this_cpu_read_1(pcp) _this_cpu_generic_read(pcp)
this_cpu_read_2  macro  include/linux/percpu.h  283  # define this_cpu_read_2(pcp) _this_cpu_generic_read(pcp)
this_cpu_read_4  macro  include/linux/percpu.h  286  # define this_cpu_read_4(pcp) _this_cpu_generic_read(pcp)
this_cpu_read_8  macro  include/linux/percpu.h  289  # define this_cpu_read_8(pcp) _this_cpu_generic_read(pcp)
this_cpu_read  macro  include/linux/percpu.h  291  # define this_cpu_read(pcp) __pcpu_size_call_return(this_cpu_read_,(pcp))
_this_cpu_generic_to_op  macro  include/linux/percpu.h  294  #define _this_cpu_generic_to_op(pcp,val,op) \
this_cpu_write_1  macro  include/linux/percpu.h  304  # define this_cpu_write_1(pcp,val) _this_cpu_generic_to_op((pcp),(val),=)
this_cpu_write_2  macro  include/linux/percpu.h  307  # define this_cpu_write_2(pcp,val) _this_cpu_generic_to_op((pcp),(val),=)
this_cpu_write_4  macro  include/linux/percpu.h  310  # define this_cpu_write_4(pcp,val) _this_cpu_generic_to_op((pcp),(val),=)
this_cpu_write_8  macro  include/linux/percpu.h  313  # define this_cpu_write_8(pcp,val) _this_cpu_generic_to_op((pcp),(val),=)
this_cpu_write  macro  include/linux/percpu.h  315  # define this_cpu_write(pcp,val) __pcpu_size_call(this_cpu_write_,(pcp),(val))
this_cpu_add_1  macro  include/linux/percpu.h  320  # define this_cpu_add_1(pcp,val) _this_cpu_generic_to_op((pcp),(val),+=)
this_cpu_add_2  macro  include/linux/percpu.h  323  # define this_cpu_add_2(pcp,val) _this_cpu_generic_to_op((pcp),(val),+=)
this_cpu_add_4  macro  include/linux/percpu.h  326  # define this_cpu_add_4(pcp,val) _this_cpu_generic_to_op((pcp),(val),+=)
this_cpu_add_8  macro  include/linux/percpu.h  329  # define this_cpu_add_8(pcp,val) _this_cpu_generic_to_op((pcp),(val),+=)
this_cpu_add  macro  include/linux/percpu.h  331  # define this_cpu_add(pcp,val) __pcpu_size_call(this_cpu_add_,(pcp),(val))
this_cpu_sub  macro  include/linux/percpu.h  335  # define this_cpu_sub(pcp,val) this_cpu_add((pcp),-(val))
this_cpu_inc  macro  include/linux/percpu.h  339  # define this_cpu_inc(pcp) this_cpu_add((pcp),1)
this_cpu_dec  macro  include/linux/percpu.h  343  # define this_cpu_dec(pcp) this_cpu_sub((pcp),1)
this_cpu_and_1  macro  include/linux/percpu.h  348  # define this_cpu_and_1(pcp,val) _this_cpu_generic_to_op((pcp),(val),&=)
this_cpu_and_2  macro  include/linux/percpu.h  351  # define this_cpu_and_2(pcp,val) _this_cpu_generic_to_op((pcp),(val),&=)
this_cpu_and_4  macro  include/linux/percpu.h  354  # define this_cpu_and_4(pcp,val) _this_cpu_generic_to_op((pcp),(val),&=)
this_cpu_and_8  macro  include/linux/percpu.h  357  # define this_cpu_and_8(pcp,val) _this_cpu_generic_to_op((pcp),(val),&=)
this_cpu_and  macro  include/linux/percpu.h  359  # define this_cpu_and(pcp,val) __pcpu_size_call(this_cpu_and_,(pcp),(val))
this_cpu_or_1  macro  include/linux/percpu.h  364  # define this_cpu_or_1(pcp,val) _this_cpu_generic_to_op((pcp),(val),|=)
this_cpu_or_2  macro  include/linux/percpu.h  367  # define this_cpu_or_2(pcp,val) _this_cpu_generic_to_op((pcp),(val),|=)
this_cpu_or_4  macro  include/linux/percpu.h  370  # define this_cpu_or_4(pcp,val) _this_cpu_generic_to_op((pcp),(val),|=)
this_cpu_or_8  macro  include/linux/percpu.h  373  # define this_cpu_or_8(pcp,val) _this_cpu_generic_to_op((pcp),(val),|=)
this_cpu_or  macro  include/linux/percpu.h  375  # define this_cpu_or(pcp,val) __pcpu_size_call(this_cpu_or_,(pcp),(val))
this_cpu_xor_1  macro  include/linux/percpu.h  380  # define this_cpu_xor_1(pcp,val) _this_cpu_generic_to_op((pcp),(val),^=)
this_cpu_xor_2  macro  include/linux/percpu.h  383  # define this_cpu_xor_2(pcp,val) _this_cpu_generic_to_op((pcp),(val),^=)
this_cpu_xor_4  macro  include/linux/percpu.h  386  # define this_cpu_xor_4(pcp,val) _this_cpu_generic_to_op((pcp),(val),^=)
this_cpu_xor_8  macro  include/linux/percpu.h  389  # define this_cpu_xor_8(pcp,val) _this_cpu_generic_to_op((pcp),(val),^=)
this_cpu_xor  macro  include/linux/percpu.h  391  # define this_cpu_xor(pcp,val) __pcpu_size_call(this_cpu_or_,(pcp),(val))
_this_cpu_generic_add_return  macro  include/linux/percpu.h  394  #define _this_cpu_generic_add_return(pcp,val) \
this_cpu_add_return_1  macro  include/linux/percpu.h  407  # define this_cpu_add_return_1(pcp,val) _this_cpu_generic_add_return(pcp,val)
this_cpu_add_return_2  macro  include/linux/percpu.h  410  # define this_cpu_add_return_2(pcp,val) _this_cpu_generic_add_return(pcp,val)
this_cpu_add_return_4  macro  include/linux/percpu.h  413  # define this_cpu_add_return_4(pcp,val) _this_cpu_generic_add_return(pcp,val)
this_cpu_add_return_8  macro  include/linux/percpu.h  416  # define this_cpu_add_return_8(pcp,val) _this_cpu_generic_add_return(pcp,val)
this_cpu_add_return  macro  include/linux/percpu.h  418  # define this_cpu_add_return(pcp,val) __pcpu_size_call_return2(this_cpu_add_return_,pcp,val)
this_cpu_sub_return  macro  include/linux/percpu.h  421  #define this_cpu_sub_return(pcp,val) this_cpu_add_return(pcp,-(val))
this_cpu_inc_return  macro  include/linux/percpu.h  422  #define this_cpu_inc_return(pcp) this_cpu_add_return(pcp,1)
this_cpu_dec_return  macro  include/linux/percpu.h  423  #define this_cpu_dec_return(pcp) this_cpu_add_return(pcp,-1)
_this_cpu_generic_xchg  macro  include/linux/percpu.h  425  #define _this_cpu_generic_xchg(pcp,nval) \
this_cpu_xchg_1  macro  include/linux/percpu.h  437  # define this_cpu_xchg_1(pcp,nval) _this_cpu_generic_xchg(pcp,nval)
this_cpu_xchg_2  macro  include/linux/percpu.h  440  # define this_cpu_xchg_2(pcp,nval) _this_cpu_generic_xchg(pcp,nval)
this_cpu_xchg_4  macro  include/linux/percpu.h  443  # define this_cpu_xchg_4(pcp,nval) _this_cpu_generic_xchg(pcp,nval)
this_cpu_xchg_8  macro  include/linux/percpu.h  446  # define this_cpu_xchg_8(pcp,nval) _this_cpu_generic_xchg(pcp,nval)
this_cpu_xchg  macro  include/linux/percpu.h  448  # define this_cpu_xchg(pcp,nval) \
_this_cpu_generic_cmpxchg  macro  include/linux/percpu.h  452  #define _this_cpu_generic_cmpxchg(pcp,oval,nval) \
this_cpu_cmpxchg_1  macro  include/linux/percpu.h  466  # define this_cpu_cmpxchg_1(pcp,oval,nval) _this_cpu_generic_cmpxchg(pcp,oval,nval)
this_cpu_cmpxchg_2  macro  include/linux/percpu.h  469  # define this_cpu_cmpxchg_2(pcp,oval,nval) _this_cpu_generic_cmpxchg(pcp,oval,nval)
this_cpu_cmpxchg_4  macro  include/linux/percpu.h  472  # define this_cpu_cmpxchg_4(pcp,oval,nval) _this_cpu_generic_cmpxchg(pcp,oval,nval)
this_cpu_cmpxchg_8  macro  include/linux/percpu.h  475  # define this_cpu_cmpxchg_8(pcp,oval,nval) _this_cpu_generic_cmpxchg(pcp,oval,nval)
this_cpu_cmpxchg  macro  include/linux/percpu.h  477  # define this_cpu_cmpxchg(pcp,oval,nval) \
_this_cpu_generic_cmpxchg_double  macro  include/linux/percpu.h  489  #define _this_cpu_generic_cmpxchg_double(pcp1,pcp2,oval1,oval2,nval1,nval2) \
this_cpu_cmpxchg_double_1  macro  include/linux/percpu.h  502  # define this_cpu_cmpxchg_double_1(pcp1,pcp2,oval1,oval2,nval1,nval2) \
this_cpu_cmpxchg_double_2  macro  include/linux/percpu.h  506  # define this_cpu_cmpxchg_double_2(pcp1,pcp2,oval1,oval2,nval1,nval2) \
this_cpu_cmpxchg_double_4  macro  include/linux/percpu.h  510  # define this_cpu_cmpxchg_double_4(pcp1,pcp2,oval1,oval2,nval1,nval2) \
this_cpu_cmpxchg_double_8  macro  include/linux/percpu.h  514  # define this_cpu_cmpxchg_double_8(pcp1,pcp2,oval1,oval2,nval1,nval2) \
this_cpu_cmpxchg_double  macro  include/linux/percpu.h  517  # define this_cpu_cmpxchg_double(pcp1,pcp2,oval1,oval2,nval1,nval2) \
__this_cpu_read_1  macro  include/linux/percpu.h  537  # define __this_cpu_read_1(pcp) (*__this_cpu_ptr(&(pcp)))
__this_cpu_read_2  macro  include/linux/percpu.h  540  # define __this_cpu_read_2(pcp) (*__this_cpu_ptr(&(pcp)))
__this_cpu_read_4  macro  include/linux/percpu.h  543  # define __this_cpu_read_4(pcp) (*__this_cpu_ptr(&(pcp)))
__this_cpu_read_8  macro  include/linux/percpu.h  546  # define __this_cpu_read_8(pcp) (*__this_cpu_ptr(&(pcp)))
__this_cpu_read  macro  include/linux/percpu.h  548  # define __this_cpu_read(pcp) __pcpu_size_call_return(__this_cpu_read_,(pcp))
__this_cpu_generic_to_op  macro  include/linux/percpu.h  551  #define __this_cpu_generic_to_op(pcp,val,op) \
__this_cpu_write_1  macro  include/linux/percpu.h  558  # define __this_cpu_write_1(pcp,val) __this_cpu_generic_to_op((pcp),(val),=)
__this_cpu_write_2  macro  include/linux/percpu.h  561  # define __this_cpu_write_2(pcp,val) __this_cpu_generic_to_op((pcp),(val),=)
__this_cpu_write_4  macro  include/linux/percpu.h  564  # define __this_cpu_write_4(pcp,val) __this_cpu_generic_to_op((pcp),(val),=)
__this_cpu_write_8  macro  include/linux/percpu.h  567  # define __this_cpu_write_8(pcp,val) __this_cpu_generic_to_op((pcp),(val),=)
__this_cpu_write  macro  include/linux/percpu.h  569  # define __this_cpu_write(pcp,val) __pcpu_size_call(__this_cpu_write_,(pcp),(val))
__this_cpu_add_1  macro  include/linux/percpu.h  574  # define __this_cpu_add_1(pcp,val) __this_cpu_generic_to_op((pcp),(val),+=)
__this_cpu_add_2  macro  include/linux/percpu.h  577  # define __this_cpu_add_2(pcp,val) __this_cpu_generic_to_op((pcp),(val),+=)
__this_cpu_add_4  macro  include/linux/percpu.h  580  # define __this_cpu_add_4(pcp,val) __this_cpu_generic_to_op((pcp),(val),+=)
__this_cpu_add_8  macro  include/linux/percpu.h  583  # define __this_cpu_add_8(pcp,val) __this_cpu_generic_to_op((pcp),(val),+=)
__this_cpu_add  macro  include/linux/percpu.h  585  # define __this_cpu_add(pcp,val) __pcpu_size_call(__this_cpu_add_,(pcp),(val))
__this_cpu_sub  macro  include/linux/percpu.h  589  # define __this_cpu_sub(pcp,val) __this_cpu_add((pcp),-(val))
__this_cpu_inc  macro  include/linux/percpu.h  593  # define __this_cpu_inc(pcp) __this_cpu_add((pcp),1)
__this_cpu_dec  macro  include/linux/percpu.h  597  # define __this_cpu_dec(pcp) __this_cpu_sub((pcp),1)
__this_cpu_and_1  macro  include/linux/percpu.h  602  # define __this_cpu_and_1(pcp,val) __this_cpu_generic_to_op((pcp),(val),&=)
__this_cpu_and_2  macro  include/linux/percpu.h  605  # define __this_cpu_and_2(pcp,val) __this_cpu_generic_to_op((pcp),(val),&=)
__this_cpu_and_4  macro  include/linux/percpu.h  608  # define __this_cpu_and_4(pcp,val) __this_cpu_generic_to_op((pcp),(val),&=)
__this_cpu_and_8  macro  include/linux/percpu.h  611  # define __this_cpu_and_8(pcp,val) __this_cpu_generic_to_op((pcp),(val),&=)
__this_cpu_and  macro  include/linux/percpu.h  613  # define __this_cpu_and(pcp,val) __pcpu_size_call(__this_cpu_and_,(pcp),(val))
__this_cpu_or_1  macro  include/linux/percpu.h  618  # define __this_cpu_or_1(pcp,val) __this_cpu_generic_to_op((pcp),(val),|=)
__this_cpu_or_2  macro  include/linux/percpu.h  621  # define __this_cpu_or_2(pcp,val) __this_cpu_generic_to_op((pcp),(val),|=)
__this_cpu_or_4  macro  include/linux/percpu.h  624  # define __this_cpu_or_4(pcp,val) __this_cpu_generic_to_op((pcp),(val),|=)
__this_cpu_or_8  macro  include/linux/percpu.h  627  # define __this_cpu_or_8(pcp,val) __this_cpu_generic_to_op((pcp),(val),|=)
__this_cpu_or  macro  include/linux/percpu.h  629  # define __this_cpu_or(pcp,val) __pcpu_size_call(__this_cpu_or_,(pcp),(val))
__this_cpu_xor_1  macro  include/linux/percpu.h  634  # define __this_cpu_xor_1(pcp,val) __this_cpu_generic_to_op((pcp),(val),^=)
__this_cpu_xor_2  macro  include/linux/percpu.h  637  # define __this_cpu_xor_2(pcp,val) __this_cpu_generic_to_op((pcp),(val),^=)
__this_cpu_xor_4  macro  include/linux/percpu.h  640  # define __this_cpu_xor_4(pcp,val) __this_cpu_generic_to_op((pcp),(val),^=)
__this_cpu_xor_8  macro  include/linux/percpu.h  643  # define __this_cpu_xor_8(pcp,val) __this_cpu_generic_to_op((pcp),(val),^=)
__this_cpu_xor  macro  include/linux/percpu.h  645  # define __this_cpu_xor(pcp,val) __pcpu_size_call(__this_cpu_xor_,(pcp),(val))
__this_cpu_generic_add_return  macro  include/linux/percpu.h  648  #define __this_cpu_generic_add_return(pcp,val) \
__this_cpu_add_return_1  macro  include/linux/percpu.h  656  # define __this_cpu_add_return_1(pcp,val) __this_cpu_generic_add_return(pcp,val)
__this_cpu_add_return_2  macro  include/linux/percpu.h  659  # define __this_cpu_add_return_2(pcp,val) __this_cpu_generic_add_return(pcp,val)
__this_cpu_add_return_4  macro  include/linux/percpu.h  662  # define __this_cpu_add_return_4(pcp,val) __this_cpu_generic_add_return(pcp,val)
__this_cpu_add_return_8  macro  include/linux/percpu.h  665  # define __this_cpu_add_return_8(pcp,val) __this_cpu_generic_add_return(pcp,val)
__this_cpu_add_return  macro  include/linux/percpu.h  667  # define __this_cpu_add_return(pcp,val) \
__this_cpu_sub_return  macro  include/linux/percpu.h  671  #define __this_cpu_sub_return(pcp,val) __this_cpu_add_return(pcp,-(val))
__this_cpu_inc_return  macro  include/linux/percpu.h  672  #define __this_cpu_inc_return(pcp) __this_cpu_add_return(pcp,1)
__this_cpu_dec_return  macro  include/linux/percpu.h  673  #define __this_cpu_dec_return(pcp) __this_cpu_add_return(pcp,-1)
__this_cpu_generic_xchg  macro  include/linux/percpu.h  675  #define __this_cpu_generic_xchg(pcp,nval) \
__this_cpu_xchg_1  macro  include/linux/percpu.h  684  # define __this_cpu_xchg_1(pcp,nval) __this_cpu_generic_xchg(pcp,nval)
__this_cpu_xchg_2  macro  include/linux/percpu.h  687  # define __this_cpu_xchg_2(pcp,nval) __this_cpu_generic_xchg(pcp,nval)
__this_cpu_xchg_4  macro  include/linux/percpu.h  690  # define __this_cpu_xchg_4(pcp,nval) __this_cpu_generic_xchg(pcp,nval)
__this_cpu_xchg_8  macro  include/linux/percpu.h  693  # define __this_cpu_xchg_8(pcp,nval) __this_cpu_generic_xchg(pcp,nval)
__this_cpu_xchg  macro  include/linux/percpu.h  695  # define __this_cpu_xchg(pcp,nval) \
__this_cpu_generic_cmpxchg  macro  include/linux/percpu.h  699  #define __this_cpu_generic_cmpxchg(pcp,oval,nval) \
__this_cpu_cmpxchg_1  macro  include/linux/percpu.h  710  # define __this_cpu_cmpxchg_1(pcp,oval,nval) __this_cpu_generic_cmpxchg(pcp,oval,nval)
__this_cpu_cmpxchg_2  macro  include/linux/percpu.h  713  # define __this_cpu_cmpxchg_2(pcp,oval,nval) __this_cpu_generic_cmpxchg(pcp,oval,nval)
__this_cpu_cmpxchg_4  macro  include/linux/percpu.h  716  # define __this_cpu_cmpxchg_4(pcp,oval,nval) __this_cpu_generic_cmpxchg(pcp,oval,nval)
__this_cpu_cmpxchg_8  macro  include/linux/percpu.h  719  # define __this_cpu_cmpxchg_8(pcp,oval,nval) __this_cpu_generic_cmpxchg(pcp,oval,nval)
__this_cpu_cmpxchg  macro  include/linux/percpu.h  721  # define __this_cpu_cmpxchg(pcp,oval,nval) \
__this_cpu_generic_cmpxchg_double  macro  include/linux/percpu.h  725  #define __this_cpu_generic_cmpxchg_double(pcp1,pcp2,oval1,oval2,nval1,nval2) \
__this_cpu_cmpxchg_double_1  macro  include/linux/percpu.h  739  # define __this_cpu_cmpxchg_double_1(pcp1,pcp2,oval1,oval2,nval1,nval2) \
__this_cpu_cmpxchg_double_2  macro  include/linux/percpu.h  743  # define __this_cpu_cmpxchg_double_2(pcp1,pcp2,oval1,oval2,nval1,nval2) \
__this_cpu_cmpxchg_double_4  macro  include/linux/percpu.h  747  # define __this_cpu_cmpxchg_double_4(pcp1,pcp2,oval1,oval2,nval1,nval2) \
__this_cpu_cmpxchg_double_8  macro  include/linux/percpu.h  751  # define __this_cpu_cmpxchg_double_8(pcp1,pcp2,oval1,oval2,nval1,nval2) \
__this_cpu_cmpxchg_double  macro  include/linux/percpu.h  754  # define __this_cpu_cmpxchg_double(pcp1,pcp2,oval1,oval2,nval1,nval2) \
_ASM_X86_MODULE_H  macro  arch/x86/include/asm/module.h  2  #define _ASM_X86_MODULE_H
MODULE_PROC_FAMILY  macro  arch/x86/include/asm/module.h  55  #define MODULE_PROC_FAMILY "GEODE "
MODULE_ARCH_VERMAGIC  macro  arch/x86/include/asm/module.h  61  # define MODULE_ARCH_VERMAGIC MODULE_PROC_FAMILY
_UAPI_LINUX_TYPES_H  macro  include/uapi/linux/types.h  2  #define _UAPI_LINUX_TYPES_H
__bitwise__  macro  include/uapi/linux/types.h  24  #define __bitwise__
__bitwise  macro  include/uapi/linux/types.h  29  #define __bitwise
__le16  typedef  include/uapi/linux/types.h  32  typedef __u16 __bitwise __le16;
__be16  typedef  include/uapi/linux/types.h  33  typedef __u16 __bitwise __be16;
__le32  typedef  include/uapi/linux/types.h  34  typedef __u32 __bitwise __le32;
__be32  typedef  include/uapi/linux/types.h  35  typedef __u32 __bitwise __be32;
__le64  typedef  include/uapi/linux/types.h  36  typedef __u64 __bitwise __le64;
__be64  typedef  include/uapi/linux/types.h  37  typedef __u64 __bitwise __be64;
__sum16  typedef  include/uapi/linux/types.h  39  typedef __u16 __bitwise __sum16;
__wsum  typedef  include/uapi/linux/types.h  40  typedef __u32 __bitwise __wsum;
__aligned_u64  macro  include/uapi/linux/types.h  51  #define __aligned_u64 __u64 __attribute__((aligned(8)))
__aligned_be64  macro  include/uapi/linux/types.h  52  #define __aligned_be64 __be64 __attribute__((aligned(8)))
__aligned_le64  macro  include/uapi/linux/types.h  53  #define __aligned_le64 __le64 __attribute__((aligned(8)))
_LINUX_LINKAGE_H  macro  include/linux/linkage.h  2  #define _LINUX_LINKAGE_H
CPP_ASMLINKAGE  macro  include/linux/linkage.h  10  #define CPP_ASMLINKAGE
asmlinkage  macro  include/linux/linkage.h  14  #define asmlinkage CPP_ASMLINKAGE
__page_aligned_data  macro  include/linux/linkage.h  17  #define __page_aligned_data __section(.data..page_aligned) __aligned(PAGE_SIZE)
__page_aligned_bss  macro  include/linux/linkage.h  18  #define __page_aligned_bss __section(.bss..page_aligned) __aligned(PAGE_SIZE)
__PAGE_ALIGNED_DATA  macro  include/linux/linkage.h  26  #define __PAGE_ALIGNED_DATA .section ".data..page_aligned","aw"
__PAGE_ALIGNED_BSS  macro  include/linux/linkage.h  27  #define __PAGE_ALIGNED_BSS .section ".bss..page_aligned","aw"
asmlinkage_protect  macro  include/linux/linkage.h  45  # define asmlinkage_protect(n,ret,args...) do { } while (0)
__ALIGN  macro  include/linux/linkage.h  50  #define __ALIGN .align 4,0x90
__ALIGN_STR  macro  include/linux/linkage.h  51  #define __ALIGN_STR ".align 4,0x90"
ALIGN_STR  macro  include/linux/linkage.h  58  #define ALIGN_STR __ALIGN_STR
ENTRY  macro  include/linux/linkage.h  61  #define ENTRY(name) \
WEAK  macro  include/linux/linkage.h  69  #define WEAK(name) \
END  macro  include/linux/linkage.h  75  #define END(name) \
ENDPROC  macro  include/linux/linkage.h  84  #define ENDPROC(name) \
_LINUX_WAIT_H  macro  include/linux/wait.h  2  #define _LINUX_WAIT_H
wait_queue_t  typedef  include/linux/wait.h  11  typedef struct __wait_queue wait_queue_t;
wait_queue_func_t  typedef  include/linux/wait.h  12  typedef int (*wait_queue_func_t)(wait_queue_t *wait,unsigned mode,int flags,void *key);
default_wake_function  prototype  include/linux/wait.h  13  int default_wake_function(wait_queue_t *wait,unsigned mode,int flags,void *key);
__wait_queue  struct  include/linux/wait.h  15  struct __wait_queue {
WQ_FLAG_EXCLUSIVE  macro  include/linux/wait.h  17  #define WQ_FLAG_EXCLUSIVE 0x01
wait_bit_key  struct  include/linux/wait.h  23  struct wait_bit_key {
wait_bit_queue  struct  include/linux/wait.h  28  struct wait_bit_queue {
__wait_queue_head  struct  include/linux/wait.h  33  struct __wait_queue_head {
wait_queue_head_t  typedef  include/linux/wait.h  37  typedef struct __wait_queue_head wait_queue_head_t;
__WAITQUEUE_INITIALIZER  macro  include/linux/wait.h  45  #define __WAITQUEUE_INITIALIZER(name,tsk) { \
DECLARE_WAITQUEUE  macro  include/linux/wait.h  50  #define DECLARE_WAITQUEUE(name,tsk) \
__WAIT_QUEUE_HEAD_INITIALIZER  macro  include/linux/wait.h  53  #define __WAIT_QUEUE_HEAD_INITIALIZER(name) { \
DECLARE_WAIT_QUEUE_HEAD  macro  include/linux/wait.h  57  #define DECLARE_WAIT_QUEUE_HEAD(name) \
__WAIT_BIT_KEY_INITIALIZER  macro  include/linux/wait.h  60  #define __WAIT_BIT_KEY_INITIALIZER(word,bit) \
__init_waitqueue_head  prototype  include/linux/wait.h  63  extern void __init_waitqueue_head(wait_queue_head_t *q,const char *name,struct lock_class_key *);
init_waitqueue_head  macro  include/linux/wait.h  65  #define init_waitqueue_head(q) \
__WAIT_QUEUE_HEAD_INIT_ONSTACK  macro  include/linux/wait.h  73  # define __WAIT_QUEUE_HEAD_INIT_ONSTACK(name) \
DECLARE_WAIT_QUEUE_HEAD_ONSTACK  macro  include/linux/wait.h  78  # define DECLARE_WAIT_QUEUE_HEAD_ONSTACK(name) DECLARE_WAIT_QUEUE_HEAD(name)
init_waitqueue_entry  function  include/linux/wait.h  81  static inline void init_waitqueue_entry(wait_queue_t *q,struct task_struct *p)
init_waitqueue_func_entry  function  include/linux/wait.h  89  static inline void init_waitqueue_func_entry(wait_queue_t *q,wait_queue_func_t func)
waitqueue_active  function  include/linux/wait.h  96  static inline int waitqueue_active(wait_queue_head_t *q)
add_wait_queue  prototype  include/linux/wait.h  101  extern void add_wait_queue(wait_queue_head_t *q,wait_queue_t *wait);
add_wait_queue_exclusive  prototype  include/linux/wait.h  102  extern void add_wait_queue_exclusive(wait_queue_head_t *q,wait_queue_t *wait);
remove_wait_queue  prototype  include/linux/wait.h  103  extern void remove_wait_queue(wait_queue_head_t *q,wait_queue_t *wait);
__add_wait_queue  function  include/linux/wait.h  105  static inline void __add_wait_queue(wait_queue_head_t *head,wait_queue_t *new)
__add_wait_queue_exclusive  function  include/linux/wait.h  114  static inline void __add_wait_queue_exclusive(wait_queue_head_t *q,wait_queue_t *wait)
__add_wait_queue_tail  function  include/linux/wait.h  121  static inline void __add_wait_queue_tail(wait_queue_head_t *head,wait_queue_t *new)
__add_wait_queue_tail_exclusive  function  include/linux/wait.h  127  static inline void __add_wait_queue_tail_exclusive(wait_queue_head_t *q,wait_queue_t *wait)
__remove_wait_queue  function  include/linux/wait.h  134  static inline void __remove_wait_queue(wait_queue_head_t *head,wait_queue_t *old)
__wake_up  prototype  include/linux/wait.h  139  void __wake_up(wait_queue_head_t *q,unsigned int mode,int nr,void *key);
__wake_up_locked_key  prototype  include/linux/wait.h  140  void __wake_up_locked_key(wait_queue_head_t *q,unsigned int mode,void *key);
__wake_up_sync_key  prototype  include/linux/wait.h  142  void __wake_up_sync_key(wait_queue_head_t *q,unsigned int mode,int nr,void *key);
__wake_up_locked  prototype  include/linux/wait.h  143  void __wake_up_locked(wait_queue_head_t *q,unsigned int mode,int nr);
__wake_up_sync  prototype  include/linux/wait.h  144  void __wake_up_sync(wait_queue_head_t *q,unsigned int mode,int nr);
__wake_up_bit  prototype  include/linux/wait.h  145  void __wake_up_bit(wait_queue_head_t *,void *,int);
__wait_on_bit  prototype  include/linux/wait.h  146  int __wait_on_bit(wait_queue_head_t *,struct wait_bit_queue *,int (*)(void *),unsigned);
__wait_on_bit_lock  prototype  include/linux/wait.h  147  int __wait_on_bit_lock(wait_queue_head_t *,struct wait_bit_queue *,int (*)(void *),unsigned);
wake_up_bit  prototype  include/linux/wait.h  148  void wake_up_bit(void *,int);
out_of_line_wait_on_bit  prototype  include/linux/wait.h  149  int out_of_line_wait_on_bit(void *,int,int (*)(void *),unsigned);
out_of_line_wait_on_bit_lock  prototype  include/linux/wait.h  150  int out_of_line_wait_on_bit_lock(void *,int,int (*)(void *),unsigned);
bit_waitqueue  prototype  include/linux/wait.h  151  wait_queue_head_t *bit_waitqueue(void *,int);
wake_up  macro  include/linux/wait.h  153  #define wake_up(x) __wake_up(x,TASK_NORMAL,1,NULL)
wake_up_nr  macro  include/linux/wait.h  154  #define wake_up_nr(x,nr) __wake_up(x,TASK_NORMAL,nr,NULL)
wake_up_all  macro  include/linux/wait.h  155  #define wake_up_all(x) __wake_up(x,TASK_NORMAL,0,NULL)
wake_up_locked  macro  include/linux/wait.h  156  #define wake_up_locked(x) __wake_up_locked((x),TASK_NORMAL,1)
wake_up_all_locked  macro  include/linux/wait.h  157  #define wake_up_all_locked(x) __wake_up_locked((x),TASK_NORMAL,0)
wake_up_interruptible  macro  include/linux/wait.h  159  #define wake_up_interruptible(x) __wake_up(x,TASK_INTERRUPTIBLE,1,NULL)
wake_up_interruptible_nr  macro  include/linux/wait.h  160  #define wake_up_interruptible_nr(x,nr) __wake_up(x,TASK_INTERRUPTIBLE,nr,NULL)
wake_up_interruptible_all  macro  include/linux/wait.h  161  #define wake_up_interruptible_all(x) __wake_up(x,TASK_INTERRUPTIBLE,0,NULL)
wake_up_interruptible_sync  macro  include/linux/wait.h  162  #define wake_up_interruptible_sync(x) __wake_up_sync((x),TASK_INTERRUPTIBLE,1)
wake_up_poll  macro  include/linux/wait.h  167  #define wake_up_poll(x,m) \
wake_up_locked_poll  macro  include/linux/wait.h  169  #define wake_up_locked_poll(x,m) \
wake_up_interruptible_poll  macro  include/linux/wait.h  171  #define wake_up_interruptible_poll(x,m) \
wake_up_interruptible_sync_poll  macro  include/linux/wait.h  173  #define wake_up_interruptible_sync_poll(x,m) \
__wait_event  macro  include/linux/wait.h  176  #define __wait_event(wq,condition) \
wait_event  macro  include/linux/wait.h  201  #define wait_event(wq,condition) \
__wait_event_timeout  macro  include/linux/wait.h  208  #define __wait_event_timeout(wq,condition,ret) \
wait_event_timeout  macro  include/linux/wait.h  239  #define wait_event_timeout(wq,condition,timeout) \
__wait_event_interruptible  macro  include/linux/wait.h  247  #define __wait_event_interruptible(wq,condition,ret) \
wait_event_interruptible  macro  include/linux/wait.h  280  #define wait_event_interruptible(wq,condition) \
__wait_event_interruptible_timeout  macro  include/linux/wait.h  288  #define __wait_event_interruptible_timeout(wq,condition,ret) \
wait_event_interruptible_timeout  macro  include/linux/wait.h  325  #define wait_event_interruptible_timeout(wq,condition,timeout) \
__wait_event_interruptible_exclusive  macro  include/linux/wait.h  333  #define __wait_event_interruptible_exclusive(wq,condition,ret) \
wait_event_interruptible_exclusive  macro  include/linux/wait.h  355  #define wait_event_interruptible_exclusive(wq,condition) \
__wait_event_interruptible_locked  macro  include/linux/wait.h  364  #define __wait_event_interruptible_locked(wq,condition,exclusive,irq) \
wait_event_interruptible_locked  macro  include/linux/wait.h  417  #define wait_event_interruptible_locked(wq,condition) \
wait_event_interruptible_locked_irq  macro  include/linux/wait.h  444  #define wait_event_interruptible_locked_irq(wq,condition) \
wait_event_interruptible_exclusive_locked  macro  include/linux/wait.h  475  #define wait_event_interruptible_exclusive_locked(wq,condition) \
wait_event_interruptible_exclusive_locked_irq  macro  include/linux/wait.h  506  #define wait_event_interruptible_exclusive_locked_irq(wq,condition) \
__wait_event_killable  macro  include/linux/wait.h  512  #define __wait_event_killable(wq,condition,ret) \
wait_event_killable  macro  include/linux/wait.h  545  #define wait_event_killable(wq,condition) \
__wait_event_lock_irq  macro  include/linux/wait.h  554  #define __wait_event_lock_irq(wq,condition,lock,cmd) \
wait_event_lock_irq_cmd  macro  include/linux/wait.h  593  #define wait_event_lock_irq_cmd(wq,condition,lock,cmd) \
wait_event_lock_irq  macro  include/linux/wait.h  620  #define wait_event_lock_irq(wq,condition,lock) \
__wait_event_interruptible_lock_irq  macro  include/linux/wait.h  628  #define __wait_event_interruptible_lock_irq(wq,condition,\
wait_event_interruptible_lock_irq_cmd  macro  include/linux/wait.h  674  #define wait_event_interruptible_lock_irq_cmd(wq,condition,lock,cmd) \
wait_event_interruptible_lock_irq  macro  include/linux/wait.h  706  #define wait_event_interruptible_lock_irq(wq,condition,lock) \
sleep_on  prototype  include/linux/wait.h  722  extern void sleep_on(wait_queue_head_t *q);
sleep_on_timeout  prototype  include/linux/wait.h  724  extern long sleep_on_timeout(wait_queue_head_t *q,signed long timeout);
interruptible_sleep_on  prototype  include/linux/wait.h  725  extern void interruptible_sleep_on(wait_queue_head_t *q);
interruptible_sleep_on_timeout  prototype  include/linux/wait.h  727  extern long interruptible_sleep_on_timeout(wait_queue_head_t *q,signed long timeout);
prepare_to_wait  prototype  include/linux/wait.h  732  void prepare_to_wait(wait_queue_head_t *q,wait_queue_t *wait,int state);
prepare_to_wait_exclusive  prototype  include/linux/wait.h  733  void prepare_to_wait_exclusive(wait_queue_head_t *q,wait_queue_t *wait,int state);
finish_wait  prototype  include/linux/wait.h  734  void finish_wait(wait_queue_head_t *q,wait_queue_t *wait);
abort_exclusive_wait  prototype  include/linux/wait.h  736  void abort_exclusive_wait(wait_queue_head_t *q,wait_queue_t *wait,unsigned int mode, void *key);
autoremove_wake_function  prototype  include/linux/wait.h  737  int autoremove_wake_function(wait_queue_t *wait,unsigned mode,int sync,void *key);
wake_bit_function  prototype  include/linux/wait.h  738  int wake_bit_function(wait_queue_t *wait,unsigned mode,int sync,void *key);
DEFINE_WAIT_FUNC  macro  include/linux/wait.h  740  #define DEFINE_WAIT_FUNC(name,function) \
DEFINE_WAIT  macro  include/linux/wait.h  747  #define DEFINE_WAIT(name) DEFINE_WAIT_FUNC(name,autoremove_wake_function)
DEFINE_WAIT_BIT  macro  include/linux/wait.h  749  #define DEFINE_WAIT_BIT(name,word,bit) \
init_wait  macro  include/linux/wait.h  760  #define init_wait(wait) \
wait_on_bit  function  include/linux/wait.h  783  static inline int wait_on_bit(void *word,int bit,int (*action)(void *), unsigned mode)
wait_on_bit_lock  function  include/linux/wait.h  807  static inline int wait_on_bit_lock(void *word,int bit,int (*action)(void *), unsigned mode)
_LINUX_KDEV_T_H  macro  include/linux/kdev_t.h  2  #define _LINUX_KDEV_T_H
MINORBITS  macro  include/linux/kdev_t.h  6  #define MINORBITS 20
MINORMASK  macro  include/linux/kdev_t.h  7  #define MINORMASK ((1U << MINORBITS) - 1)
MAJOR  macro  include/linux/kdev_t.h  9  #define MAJOR(dev) ((unsigned int) ((dev) >> MINORBITS))
MINOR  macro  include/linux/kdev_t.h  10  #define MINOR(dev) ((unsigned int) ((dev) & MINORMASK))
MKDEV  macro  include/linux/kdev_t.h  11  #define MKDEV(ma,mi) (((ma) << MINORBITS) | (mi))
print_dev_t  macro  include/linux/kdev_t.h  13  #define print_dev_t(buffer,dev) \
format_dev_t  macro  include/linux/kdev_t.h  16  #define format_dev_t(buffer,dev) \
old_valid_dev  function  include/linux/kdev_t.h  23  static inline int old_valid_dev(dev_t dev)
old_encode_dev  function  include/linux/kdev_t.h  28  static inline u16 old_encode_dev(dev_t dev)
old_decode_dev  function  include/linux/kdev_t.h  33  static inline dev_t old_decode_dev(u16 val)
new_valid_dev  function  include/linux/kdev_t.h  38  static inline int new_valid_dev(dev_t dev)
new_encode_dev  function  include/linux/kdev_t.h  43  static inline u32 new_encode_dev(dev_t dev)
new_decode_dev  function  include/linux/kdev_t.h  50  static inline dev_t new_decode_dev(u32 dev)
huge_valid_dev  function  include/linux/kdev_t.h  57  static inline int huge_valid_dev(dev_t dev)
huge_encode_dev  function  include/linux/kdev_t.h  62  static inline u64 huge_encode_dev(dev_t dev)
huge_decode_dev  function  include/linux/kdev_t.h  67  static inline dev_t huge_decode_dev(u64 dev)
sysv_valid_dev  function  include/linux/kdev_t.h  72  static inline int sysv_valid_dev(dev_t dev)
sysv_encode_dev  function  include/linux/kdev_t.h  77  static inline u32 sysv_encode_dev(dev_t dev)
sysv_major  function  include/linux/kdev_t.h  82  static inline unsigned sysv_major(u32 dev)
sysv_minor  function  include/linux/kdev_t.h  87  static inline unsigned sysv_minor(u32 dev)
__LINUX_DCACHE_H  macro  include/linux/dcache.h  2  #define __LINUX_DCACHE_H
IS_ROOT  macro  include/linux/dcache.h  26  #define IS_ROOT(x) ((x) == (x)->d_parent)
HASH_LEN_DECLARE  macro  include/linux/dcache.h  32  #define HASH_LEN_DECLARE u32 len; u32 hash;
qstr  struct  include/linux/dcache.h  42  struct qstr {
QSTR_INIT  macro  include/linux/dcache.h  52  #define QSTR_INIT(n,l) { { { .len = l } },.name = n }
hashlen_hash  macro  include/linux/dcache.h  53  #define hashlen_hash(hashlen) ((u32) (hashlen))
hashlen_len  macro  include/linux/dcache.h  54  #define hashlen_len(hashlen) ((u32)((hashlen) >> 32))
dentry_stat_t  struct  include/linux/dcache.h  56  struct dentry_stat_t {
init_name_hash  macro  include/linux/dcache.h  67  #define init_name_hash() 0
partial_name_hash  function  include/linux/dcache.h  71  partial_name_hash(unsigned long c,unsigned long prevhash)
end_name_hash  function  include/linux/dcache.h  80  static inline unsigned long end_name_hash(unsigned long hash)
full_name_hash  prototype  include/linux/dcache.h  86  extern unsigned int full_name_hash(const unsigned char *,unsigned int);
DNAME_INLINE_LEN  macro  include/linux/dcache.h  99  # define DNAME_INLINE_LEN 40
dentry  struct  include/linux/dcache.h  103  struct dentry {
dentry_d_lock_class  enum  include/linux/dcache.h  140  enum dentry_d_lock_class
DENTRY_D_LOCK_NORMAL  enumerator  include/linux/dcache.h  142  DENTRY_D_LOCK_NORMAL,
DENTRY_D_LOCK_NESTED  enumerator  include/linux/dcache.h  143  DENTRY_D_LOCK_NESTED
dentry_operations  struct  include/linux/dcache.h  146  struct dentry_operations {
DCACHE_OP_HASH  macro  include/linux/dcache.h  171  #define DCACHE_OP_HASH 0x0001
DCACHE_OP_COMPARE  macro  include/linux/dcache.h  172  #define DCACHE_OP_COMPARE 0x0002
DCACHE_OP_REVALIDATE  macro  include/linux/dcache.h  173  #define DCACHE_OP_REVALIDATE 0x0004
DCACHE_OP_DELETE  macro  include/linux/dcache.h  174  #define DCACHE_OP_DELETE 0x0008
DCACHE_OP_PRUNE  macro  include/linux/dcache.h  175  #define DCACHE_OP_PRUNE 0x0010
DCACHE_DISCONNECTED  macro  include/linux/dcache.h  177  #define DCACHE_DISCONNECTED 0x0020
DCACHE_REFERENCED  macro  include/linux/dcache.h  188  #define DCACHE_REFERENCED 0x0040
DCACHE_RCUACCESS  macro  include/linux/dcache.h  189  #define DCACHE_RCUACCESS 0x0080
DCACHE_CANT_MOUNT  macro  include/linux/dcache.h  191  #define DCACHE_CANT_MOUNT 0x0100
DCACHE_GENOCIDE  macro  include/linux/dcache.h  192  #define DCACHE_GENOCIDE 0x0200
DCACHE_SHRINK_LIST  macro  include/linux/dcache.h  193  #define DCACHE_SHRINK_LIST 0x0400
DCACHE_NFSFS_RENAMED  macro  include/linux/dcache.h  195  #define DCACHE_NFSFS_RENAMED 0x1000
DCACHE_COOKIE  macro  include/linux/dcache.h  198  #define DCACHE_COOKIE 0x2000
DCACHE_FSNOTIFY_PARENT_WATCHED  macro  include/linux/dcache.h  199  #define DCACHE_FSNOTIFY_PARENT_WATCHED 0x4000
DCACHE_MOUNTED  macro  include/linux/dcache.h  202  #define DCACHE_MOUNTED 0x10000
DCACHE_NEED_AUTOMOUNT  macro  include/linux/dcache.h  203  #define DCACHE_NEED_AUTOMOUNT 0x20000
DCACHE_MANAGE_TRANSIT  macro  include/linux/dcache.h  204  #define DCACHE_MANAGE_TRANSIT 0x40000
DCACHE_MANAGED_DENTRY  macro  include/linux/dcache.h  205  #define DCACHE_MANAGED_DENTRY \
DCACHE_DENTRY_KILLED  macro  include/linux/dcache.h  208  #define DCACHE_DENTRY_KILLED 0x100000
dname_external  function  include/linux/dcache.h  212  static inline int dname_external(struct dentry *dentry)
d_instantiate  prototype  include/linux/dcache.h  220  extern void d_instantiate(struct dentry *,struct inode *);
d_instantiate_unique  prototype  include/linux/dcache.h  221  extern struct dentry * d_instantiate_unique(struct dentry *,struct inode *);
d_materialise_unique  prototype  include/linux/dcache.h  222  extern struct dentry * d_materialise_unique(struct dentry *,struct inode *);
__d_drop  prototype  include/linux/dcache.h  223  extern void __d_drop(struct dentry *dentry);
d_drop  prototype  include/linux/dcache.h  224  extern void d_drop(struct dentry *dentry);
d_delete  prototype  include/linux/dcache.h  225  extern void d_delete(struct dentry *);
d_set_d_op  prototype  include/linux/dcache.h  226  extern void d_set_d_op(struct dentry *dentry,const struct dentry_operations *op);
d_alloc  prototype  include/linux/dcache.h  229  extern struct dentry * d_alloc(struct dentry *,const struct qstr *);
d_alloc_pseudo  prototype  include/linux/dcache.h  230  extern struct dentry * d_alloc_pseudo(struct super_block *,const struct qstr *);
d_splice_alias  prototype  include/linux/dcache.h  231  extern struct dentry * d_splice_alias(struct inode *,struct dentry *);
d_add_ci  prototype  include/linux/dcache.h  232  extern struct dentry * d_add_ci(struct dentry *,struct inode *,struct qstr *);
d_find_any_alias  prototype  include/linux/dcache.h  233  extern struct dentry *d_find_any_alias(struct inode *inode);
d_obtain_alias  prototype  include/linux/dcache.h  234  extern struct dentry * d_obtain_alias(struct inode *);
shrink_dcache_sb  prototype  include/linux/dcache.h  235  extern void shrink_dcache_sb(struct super_block *);
shrink_dcache_parent  prototype  include/linux/dcache.h  236  extern void shrink_dcache_parent(struct dentry *);
shrink_dcache_for_umount  prototype  include/linux/dcache.h  237  extern void shrink_dcache_for_umount(struct super_block *);
d_invalidate  prototype  include/linux/dcache.h  238  extern int d_invalidate(struct dentry *);
d_make_root  prototype  include/linux/dcache.h  241  extern struct dentry * d_make_root(struct inode *);
d_genocide  prototype  include/linux/dcache.h  244  extern void d_genocide(struct dentry *);
d_find_alias  prototype  include/linux/dcache.h  246  extern struct dentry *d_find_alias(struct inode *);
d_prune_aliases  prototype  include/linux/dcache.h  247  extern void d_prune_aliases(struct inode *);
have_submounts  prototype  include/linux/dcache.h  250  extern int have_submounts(struct dentry *);
d_rehash  prototype  include/linux/dcache.h  255  extern void d_rehash(struct dentry *);
d_add  function  include/linux/dcache.h  266  static inline void d_add(struct dentry *entry,struct inode *inode)
d_add_unique  function  include/linux/dcache.h  280  static inline struct dentry *d_add_unique(struct dentry *entry,struct inode *inode)
dentry_update_name_case  prototype  include/linux/dcache.h  289  extern void dentry_update_name_case(struct dentry *,struct qstr *);
d_move  prototype  include/linux/dcache.h  292  extern void d_move(struct dentry *,struct dentry *);
d_ancestor  prototype  include/linux/dcache.h  293  extern struct dentry *d_ancestor(struct dentry *,struct dentry *);
d_lookup  prototype  include/linux/dcache.h  296  extern struct dentry *d_lookup(struct dentry *,struct qstr *);
d_hash_and_lookup  prototype  include/linux/dcache.h  297  extern struct dentry *d_hash_and_lookup(struct dentry *,struct qstr *);
__d_lookup  prototype  include/linux/dcache.h  298  extern struct dentry *__d_lookup(struct dentry *,struct qstr *);
__d_lookup_rcu  prototype  include/linux/dcache.h  301  extern struct dentry *__d_lookup_rcu(const struct dentry *parent,const struct qstr *name,unsigned *seq, struct inode *inode);
__d_rcu_to_refcount  function  include/linux/dcache.h  312  static inline int __d_rcu_to_refcount(struct dentry *dentry,unsigned seq)
d_validate  prototype  include/linux/dcache.h  326  extern int d_validate(struct dentry *,struct dentry *);
dynamic_dname  prototype  include/linux/dcache.h  331  extern char *dynamic_dname(struct dentry *,char *,int,const char *,...);
__d_path  prototype  include/linux/dcache.h  333  extern char *__d_path(const struct path *,const struct path *,char *,int);
d_absolute_path  prototype  include/linux/dcache.h  334  extern char *d_absolute_path(const struct path *,char *,int);
d_path  prototype  include/linux/dcache.h  335  extern char *d_path(const struct path *,char *,int);
d_path_with_unreachable  prototype  include/linux/dcache.h  336  extern char *d_path_with_unreachable(const struct path *,char *,int);
dentry_path_raw  prototype  include/linux/dcache.h  337  extern char *dentry_path_raw(struct dentry *,char *,int);
dentry_path  prototype  include/linux/dcache.h  338  extern char *dentry_path(struct dentry *,char *,int);
dget_dlock  function  include/linux/dcache.h  350  static inline struct dentry *dget_dlock(struct dentry *dentry)
dget  function  include/linux/dcache.h  357  static inline struct dentry *dget(struct dentry *dentry)
dget_parent  prototype  include/linux/dcache.h  367  extern struct dentry *dget_parent(struct dentry *dentry);
d_unhashed  function  include/linux/dcache.h  376  static inline int d_unhashed(struct dentry *dentry)
d_unlinked  function  include/linux/dcache.h  381  static inline int d_unlinked(struct dentry *dentry)
cant_mount  function  include/linux/dcache.h  386  static inline int cant_mount(struct dentry *dentry)
dont_mount  function  include/linux/dcache.h  391  static inline void dont_mount(struct dentry *dentry)
dput  prototype  include/linux/dcache.h  398  extern void dput(struct dentry *);
d_managed  function  include/linux/dcache.h  400  static inline bool d_managed(struct dentry *dentry)
d_mountpoint  function  include/linux/dcache.h  405  static inline bool d_mountpoint(struct dentry *dentry)
_LINUX_PATH_H  macro  include/linux/path.h  2  #define _LINUX_PATH_H
path  struct  include/linux/path.h  7  struct path {
path_get  prototype  include/linux/path.h  12  extern void path_get(struct path *);
path_put  prototype  include/linux/path.h  13  extern void path_put(struct path *);
path_equal  function  include/linux/path.h  15  static inline int path_equal(const struct path *path1,const struct path *path2)
_LINUX_RADIX_TREE_H  macro  include/linux/radix-tree.h  22  #define _LINUX_RADIX_TREE_H
RADIX_TREE_INDIRECT_PTR  macro  include/linux/radix-tree.h  44  #define RADIX_TREE_INDIRECT_PTR 1
RADIX_TREE_EXCEPTIONAL_ENTRY  macro  include/linux/radix-tree.h  51  #define RADIX_TREE_EXCEPTIONAL_ENTRY 2
RADIX_TREE_EXCEPTIONAL_SHIFT  macro  include/linux/radix-tree.h  52  #define RADIX_TREE_EXCEPTIONAL_SHIFT 2
radix_tree_is_indirect_ptr  function  include/linux/radix-tree.h  54  static inline int radix_tree_is_indirect_ptr(void *ptr)
RADIX_TREE_MAX_TAGS  macro  include/linux/radix-tree.h  61  #define RADIX_TREE_MAX_TAGS 3
radix_tree_root  struct  include/linux/radix-tree.h  64  struct radix_tree_root {
RADIX_TREE_INIT  macro  include/linux/radix-tree.h  70  #define RADIX_TREE_INIT(mask) { \
RADIX_TREE  macro  include/linux/radix-tree.h  76  #define RADIX_TREE(name,mask) \
INIT_RADIX_TREE  macro  include/linux/radix-tree.h  79  #define INIT_RADIX_TREE(root,mask) \
radix_tree_deref_slot  function  include/linux/radix-tree.h  150  static inline void *radix_tree_deref_slot(void **pslot)
radix_tree_deref_slot_protected  function  include/linux/radix-tree.h  166  static inline void *radix_tree_deref_slot_protected(void **pslot,spinlock_t *treelock)
radix_tree_deref_retry  function  include/linux/radix-tree.h  178  static inline int radix_tree_deref_retry(void *arg)
radix_tree_exceptional_entry  function  include/linux/radix-tree.h  188  static inline int radix_tree_exceptional_entry(void *arg)
radix_tree_exception  function  include/linux/radix-tree.h  199  static inline int radix_tree_exception(void *arg)
radix_tree_replace_slot  function  include/linux/radix-tree.h  213  static inline void radix_tree_replace_slot(void **pslot,void *item)
radix_tree_insert  prototype  include/linux/radix-tree.h  219  int radix_tree_insert(struct radix_tree_root *,unsigned long,void *);
radix_tree_lookup  prototype  include/linux/radix-tree.h  220  void *radix_tree_lookup(struct radix_tree_root *,unsigned long);
radix_tree_lookup_slot  prototype  include/linux/radix-tree.h  221  void **radix_tree_lookup_slot(struct radix_tree_root *,unsigned long);
radix_tree_delete  prototype  include/linux/radix-tree.h  222  void *radix_tree_delete(struct radix_tree_root *,unsigned long);
radix_tree_gang_lookup  prototype  include/linux/radix-tree.h  225  radix_tree_gang_lookup(struct radix_tree_root *root,void **results,unsigned long first_index, unsigned int max_items);
radix_tree_gang_lookup_slot  prototype  include/linux/radix-tree.h  228  unsigned int radix_tree_gang_lookup_slot(struct radix_tree_root *root,void ***results, unsigned long *indices,unsigned long first_index, unsigned int max_items);
radix_tree_next_hole  prototype  include/linux/radix-tree.h  230  unsigned long radix_tree_next_hole(struct radix_tree_root *root,unsigned long index, unsigned long max_scan);
radix_tree_prev_hole  prototype  include/linux/radix-tree.h  232  unsigned long radix_tree_prev_hole(struct radix_tree_root *root,unsigned long index, unsigned long max_scan);
radix_tree_preload  prototype  include/linux/radix-tree.h  233  int radix_tree_preload(gfp_t gfp_mask);
radix_tree_init  prototype  include/linux/radix-tree.h  234  void radix_tree_init(void);
radix_tree_tag_set  prototype  include/linux/radix-tree.h  236  void *radix_tree_tag_set(struct radix_tree_root *root,unsigned long index, unsigned int tag);
radix_tree_tag_clear  prototype  include/linux/radix-tree.h  238  void *radix_tree_tag_clear(struct radix_tree_root *root,unsigned long index, unsigned int tag);
radix_tree_tag_get  prototype  include/linux/radix-tree.h  240  int radix_tree_tag_get(struct radix_tree_root *root,unsigned long index, unsigned int tag);
radix_tree_gang_lookup_tag  prototype  include/linux/radix-tree.h  244  radix_tree_gang_lookup_tag(struct radix_tree_root *root,void **results,unsigned long first_index, unsigned int max_items,unsigned int tag);
radix_tree_gang_lookup_tag_slot  prototype  include/linux/radix-tree.h  248  radix_tree_gang_lookup_tag_slot(struct radix_tree_root *root,void ***results,unsigned long first_index, unsigned int max_items,unsigned int tag);
radix_tree_range_tag_if_tagged  prototype  include/linux/radix-tree.h  252  unsigned long radix_tree_range_tag_if_tagged(struct radix_tree_root *root,unsigned long *first_indexp, unsigned long last_index,unsigned long nr_to_tag,unsigned int fromtag, unsigned int totag);
radix_tree_tagged  prototype  include/linux/radix-tree.h  253  int radix_tree_tagged(struct radix_tree_root *root,unsigned int tag);
radix_tree_locate_item  prototype  include/linux/radix-tree.h  254  unsigned long radix_tree_locate_item(struct radix_tree_root *root,void *item);
radix_tree_preload_end  function  include/linux/radix-tree.h  256  static inline void radix_tree_preload_end(void)
radix_tree_iter  struct  include/linux/radix-tree.h  275  struct radix_tree_iter {
RADIX_TREE_ITER_TAG_MASK  macro  include/linux/radix-tree.h  281  #define RADIX_TREE_ITER_TAG_MASK 0x00FF
RADIX_TREE_ITER_TAGGED  macro  include/linux/radix-tree.h  282  #define RADIX_TREE_ITER_TAGGED 0x0100
RADIX_TREE_ITER_CONTIG  macro  include/linux/radix-tree.h  283  #define RADIX_TREE_ITER_CONTIG 0x0200
radix_tree_iter_init  function  include/linux/radix-tree.h  293  radix_tree_iter_init(struct radix_tree_iter *iter,unsigned long start)
radix_tree_next_chunk  prototype  include/linux/radix-tree.h  322  void **radix_tree_next_chunk(struct radix_tree_root *root,struct radix_tree_iter *iter, unsigned flags);
radix_tree_chunk_size  function  include/linux/radix-tree.h  331  radix_tree_chunk_size(struct radix_tree_iter *iter)
radix_tree_next_slot  function  include/linux/radix-tree.h  348  radix_tree_next_slot(void **slot,struct radix_tree_iter *iter,unsigned flags)
radix_tree_for_each_chunk  macro  include/linux/radix-tree.h  392  #define radix_tree_for_each_chunk(slot,root,iter,start,flags) \
radix_tree_for_each_chunk_slot  macro  include/linux/radix-tree.h  406  #define radix_tree_for_each_chunk_slot(slot,iter,flags) \
radix_tree_for_each_slot  macro  include/linux/radix-tree.h  419  #define radix_tree_for_each_slot(slot,root,iter,start) \
radix_tree_for_each_contig  macro  include/linux/radix-tree.h  434  #define radix_tree_for_each_contig(slot,root,iter,start) \
radix_tree_for_each_tagged  macro  include/linux/radix-tree.h  452  #define radix_tree_for_each_tagged(slot,root,iter,start,tag) \
_LINUX_RBTREE_H  macro  include/linux/rbtree.h  30  #define _LINUX_RBTREE_H
rb_node  struct  include/linux/rbtree.h  35  struct rb_node {
rb_root  struct  include/linux/rbtree.h  42  struct rb_root {
rb_parent  macro  include/linux/rbtree.h  47  #define rb_parent(r) ((struct rb_node *)((r)->__rb_parent_color & ~3))
RB_ROOT  macro  include/linux/rbtree.h  49  #define RB_ROOT (struct rb_root) { NULL,}
rb_entry  macro  include/linux/rbtree.h  50  #define rb_entry(ptr,type,member) container_of(ptr,type,member)
RB_EMPTY_ROOT  macro  include/linux/rbtree.h  52  #define RB_EMPTY_ROOT(root) ((root)->rb_node == NULL)
RB_EMPTY_NODE  macro  include/linux/rbtree.h  55  #define RB_EMPTY_NODE(node) \
RB_CLEAR_NODE  macro  include/linux/rbtree.h  57  #define RB_CLEAR_NODE(node) \
rb_insert_color  prototype  include/linux/rbtree.h  61  extern void rb_insert_color(struct rb_node *,struct rb_root *);
rb_erase  prototype  include/linux/rbtree.h  62  extern void rb_erase(struct rb_node *,struct rb_root *);
rb_next  prototype  include/linux/rbtree.h  66  extern struct rb_node *rb_next(const struct rb_node *);
rb_prev  prototype  include/linux/rbtree.h  67  extern struct rb_node *rb_prev(const struct rb_node *);
rb_first  prototype  include/linux/rbtree.h  68  extern struct rb_node *rb_first(const struct rb_root *);
rb_last  prototype  include/linux/rbtree.h  69  extern struct rb_node *rb_last(const struct rb_root *);
rb_replace_node  prototype  include/linux/rbtree.h  73  extern void rb_replace_node(struct rb_node *victim,struct rb_node *new,struct rb_root *root);
rb_link_node  function  include/linux/rbtree.h  76  static inline void rb_link_node(struct rb_node * node,struct rb_node * parent,struct rb_node ** rb_link)
_LINUX_PID_H  macro  include/linux/pid.h  2  #define _LINUX_PID_H
pid_type  enum  include/linux/pid.h  6  enum pid_type
PIDTYPE_PID  enumerator  include/linux/pid.h  8  PIDTYPE_PID,
PIDTYPE_PGID  enumerator  include/linux/pid.h  9  PIDTYPE_PGID,
PIDTYPE_SID  enumerator  include/linux/pid.h  10  PIDTYPE_SID,
PIDTYPE_MAX  enumerator  include/linux/pid.h  11  PIDTYPE_MAX
upid  struct  include/linux/pid.h  50  struct upid {
pid  struct  include/linux/pid.h  57  struct pid
pid_link  struct  include/linux/pid.h  69  struct pid_link
get_pid  function  include/linux/pid.h  75  static inline struct pid *get_pid(struct pid *pid)
put_pid  prototype  include/linux/pid.h  82  extern void put_pid(struct pid *pid);
pid_task  prototype  include/linux/pid.h  83  extern struct task_struct *pid_task(struct pid *pid,enum pid_type);
get_pid_task  prototype  include/linux/pid.h  84  extern struct task_struct *get_pid_task(struct pid *pid,enum pid_type);
get_task_pid  prototype  include/linux/pid.h  86  extern struct pid *get_task_pid(struct task_struct *task,enum pid_type type);
attach_pid  prototype  include/linux/pid.h  93  extern void attach_pid(struct task_struct *task,enum pid_type type,struct pid *pid);
detach_pid  prototype  include/linux/pid.h  94  extern void detach_pid(struct task_struct *task,enum pid_type);
change_pid  prototype  include/linux/pid.h  96  extern void change_pid(struct task_struct *task,enum pid_type,struct pid *pid);
transfer_pid  prototype  include/linux/pid.h  98  extern void transfer_pid(struct task_struct *old,struct task_struct *new,enum pid_type);
find_pid_ns  prototype  include/linux/pid.h  112  extern struct pid *find_pid_ns(int nr,struct pid_namespace *ns);
find_vpid  prototype  include/linux/pid.h  113  extern struct pid *find_vpid(int nr);
find_get_pid  prototype  include/linux/pid.h  118  extern struct pid *find_get_pid(int nr);
find_ge_pid  prototype  include/linux/pid.h  119  extern struct pid *find_ge_pid(int nr,struct pid_namespace *);
next_pidmap  prototype  include/linux/pid.h  120  int next_pidmap(struct pid_namespace *pid_ns,unsigned int last);
alloc_pid  prototype  include/linux/pid.h  122  extern struct pid *alloc_pid(struct pid_namespace *ns);
free_pid  prototype  include/linux/pid.h  123  extern void free_pid(struct pid *pid);
disable_pid_allocation  prototype  include/linux/pid.h  124  extern void disable_pid_allocation(struct pid_namespace *ns);
ns_of_pid  function  include/linux/pid.h  136  static inline struct pid_namespace *ns_of_pid(struct pid *pid)
is_child_reaper  function  include/linux/pid.h  150  static inline bool is_child_reaper(struct pid *pid)
pid_nr  function  include/linux/pid.h  166  static inline pid_t pid_nr(struct pid *pid)
pid_nr_ns  prototype  include/linux/pid.h  174  pid_t pid_nr_ns(struct pid *pid,struct pid_namespace *ns);
pid_vnr  prototype  include/linux/pid.h  175  pid_t pid_vnr(struct pid *pid);
do_each_pid_task  macro  include/linux/pid.h  177  #define do_each_pid_task(pid,type,task) \
while_each_pid_task  macro  include/linux/pid.h  188  #define while_each_pid_task(pid,type,task) \
do_each_pid_thread  macro  include/linux/pid.h  194  #define do_each_pid_thread(pid,type,task) \
while_each_pid_thread  macro  include/linux/pid.h  199  #define while_each_pid_thread(pid,type,task) \
_LINUX_BUG_H  macro  include/linux/bug.h  2  #define _LINUX_BUG_H
bug_trap_type  enum  include/linux/bug.h  6  enum bug_trap_type {
BUG_TRAP_TYPE_NONE  enumerator  include/linux/bug.h  7  BUG_TRAP_TYPE_NONE = 0,
BUG_TRAP_TYPE_WARN  enumerator  include/linux/bug.h  8  BUG_TRAP_TYPE_WARN = 1,
BUG_TRAP_TYPE_BUG  enumerator  include/linux/bug.h  9  BUG_TRAP_TYPE_BUG = 2,
BUILD_BUG_ON_NOT_POWER_OF_2  macro  include/linux/bug.h  24  #define BUILD_BUG_ON_NOT_POWER_OF_2(n) \
BUILD_BUG_ON_ZERO  macro  include/linux/bug.h  31  #define BUILD_BUG_ON_ZERO(e) (sizeof(struct { int:-!!(e); }))
BUILD_BUG_ON_NULL  macro  include/linux/bug.h  32  #define BUILD_BUG_ON_NULL(e) ((void *)sizeof(struct { int:-!!(e); }))
BUILD_BUG_ON_INVALID  macro  include/linux/bug.h  39  #define BUILD_BUG_ON_INVALID(e) ((void)(sizeof((__force long)(e))))
BUILD_BUG_ON  macro  include/linux/bug.h  60  #define BUILD_BUG_ON(condition) \
BUILD_BUG  macro  include/linux/bug.h  74  #define BUILD_BUG() \
is_warning_bug  function  include/linux/bug.h  86  static inline int is_warning_bug(const struct bug_entry *bug)
find_bug  prototype  include/linux/bug.h  91  const struct bug_entry *find_bug(unsigned long bugaddr);
report_bug  function  include/linux/bug.h  101  static inline enum bug_trap_type report_bug(unsigned long bug_addr,struct pt_regs *regs)
is_valid_bugaddr  prototype  include/linux/bug.h  96  int is_valid_bugaddr(unsigned long addr);
__LINUX_MUTEX_H  macro  include/linux/mutex.h  11  #define __LINUX_MUTEX_H
mutex  struct  include/linux/mutex.h  48  struct mutex {
mutex_waiter  struct  include/linux/mutex.h  69  struct mutex_waiter {
__DEBUG_MUTEX_INITIALIZER  macro  include/linux/mutex.h  80  # define __DEBUG_MUTEX_INITIALIZER(lockname)
mutex_init  macro  include/linux/mutex.h  89  # define mutex_init(mutex) \
mutex_destroy  function  include/linux/mutex.h  95  static inline void mutex_destroy(struct mutex *lock) {}
__DEP_MAP_MUTEX_INITIALIZER  macro  include/linux/mutex.h  102  # define __DEP_MAP_MUTEX_INITIALIZER(lockname)
__MUTEX_INITIALIZER  macro  include/linux/mutex.h  105  #define __MUTEX_INITIALIZER(lockname) \
DEFINE_MUTEX  macro  include/linux/mutex.h  112  #define DEFINE_MUTEX(mutexname) \
__mutex_init  prototype  include/linux/mutex.h  116  extern void __mutex_init(struct mutex *lock,const char *name,struct lock_class_key *key);
mutex_is_locked  function  include/linux/mutex.h  124  static inline int mutex_is_locked(struct mutex *lock)
mutex_lock_nested  macro  include/linux/mutex.h  156  # define mutex_lock_nested(lock,subclass) mutex_lock(lock)
_mutex_lock_nest_lock  prototype  include/linux/mutex.h  135  extern void _mutex_lock_nest_lock(struct mutex *lock,struct lockdep_map *nest_lock);
mutex_lock_interruptible_nested  macro  include/linux/mutex.h  157  # define mutex_lock_interruptible_nested(lock,subclass) mutex_lock_interruptible(lock)
mutex_lock_killable_nested  macro  include/linux/mutex.h  158  # define mutex_lock_killable_nested(lock,subclass) mutex_lock_killable(lock)
mutex_lock  prototype  include/linux/mutex.h  152  extern void mutex_lock(struct mutex *lock);
mutex_lock_interruptible  prototype  include/linux/mutex.h  153  extern int __must_check mutex_lock_interruptible(struct mutex *lock);
mutex_lock_killable  prototype  include/linux/mutex.h  154  extern int __must_check mutex_lock_killable(struct mutex *lock);
mutex_lock_nest_lock  macro  include/linux/mutex.h  159  # define mutex_lock_nest_lock(lock,nest_lock) mutex_lock(lock)
mutex_trylock  prototype  include/linux/mutex.h  168  extern int mutex_trylock(struct mutex *lock);
mutex_unlock  prototype  include/linux/mutex.h  169  extern void mutex_unlock(struct mutex *lock);
atomic_dec_and_mutex_lock  prototype  include/linux/mutex.h  170  extern int atomic_dec_and_mutex_lock(atomic_t *cnt,struct mutex *lock);
arch_mutex_cpu_relax  macro  include/linux/mutex.h  173  #define arch_mutex_cpu_relax() cpu_relax()
_LINUX_CAPABILITY_H  macro  include/linux/capability.h  13  #define _LINUX_CAPABILITY_H
_KERNEL_CAPABILITY_VERSION  macro  include/linux/capability.h  18  #define _KERNEL_CAPABILITY_VERSION _LINUX_CAPABILITY_VERSION_3
_KERNEL_CAPABILITY_U32S  macro  include/linux/capability.h  19  #define _KERNEL_CAPABILITY_U32S _LINUX_CAPABILITY_U32S_3
kernel_cap_struct  struct  include/linux/capability.h  23  typedef struct kernel_cap_struct {
kernel_cap_t  typedef  include/linux/capability.h  25  } kernel_cap_t;
cpu_vfs_cap_data  struct  include/linux/capability.h  28  struct cpu_vfs_cap_data {
_USER_CAP_HEADER_SIZE  macro  include/linux/capability.h  34  #define _USER_CAP_HEADER_SIZE (sizeof(struct __user_cap_header_struct))
_KERNEL_CAP_T_SIZE  macro  include/linux/capability.h  35  #define _KERNEL_CAP_T_SIZE (sizeof(kernel_cap_t))
current_user_ns  prototype  include/linux/capability.h  43  struct user_namespace *current_user_ns(void);
CAP_FOR_EACH_U32  macro  include/linux/capability.h  52  #define CAP_FOR_EACH_U32(__capi) \
CAP_FS_MASK_B0  macro  include/linux/capability.h  68  # define CAP_FS_MASK_B0 (CAP_TO_MASK(CAP_CHOWN) \
CAP_FS_MASK_B1  macro  include/linux/capability.h  75  # define CAP_FS_MASK_B1 (CAP_TO_MASK(CAP_MAC_OVERRIDE))
CAP_EMPTY_SET  macro  include/linux/capability.h  81  # define CAP_EMPTY_SET ((kernel_cap_t){{ 0,0 }})
CAP_FULL_SET  macro  include/linux/capability.h  82  # define CAP_FULL_SET ((kernel_cap_t){{ ~0,~0 }})
CAP_FS_SET  macro  include/linux/capability.h  83  # define CAP_FS_SET ((kernel_cap_t){{ CAP_FS_MASK_B0 \
CAP_NFSD_SET  macro  include/linux/capability.h  86  # define CAP_NFSD_SET ((kernel_cap_t){{ CAP_FS_MASK_B0 \
cap_clear  macro  include/linux/capability.h  92  # define cap_clear(c) do { (c) = __cap_empty_set; } while (0)
cap_raise  macro  include/linux/capability.h  94  #define cap_raise(c,flag) ((c).cap[CAP_TO_INDEX(flag)] |= CAP_TO_MASK(flag))
cap_lower  macro  include/linux/capability.h  95  #define cap_lower(c,flag) ((c).cap[CAP_TO_INDEX(flag)] &= ~CAP_TO_MASK(flag))
cap_raised  macro  include/linux/capability.h  96  #define cap_raised(c,flag) ((c).cap[CAP_TO_INDEX(flag)] & CAP_TO_MASK(flag))
CAP_BOP_ALL  macro  include/linux/capability.h  98  #define CAP_BOP_ALL(c,a,b,OP) \
CAP_UOP_ALL  macro  include/linux/capability.h  106  #define CAP_UOP_ALL(c,a,OP) \
cap_combine  function  include/linux/capability.h  115  static inline kernel_cap_t cap_combine(const kernel_cap_t a,const kernel_cap_t b)
cap_intersect  function  include/linux/capability.h  123  static inline kernel_cap_t cap_intersect(const kernel_cap_t a,const kernel_cap_t b)
cap_drop  function  include/linux/capability.h  131  static inline kernel_cap_t cap_drop(const kernel_cap_t a,const kernel_cap_t drop)
cap_invert  function  include/linux/capability.h  138  static inline kernel_cap_t cap_invert(const kernel_cap_t c)
cap_isclear  function  include/linux/capability.h  145  static inline int cap_isclear(const kernel_cap_t a)
cap_issubset  function  include/linux/capability.h  162  static inline int cap_issubset(const kernel_cap_t a,const kernel_cap_t set)
cap_is_fs_cap  function  include/linux/capability.h  171  static inline int cap_is_fs_cap(int cap)
cap_drop_fs_set  function  include/linux/capability.h  177  static inline kernel_cap_t cap_drop_fs_set(const kernel_cap_t a)
cap_raise_fs_set  function  include/linux/capability.h  184  static inline kernel_cap_t cap_raise_fs_set(const kernel_cap_t a,const kernel_cap_t permitted)
cap_drop_nfsd_set  function  include/linux/capability.h  191  static inline kernel_cap_t cap_drop_nfsd_set(const kernel_cap_t a)
cap_raise_nfsd_set  function  include/linux/capability.h  198  static inline kernel_cap_t cap_raise_nfsd_set(const kernel_cap_t a,const kernel_cap_t permitted)
has_capability  prototype  include/linux/capability.h  205  extern bool has_capability(struct task_struct *t,int cap);
has_ns_capability  prototype  include/linux/capability.h  207  extern bool has_ns_capability(struct task_struct *t,struct user_namespace *ns, int cap);
has_capability_noaudit  prototype  include/linux/capability.h  208  extern bool has_capability_noaudit(struct task_struct *t,int cap);
has_ns_capability_noaudit  prototype  include/linux/capability.h  210  extern bool has_ns_capability_noaudit(struct task_struct *t,struct user_namespace *ns, int cap);
capable  prototype  include/linux/capability.h  211  extern bool capable(int cap);
ns_capable  prototype  include/linux/capability.h  212  extern bool ns_capable(struct user_namespace *ns,int cap);
nsown_capable  prototype  include/linux/capability.h  213  extern bool nsown_capable(int cap);
inode_capable  prototype  include/linux/capability.h  214  extern bool inode_capable(const struct inode *inode,int cap);
file_ns_capable  prototype  include/linux/capability.h  215  extern bool file_ns_capable(const struct file *file,struct user_namespace *ns,int cap);
get_vfs_caps_from_disk  prototype  include/linux/capability.h  218  extern int get_vfs_caps_from_disk(const struct dentry *dentry,struct cpu_vfs_cap_data *cpu_caps);
__LINUX_SEMAPHORE_H  macro  include/linux/semaphore.h  10  #define __LINUX_SEMAPHORE_H
semaphore  struct  include/linux/semaphore.h  16  struct semaphore {
__SEMAPHORE_INITIALIZER  macro  include/linux/semaphore.h  22  #define __SEMAPHORE_INITIALIZER(name,n) \
DEFINE_SEMAPHORE  macro  include/linux/semaphore.h  29  #define DEFINE_SEMAPHORE(name) \
sema_init  function  include/linux/semaphore.h  32  static inline void sema_init(struct semaphore *sem,int val)
down  prototype  include/linux/semaphore.h  39  extern void down(struct semaphore *sem);
down_interruptible  prototype  include/linux/semaphore.h  40  extern int __must_check down_interruptible(struct semaphore *sem);
down_killable  prototype  include/linux/semaphore.h  41  extern int __must_check down_killable(struct semaphore *sem);
down_trylock  prototype  include/linux/semaphore.h  42  extern int __must_check down_trylock(struct semaphore *sem);
down_timeout  prototype  include/linux/semaphore.h  43  extern int __must_check down_timeout(struct semaphore *sem,long jiffies);
up  prototype  include/linux/semaphore.h  44  extern void up(struct semaphore *sem);
_LINUX_FIEMAP_H  macro  include/uapi/linux/fiemap.h  12  #define _LINUX_FIEMAP_H
fiemap_extent  struct  include/uapi/linux/fiemap.h  16  struct fiemap_extent {
fiemap  struct  include/uapi/linux/fiemap.h  27  struct fiemap {
FIEMAP_MAX_OFFSET  macro  include/uapi/linux/fiemap.h  39  #define FIEMAP_MAX_OFFSET (~0ULL)
FIEMAP_FLAG_SYNC  macro  include/uapi/linux/fiemap.h  41  #define FIEMAP_FLAG_SYNC 0x00000001
FIEMAP_FLAG_XATTR  macro  include/uapi/linux/fiemap.h  42  #define FIEMAP_FLAG_XATTR 0x00000002
FIEMAP_FLAGS_COMPAT  macro  include/uapi/linux/fiemap.h  44  #define FIEMAP_FLAGS_COMPAT (FIEMAP_FLAG_SYNC | FIEMAP_FLAG_XATTR)
FIEMAP_EXTENT_LAST  macro  include/uapi/linux/fiemap.h  46  #define FIEMAP_EXTENT_LAST 0x00000001
FIEMAP_EXTENT_UNKNOWN  macro  include/uapi/linux/fiemap.h  47  #define FIEMAP_EXTENT_UNKNOWN 0x00000002
FIEMAP_EXTENT_DELALLOC  macro  include/uapi/linux/fiemap.h  48  #define FIEMAP_EXTENT_DELALLOC 0x00000004
FIEMAP_EXTENT_ENCODED  macro  include/uapi/linux/fiemap.h  50  #define FIEMAP_EXTENT_ENCODED 0x00000008
FIEMAP_EXTENT_DATA_ENCRYPTED  macro  include/uapi/linux/fiemap.h  52  #define FIEMAP_EXTENT_DATA_ENCRYPTED 0x00000080
FIEMAP_EXTENT_NOT_ALIGNED  macro  include/uapi/linux/fiemap.h  54  #define FIEMAP_EXTENT_NOT_ALIGNED 0x00000100
FIEMAP_EXTENT_DATA_INLINE  macro  include/uapi/linux/fiemap.h  56  #define FIEMAP_EXTENT_DATA_INLINE 0x00000200
FIEMAP_EXTENT_DATA_TAIL  macro  include/uapi/linux/fiemap.h  58  #define FIEMAP_EXTENT_DATA_TAIL 0x00000400
FIEMAP_EXTENT_UNWRITTEN  macro  include/uapi/linux/fiemap.h  60  #define FIEMAP_EXTENT_UNWRITTEN 0x00000800
FIEMAP_EXTENT_MERGED  macro  include/uapi/linux/fiemap.h  62  #define FIEMAP_EXTENT_MERGED 0x00001000
FIEMAP_EXTENT_SHARED  macro  include/uapi/linux/fiemap.h  65  #define FIEMAP_EXTENT_SHARED 0x00002000
_LINUX_RCULIST_BL_H  macro  include/linux/rculist_bl.h  2  #define _LINUX_RCULIST_BL_H
hlist_bl_set_first_rcu  function  include/linux/rculist_bl.h  11  static inline void hlist_bl_set_first_rcu(struct hlist_bl_head *h,struct hlist_bl_node *n)
hlist_bl_first_rcu  function  include/linux/rculist_bl.h  20  static inline struct hlist_bl_node *hlist_bl_first_rcu(struct hlist_bl_head *h)
hlist_bl_del_init_rcu  function  include/linux/rculist_bl.h  46  static inline void hlist_bl_del_init_rcu(struct hlist_bl_node *n)
hlist_bl_del_rcu  function  include/linux/rculist_bl.h  73  static inline void hlist_bl_del_rcu(struct hlist_bl_node *n)
hlist_bl_add_head_rcu  function  include/linux/rculist_bl.h  99  static inline void hlist_bl_add_head_rcu(struct hlist_bl_node *n,struct hlist_bl_head *h)
hlist_bl_for_each_entry_rcu  macro  include/linux/rculist_bl.h  122  #define hlist_bl_for_each_entry_rcu(tpos,pos,head,member) \
_LINUX_ATOMIC_H  macro  include/linux/atomic.h  3  #define _LINUX_ATOMIC_H
atomic_add_unless  function  include/linux/atomic.h  15  static inline int atomic_add_unless(atomic_t *v,int a,int u)
atomic_inc_not_zero  macro  include/linux/atomic.h  28  #define atomic_inc_not_zero(v) atomic_add_unless((v),1,0)
atomic_inc_not_zero_hint  function  include/linux/atomic.h  44  static inline int atomic_inc_not_zero_hint(atomic_t *v,int hint)
atomic_inc_unless_negative  function  include/linux/atomic.h  64  static inline int atomic_inc_unless_negative(atomic_t *p)
atomic_dec_unless_positive  function  include/linux/atomic.h  77  static inline int atomic_dec_unless_positive(atomic_t *p)
atomic_dec_if_positive  function  include/linux/atomic.h  97  static inline int atomic_dec_if_positive(atomic_t *v)
atomic_or  function  include/linux/atomic.h  115  static inline void atomic_or(int i,atomic_t *v)
_LINUX_SHRINKER_H  macro  include/linux/shrinker.h  2  #define _LINUX_SHRINKER_H
shrink_control  struct  include/linux/shrinker.h  8  struct shrink_control {
shrinker  struct  include/linux/shrinker.h  30  struct shrinker {
DEFAULT_SEEKS  macro  include/linux/shrinker.h  39  #define DEFAULT_SEEKS 2
register_shrinker  prototype  include/linux/shrinker.h  40  extern void register_shrinker(struct shrinker *);
unregister_shrinker  prototype  include/linux/shrinker.h  41  extern void unregister_shrinker(struct shrinker *);
MIGRATE_MODE_H_INCLUDED  macro  include/linux/migrate_mode.h  2  #define MIGRATE_MODE_H_INCLUDED
migrate_mode  enum  include/linux/migrate_mode.h  10  enum migrate_mode {
MIGRATE_ASYNC  enumerator  include/linux/migrate_mode.h  11  MIGRATE_ASYNC,
MIGRATE_SYNC_LIGHT  enumerator  include/linux/migrate_mode.h  12  MIGRATE_SYNC_LIGHT,
MIGRATE_SYNC  enumerator  include/linux/migrate_mode.h  13  MIGRATE_SYNC,
_LINUX_UIDGID_H  macro  include/linux/uidgid.h  2  #define _LINUX_UIDGID_H
kuid_t  typedef  include/linux/uidgid.h  46  typedef uid_t kuid_t;
kgid_t  typedef  include/linux/uidgid.h  47  typedef gid_t kgid_t;
KUIDT_INIT  macro  include/linux/uidgid.h  59  #define KUIDT_INIT(value) ((kuid_t) value )
KGIDT_INIT  macro  include/linux/uidgid.h  60  #define KGIDT_INIT(value) ((kgid_t) value )
__kuid_val  function  include/linux/uidgid.h  49  static inline uid_t __kuid_val(kuid_t uid)
__kgid_val  function  include/linux/uidgid.h  54  static inline gid_t __kgid_val(kgid_t gid)
GLOBAL_ROOT_UID  macro  include/linux/uidgid.h  64  #define GLOBAL_ROOT_UID KUIDT_INIT(0)
GLOBAL_ROOT_GID  macro  include/linux/uidgid.h  65  #define GLOBAL_ROOT_GID KGIDT_INIT(0)
INVALID_UID  macro  include/linux/uidgid.h  67  #define INVALID_UID KUIDT_INIT(-1)
INVALID_GID  macro  include/linux/uidgid.h  68  #define INVALID_GID KGIDT_INIT(-1)
uid_eq  function  include/linux/uidgid.h  70  static inline bool uid_eq(kuid_t left,kuid_t right)
gid_eq  function  include/linux/uidgid.h  75  static inline bool gid_eq(kgid_t left,kgid_t right)
uid_gt  function  include/linux/uidgid.h  80  static inline bool uid_gt(kuid_t left,kuid_t right)
gid_gt  function  include/linux/uidgid.h  85  static inline bool gid_gt(kgid_t left,kgid_t right)
uid_gte  function  include/linux/uidgid.h  90  static inline bool uid_gte(kuid_t left,kuid_t right)
gid_gte  function  include/linux/uidgid.h  95  static inline bool gid_gte(kgid_t left,kgid_t right)
uid_lt  function  include/linux/uidgid.h  100  static inline bool uid_lt(kuid_t left,kuid_t right)
gid_lt  function  include/linux/uidgid.h  105  static inline bool gid_lt(kgid_t left,kgid_t right)
uid_lte  function  include/linux/uidgid.h  110  static inline bool uid_lte(kuid_t left,kuid_t right)
gid_lte  function  include/linux/uidgid.h  115  static inline bool gid_lte(kgid_t left,kgid_t right)
uid_valid  function  include/linux/uidgid.h  120  static inline bool uid_valid(kuid_t uid)
gid_valid  function  include/linux/uidgid.h  125  static inline bool gid_valid(kgid_t gid)
make_kuid  function  include/linux/uidgid.h  152  static inline kuid_t make_kuid(struct user_namespace *from,uid_t uid)
make_kgid  function  include/linux/uidgid.h  157  static inline kgid_t make_kgid(struct user_namespace *from,gid_t gid)
from_kuid  function  include/linux/uidgid.h  162  static inline uid_t from_kuid(struct user_namespace *to,kuid_t kuid)
from_kgid  function  include/linux/uidgid.h  167  static inline gid_t from_kgid(struct user_namespace *to,kgid_t kgid)
from_kuid_munged  function  include/linux/uidgid.h  172  static inline uid_t from_kuid_munged(struct user_namespace *to,kuid_t kuid)
from_kgid_munged  function  include/linux/uidgid.h  180  static inline gid_t from_kgid_munged(struct user_namespace *to,kgid_t kgid)
kuid_has_mapping  function  include/linux/uidgid.h  188  static inline bool kuid_has_mapping(struct user_namespace *ns,kuid_t uid)
kgid_has_mapping  function  include/linux/uidgid.h  193  static inline bool kgid_has_mapping(struct user_namespace *ns,kgid_t gid)
__LINUX_LOCKDEP_H  macro  include/linux/lockdep.h  10  #define __LINUX_LOCKDEP_H
XXX_LOCK_USAGE_STATES  macro  include/linux/lockdep.h  30  #define XXX_LOCK_USAGE_STATES (1+3*4)
MAX_LOCKDEP_SUBCLASSES  macro  include/linux/lockdep.h  32  #define MAX_LOCKDEP_SUBCLASSES 8UL
NR_LOCKDEP_CACHING_CLASSES  macro  include/linux/lockdep.h  43  #define NR_LOCKDEP_CACHING_CLASSES 2
lockdep_subclass_key  struct  include/linux/lockdep.h  50  struct lockdep_subclass_key {
lock_class_key  struct  include/linux/lockdep.h  409  struct lock_class_key { };
LOCKSTAT_POINTS  macro  include/linux/lockdep.h  60  #define LOCKSTAT_POINTS 4
lock_class  struct  include/linux/lockdep.h  65  struct lock_class {
lock_time  struct  include/linux/lockdep.h  114  struct lock_time {
bounce_type  enum  include/linux/lockdep.h  121  enum bounce_type {
bounce_acquired_write  enumerator  include/linux/lockdep.h  122  bounce_acquired_write,
bounce_acquired_read  enumerator  include/linux/lockdep.h  123  bounce_acquired_read,
bounce_contended_write  enumerator  include/linux/lockdep.h  124  bounce_contended_write,
bounce_contended_read  enumerator  include/linux/lockdep.h  125  bounce_contended_read,
nr_bounce_types  enumerator  include/linux/lockdep.h  126  nr_bounce_types,
bounce_acquired  enumerator  include/linux/lockdep.h  128  bounce_acquired = bounce_acquired_write,
bounce_contended  enumerator  include/linux/lockdep.h  129  bounce_contended = bounce_contended_write,
lock_class_stats  struct  include/linux/lockdep.h  132  struct lock_class_stats {
lock_stats  prototype  include/linux/lockdep.h  142  struct lock_class_stats lock_stats(struct lock_class *class);
clear_lock_stats  prototype  include/linux/lockdep.h  143  void clear_lock_stats(struct lock_class *class);
lockdep_map  struct  include/linux/lockdep.h  150  struct lockdep_map {
lockdep_copy_map  function  include/linux/lockdep.h  161  static inline void lockdep_copy_map(struct lockdep_map *to,struct lockdep_map *from)
lock_list  struct  include/linux/lockdep.h  182  struct lock_list {
lock_chain  struct  include/linux/lockdep.h  198  struct lock_chain {
MAX_LOCKDEP_KEYS_BITS  macro  include/linux/lockdep.h  206  #define MAX_LOCKDEP_KEYS_BITS 13
MAX_LOCKDEP_KEYS  macro  include/linux/lockdep.h  212  #define MAX_LOCKDEP_KEYS ((1UL << MAX_LOCKDEP_KEYS_BITS) - 1)
held_lock  struct  include/linux/lockdep.h  214  struct held_lock {
lockdep_init  macro  include/linux/lockdep.h  383  # define lockdep_init() do { } while (0)
lockdep_info  macro  include/linux/lockdep.h  384  # define lockdep_info() do { } while (0)
lockdep_reset  macro  include/linux/lockdep.h  403  # define lockdep_reset() do { debug_locks = 1; } while (0)
lockdep_reset_lock  prototype  include/linux/lockdep.h  266  extern void lockdep_reset_lock(struct lockdep_map *lock);
lockdep_free_key_range  macro  include/linux/lockdep.h  404  # define lockdep_free_key_range(start,size) do { } while (0)
lockdep_sys_exit  macro  include/linux/lockdep.h  405  # define lockdep_sys_exit() do { } while (0)
lockdep_off  function  include/linux/lockdep.h  368  static inline void lockdep_off(void)
lockdep_on  function  include/linux/lockdep.h  372  static inline void lockdep_on(void)
lockdep_init_map  macro  include/linux/lockdep.h  385  # define lockdep_init_map(lock,name,key,sub) \
STATIC_LOCKDEP_MAP_INIT  macro  include/linux/lockdep.h  286  #define STATIC_LOCKDEP_MAP_INIT(_name,_key) \
lockdep_set_class  macro  include/linux/lockdep.h  387  # define lockdep_set_class(lock,key) do { (void)(key); } while (0)
lockdep_set_class_and_name  macro  include/linux/lockdep.h  388  # define lockdep_set_class_and_name(lock,key,name) \
lockdep_set_class_and_subclass  macro  include/linux/lockdep.h  390  #define lockdep_set_class_and_subclass(lock,key,sub) \
lockdep_set_subclass  macro  include/linux/lockdep.h  392  #define lockdep_set_subclass(lock,sub) do { } while (0)
lockdep_set_novalidate_class  macro  include/linux/lockdep.h  394  #define lockdep_set_novalidate_class(lock) do { } while (0)
lockdep_match_class  macro  include/linux/lockdep.h  310  #define lockdep_match_class(lock,key) lockdep_match_key(&(lock)->dep_map,key)
lockdep_match_key  function  include/linux/lockdep.h  313  static inline int lockdep_match_key(struct lockdep_map *lock,struct lock_class_key *key)
lock_acquire  macro  include/linux/lockdep.h  376  # define lock_acquire(l,s,t,r,c,n,i) do { } while (0)
lock_release  macro  include/linux/lockdep.h  377  # define lock_release(l,n,i) do { } while (0)
lockdep_is_held  macro  include/linux/lockdep.h  340  #define lockdep_is_held(lock) lock_is_held(&(lock)->dep_map)
lock_is_held  prototype  include/linux/lockdep.h  342  extern int lock_is_held(struct lockdep_map *lock);
lock_set_class  macro  include/linux/lockdep.h  378  # define lock_set_class(l,n,k,s,i) do { } while (0)
lock_set_subclass  macro  include/linux/lockdep.h  379  # define lock_set_subclass(l,s,i) do { } while (0)
lockdep_set_current_reclaim_state  macro  include/linux/lockdep.h  380  # define lockdep_set_current_reclaim_state(g) do { } while (0)
lockdep_clear_current_reclaim_state  macro  include/linux/lockdep.h  381  # define lockdep_clear_current_reclaim_state() do { } while (0)
lockdep_trace_alloc  macro  include/linux/lockdep.h  382  # define lockdep_trace_alloc(g) do { } while (0)
INIT_LOCKDEP  macro  include/linux/lockdep.h  402  # define INIT_LOCKDEP
lockdep_depth  macro  include/linux/lockdep.h  411  #define lockdep_depth(tsk) (0)
lockdep_assert_held  macro  include/linux/lockdep.h  413  #define lockdep_assert_held(l) do { } while (0)
lockdep_recursing  macro  include/linux/lockdep.h  415  #define lockdep_recursing(tsk) (0)
lock_contended  macro  include/linux/lockdep.h  435  #define lock_contended(lockdep_map,ip) do {} while (0)
lock_acquired  macro  include/linux/lockdep.h  436  #define lock_acquired(lockdep_map,ip) do {} while (0)
LOCK_CONTENDED  macro  include/linux/lockdep.h  438  #define LOCK_CONTENDED(_lock,try,lock) \
LOCK_CONTENDED_FLAGS  macro  include/linux/lockdep.h  455  #define LOCK_CONTENDED_FLAGS(_lock,try,lock,lockfl,flags) \
print_irqtrace_events  function  include/linux/lockdep.h  463  static inline void print_irqtrace_events(struct task_struct *curr)
SINGLE_DEPTH_NESTING  macro  include/linux/lockdep.h  473  #define SINGLE_DEPTH_NESTING 1
spin_acquire  macro  include/linux/lockdep.h  490  # define spin_acquire(l,s,t,i) do { } while (0)
spin_acquire_nest  macro  include/linux/lockdep.h  486  # define spin_acquire_nest(l,s,t,n,i) lock_acquire(l,s,t,0,1,NULL,i)
spin_release  macro  include/linux/lockdep.h  491  # define spin_release(l,n,i) do { } while (0)
rwlock_acquire  macro  include/linux/lockdep.h  504  # define rwlock_acquire(l,s,t,i) do { } while (0)
rwlock_acquire_read  macro  include/linux/lockdep.h  505  # define rwlock_acquire_read(l,s,t,i) do { } while (0)
rwlock_release  macro  include/linux/lockdep.h  506  # define rwlock_release(l,n,i) do { } while (0)
mutex_acquire  macro  include/linux/lockdep.h  519  # define mutex_acquire(l,s,t,i) do { } while (0)
mutex_acquire_nest  macro  include/linux/lockdep.h  520  # define mutex_acquire_nest(l,s,t,n,i) do { } while (0)
mutex_release  macro  include/linux/lockdep.h  521  # define mutex_release(l,n,i) do { } while (0)
rwsem_acquire  macro  include/linux/lockdep.h  536  # define rwsem_acquire(l,s,t,i) do { } while (0)
rwsem_acquire_nest  macro  include/linux/lockdep.h  537  # define rwsem_acquire_nest(l,s,t,n,i) do { } while (0)
rwsem_acquire_read  macro  include/linux/lockdep.h  538  # define rwsem_acquire_read(l,s,t,i) do { } while (0)
rwsem_release  macro  include/linux/lockdep.h  539  # define rwsem_release(l,n,i) do { } while (0)
lock_map_acquire  macro  include/linux/lockdep.h  552  # define lock_map_acquire(l) do { } while (0)
lock_map_acquire_read  macro  include/linux/lockdep.h  553  # define lock_map_acquire_read(l) do { } while (0)
lock_map_release  macro  include/linux/lockdep.h  554  # define lock_map_release(l) do { } while (0)
might_lock  macro  include/linux/lockdep.h  571  # define might_lock(lock) do { } while (0)
might_lock_read  macro  include/linux/lockdep.h  572  # define might_lock_read(lock) do { } while (0)
lockdep_rcu_suspicious  prototype  include/linux/lockdep.h  576  void lockdep_rcu_suspicious(const char *file,const int line,const char *s);
_LINUX_PERCPU_RWSEM_H  macro  include/linux/percpu-rwsem.h  2  #define _LINUX_PERCPU_RWSEM_H
percpu_rw_semaphore  struct  include/linux/percpu-rwsem.h  10  struct percpu_rw_semaphore {
percpu_down_read  prototype  include/linux/percpu-rwsem.h  18  extern void percpu_down_read(struct percpu_rw_semaphore *);
percpu_up_read  prototype  include/linux/percpu-rwsem.h  19  extern void percpu_up_read(struct percpu_rw_semaphore *);
percpu_down_write  prototype  include/linux/percpu-rwsem.h  21  extern void percpu_down_write(struct percpu_rw_semaphore *);
percpu_up_write  prototype  include/linux/percpu-rwsem.h  22  extern void percpu_up_write(struct percpu_rw_semaphore *);
__percpu_init_rwsem  prototype  include/linux/percpu-rwsem.h  25  extern int __percpu_init_rwsem(struct percpu_rw_semaphore *,const char *, struct lock_class_key *);
percpu_free_rwsem  prototype  include/linux/percpu-rwsem.h  26  extern void percpu_free_rwsem(struct percpu_rw_semaphore *);
percpu_init_rwsem  macro  include/linux/percpu-rwsem.h  28  #define percpu_init_rwsem(brw) \
__LINUX_BLK_TYPES_H  macro  include/linux/blk_types.h  6  #define __LINUX_BLK_TYPES_H
bio_end_io_t  typedef  include/linux/blk_types.h  19  typedef void (bio_end_io_t) (struct bio *,int);
bio_destructor_t  typedef  include/linux/blk_types.h  20  typedef void (bio_destructor_t) (struct bio *);
bio_vec  struct  include/linux/blk_types.h  25  struct bio_vec {
bio  struct  include/linux/blk_types.h  35  struct bio {
BIO_RESET_BYTES  macro  include/linux/blk_types.h  97  #define BIO_RESET_BYTES offsetof(struct bio,bi_max_vecs)
BIO_UPTODATE  macro  include/linux/blk_types.h  102  #define BIO_UPTODATE 0
BIO_RW_BLOCK  macro  include/linux/blk_types.h  103  #define BIO_RW_BLOCK 1
BIO_EOF  macro  include/linux/blk_types.h  104  #define BIO_EOF 2
BIO_SEG_VALID  macro  include/linux/blk_types.h  105  #define BIO_SEG_VALID 3
BIO_CLONED  macro  include/linux/blk_types.h  106  #define BIO_CLONED 4
BIO_BOUNCED  macro  include/linux/blk_types.h  107  #define BIO_BOUNCED 5
BIO_USER_MAPPED  macro  include/linux/blk_types.h  108  #define BIO_USER_MAPPED 6
BIO_EOPNOTSUPP  macro  include/linux/blk_types.h  109  #define BIO_EOPNOTSUPP 7
BIO_NULL_MAPPED  macro  include/linux/blk_types.h  110  #define BIO_NULL_MAPPED 8
BIO_FS_INTEGRITY  macro  include/linux/blk_types.h  111  #define BIO_FS_INTEGRITY 9
BIO_QUIET  macro  include/linux/blk_types.h  112  #define BIO_QUIET 10
BIO_MAPPED_INTEGRITY  macro  include/linux/blk_types.h  113  #define BIO_MAPPED_INTEGRITY 11
BIO_RESET_BITS  macro  include/linux/blk_types.h  119  #define BIO_RESET_BITS 12
bio_flagged  macro  include/linux/blk_types.h  121  #define bio_flagged(bio,flag) ((bio)->bi_flags & (1 << (flag)))
BIO_POOL_BITS  macro  include/linux/blk_types.h  126  #define BIO_POOL_BITS (4)
BIO_POOL_NONE  macro  include/linux/blk_types.h  127  #define BIO_POOL_NONE ((1UL << BIO_POOL_BITS) - 1)
BIO_POOL_OFFSET  macro  include/linux/blk_types.h  128  #define BIO_POOL_OFFSET (BITS_PER_LONG - BIO_POOL_BITS)
BIO_POOL_MASK  macro  include/linux/blk_types.h  129  #define BIO_POOL_MASK (1UL << BIO_POOL_OFFSET)
BIO_POOL_IDX  macro  include/linux/blk_types.h  130  #define BIO_POOL_IDX(bio) ((bio)->bi_flags >> BIO_POOL_OFFSET)
rq_flag_bits  enum  include/linux/blk_types.h  138  enum rq_flag_bits {
__REQ_WRITE  enumerator  include/linux/blk_types.h  140  __REQ_WRITE,
__REQ_FAILFAST_DEV  enumerator  include/linux/blk_types.h  141  __REQ_FAILFAST_DEV,
__REQ_FAILFAST_TRANSPORT  enumerator  include/linux/blk_types.h  142  __REQ_FAILFAST_TRANSPORT,
__REQ_FAILFAST_DRIVER  enumerator  include/linux/blk_types.h  143  __REQ_FAILFAST_DRIVER,
__REQ_SYNC  enumerator  include/linux/blk_types.h  145  __REQ_SYNC,
__REQ_META  enumerator  include/linux/blk_types.h  146  __REQ_META,
__REQ_PRIO  enumerator  include/linux/blk_types.h  147  __REQ_PRIO,
__REQ_DISCARD  enumerator  include/linux/blk_types.h  148  __REQ_DISCARD,
__REQ_SECURE  enumerator  include/linux/blk_types.h  149  __REQ_SECURE,
__REQ_WRITE_SAME  enumerator  include/linux/blk_types.h  150  __REQ_WRITE_SAME,
__REQ_NOIDLE  enumerator  include/linux/blk_types.h  152  __REQ_NOIDLE,
__REQ_FUA  enumerator  include/linux/blk_types.h  153  __REQ_FUA,
__REQ_FLUSH  enumerator  include/linux/blk_types.h  154  __REQ_FLUSH,
__REQ_RAHEAD  enumerator  include/linux/blk_types.h  157  __REQ_RAHEAD,
__REQ_THROTTLED  enumerator  include/linux/blk_types.h  158  __REQ_THROTTLED,
__REQ_SORTED  enumerator  include/linux/blk_types.h  162  __REQ_SORTED,
__REQ_SOFTBARRIER  enumerator  include/linux/blk_types.h  163  __REQ_SOFTBARRIER,
__REQ_NOMERGE  enumerator  include/linux/blk_types.h  164  __REQ_NOMERGE,
__REQ_STARTED  enumerator  include/linux/blk_types.h  165  __REQ_STARTED,
__REQ_DONTPREP  enumerator  include/linux/blk_types.h  166  __REQ_DONTPREP,
__REQ_QUEUED  enumerator  include/linux/blk_types.h  167  __REQ_QUEUED,
__REQ_ELVPRIV  enumerator  include/linux/blk_types.h  168  __REQ_ELVPRIV,
__REQ_FAILED  enumerator  include/linux/blk_types.h  169  __REQ_FAILED,
__REQ_QUIET  enumerator  include/linux/blk_types.h  170  __REQ_QUIET,
__REQ_PREEMPT  enumerator  include/linux/blk_types.h  171  __REQ_PREEMPT,
__REQ_ALLOCED  enumerator  include/linux/blk_types.h  172  __REQ_ALLOCED,
__REQ_COPY_USER  enumerator  include/linux/blk_types.h  173  __REQ_COPY_USER,
__REQ_FLUSH_SEQ  enumerator  include/linux/blk_types.h  174  __REQ_FLUSH_SEQ,
__REQ_IO_STAT  enumerator  include/linux/blk_types.h  175  __REQ_IO_STAT,
__REQ_MIXED_MERGE  enumerator  include/linux/blk_types.h  176  __REQ_MIXED_MERGE,
__REQ_KERNEL  enumerator  include/linux/blk_types.h  177  __REQ_KERNEL,
__REQ_NR_BITS  enumerator  include/linux/blk_types.h  178  __REQ_NR_BITS,
REQ_WRITE  macro  include/linux/blk_types.h  181  #define REQ_WRITE (1 << __REQ_WRITE)
REQ_FAILFAST_DEV  macro  include/linux/blk_types.h  182  #define REQ_FAILFAST_DEV (1 << __REQ_FAILFAST_DEV)
REQ_FAILFAST_TRANSPORT  macro  include/linux/blk_types.h  183  #define REQ_FAILFAST_TRANSPORT (1 << __REQ_FAILFAST_TRANSPORT)
REQ_FAILFAST_DRIVER  macro  include/linux/blk_types.h  184  #define REQ_FAILFAST_DRIVER (1 << __REQ_FAILFAST_DRIVER)
REQ_SYNC  macro  include/linux/blk_types.h  185  #define REQ_SYNC (1 << __REQ_SYNC)
REQ_META  macro  include/linux/blk_types.h  186  #define REQ_META (1 << __REQ_META)
REQ_PRIO  macro  include/linux/blk_types.h  187  #define REQ_PRIO (1 << __REQ_PRIO)
REQ_DISCARD  macro  include/linux/blk_types.h  188  #define REQ_DISCARD (1 << __REQ_DISCARD)
REQ_WRITE_SAME  macro  include/linux/blk_types.h  189  #define REQ_WRITE_SAME (1 << __REQ_WRITE_SAME)
REQ_NOIDLE  macro  include/linux/blk_types.h  190  #define REQ_NOIDLE (1 << __REQ_NOIDLE)
REQ_FAILFAST_MASK  macro  include/linux/blk_types.h  192  #define REQ_FAILFAST_MASK \
REQ_COMMON_MASK  macro  include/linux/blk_types.h  194  #define REQ_COMMON_MASK \
REQ_CLONE_MASK  macro  include/linux/blk_types.h  198  #define REQ_CLONE_MASK REQ_COMMON_MASK
REQ_NOMERGE_FLAGS  macro  include/linux/blk_types.h  201  #define REQ_NOMERGE_FLAGS \
REQ_RAHEAD  macro  include/linux/blk_types.h  204  #define REQ_RAHEAD (1 << __REQ_RAHEAD)
REQ_THROTTLED  macro  include/linux/blk_types.h  205  #define REQ_THROTTLED (1 << __REQ_THROTTLED)
REQ_SORTED  macro  include/linux/blk_types.h  207  #define REQ_SORTED (1 << __REQ_SORTED)
REQ_SOFTBARRIER  macro  include/linux/blk_types.h  208  #define REQ_SOFTBARRIER (1 << __REQ_SOFTBARRIER)
REQ_FUA  macro  include/linux/blk_types.h  209  #define REQ_FUA (1 << __REQ_FUA)
REQ_NOMERGE  macro  include/linux/blk_types.h  210  #define REQ_NOMERGE (1 << __REQ_NOMERGE)
REQ_STARTED  macro  include/linux/blk_types.h  211  #define REQ_STARTED (1 << __REQ_STARTED)
REQ_DONTPREP  macro  include/linux/blk_types.h  212  #define REQ_DONTPREP (1 << __REQ_DONTPREP)
REQ_QUEUED  macro  include/linux/blk_types.h  213  #define REQ_QUEUED (1 << __REQ_QUEUED)
REQ_ELVPRIV  macro  include/linux/blk_types.h  214  #define REQ_ELVPRIV (1 << __REQ_ELVPRIV)
REQ_FAILED  macro  include/linux/blk_types.h  215  #define REQ_FAILED (1 << __REQ_FAILED)
REQ_QUIET  macro  include/linux/blk_types.h  216  #define REQ_QUIET (1 << __REQ_QUIET)
REQ_PREEMPT  macro  include/linux/blk_types.h  217  #define REQ_PREEMPT (1 << __REQ_PREEMPT)
REQ_ALLOCED  macro  include/linux/blk_types.h  218  #define REQ_ALLOCED (1 << __REQ_ALLOCED)
REQ_COPY_USER  macro  include/linux/blk_types.h  219  #define REQ_COPY_USER (1 << __REQ_COPY_USER)
REQ_FLUSH  macro  include/linux/blk_types.h  220  #define REQ_FLUSH (1 << __REQ_FLUSH)
REQ_FLUSH_SEQ  macro  include/linux/blk_types.h  221  #define REQ_FLUSH_SEQ (1 << __REQ_FLUSH_SEQ)
REQ_IO_STAT  macro  include/linux/blk_types.h  222  #define REQ_IO_STAT (1 << __REQ_IO_STAT)
REQ_MIXED_MERGE  macro  include/linux/blk_types.h  223  #define REQ_MIXED_MERGE (1 << __REQ_MIXED_MERGE)
REQ_SECURE  macro  include/linux/blk_types.h  224  #define REQ_SECURE (1 << __REQ_SECURE)
REQ_KERNEL  macro  include/linux/blk_types.h  225  #define REQ_KERNEL (1 << __REQ_KERNEL)
_ASM_X86_BYTEORDER_H  macro  arch/x86/include/uapi/asm/byteorder.h  2  #define _ASM_X86_BYTEORDER_H
_UAPI_LINUX_FS_H  macro  include/uapi/linux/fs.h  2  #define _UAPI_LINUX_FS_H
NR_OPEN  macro  include/uapi/linux/fs.h  24  #undef NR_OPEN
INR_OPEN_CUR  macro  include/uapi/linux/fs.h  25  #define INR_OPEN_CUR 1024
INR_OPEN_MAX  macro  include/uapi/linux/fs.h  26  #define INR_OPEN_MAX 4096
BLOCK_SIZE_BITS  macro  include/uapi/linux/fs.h  28  #define BLOCK_SIZE_BITS 10
BLOCK_SIZE  macro  include/uapi/linux/fs.h  29  #define BLOCK_SIZE (1<<BLOCK_SIZE_BITS)
SEEK_SET  macro  include/uapi/linux/fs.h  31  #define SEEK_SET 0
SEEK_CUR  macro  include/uapi/linux/fs.h  32  #define SEEK_CUR 1
SEEK_END  macro  include/uapi/linux/fs.h  33  #define SEEK_END 2
SEEK_DATA  macro  include/uapi/linux/fs.h  34  #define SEEK_DATA 3
SEEK_HOLE  macro  include/uapi/linux/fs.h  35  #define SEEK_HOLE 4
SEEK_MAX  macro  include/uapi/linux/fs.h  36  #define SEEK_MAX SEEK_HOLE
fstrim_range  struct  include/uapi/linux/fs.h  38  struct fstrim_range {
files_stat_struct  struct  include/uapi/linux/fs.h  45  struct files_stat_struct {
inodes_stat_t  struct  include/uapi/linux/fs.h  51  struct inodes_stat_t {
NR_FILE  macro  include/uapi/linux/fs.h  58  #define NR_FILE 8192
MS_RDONLY  macro  include/uapi/linux/fs.h  64  #define MS_RDONLY 1
MS_NOSUID  macro  include/uapi/linux/fs.h  65  #define MS_NOSUID 2
MS_NODEV  macro  include/uapi/linux/fs.h  66  #define MS_NODEV 4
MS_NOEXEC  macro  include/uapi/linux/fs.h  67  #define MS_NOEXEC 8
MS_SYNCHRONOUS  macro  include/uapi/linux/fs.h  68  #define MS_SYNCHRONOUS 16
MS_REMOUNT  macro  include/uapi/linux/fs.h  69  #define MS_REMOUNT 32
MS_MANDLOCK  macro  include/uapi/linux/fs.h  70  #define MS_MANDLOCK 64
MS_DIRSYNC  macro  include/uapi/linux/fs.h  71  #define MS_DIRSYNC 128
MS_NOATIME  macro  include/uapi/linux/fs.h  72  #define MS_NOATIME 1024
MS_NODIRATIME  macro  include/uapi/linux/fs.h  73  #define MS_NODIRATIME 2048
MS_BIND  macro  include/uapi/linux/fs.h  74  #define MS_BIND 4096
MS_MOVE  macro  include/uapi/linux/fs.h  75  #define MS_MOVE 8192
MS_REC  macro  include/uapi/linux/fs.h  76  #define MS_REC 16384
MS_VERBOSE  macro  include/uapi/linux/fs.h  77  #define MS_VERBOSE 32768
MS_SILENT  macro  include/uapi/linux/fs.h  79  #define MS_SILENT 32768
MS_POSIXACL  macro  include/uapi/linux/fs.h  80  #define MS_POSIXACL (1<<16)
MS_UNBINDABLE  macro  include/uapi/linux/fs.h  81  #define MS_UNBINDABLE (1<<17)
MS_PRIVATE  macro  include/uapi/linux/fs.h  82  #define MS_PRIVATE (1<<18)
MS_SLAVE  macro  include/uapi/linux/fs.h  83  #define MS_SLAVE (1<<19)
MS_SHARED  macro  include/uapi/linux/fs.h  84  #define MS_SHARED (1<<20)
MS_RELATIME  macro  include/uapi/linux/fs.h  85  #define MS_RELATIME (1<<21)
MS_KERNMOUNT  macro  include/uapi/linux/fs.h  86  #define MS_KERNMOUNT (1<<22)
MS_I_VERSION  macro  include/uapi/linux/fs.h  87  #define MS_I_VERSION (1<<23)
MS_STRICTATIME  macro  include/uapi/linux/fs.h  88  #define MS_STRICTATIME (1<<24)
MS_NOSEC  macro  include/uapi/linux/fs.h  89  #define MS_NOSEC (1<<28)
MS_BORN  macro  include/uapi/linux/fs.h  90  #define MS_BORN (1<<29)
MS_ACTIVE  macro  include/uapi/linux/fs.h  91  #define MS_ACTIVE (1<<30)
MS_NOUSER  macro  include/uapi/linux/fs.h  92  #define MS_NOUSER (1<<31)
MS_RMT_MASK  macro  include/uapi/linux/fs.h  97  #define MS_RMT_MASK (MS_RDONLY|MS_SYNCHRONOUS|MS_MANDLOCK|MS_I_VERSION)
MS_MGC_VAL  macro  include/uapi/linux/fs.h  102  #define MS_MGC_VAL 0xC0ED0000
MS_MGC_MSK  macro  include/uapi/linux/fs.h  103  #define MS_MGC_MSK 0xffff0000
BLKROSET  macro  include/uapi/linux/fs.h  108  #define BLKROSET _IO(0x12,93)
BLKROGET  macro  include/uapi/linux/fs.h  109  #define BLKROGET _IO(0x12,94)
BLKRRPART  macro  include/uapi/linux/fs.h  110  #define BLKRRPART _IO(0x12,95)
BLKGETSIZE  macro  include/uapi/linux/fs.h  111  #define BLKGETSIZE _IO(0x12,96)
BLKFLSBUF  macro  include/uapi/linux/fs.h  112  #define BLKFLSBUF _IO(0x12,97)
BLKRASET  macro  include/uapi/linux/fs.h  113  #define BLKRASET _IO(0x12,98)
BLKRAGET  macro  include/uapi/linux/fs.h  114  #define BLKRAGET _IO(0x12,99)
BLKFRASET  macro  include/uapi/linux/fs.h  115  #define BLKFRASET _IO(0x12,100)
BLKFRAGET  macro  include/uapi/linux/fs.h  116  #define BLKFRAGET _IO(0x12,101)
BLKSECTSET  macro  include/uapi/linux/fs.h  117  #define BLKSECTSET _IO(0x12,102)
BLKSECTGET  macro  include/uapi/linux/fs.h  118  #define BLKSECTGET _IO(0x12,103)
BLKSSZGET  macro  include/uapi/linux/fs.h  119  #define BLKSSZGET _IO(0x12,104)
BLKBSZGET  macro  include/uapi/linux/fs.h  131  #define BLKBSZGET _IOR(0x12,112,size_t)
BLKBSZSET  macro  include/uapi/linux/fs.h  132  #define BLKBSZSET _IOW(0x12,113,size_t)
BLKGETSIZE64  macro  include/uapi/linux/fs.h  133  #define BLKGETSIZE64 _IOR(0x12,114,size_t)
BLKTRACESETUP  macro  include/uapi/linux/fs.h  134  #define BLKTRACESETUP _IOWR(0x12,115,struct blk_user_trace_setup)
BLKTRACESTART  macro  include/uapi/linux/fs.h  135  #define BLKTRACESTART _IO(0x12,116)
BLKTRACESTOP  macro  include/uapi/linux/fs.h  136  #define BLKTRACESTOP _IO(0x12,117)
BLKTRACETEARDOWN  macro  include/uapi/linux/fs.h  137  #define BLKTRACETEARDOWN _IO(0x12,118)
BLKDISCARD  macro  include/uapi/linux/fs.h  138  #define BLKDISCARD _IO(0x12,119)
BLKIOMIN  macro  include/uapi/linux/fs.h  139  #define BLKIOMIN _IO(0x12,120)
BLKIOOPT  macro  include/uapi/linux/fs.h  140  #define BLKIOOPT _IO(0x12,121)
BLKALIGNOFF  macro  include/uapi/linux/fs.h  141  #define BLKALIGNOFF _IO(0x12,122)
BLKPBSZGET  macro  include/uapi/linux/fs.h  142  #define BLKPBSZGET _IO(0x12,123)
BLKDISCARDZEROES  macro  include/uapi/linux/fs.h  143  #define BLKDISCARDZEROES _IO(0x12,124)
BLKSECDISCARD  macro  include/uapi/linux/fs.h  144  #define BLKSECDISCARD _IO(0x12,125)
BLKROTATIONAL  macro  include/uapi/linux/fs.h  145  #define BLKROTATIONAL _IO(0x12,126)
BLKZEROOUT  macro  include/uapi/linux/fs.h  146  #define BLKZEROOUT _IO(0x12,127)
BMAP_IOCTL  macro  include/uapi/linux/fs.h  148  #define BMAP_IOCTL 1
FIBMAP  macro  include/uapi/linux/fs.h  149  #define FIBMAP _IO(0x00,1)
FIGETBSZ  macro  include/uapi/linux/fs.h  150  #define FIGETBSZ _IO(0x00,2)
FIFREEZE  macro  include/uapi/linux/fs.h  151  #define FIFREEZE _IOWR('X',119,int)
FITHAW  macro  include/uapi/linux/fs.h  152  #define FITHAW _IOWR('X',120,int)
FITRIM  macro  include/uapi/linux/fs.h  153  #define FITRIM _IOWR('X',121,struct fstrim_range)
FS_IOC_GETFLAGS  macro  include/uapi/linux/fs.h  155  #define FS_IOC_GETFLAGS _IOR('f',1,long)
FS_IOC_SETFLAGS  macro  include/uapi/linux/fs.h  156  #define FS_IOC_SETFLAGS _IOW('f',2,long)
FS_IOC_GETVERSION  macro  include/uapi/linux/fs.h  157  #define FS_IOC_GETVERSION _IOR('v',1,long)
FS_IOC_SETVERSION  macro  include/uapi/linux/fs.h  158  #define FS_IOC_SETVERSION _IOW('v',2,long)
FS_IOC_FIEMAP  macro  include/uapi/linux/fs.h  159  #define FS_IOC_FIEMAP _IOWR('f',11,struct fiemap)
FS_IOC32_GETFLAGS  macro  include/uapi/linux/fs.h  160  #define FS_IOC32_GETFLAGS _IOR('f',1,int)
FS_IOC32_SETFLAGS  macro  include/uapi/linux/fs.h  161  #define FS_IOC32_SETFLAGS _IOW('f',2,int)
FS_IOC32_GETVERSION  macro  include/uapi/linux/fs.h  162  #define FS_IOC32_GETVERSION _IOR('v',1,int)
FS_IOC32_SETVERSION  macro  include/uapi/linux/fs.h  163  #define FS_IOC32_SETVERSION _IOW('v',2,int)
FS_SECRM_FL  macro  include/uapi/linux/fs.h  168  #define FS_SECRM_FL 0x00000001
FS_UNRM_FL  macro  include/uapi/linux/fs.h  169  #define FS_UNRM_FL 0x00000002
FS_COMPR_FL  macro  include/uapi/linux/fs.h  170  #define FS_COMPR_FL 0x00000004
FS_SYNC_FL  macro  include/uapi/linux/fs.h  171  #define FS_SYNC_FL 0x00000008
FS_IMMUTABLE_FL  macro  include/uapi/linux/fs.h  172  #define FS_IMMUTABLE_FL 0x00000010
FS_APPEND_FL  macro  include/uapi/linux/fs.h  173  #define FS_APPEND_FL 0x00000020
FS_NODUMP_FL  macro  include/uapi/linux/fs.h  174  #define FS_NODUMP_FL 0x00000040
FS_NOATIME_FL  macro  include/uapi/linux/fs.h  175  #define FS_NOATIME_FL 0x00000080
FS_DIRTY_FL  macro  include/uapi/linux/fs.h  177  #define FS_DIRTY_FL 0x00000100
FS_COMPRBLK_FL  macro  include/uapi/linux/fs.h  178  #define FS_COMPRBLK_FL 0x00000200
FS_NOCOMP_FL  macro  include/uapi/linux/fs.h  179  #define FS_NOCOMP_FL 0x00000400
FS_ECOMPR_FL  macro  include/uapi/linux/fs.h  180  #define FS_ECOMPR_FL 0x00000800
FS_BTREE_FL  macro  include/uapi/linux/fs.h  182  #define FS_BTREE_FL 0x00001000
FS_INDEX_FL  macro  include/uapi/linux/fs.h  183  #define FS_INDEX_FL 0x00001000
FS_IMAGIC_FL  macro  include/uapi/linux/fs.h  184  #define FS_IMAGIC_FL 0x00002000
FS_JOURNAL_DATA_FL  macro  include/uapi/linux/fs.h  185  #define FS_JOURNAL_DATA_FL 0x00004000
FS_NOTAIL_FL  macro  include/uapi/linux/fs.h  186  #define FS_NOTAIL_FL 0x00008000
FS_DIRSYNC_FL  macro  include/uapi/linux/fs.h  187  #define FS_DIRSYNC_FL 0x00010000
FS_TOPDIR_FL  macro  include/uapi/linux/fs.h  188  #define FS_TOPDIR_FL 0x00020000
FS_EXTENT_FL  macro  include/uapi/linux/fs.h  189  #define FS_EXTENT_FL 0x00080000
FS_DIRECTIO_FL  macro  include/uapi/linux/fs.h  190  #define FS_DIRECTIO_FL 0x00100000
FS_NOCOW_FL  macro  include/uapi/linux/fs.h  191  #define FS_NOCOW_FL 0x00800000
FS_RESERVED_FL  macro  include/uapi/linux/fs.h  192  #define FS_RESERVED_FL 0x80000000
FS_FL_USER_VISIBLE  macro  include/uapi/linux/fs.h  194  #define FS_FL_USER_VISIBLE 0x0003DFFF
FS_FL_USER_MODIFIABLE  macro  include/uapi/linux/fs.h  195  #define FS_FL_USER_MODIFIABLE 0x000380FF
SYNC_FILE_RANGE_WAIT_BEFORE  macro  include/uapi/linux/fs.h  198  #define SYNC_FILE_RANGE_WAIT_BEFORE 1
SYNC_FILE_RANGE_WRITE  macro  include/uapi/linux/fs.h  199  #define SYNC_FILE_RANGE_WRITE 2
SYNC_FILE_RANGE_WAIT_AFTER  macro  include/uapi/linux/fs.h  200  #define SYNC_FILE_RANGE_WAIT_AFTER 4
_LINUX_QUOTA_  macro  include/linux/quota.h  33  #define _LINUX_QUOTA_
USRQUOTA  enumerator  include/linux/quota.h  54  USRQUOTA = 0,
GRPQUOTA  enumerator  include/linux/quota.h  55  GRPQUOTA = 1,
quota_type  enum  include/linux/quota.h  53  enum quota_type {
PRJQUOTA  enumerator  include/linux/quota.h  56  PRJQUOTA = 2,
qid_t  typedef  include/linux/quota.h  59  typedef __kernel_uid32_t qid_t;
qsize_t  typedef  include/linux/quota.h  60  typedef long long qsize_t;
kqid  struct  include/linux/quota.h  62  struct kqid {
qid_eq  prototype  include/linux/quota.h  71  extern bool qid_eq(struct kqid left,struct kqid right);
qid_lt  prototype  include/linux/quota.h  72  extern bool qid_lt(struct kqid left,struct kqid right);
from_kqid  prototype  include/linux/quota.h  73  extern qid_t from_kqid(struct user_namespace *to,struct kqid qid);
from_kqid_munged  prototype  include/linux/quota.h  74  extern qid_t from_kqid_munged(struct user_namespace *to,struct kqid qid);
qid_valid  prototype  include/linux/quota.h  75  extern bool qid_valid(struct kqid qid);
make_kqid  function  include/linux/quota.h  92  static inline struct kqid make_kqid(struct user_namespace *from,enum quota_type type, qid_t qid)
make_kqid_invalid  function  include/linux/quota.h  119  static inline struct kqid make_kqid_invalid(enum quota_type type)
make_kqid_uid  function  include/linux/quota.h  144  static inline struct kqid make_kqid_uid(kuid_t uid)
make_kqid_gid  function  include/linux/quota.h  156  static inline struct kqid make_kqid_gid(kgid_t gid)
make_kqid_projid  function  include/linux/quota.h  168  static inline struct kqid make_kqid_projid(kprojid_t projid)
DQUOT_INIT_ALLOC  macro  include/linux/quota.h  181  #define DQUOT_INIT_ALLOC max(V1_INIT_ALLOC,V2_INIT_ALLOC)
DQUOT_INIT_REWRITE  macro  include/linux/quota.h  182  #define DQUOT_INIT_REWRITE max(V1_INIT_REWRITE,V2_INIT_REWRITE)
DQUOT_DEL_ALLOC  macro  include/linux/quota.h  183  #define DQUOT_DEL_ALLOC max(V1_DEL_ALLOC,V2_DEL_ALLOC)
DQUOT_DEL_REWRITE  macro  include/linux/quota.h  184  #define DQUOT_DEL_REWRITE max(V1_DEL_REWRITE,V2_DEL_REWRITE)
mem_dqblk  struct  include/linux/quota.h  189  struct mem_dqblk {
mem_dqinfo  struct  include/linux/quota.h  206  struct mem_dqinfo {
DQF_MASK  macro  include/linux/quota.h  221  #define DQF_MASK 0xffff
DQF_GETINFO_MASK  macro  include/linux/quota.h  222  #define DQF_GETINFO_MASK 0x1ffff
DQF_SETINFO_MASK  macro  include/linux/quota.h  223  #define DQF_SETINFO_MASK 0xffff
DQF_SYS_FILE_B  macro  include/linux/quota.h  224  #define DQF_SYS_FILE_B 16
DQF_SYS_FILE  macro  include/linux/quota.h  225  #define DQF_SYS_FILE (1 << DQF_SYS_FILE_B)
DQF_INFO_DIRTY_B  macro  include/linux/quota.h  226  #define DQF_INFO_DIRTY_B 31
DQF_INFO_DIRTY  macro  include/linux/quota.h  227  #define DQF_INFO_DIRTY (1 << DQF_INFO_DIRTY_B)
mark_info_dirty  prototype  include/linux/quota.h  229  extern void mark_info_dirty(struct super_block *sb,int type);
info_dirty  function  include/linux/quota.h  230  static inline int info_dirty(struct mem_dqinfo *info)
DQST_LOOKUPS  enumerator  include/linux/quota.h  236  DQST_LOOKUPS,
DQST_DROPS  enumerator  include/linux/quota.h  237  DQST_DROPS,
DQST_READS  enumerator  include/linux/quota.h  238  DQST_READS,
DQST_WRITES  enumerator  include/linux/quota.h  239  DQST_WRITES,
DQST_CACHE_HITS  enumerator  include/linux/quota.h  240  DQST_CACHE_HITS,
DQST_ALLOC_DQUOTS  enumerator  include/linux/quota.h  241  DQST_ALLOC_DQUOTS,
DQST_FREE_DQUOTS  enumerator  include/linux/quota.h  242  DQST_FREE_DQUOTS,
DQST_SYNCS  enumerator  include/linux/quota.h  243  DQST_SYNCS,
_DQST_DQSTAT_LAST  enumerator  include/linux/quota.h  244  _DQST_DQSTAT_LAST
dqstats  struct  include/linux/quota.h  247  struct dqstats {
dqstats_inc  function  include/linux/quota.h  255  static inline void dqstats_inc(unsigned int type)
dqstats_dec  function  include/linux/quota.h  260  static inline void dqstats_dec(unsigned int type)
DQ_MOD_B  macro  include/linux/quota.h  265  #define DQ_MOD_B 0
DQ_BLKS_B  macro  include/linux/quota.h  266  #define DQ_BLKS_B 1
DQ_INODES_B  macro  include/linux/quota.h  267  #define DQ_INODES_B 2
DQ_FAKE_B  macro  include/linux/quota.h  268  #define DQ_FAKE_B 3
DQ_READ_B  macro  include/linux/quota.h  269  #define DQ_READ_B 4
DQ_ACTIVE_B  macro  include/linux/quota.h  270  #define DQ_ACTIVE_B 5
DQ_LASTSET_B  macro  include/linux/quota.h  271  #define DQ_LASTSET_B 6
dquot  struct  include/linux/quota.h  277  struct dquot {
quota_format_ops  struct  include/linux/quota.h  293  struct quota_format_ops {
dquot_operations  struct  include/linux/quota.h  304  struct dquot_operations {
quotactl_ops  struct  include/linux/quota.h  320  struct quotactl_ops {
quota_format_type  struct  include/linux/quota.h  333  struct quota_format_type {
_DQUOT_USAGE_ENABLED  enumerator  include/linux/quota.h  342  _DQUOT_USAGE_ENABLED = 0,
_DQUOT_LIMITS_ENABLED  enumerator  include/linux/quota.h  343  _DQUOT_LIMITS_ENABLED,
_DQUOT_SUSPENDED  enumerator  include/linux/quota.h  344  _DQUOT_SUSPENDED,
_DQUOT_STATE_FLAGS  enumerator  include/linux/quota.h  347  _DQUOT_STATE_FLAGS
DQUOT_USAGE_ENABLED  macro  include/linux/quota.h  349  #define DQUOT_USAGE_ENABLED (1 << _DQUOT_USAGE_ENABLED)
DQUOT_LIMITS_ENABLED  macro  include/linux/quota.h  350  #define DQUOT_LIMITS_ENABLED (1 << _DQUOT_LIMITS_ENABLED)
DQUOT_SUSPENDED  macro  include/linux/quota.h  351  #define DQUOT_SUSPENDED (1 << _DQUOT_SUSPENDED)
DQUOT_STATE_FLAGS  macro  include/linux/quota.h  352  #define DQUOT_STATE_FLAGS (DQUOT_USAGE_ENABLED | DQUOT_LIMITS_ENABLED | \
DQUOT_STATE_LAST  macro  include/linux/quota.h  355  #define DQUOT_STATE_LAST (_DQUOT_STATE_FLAGS * MAXQUOTAS)
DQUOT_QUOTA_SYS_FILE  macro  include/linux/quota.h  356  #define DQUOT_QUOTA_SYS_FILE (1 << DQUOT_STATE_LAST)
DQUOT_NEGATIVE_USAGE  macro  include/linux/quota.h  363  #define DQUOT_NEGATIVE_USAGE (1 << (DQUOT_STATE_LAST + 1))
dquot_state_flag  function  include/linux/quota.h  366  static inline unsigned int dquot_state_flag(unsigned int flags,int type)
dquot_generic_flag  function  include/linux/quota.h  371  static inline unsigned int dquot_generic_flag(unsigned int flags,int type)
quota_send_warning  function  include/linux/quota.h  381  static inline void quota_send_warning(struct kqid qid,dev_t dev,const char warntype)
quota_info  struct  include/linux/quota.h  387  struct quota_info {
register_quota_format  prototype  include/linux/quota.h  397  int register_quota_format(struct quota_format_type *fmt);
unregister_quota_format  prototype  include/linux/quota.h  398  void unregister_quota_format(struct quota_format_type *fmt);
quota_module_name  struct  include/linux/quota.h  400  struct quota_module_name {
INIT_QUOTA_MODULE_NAMES  macro  include/linux/quota.h  405  #define INIT_QUOTA_MODULE_NAMES {\
__LINUX_SEQLOCK_H  macro  include/linux/seqlock.h  2  #define __LINUX_SEQLOCK_H
seqlock_t  typedef  include/linux/seqlock.h  36  } seqlock_t;
__SEQLOCK_UNLOCKED  macro  include/linux/seqlock.h  42  #define __SEQLOCK_UNLOCKED(lockname) \
seqlock_init  macro  include/linux/seqlock.h  45  #define seqlock_init(x) \
DEFINE_SEQLOCK  macro  include/linux/seqlock.h  51  #define DEFINE_SEQLOCK(x) \
write_seqlock  function  include/linux/seqlock.h  58  static inline void write_seqlock(seqlock_t *sl)
write_sequnlock  function  include/linux/seqlock.h  65  static inline void write_sequnlock(seqlock_t *sl)
write_tryseqlock  function  include/linux/seqlock.h  72  static inline int write_tryseqlock(seqlock_t *sl)
read_seqbegin  function  include/linux/seqlock.h  84  static __always_inline unsigned read_seqbegin(const seqlock_t *sl)
read_seqretry  function  include/linux/seqlock.h  104  static __always_inline int read_seqretry(const seqlock_t *sl,unsigned start)
seqcount  struct  include/linux/seqlock.h  119  typedef struct seqcount {
seqcount_t  typedef  include/linux/seqlock.h  121  } seqcount_t;
SEQCNT_ZERO  macro  include/linux/seqlock.h  123  #define SEQCNT_ZERO { 0 }
seqcount_init  macro  include/linux/seqlock.h  124  #define seqcount_init(x) do { *(x) = (seqcount_t) SEQCNT_ZERO; } while (0)
__read_seqcount_begin  function  include/linux/seqlock.h  139  static inline unsigned __read_seqcount_begin(const seqcount_t *s)
read_seqcount_begin  function  include/linux/seqlock.h  161  static inline unsigned read_seqcount_begin(const seqcount_t *s)
raw_seqcount_begin  function  include/linux/seqlock.h  182  static inline unsigned raw_seqcount_begin(const seqcount_t *s)
__read_seqcount_retry  function  include/linux/seqlock.h  203  static inline int __read_seqcount_retry(const seqcount_t *s,unsigned start)
read_seqcount_retry  function  include/linux/seqlock.h  218  static inline int read_seqcount_retry(const seqcount_t *s,unsigned start)
write_seqcount_begin  function  include/linux/seqlock.h  230  static inline void write_seqcount_begin(seqcount_t *s)
write_seqcount_end  function  include/linux/seqlock.h  236  static inline void write_seqcount_end(seqcount_t *s)
write_seqcount_barrier  function  include/linux/seqlock.h  249  static inline void write_seqcount_barrier(seqcount_t *s)
write_seqlock_irqsave  macro  include/linux/seqlock.h  258  #define write_seqlock_irqsave(lock,flags) \
write_seqlock_irq  macro  include/linux/seqlock.h  260  #define write_seqlock_irq(lock) \
write_seqlock_bh  macro  include/linux/seqlock.h  262  #define write_seqlock_bh(lock) \
write_sequnlock_irqrestore  macro  include/linux/seqlock.h  265  #define write_sequnlock_irqrestore(lock,flags) \
write_sequnlock_irq  macro  include/linux/seqlock.h  267  #define write_sequnlock_irq(lock) \
write_sequnlock_bh  macro  include/linux/seqlock.h  269  #define write_sequnlock_bh(lock) \
read_seqbegin_irqsave  macro  include/linux/seqlock.h  272  #define read_seqbegin_irqsave(lock,flags) \
read_seqretry_irqrestore  macro  include/linux/seqlock.h  275  #define read_seqretry_irqrestore(lock,iv,flags) \
_NFS_FS_I  macro  include/linux/nfs_fs_i.h  2  #define _NFS_FS_I
nfs_lock_info  struct  include/linux/nfs_fs_i.h  9  struct nfs_lock_info {
nfs4_lock_info  struct  include/linux/nfs_fs_i.h  16  struct nfs4_lock_info {
_LINUX_FCNTL_H  macro  include/linux/fcntl.h  2  #define _LINUX_FCNTL_H
force_o_largefile  macro  include/linux/fcntl.h  8  #define force_o_largefile() (BITS_PER_LONG != 32)
IS_GETLK32  macro  include/linux/fcntl.h  19  #define IS_GETLK32(cmd) (0)
IS_SETLK32  macro  include/linux/fcntl.h  20  #define IS_SETLK32(cmd) (0)
IS_SETLKW32  macro  include/linux/fcntl.h  21  #define IS_SETLKW32(cmd) (0)
IS_GETLK64  macro  include/linux/fcntl.h  22  #define IS_GETLK64(cmd) ((cmd) == F_GETLK)
IS_SETLK64  macro  include/linux/fcntl.h  23  #define IS_SETLK64(cmd) ((cmd) == F_SETLK)
IS_SETLKW64  macro  include/linux/fcntl.h  24  #define IS_SETLKW64(cmd) ((cmd) == F_SETLKW)
IS_GETLK  macro  include/linux/fcntl.h  27  #define IS_GETLK(cmd) (IS_GETLK32(cmd) || IS_GETLK64(cmd))
IS_SETLK  macro  include/linux/fcntl.h  28  #define IS_SETLK(cmd) (IS_SETLK32(cmd) || IS_SETLK64(cmd))
IS_SETLKW  macro  include/linux/fcntl.h  29  #define IS_SETLKW(cmd) (IS_SETLKW32(cmd) || IS_SETLKW64(cmd))
_LINUX_ERR_H  macro  include/linux/err.h  2  #define _LINUX_ERR_H
MAX_ERRNO  macro  include/linux/err.h  16  #define MAX_ERRNO 4095
IS_ERR_VALUE  macro  include/linux/err.h  20  #define IS_ERR_VALUE(x) unlikely((x) >= (unsigned long)-MAX_ERRNO)
ERR_PTR  function  include/linux/err.h  22  static inline void * __must_check ERR_PTR(long error)
PTR_ERR  function  include/linux/err.h  27  static inline long __must_check PTR_ERR(const void *ptr)
IS_ERR  function  include/linux/err.h  32  static inline long __must_check IS_ERR(const void *ptr)
IS_ERR_OR_NULL  function  include/linux/err.h  37  static inline long __must_check IS_ERR_OR_NULL(const void *ptr)
ERR_CAST  function  include/linux/err.h  49  static inline void * __must_check ERR_CAST(const void *ptr)
PTR_RET  function  include/linux/err.h  55  static inline int __must_check PTR_RET(const void *ptr)
_LINUX_STDDEF_H  macro  include/linux/stddef.h  2  #define _LINUX_STDDEF_H
NULL  macro  include/linux/stddef.h  8  #define NULL ((void *)0)
false  enumerator  include/linux/stddef.h  11  false = 0,
true  enumerator  include/linux/stddef.h  12  true = 1
offsetof  macro  include/linux/stddef.h  19  #define offsetof(TYPE,MEMBER) ((size_t) &((TYPE *)0)->MEMBER)
_LINUX_BITOPS_H  macro  include/linux/bitops.h  2  #define _LINUX_BITOPS_H
BIT  macro  include/linux/bitops.h  6  #define BIT(nr) (1UL << (nr))
BIT_MASK  macro  include/linux/bitops.h  7  #define BIT_MASK(nr) (1UL << ((nr) % BITS_PER_LONG))
BIT_WORD  macro  include/linux/bitops.h  8  #define BIT_WORD(nr) ((nr) / BITS_PER_LONG)
BITS_PER_BYTE  macro  include/linux/bitops.h  9  #define BITS_PER_BYTE 8
BITS_TO_LONGS  macro  include/linux/bitops.h  10  #define BITS_TO_LONGS(nr) DIV_ROUND_UP(nr,BITS_PER_BYTE * sizeof(long))
__sw_hweight8  prototype  include/linux/bitops.h  13  extern unsigned int __sw_hweight8(unsigned int w);
__sw_hweight16  prototype  include/linux/bitops.h  14  extern unsigned int __sw_hweight16(unsigned int w);
__sw_hweight32  prototype  include/linux/bitops.h  15  extern unsigned int __sw_hweight32(unsigned int w);
__sw_hweight64  prototype  include/linux/bitops.h  16  extern unsigned long __sw_hweight64(__u64 w);
for_each_set_bit  macro  include/linux/bitops.h  24  #define for_each_set_bit(bit,addr,size) \
for_each_set_bit_from  macro  include/linux/bitops.h  30  #define for_each_set_bit_from(bit,addr,size) \
for_each_clear_bit  macro  include/linux/bitops.h  35  #define for_each_clear_bit(bit,addr,size) \
for_each_clear_bit_from  macro  include/linux/bitops.h  41  #define for_each_clear_bit_from(bit,addr,size) \
get_bitmask_order  function  include/linux/bitops.h  46  static __inline__ int get_bitmask_order(unsigned int count)
get_count_order  function  include/linux/bitops.h  54  static __inline__ int get_count_order(unsigned int count)
hweight_long  function  include/linux/bitops.h  64  static inline unsigned long hweight_long(unsigned long w)
rol64  function  include/linux/bitops.h  74  static inline __u64 rol64(__u64 word,unsigned int shift)
ror64  function  include/linux/bitops.h  84  static inline __u64 ror64(__u64 word,unsigned int shift)
rol32  function  include/linux/bitops.h  94  static inline __u32 rol32(__u32 word,unsigned int shift)
ror32  function  include/linux/bitops.h  104  static inline __u32 ror32(__u32 word,unsigned int shift)
rol16  function  include/linux/bitops.h  114  static inline __u16 rol16(__u16 word,unsigned int shift)
ror16  function  include/linux/bitops.h  124  static inline __u16 ror16(__u16 word,unsigned int shift)
rol8  function  include/linux/bitops.h  134  static inline __u8 rol8(__u8 word,unsigned int shift)
ror8  function  include/linux/bitops.h  144  static inline __u8 ror8(__u8 word,unsigned int shift)
sign_extend32  function  include/linux/bitops.h  154  static inline __s32 sign_extend32(__u32 value,int index)
fls_long  function  include/linux/bitops.h  160  static inline unsigned fls_long(unsigned long l)
__ffs64  function  include/linux/bitops.h  175  static inline unsigned long __ffs64(u64 word)
find_last_bit  prototype  include/linux/bitops.h  197  extern unsigned long find_last_bit(const unsigned long *addr,unsigned long size);
_LINUX_LOG2_H  macro  include/linux/log2.h  13  #define _LINUX_LOG2_H
____ilog2_NaN  prototype  include/linux/log2.h  22  int ____ilog2_NaN(void);
__ilog2_u32  function  include/linux/log2.h  32  int __ilog2_u32(u32 n)
__ilog2_u64  function  include/linux/log2.h  40  int __ilog2_u64(u64 n)
is_power_of_2  function  include/linux/log2.h  52  bool is_power_of_2(unsigned long n)
__roundup_pow_of_two  function  include/linux/log2.h  61  unsigned long __roundup_pow_of_two(unsigned long n)
__rounddown_pow_of_two  function  include/linux/log2.h  70  unsigned long __rounddown_pow_of_two(unsigned long n)
ilog2  macro  include/linux/log2.h  85  #define ilog2(n) \
roundup_pow_of_two  macro  include/linux/log2.h  168  #define roundup_pow_of_two(n) \
rounddown_pow_of_two  macro  include/linux/log2.h  185  #define rounddown_pow_of_two(n) \
order_base_2  macro  include/linux/log2.h  206  #define order_base_2(n) ilog2(roundup_pow_of_two(n))
TYPECHECK_H_INCLUDED  macro  include/linux/typecheck.h  2  #define TYPECHECK_H_INCLUDED
typecheck  macro  include/linux/typecheck.h  8  #define typecheck(type,x) \
typecheck_fn  macro  include/linux/typecheck.h  19  #define typecheck_fn(type,function) \
__KERNEL_PRINTK__  macro  include/linux/printk.h  2  #define __KERNEL_PRINTK__
printk_get_level  function  include/linux/printk.h  10  static inline int printk_get_level(const char *buffer)
printk_skip_level  function  include/linux/printk.h  22  static inline const char *printk_skip_level(const char *buffer)
console_loglevel  macro  include/linux/printk.h  36  #define console_loglevel (console_printk[0])
default_message_loglevel  macro  include/linux/printk.h  37  #define default_message_loglevel (console_printk[1])
minimum_console_loglevel  macro  include/linux/printk.h  38  #define minimum_console_loglevel (console_printk[2])
default_console_loglevel  macro  include/linux/printk.h  39  #define default_console_loglevel (console_printk[3])
console_silent  function  include/linux/printk.h  41  static inline void console_silent(void)
console_verbose  function  include/linux/printk.h  46  static inline void console_verbose(void)
va_format  struct  include/linux/printk.h  52  struct va_format {
FW_BUG  macro  include/linux/printk.h  77  #define FW_BUG "[Firmware Bug]: "
FW_WARN  macro  include/linux/printk.h  78  #define FW_WARN "[Firmware Warn]: "
FW_INFO  macro  include/linux/printk.h  79  #define FW_INFO "[Firmware Info]: "
HW_ERR  macro  include/linux/printk.h  86  #define HW_ERR "[Hardware Error]: "
no_printk  function  include/linux/printk.h  93  int no_printk(const char *fmt,...)
early_printk  prototype  include/linux/printk.h  99  void early_printk(const char *fmt,...);
printk_needs_cpu  prototype  include/linux/printk.h  101  extern int printk_needs_cpu(int cpu);
printk_tick  prototype  include/linux/printk.h  102  extern void printk_tick(void);
vprintk_emit  prototype  include/linux/printk.h  108  int vprintk_emit(int facility,int level,const char *dict, size_t dictlen,const char *fmt, va_list args);
vprintk  function  include/linux/printk.h  144  int vprintk(const char *s,va_list args)
printk_emit  prototype  include/linux/printk.h  116  asmlinkage int printk_emit(int facility,int level,const char *dict, size_t dictlen,const char *fmt, ...);
printk  function  include/linux/printk.h  149  int printk(const char *s,...)
printk_sched  function  include/linux/printk.h  154  int printk_sched(const char *s,...)
__printk_ratelimit  prototype  include/linux/printk.h  131  extern int __printk_ratelimit(const char *func);
printk_ratelimit  function  include/linux/printk.h  158  static inline int printk_ratelimit(void)
printk_timed_ratelimit  function  include/linux/printk.h  163  static inline bool printk_timed_ratelimit(unsigned long *caller_jiffies,unsigned int interval_msec)
log_buf_kexec_setup  function  include/linux/printk.h  168  static inline void log_buf_kexec_setup(void)
setup_log_buf  function  include/linux/printk.h  172  static inline void setup_log_buf(int early)
pr_fmt  macro  include/linux/printk.h  180  #define pr_fmt(fmt) fmt
pr_emerg  macro  include/linux/printk.h  183  #define pr_emerg(fmt,...) \
pr_alert  macro  include/linux/printk.h  185  #define pr_alert(fmt,...) \
pr_crit  macro  include/linux/printk.h  187  #define pr_crit(fmt,...) \
pr_err  macro  include/linux/printk.h  189  #define pr_err(fmt,...) \
pr_warning  macro  include/linux/printk.h  191  #define pr_warning(fmt,...) \
pr_warn  macro  include/linux/printk.h  193  #define pr_warn pr_warning
pr_notice  macro  include/linux/printk.h  194  #define pr_notice(fmt,...) \
pr_info  macro  include/linux/printk.h  196  #define pr_info(fmt,...) \
pr_cont  macro  include/linux/printk.h  198  #define pr_cont(fmt,...) \
pr_devel  macro  include/linux/printk.h  206  #define pr_devel(fmt,...) \
pr_debug  macro  include/linux/printk.h  219  #define pr_debug(fmt,...) \
printk_once  macro  include/linux/printk.h  238  #define printk_once(fmt,...) \
pr_emerg_once  macro  include/linux/printk.h  242  #define pr_emerg_once(fmt,...) \
pr_alert_once  macro  include/linux/printk.h  244  #define pr_alert_once(fmt,...) \
pr_crit_once  macro  include/linux/printk.h  246  #define pr_crit_once(fmt,...) \
pr_err_once  macro  include/linux/printk.h  248  #define pr_err_once(fmt,...) \
pr_warn_once  macro  include/linux/printk.h  250  #define pr_warn_once(fmt,...) \
pr_notice_once  macro  include/linux/printk.h  252  #define pr_notice_once(fmt,...) \
pr_info_once  macro  include/linux/printk.h  254  #define pr_info_once(fmt,...) \
pr_cont_once  macro  include/linux/printk.h  256  #define pr_cont_once(fmt,...) \
pr_debug_once  macro  include/linux/printk.h  263  #define pr_debug_once(fmt,...) \
printk_ratelimited  macro  include/linux/printk.h  282  #define printk_ratelimited(fmt,...) \
pr_emerg_ratelimited  macro  include/linux/printk.h  286  #define pr_emerg_ratelimited(fmt,...) \
pr_alert_ratelimited  macro  include/linux/printk.h  288  #define pr_alert_ratelimited(fmt,...) \
pr_crit_ratelimited  macro  include/linux/printk.h  290  #define pr_crit_ratelimited(fmt,...) \
pr_err_ratelimited  macro  include/linux/printk.h  292  #define pr_err_ratelimited(fmt,...) \
pr_warn_ratelimited  macro  include/linux/printk.h  294  #define pr_warn_ratelimited(fmt,...) \
pr_notice_ratelimited  macro  include/linux/printk.h  296  #define pr_notice_ratelimited(fmt,...) \
pr_info_ratelimited  macro  include/linux/printk.h  298  #define pr_info_ratelimited(fmt,...) \
pr_debug_ratelimited  macro  include/linux/printk.h  306  #define pr_debug_ratelimited(fmt,...) \
DUMP_PREFIX_NONE  enumerator  include/linux/printk.h  313  DUMP_PREFIX_NONE,
DUMP_PREFIX_ADDRESS  enumerator  include/linux/printk.h  314  DUMP_PREFIX_ADDRESS,
DUMP_PREFIX_OFFSET  enumerator  include/linux/printk.h  315  DUMP_PREFIX_OFFSET
hex_dump_to_buffer  prototype  include/linux/printk.h  319  extern void hex_dump_to_buffer(const void *buf,size_t len,int rowsize, int groupsize,char *linebuf, size_t linebuflen, bool ascii);
print_hex_dump  function  include/linux/printk.h  329  static inline void print_hex_dump(const char *level,const char *prefix_str,int prefix_type, int rowsize, int groupsize,const void *buf, size_t len, bool ascii)
print_hex_dump_bytes  function  include/linux/printk.h  333  static inline void print_hex_dump_bytes(const char *prefix_str,int prefix_type,const void *buf, size_t len)
_DYNAMIC_DEBUG_H  macro  include/linux/dynamic_debug.h  2  #define _DYNAMIC_DEBUG_H
_ddebug  struct  include/linux/dynamic_debug.h  9  struct _ddebug {
_DPRINTK_FLAGS_NONE  macro  include/linux/dynamic_debug.h  24  #define _DPRINTK_FLAGS_NONE 0
_DPRINTK_FLAGS_PRINT  macro  include/linux/dynamic_debug.h  25  #define _DPRINTK_FLAGS_PRINT (1<<0)
_DPRINTK_FLAGS_INCL_MODNAME  macro  include/linux/dynamic_debug.h  26  #define _DPRINTK_FLAGS_INCL_MODNAME (1<<1)
_DPRINTK_FLAGS_INCL_FUNCNAME  macro  include/linux/dynamic_debug.h  27  #define _DPRINTK_FLAGS_INCL_FUNCNAME (1<<2)
_DPRINTK_FLAGS_INCL_LINENO  macro  include/linux/dynamic_debug.h  28  #define _DPRINTK_FLAGS_INCL_LINENO (1<<3)
_DPRINTK_FLAGS_INCL_TID  macro  include/linux/dynamic_debug.h  29  #define _DPRINTK_FLAGS_INCL_TID (1<<4)
_DPRINTK_FLAGS_DEFAULT  macro  include/linux/dynamic_debug.h  33  #define _DPRINTK_FLAGS_DEFAULT 0
ddebug_add_module  prototype  include/linux/dynamic_debug.h  40  int ddebug_add_module(struct _ddebug *tab,unsigned int n,const char *modname);
ddebug_remove_module  function  include/linux/dynamic_debug.h  103  static inline int ddebug_remove_module(const char *mod)
__dynamic_pr_debug  prototype  include/linux/dynamic_debug.h  45  int __dynamic_pr_debug(struct _ddebug *descriptor,const char *fmt,...);
ddebug_dyndbg_module_param_cb  function  include/linux/dynamic_debug.h  109  static inline int ddebug_dyndbg_module_param_cb(char *param,char *val,const char *modname)
__dynamic_dev_dbg  prototype  include/linux/dynamic_debug.h  54  int __dynamic_dev_dbg(struct _ddebug *descriptor,const struct device *dev,const char *fmt, ...);
__dynamic_netdev_dbg  prototype  include/linux/dynamic_debug.h  61  int __dynamic_netdev_dbg(struct _ddebug *descriptor,const struct net_device *dev,const char *fmt, ...);
DEFINE_DYNAMIC_DEBUG_METADATA  macro  include/linux/dynamic_debug.h  63  #define DEFINE_DYNAMIC_DEBUG_METADATA(name,fmt) \
dynamic_pr_debug  macro  include/linux/dynamic_debug.h  120  #define dynamic_pr_debug(fmt,...) \
dynamic_dev_dbg  macro  include/linux/dynamic_debug.h  122  #define dynamic_dev_dbg(dev,fmt,...) \
dynamic_netdev_dbg  macro  include/linux/dynamic_debug.h  90  #define dynamic_netdev_dbg(dev,fmt,...) \
_UAPI_LINUX_KERNEL_H  macro  include/uapi/linux/kernel.h  2  #define _UAPI_LINUX_KERNEL_H
__ALIGN_KERNEL  macro  include/uapi/linux/kernel.h  9  #define __ALIGN_KERNEL(x,a) __ALIGN_KERNEL_MASK(x,(typeof(x))(a) - 1)
__ALIGN_KERNEL_MASK  macro  include/uapi/linux/kernel.h  10  #define __ALIGN_KERNEL_MASK(x,mask) (((x) + (mask)) & ~(mask))
_ASM_X86_DIV64_H  macro  arch/x86/include/asm/div64.h  2  #define _ASM_X86_DIV64_H
do_div  macro  arch/x86/include/asm/div64.h  21  #define do_div(n,base) \
div_u64_rem  macro  arch/x86/include/asm/div64.h  60  #define div_u64_rem div_u64_rem
_UAPI_LINUX_STRING_H_  macro  include/uapi/linux/string.h  2  #define _UAPI_LINUX_STRING_H_
_UAPI_LINUX_KD_H  macro  include/uapi/linux/kd.h  2  #define _UAPI_LINUX_KD_H
GIO_FONT  macro  include/uapi/linux/kd.h  8  #define GIO_FONT 0x4B60
PIO_FONT  macro  include/uapi/linux/kd.h  9  #define PIO_FONT 0x4B61
GIO_FONTX  macro  include/uapi/linux/kd.h  11  #define GIO_FONTX 0x4B6B
PIO_FONTX  macro  include/uapi/linux/kd.h  12  #define PIO_FONTX 0x4B6C
consolefontdesc  struct  include/uapi/linux/kd.h  13  struct consolefontdesc {
PIO_FONTRESET  macro  include/uapi/linux/kd.h  19  #define PIO_FONTRESET 0x4B6D
GIO_CMAP  macro  include/uapi/linux/kd.h  21  #define GIO_CMAP 0x4B70
PIO_CMAP  macro  include/uapi/linux/kd.h  22  #define PIO_CMAP 0x4B71
KIOCSOUND  macro  include/uapi/linux/kd.h  24  #define KIOCSOUND 0x4B2F
KDMKTONE  macro  include/uapi/linux/kd.h  25  #define KDMKTONE 0x4B30
KDGETLED  macro  include/uapi/linux/kd.h  27  #define KDGETLED 0x4B31
KDSETLED  macro  include/uapi/linux/kd.h  28  #define KDSETLED 0x4B32
LED_SCR  macro  include/uapi/linux/kd.h  29  #define LED_SCR 0x01
LED_NUM  macro  include/uapi/linux/kd.h  30  #define LED_NUM 0x02
LED_CAP  macro  include/uapi/linux/kd.h  31  #define LED_CAP 0x04
KDGKBTYPE  macro  include/uapi/linux/kd.h  33  #define KDGKBTYPE 0x4B33
KB_84  macro  include/uapi/linux/kd.h  34  #define KB_84 0x01
KB_101  macro  include/uapi/linux/kd.h  35  #define KB_101 0x02
KB_OTHER  macro  include/uapi/linux/kd.h  36  #define KB_OTHER 0x03
KDADDIO  macro  include/uapi/linux/kd.h  38  #define KDADDIO 0x4B34
KDDELIO  macro  include/uapi/linux/kd.h  39  #define KDDELIO 0x4B35
KDENABIO  macro  include/uapi/linux/kd.h  40  #define KDENABIO 0x4B36
KDDISABIO  macro  include/uapi/linux/kd.h  41  #define KDDISABIO 0x4B37
KDSETMODE  macro  include/uapi/linux/kd.h  43  #define KDSETMODE 0x4B3A
KD_TEXT  macro  include/uapi/linux/kd.h  44  #define KD_TEXT 0x00
KD_GRAPHICS  macro  include/uapi/linux/kd.h  45  #define KD_GRAPHICS 0x01
KD_TEXT0  macro  include/uapi/linux/kd.h  46  #define KD_TEXT0 0x02
KD_TEXT1  macro  include/uapi/linux/kd.h  47  #define KD_TEXT1 0x03
KDGETMODE  macro  include/uapi/linux/kd.h  48  #define KDGETMODE 0x4B3B
KDMAPDISP  macro  include/uapi/linux/kd.h  50  #define KDMAPDISP 0x4B3C
KDUNMAPDISP  macro  include/uapi/linux/kd.h  51  #define KDUNMAPDISP 0x4B3D
scrnmap_t  typedef  include/uapi/linux/kd.h  53  typedef char scrnmap_t;
E_TABSZ  macro  include/uapi/linux/kd.h  54  #define E_TABSZ 256
GIO_SCRNMAP  macro  include/uapi/linux/kd.h  55  #define GIO_SCRNMAP 0x4B40
PIO_SCRNMAP  macro  include/uapi/linux/kd.h  56  #define PIO_SCRNMAP 0x4B41
GIO_UNISCRNMAP  macro  include/uapi/linux/kd.h  57  #define GIO_UNISCRNMAP 0x4B69
PIO_UNISCRNMAP  macro  include/uapi/linux/kd.h  58  #define PIO_UNISCRNMAP 0x4B6A
GIO_UNIMAP  macro  include/uapi/linux/kd.h  60  #define GIO_UNIMAP 0x4B66
unipair  struct  include/uapi/linux/kd.h  61  struct unipair {
unimapdesc  struct  include/uapi/linux/kd.h  65  struct unimapdesc {
PIO_UNIMAP  macro  include/uapi/linux/kd.h  69  #define PIO_UNIMAP 0x4B67
PIO_UNIMAPCLR  macro  include/uapi/linux/kd.h  70  #define PIO_UNIMAPCLR 0x4B68
unimapinit  struct  include/uapi/linux/kd.h  71  struct unimapinit {
UNI_DIRECT_BASE  macro  include/uapi/linux/kd.h  77  #define UNI_DIRECT_BASE 0xF000
UNI_DIRECT_MASK  macro  include/uapi/linux/kd.h  78  #define UNI_DIRECT_MASK 0x01FF
K_RAW  macro  include/uapi/linux/kd.h  80  #define K_RAW 0x00
K_XLATE  macro  include/uapi/linux/kd.h  81  #define K_XLATE 0x01
K_MEDIUMRAW  macro  include/uapi/linux/kd.h  82  #define K_MEDIUMRAW 0x02
K_UNICODE  macro  include/uapi/linux/kd.h  83  #define K_UNICODE 0x03
K_OFF  macro  include/uapi/linux/kd.h  84  #define K_OFF 0x04
KDGKBMODE  macro  include/uapi/linux/kd.h  85  #define KDGKBMODE 0x4B44
KDSKBMODE  macro  include/uapi/linux/kd.h  86  #define KDSKBMODE 0x4B45
K_METABIT  macro  include/uapi/linux/kd.h  88  #define K_METABIT 0x03
K_ESCPREFIX  macro  include/uapi/linux/kd.h  89  #define K_ESCPREFIX 0x04
KDGKBMETA  macro  include/uapi/linux/kd.h  90  #define KDGKBMETA 0x4B62
KDSKBMETA  macro  include/uapi/linux/kd.h  91  #define KDSKBMETA 0x4B63
K_SCROLLLOCK  macro  include/uapi/linux/kd.h  93  #define K_SCROLLLOCK 0x01
K_NUMLOCK  macro  include/uapi/linux/kd.h  94  #define K_NUMLOCK 0x02
K_CAPSLOCK  macro  include/uapi/linux/kd.h  95  #define K_CAPSLOCK 0x04
KDGKBLED  macro  include/uapi/linux/kd.h  96  #define KDGKBLED 0x4B64
KDSKBLED  macro  include/uapi/linux/kd.h  97  #define KDSKBLED 0x4B65
kbentry  struct  include/uapi/linux/kd.h  99  struct kbentry {
K_NORMTAB  macro  include/uapi/linux/kd.h  104  #define K_NORMTAB 0x00
K_SHIFTTAB  macro  include/uapi/linux/kd.h  105  #define K_SHIFTTAB 0x01
K_ALTTAB  macro  include/uapi/linux/kd.h  106  #define K_ALTTAB 0x02
K_ALTSHIFTTAB  macro  include/uapi/linux/kd.h  107  #define K_ALTSHIFTTAB 0x03
KDGKBENT  macro  include/uapi/linux/kd.h  109  #define KDGKBENT 0x4B46
KDSKBENT  macro  include/uapi/linux/kd.h  110  #define KDSKBENT 0x4B47
kbsentry  struct  include/uapi/linux/kd.h  112  struct kbsentry {
KDGKBSENT  macro  include/uapi/linux/kd.h  116  #define KDGKBSENT 0x4B48
KDSKBSENT  macro  include/uapi/linux/kd.h  117  #define KDSKBSENT 0x4B49
kbdiacr  struct  include/uapi/linux/kd.h  119  struct kbdiacr {
kbdiacrs  struct  include/uapi/linux/kd.h  122  struct kbdiacrs {
KDGKBDIACR  macro  include/uapi/linux/kd.h  126  #define KDGKBDIACR 0x4B4A
KDSKBDIACR  macro  include/uapi/linux/kd.h  127  #define KDSKBDIACR 0x4B4B
kbdiacruc  struct  include/uapi/linux/kd.h  129  struct kbdiacruc {
kbdiacrsuc  struct  include/uapi/linux/kd.h  132  struct kbdiacrsuc {
KDGKBDIACRUC  macro  include/uapi/linux/kd.h  136  #define KDGKBDIACRUC 0x4BFA
KDSKBDIACRUC  macro  include/uapi/linux/kd.h  137  #define KDSKBDIACRUC 0x4BFB
kbkeycode  struct  include/uapi/linux/kd.h  139  struct kbkeycode {
KDGETKEYCODE  macro  include/uapi/linux/kd.h  142  #define KDGETKEYCODE 0x4B4C
KDSETKEYCODE  macro  include/uapi/linux/kd.h  143  #define KDSETKEYCODE 0x4B4D
KDSIGACCEPT  macro  include/uapi/linux/kd.h  145  #define KDSIGACCEPT 0x4B4E
kbd_repeat  struct  include/uapi/linux/kd.h  147  struct kbd_repeat {
KDKBDREP  macro  include/uapi/linux/kd.h  153  #define KDKBDREP 0x4B52
KDFONTOP  macro  include/uapi/linux/kd.h  156  #define KDFONTOP 0x4B72
console_font_op  struct  include/uapi/linux/kd.h  158  struct console_font_op {
console_font  struct  include/uapi/linux/kd.h  166  struct console_font {
KD_FONT_OP_SET  macro  include/uapi/linux/kd.h  172  #define KD_FONT_OP_SET 0
KD_FONT_OP_GET  macro  include/uapi/linux/kd.h  173  #define KD_FONT_OP_GET 1
KD_FONT_OP_SET_DEFAULT  macro  include/uapi/linux/kd.h  174  #define KD_FONT_OP_SET_DEFAULT 2
KD_FONT_OP_COPY  macro  include/uapi/linux/kd.h  175  #define KD_FONT_OP_COPY 3
KD_FONT_FLAG_DONT_RECALC  macro  include/uapi/linux/kd.h  177  #define KD_FONT_FLAG_DONT_RECALC 1
__LINUX_GFP_H  macro  include/linux/gfp.h  2  #define __LINUX_GFP_H
___GFP_DMA  macro  include/linux/gfp.h  13  #define ___GFP_DMA 0x01u
___GFP_HIGHMEM  macro  include/linux/gfp.h  14  #define ___GFP_HIGHMEM 0x02u
___GFP_DMA32  macro  include/linux/gfp.h  15  #define ___GFP_DMA32 0x04u
___GFP_MOVABLE  macro  include/linux/gfp.h  16  #define ___GFP_MOVABLE 0x08u
___GFP_WAIT  macro  include/linux/gfp.h  17  #define ___GFP_WAIT 0x10u
___GFP_HIGH  macro  include/linux/gfp.h  18  #define ___GFP_HIGH 0x20u
___GFP_IO  macro  include/linux/gfp.h  19  #define ___GFP_IO 0x40u
___GFP_FS  macro  include/linux/gfp.h  20  #define ___GFP_FS 0x80u
___GFP_COLD  macro  include/linux/gfp.h  21  #define ___GFP_COLD 0x100u
___GFP_NOWARN  macro  include/linux/gfp.h  22  #define ___GFP_NOWARN 0x200u
___GFP_REPEAT  macro  include/linux/gfp.h  23  #define ___GFP_REPEAT 0x400u
___GFP_NOFAIL  macro  include/linux/gfp.h  24  #define ___GFP_NOFAIL 0x800u
___GFP_NORETRY  macro  include/linux/gfp.h  25  #define ___GFP_NORETRY 0x1000u
___GFP_MEMALLOC  macro  include/linux/gfp.h  26  #define ___GFP_MEMALLOC 0x2000u
___GFP_COMP  macro  include/linux/gfp.h  27  #define ___GFP_COMP 0x4000u
___GFP_ZERO  macro  include/linux/gfp.h  28  #define ___GFP_ZERO 0x8000u
___GFP_NOMEMALLOC  macro  include/linux/gfp.h  29  #define ___GFP_NOMEMALLOC 0x10000u
___GFP_HARDWALL  macro  include/linux/gfp.h  30  #define ___GFP_HARDWALL 0x20000u
___GFP_THISNODE  macro  include/linux/gfp.h  31  #define ___GFP_THISNODE 0x40000u
___GFP_RECLAIMABLE  macro  include/linux/gfp.h  32  #define ___GFP_RECLAIMABLE 0x80000u
___GFP_KMEMCG  macro  include/linux/gfp.h  33  #define ___GFP_KMEMCG 0x100000u
___GFP_NOTRACK  macro  include/linux/gfp.h  34  #define ___GFP_NOTRACK 0x200000u
___GFP_NO_KSWAPD  macro  include/linux/gfp.h  35  #define ___GFP_NO_KSWAPD 0x400000u
___GFP_OTHER_NODE  macro  include/linux/gfp.h  36  #define ___GFP_OTHER_NODE 0x800000u
___GFP_WRITE  macro  include/linux/gfp.h  37  #define ___GFP_WRITE 0x1000000u
__GFP_DMA  macro  include/linux/gfp.h  49  #define __GFP_DMA ((__force gfp_t)___GFP_DMA)
__GFP_HIGHMEM  macro  include/linux/gfp.h  50  #define __GFP_HIGHMEM ((__force gfp_t)___GFP_HIGHMEM)
__GFP_DMA32  macro  include/linux/gfp.h  51  #define __GFP_DMA32 ((__force gfp_t)___GFP_DMA32)
__GFP_MOVABLE  macro  include/linux/gfp.h  52  #define __GFP_MOVABLE ((__force gfp_t)___GFP_MOVABLE)
GFP_ZONEMASK  macro  include/linux/gfp.h  53  #define GFP_ZONEMASK (__GFP_DMA|__GFP_HIGHMEM|__GFP_DMA32|__GFP_MOVABLE)
__GFP_WAIT  macro  include/linux/gfp.h  69  #define __GFP_WAIT ((__force gfp_t)___GFP_WAIT)
__GFP_HIGH  macro  include/linux/gfp.h  70  #define __GFP_HIGH ((__force gfp_t)___GFP_HIGH)
__GFP_IO  macro  include/linux/gfp.h  71  #define __GFP_IO ((__force gfp_t)___GFP_IO)
__GFP_FS  macro  include/linux/gfp.h  72  #define __GFP_FS ((__force gfp_t)___GFP_FS)
__GFP_COLD  macro  include/linux/gfp.h  73  #define __GFP_COLD ((__force gfp_t)___GFP_COLD)
__GFP_NOWARN  macro  include/linux/gfp.h  74  #define __GFP_NOWARN ((__force gfp_t)___GFP_NOWARN)
__GFP_REPEAT  macro  include/linux/gfp.h  75  #define __GFP_REPEAT ((__force gfp_t)___GFP_REPEAT)
__GFP_NOFAIL  macro  include/linux/gfp.h  76  #define __GFP_NOFAIL ((__force gfp_t)___GFP_NOFAIL)
__GFP_NORETRY  macro  include/linux/gfp.h  77  #define __GFP_NORETRY ((__force gfp_t)___GFP_NORETRY)
__GFP_MEMALLOC  macro  include/linux/gfp.h  78  #define __GFP_MEMALLOC ((__force gfp_t)___GFP_MEMALLOC)
__GFP_COMP  macro  include/linux/gfp.h  79  #define __GFP_COMP ((__force gfp_t)___GFP_COMP)
__GFP_ZERO  macro  include/linux/gfp.h  80  #define __GFP_ZERO ((__force gfp_t)___GFP_ZERO)
__GFP_NOMEMALLOC  macro  include/linux/gfp.h  81  #define __GFP_NOMEMALLOC ((__force gfp_t)___GFP_NOMEMALLOC)
__GFP_HARDWALL  macro  include/linux/gfp.h  86  #define __GFP_HARDWALL ((__force gfp_t)___GFP_HARDWALL)
__GFP_THISNODE  macro  include/linux/gfp.h  87  #define __GFP_THISNODE ((__force gfp_t)___GFP_THISNODE)
__GFP_RECLAIMABLE  macro  include/linux/gfp.h  88  #define __GFP_RECLAIMABLE ((__force gfp_t)___GFP_RECLAIMABLE)
__GFP_NOTRACK  macro  include/linux/gfp.h  89  #define __GFP_NOTRACK ((__force gfp_t)___GFP_NOTRACK)
__GFP_NO_KSWAPD  macro  include/linux/gfp.h  91  #define __GFP_NO_KSWAPD ((__force gfp_t)___GFP_NO_KSWAPD)
__GFP_OTHER_NODE  macro  include/linux/gfp.h  92  #define __GFP_OTHER_NODE ((__force gfp_t)___GFP_OTHER_NODE)
__GFP_KMEMCG  macro  include/linux/gfp.h  93  #define __GFP_KMEMCG ((__force gfp_t)___GFP_KMEMCG)
__GFP_WRITE  macro  include/linux/gfp.h  94  #define __GFP_WRITE ((__force gfp_t)___GFP_WRITE)
__GFP_NOTRACK_FALSE_POSITIVE  macro  include/linux/gfp.h  100  #define __GFP_NOTRACK_FALSE_POSITIVE (__GFP_NOTRACK)
__GFP_BITS_SHIFT  macro  include/linux/gfp.h  102  #define __GFP_BITS_SHIFT 25
__GFP_BITS_MASK  macro  include/linux/gfp.h  103  #define __GFP_BITS_MASK ((__force gfp_t)((1 << __GFP_BITS_SHIFT) - 1))
GFP_NOWAIT  macro  include/linux/gfp.h  106  #define GFP_NOWAIT (GFP_ATOMIC & ~__GFP_HIGH)
GFP_ATOMIC  macro  include/linux/gfp.h  108  #define GFP_ATOMIC (__GFP_HIGH)
GFP_NOIO  macro  include/linux/gfp.h  109  #define GFP_NOIO (__GFP_WAIT)
GFP_NOFS  macro  include/linux/gfp.h  110  #define GFP_NOFS (__GFP_WAIT | __GFP_IO)
GFP_KERNEL  macro  include/linux/gfp.h  111  #define GFP_KERNEL (__GFP_WAIT | __GFP_IO | __GFP_FS)
GFP_TEMPORARY  macro  include/linux/gfp.h  112  #define GFP_TEMPORARY (__GFP_WAIT | __GFP_IO | __GFP_FS | \
GFP_USER  macro  include/linux/gfp.h  114  #define GFP_USER (__GFP_WAIT | __GFP_IO | __GFP_FS | __GFP_HARDWALL)
GFP_HIGHUSER  macro  include/linux/gfp.h  115  #define GFP_HIGHUSER (__GFP_WAIT | __GFP_IO | __GFP_FS | __GFP_HARDWALL | \
GFP_HIGHUSER_MOVABLE  macro  include/linux/gfp.h  117  #define GFP_HIGHUSER_MOVABLE (__GFP_WAIT | __GFP_IO | __GFP_FS | \
GFP_IOFS  macro  include/linux/gfp.h  120  #define GFP_IOFS (__GFP_IO | __GFP_FS)
GFP_TRANSHUGE  macro  include/linux/gfp.h  121  #define GFP_TRANSHUGE (GFP_HIGHUSER_MOVABLE | __GFP_COMP | \
GFP_THISNODE  macro  include/linux/gfp.h  128  #define GFP_THISNODE ((__force gfp_t)0)
GFP_MOVABLE_MASK  macro  include/linux/gfp.h  132  #define GFP_MOVABLE_MASK (__GFP_RECLAIMABLE|__GFP_MOVABLE)
GFP_RECLAIM_MASK  macro  include/linux/gfp.h  135  #define GFP_RECLAIM_MASK (__GFP_WAIT|__GFP_HIGH|__GFP_IO|__GFP_FS|\
GFP_BOOT_MASK  macro  include/linux/gfp.h  140  #define GFP_BOOT_MASK (__GFP_BITS_MASK & ~(__GFP_WAIT|__GFP_IO|__GFP_FS))
GFP_CONSTRAINT_MASK  macro  include/linux/gfp.h  143  #define GFP_CONSTRAINT_MASK (__GFP_HARDWALL|__GFP_THISNODE)
GFP_SLAB_BUG_MASK  macro  include/linux/gfp.h  146  #define GFP_SLAB_BUG_MASK (__GFP_DMA32|__GFP_HIGHMEM|~__GFP_BITS_MASK)
GFP_DMA  macro  include/linux/gfp.h  151  #define GFP_DMA __GFP_DMA
GFP_DMA32  macro  include/linux/gfp.h  154  #define GFP_DMA32 __GFP_DMA32
allocflags_to_migratetype  function  include/linux/gfp.h  157  static inline int allocflags_to_migratetype(gfp_t gfp_flags)
OPT_ZONE_HIGHMEM  macro  include/linux/gfp.h  172  #define OPT_ZONE_HIGHMEM ZONE_NORMAL
OPT_ZONE_DMA  macro  include/linux/gfp.h  178  #define OPT_ZONE_DMA ZONE_NORMAL
OPT_ZONE_DMA32  macro  include/linux/gfp.h  184  #define OPT_ZONE_DMA32 ZONE_NORMAL
GFP_ZONE_TABLE  macro  include/linux/gfp.h  224  #define GFP_ZONE_TABLE ( \
GFP_ZONE_BAD  macro  include/linux/gfp.h  241  #define GFP_ZONE_BAD ( \
gfp_zone  function  include/linux/gfp.h  252  static inline enum zone_type gfp_zone(gfp_t flags)
gfp_zonelist  function  include/linux/gfp.h  270  static inline int gfp_zonelist(gfp_t flags)
node_zonelist  function  include/linux/gfp.h  287  static inline struct zonelist *node_zonelist(int nid,gfp_t flags)
arch_free_page  function  include/linux/gfp.h  293  static inline void arch_free_page(struct page *page,int order) { }
arch_alloc_page  function  include/linux/gfp.h  296  static inline void arch_alloc_page(struct page *page,int order) { }
__alloc_pages_nodemask  prototype  include/linux/gfp.h  301  __alloc_pages_nodemask(gfp_t gfp_mask,unsigned int order,struct zonelist *zonelist, nodemask_t *nodemask);
__alloc_pages  function  include/linux/gfp.h  305  __alloc_pages(gfp_t gfp_mask,unsigned int order,struct zonelist *zonelist)
alloc_pages_node  function  include/linux/gfp.h  311  static inline struct page *alloc_pages_node(int nid,gfp_t gfp_mask,unsigned int order)
alloc_pages_exact_node  function  include/linux/gfp.h  321  static inline struct page *alloc_pages_exact_node(int nid,gfp_t gfp_mask,unsigned int order)
alloc_pages_current  prototype  include/linux/gfp.h  329  extern struct page *alloc_pages_current(gfp_t gfp_mask,unsigned order);
alloc_pages  macro  include/linux/gfp.h  340  #define alloc_pages(gfp_mask,order) \
alloc_pages_vma  macro  include/linux/gfp.h  342  #define alloc_pages_vma(gfp_mask,order,vma,addr,node) \
alloc_page  macro  include/linux/gfp.h  345  #define alloc_page(gfp_mask) alloc_pages(gfp_mask,0)
alloc_page_vma  macro  include/linux/gfp.h  346  #define alloc_page_vma(gfp_mask,vma,addr) \
alloc_page_vma_node  macro  include/linux/gfp.h  348  #define alloc_page_vma_node(gfp_mask,vma,addr,node) \
__get_free_pages  prototype  include/linux/gfp.h  351  extern unsigned long __get_free_pages(gfp_t gfp_mask,unsigned int order);
get_zeroed_page  prototype  include/linux/gfp.h  352  extern unsigned long get_zeroed_page(gfp_t gfp_mask);
alloc_pages_exact  prototype  include/linux/gfp.h  354  void *alloc_pages_exact(size_t size,gfp_t gfp_mask);
free_pages_exact  prototype  include/linux/gfp.h  355  void free_pages_exact(void *virt,size_t size);
alloc_pages_exact_nid  prototype  include/linux/gfp.h  357  void *alloc_pages_exact_nid(int nid,size_t size,gfp_t gfp_mask);
__get_free_page  macro  include/linux/gfp.h  359  #define __get_free_page(gfp_mask) \
__get_dma_pages  macro  include/linux/gfp.h  362  #define __get_dma_pages(gfp_mask,order) \
__free_pages  prototype  include/linux/gfp.h  365  extern void __free_pages(struct page *page,unsigned int order);
free_pages  prototype  include/linux/gfp.h  366  extern void free_pages(unsigned long addr,unsigned int order);
free_hot_cold_page  prototype  include/linux/gfp.h  367  extern void free_hot_cold_page(struct page *page,int cold);
free_hot_cold_page_list  prototype  include/linux/gfp.h  368  extern void free_hot_cold_page_list(struct list_head *list,int cold);
__free_memcg_kmem_pages  prototype  include/linux/gfp.h  370  extern void __free_memcg_kmem_pages(struct page *page,unsigned int order);
free_memcg_kmem_pages  prototype  include/linux/gfp.h  371  extern void free_memcg_kmem_pages(unsigned long addr,unsigned int order);
__free_page  macro  include/linux/gfp.h  373  #define __free_page(page) __free_pages((page),0)
free_page  macro  include/linux/gfp.h  374  #define free_page(addr) free_pages((addr),0)
page_alloc_init  prototype  include/linux/gfp.h  376  void page_alloc_init(void);
drain_zone_pages  prototype  include/linux/gfp.h  377  void drain_zone_pages(struct zone *zone,struct per_cpu_pages *pcp);
drain_all_pages  prototype  include/linux/gfp.h  378  void drain_all_pages(void);
drain_local_pages  prototype  include/linux/gfp.h  379  void drain_local_pages(void *dummy);
gfp_pfmemalloc_allowed  prototype  include/linux/gfp.h  391  bool gfp_pfmemalloc_allowed(gfp_t gfp_mask);
pm_restrict_gfp_mask  prototype  include/linux/gfp.h  393  extern void pm_restrict_gfp_mask(void);
pm_restore_gfp_mask  prototype  include/linux/gfp.h  394  extern void pm_restore_gfp_mask(void);
pm_suspended_storage  function  include/linux/gfp.h  399  static inline bool pm_suspended_storage(void)
alloc_contig_range  prototype  include/linux/gfp.h  409  extern int alloc_contig_range(unsigned long start,unsigned long end,unsigned migratetype);
free_contig_range  prototype  include/linux/gfp.h  410  extern void free_contig_range(unsigned long pfn,unsigned nr_pages);
init_cma_reserved_pageblock  prototype  include/linux/gfp.h  413  extern void init_cma_reserved_pageblock(struct page *page);
_LINUX_WORKQUEUE_H  macro  include/linux/workqueue.h  6  #define _LINUX_WORKQUEUE_H
work_func_t  typedef  include/linux/workqueue.h  18  typedef void (*work_func_t)(struct work_struct *work);
delayed_work_timer_fn  prototype  include/linux/workqueue.h  19  void delayed_work_timer_fn(unsigned long __data);
work_data_bits  macro  include/linux/workqueue.h  25  #define work_data_bits(work) ((unsigned long *)(&(work)->data))
WORK_STRUCT_PENDING_BIT  enumerator  include/linux/workqueue.h  28  WORK_STRUCT_PENDING_BIT = 0,
WORK_STRUCT_DELAYED_BIT  enumerator  include/linux/workqueue.h  29  WORK_STRUCT_DELAYED_BIT = 1,
WORK_STRUCT_CWQ_BIT  enumerator  include/linux/workqueue.h  30  WORK_STRUCT_CWQ_BIT = 2,
WORK_STRUCT_LINKED_BIT  enumerator  include/linux/workqueue.h  31  WORK_STRUCT_LINKED_BIT = 3,
WORK_STRUCT_STATIC_BIT  enumerator  include/linux/workqueue.h  33  WORK_STRUCT_STATIC_BIT = 4,
WORK_STRUCT_COLOR_SHIFT  enumerator  include/linux/workqueue.h  34  WORK_STRUCT_COLOR_SHIFT = 5,
WORK_STRUCT_COLOR_BITS  enumerator  include/linux/workqueue.h  39  WORK_STRUCT_COLOR_BITS = 4,
WORK_STRUCT_PENDING  enumerator  include/linux/workqueue.h  41  WORK_STRUCT_PENDING = 1 << WORK_STRUCT_PENDING_BIT,
WORK_STRUCT_DELAYED  enumerator  include/linux/workqueue.h  42  WORK_STRUCT_DELAYED = 1 << WORK_STRUCT_DELAYED_BIT,
WORK_STRUCT_CWQ  enumerator  include/linux/workqueue.h  43  WORK_STRUCT_CWQ = 1 << WORK_STRUCT_CWQ_BIT,
WORK_STRUCT_LINKED  enumerator  include/linux/workqueue.h  44  WORK_STRUCT_LINKED = 1 << WORK_STRUCT_LINKED_BIT,
WORK_STRUCT_STATIC  enumerator  include/linux/workqueue.h  46  WORK_STRUCT_STATIC = 1 << WORK_STRUCT_STATIC_BIT,
WORK_NR_COLORS  enumerator  include/linux/workqueue.h  55  WORK_NR_COLORS = (1 << WORK_STRUCT_COLOR_BITS) - 1,
WORK_NO_COLOR  enumerator  include/linux/workqueue.h  56  WORK_NO_COLOR = WORK_NR_COLORS,
WORK_CPU_UNBOUND  enumerator  include/linux/workqueue.h  59  WORK_CPU_UNBOUND = NR_CPUS,
WORK_CPU_NONE  enumerator  include/linux/workqueue.h  60  WORK_CPU_NONE = NR_CPUS + 1,
WORK_CPU_LAST  enumerator  include/linux/workqueue.h  61  WORK_CPU_LAST = WORK_CPU_NONE,
WORK_STRUCT_FLAG_BITS  enumerator  include/linux/workqueue.h  68  WORK_STRUCT_FLAG_BITS = WORK_STRUCT_COLOR_SHIFT +
WORK_OFFQ_FLAG_BASE  enumerator  include/linux/workqueue.h  72  WORK_OFFQ_FLAG_BASE = WORK_STRUCT_FLAG_BITS,
WORK_OFFQ_CANCELING  enumerator  include/linux/workqueue.h  74  WORK_OFFQ_CANCELING = (1 << WORK_OFFQ_FLAG_BASE),
WORK_OFFQ_FLAG_BITS  enumerator  include/linux/workqueue.h  76  WORK_OFFQ_FLAG_BITS = 1,
WORK_OFFQ_CPU_SHIFT  enumerator  include/linux/workqueue.h  77  WORK_OFFQ_CPU_SHIFT = WORK_OFFQ_FLAG_BASE + WORK_OFFQ_FLAG_BITS,
WORK_STRUCT_FLAG_MASK  enumerator  include/linux/workqueue.h  80  WORK_STRUCT_FLAG_MASK = (1UL << WORK_STRUCT_FLAG_BITS) - 1,
WORK_STRUCT_WQ_DATA_MASK  enumerator  include/linux/workqueue.h  81  WORK_STRUCT_WQ_DATA_MASK = ~WORK_STRUCT_FLAG_MASK,
WORK_STRUCT_NO_CPU  enumerator  include/linux/workqueue.h  82  WORK_STRUCT_NO_CPU = (unsigned long)WORK_CPU_NONE << WORK_OFFQ_CPU_SHIFT,
WORK_BUSY_PENDING  enumerator  include/linux/workqueue.h  85  WORK_BUSY_PENDING = 1 << 0,
WORK_BUSY_RUNNING  enumerator  include/linux/workqueue.h  86  WORK_BUSY_RUNNING = 1 << 1,
work_struct  struct  include/linux/workqueue.h  89  struct work_struct {
WORK_DATA_INIT  macro  include/linux/workqueue.h  98  #define WORK_DATA_INIT() ATOMIC_LONG_INIT(WORK_STRUCT_NO_CPU)
WORK_DATA_STATIC_INIT  macro  include/linux/workqueue.h  99  #define WORK_DATA_STATIC_INIT() \
delayed_work  struct  include/linux/workqueue.h  102  struct delayed_work {
to_delayed_work  function  include/linux/workqueue.h  108  static inline struct delayed_work *to_delayed_work(struct work_struct *work)
execute_work  struct  include/linux/workqueue.h  113  struct execute_work {
__WORK_INIT_LOCKDEP_MAP  macro  include/linux/workqueue.h  126  #define __WORK_INIT_LOCKDEP_MAP(n,k)
__WORK_INITIALIZER  macro  include/linux/workqueue.h  129  #define __WORK_INITIALIZER(n,f) { \
__DELAYED_WORK_INITIALIZER  macro  include/linux/workqueue.h  136  #define __DELAYED_WORK_INITIALIZER(n,f,tflags) { \
DECLARE_WORK  macro  include/linux/workqueue.h  143  #define DECLARE_WORK(n,f) \
DECLARE_DELAYED_WORK  macro  include/linux/workqueue.h  146  #define DECLARE_DELAYED_WORK(n,f) \
DECLARE_DEFERRABLE_WORK  macro  include/linux/workqueue.h  149  #define DECLARE_DEFERRABLE_WORK(n,f) \
PREPARE_WORK  macro  include/linux/workqueue.h  155  #define PREPARE_WORK(_work,_func) \
PREPARE_DELAYED_WORK  macro  include/linux/workqueue.h  160  #define PREPARE_DELAYED_WORK(_work,_func) \
__init_work  function  include/linux/workqueue.h  171  static inline void __init_work(struct work_struct *work,int onstack) { }
destroy_work_on_stack  function  include/linux/workqueue.h  172  static inline void destroy_work_on_stack(struct work_struct *work) { }
work_static  function  include/linux/workqueue.h  173  static inline unsigned int work_static(struct work_struct *work) { return 0; }
__INIT_WORK  macro  include/linux/workqueue.h  195  #define __INIT_WORK(_work,_func,_onstack) \
INIT_WORK  macro  include/linux/workqueue.h  204  #define INIT_WORK(_work,_func) \
INIT_WORK_ONSTACK  macro  include/linux/workqueue.h  209  #define INIT_WORK_ONSTACK(_work,_func) \
__INIT_DELAYED_WORK  macro  include/linux/workqueue.h  214  #define __INIT_DELAYED_WORK(_work,_func,_tflags) \
__INIT_DELAYED_WORK_ONSTACK  macro  include/linux/workqueue.h  222  #define __INIT_DELAYED_WORK_ONSTACK(_work,_func,_tflags) \
INIT_DELAYED_WORK  macro  include/linux/workqueue.h  231  #define INIT_DELAYED_WORK(_work,_func) \
INIT_DELAYED_WORK_ONSTACK  macro  include/linux/workqueue.h  234  #define INIT_DELAYED_WORK_ONSTACK(_work,_func) \
INIT_DEFERRABLE_WORK  macro  include/linux/workqueue.h  237  #define INIT_DEFERRABLE_WORK(_work,_func) \
INIT_DEFERRABLE_WORK_ONSTACK  macro  include/linux/workqueue.h  240  #define INIT_DEFERRABLE_WORK_ONSTACK(_work,_func) \
work_pending  macro  include/linux/workqueue.h  247  #define work_pending(work) \
delayed_work_pending  macro  include/linux/workqueue.h  255  #define delayed_work_pending(w) \
work_clear_pending  macro  include/linux/workqueue.h  262  #define work_clear_pending(work) \
WQ_NON_REENTRANT  enumerator  include/linux/workqueue.h  270  WQ_NON_REENTRANT = 1 << 0,
WQ_UNBOUND  enumerator  include/linux/workqueue.h  271  WQ_UNBOUND = 1 << 1,
WQ_FREEZABLE  enumerator  include/linux/workqueue.h  272  WQ_FREEZABLE = 1 << 2,
WQ_MEM_RECLAIM  enumerator  include/linux/workqueue.h  273  WQ_MEM_RECLAIM = 1 << 3,
WQ_HIGHPRI  enumerator  include/linux/workqueue.h  274  WQ_HIGHPRI = 1 << 4,
WQ_CPU_INTENSIVE  enumerator  include/linux/workqueue.h  275  WQ_CPU_INTENSIVE = 1 << 5,
WQ_DRAINING  enumerator  include/linux/workqueue.h  277  WQ_DRAINING = 1 << 6,
WQ_RESCUER  enumerator  include/linux/workqueue.h  278  WQ_RESCUER = 1 << 7,
WQ_MAX_ACTIVE  enumerator  include/linux/workqueue.h  280  WQ_MAX_ACTIVE = 512,
WQ_MAX_UNBOUND_PER_CPU  enumerator  include/linux/workqueue.h  281  WQ_MAX_UNBOUND_PER_CPU = 4,
WQ_DFL_ACTIVE  enumerator  include/linux/workqueue.h  282  WQ_DFL_ACTIVE = WQ_MAX_ACTIVE / 2,
WQ_UNBOUND_MAX_ACTIVE  macro  include/linux/workqueue.h  286  #define WQ_UNBOUND_MAX_ACTIVE \
__system_nrt_wq  function  include/linux/workqueue.h  313  static inline struct workqueue_struct * __deprecated __system_nrt_wq(void)
__system_nrt_freezable_wq  function  include/linux/workqueue.h  318  static inline struct workqueue_struct * __deprecated __system_nrt_freezable_wq(void)
system_nrt_wq  macro  include/linux/workqueue.h  324  #define system_nrt_wq __system_nrt_wq()
system_nrt_freezable_wq  macro  include/linux/workqueue.h  325  #define system_nrt_freezable_wq __system_nrt_freezable_wq()
alloc_workqueue  macro  include/linux/workqueue.h  362  #define alloc_workqueue(fmt,flags,max_active,args...) \
alloc_ordered_workqueue  macro  include/linux/workqueue.h  380  #define alloc_ordered_workqueue(fmt,flags,args...) \
create_workqueue  macro  include/linux/workqueue.h  383  #define create_workqueue(name) \
create_freezable_workqueue  macro  include/linux/workqueue.h  385  #define create_freezable_workqueue(name) \
create_singlethread_workqueue  macro  include/linux/workqueue.h  387  #define create_singlethread_workqueue(name) \
destroy_workqueue  prototype  include/linux/workqueue.h  390  extern void destroy_workqueue(struct workqueue_struct *wq);
queue_work_on  prototype  include/linux/workqueue.h  393  extern bool queue_work_on(int cpu,struct workqueue_struct *wq,struct work_struct *work);
queue_work  prototype  include/linux/workqueue.h  394  extern bool queue_work(struct workqueue_struct *wq,struct work_struct *work);
queue_delayed_work_on  prototype  include/linux/workqueue.h  396  extern bool queue_delayed_work_on(int cpu,struct workqueue_struct *wq,struct delayed_work *work, unsigned long delay);
queue_delayed_work  prototype  include/linux/workqueue.h  398  extern bool queue_delayed_work(struct workqueue_struct *wq,struct delayed_work *work, unsigned long delay);
mod_delayed_work_on  prototype  include/linux/workqueue.h  400  extern bool mod_delayed_work_on(int cpu,struct workqueue_struct *wq,struct delayed_work *dwork, unsigned long delay);
mod_delayed_work  prototype  include/linux/workqueue.h  402  extern bool mod_delayed_work(struct workqueue_struct *wq,struct delayed_work *dwork, unsigned long delay);
flush_workqueue  prototype  include/linux/workqueue.h  404  extern void flush_workqueue(struct workqueue_struct *wq);
drain_workqueue  prototype  include/linux/workqueue.h  405  extern void drain_workqueue(struct workqueue_struct *wq);
flush_scheduled_work  prototype  include/linux/workqueue.h  406  extern void flush_scheduled_work(void);
schedule_work_on  prototype  include/linux/workqueue.h  408  extern bool schedule_work_on(int cpu,struct work_struct *work);
schedule_work  prototype  include/linux/workqueue.h  409  extern bool schedule_work(struct work_struct *work);
schedule_delayed_work_on  prototype  include/linux/workqueue.h  411  extern bool schedule_delayed_work_on(int cpu,struct delayed_work *work,unsigned long delay);
schedule_delayed_work  prototype  include/linux/workqueue.h  413  extern bool schedule_delayed_work(struct delayed_work *work,unsigned long delay);
schedule_on_each_cpu  prototype  include/linux/workqueue.h  414  extern int schedule_on_each_cpu(work_func_t func);
keventd_up  prototype  include/linux/workqueue.h  415  extern int keventd_up(void);
execute_in_process_context  prototype  include/linux/workqueue.h  417  int execute_in_process_context(work_func_t fn,struct execute_work *);
flush_work  prototype  include/linux/workqueue.h  419  extern bool flush_work(struct work_struct *work);
cancel_work_sync  prototype  include/linux/workqueue.h  420  extern bool cancel_work_sync(struct work_struct *work);
flush_delayed_work  prototype  include/linux/workqueue.h  422  extern bool flush_delayed_work(struct delayed_work *dwork);
cancel_delayed_work  prototype  include/linux/workqueue.h  423  extern bool cancel_delayed_work(struct delayed_work *dwork);
cancel_delayed_work_sync  prototype  include/linux/workqueue.h  424  extern bool cancel_delayed_work_sync(struct delayed_work *dwork);
workqueue_set_max_active  prototype  include/linux/workqueue.h  427  extern void workqueue_set_max_active(struct workqueue_struct *wq,int max_active);
workqueue_congested  prototype  include/linux/workqueue.h  428  extern bool workqueue_congested(unsigned int cpu,struct workqueue_struct *wq);
work_cpu  prototype  include/linux/workqueue.h  429  extern unsigned int work_cpu(struct work_struct *work);
work_busy  prototype  include/linux/workqueue.h  430  extern unsigned int work_busy(struct work_struct *work);
__cancel_delayed_work  function  include/linux/workqueue.h  437  static inline bool __deprecated __cancel_delayed_work(struct delayed_work *work)
flush_work_sync  function  include/linux/workqueue.h  448  static inline bool __deprecated flush_work_sync(struct work_struct *work)
flush_delayed_work_sync  function  include/linux/workqueue.h  454  static inline bool __deprecated flush_delayed_work_sync(struct delayed_work *dwork)
work_on_cpu  prototype  include/linux/workqueue.h  465  long work_on_cpu(unsigned int cpu,long (*fn)(void *),void *arg);
freeze_workqueues_begin  prototype  include/linux/workqueue.h  469  extern void freeze_workqueues_begin(void);
freeze_workqueues_busy  prototype  include/linux/workqueue.h  470  extern bool freeze_workqueues_busy(void);
thaw_workqueues  prototype  include/linux/workqueue.h  471  extern void thaw_workqueues(void);
_LINUX_SLUB_DEF_H  macro  include/linux/slub_def.h  2  #define _LINUX_SLUB_DEF_H
stat_item  enum  include/linux/slub_def.h  17  enum stat_item {
ALLOC_FASTPATH  enumerator  include/linux/slub_def.h  18  ALLOC_FASTPATH,
ALLOC_SLOWPATH  enumerator  include/linux/slub_def.h  19  ALLOC_SLOWPATH,
FREE_FASTPATH  enumerator  include/linux/slub_def.h  20  FREE_FASTPATH,
FREE_SLOWPATH  enumerator  include/linux/slub_def.h  21  FREE_SLOWPATH,
FREE_FROZEN  enumerator  include/linux/slub_def.h  22  FREE_FROZEN,
FREE_ADD_PARTIAL  enumerator  include/linux/slub_def.h  23  FREE_ADD_PARTIAL,
FREE_REMOVE_PARTIAL  enumerator  include/linux/slub_def.h  24  FREE_REMOVE_PARTIAL,
ALLOC_FROM_PARTIAL  enumerator  include/linux/slub_def.h  25  ALLOC_FROM_PARTIAL,
ALLOC_SLAB  enumerator  include/linux/slub_def.h  26  ALLOC_SLAB,
ALLOC_REFILL  enumerator  include/linux/slub_def.h  27  ALLOC_REFILL,
ALLOC_NODE_MISMATCH  enumerator  include/linux/slub_def.h  28  ALLOC_NODE_MISMATCH,
FREE_SLAB  enumerator  include/linux/slub_def.h  29  FREE_SLAB,
CPUSLAB_FLUSH  enumerator  include/linux/slub_def.h  30  CPUSLAB_FLUSH,
DEACTIVATE_FULL  enumerator  include/linux/slub_def.h  31  DEACTIVATE_FULL,
DEACTIVATE_EMPTY  enumerator  include/linux/slub_def.h  32  DEACTIVATE_EMPTY,
DEACTIVATE_TO_HEAD  enumerator  include/linux/slub_def.h  33  DEACTIVATE_TO_HEAD,
DEACTIVATE_TO_TAIL  enumerator  include/linux/slub_def.h  34  DEACTIVATE_TO_TAIL,
DEACTIVATE_REMOTE_FREES  enumerator  include/linux/slub_def.h  35  DEACTIVATE_REMOTE_FREES,
DEACTIVATE_BYPASS  enumerator  include/linux/slub_def.h  36  DEACTIVATE_BYPASS,
ORDER_FALLBACK  enumerator  include/linux/slub_def.h  37  ORDER_FALLBACK,
CMPXCHG_DOUBLE_CPU_FAIL  enumerator  include/linux/slub_def.h  38  CMPXCHG_DOUBLE_CPU_FAIL,
CMPXCHG_DOUBLE_FAIL  enumerator  include/linux/slub_def.h  39  CMPXCHG_DOUBLE_FAIL,
CPU_PARTIAL_ALLOC  enumerator  include/linux/slub_def.h  40  CPU_PARTIAL_ALLOC,
CPU_PARTIAL_FREE  enumerator  include/linux/slub_def.h  41  CPU_PARTIAL_FREE,
CPU_PARTIAL_NODE  enumerator  include/linux/slub_def.h  42  CPU_PARTIAL_NODE,
CPU_PARTIAL_DRAIN  enumerator  include/linux/slub_def.h  43  CPU_PARTIAL_DRAIN,
NR_SLUB_STAT_ITEMS  enumerator  include/linux/slub_def.h  44  NR_SLUB_STAT_ITEMS };
kmem_cache_cpu  struct  include/linux/slub_def.h  46  struct kmem_cache_cpu {
kmem_cache_node  struct  include/linux/slub_def.h  56  struct kmem_cache_node {
kmem_cache_order_objects  struct  include/linux/slub_def.h  72  struct kmem_cache_order_objects {
KMALLOC_MIN_SIZE  macro  include/linux/slub_def.h  124  #define KMALLOC_MIN_SIZE 8
KMALLOC_SHIFT_LOW  macro  include/linux/slub_def.h  127  #define KMALLOC_SHIFT_LOW ilog2(KMALLOC_MIN_SIZE)
SLUB_MAX_SIZE  macro  include/linux/slub_def.h  138  #define SLUB_MAX_SIZE (2 * PAGE_SIZE)
SLUB_PAGE_SHIFT  macro  include/linux/slub_def.h  140  #define SLUB_PAGE_SHIFT (PAGE_SHIFT + 2)
SLUB_DMA  macro  include/linux/slub_def.h  146  #define SLUB_DMA (__force gfp_t)0
kmalloc_index  function  include/linux/slub_def.h  159  static __always_inline int kmalloc_index(size_t size)
kmalloc_slab  function  include/linux/slub_def.h  213  static __always_inline struct kmem_cache *kmalloc_slab(size_t size)
__kmalloc  prototype  include/linux/slab_def.h  118  void *__kmalloc(size_t size,gfp_t flags);
kmalloc_order  function  include/linux/slub_def.h  227  kmalloc_order(size_t size,gfp_t flags,unsigned int order)
verify_mem_not_deleted  function  include/linux/slub_def.h  244  static inline bool verify_mem_not_deleted(const void *x)
kmem_cache_alloc_trace  function  include/linux/slab_def.h  124  kmem_cache_alloc_trace(struct kmem_cache *cachep,gfp_t flags,size_t size)
kmalloc_order_trace  function  include/linux/slub_def.h  262  kmalloc_order_trace(size_t size,gfp_t flags,unsigned int order)
kmalloc_large  function  include/linux/slub_def.h  268  static __always_inline void *kmalloc_large(size_t size,gfp_t flags)
kmalloc  function  include/linux/slab_def.h  130  static __always_inline void *kmalloc(size_t size,gfp_t flags)
kmem_cache_alloc_node_trace  function  include/linux/slab_def.h  178  kmem_cache_alloc_node_trace(struct kmem_cache *cachep,gfp_t flags,int nodeid,size_t size)
__LINUX_SLOB_DEF_H  macro  include/linux/slob_def.h  2  #define __LINUX_SLOB_DEF_H
_LINUX_SLAB_DEF_H  macro  include/linux/slab_def.h  2  #define _LINUX_SLAB_DEF_H
cache_sizes  struct  include/linux/slab_def.h  108  struct cache_sizes {
CACHE  macro  include/linux/slab_def.h  200  #undef CACHE
_LINUX_VT_H  macro  include/linux/vt.h  2  #define _LINUX_VT_H
VT_ALLOCATE  macro  include/linux/vt.h  8  #define VT_ALLOCATE 0x0001
VT_DEALLOCATE  macro  include/linux/vt.h  9  #define VT_DEALLOCATE 0x0002
VT_WRITE  macro  include/linux/vt.h  10  #define VT_WRITE 0x0003
VT_UPDATE  macro  include/linux/vt.h  11  #define VT_UPDATE 0x0004
VT_PREWRITE  macro  include/linux/vt.h  12  #define VT_PREWRITE 0x0005
vt_kmsg_redirect  function  include/linux/vt.h  20  static inline int vt_kmsg_redirect(int new)
_LINUX_TTY_H  macro  include/linux/tty.h  2  #define _LINUX_TTY_H
NR_UNIX98_PTY_DEFAULT  macro  include/linux/tty.h  20  #define NR_UNIX98_PTY_DEFAULT 4096
NR_UNIX98_PTY_RESERVE  macro  include/linux/tty.h  21  #define NR_UNIX98_PTY_RESERVE 1024
NR_UNIX98_PTY_MAX  macro  include/linux/tty.h  22  #define NR_UNIX98_PTY_MAX (1 << MINORBITS)
__DISABLED_CHAR  macro  include/linux/tty.h  29  #define __DISABLED_CHAR '\0'
tty_buffer  struct  include/linux/tty.h  31  struct tty_buffer {
TTY_BUFFER_PAGE  macro  include/linux/tty.h  51  #define TTY_BUFFER_PAGE (((PAGE_SIZE - sizeof(struct tty_buffer)) / 2) & ~0xFF)
tty_bufhead  struct  include/linux/tty.h  54  struct tty_bufhead {
TTY_NORMAL  macro  include/linux/tty.h  67  #define TTY_NORMAL 0
TTY_BREAK  macro  include/linux/tty.h  68  #define TTY_BREAK 1
TTY_FRAME  macro  include/linux/tty.h  69  #define TTY_FRAME 2
TTY_PARITY  macro  include/linux/tty.h  70  #define TTY_PARITY 3
TTY_OVERRUN  macro  include/linux/tty.h  71  #define TTY_OVERRUN 4
INTR_CHAR  macro  include/linux/tty.h  73  #define INTR_CHAR(tty) ((tty)->termios.c_cc[VINTR])
QUIT_CHAR  macro  include/linux/tty.h  74  #define QUIT_CHAR(tty) ((tty)->termios.c_cc[VQUIT])
ERASE_CHAR  macro  include/linux/tty.h  75  #define ERASE_CHAR(tty) ((tty)->termios.c_cc[VERASE])
KILL_CHAR  macro  include/linux/tty.h  76  #define KILL_CHAR(tty) ((tty)->termios.c_cc[VKILL])
EOF_CHAR  macro  include/linux/tty.h  77  #define EOF_CHAR(tty) ((tty)->termios.c_cc[VEOF])
TIME_CHAR  macro  include/linux/tty.h  78  #define TIME_CHAR(tty) ((tty)->termios.c_cc[VTIME])
MIN_CHAR  macro  include/linux/tty.h  79  #define MIN_CHAR(tty) ((tty)->termios.c_cc[VMIN])
SWTC_CHAR  macro  include/linux/tty.h  80  #define SWTC_CHAR(tty) ((tty)->termios.c_cc[VSWTC])
START_CHAR  macro  include/linux/tty.h  81  #define START_CHAR(tty) ((tty)->termios.c_cc[VSTART])
STOP_CHAR  macro  include/linux/tty.h  82  #define STOP_CHAR(tty) ((tty)->termios.c_cc[VSTOP])
SUSP_CHAR  macro  include/linux/tty.h  83  #define SUSP_CHAR(tty) ((tty)->termios.c_cc[VSUSP])
EOL_CHAR  macro  include/linux/tty.h  84  #define EOL_CHAR(tty) ((tty)->termios.c_cc[VEOL])
REPRINT_CHAR  macro  include/linux/tty.h  85  #define REPRINT_CHAR(tty) ((tty)->termios.c_cc[VREPRINT])
DISCARD_CHAR  macro  include/linux/tty.h  86  #define DISCARD_CHAR(tty) ((tty)->termios.c_cc[VDISCARD])
WERASE_CHAR  macro  include/linux/tty.h  87  #define WERASE_CHAR(tty) ((tty)->termios.c_cc[VWERASE])
LNEXT_CHAR  macro  include/linux/tty.h  88  #define LNEXT_CHAR(tty) ((tty)->termios.c_cc[VLNEXT])
EOL2_CHAR  macro  include/linux/tty.h  89  #define EOL2_CHAR(tty) ((tty)->termios.c_cc[VEOL2])
_I_FLAG  macro  include/linux/tty.h  91  #define _I_FLAG(tty,f) ((tty)->termios.c_iflag & (f))
_O_FLAG  macro  include/linux/tty.h  92  #define _O_FLAG(tty,f) ((tty)->termios.c_oflag & (f))
_C_FLAG  macro  include/linux/tty.h  93  #define _C_FLAG(tty,f) ((tty)->termios.c_cflag & (f))
_L_FLAG  macro  include/linux/tty.h  94  #define _L_FLAG(tty,f) ((tty)->termios.c_lflag & (f))
I_IGNBRK  macro  include/linux/tty.h  96  #define I_IGNBRK(tty) _I_FLAG((tty),IGNBRK)
I_BRKINT  macro  include/linux/tty.h  97  #define I_BRKINT(tty) _I_FLAG((tty),BRKINT)
I_IGNPAR  macro  include/linux/tty.h  98  #define I_IGNPAR(tty) _I_FLAG((tty),IGNPAR)
I_PARMRK  macro  include/linux/tty.h  99  #define I_PARMRK(tty) _I_FLAG((tty),PARMRK)
I_INPCK  macro  include/linux/tty.h  100  #define I_INPCK(tty) _I_FLAG((tty),INPCK)
I_ISTRIP  macro  include/linux/tty.h  101  #define I_ISTRIP(tty) _I_FLAG((tty),ISTRIP)
I_INLCR  macro  include/linux/tty.h  102  #define I_INLCR(tty) _I_FLAG((tty),INLCR)
I_IGNCR  macro  include/linux/tty.h  103  #define I_IGNCR(tty) _I_FLAG((tty),IGNCR)
I_ICRNL  macro  include/linux/tty.h  104  #define I_ICRNL(tty) _I_FLAG((tty),ICRNL)
I_IUCLC  macro  include/linux/tty.h  105  #define I_IUCLC(tty) _I_FLAG((tty),IUCLC)
I_IXON  macro  include/linux/tty.h  106  #define I_IXON(tty) _I_FLAG((tty),IXON)
I_IXANY  macro  include/linux/tty.h  107  #define I_IXANY(tty) _I_FLAG((tty),IXANY)
I_IXOFF  macro  include/linux/tty.h  108  #define I_IXOFF(tty) _I_FLAG((tty),IXOFF)
I_IMAXBEL  macro  include/linux/tty.h  109  #define I_IMAXBEL(tty) _I_FLAG((tty),IMAXBEL)
I_IUTF8  macro  include/linux/tty.h  110  #define I_IUTF8(tty) _I_FLAG((tty),IUTF8)
O_OPOST  macro  include/linux/tty.h  112  #define O_OPOST(tty) _O_FLAG((tty),OPOST)
O_OLCUC  macro  include/linux/tty.h  113  #define O_OLCUC(tty) _O_FLAG((tty),OLCUC)
O_ONLCR  macro  include/linux/tty.h  114  #define O_ONLCR(tty) _O_FLAG((tty),ONLCR)
O_OCRNL  macro  include/linux/tty.h  115  #define O_OCRNL(tty) _O_FLAG((tty),OCRNL)
O_ONOCR  macro  include/linux/tty.h  116  #define O_ONOCR(tty) _O_FLAG((tty),ONOCR)
O_ONLRET  macro  include/linux/tty.h  117  #define O_ONLRET(tty) _O_FLAG((tty),ONLRET)
O_OFILL  macro  include/linux/tty.h  118  #define O_OFILL(tty) _O_FLAG((tty),OFILL)
O_OFDEL  macro  include/linux/tty.h  119  #define O_OFDEL(tty) _O_FLAG((tty),OFDEL)
O_NLDLY  macro  include/linux/tty.h  120  #define O_NLDLY(tty) _O_FLAG((tty),NLDLY)
O_CRDLY  macro  include/linux/tty.h  121  #define O_CRDLY(tty) _O_FLAG((tty),CRDLY)
O_TABDLY  macro  include/linux/tty.h  122  #define O_TABDLY(tty) _O_FLAG((tty),TABDLY)
O_BSDLY  macro  include/linux/tty.h  123  #define O_BSDLY(tty) _O_FLAG((tty),BSDLY)
O_VTDLY  macro  include/linux/tty.h  124  #define O_VTDLY(tty) _O_FLAG((tty),VTDLY)
O_FFDLY  macro  include/linux/tty.h  125  #define O_FFDLY(tty) _O_FLAG((tty),FFDLY)
C_BAUD  macro  include/linux/tty.h  127  #define C_BAUD(tty) _C_FLAG((tty),CBAUD)
C_CSIZE  macro  include/linux/tty.h  128  #define C_CSIZE(tty) _C_FLAG((tty),CSIZE)
C_CSTOPB  macro  include/linux/tty.h  129  #define C_CSTOPB(tty) _C_FLAG((tty),CSTOPB)
C_CREAD  macro  include/linux/tty.h  130  #define C_CREAD(tty) _C_FLAG((tty),CREAD)
C_PARENB  macro  include/linux/tty.h  131  #define C_PARENB(tty) _C_FLAG((tty),PARENB)
C_PARODD  macro  include/linux/tty.h  132  #define C_PARODD(tty) _C_FLAG((tty),PARODD)
C_HUPCL  macro  include/linux/tty.h  133  #define C_HUPCL(tty) _C_FLAG((tty),HUPCL)
C_CLOCAL  macro  include/linux/tty.h  134  #define C_CLOCAL(tty) _C_FLAG((tty),CLOCAL)
C_CIBAUD  macro  include/linux/tty.h  135  #define C_CIBAUD(tty) _C_FLAG((tty),CIBAUD)
C_CRTSCTS  macro  include/linux/tty.h  136  #define C_CRTSCTS(tty) _C_FLAG((tty),CRTSCTS)
L_ISIG  macro  include/linux/tty.h  138  #define L_ISIG(tty) _L_FLAG((tty),ISIG)
L_ICANON  macro  include/linux/tty.h  139  #define L_ICANON(tty) _L_FLAG((tty),ICANON)
L_XCASE  macro  include/linux/tty.h  140  #define L_XCASE(tty) _L_FLAG((tty),XCASE)
L_ECHO  macro  include/linux/tty.h  141  #define L_ECHO(tty) _L_FLAG((tty),ECHO)
L_ECHOE  macro  include/linux/tty.h  142  #define L_ECHOE(tty) _L_FLAG((tty),ECHOE)
L_ECHOK  macro  include/linux/tty.h  143  #define L_ECHOK(tty) _L_FLAG((tty),ECHOK)
L_ECHONL  macro  include/linux/tty.h  144  #define L_ECHONL(tty) _L_FLAG((tty),ECHONL)
L_NOFLSH  macro  include/linux/tty.h  145  #define L_NOFLSH(tty) _L_FLAG((tty),NOFLSH)
L_TOSTOP  macro  include/linux/tty.h  146  #define L_TOSTOP(tty) _L_FLAG((tty),TOSTOP)
L_ECHOCTL  macro  include/linux/tty.h  147  #define L_ECHOCTL(tty) _L_FLAG((tty),ECHOCTL)
L_ECHOPRT  macro  include/linux/tty.h  148  #define L_ECHOPRT(tty) _L_FLAG((tty),ECHOPRT)
L_ECHOKE  macro  include/linux/tty.h  149  #define L_ECHOKE(tty) _L_FLAG((tty),ECHOKE)
L_FLUSHO  macro  include/linux/tty.h  150  #define L_FLUSHO(tty) _L_FLAG((tty),FLUSHO)
L_PENDIN  macro  include/linux/tty.h  151  #define L_PENDIN(tty) _L_FLAG((tty),PENDIN)
L_IEXTEN  macro  include/linux/tty.h  152  #define L_IEXTEN(tty) _L_FLAG((tty),IEXTEN)
L_EXTPROC  macro  include/linux/tty.h  153  #define L_EXTPROC(tty) _L_FLAG((tty),EXTPROC)
tty_port_operations  struct  include/linux/tty.h  171  struct tty_port_operations {
tty_port  struct  include/linux/tty.h  190  struct tty_port {
TTYP_FLUSHING  macro  include/linux/tty.h  203  #define TTYP_FLUSHING 1
TTYP_FLUSHPENDING  macro  include/linux/tty.h  204  #define TTYP_FLUSHPENDING 2
tty_struct  struct  include/linux/tty.h  231  struct tty_struct {
N_TTY_BUF_SIZE  macro  include/linux/tty.h  271  #define N_TTY_BUF_SIZE 4096
tty_file_private  struct  include/linux/tty.h  283  struct tty_file_private {
TTY_MAGIC  macro  include/linux/tty.h  290  #define TTY_MAGIC 0x5401
TTY_THROTTLED  macro  include/linux/tty.h  300  #define TTY_THROTTLED 0
TTY_IO_ERROR  macro  include/linux/tty.h  301  #define TTY_IO_ERROR 1
TTY_OTHER_CLOSED  macro  include/linux/tty.h  302  #define TTY_OTHER_CLOSED 2
TTY_EXCLUSIVE  macro  include/linux/tty.h  303  #define TTY_EXCLUSIVE 3
TTY_DEBUG  macro  include/linux/tty.h  304  #define TTY_DEBUG 4
TTY_DO_WRITE_WAKEUP  macro  include/linux/tty.h  305  #define TTY_DO_WRITE_WAKEUP 5
TTY_PUSH  macro  include/linux/tty.h  306  #define TTY_PUSH 6
TTY_CLOSING  macro  include/linux/tty.h  307  #define TTY_CLOSING 7
TTY_LDISC  macro  include/linux/tty.h  308  #define TTY_LDISC 9
TTY_LDISC_CHANGING  macro  include/linux/tty.h  309  #define TTY_LDISC_CHANGING 10
TTY_LDISC_OPEN  macro  include/linux/tty.h  310  #define TTY_LDISC_OPEN 11
TTY_HW_COOK_OUT  macro  include/linux/tty.h  311  #define TTY_HW_COOK_OUT 14
TTY_HW_COOK_IN  macro  include/linux/tty.h  312  #define TTY_HW_COOK_IN 15
TTY_PTY_LOCK  macro  include/linux/tty.h  313  #define TTY_PTY_LOCK 16
TTY_NO_WRITE_SPLIT  macro  include/linux/tty.h  314  #define TTY_NO_WRITE_SPLIT 17
TTY_HUPPED  macro  include/linux/tty.h  315  #define TTY_HUPPED 18
TTY_HUPPING  macro  include/linux/tty.h  316  #define TTY_HUPPING 21
TTY_WRITE_FLUSH  macro  include/linux/tty.h  318  #define TTY_WRITE_FLUSH(tty) tty_write_flush((tty))
tty_write_flush  prototype  include/linux/tty.h  320  extern void tty_write_flush(struct tty_struct *);
console_init  prototype  include/linux/tty.h  324  extern void console_init(void);
vcs_init  prototype  include/linux/tty.h  325  extern int vcs_init(void);
tty_kref_get  function  include/linux/tty.h  338  static inline struct tty_struct *tty_kref_get(struct tty_struct *tty)
tty_kref_put  prototype  include/linux/tty.h  344  extern void tty_kref_put(struct tty_struct *tty);
tty_paranoia_check  prototype  include/linux/tty.h  347  extern int tty_paranoia_check(struct tty_struct *tty,struct inode *inode,const char *routine);
tty_name  prototype  include/linux/tty.h  348  extern char *tty_name(struct tty_struct *tty,char *buf);
tty_wait_until_sent  prototype  include/linux/tty.h  349  extern void tty_wait_until_sent(struct tty_struct *tty,long timeout);
tty_check_change  prototype  include/linux/tty.h  350  extern int tty_check_change(struct tty_struct *tty);
stop_tty  prototype  include/linux/tty.h  351  extern void stop_tty(struct tty_struct *tty);
start_tty  prototype  include/linux/tty.h  352  extern void start_tty(struct tty_struct *tty);
tty_register_driver  prototype  include/linux/tty.h  353  extern int tty_register_driver(struct tty_driver *driver);
tty_unregister_driver  prototype  include/linux/tty.h  354  extern int tty_unregister_driver(struct tty_driver *driver);
tty_register_device  prototype  include/linux/tty.h  356  extern struct device *tty_register_device(struct tty_driver *driver,unsigned index, struct device *dev);
tty_register_device_attr  prototype  include/linux/tty.h  360  extern struct device *tty_register_device_attr(struct tty_driver *driver,unsigned index, struct device *device,void *drvdata,const struct attribute_group **attr_grp);
tty_unregister_device  prototype  include/linux/tty.h  361  extern void tty_unregister_device(struct tty_driver *driver,unsigned index);
tty_read_raw_data  prototype  include/linux/tty.h  363  extern int tty_read_raw_data(struct tty_struct *tty,unsigned char *bufp,int buflen);
tty_write_message  prototype  include/linux/tty.h  364  extern void tty_write_message(struct tty_struct *tty,char *msg);
tty_put_char  prototype  include/linux/tty.h  365  extern int tty_put_char(struct tty_struct *tty,unsigned char c);
tty_chars_in_buffer  prototype  include/linux/tty.h  366  extern int tty_chars_in_buffer(struct tty_struct *tty);
tty_write_room  prototype  include/linux/tty.h  367  extern int tty_write_room(struct tty_struct *tty);
tty_driver_flush_buffer  prototype  include/linux/tty.h  368  extern void tty_driver_flush_buffer(struct tty_struct *tty);
tty_throttle  prototype  include/linux/tty.h  369  extern void tty_throttle(struct tty_struct *tty);
tty_unthrottle  prototype  include/linux/tty.h  370  extern void tty_unthrottle(struct tty_struct *tty);
tty_do_resize  prototype  include/linux/tty.h  371  extern int tty_do_resize(struct tty_struct *tty,struct winsize *ws);
tty_driver_remove_tty  prototype  include/linux/tty.h  373  extern void tty_driver_remove_tty(struct tty_driver *driver,struct tty_struct *tty);
tty_free_termios  prototype  include/linux/tty.h  374  extern void tty_free_termios(struct tty_struct *tty);
is_current_pgrp_orphaned  prototype  include/linux/tty.h  375  extern int is_current_pgrp_orphaned(void);
tty_get_pgrp  prototype  include/linux/tty.h  376  extern struct pid *tty_get_pgrp(struct tty_struct *tty);
is_ignored  prototype  include/linux/tty.h  377  extern int is_ignored(int sig);
tty_signal  prototype  include/linux/tty.h  378  extern int tty_signal(int sig,struct tty_struct *tty);
tty_hangup  prototype  include/linux/tty.h  379  extern void tty_hangup(struct tty_struct *tty);
tty_vhangup  prototype  include/linux/tty.h  380  extern void tty_vhangup(struct tty_struct *tty);
tty_vhangup_locked  prototype  include/linux/tty.h  381  extern void tty_vhangup_locked(struct tty_struct *tty);
tty_vhangup_self  prototype  include/linux/tty.h  382  extern void tty_vhangup_self(void);
tty_unhangup  prototype  include/linux/tty.h  383  extern void tty_unhangup(struct file *filp);
tty_hung_up_p  prototype  include/linux/tty.h  384  extern int tty_hung_up_p(struct file *filp);
do_SAK  prototype  include/linux/tty.h  385  extern void do_SAK(struct tty_struct *tty);
__do_SAK  prototype  include/linux/tty.h  386  extern void __do_SAK(struct tty_struct *tty);
disassociate_ctty  prototype  include/linux/tty.h  387  extern void disassociate_ctty(int priv);
no_tty  prototype  include/linux/tty.h  388  extern void no_tty(void);
tty_flip_buffer_push  prototype  include/linux/tty.h  389  extern void tty_flip_buffer_push(struct tty_struct *tty);
tty_flush_to_ldisc  prototype  include/linux/tty.h  390  extern void tty_flush_to_ldisc(struct tty_struct *tty);
tty_buffer_free_all  prototype  include/linux/tty.h  391  extern void tty_buffer_free_all(struct tty_port *port);
tty_buffer_flush  prototype  include/linux/tty.h  392  extern void tty_buffer_flush(struct tty_struct *tty);
tty_buffer_init  prototype  include/linux/tty.h  393  extern void tty_buffer_init(struct tty_port *port);
tty_get_baud_rate  prototype  include/linux/tty.h  394  extern speed_t tty_get_baud_rate(struct tty_struct *tty);
tty_termios_baud_rate  prototype  include/linux/tty.h  395  extern speed_t tty_termios_baud_rate(struct ktermios *termios);
tty_termios_input_baud_rate  prototype  include/linux/tty.h  396  extern speed_t tty_termios_input_baud_rate(struct ktermios *termios);
tty_termios_encode_baud_rate  prototype  include/linux/tty.h  398  extern void tty_termios_encode_baud_rate(struct ktermios *termios,speed_t ibaud, speed_t obaud);
tty_encode_baud_rate  prototype  include/linux/tty.h  400  extern void tty_encode_baud_rate(struct tty_struct *tty,speed_t ibaud, speed_t obaud);
tty_termios_copy_hw  prototype  include/linux/tty.h  401  extern void tty_termios_copy_hw(struct ktermios *new,struct ktermios *old);
tty_termios_hw_change  prototype  include/linux/tty.h  402  extern int tty_termios_hw_change(struct ktermios *a,struct ktermios *b);
tty_set_termios  prototype  include/linux/tty.h  403  extern int tty_set_termios(struct tty_struct *tty,struct ktermios *kt);
tty_ldisc_ref  prototype  include/linux/tty.h  405  extern struct tty_ldisc *tty_ldisc_ref(struct tty_struct *);
tty_ldisc_deref  prototype  include/linux/tty.h  406  extern void tty_ldisc_deref(struct tty_ldisc *);
tty_ldisc_ref_wait  prototype  include/linux/tty.h  407  extern struct tty_ldisc *tty_ldisc_ref_wait(struct tty_struct *);
tty_ldisc_hangup  prototype  include/linux/tty.h  408  extern void tty_ldisc_hangup(struct tty_struct *tty);
tty_wakeup  prototype  include/linux/tty.h  411  extern void tty_wakeup(struct tty_struct *tty);
tty_ldisc_flush  prototype  include/linux/tty.h  412  extern void tty_ldisc_flush(struct tty_struct *tty);
tty_ioctl  prototype  include/linux/tty.h  414  extern long tty_ioctl(struct file *file,unsigned int cmd,unsigned long arg);
tty_mode_ioctl  prototype  include/linux/tty.h  416  extern int tty_mode_ioctl(struct tty_struct *tty,struct file *file,unsigned int cmd, unsigned long arg);
tty_perform_flush  prototype  include/linux/tty.h  417  extern int tty_perform_flush(struct tty_struct *tty,unsigned long arg);
tty_devnum  prototype  include/linux/tty.h  418  extern dev_t tty_devnum(struct tty_struct *tty);
proc_clear_tty  prototype  include/linux/tty.h  419  extern void proc_clear_tty(struct task_struct *p);
get_current_tty  prototype  include/linux/tty.h  420  extern struct tty_struct *get_current_tty(void);
tty_default_fops  prototype  include/linux/tty.h  421  extern void tty_default_fops(struct file_operations *fops);
alloc_tty_struct  prototype  include/linux/tty.h  422  extern struct tty_struct *alloc_tty_struct(void);
tty_alloc_file  prototype  include/linux/tty.h  423  extern int tty_alloc_file(struct file *file);
tty_add_file  prototype  include/linux/tty.h  424  extern void tty_add_file(struct tty_struct *tty,struct file *file);
tty_free_file  prototype  include/linux/tty.h  425  extern void tty_free_file(struct file *file);
free_tty_struct  prototype  include/linux/tty.h  426  extern void free_tty_struct(struct tty_struct *tty);
initialize_tty_struct  prototype  include/linux/tty.h  428  extern void initialize_tty_struct(struct tty_struct *tty,struct tty_driver *driver, int idx);
deinitialize_tty_struct  prototype  include/linux/tty.h  429  extern void deinitialize_tty_struct(struct tty_struct *tty);
tty_init_dev  prototype  include/linux/tty.h  430  extern struct tty_struct *tty_init_dev(struct tty_driver *driver,int idx);
tty_release  prototype  include/linux/tty.h  431  extern int tty_release(struct inode *inode,struct file *filp);
tty_init_termios  prototype  include/linux/tty.h  432  extern int tty_init_termios(struct tty_struct *tty);
tty_standard_install  prototype  include/linux/tty.h  434  extern int tty_standard_install(struct tty_driver *driver,struct tty_struct *tty);
tty_pair_get_tty  prototype  include/linux/tty.h  436  extern struct tty_struct *tty_pair_get_tty(struct tty_struct *tty);
tty_pair_get_pty  prototype  include/linux/tty.h  437  extern struct tty_struct *tty_pair_get_pty(struct tty_struct *tty);
tty_write_unlock  prototype  include/linux/tty.h  442  extern void tty_write_unlock(struct tty_struct *tty);
tty_write_lock  prototype  include/linux/tty.h  443  extern int tty_write_lock(struct tty_struct *tty,int ndelay);
tty_is_writelocked  macro  include/linux/tty.h  444  #define tty_is_writelocked(tty) (mutex_is_locked(&tty->atomic_write_lock))
tty_port_init  prototype  include/linux/tty.h  446  extern void tty_port_init(struct tty_port *port);
tty_port_link_device  prototype  include/linux/tty.h  448  extern void tty_port_link_device(struct tty_port *port,struct tty_driver *driver, unsigned index);
tty_port_register_device  prototype  include/linux/tty.h  451  extern struct device *tty_port_register_device(struct tty_port *port,struct tty_driver *driver, unsigned index,struct device *device);
tty_port_register_device_attr  prototype  include/linux/tty.h  455  extern struct device *tty_port_register_device_attr(struct tty_port *port,struct tty_driver *driver, unsigned index,struct device *device, void *drvdata,const struct attribute_group **attr_grp);
tty_port_alloc_xmit_buf  prototype  include/linux/tty.h  456  extern int tty_port_alloc_xmit_buf(struct tty_port *port);
tty_port_free_xmit_buf  prototype  include/linux/tty.h  457  extern void tty_port_free_xmit_buf(struct tty_port *port);
tty_port_destroy  prototype  include/linux/tty.h  458  extern void tty_port_destroy(struct tty_port *port);
tty_port_put  prototype  include/linux/tty.h  459  extern void tty_port_put(struct tty_port *port);
tty_port_get  function  include/linux/tty.h  461  static inline struct tty_port *tty_port_get(struct tty_port *port)
tty_port_cts_enabled  function  include/linux/tty.h  469  static inline bool tty_port_cts_enabled(struct tty_port *port)
tty_port_tty_get  prototype  include/linux/tty.h  474  extern struct tty_struct *tty_port_tty_get(struct tty_port *port);
tty_port_tty_set  prototype  include/linux/tty.h  475  extern void tty_port_tty_set(struct tty_port *port,struct tty_struct *tty);
tty_port_carrier_raised  prototype  include/linux/tty.h  476  extern int tty_port_carrier_raised(struct tty_port *port);
tty_port_raise_dtr_rts  prototype  include/linux/tty.h  477  extern void tty_port_raise_dtr_rts(struct tty_port *port);
tty_port_lower_dtr_rts  prototype  include/linux/tty.h  478  extern void tty_port_lower_dtr_rts(struct tty_port *port);
tty_port_hangup  prototype  include/linux/tty.h  479  extern void tty_port_hangup(struct tty_port *port);
tty_port_block_til_ready  prototype  include/linux/tty.h  481  extern int tty_port_block_til_ready(struct tty_port *port,struct tty_struct *tty, struct file *filp);
tty_port_close_start  prototype  include/linux/tty.h  483  extern int tty_port_close_start(struct tty_port *port,struct tty_struct *tty, struct file *filp);
tty_port_close_end  prototype  include/linux/tty.h  484  extern void tty_port_close_end(struct tty_port *port,struct tty_struct *tty);
tty_port_close  prototype  include/linux/tty.h  486  extern void tty_port_close(struct tty_port *port,struct tty_struct *tty, struct file *filp);
tty_port_install  prototype  include/linux/tty.h  488  extern int tty_port_install(struct tty_port *port,struct tty_driver *driver,struct tty_struct *tty);
tty_port_open  prototype  include/linux/tty.h  490  extern int tty_port_open(struct tty_port *port,struct tty_struct *tty, struct file *filp);
tty_port_users  function  include/linux/tty.h  491  static inline int tty_port_users(struct tty_port *port)
tty_register_ldisc  prototype  include/linux/tty.h  496  extern int tty_register_ldisc(int disc,struct tty_ldisc_ops *new_ldisc);
tty_unregister_ldisc  prototype  include/linux/tty.h  497  extern int tty_unregister_ldisc(int disc);
tty_set_ldisc  prototype  include/linux/tty.h  498  extern int tty_set_ldisc(struct tty_struct *tty,int ldisc);
tty_ldisc_setup  prototype  include/linux/tty.h  499  extern int tty_ldisc_setup(struct tty_struct *tty,struct tty_struct *o_tty);
tty_ldisc_release  prototype  include/linux/tty.h  500  extern void tty_ldisc_release(struct tty_struct *tty,struct tty_struct *o_tty);
tty_ldisc_init  prototype  include/linux/tty.h  501  extern void tty_ldisc_init(struct tty_struct *tty);
tty_ldisc_deinit  prototype  include/linux/tty.h  502  extern void tty_ldisc_deinit(struct tty_struct *tty);
tty_ldisc_begin  prototype  include/linux/tty.h  503  extern void tty_ldisc_begin(void);
tty_ldisc_enable  prototype  include/linux/tty.h  505  extern void tty_ldisc_enable(struct tty_struct *tty);
n_tty_inherit_ops  prototype  include/linux/tty.h  510  extern void n_tty_inherit_ops(struct tty_ldisc_ops *ops);
tty_audit_add_data  function  include/linux/tty.h  524  static inline void tty_audit_add_data(struct tty_struct *tty,unsigned char *data, size_t size, unsigned icanon)
tty_audit_exit  function  include/linux/tty.h  530  static inline void tty_audit_exit(void)
tty_audit_fork  function  include/linux/tty.h  533  static inline void tty_audit_fork(struct signal_struct *sig)
tty_audit_tiocsti  function  include/linux/tty.h  527  static inline void tty_audit_tiocsti(struct tty_struct *tty,char ch)
tty_audit_push  function  include/linux/tty.h  536  static inline void tty_audit_push(struct tty_struct *tty)
tty_audit_push_task  function  include/linux/tty.h  540  static inline int tty_audit_push_task(struct task_struct *tsk,kuid_t loginuid, u32 sessionid)
tty_init  prototype  include/linux/tty.h  547  extern int __init tty_init(void);
n_tty_ioctl_helper  prototype  include/linux/tty.h  551  extern int n_tty_ioctl_helper(struct tty_struct *tty,struct file *file,unsigned int cmd, unsigned long arg);
n_tty_compat_ioctl_helper  prototype  include/linux/tty.h  553  extern long n_tty_compat_ioctl_helper(struct tty_struct *tty,struct file *file,unsigned int cmd, unsigned long arg);
serial_console_init  prototype  include/linux/tty.h  557  extern void serial_console_init(void);
pcxe_open  prototype  include/linux/tty.h  561  extern int pcxe_open(struct tty_struct *tty,struct file *filp);
vt_ioctl  prototype  include/linux/tty.h  566  extern int vt_ioctl(struct tty_struct *tty,unsigned int cmd, unsigned long arg);
vt_compat_ioctl  prototype  include/linux/tty.h  569  extern long vt_compat_ioctl(struct tty_struct *tty,unsigned int cmd, unsigned long arg);
tty_lock  prototype  include/linux/tty.h  573  extern void __lockfunc tty_lock(struct tty_struct *tty);
tty_unlock  prototype  include/linux/tty.h  574  extern void __lockfunc tty_unlock(struct tty_struct *tty);
tty_lock_pair  prototype  include/linux/tty.h  576  extern void __lockfunc tty_lock_pair(struct tty_struct *tty,struct tty_struct *tty2);
tty_unlock_pair  prototype  include/linux/tty.h  578  extern void __lockfunc tty_unlock_pair(struct tty_struct *tty,struct tty_struct *tty2);
tty_wait_until_sent_from_close  function  include/linux/tty.h  591  static inline void tty_wait_until_sent_from_close(struct tty_struct *tty,long timeout)
wait_event_interruptible_tty  macro  include/linux/tty.h  610  #define wait_event_interruptible_tty(tty,wq,condition) \
__wait_event_interruptible_tty  macro  include/linux/tty.h  619  #define __wait_event_interruptible_tty(tty,wq,condition,ret) \
_LINUX_CONSOLE_STRUCT_H  macro  include/linux/console_struct.h  13  #define _LINUX_CONSOLE_STRUCT_H
NPAR  macro  include/linux/console_struct.h  21  #define NPAR 16
vc_data  struct  include/linux/console_struct.h  23  struct vc_data {
vc  struct  include/linux/console_struct.h  113  struct vc {
vc_SAK  prototype  include/linux/console_struct.h  123  extern void vc_SAK(struct work_struct *work);
CUR_DEF  macro  include/linux/console_struct.h  125  #define CUR_DEF 0
CUR_NONE  macro  include/linux/console_struct.h  126  #define CUR_NONE 1
CUR_UNDERLINE  macro  include/linux/console_struct.h  127  #define CUR_UNDERLINE 2
CUR_LOWER_THIRD  macro  include/linux/console_struct.h  128  #define CUR_LOWER_THIRD 3
CUR_LOWER_HALF  macro  include/linux/console_struct.h  129  #define CUR_LOWER_HALF 4
CUR_TWO_THIRDS  macro  include/linux/console_struct.h  130  #define CUR_TWO_THIRDS 5
CUR_BLOCK  macro  include/linux/console_struct.h  131  #define CUR_BLOCK 6
CUR_HWMASK  macro  include/linux/console_struct.h  132  #define CUR_HWMASK 0x0f
CUR_SWMASK  macro  include/linux/console_struct.h  133  #define CUR_SWMASK 0xfff0
CUR_DEFAULT  macro  include/linux/console_struct.h  135  #define CUR_DEFAULT CUR_UNDERLINE
CON_IS_VISIBLE  macro  include/linux/console_struct.h  137  #define CON_IS_VISIBLE(conp) (*conp->vc_display_fg == conp)
_LINUX_MM_H  macro  include/linux/mm.h  2  #define _LINUX_MM_H
sysctl_legacy_va_layout  macro  include/linux/mm.h  40  #define sysctl_legacy_va_layout 0
nth_page  macro  include/linux/mm.h  47  #define nth_page(page,n) pfn_to_page(page_to_pfn((page)) + (n))
PAGE_ALIGN  macro  include/linux/mm.h  50  #define PAGE_ALIGN(addr) ALIGN(addr,PAGE_SIZE)
kobjsize  prototype  include/linux/mm.h  67  extern unsigned int kobjsize(const void *objp);
VM_NONE  macro  include/linux/mm.h  73  #define VM_NONE 0x00000000
VM_READ  macro  include/linux/mm.h  75  #define VM_READ 0x00000001
VM_WRITE  macro  include/linux/mm.h  76  #define VM_WRITE 0x00000002
VM_EXEC  macro  include/linux/mm.h  77  #define VM_EXEC 0x00000004
VM_SHARED  macro  include/linux/mm.h  78  #define VM_SHARED 0x00000008
VM_MAYREAD  macro  include/linux/mm.h  81  #define VM_MAYREAD 0x00000010
VM_MAYWRITE  macro  include/linux/mm.h  82  #define VM_MAYWRITE 0x00000020
VM_MAYEXEC  macro  include/linux/mm.h  83  #define VM_MAYEXEC 0x00000040
VM_MAYSHARE  macro  include/linux/mm.h  84  #define VM_MAYSHARE 0x00000080
VM_GROWSDOWN  macro  include/linux/mm.h  86  #define VM_GROWSDOWN 0x00000100
VM_PFNMAP  macro  include/linux/mm.h  87  #define VM_PFNMAP 0x00000400
VM_DENYWRITE  macro  include/linux/mm.h  88  #define VM_DENYWRITE 0x00000800
VM_LOCKED  macro  include/linux/mm.h  90  #define VM_LOCKED 0x00002000
VM_IO  macro  include/linux/mm.h  91  #define VM_IO 0x00004000
VM_SEQ_READ  macro  include/linux/mm.h  94  #define VM_SEQ_READ 0x00008000
VM_RAND_READ  macro  include/linux/mm.h  95  #define VM_RAND_READ 0x00010000
VM_DONTCOPY  macro  include/linux/mm.h  97  #define VM_DONTCOPY 0x00020000
VM_DONTEXPAND  macro  include/linux/mm.h  98  #define VM_DONTEXPAND 0x00040000
VM_ACCOUNT  macro  include/linux/mm.h  99  #define VM_ACCOUNT 0x00100000
VM_NORESERVE  macro  include/linux/mm.h  100  #define VM_NORESERVE 0x00200000
VM_HUGETLB  macro  include/linux/mm.h  101  #define VM_HUGETLB 0x00400000
VM_NONLINEAR  macro  include/linux/mm.h  102  #define VM_NONLINEAR 0x00800000
VM_ARCH_1  macro  include/linux/mm.h  103  #define VM_ARCH_1 0x01000000
VM_DONTDUMP  macro  include/linux/mm.h  104  #define VM_DONTDUMP 0x04000000
VM_MIXEDMAP  macro  include/linux/mm.h  106  #define VM_MIXEDMAP 0x10000000
VM_HUGEPAGE  macro  include/linux/mm.h  107  #define VM_HUGEPAGE 0x20000000
VM_NOHUGEPAGE  macro  include/linux/mm.h  108  #define VM_NOHUGEPAGE 0x40000000
VM_MERGEABLE  macro  include/linux/mm.h  109  #define VM_MERGEABLE 0x80000000
VM_PAT  macro  include/linux/mm.h  112  # define VM_PAT VM_ARCH_1
VM_SAO  macro  include/linux/mm.h  114  # define VM_SAO VM_ARCH_1
VM_GROWSUP  macro  include/linux/mm.h  124  # define VM_GROWSUP VM_NONE
VM_MAPPED_COPY  macro  include/linux/mm.h  120  # define VM_MAPPED_COPY VM_ARCH_1
VM_STACK_INCOMPLETE_SETUP  macro  include/linux/mm.h  128  #define VM_STACK_INCOMPLETE_SETUP (VM_RAND_READ | VM_SEQ_READ)
VM_STACK_DEFAULT_FLAGS  macro  include/linux/mm.h  131  #define VM_STACK_DEFAULT_FLAGS VM_DATA_DEFAULT_FLAGS
VM_STACK_FLAGS  macro  include/linux/mm.h  137  #define VM_STACK_FLAGS (VM_GROWSDOWN | VM_STACK_DEFAULT_FLAGS | VM_ACCOUNT)
VM_READHINTMASK  macro  include/linux/mm.h  140  #define VM_READHINTMASK (VM_SEQ_READ | VM_RAND_READ)
VM_ClearReadHint  macro  include/linux/mm.h  141  #define VM_ClearReadHint(v) (v)->vm_flags &= ~VM_READHINTMASK
VM_NormalReadHint  macro  include/linux/mm.h  142  #define VM_NormalReadHint(v) (!((v)->vm_flags & VM_READHINTMASK))
VM_SequentialReadHint  macro  include/linux/mm.h  143  #define VM_SequentialReadHint(v) ((v)->vm_flags & VM_SEQ_READ)
VM_RandomReadHint  macro  include/linux/mm.h  144  #define VM_RandomReadHint(v) ((v)->vm_flags & VM_RAND_READ)
VM_SPECIAL  macro  include/linux/mm.h  150  #define VM_SPECIAL (VM_IO | VM_DONTEXPAND | VM_PFNMAP)
FAULT_FLAG_WRITE  macro  include/linux/mm.h  158  #define FAULT_FLAG_WRITE 0x01
FAULT_FLAG_NONLINEAR  macro  include/linux/mm.h  159  #define FAULT_FLAG_NONLINEAR 0x02
FAULT_FLAG_MKWRITE  macro  include/linux/mm.h  160  #define FAULT_FLAG_MKWRITE 0x04
FAULT_FLAG_ALLOW_RETRY  macro  include/linux/mm.h  161  #define FAULT_FLAG_ALLOW_RETRY 0x08
FAULT_FLAG_RETRY_NOWAIT  macro  include/linux/mm.h  162  #define FAULT_FLAG_RETRY_NOWAIT 0x10
FAULT_FLAG_KILLABLE  macro  include/linux/mm.h  163  #define FAULT_FLAG_KILLABLE 0x20
FAULT_FLAG_TRIED  macro  include/linux/mm.h  164  #define FAULT_FLAG_TRIED 0x40
vm_fault  struct  include/linux/mm.h  174  struct vm_fault {
vm_operations_struct  struct  include/linux/mm.h  191  struct vm_operations_struct {
page_private  macro  include/linux/mm.h  238  #define page_private(page) ((page)->private)
set_page_private  macro  include/linux/mm.h  239  #define set_page_private(page,v) ((page)->private = (v))
set_freepage_migratetype  function  include/linux/mm.h  242  static inline void set_freepage_migratetype(struct page *page,int migratetype)
get_freepage_migratetype  function  include/linux/mm.h  248  static inline int get_freepage_migratetype(struct page *page)
put_page_testzero  function  include/linux/mm.h  276  static inline int put_page_testzero(struct page *page)
get_page_unless_zero  function  include/linux/mm.h  286  static inline int get_page_unless_zero(struct page *page)
page_is_ram  prototype  include/linux/mm.h  291  extern int page_is_ram(unsigned long pfn);
vmalloc_to_page  prototype  include/linux/mm.h  294  struct page *vmalloc_to_page(const void *addr);
vmalloc_to_pfn  prototype  include/linux/mm.h  295  unsigned long vmalloc_to_pfn(const void *addr);
is_vmalloc_addr  function  include/linux/mm.h  303  static inline int is_vmalloc_addr(const void *x)
is_vmalloc_or_module_addr  function  include/linux/mm.h  316  static inline int is_vmalloc_or_module_addr(const void *x)
compound_lock  function  include/linux/mm.h  322  static inline void compound_lock(struct page *page)
compound_unlock  function  include/linux/mm.h  330  static inline void compound_unlock(struct page *page)
compound_lock_irqsave  function  include/linux/mm.h  338  static inline unsigned long compound_lock_irqsave(struct page *page)
compound_unlock_irqrestore  function  include/linux/mm.h  349  static inline void compound_unlock_irqrestore(struct page *page,unsigned long flags)
compound_head  function  include/linux/mm.h  357  static inline struct page *compound_head(struct page *page)
reset_page_mapcount  function  include/linux/mm.h  369  static inline void reset_page_mapcount(struct page *page)
page_mapcount  function  include/linux/mm.h  374  static inline int page_mapcount(struct page *page)
page_count  function  include/linux/mm.h  379  static inline int page_count(struct page *page)
get_huge_page_tail  function  include/linux/mm.h  384  static inline void get_huge_page_tail(struct page *page)
__get_page_tail  prototype  include/linux/mm.h  395  extern bool __get_page_tail(struct page *page);
get_page  function  include/linux/mm.h  397  static inline void get_page(struct page *page)
virt_to_head_page  function  include/linux/mm.h  410  static inline struct page *virt_to_head_page(const void *x)
init_page_count  function  include/linux/mm.h  420  static inline void init_page_count(struct page *page)
PAGE_BUDDY_MAPCOUNT_VALUE  macro  include/linux/mm.h  434  #define PAGE_BUDDY_MAPCOUNT_VALUE (-128)
PageBuddy  function  include/linux/mm.h  436  static inline int PageBuddy(struct page *page)
__SetPageBuddy  function  include/linux/mm.h  441  static inline void __SetPageBuddy(struct page *page)
__ClearPageBuddy  function  include/linux/mm.h  447  static inline void __ClearPageBuddy(struct page *page)
put_page  prototype  include/linux/mm.h  453  void put_page(struct page *page);
put_pages_list  prototype  include/linux/mm.h  454  void put_pages_list(struct list_head *pages);
split_page  prototype  include/linux/mm.h  456  void split_page(struct page *page,unsigned int order);
split_free_page  prototype  include/linux/mm.h  457  int split_free_page(struct page *page);
compound_page_dtor  typedef  include/linux/mm.h  464  typedef void compound_page_dtor(struct page *);
set_compound_page_dtor  function  include/linux/mm.h  467  static inline void set_compound_page_dtor(struct page *page,compound_page_dtor *dtor)
get_compound_page_dtor  function  include/linux/mm.h  472  static inline compound_page_dtor *get_compound_page_dtor(struct page *page)
compound_order  function  include/linux/mm.h  477  static inline int compound_order(struct page *page)
compound_trans_order  function  include/linux/mm.h  484  static inline int compound_trans_order(struct page *page)
set_compound_order  function  include/linux/mm.h  498  static inline void set_compound_order(struct page *page,unsigned long order)
maybe_mkwrite  function  include/linux/mm.h  510  static inline pte_t maybe_mkwrite(pte_t pte,struct vm_area_struct *vma)
SECTIONS_WIDTH  macro  include/linux/mm.h  601  #define SECTIONS_WIDTH 0
ZONES_WIDTH  macro  include/linux/mm.h  604  #define ZONES_WIDTH ZONES_SHIFT
NODES_WIDTH  macro  include/linux/mm.h  612  #define NODES_WIDTH 0
SECTIONS_PGOFF  macro  include/linux/mm.h  616  #define SECTIONS_PGOFF ((sizeof(unsigned long)*8) - SECTIONS_WIDTH)
NODES_PGOFF  macro  include/linux/mm.h  617  #define NODES_PGOFF (SECTIONS_PGOFF - NODES_WIDTH)
ZONES_PGOFF  macro  include/linux/mm.h  618  #define ZONES_PGOFF (NODES_PGOFF - ZONES_WIDTH)
NODE_NOT_IN_PAGE_FLAGS  macro  include/linux/mm.h  625  #define NODE_NOT_IN_PAGE_FLAGS
SECTIONS_PGSHIFT  macro  include/linux/mm.h  633  #define SECTIONS_PGSHIFT (SECTIONS_PGOFF * (SECTIONS_WIDTH != 0))
NODES_PGSHIFT  macro  include/linux/mm.h  634  #define NODES_PGSHIFT (NODES_PGOFF * (NODES_WIDTH != 0))
ZONES_PGSHIFT  macro  include/linux/mm.h  635  #define ZONES_PGSHIFT (ZONES_PGOFF * (ZONES_WIDTH != 0))
ZONEID_SHIFT  macro  include/linux/mm.h  643  #define ZONEID_SHIFT (NODES_SHIFT + ZONES_SHIFT)
ZONEID_PGOFF  macro  include/linux/mm.h  644  #define ZONEID_PGOFF ((NODES_PGOFF < ZONES_PGOFF)? \
ZONEID_PGSHIFT  macro  include/linux/mm.h  648  #define ZONEID_PGSHIFT (ZONEID_PGOFF * (ZONEID_SHIFT != 0))
ZONES_MASK  macro  include/linux/mm.h  654  #define ZONES_MASK ((1UL << ZONES_WIDTH) - 1)
NODES_MASK  macro  include/linux/mm.h  655  #define NODES_MASK ((1UL << NODES_WIDTH) - 1)
SECTIONS_MASK  macro  include/linux/mm.h  656  #define SECTIONS_MASK ((1UL << SECTIONS_WIDTH) - 1)
ZONEID_MASK  macro  include/linux/mm.h  657  #define ZONEID_MASK ((1UL << ZONEID_SHIFT) - 1)
page_zonenum  function  include/linux/mm.h  659  static inline enum zone_type page_zonenum(const struct page *page)
page_zone_id  function  include/linux/mm.h  672  static inline int page_zone_id(struct page *page)
zone_to_nid  function  include/linux/mm.h  677  static inline int zone_to_nid(struct zone *zone)
page_to_nid  function  include/linux/mm.h  689  static inline int page_to_nid(const struct page *page)
page_xchg_last_nid  function  include/linux/mm.h  710  static inline int page_xchg_last_nid(struct page *page,int nid)
page_last_nid  function  include/linux/mm.h  715  static inline int page_last_nid(struct page *page)
reset_page_last_nid  function  include/linux/mm.h  720  static inline void reset_page_last_nid(struct page *page)
page_zone  function  include/linux/mm.h  725  static inline struct zone *page_zone(const struct page *page)
set_page_section  function  include/linux/mm.h  731  static inline void set_page_section(struct page *page,unsigned long section)
page_to_section  function  include/linux/mm.h  737  static inline unsigned long page_to_section(const struct page *page)
set_page_zone  function  include/linux/mm.h  743  static inline void set_page_zone(struct page *page,enum zone_type zone)
set_page_node  function  include/linux/mm.h  749  static inline void set_page_node(struct page *page,unsigned long node)
set_page_links  function  include/linux/mm.h  756  static inline void set_page_links(struct page *page,enum zone_type zone,unsigned long node, unsigned long pfn)
lowmem_page_address  function  include/linux/mm.h  770  static __always_inline void *lowmem_page_address(const struct page *page)
HASHED_PAGE_VIRTUAL  macro  include/linux/mm.h  776  #define HASHED_PAGE_VIRTUAL
page_address  macro  include/linux/mm.h  795  #define page_address(page) lowmem_page_address(page)
set_page_address  macro  include/linux/mm.h  796  #define set_page_address(page,address) do { } while(0)
page_address_init  macro  include/linux/mm.h  797  #define page_address_init() do { } while(0)
PAGE_MAPPING_ANON  macro  include/linux/mm.h  816  #define PAGE_MAPPING_ANON 1
PAGE_MAPPING_KSM  macro  include/linux/mm.h  817  #define PAGE_MAPPING_KSM 2
PAGE_MAPPING_FLAGS  macro  include/linux/mm.h  818  #define PAGE_MAPPING_FLAGS (PAGE_MAPPING_ANON | PAGE_MAPPING_KSM)
page_mapping  function  include/linux/mm.h  821  static inline struct address_space *page_mapping(struct page *page)
page_rmapping  function  include/linux/mm.h  834  static inline void *page_rmapping(struct page *page)
__page_file_mapping  prototype  include/linux/mm.h  839  extern struct address_space *__page_file_mapping(struct page *);
page_file_mapping  function  include/linux/mm.h  842  struct address_space *page_file_mapping(struct page *page)
PageAnon  function  include/linux/mm.h  850  static inline int PageAnon(struct page *page)
page_index  function  include/linux/mm.h  859  static inline pgoff_t page_index(struct page *page)
__page_file_index  prototype  include/linux/mm.h  866  extern pgoff_t __page_file_index(struct page *page);
page_file_index  function  include/linux/mm.h  872  static inline pgoff_t page_file_index(struct page *page)
page_mapped  function  include/linux/mm.h  883  static inline int page_mapped(struct page *page)
VM_FAULT_MINOR  macro  include/linux/mm.h  894  #define VM_FAULT_MINOR 0
VM_FAULT_OOM  macro  include/linux/mm.h  896  #define VM_FAULT_OOM 0x0001
VM_FAULT_SIGBUS  macro  include/linux/mm.h  897  #define VM_FAULT_SIGBUS 0x0002
VM_FAULT_MAJOR  macro  include/linux/mm.h  898  #define VM_FAULT_MAJOR 0x0004
VM_FAULT_WRITE  macro  include/linux/mm.h  899  #define VM_FAULT_WRITE 0x0008
VM_FAULT_HWPOISON  macro  include/linux/mm.h  900  #define VM_FAULT_HWPOISON 0x0010
VM_FAULT_HWPOISON_LARGE  macro  include/linux/mm.h  901  #define VM_FAULT_HWPOISON_LARGE 0x0020
VM_FAULT_NOPAGE  macro  include/linux/mm.h  903  #define VM_FAULT_NOPAGE 0x0100
VM_FAULT_LOCKED  macro  include/linux/mm.h  904  #define VM_FAULT_LOCKED 0x0200
VM_FAULT_RETRY  macro  include/linux/mm.h  905  #define VM_FAULT_RETRY 0x0400
VM_FAULT_HWPOISON_LARGE_MASK  macro  include/linux/mm.h  907  #define VM_FAULT_HWPOISON_LARGE_MASK 0xf000
VM_FAULT_ERROR  macro  include/linux/mm.h  909  #define VM_FAULT_ERROR (VM_FAULT_OOM | VM_FAULT_SIGBUS | VM_FAULT_HWPOISON | \
VM_FAULT_SET_HINDEX  macro  include/linux/mm.h  913  #define VM_FAULT_SET_HINDEX(x) ((x) << 12)
VM_FAULT_GET_HINDEX  macro  include/linux/mm.h  914  #define VM_FAULT_GET_HINDEX(x) (((x) >> 12) & 0xf)
pagefault_out_of_memory  prototype  include/linux/mm.h  919  extern void pagefault_out_of_memory(void);
offset_in_page  macro  include/linux/mm.h  921  #define offset_in_page(p) ((unsigned long)(p) & ~PAGE_MASK)
SHOW_MEM_FILTER_NODES  macro  include/linux/mm.h  927  #define SHOW_MEM_FILTER_NODES (0x0001u)
show_free_areas  prototype  include/linux/mm.h  929  extern void show_free_areas(unsigned int flags);
skip_free_areas_node  prototype  include/linux/mm.h  930  extern bool skip_free_areas_node(unsigned int flags,int nid);
shmem_zero_setup  prototype  include/linux/mm.h  932  int shmem_zero_setup(struct vm_area_struct *);
can_do_mlock  prototype  include/linux/mm.h  934  extern int can_do_mlock(void);
user_shm_lock  prototype  include/linux/mm.h  935  extern int user_shm_lock(size_t,struct user_struct *);
user_shm_unlock  prototype  include/linux/mm.h  936  extern void user_shm_unlock(size_t,struct user_struct *);
zap_details  struct  include/linux/mm.h  941  struct zap_details {
vm_normal_page  prototype  include/linux/mm.h  949  struct page *vm_normal_page(struct vm_area_struct *vma,unsigned long addr,pte_t pte);
zap_vma_ptes  prototype  include/linux/mm.h  952  int zap_vma_ptes(struct vm_area_struct *vma,unsigned long address,unsigned long size);
zap_page_range  prototype  include/linux/mm.h  954  void zap_page_range(struct vm_area_struct *vma,unsigned long address,unsigned long size, struct zap_details *);
unmap_vmas  prototype  include/linux/mm.h  956  void unmap_vmas(struct mmu_gather *tlb,struct vm_area_struct *start_vma,unsigned long start, unsigned long end);
mm_walk  struct  include/linux/mm.h  974  struct mm_walk {
walk_page_range  prototype  include/linux/mm.h  987  int walk_page_range(unsigned long addr,unsigned long end,struct mm_walk *walk);
free_pgd_range  prototype  include/linux/mm.h  989  void free_pgd_range(struct mmu_gather *tlb,unsigned long addr,unsigned long end, unsigned long floor, unsigned long ceiling);
copy_page_range  prototype  include/linux/mm.h  991  int copy_page_range(struct mm_struct *dst,struct mm_struct *src,struct vm_area_struct *vma);
unmap_mapping_range  prototype  include/linux/mm.h  993  void unmap_mapping_range(struct address_space *mapping,loff_t const holebegin, loff_t const holelen, int even_cows);
follow_pfn  prototype  include/linux/mm.h  995  int follow_pfn(struct vm_area_struct *vma,unsigned long address,unsigned long *pfn);
follow_phys  prototype  include/linux/mm.h  997  int follow_phys(struct vm_area_struct *vma,unsigned long address,unsigned int flags, unsigned long *prot, resource_size_t *phys);
generic_access_phys  prototype  include/linux/mm.h  999  int generic_access_phys(struct vm_area_struct *vma,unsigned long addr,void *buf, int len, int write);
unmap_shared_mapping_range  function  include/linux/mm.h  1002  static inline void unmap_shared_mapping_range(struct address_space *mapping,loff_t const holebegin, loff_t const holelen)
truncate_pagecache  prototype  include/linux/mm.h  1007  extern void truncate_pagecache(struct inode *inode,loff_t old,loff_t new);
truncate_setsize  prototype  include/linux/mm.h  1008  extern void truncate_setsize(struct inode *inode,loff_t newsize);
truncate_pagecache_range  prototype  include/linux/mm.h  1009  void truncate_pagecache_range(struct inode *inode,loff_t offset,loff_t end);
truncate_inode_page  prototype  include/linux/mm.h  1010  int truncate_inode_page(struct address_space *mapping,struct page *page);
generic_error_remove_page  prototype  include/linux/mm.h  1011  int generic_error_remove_page(struct address_space *mapping,struct page *page);
invalidate_inode_page  prototype  include/linux/mm.h  1012  int invalidate_inode_page(struct page *page);
handle_mm_fault  function  include/linux/mm.h  1022  static inline int handle_mm_fault(struct mm_struct *mm,struct vm_area_struct *vma, unsigned long address,unsigned int flags)
fixup_user_fault  function  include/linux/mm.h  1030  static inline int fixup_user_fault(struct task_struct *tsk,struct mm_struct *mm, unsigned long address,unsigned int fault_flags)
make_pages_present  prototype  include/linux/mm.h  1038  extern int make_pages_present(unsigned long addr,unsigned long end);
access_process_vm  prototype  include/linux/mm.h  1039  extern int access_process_vm(struct task_struct *tsk,unsigned long addr,void *buf,int len,int write);
access_remote_vm  prototype  include/linux/mm.h  1041  extern int access_remote_vm(struct mm_struct *mm,unsigned long addr,void *buf, int len, int write);
__get_user_pages  prototype  include/linux/mm.h  1046  int __get_user_pages(struct task_struct *tsk,struct mm_struct *mm,unsigned long start, int len, unsigned int foll_flags,struct page **pages, struct vm_area_struct **vmas,int *nonblocking);
get_user_pages  prototype  include/linux/mm.h  1049  int get_user_pages(struct task_struct *tsk,struct mm_struct *mm,unsigned long start, int nr_pages, int write, int force,struct page **pages, struct vm_area_struct **vmas);
get_user_pages_fast  prototype  include/linux/mm.h  1051  int get_user_pages_fast(unsigned long start,int nr_pages,int write,struct page **pages);
get_kernel_pages  prototype  include/linux/mm.h  1054  int get_kernel_pages(const struct kvec *iov,int nr_pages,int write,struct page **pages);
get_kernel_page  prototype  include/linux/mm.h  1055  int get_kernel_page(unsigned long start,int write,struct page **pages);
get_dump_page  prototype  include/linux/mm.h  1056  struct page *get_dump_page(unsigned long addr);
try_to_release_page  prototype  include/linux/mm.h  1058  extern int try_to_release_page(struct page * page,gfp_t gfp_mask);
do_invalidatepage  prototype  include/linux/mm.h  1059  extern void do_invalidatepage(struct page *page,unsigned long offset);
__set_page_dirty_nobuffers  prototype  include/linux/mm.h  1061  int __set_page_dirty_nobuffers(struct page *page);
__set_page_dirty_no_writeback  prototype  include/linux/mm.h  1062  int __set_page_dirty_no_writeback(struct page *page);
redirty_page_for_writepage  prototype  include/linux/mm.h  1064  int redirty_page_for_writepage(struct writeback_control *wbc,struct page *page);
account_page_dirtied  prototype  include/linux/mm.h  1065  void account_page_dirtied(struct page *page,struct address_space *mapping);
account_page_writeback  prototype  include/linux/mm.h  1066  void account_page_writeback(struct page *page);
set_page_dirty  prototype  include/linux/mm.h  1067  int set_page_dirty(struct page *page);
set_page_dirty_lock  prototype  include/linux/mm.h  1068  int set_page_dirty_lock(struct page *page);
clear_page_dirty_for_io  prototype  include/linux/mm.h  1069  int clear_page_dirty_for_io(struct page *page);
vma_growsdown  function  include/linux/mm.h  1072  static inline int vma_growsdown(struct vm_area_struct *vma,unsigned long addr)
stack_guard_page_start  function  include/linux/mm.h  1078  static inline int stack_guard_page_start(struct vm_area_struct *vma,unsigned long addr)
vma_growsup  function  include/linux/mm.h  1086  static inline int vma_growsup(struct vm_area_struct *vma,unsigned long addr)
stack_guard_page_end  function  include/linux/mm.h  1092  static inline int stack_guard_page_end(struct vm_area_struct *vma,unsigned long addr)
vm_is_stack  prototype  include/linux/mm.h  1100  vm_is_stack(struct task_struct *task,struct vm_area_struct *vma,int in_group);
move_page_tables  prototype  include/linux/mm.h  1105  extern unsigned long move_page_tables(struct vm_area_struct *vma,unsigned long old_addr, struct vm_area_struct *new_vma,unsigned long new_addr, unsigned long len,bool need_rmap_locks);
do_mremap  prototype  include/linux/mm.h  1108  extern unsigned long do_mremap(unsigned long addr,unsigned long old_len, unsigned long new_len,unsigned long flags, unsigned long new_addr);
change_protection  prototype  include/linux/mm.h  1111  extern unsigned long change_protection(struct vm_area_struct *vma,unsigned long start,unsigned long end, pgprot_t newprot,int dirty_accountable, int prot_numa);
mprotect_fixup  prototype  include/linux/mm.h  1114  extern int mprotect_fixup(struct vm_area_struct *vma,struct vm_area_struct **pprev, unsigned long start,unsigned long end, unsigned long newflags);
__get_user_pages_fast  prototype  include/linux/mm.h  1120  int __get_user_pages_fast(unsigned long start,int nr_pages,int write,struct page **pages);
get_mm_counter  function  include/linux/mm.h  1124  static inline unsigned long get_mm_counter(struct mm_struct *mm,int member)
add_mm_counter  function  include/linux/mm.h  1139  static inline void add_mm_counter(struct mm_struct *mm,int member,long value)
inc_mm_counter  function  include/linux/mm.h  1144  static inline void inc_mm_counter(struct mm_struct *mm,int member)
dec_mm_counter  function  include/linux/mm.h  1149  static inline void dec_mm_counter(struct mm_struct *mm,int member)
get_mm_rss  function  include/linux/mm.h  1154  static inline unsigned long get_mm_rss(struct mm_struct *mm)
get_mm_hiwater_rss  function  include/linux/mm.h  1160  static inline unsigned long get_mm_hiwater_rss(struct mm_struct *mm)
get_mm_hiwater_vm  function  include/linux/mm.h  1165  static inline unsigned long get_mm_hiwater_vm(struct mm_struct *mm)
update_hiwater_rss  function  include/linux/mm.h  1170  static inline void update_hiwater_rss(struct mm_struct *mm)
update_hiwater_vm  function  include/linux/mm.h  1178  static inline void update_hiwater_vm(struct mm_struct *mm)
setmax_mm_hiwater_rss  function  include/linux/mm.h  1185  static inline void setmax_mm_hiwater_rss(unsigned long *maxrss,struct mm_struct *mm)
sync_mm_rss  function  include/linux/mm.h  1196  static inline void sync_mm_rss(struct mm_struct *mm)
vma_wants_writenotify  prototype  include/linux/mm.h  1201  int vma_wants_writenotify(struct vm_area_struct *vma);
__get_locked_pte  prototype  include/linux/mm.h  1204  extern pte_t *__get_locked_pte(struct mm_struct *mm,unsigned long addr,spinlock_t **ptl);
get_locked_pte  function  include/linux/mm.h  1206  static inline pte_t *get_locked_pte(struct mm_struct *mm,unsigned long addr,spinlock_t **ptl)
__pud_alloc  prototype  include/linux/mm.h  1220  int __pud_alloc(struct mm_struct *mm,pgd_t *pgd,unsigned long address);
__pmd_alloc  prototype  include/linux/mm.h  1230  int __pmd_alloc(struct mm_struct *mm,pud_t *pud,unsigned long address);
__pte_alloc  prototype  include/linux/mm.h  1234  int __pte_alloc(struct mm_struct *mm,struct vm_area_struct *vma,pmd_t *pmd, unsigned long address);
__pte_alloc_kernel  prototype  include/linux/mm.h  1235  int __pte_alloc_kernel(pmd_t *pmd,unsigned long address);
pud_alloc  function  include/linux/mm.h  1242  static inline pud_t *pud_alloc(struct mm_struct *mm,pgd_t *pgd,unsigned long address)
pmd_alloc  function  include/linux/mm.h  1248  static inline pmd_t *pmd_alloc(struct mm_struct *mm,pud_t *pud,unsigned long address)
__pte_lockptr  macro  include/linux/mm.h  1262  #define __pte_lockptr(page) &((page)->ptl)
pte_lock_init  macro  include/linux/mm.h  1272  #define pte_lock_init(page) do {} while (0)
pte_lock_deinit  macro  include/linux/mm.h  1273  #define pte_lock_deinit(page) do {} while (0)
pte_lockptr  macro  include/linux/mm.h  1274  #define pte_lockptr(mm,pmd) ({(void)(pmd); &(mm)->page_table_lock;})
pgtable_page_ctor  function  include/linux/mm.h  1277  static inline void pgtable_page_ctor(struct page *page)
pgtable_page_dtor  function  include/linux/mm.h  1283  static inline void pgtable_page_dtor(struct page *page)
pte_offset_map_lock  macro  include/linux/mm.h  1289  #define pte_offset_map_lock(mm,pmd,address,ptlp) \
pte_unmap_unlock  macro  include/linux/mm.h  1298  #define pte_unmap_unlock(pte,ptl) do { \
pte_alloc_map  macro  include/linux/mm.h  1303  #define pte_alloc_map(mm,vma,pmd,address) \
pte_alloc_map_lock  macro  include/linux/mm.h  1308  #define pte_alloc_map_lock(mm,pmd,address,ptlp) \
pte_alloc_kernel  macro  include/linux/mm.h  1313  #define pte_alloc_kernel(pmd,address) \
free_area_init  prototype  include/linux/mm.h  1317  extern void free_area_init(unsigned long * zones_size);
free_area_init_node  prototype  include/linux/mm.h  1319  extern void free_area_init_node(int nid,unsigned long * zones_size,unsigned long zone_start_pfn, unsigned long *zholes_size);
free_initmem  prototype  include/linux/mm.h  1320  extern void free_initmem(void);
free_area_init_nodes  prototype  include/linux/mm.h  1349  extern void free_area_init_nodes(unsigned long *max_zone_pfn);
node_map_pfn_alignment  prototype  include/linux/mm.h  1350  unsigned long node_map_pfn_alignment(void);
__absent_pages_in_range  prototype  include/linux/mm.h  1352  unsigned long __absent_pages_in_range(int nid,unsigned long start_pfn,unsigned long end_pfn);
absent_pages_in_range  prototype  include/linux/mm.h  1354  extern unsigned long absent_pages_in_range(unsigned long start_pfn,unsigned long end_pfn);
get_pfn_range_for_nid  prototype  include/linux/mm.h  1356  extern void get_pfn_range_for_nid(unsigned int nid,unsigned long *start_pfn, unsigned long *end_pfn);
find_min_pfn_with_active_regions  prototype  include/linux/mm.h  1357  extern unsigned long find_min_pfn_with_active_regions(void);
free_bootmem_with_active_regions  prototype  include/linux/mm.h  1359  extern void free_bootmem_with_active_regions(int nid,unsigned long max_low_pfn);
sparse_memory_present_with_active_regions  prototype  include/linux/mm.h  1360  extern void sparse_memory_present_with_active_regions(int nid);
__early_pfn_to_nid  prototype  include/linux/mm.h  1375  extern int __meminit __early_pfn_to_nid(unsigned long pfn);
early_pfn_to_nid  prototype  include/linux/mm.h  1372  extern int __meminit early_pfn_to_nid(unsigned long pfn);
set_dma_reserve  prototype  include/linux/mm.h  1379  extern void set_dma_reserve(unsigned long new_dma_reserve);
memmap_init_zone  prototype  include/linux/mm.h  1381  extern void memmap_init_zone(unsigned long,int,unsigned long,unsigned long, enum memmap_context);
setup_per_zone_wmarks  prototype  include/linux/mm.h  1382  extern void setup_per_zone_wmarks(void);
init_per_zone_wmark_min  prototype  include/linux/mm.h  1383  extern int __meminit init_per_zone_wmark_min(void);
mem_init  prototype  include/linux/mm.h  1384  extern void mem_init(void);
mmap_init  prototype  include/linux/mm.h  1385  extern void __init mmap_init(void);
show_mem  prototype  include/linux/mm.h  1386  extern void show_mem(unsigned int flags);
si_meminfo  prototype  include/linux/mm.h  1387  extern void si_meminfo(struct sysinfo * val);
si_meminfo_node  prototype  include/linux/mm.h  1388  extern void si_meminfo_node(struct sysinfo *val,int nid);
warn_alloc_failed  prototype  include/linux/mm.h  1392  void warn_alloc_failed(gfp_t gfp_mask,int order,const char *fmt,...);
setup_per_cpu_pageset  prototype  include/linux/mm.h  1394  extern void setup_per_cpu_pageset(void);
zone_pcp_update  prototype  include/linux/mm.h  1396  extern void zone_pcp_update(struct zone *zone);
zone_pcp_reset  prototype  include/linux/mm.h  1397  extern void zone_pcp_reset(struct zone *zone);
nommu_shrink_inode_mappings  prototype  include/linux/mm.h  1401  extern int nommu_shrink_inode_mappings(struct inode *,size_t,size_t);
vma_interval_tree_insert  prototype  include/linux/mm.h  1405  void vma_interval_tree_insert(struct vm_area_struct *node,struct rb_root *root);
vma_interval_tree_insert_after  prototype  include/linux/mm.h  1408  void vma_interval_tree_insert_after(struct vm_area_struct *node,struct vm_area_struct *prev,struct rb_root *root);
vma_interval_tree_remove  prototype  include/linux/mm.h  1410  void vma_interval_tree_remove(struct vm_area_struct *node,struct rb_root *root);
vma_interval_tree_iter_first  prototype  include/linux/mm.h  1412  struct vm_area_struct *vma_interval_tree_iter_first(struct rb_root *root,unsigned long start, unsigned long last);
vma_interval_tree_iter_next  prototype  include/linux/mm.h  1414  struct vm_area_struct *vma_interval_tree_iter_next(struct vm_area_struct *node,unsigned long start, unsigned long last);
vma_interval_tree_foreach  macro  include/linux/mm.h  1416  #define vma_interval_tree_foreach(vma,root,start,last) \
vma_nonlinear_insert  function  include/linux/mm.h  1421  static inline void vma_nonlinear_insert(struct vm_area_struct *vma,struct list_head *list)
anon_vma_interval_tree_insert  prototype  include/linux/mm.h  1427  void anon_vma_interval_tree_insert(struct anon_vma_chain *node,struct rb_root *root);
anon_vma_interval_tree_remove  prototype  include/linux/mm.h  1429  void anon_vma_interval_tree_remove(struct anon_vma_chain *node,struct rb_root *root);
anon_vma_interval_tree_iter_first  prototype  include/linux/mm.h  1430  struct anon_vma_chain *anon_vma_interval_tree_iter_first(
anon_vma_interval_tree_iter_next  prototype  include/linux/mm.h  1432  struct anon_vma_chain *anon_vma_interval_tree_iter_next(
anon_vma_interval_tree_verify  prototype  include/linux/mm.h  1435  void anon_vma_interval_tree_verify(struct anon_vma_chain *node);
anon_vma_interval_tree_foreach  macro  include/linux/mm.h  1438  #define anon_vma_interval_tree_foreach(avc,root,start,last) \
__vm_enough_memory  prototype  include/linux/mm.h  1443  extern int __vm_enough_memory(struct mm_struct *mm,long pages,int cap_sys_admin);
vma_adjust  prototype  include/linux/mm.h  1445  extern int vma_adjust(struct vm_area_struct *vma,unsigned long start,unsigned long end, pgoff_t pgoff, struct vm_area_struct *insert);
vma_merge  prototype  include/linux/mm.h  1449  extern struct vm_area_struct *vma_merge(struct mm_struct *,struct vm_area_struct *prev, unsigned long addr, unsigned long end,unsigned long vm_flags, struct anon_vma *, struct file *, pgoff_t,struct mempolicy *);
find_mergeable_anon_vma  prototype  include/linux/mm.h  1450  extern struct anon_vma *find_mergeable_anon_vma(struct vm_area_struct *);
split_vma  prototype  include/linux/mm.h  1452  extern int split_vma(struct mm_struct *,struct vm_area_struct *, unsigned long addr, int new_below);
insert_vm_struct  prototype  include/linux/mm.h  1453  extern int insert_vm_struct(struct mm_struct *,struct vm_area_struct *);
__vma_link_rb  prototype  include/linux/mm.h  1455  extern void __vma_link_rb(struct mm_struct *,struct vm_area_struct *,struct rb_node **, struct rb_node *);
unlink_file_vma  prototype  include/linux/mm.h  1456  extern void unlink_file_vma(struct vm_area_struct *);
copy_vma  prototype  include/linux/mm.h  1459  extern struct vm_area_struct *copy_vma(struct vm_area_struct **,unsigned long addr, unsigned long len, pgoff_t pgoff,bool *need_rmap_locks);
exit_mmap  prototype  include/linux/mm.h  1460  extern void exit_mmap(struct mm_struct *);
mm_take_all_locks  prototype  include/linux/mm.h  1462  extern int mm_take_all_locks(struct mm_struct *mm);
mm_drop_all_locks  prototype  include/linux/mm.h  1463  extern void mm_drop_all_locks(struct mm_struct *mm);
set_mm_exe_file  prototype  include/linux/mm.h  1465  extern void set_mm_exe_file(struct mm_struct *mm,struct file *new_exe_file);
get_mm_exe_file  prototype  include/linux/mm.h  1466  extern struct file *get_mm_exe_file(struct mm_struct *mm);
may_expand_vm  prototype  include/linux/mm.h  1468  extern int may_expand_vm(struct mm_struct *mm,unsigned long npages);
install_special_mapping  prototype  include/linux/mm.h  1471  extern int install_special_mapping(struct mm_struct *mm,unsigned long addr, unsigned long len,unsigned long flags, struct page **pages);
get_unmapped_area  prototype  include/linux/mm.h  1473  extern unsigned long get_unmapped_area(struct file *,unsigned long,unsigned long,unsigned long,unsigned long);
mmap_region  prototype  include/linux/mm.h  1477  extern unsigned long mmap_region(struct file *file,unsigned long addr,unsigned long len, unsigned long flags,vm_flags_t vm_flags, unsigned long pgoff);
do_mmap_pgoff  prototype  include/linux/mm.h  1480  extern unsigned long do_mmap_pgoff(struct file *,unsigned long,unsigned long, unsigned long,unsigned long, unsigned long);
do_munmap  prototype  include/linux/mm.h  1481  extern int do_munmap(struct mm_struct *,unsigned long,size_t);
vm_brk  prototype  include/linux/mm.h  1484  extern unsigned long vm_brk(unsigned long,unsigned long);
vm_munmap  prototype  include/linux/mm.h  1485  extern int vm_munmap(unsigned long,size_t);
vm_mmap  prototype  include/linux/mm.h  1488  extern unsigned long vm_mmap(struct file *,unsigned long,unsigned long, unsigned long,unsigned long, unsigned long);
vm_unmapped_area_info  struct  include/linux/mm.h  1490  struct vm_unmapped_area_info {
VM_UNMAPPED_AREA_TOPDOWN  macro  include/linux/mm.h  1491  #define VM_UNMAPPED_AREA_TOPDOWN 1
unmapped_area  prototype  include/linux/mm.h  1500  extern unsigned long unmapped_area(struct vm_unmapped_area_info *info);
unmapped_area_topdown  prototype  include/linux/mm.h  1501  extern unsigned long unmapped_area_topdown(struct vm_unmapped_area_info *info);
vm_unmapped_area  function  include/linux/mm.h  1513  vm_unmapped_area(struct vm_unmapped_area_info *info)
truncate_inode_pages  prototype  include/linux/mm.h  1522  extern void truncate_inode_pages(struct address_space *,loff_t);
truncate_inode_pages_range  prototype  include/linux/mm.h  1524  extern void truncate_inode_pages_range(struct address_space *,loff_t lstart, loff_t lend);
filemap_fault  prototype  include/linux/mm.h  1527  extern int filemap_fault(struct vm_area_struct *,struct vm_fault *);
filemap_page_mkwrite  prototype  include/linux/mm.h  1528  extern int filemap_page_mkwrite(struct vm_area_struct *vma,struct vm_fault *vmf);
write_one_page  prototype  include/linux/mm.h  1531  int write_one_page(struct page *page,int wait);
task_dirty_inc  prototype  include/linux/mm.h  1532  void task_dirty_inc(struct task_struct *tsk);
VM_MAX_READAHEAD  macro  include/linux/mm.h  1535  #define VM_MAX_READAHEAD 128
VM_MIN_READAHEAD  macro  include/linux/mm.h  1536  #define VM_MIN_READAHEAD 16
force_page_cache_readahead  prototype  include/linux/mm.h  1539  int force_page_cache_readahead(struct address_space *mapping,struct file *filp,pgoff_t offset, unsigned long nr_to_read);
page_cache_sync_readahead  prototype  include/linux/mm.h  1545  void page_cache_sync_readahead(struct address_space *mapping,struct file_ra_state *ra,struct file *filp,pgoff_t offset,unsigned long size);
page_cache_async_readahead  prototype  include/linux/mm.h  1552  void page_cache_async_readahead(struct address_space *mapping,struct file_ra_state *ra,struct file *filp,struct page *pg,pgoff_t offset,unsigned long size);
max_sane_readahead  prototype  include/linux/mm.h  1554  unsigned long max_sane_readahead(unsigned long nr);
ra_submit  prototype  include/linux/mm.h  1557  unsigned long ra_submit(struct file_ra_state *ra,struct address_space *mapping,struct file *filp);
expand_stack  prototype  include/linux/mm.h  1560  extern int expand_stack(struct vm_area_struct *vma,unsigned long address);
expand_downwards  prototype  include/linux/mm.h  1564  extern int expand_downwards(struct vm_area_struct *vma,unsigned long address);
expand_upwards  macro  include/linux/mm.h  1568  #define expand_upwards(vma,address) do { } while (0)
find_vma  prototype  include/linux/mm.h  1572  extern struct vm_area_struct * find_vma(struct mm_struct * mm,unsigned long addr);
find_vma_prev  prototype  include/linux/mm.h  1574  extern struct vm_area_struct * find_vma_prev(struct mm_struct * mm,unsigned long addr,struct vm_area_struct **pprev);
find_vma_intersection  function  include/linux/mm.h  1578  static inline struct vm_area_struct * find_vma_intersection(struct mm_struct * mm,unsigned long start_addr,unsigned long end_addr)
vma_pages  function  include/linux/mm.h  1587  static inline unsigned long vma_pages(struct vm_area_struct *vma)
find_exact_vma  function  include/linux/mm.h  1594  static inline struct vm_area_struct *find_exact_vma(struct mm_struct *mm,unsigned long vm_start, unsigned long vm_end)
vm_get_page_prot  function  include/linux/mm.h  1607  static inline pgprot_t vm_get_page_prot(unsigned long vm_flags)
change_prot_numa  prototype  include/linux/mm.h  1615  unsigned long change_prot_numa(struct vm_area_struct *vma,unsigned long start, unsigned long end);
find_extend_vma  prototype  include/linux/mm.h  1618  struct vm_area_struct *find_extend_vma(struct mm_struct *,unsigned long addr);
remap_pfn_range  prototype  include/linux/mm.h  1620  int remap_pfn_range(struct vm_area_struct *,unsigned long addr,unsigned long pfn, unsigned long size, pgprot_t);
vm_insert_page  prototype  include/linux/mm.h  1621  int vm_insert_page(struct vm_area_struct *,unsigned long addr,struct page *);
vm_insert_pfn  prototype  include/linux/mm.h  1623  int vm_insert_pfn(struct vm_area_struct *vma,unsigned long addr,unsigned long pfn);
vm_insert_mixed  prototype  include/linux/mm.h  1625  int vm_insert_mixed(struct vm_area_struct *vma,unsigned long addr,unsigned long pfn);
vm_iomap_memory  prototype  include/linux/mm.h  1626  int vm_iomap_memory(struct vm_area_struct *vma,phys_addr_t start,unsigned long len);
follow_page  prototype  include/linux/mm.h  1630  struct page *follow_page(struct vm_area_struct *,unsigned long address,unsigned int foll_flags);
FOLL_WRITE  macro  include/linux/mm.h  1631  #define FOLL_WRITE 0x01
FOLL_TOUCH  macro  include/linux/mm.h  1632  #define FOLL_TOUCH 0x02
FOLL_GET  macro  include/linux/mm.h  1633  #define FOLL_GET 0x04
FOLL_DUMP  macro  include/linux/mm.h  1634  #define FOLL_DUMP 0x08
FOLL_FORCE  macro  include/linux/mm.h  1635  #define FOLL_FORCE 0x10
FOLL_NOWAIT  macro  include/linux/mm.h  1636  #define FOLL_NOWAIT 0x20
FOLL_MLOCK  macro  include/linux/mm.h  1638  #define FOLL_MLOCK 0x40
FOLL_SPLIT  macro  include/linux/mm.h  1639  #define FOLL_SPLIT 0x80
FOLL_HWPOISON  macro  include/linux/mm.h  1640  #define FOLL_HWPOISON 0x100
FOLL_NUMA  macro  include/linux/mm.h  1641  #define FOLL_NUMA 0x200
pte_fn_t  typedef  include/linux/mm.h  1643  typedef int (*pte_fn_t)(pte_t *pte,pgtable_t token,unsigned long addr,
apply_to_page_range  prototype  include/linux/mm.h  1646  extern int apply_to_page_range(struct mm_struct *mm,unsigned long address,unsigned long size, pte_fn_t fn, void *data);
vm_stat_account  function  include/linux/mm.h  1652  static inline void vm_stat_account(struct mm_struct *mm,unsigned long flags, struct file *file, long pages)
kernel_map_pages  function  include/linux/mm.h  1665  kernel_map_pages(struct page *page,int numpages,int enable) {}
kernel_page_present  function  include/linux/mm.h  1667  static inline bool kernel_page_present(struct page *page) { return true; }
get_gate_vma  prototype  include/linux/mm.h  1671  extern struct vm_area_struct *get_gate_vma(struct mm_struct *mm);
in_gate_area_no_mm  prototype  include/linux/mm.h  1676  int in_gate_area_no_mm(unsigned long addr);
in_gate_area  macro  include/linux/mm.h  1677  #define in_gate_area(mm,addr) ({(void)mm; in_gate_area_no_mm(addr);})
drop_caches_sysctl_handler  prototype  include/linux/mm.h  1681  int drop_caches_sysctl_handler(struct ctl_table *,int,void __user *, size_t *, loff_t *);
shrink_slab  prototype  include/linux/mm.h  1684  unsigned long shrink_slab(struct shrink_control *shrink,unsigned long nr_pages_scanned,unsigned long lru_pages);
randomize_va_space  macro  include/linux/mm.h  1687  #define randomize_va_space 0
arch_vma_name  prototype  include/linux/mm.h  1692  const char * arch_vma_name(struct vm_area_struct *vma);
print_vma_addr  prototype  include/linux/mm.h  1693  void print_vma_addr(char *prefix,unsigned long rip);
sparse_mem_maps_populate_node  prototype  include/linux/mm.h  1699  void sparse_mem_maps_populate_node(struct page **map_map,unsigned long pnum_begin,unsigned long pnum_end,unsigned long map_count,int nodeid);
sparse_mem_map_populate  prototype  include/linux/mm.h  1701  struct page *sparse_mem_map_populate(unsigned long pnum,int nid);
vmemmap_pgd_populate  prototype  include/linux/mm.h  1702  pgd_t *vmemmap_pgd_populate(unsigned long addr,int node);
vmemmap_pud_populate  prototype  include/linux/mm.h  1703  pud_t *vmemmap_pud_populate(pgd_t *pgd,unsigned long addr,int node);
vmemmap_pmd_populate  prototype  include/linux/mm.h  1704  pmd_t *vmemmap_pmd_populate(pud_t *pud,unsigned long addr,int node);
vmemmap_pte_populate  prototype  include/linux/mm.h  1705  pte_t *vmemmap_pte_populate(pmd_t *pmd,unsigned long addr,int node);
vmemmap_alloc_block  prototype  include/linux/mm.h  1706  void *vmemmap_alloc_block(unsigned long size,int node);
vmemmap_alloc_block_buf  prototype  include/linux/mm.h  1707  void *vmemmap_alloc_block_buf(unsigned long size,int node);
vmemmap_verify  prototype  include/linux/mm.h  1708  void vmemmap_verify(pte_t *,int,unsigned long,unsigned long);
vmemmap_populate_basepages  prototype  include/linux/mm.h  1710  int vmemmap_populate_basepages(struct page *start_page,unsigned long pages, int node);
vmemmap_populate  prototype  include/linux/mm.h  1711  int vmemmap_populate(struct page *start_page,unsigned long pages,int node);
vmemmap_populate_print_last  prototype  include/linux/mm.h  1712  void vmemmap_populate_print_last(void);
mf_flags  enum  include/linux/mm.h  1715  enum mf_flags {
MF_COUNT_INCREASED  enumerator  include/linux/mm.h  1716  MF_COUNT_INCREASED = 1 << 0,
MF_ACTION_REQUIRED  enumerator  include/linux/mm.h  1717  MF_ACTION_REQUIRED = 1 << 1,
MF_MUST_KILL  enumerator  include/linux/mm.h  1718  MF_MUST_KILL = 1 << 2,
memory_failure  prototype  include/linux/mm.h  1720  extern int memory_failure(unsigned long pfn,int trapno,int flags);
memory_failure_queue  prototype  include/linux/mm.h  1721  extern void memory_failure_queue(unsigned long pfn,int trapno,int flags);
unpoison_memory  prototype  include/linux/mm.h  1722  extern int unpoison_memory(unsigned long pfn);
shake_page  prototype  include/linux/mm.h  1725  extern void shake_page(struct page *p,int access);
soft_offline_page  prototype  include/linux/mm.h  1727  extern int soft_offline_page(struct page *page,int flags);
dump_page  prototype  include/linux/mm.h  1729  extern void dump_page(struct page *page);
clear_huge_page  prototype  include/linux/mm.h  1734  extern void clear_huge_page(struct page *page,unsigned long addr,unsigned int pages_per_huge_page);
copy_user_huge_page  prototype  include/linux/mm.h  1737  extern void copy_user_huge_page(struct page *dst,struct page *src,unsigned long addr, struct vm_area_struct *vma,unsigned int pages_per_huge_page);
debug_guardpage_minorder  function  include/linux/mm.h  1753  static inline unsigned int debug_guardpage_minorder(void) { return 0; }
page_is_guard  function  include/linux/mm.h  1754  static inline bool page_is_guard(struct page *page) { return false; }
__LINUX_CONSOLEMAP_H__  macro  include/linux/consolemap.h  7  #define __LINUX_CONSOLEMAP_H__
LAT1_MAP  macro  include/linux/consolemap.h  9  #define LAT1_MAP 0
GRAF_MAP  macro  include/linux/consolemap.h  10  #define GRAF_MAP 1
IBMPC_MAP  macro  include/linux/consolemap.h  11  #define IBMPC_MAP 2
USER_MAP  macro  include/linux/consolemap.h  12  #define USER_MAP 3
inverse_translate  macro  include/linux/consolemap.h  26  #define inverse_translate(conp,glyph,uni) ((uint16_t)glyph)
set_translate  macro  include/linux/consolemap.h  27  #define set_translate(m,vc) ((unsigned short *)NULL)
conv_uni_to_pc  macro  include/linux/consolemap.h  28  #define conv_uni_to_pc(conp,ucs) ((int) (ucs > 0xff ? -1: ucs))
conv_8bit_to_uni  macro  include/linux/consolemap.h  29  #define conv_8bit_to_uni(c) ((uint32_t)(c))
conv_uni_to_8bit  macro  include/linux/consolemap.h  30  #define conv_uni_to_8bit(c) ((int) ((c) & 0xff))
console_map_init  macro  include/linux/consolemap.h  31  #define console_map_init(c) do { ; } while (0)
_LINUX_NOTIFIER_H  macro  include/linux/notifier.h  11  #define _LINUX_NOTIFIER_H
notifier_block  struct  include/linux/notifier.h  50  struct notifier_block {
atomic_notifier_head  struct  include/linux/notifier.h  56  struct atomic_notifier_head {
blocking_notifier_head  struct  include/linux/notifier.h  61  struct blocking_notifier_head {
raw_notifier_head  struct  include/linux/notifier.h  66  struct raw_notifier_head {
srcu_notifier_head  struct  include/linux/notifier.h  70  struct srcu_notifier_head {
ATOMIC_INIT_NOTIFIER_HEAD  macro  include/linux/notifier.h  76  #define ATOMIC_INIT_NOTIFIER_HEAD(name) do { \
BLOCKING_INIT_NOTIFIER_HEAD  macro  include/linux/notifier.h  80  #define BLOCKING_INIT_NOTIFIER_HEAD(name) do { \
RAW_INIT_NOTIFIER_HEAD  macro  include/linux/notifier.h  84  #define RAW_INIT_NOTIFIER_HEAD(name) do { \
srcu_init_notifier_head  prototype  include/linux/notifier.h  89  extern void srcu_init_notifier_head(struct srcu_notifier_head *nh);
srcu_cleanup_notifier_head  macro  include/linux/notifier.h  90  #define srcu_cleanup_notifier_head(name) \
ATOMIC_NOTIFIER_INIT  macro  include/linux/notifier.h  93  #define ATOMIC_NOTIFIER_INIT(name) { \
BLOCKING_NOTIFIER_INIT  macro  include/linux/notifier.h  96  #define BLOCKING_NOTIFIER_INIT(name) { \
RAW_NOTIFIER_INIT  macro  include/linux/notifier.h  99  #define RAW_NOTIFIER_INIT(name) { \
ATOMIC_NOTIFIER_HEAD  macro  include/linux/notifier.h  103  #define ATOMIC_NOTIFIER_HEAD(name) \
BLOCKING_NOTIFIER_HEAD  macro  include/linux/notifier.h  106  #define BLOCKING_NOTIFIER_HEAD(name) \
RAW_NOTIFIER_HEAD  macro  include/linux/notifier.h  109  #define RAW_NOTIFIER_HEAD(name) \
atomic_notifier_chain_register  prototype  include/linux/notifier.h  116  extern int atomic_notifier_chain_register(struct atomic_notifier_head *nh,struct notifier_block *nb);
blocking_notifier_chain_register  prototype  include/linux/notifier.h  118  extern int blocking_notifier_chain_register(struct blocking_notifier_head *nh,struct notifier_block *nb);
raw_notifier_chain_register  prototype  include/linux/notifier.h  120  extern int raw_notifier_chain_register(struct raw_notifier_head *nh,struct notifier_block *nb);
srcu_notifier_chain_register  prototype  include/linux/notifier.h  122  extern int srcu_notifier_chain_register(struct srcu_notifier_head *nh,struct notifier_block *nb);
blocking_notifier_chain_cond_register  prototype  include/linux/notifier.h  124  extern int blocking_notifier_chain_cond_register(
atomic_notifier_chain_unregister  prototype  include/linux/notifier.h  129  extern int atomic_notifier_chain_unregister(struct atomic_notifier_head *nh,struct notifier_block *nb);
blocking_notifier_chain_unregister  prototype  include/linux/notifier.h  131  extern int blocking_notifier_chain_unregister(struct blocking_notifier_head *nh,struct notifier_block *nb);
raw_notifier_chain_unregister  prototype  include/linux/notifier.h  133  extern int raw_notifier_chain_unregister(struct raw_notifier_head *nh,struct notifier_block *nb);
srcu_notifier_chain_unregister  prototype  include/linux/notifier.h  135  extern int srcu_notifier_chain_unregister(struct srcu_notifier_head *nh,struct notifier_block *nb);
atomic_notifier_call_chain  prototype  include/linux/notifier.h  138  extern int atomic_notifier_call_chain(struct atomic_notifier_head *nh,unsigned long val, void *v);
__atomic_notifier_call_chain  prototype  include/linux/notifier.h  140  extern int __atomic_notifier_call_chain(struct atomic_notifier_head *nh,unsigned long val, void *v, int nr_to_call, int *nr_calls);
blocking_notifier_call_chain  prototype  include/linux/notifier.h  142  extern int blocking_notifier_call_chain(struct blocking_notifier_head *nh,unsigned long val, void *v);
__blocking_notifier_call_chain  prototype  include/linux/notifier.h  144  extern int __blocking_notifier_call_chain(struct blocking_notifier_head *nh,unsigned long val, void *v, int nr_to_call, int *nr_calls);
raw_notifier_call_chain  prototype  include/linux/notifier.h  146  extern int raw_notifier_call_chain(struct raw_notifier_head *nh,unsigned long val, void *v);
__raw_notifier_call_chain  prototype  include/linux/notifier.h  148  extern int __raw_notifier_call_chain(struct raw_notifier_head *nh,unsigned long val, void *v, int nr_to_call, int *nr_calls);
srcu_notifier_call_chain  prototype  include/linux/notifier.h  150  extern int srcu_notifier_call_chain(struct srcu_notifier_head *nh,unsigned long val, void *v);
__srcu_notifier_call_chain  prototype  include/linux/notifier.h  152  extern int __srcu_notifier_call_chain(struct srcu_notifier_head *nh,unsigned long val, void *v, int nr_to_call, int *nr_calls);
NOTIFY_DONE  macro  include/linux/notifier.h  154  #define NOTIFY_DONE 0x0000
NOTIFY_OK  macro  include/linux/notifier.h  155  #define NOTIFY_OK 0x0001
NOTIFY_STOP_MASK  macro  include/linux/notifier.h  156  #define NOTIFY_STOP_MASK 0x8000
NOTIFY_BAD  macro  include/linux/notifier.h  157  #define NOTIFY_BAD (NOTIFY_STOP_MASK|0x0002)
NOTIFY_STOP  macro  include/linux/notifier.h  162  #define NOTIFY_STOP (NOTIFY_OK|NOTIFY_STOP_MASK)
notifier_from_errno  function  include/linux/notifier.h  165  static inline int notifier_from_errno(int err)
notifier_to_errno  function  include/linux/notifier.h  174  static inline int notifier_to_errno(int ret)
NETLINK_URELEASE  macro  include/linux/notifier.h  198  #define NETLINK_URELEASE 0x0001
KBD_KEYCODE  macro  include/linux/notifier.h  203  #define KBD_KEYCODE 0x0001
KBD_UNBOUND_KEYCODE  macro  include/linux/notifier.h  204  #define KBD_UNBOUND_KEYCODE 0x0002
KBD_UNICODE  macro  include/linux/notifier.h  205  #define KBD_UNICODE 0x0003
KBD_KEYSYM  macro  include/linux/notifier.h  206  #define KBD_KEYSYM 0x0004
KBD_POST_KEYSYM  macro  include/linux/notifier.h  207  #define KBD_POST_KEYSYM 0x0005
_LINUX_TIOCL_H  macro  include/uapi/linux/tiocl.h  2  #define _LINUX_TIOCL_H
TIOCL_SETSEL  macro  include/uapi/linux/tiocl.h  4  #define TIOCL_SETSEL 2
TIOCL_SELCHAR  macro  include/uapi/linux/tiocl.h  5  #define TIOCL_SELCHAR 0
TIOCL_SELWORD  macro  include/uapi/linux/tiocl.h  6  #define TIOCL_SELWORD 1
TIOCL_SELLINE  macro  include/uapi/linux/tiocl.h  7  #define TIOCL_SELLINE 2
TIOCL_SELPOINTER  macro  include/uapi/linux/tiocl.h  8  #define TIOCL_SELPOINTER 3
TIOCL_SELCLEAR  macro  include/uapi/linux/tiocl.h  9  #define TIOCL_SELCLEAR 4
TIOCL_SELMOUSEREPORT  macro  include/uapi/linux/tiocl.h  10  #define TIOCL_SELMOUSEREPORT 16
TIOCL_SELBUTTONMASK  macro  include/uapi/linux/tiocl.h  11  #define TIOCL_SELBUTTONMASK 15
tiocl_selection  struct  include/uapi/linux/tiocl.h  13  struct tiocl_selection {
TIOCL_PASTESEL  macro  include/uapi/linux/tiocl.h  21  #define TIOCL_PASTESEL 3
TIOCL_UNBLANKSCREEN  macro  include/uapi/linux/tiocl.h  22  #define TIOCL_UNBLANKSCREEN 4
TIOCL_SELLOADLUT  macro  include/uapi/linux/tiocl.h  24  #define TIOCL_SELLOADLUT 5
TIOCL_GETSHIFTSTATE  macro  include/uapi/linux/tiocl.h  29  #define TIOCL_GETSHIFTSTATE 6
TIOCL_GETMOUSEREPORTING  macro  include/uapi/linux/tiocl.h  30  #define TIOCL_GETMOUSEREPORTING 7
TIOCL_SETVESABLANK  macro  include/uapi/linux/tiocl.h  31  #define TIOCL_SETVESABLANK 10
TIOCL_SETKMSGREDIRECT  macro  include/uapi/linux/tiocl.h  32  #define TIOCL_SETKMSGREDIRECT 11
TIOCL_GETFGCONSOLE  macro  include/uapi/linux/tiocl.h  33  #define TIOCL_GETFGCONSOLE 12
TIOCL_SCROLLCONSOLE  macro  include/uapi/linux/tiocl.h  34  #define TIOCL_SCROLLCONSOLE 13
TIOCL_BLANKSCREEN  macro  include/uapi/linux/tiocl.h  35  #define TIOCL_BLANKSCREEN 14
TIOCL_BLANKEDSCREEN  macro  include/uapi/linux/tiocl.h  36  #define TIOCL_BLANKEDSCREEN 15
TIOCL_GETKMSGREDIRECT  macro  include/uapi/linux/tiocl.h  37  #define TIOCL_GETKMSGREDIRECT 17
_LINUX_VT_BUFFER_H_  macro  include/linux/vt_buffer.h  14  #define _LINUX_VT_BUFFER_H_
scr_writew  macro  include/linux/vt_buffer.h  22  #define scr_writew(val,addr) (*(addr) = (val))
scr_readw  macro  include/linux/vt_buffer.h  23  #define scr_readw(addr) (*(addr))
scr_memcpyw  function  include/linux/vt_buffer.h  40  static inline void scr_memcpyw(u16 *d,const u16 *s,unsigned int count)
scr_memmovew  function  include/linux/vt_buffer.h  49  static inline void scr_memmovew(u16 *d,const u16 *s,unsigned int count)
VT_BUF_HAVE_MEMCPYW  macro  include/linux/vt_buffer.h  26  #define VT_BUF_HAVE_MEMCPYW
VT_BUF_HAVE_MEMMOVEW  macro  include/linux/vt_buffer.h  27  #define VT_BUF_HAVE_MEMMOVEW
scr_memsetw  function  include/linux/vt_buffer.h  31  static inline void scr_memsetw(u16 *s,u16 c,unsigned int count)
__LINUX_PREEMPT_H  macro  include/linux/preempt.h  2  #define __LINUX_PREEMPT_H
add_preempt_count  macro  include/linux/preempt.h  17  # define add_preempt_count(val) do { preempt_count() += (val); } while (0)
sub_preempt_count  macro  include/linux/preempt.h  18  # define sub_preempt_count(val) do { preempt_count() -= (val); } while (0)
inc_preempt_count  macro  include/linux/preempt.h  21  #define inc_preempt_count() add_preempt_count(1)
dec_preempt_count  macro  include/linux/preempt.h  22  #define dec_preempt_count() sub_preempt_count(1)
preempt_count  macro  include/linux/preempt.h  24  #define preempt_count() (current_thread_info()->preempt_count)
preempt_schedule  prototype  include/linux/preempt.h  28  asmlinkage void preempt_schedule(void);
preempt_check_resched  macro  include/linux/preempt.h  38  #define preempt_check_resched() do { } while (0)
preempt_disable  macro  include/linux/preempt.h  102  #define preempt_disable() barrier()
sched_preempt_enable_no_resched  macro  include/linux/preempt.h  103  #define sched_preempt_enable_no_resched() barrier()
preempt_enable_no_resched  macro  include/linux/preempt.h  104  #define preempt_enable_no_resched() barrier()
preempt_enable  macro  include/linux/preempt.h  105  #define preempt_enable() barrier()
add_preempt_count_notrace  macro  include/linux/preempt.h  67  #define add_preempt_count_notrace(val) \
sub_preempt_count_notrace  macro  include/linux/preempt.h  69  #define sub_preempt_count_notrace(val) \
inc_preempt_count_notrace  macro  include/linux/preempt.h  71  #define inc_preempt_count_notrace() add_preempt_count_notrace(1)
dec_preempt_count_notrace  macro  include/linux/preempt.h  72  #define dec_preempt_count_notrace() sub_preempt_count_notrace(1)
preempt_disable_notrace  macro  include/linux/preempt.h  107  #define preempt_disable_notrace() barrier()
preempt_enable_no_resched_notrace  macro  include/linux/preempt.h  108  #define preempt_enable_no_resched_notrace() barrier()
preempt_enable_notrace  macro  include/linux/preempt.h  109  #define preempt_enable_notrace() barrier()
preempt_ops  struct  include/linux/preempt.h  131  struct preempt_ops {
preempt_notifier  struct  include/linux/preempt.h  144  struct preempt_notifier {
preempt_notifier_register  prototype  include/linux/preempt.h  149  void preempt_notifier_register(struct preempt_notifier *notifier);
preempt_notifier_unregister  prototype  include/linux/preempt.h  150  void preempt_notifier_unregister(struct preempt_notifier *notifier);
preempt_notifier_init  function  include/linux/preempt.h  153  static inline void preempt_notifier_init(struct preempt_notifier *notifier,struct preempt_ops *ops)
_LINUX_TRACE_IRQFLAGS_H  macro  include/linux/irqflags.h  12  #define _LINUX_TRACE_IRQFLAGS_H
trace_softirqs_on  macro  include/linux/irqflags.h  34  # define trace_softirqs_on(ip) do { } while (0)
trace_softirqs_off  macro  include/linux/irqflags.h  35  # define trace_softirqs_off(ip) do { } while (0)
trace_hardirqs_on  macro  include/linux/irqflags.h  32  # define trace_hardirqs_on() do { } while (0)
trace_hardirqs_off  macro  include/linux/irqflags.h  33  # define trace_hardirqs_off() do { } while (0)
trace_hardirq_context  macro  include/linux/irqflags.h  36  # define trace_hardirq_context(p) 0
trace_softirq_context  macro  include/linux/irqflags.h  37  # define trace_softirq_context(p) 0
trace_hardirqs_enabled  macro  include/linux/irqflags.h  38  # define trace_hardirqs_enabled(p) 0
trace_softirqs_enabled  macro  include/linux/irqflags.h  39  # define trace_softirqs_enabled(p) 0
trace_hardirq_enter  macro  include/linux/irqflags.h  40  # define trace_hardirq_enter() do { } while (0)
trace_hardirq_exit  macro  include/linux/irqflags.h  41  # define trace_hardirq_exit() do { } while (0)
lockdep_softirq_enter  macro  include/linux/irqflags.h  42  # define lockdep_softirq_enter() do { } while (0)
lockdep_softirq_exit  macro  include/linux/irqflags.h  43  # define lockdep_softirq_exit() do { } while (0)
INIT_TRACE_IRQFLAGS  macro  include/linux/irqflags.h  44  # define INIT_TRACE_IRQFLAGS
stop_critical_timings  macro  include/linux/irqflags.h  52  # define stop_critical_timings() do { } while (0)
start_critical_timings  macro  include/linux/irqflags.h  53  # define start_critical_timings() do { } while (0)
raw_local_irq_disable  macro  include/linux/irqflags.h  59  #define raw_local_irq_disable() arch_local_irq_disable()
raw_local_irq_enable  macro  include/linux/irqflags.h  60  #define raw_local_irq_enable() arch_local_irq_enable()
raw_local_irq_save  macro  include/linux/irqflags.h  61  #define raw_local_irq_save(flags) \
raw_local_irq_restore  macro  include/linux/irqflags.h  66  #define raw_local_irq_restore(flags) \
raw_local_save_flags  macro  include/linux/irqflags.h  71  #define raw_local_save_flags(flags) \
raw_irqs_disabled_flags  macro  include/linux/irqflags.h  76  #define raw_irqs_disabled_flags(flags) \
raw_irqs_disabled  macro  include/linux/irqflags.h  81  #define raw_irqs_disabled() (arch_irqs_disabled())
raw_safe_halt  macro  include/linux/irqflags.h  82  #define raw_safe_halt() arch_safe_halt()
local_irq_enable  macro  include/linux/irqflags.h  136  #define local_irq_enable() do { raw_local_irq_enable(); } while (0)
local_irq_disable  macro  include/linux/irqflags.h  137  #define local_irq_disable() do { raw_local_irq_disable(); } while (0)
local_irq_save  macro  include/linux/irqflags.h  138  #define local_irq_save(flags) \
local_irq_restore  macro  include/linux/irqflags.h  142  #define local_irq_restore(flags) do { raw_local_irq_restore(flags); } while (0)
local_save_flags  macro  include/linux/irqflags.h  143  #define local_save_flags(flags) do { raw_local_save_flags(flags); } while (0)
irqs_disabled_flags  macro  include/linux/irqflags.h  145  #define irqs_disabled_flags(flags) (raw_irqs_disabled_flags(flags))
irqs_disabled  macro  include/linux/irqflags.h  144  #define irqs_disabled() (raw_irqs_disabled())
safe_halt  macro  include/linux/irqflags.h  146  #define safe_halt() do { raw_safe_halt(); } while (0)
_LINUX_THREAD_INFO_H  macro  include/linux/thread_info.h  8  #define _LINUX_THREAD_INFO_H
restart_block  struct  include/linux/thread_info.h  19  struct restart_block {
do_no_restart_syscall  prototype  include/linux/thread_info.h  51  extern long do_no_restart_syscall(struct restart_block *parm);
THREADINFO_GFP  macro  include/linux/thread_info.h  61  # define THREADINFO_GFP (GFP_KERNEL | __GFP_NOTRACK)
THREADINFO_GFP_ACCOUNTED  macro  include/linux/thread_info.h  64  #define THREADINFO_GFP_ACCOUNTED (THREADINFO_GFP | __GFP_KMEMCG)
set_ti_thread_flag  function  include/linux/thread_info.h  71  static inline void set_ti_thread_flag(struct thread_info *ti,int flag)
clear_ti_thread_flag  function  include/linux/thread_info.h  76  static inline void clear_ti_thread_flag(struct thread_info *ti,int flag)
test_and_set_ti_thread_flag  function  include/linux/thread_info.h  81  static inline int test_and_set_ti_thread_flag(struct thread_info *ti,int flag)
test_and_clear_ti_thread_flag  function  include/linux/thread_info.h  86  static inline int test_and_clear_ti_thread_flag(struct thread_info *ti,int flag)
test_ti_thread_flag  function  include/linux/thread_info.h  91  static inline int test_ti_thread_flag(struct thread_info *ti,int flag)
set_thread_flag  macro  include/linux/thread_info.h  96  #define set_thread_flag(flag) \
clear_thread_flag  macro  include/linux/thread_info.h  98  #define clear_thread_flag(flag) \
test_and_set_thread_flag  macro  include/linux/thread_info.h  100  #define test_and_set_thread_flag(flag) \
test_and_clear_thread_flag  macro  include/linux/thread_info.h  102  #define test_and_clear_thread_flag(flag) \
test_thread_flag  macro  include/linux/thread_info.h  104  #define test_thread_flag(flag) \
set_need_resched  macro  include/linux/thread_info.h  107  #define set_need_resched() set_thread_flag(TIF_NEED_RESCHED)
clear_need_resched  macro  include/linux/thread_info.h  108  #define clear_need_resched() clear_thread_flag(TIF_NEED_RESCHED)
HAVE_SET_RESTORE_SIGMASK  macro  include/linux/thread_info.h  115  #define HAVE_SET_RESTORE_SIGMASK 1
set_restore_sigmask  function  include/linux/thread_info.h  128  static inline void set_restore_sigmask(void)
clear_restore_sigmask  function  include/linux/thread_info.h  133  static inline void clear_restore_sigmask(void)
test_restore_sigmask  function  include/linux/thread_info.h  137  static inline bool test_restore_sigmask(void)
test_and_clear_restore_sigmask  function  include/linux/thread_info.h  141  static inline bool test_and_clear_restore_sigmask(void)
_LINUX_BH_H  macro  include/linux/bottom_half.h  2  #define _LINUX_BH_H
local_bh_disable  prototype  include/linux/bottom_half.h  4  extern void local_bh_disable(void);
_local_bh_enable  prototype  include/linux/bottom_half.h  5  extern void _local_bh_enable(void);
local_bh_enable  prototype  include/linux/bottom_half.h  6  extern void local_bh_enable(void);
local_bh_enable_ip  prototype  include/linux/bottom_half.h  7  extern void local_bh_enable_ip(unsigned long ip);
_ASM_X86_BARRIER_H  macro  arch/x86/include/asm/barrier.h  2  #define _ASM_X86_BARRIER_H
mb  macro  arch/x86/include/asm/barrier.h  22  #define mb() asm volatile("mfence":::"memory")
rmb  macro  arch/x86/include/asm/barrier.h  23  #define rmb() asm volatile("lfence":::"memory")
wmb  macro  arch/x86/include/asm/barrier.h  24  #define wmb() asm volatile("sfence" ::: "memory")
read_barrier_depends  macro  arch/x86/include/asm/barrier.h  79  #define read_barrier_depends() do { } while (0)
smp_mb  macro  arch/x86/include/asm/barrier.h  96  #define smp_mb() barrier()
smp_rmb  macro  arch/x86/include/asm/barrier.h  97  #define smp_rmb() barrier()
smp_wmb  macro  arch/x86/include/asm/barrier.h  98  #define smp_wmb() barrier()
smp_read_barrier_depends  macro  arch/x86/include/asm/barrier.h  99  #define smp_read_barrier_depends() do { } while (0)
set_mb  macro  arch/x86/include/asm/barrier.h  100  #define set_mb(var,value) do { var = value; barrier(); } while (0)
rdtsc_barrier  function  arch/x86/include/asm/barrier.h  110  static __always_inline void rdtsc_barrier(void)
__LINUX_SPINLOCK_TYPES_H  macro  include/linux/spinlock_types.h  2  #define __LINUX_SPINLOCK_TYPES_H
raw_spinlock  struct  include/linux/spinlock_types.h  20  typedef struct raw_spinlock {
raw_spinlock_t  typedef  include/linux/spinlock_types.h  32  } raw_spinlock_t;
SPINLOCK_MAGIC  macro  include/linux/spinlock_types.h  34  #define SPINLOCK_MAGIC 0xdead4ead
SPINLOCK_OWNER_INIT  macro  include/linux/spinlock_types.h  36  #define SPINLOCK_OWNER_INIT ((void *)-1L)
SPIN_DEP_MAP_INIT  macro  include/linux/spinlock_types.h  41  # define SPIN_DEP_MAP_INIT(lockname)
SPIN_DEBUG_INIT  macro  include/linux/spinlock_types.h  50  # define SPIN_DEBUG_INIT(lockname)
__RAW_SPIN_LOCK_INITIALIZER  macro  include/linux/spinlock_types.h  53  #define __RAW_SPIN_LOCK_INITIALIZER(lockname) \
__RAW_SPIN_LOCK_UNLOCKED  macro  include/linux/spinlock_types.h  59  #define __RAW_SPIN_LOCK_UNLOCKED(lockname) \
DEFINE_RAW_SPINLOCK  macro  include/linux/spinlock_types.h  62  #define DEFINE_RAW_SPINLOCK(x) raw_spinlock_t x = __RAW_SPIN_LOCK_UNLOCKED(x)
spinlock  struct  include/linux/spinlock_types.h  64  typedef struct spinlock {
LOCK_PADSIZE  macro  include/linux/spinlock_types.h  69  # define LOCK_PADSIZE (offsetof(struct raw_spinlock,dep_map))
spinlock_t  typedef  include/linux/spinlock_types.h  76  } spinlock_t;
__SPIN_LOCK_INITIALIZER  macro  include/linux/spinlock_types.h  78  #define __SPIN_LOCK_INITIALIZER(lockname) \
__SPIN_LOCK_UNLOCKED  macro  include/linux/spinlock_types.h  81  #define __SPIN_LOCK_UNLOCKED(lockname) \
DEFINE_SPINLOCK  macro  include/linux/spinlock_types.h  84  #define DEFINE_SPINLOCK(x) spinlock_t x = __SPIN_LOCK_UNLOCKED(x)
_ASM_X86_SPINLOCK_H  macro  arch/x86/include/asm/spinlock.h  2  #define _ASM_X86_SPINLOCK_H
LOCK_PTR_REG  macro  arch/x86/include/asm/spinlock.h  23  # define LOCK_PTR_REG "D"
UNLOCK_LOCK_PREFIX  macro  arch/x86/include/asm/spinlock.h  34  # define UNLOCK_LOCK_PREFIX
__ticket_spin_lock  function  arch/x86/include/asm/spinlock.h  50  static __always_inline void __ticket_spin_lock(arch_spinlock_t *lock)
__ticket_spin_trylock  function  arch/x86/include/asm/spinlock.h  65  static __always_inline int __ticket_spin_trylock(arch_spinlock_t *lock)
__ticket_spin_unlock  function  arch/x86/include/asm/spinlock.h  79  static __always_inline void __ticket_spin_unlock(arch_spinlock_t *lock)
__ticket_spin_is_locked  function  arch/x86/include/asm/spinlock.h  84  static inline int __ticket_spin_is_locked(arch_spinlock_t *lock)
__ticket_spin_is_contended  function  arch/x86/include/asm/spinlock.h  91  static inline int __ticket_spin_is_contended(arch_spinlock_t *lock)
arch_spin_is_locked  function  arch/x86/include/asm/paravirt.h  719  static inline int arch_spin_is_locked(struct arch_spinlock *lock)
arch_spin_is_contended  macro  arch/x86/include/asm/paravirt.h  728  #define arch_spin_is_contended arch_spin_is_contended
arch_spin_lock  function  arch/x86/include/asm/paravirt.h  730  static __always_inline void arch_spin_lock(struct arch_spinlock *lock)
arch_spin_trylock  function  arch/x86/include/asm/paravirt.h  741  static __always_inline int arch_spin_trylock(struct arch_spinlock *lock)
arch_spin_unlock  function  arch/x86/include/asm/paravirt.h  746  static __always_inline void arch_spin_unlock(struct arch_spinlock *lock)
arch_spin_lock_flags  function  arch/x86/include/asm/paravirt.h  736  static __always_inline void arch_spin_lock_flags(struct arch_spinlock *lock,unsigned long flags)
arch_spin_unlock_wait  macro  include/linux/spinlock_up.h  82  #define arch_spin_unlock_wait(lock) \
arch_read_can_lock  macro  include/linux/spinlock_up.h  79  #define arch_read_can_lock(lock) (((void)(lock),1))
arch_write_can_lock  macro  include/linux/spinlock_up.h  80  #define arch_write_can_lock(lock) (((void)(lock),1))
arch_read_lock  macro  include/linux/spinlock_up.h  61  #define arch_read_lock(lock) do { barrier(); (void)(lock); } while (0)
arch_write_lock  macro  include/linux/spinlock_up.h  62  #define arch_write_lock(lock) do { barrier(); (void)(lock); } while (0)
arch_read_trylock  macro  include/linux/spinlock_up.h  63  #define arch_read_trylock(lock) ({ barrier(); (void)(lock); 1; })
arch_write_trylock  macro  include/linux/spinlock_up.h  64  #define arch_write_trylock(lock) ({ barrier(); (void)(lock); 1; })
arch_read_unlock  macro  include/linux/spinlock_up.h  65  #define arch_read_unlock(lock) do { barrier(); (void)(lock); } while (0)
arch_write_unlock  macro  include/linux/spinlock_up.h  66  #define arch_write_unlock(lock) do { barrier(); (void)(lock); } while (0)
arch_read_lock_flags  macro  arch/x86/include/asm/spinlock.h  223  #define arch_read_lock_flags(lock,flags) arch_read_lock(lock)
arch_write_lock_flags  macro  arch/x86/include/asm/spinlock.h  224  #define arch_write_lock_flags(lock,flags) arch_write_lock(lock)
READ_LOCK_SIZE  macro  arch/x86/include/asm/spinlock.h  226  #undef READ_LOCK_SIZE
READ_LOCK_ATOMIC  macro  arch/x86/include/asm/spinlock.h  227  #undef READ_LOCK_ATOMIC
WRITE_LOCK_ADD  macro  arch/x86/include/asm/spinlock.h  228  #undef WRITE_LOCK_ADD
WRITE_LOCK_SUB  macro  arch/x86/include/asm/spinlock.h  229  #undef WRITE_LOCK_SUB
WRITE_LOCK_CMP  macro  arch/x86/include/asm/spinlock.h  230  #undef WRITE_LOCK_CMP
arch_spin_relax  macro  arch/x86/include/asm/spinlock.h  232  #define arch_spin_relax(lock) cpu_relax()
arch_read_relax  macro  arch/x86/include/asm/spinlock.h  233  #define arch_read_relax(lock) cpu_relax()
arch_write_relax  macro  arch/x86/include/asm/spinlock.h  234  #define arch_write_relax(lock) cpu_relax()
ARCH_HAS_SMP_MB_AFTER_LOCK  macro  arch/x86/include/asm/spinlock.h  238  #define ARCH_HAS_SMP_MB_AFTER_LOCK
__LINUX_SPINLOCK_UP_H  macro  include/linux/spinlock_up.h  2  #define __LINUX_SPINLOCK_UP_H
__LINUX_RWLOCK_H  macro  include/linux/rwlock.h  2  #define __LINUX_RWLOCK_H
__rwlock_init  prototype  include/linux/rwlock.h  19  extern void __rwlock_init(rwlock_t *lock,const char *name,struct lock_class_key *key);
rwlock_init  macro  include/linux/rwlock.h  27  # define rwlock_init(lock) \
do_raw_read_lock_flags  macro  include/linux/rwlock.h  42  # define do_raw_read_lock_flags(lock,flags) \
do_raw_read_trylock  macro  include/linux/rwlock.h  44  # define do_raw_read_trylock(rwlock) arch_read_trylock(&(rwlock)->raw_lock)
do_raw_write_lock_flags  macro  include/linux/rwlock.h  47  # define do_raw_write_lock_flags(lock,flags) \
do_raw_write_trylock  macro  include/linux/rwlock.h  49  # define do_raw_write_trylock(rwlock) arch_write_trylock(&(rwlock)->raw_lock)
do_raw_read_lock  macro  include/linux/rwlock.h  41  # define do_raw_read_lock(rwlock) do {__acquire(lock); arch_read_lock(&(rwlock)->raw_lock); } while (0)
do_raw_read_unlock  macro  include/linux/rwlock.h  45  # define do_raw_read_unlock(rwlock) do {arch_read_unlock(&(rwlock)->raw_lock); __release(lock); } while (0)
do_raw_write_lock  macro  include/linux/rwlock.h  46  # define do_raw_write_lock(rwlock) do {__acquire(lock); arch_write_lock(&(rwlock)->raw_lock); } while (0)
do_raw_write_unlock  macro  include/linux/rwlock.h  50  # define do_raw_write_unlock(rwlock) do {arch_write_unlock(&(rwlock)->raw_lock); __release(lock); } while (0)
read_can_lock  macro  include/linux/rwlock.h  53  #define read_can_lock(rwlock) arch_read_can_lock(&(rwlock)->raw_lock)
write_can_lock  macro  include/linux/rwlock.h  54  #define write_can_lock(rwlock) arch_write_can_lock(&(rwlock)->raw_lock)
read_trylock  macro  include/linux/rwlock.h  61  #define read_trylock(lock) __cond_lock(lock,_raw_read_trylock(lock))
write_trylock  macro  include/linux/rwlock.h  62  #define write_trylock(lock) __cond_lock(lock,_raw_write_trylock(lock))
write_lock  macro  include/linux/rwlock.h  64  #define write_lock(lock) _raw_write_lock(lock)
read_lock  macro  include/linux/rwlock.h  65  #define read_lock(lock) _raw_read_lock(lock)
read_lock_irqsave  macro  include/linux/rwlock.h  82  #define read_lock_irqsave(lock,flags) \
write_lock_irqsave  macro  include/linux/rwlock.h  87  #define write_lock_irqsave(lock,flags) \
read_lock_irq  macro  include/linux/rwlock.h  95  #define read_lock_irq(lock) _raw_read_lock_irq(lock)
read_lock_bh  macro  include/linux/rwlock.h  96  #define read_lock_bh(lock) _raw_read_lock_bh(lock)
write_lock_irq  macro  include/linux/rwlock.h  97  #define write_lock_irq(lock) _raw_write_lock_irq(lock)
write_lock_bh  macro  include/linux/rwlock.h  98  #define write_lock_bh(lock) _raw_write_lock_bh(lock)
read_unlock  macro  include/linux/rwlock.h  99  #define read_unlock(lock) _raw_read_unlock(lock)
write_unlock  macro  include/linux/rwlock.h  100  #define write_unlock(lock) _raw_write_unlock(lock)
read_unlock_irq  macro  include/linux/rwlock.h  101  #define read_unlock_irq(lock) _raw_read_unlock_irq(lock)
write_unlock_irq  macro  include/linux/rwlock.h  102  #define write_unlock_irq(lock) _raw_write_unlock_irq(lock)
read_unlock_irqrestore  macro  include/linux/rwlock.h  104  #define read_unlock_irqrestore(lock,flags) \
read_unlock_bh  macro  include/linux/rwlock.h  109  #define read_unlock_bh(lock) _raw_read_unlock_bh(lock)
write_unlock_irqrestore  macro  include/linux/rwlock.h  111  #define write_unlock_irqrestore(lock,flags) \
write_unlock_bh  macro  include/linux/rwlock.h  116  #define write_unlock_bh(lock) _raw_write_unlock_bh(lock)
write_trylock_irqsave  macro  include/linux/rwlock.h  118  #define write_trylock_irqsave(lock,flags) \
__LINUX_SPINLOCK_API_SMP_H  macro  include/linux/spinlock_api_smp.h  2  #define __LINUX_SPINLOCK_API_SMP_H
in_lock_functions  macro  include/linux/spinlock_api_up.h  17  #define in_lock_functions(ADDR) 0
assert_raw_spin_locked  macro  include/linux/spinlock_api_up.h  19  #define assert_raw_spin_locked(lock) do { (void)(lock); } while (0)
_raw_spin_trylock  macro  include/linux/spinlock_api_up.h  65  #define _raw_spin_trylock(lock) ({ __LOCK(lock); 1; })
_raw_spin_trylock_bh  macro  include/linux/spinlock_api_up.h  68  #define _raw_spin_trylock_bh(lock) ({ __LOCK_BH(lock); 1; })
_raw_spin_lock  macro  include/linux/spinlock_api_up.h  52  #define _raw_spin_lock(lock) __LOCK(lock)
_raw_spin_lock_bh  macro  include/linux/spinlock_api_up.h  56  #define _raw_spin_lock_bh(lock) __LOCK_BH(lock)
_raw_spin_lock_irq  macro  include/linux/spinlock_api_up.h  59  #define _raw_spin_lock_irq(lock) __LOCK_IRQ(lock)
_raw_spin_lock_irqsave  macro  include/linux/spinlock_api_up.h  62  #define _raw_spin_lock_irqsave(lock,flags) __LOCK_IRQSAVE(lock,flags)
_raw_spin_unlock  macro  include/linux/spinlock_api_up.h  69  #define _raw_spin_unlock(lock) __UNLOCK(lock)
_raw_spin_unlock_bh  macro  include/linux/spinlock_api_up.h  72  #define _raw_spin_unlock_bh(lock) __UNLOCK_BH(lock)
_raw_spin_unlock_irq  macro  include/linux/spinlock_api_up.h  75  #define _raw_spin_unlock_irq(lock) __UNLOCK_IRQ(lock)
_raw_spin_unlock_irqrestore  macro  include/linux/spinlock_api_up.h  78  #define _raw_spin_unlock_irqrestore(lock,flags) \
__raw_spin_trylock  function  include/linux/spinlock_api_smp.h  86  static inline int __raw_spin_trylock(raw_spinlock_t *lock)
__raw_spin_lock_irqsave  function  include/linux/spinlock_api_smp.h  104  static inline unsigned long __raw_spin_lock_irqsave(raw_spinlock_t *lock)
__raw_spin_lock_irq  function  include/linux/spinlock_api_smp.h  124  static inline void __raw_spin_lock_irq(raw_spinlock_t *lock)
__raw_spin_lock_bh  function  include/linux/spinlock_api_smp.h  132  static inline void __raw_spin_lock_bh(raw_spinlock_t *lock)
__raw_spin_lock  function  include/linux/spinlock_api_smp.h  140  static inline void __raw_spin_lock(raw_spinlock_t *lock)
__raw_spin_unlock  function  include/linux/spinlock_api_smp.h  149  static inline void __raw_spin_unlock(raw_spinlock_t *lock)
__raw_spin_unlock_irqrestore  function  include/linux/spinlock_api_smp.h  157  static inline void __raw_spin_unlock_irqrestore(raw_spinlock_t *lock,unsigned long flags)
__raw_spin_unlock_irq  function  include/linux/spinlock_api_smp.h  165  static inline void __raw_spin_unlock_irq(raw_spinlock_t *lock)
__raw_spin_unlock_bh  function  include/linux/spinlock_api_smp.h  173  static inline void __raw_spin_unlock_bh(raw_spinlock_t *lock)
__raw_spin_trylock_bh  function  include/linux/spinlock_api_smp.h  181  static inline int __raw_spin_trylock_bh(raw_spinlock_t *lock)
__LINUX_SPINLOCK_API_UP_H  macro  include/linux/spinlock_api_up.h  2  #define __LINUX_SPINLOCK_API_UP_H
__LOCK  macro  include/linux/spinlock_api_up.h  27  #define __LOCK(lock) \
__LOCK_BH  macro  include/linux/spinlock_api_up.h  30  #define __LOCK_BH(lock) \
__LOCK_IRQ  macro  include/linux/spinlock_api_up.h  33  #define __LOCK_IRQ(lock) \
__LOCK_IRQSAVE  macro  include/linux/spinlock_api_up.h  36  #define __LOCK_IRQSAVE(lock,flags) \
__UNLOCK  macro  include/linux/spinlock_api_up.h  39  #define __UNLOCK(lock) \
__UNLOCK_BH  macro  include/linux/spinlock_api_up.h  42  #define __UNLOCK_BH(lock) \
__UNLOCK_IRQ  macro  include/linux/spinlock_api_up.h  46  #define __UNLOCK_IRQ(lock) \
__UNLOCK_IRQRESTORE  macro  include/linux/spinlock_api_up.h  49  #define __UNLOCK_IRQRESTORE(lock,flags) \
_raw_spin_lock_nested  macro  include/linux/spinlock_api_up.h  53  #define _raw_spin_lock_nested(lock,subclass) __LOCK(lock)
_raw_read_lock  macro  include/linux/spinlock_api_up.h  54  #define _raw_read_lock(lock) __LOCK(lock)
_raw_write_lock  macro  include/linux/spinlock_api_up.h  55  #define _raw_write_lock(lock) __LOCK(lock)
_raw_read_lock_bh  macro  include/linux/spinlock_api_up.h  57  #define _raw_read_lock_bh(lock) __LOCK_BH(lock)
_raw_write_lock_bh  macro  include/linux/spinlock_api_up.h  58  #define _raw_write_lock_bh(lock) __LOCK_BH(lock)
_raw_read_lock_irq  macro  include/linux/spinlock_api_up.h  60  #define _raw_read_lock_irq(lock) __LOCK_IRQ(lock)
_raw_write_lock_irq  macro  include/linux/spinlock_api_up.h  61  #define _raw_write_lock_irq(lock) __LOCK_IRQ(lock)
_raw_read_lock_irqsave  macro  include/linux/spinlock_api_up.h  63  #define _raw_read_lock_irqsave(lock,flags) __LOCK_IRQSAVE(lock,flags)
_raw_write_lock_irqsave  macro  include/linux/spinlock_api_up.h  64  #define _raw_write_lock_irqsave(lock,flags) __LOCK_IRQSAVE(lock,flags)
_raw_read_trylock  macro  include/linux/spinlock_api_up.h  66  #define _raw_read_trylock(lock) ({ __LOCK(lock); 1; })
_raw_write_trylock  macro  include/linux/spinlock_api_up.h  67  #define _raw_write_trylock(lock) ({ __LOCK(lock); 1; })
_raw_read_unlock  macro  include/linux/spinlock_api_up.h  70  #define _raw_read_unlock(lock) __UNLOCK(lock)
_raw_write_unlock  macro  include/linux/spinlock_api_up.h  71  #define _raw_write_unlock(lock) __UNLOCK(lock)
_raw_write_unlock_bh  macro  include/linux/spinlock_api_up.h  73  #define _raw_write_unlock_bh(lock) __UNLOCK_BH(lock)
_raw_read_unlock_bh  macro  include/linux/spinlock_api_up.h  74  #define _raw_read_unlock_bh(lock) __UNLOCK_BH(lock)
_raw_read_unlock_irq  macro  include/linux/spinlock_api_up.h  76  #define _raw_read_unlock_irq(lock) __UNLOCK_IRQ(lock)
_raw_write_unlock_irq  macro  include/linux/spinlock_api_up.h  77  #define _raw_write_unlock_irq(lock) __UNLOCK_IRQ(lock)
_raw_read_unlock_irqrestore  macro  include/linux/spinlock_api_up.h  80  #define _raw_read_unlock_irqrestore(lock,flags) \
_raw_write_unlock_irqrestore  macro  include/linux/spinlock_api_up.h  82  #define _raw_write_unlock_irqrestore(lock,flags) \
_UAPI_SCREEN_INFO_H  macro  include/uapi/linux/screen_info.h  2  #define _UAPI_SCREEN_INFO_H
screen_info  struct  include/uapi/linux/screen_info.h  10  struct screen_info {
VIDEO_TYPE_MDA  macro  include/uapi/linux/screen_info.h  49  #define VIDEO_TYPE_MDA 0x10
VIDEO_TYPE_CGA  macro  include/uapi/linux/screen_info.h  50  #define VIDEO_TYPE_CGA 0x11
VIDEO_TYPE_EGAM  macro  include/uapi/linux/screen_info.h  51  #define VIDEO_TYPE_EGAM 0x20
VIDEO_TYPE_EGAC  macro  include/uapi/linux/screen_info.h  52  #define VIDEO_TYPE_EGAC 0x21
VIDEO_TYPE_VGAC  macro  include/uapi/linux/screen_info.h  53  #define VIDEO_TYPE_VGAC 0x22
VIDEO_TYPE_VLFB  macro  include/uapi/linux/screen_info.h  54  #define VIDEO_TYPE_VLFB 0x23
VIDEO_TYPE_PICA_S3  macro  include/uapi/linux/screen_info.h  56  #define VIDEO_TYPE_PICA_S3 0x30
VIDEO_TYPE_MIPS_G364  macro  include/uapi/linux/screen_info.h  57  #define VIDEO_TYPE_MIPS_G364 0x31
VIDEO_TYPE_SGI  macro  include/uapi/linux/screen_info.h  58  #define VIDEO_TYPE_SGI 0x33
VIDEO_TYPE_TGAC  macro  include/uapi/linux/screen_info.h  60  #define VIDEO_TYPE_TGAC 0x40
VIDEO_TYPE_SUN  macro  include/uapi/linux/screen_info.h  62  #define VIDEO_TYPE_SUN 0x50
VIDEO_TYPE_SUNPCI  macro  include/uapi/linux/screen_info.h  63  #define VIDEO_TYPE_SUNPCI 0x51
VIDEO_TYPE_PMAC  macro  include/uapi/linux/screen_info.h  65  #define VIDEO_TYPE_PMAC 0x60
VIDEO_TYPE_EFI  macro  include/uapi/linux/screen_info.h  67  #define VIDEO_TYPE_EFI 0x70
VIDEO_FLAGS_NOCURSOR  macro  include/uapi/linux/screen_info.h  69  #define VIDEO_FLAGS_NOCURSOR (1 << 0)
VIDEO_CAPABILITY_SKIP_QUIRKS  macro  include/uapi/linux/screen_info.h  71  #define VIDEO_CAPABILITY_SKIP_QUIRKS (1 << 0)
_ASM_X86_VGA_H  macro  arch/x86/include/asm/vga.h  8  #define _ASM_X86_VGA_H
VGA_MAP_MEM  macro  arch/x86/include/asm/vga.h  15  #define VGA_MAP_MEM(x,s) (unsigned long)phys_to_virt(x)
vga_readb  macro  arch/x86/include/asm/vga.h  17  #define vga_readb(x) (*(x))
vga_writeb  macro  arch/x86/include/asm/vga.h  18  #define vga_writeb(x,y) (*(y) = (x))
__ARCH_HAS_VGA_DEFAULT_DEVICE  macro  arch/x86/include/asm/vga.h  21  #define __ARCH_HAS_VGA_DEFAULT_DEVICE
vga_default_device  prototype  arch/x86/include/asm/vga.h  22  extern struct pci_dev *vga_default_device(void);
vga_set_default_device  prototype  arch/x86/include/asm/vga.h  23  extern void vga_set_default_device(struct pci_dev *pdev);
_ASM_X86_PAGE_H  macro  arch/x86/include/asm/page.h  2  #define _ASM_X86_PAGE_H
clear_user_page  function  arch/x86/include/asm/page.h  21  static inline void clear_user_page(void *page,unsigned long vaddr,struct page *pg)
copy_user_page  function  arch/x86/include/asm/page.h  27  static inline void copy_user_page(void *to,void *from,unsigned long vaddr,struct page *topage)
__alloc_zeroed_user_highpage  macro  arch/x86/include/asm/page.h  32  #define __alloc_zeroed_user_highpage(movableflags,vma,vaddr) \
__HAVE_ARCH_ALLOC_ZEROED_USER_HIGHPAGE  macro  arch/x86/include/asm/page.h  34  #define __HAVE_ARCH_ALLOC_ZEROED_USER_HIGHPAGE
__pa  macro  arch/x86/include/asm/page.h  36  #define __pa(x) __phys_addr((unsigned long)(x))
__pa_nodebug  macro  arch/x86/include/asm/page.h  37  #define __pa_nodebug(x) __phys_addr_nodebug((unsigned long)(x))
__pa_symbol  macro  arch/x86/include/asm/page.h  47  #define __pa_symbol(x) __pa(__phys_reloc_hide((unsigned long)(x)))
__va  macro  arch/x86/include/asm/page.h  49  #define __va(x) ((void *)((unsigned long)(x)+PAGE_OFFSET))
__boot_va  macro  arch/x86/include/asm/page.h  51  #define __boot_va(x) __va(x)
__boot_pa  macro  arch/x86/include/asm/page.h  52  #define __boot_pa(x) __pa(x)
virt_to_page  macro  arch/x86/include/asm/page.h  58  #define virt_to_page(kaddr) pfn_to_page(__pa(kaddr) >> PAGE_SHIFT)
pfn_to_kaddr  macro  arch/x86/include/asm/page.h  59  #define pfn_to_kaddr(pfn) __va((pfn) << PAGE_SHIFT)
__virt_addr_valid  prototype  arch/x86/include/asm/page.h  60  extern bool __virt_addr_valid(unsigned long kaddr);
virt_addr_valid  macro  arch/x86/include/asm/page.h  61  #define virt_addr_valid(kaddr) __virt_addr_valid((unsigned long) (kaddr))
__HAVE_ARCH_GATE_AREA  macro  arch/x86/include/asm/page.h  68  #define __HAVE_ARCH_GATE_AREA 1
__GENERIC_IO_H  macro  include/asm-generic/iomap.h  2  #define __GENERIC_IO_H
ioread8  prototype  include/asm-generic/iomap.h  28  extern unsigned int ioread8(void __iomem *);
ioread16  prototype  include/asm-generic/iomap.h  29  extern unsigned int ioread16(void __iomem *);
ioread16be  prototype  include/asm-generic/iomap.h  30  extern unsigned int ioread16be(void __iomem *);
ioread32  prototype  include/asm-generic/iomap.h  31  extern unsigned int ioread32(void __iomem *);
ioread32be  prototype  include/asm-generic/iomap.h  32  extern unsigned int ioread32be(void __iomem *);
iowrite8  prototype  include/asm-generic/iomap.h  34  extern void iowrite8(u8,void __iomem *);
iowrite16  prototype  include/asm-generic/iomap.h  35  extern void iowrite16(u16,void __iomem *);
iowrite16be  prototype  include/asm-generic/iomap.h  36  extern void iowrite16be(u16,void __iomem *);
iowrite32  prototype  include/asm-generic/iomap.h  37  extern void iowrite32(u32,void __iomem *);
iowrite32be  prototype  include/asm-generic/iomap.h  38  extern void iowrite32be(u32,void __iomem *);
ioread8_rep  prototype  include/asm-generic/iomap.h  51  extern void ioread8_rep(void __iomem *port,void *buf,unsigned long count);
ioread16_rep  prototype  include/asm-generic/iomap.h  52  extern void ioread16_rep(void __iomem *port,void *buf,unsigned long count);
ioread32_rep  prototype  include/asm-generic/iomap.h  53  extern void ioread32_rep(void __iomem *port,void *buf,unsigned long count);
iowrite8_rep  prototype  include/asm-generic/iomap.h  55  extern void iowrite8_rep(void __iomem *port,const void *buf,unsigned long count);
iowrite16_rep  prototype  include/asm-generic/iomap.h  56  extern void iowrite16_rep(void __iomem *port,const void *buf,unsigned long count);
iowrite32_rep  prototype  include/asm-generic/iomap.h  57  extern void iowrite32_rep(void __iomem *port,const void *buf,unsigned long count);
ioport_map  prototype  include/asm-generic/iomap.h  61  extern void __iomem *ioport_map(unsigned long port,unsigned int nr);
ioport_unmap  prototype  include/asm-generic/iomap.h  62  extern void ioport_unmap(void __iomem *);
pci_iounmap  function  include/asm-generic/iomap.h  75  static inline void pci_iounmap(struct pci_dev *dev,void __iomem *addr)
_LINUX_VMALLOC_H  macro  include/linux/vmalloc.h  2  #define _LINUX_VMALLOC_H
VM_IOREMAP  macro  include/linux/vmalloc.h  11  #define VM_IOREMAP 0x00000001
VM_ALLOC  macro  include/linux/vmalloc.h  12  #define VM_ALLOC 0x00000002
VM_MAP  macro  include/linux/vmalloc.h  13  #define VM_MAP 0x00000004
VM_USERMAP  macro  include/linux/vmalloc.h  14  #define VM_USERMAP 0x00000008
VM_VPAGES  macro  include/linux/vmalloc.h  15  #define VM_VPAGES 0x00000010
VM_UNLIST  macro  include/linux/vmalloc.h  16  #define VM_UNLIST 0x00000020
IOREMAP_MAX_ORDER  macro  include/linux/vmalloc.h  24  #define IOREMAP_MAX_ORDER (7 + PAGE_SHIFT)
vm_struct  struct  include/linux/vmalloc.h  27  struct vm_struct {
vm_unmap_ram  prototype  include/linux/vmalloc.h  41  extern void vm_unmap_ram(const void *mem,unsigned int count);
vm_map_ram  prototype  include/linux/vmalloc.h  43  extern void *vm_map_ram(struct page **pages,unsigned int count,int node, pgprot_t prot);
vm_unmap_aliases  prototype  include/linux/vmalloc.h  44  extern void vm_unmap_aliases(void);
vmalloc_init  function  include/linux/vmalloc.h  49  static inline void vmalloc_init(void)
vmalloc  prototype  include/linux/vmalloc.h  54  extern void *vmalloc(unsigned long size);
vzalloc  prototype  include/linux/vmalloc.h  55  extern void *vzalloc(unsigned long size);
vmalloc_user  prototype  include/linux/vmalloc.h  56  extern void *vmalloc_user(unsigned long size);
vmalloc_node  prototype  include/linux/vmalloc.h  57  extern void *vmalloc_node(unsigned long size,int node);
vzalloc_node  prototype  include/linux/vmalloc.h  58  extern void *vzalloc_node(unsigned long size,int node);
vmalloc_exec  prototype  include/linux/vmalloc.h  59  extern void *vmalloc_exec(unsigned long size);
vmalloc_32  prototype  include/linux/vmalloc.h  60  extern void *vmalloc_32(unsigned long size);
vmalloc_32_user  prototype  include/linux/vmalloc.h  61  extern void *vmalloc_32_user(unsigned long size);
__vmalloc  prototype  include/linux/vmalloc.h  62  extern void *__vmalloc(unsigned long size,gfp_t gfp_mask,pgprot_t prot);
__vmalloc_node_range  prototype  include/linux/vmalloc.h  65  extern void *__vmalloc_node_range(unsigned long size,unsigned long align,unsigned long start, unsigned long end, gfp_t gfp_mask,pgprot_t prot, int node, const void *caller);
vfree  prototype  include/linux/vmalloc.h  66  extern void vfree(const void *addr);
vmap  prototype  include/linux/vmalloc.h  69  extern void *vmap(struct page **pages,unsigned int count,unsigned long flags, pgprot_t prot);
vunmap  prototype  include/linux/vmalloc.h  70  extern void vunmap(const void *addr);
remap_vmalloc_range  prototype  include/linux/vmalloc.h  73  extern int remap_vmalloc_range(struct vm_area_struct *vma,void *addr,unsigned long pgoff);
vmalloc_sync_all  prototype  include/linux/vmalloc.h  74  void vmalloc_sync_all(void);
get_vm_area_size  function  include/linux/vmalloc.h  80  static inline size_t get_vm_area_size(const struct vm_struct *area)
get_vm_area  prototype  include/linux/vmalloc.h  86  extern struct vm_struct *get_vm_area(unsigned long size,unsigned long flags);
get_vm_area_caller  prototype  include/linux/vmalloc.h  88  extern struct vm_struct *get_vm_area_caller(unsigned long size,unsigned long flags, const void *caller);
__get_vm_area  prototype  include/linux/vmalloc.h  90  extern struct vm_struct *__get_vm_area(unsigned long size,unsigned long flags,unsigned long start, unsigned long end);
__get_vm_area_caller  prototype  include/linux/vmalloc.h  94  extern struct vm_struct *__get_vm_area_caller(unsigned long size,unsigned long flags,unsigned long start, unsigned long end,const void *caller);
remove_vm_area  prototype  include/linux/vmalloc.h  95  extern struct vm_struct *remove_vm_area(const void *addr);
find_vm_area  prototype  include/linux/vmalloc.h  96  extern struct vm_struct *find_vm_area(const void *addr);
map_vm_area  prototype  include/linux/vmalloc.h  99  extern int map_vm_area(struct vm_struct *area,pgprot_t prot,struct page ***pages);
map_kernel_range_noflush  function  include/linux/vmalloc.h  108  map_kernel_range_noflush(unsigned long start,unsigned long size,pgprot_t prot, struct page **pages)
unmap_kernel_range_noflush  function  include/linux/vmalloc.h  113  unmap_kernel_range_noflush(unsigned long addr,unsigned long size)
unmap_kernel_range  function  include/linux/vmalloc.h  117  unmap_kernel_range(unsigned long addr,unsigned long size)
alloc_vm_area  prototype  include/linux/vmalloc.h  123  extern struct vm_struct *alloc_vm_area(size_t size,pte_t **ptes);
free_vm_area  prototype  include/linux/vmalloc.h  124  extern void free_vm_area(struct vm_struct *area);
vread  prototype  include/linux/vmalloc.h  127  extern long vread(char *buf,char *addr,unsigned long count);
vwrite  prototype  include/linux/vmalloc.h  128  extern long vwrite(char *buf,char *addr,unsigned long count);
vm_area_add_early  prototype  include/linux/vmalloc.h  135  extern __init void vm_area_add_early(struct vm_struct *vm);
vm_area_register_early  prototype  include/linux/vmalloc.h  136  extern __init void vm_area_register_early(struct vm_struct *vm,size_t align);
pcpu_get_vm_areas  function  include/linux/vmalloc.h  149  pcpu_get_vm_areas(const unsigned long *offsets,const size_t *sizes, int nr_vms,size_t align)
pcpu_free_vm_areas  function  include/linux/vmalloc.h  155  pcpu_free_vm_areas(struct vm_struct **vms,int nr_vms)
_ASM_X86_PARAVIRT_H  macro  arch/x86/include/asm/paravirt.h  2  #define _ASM_X86_PARAVIRT_H
paravirt_enabled  function  arch/x86/include/asm/paravirt.h  17  static inline int paravirt_enabled(void)
load_sp0  function  arch/x86/include/asm/paravirt.h  23  static inline void load_sp0(struct tss_struct *tss,struct thread_struct *thread)
__cpuid  function  arch/x86/include/asm/paravirt.h  30  static inline void __cpuid(unsigned int *eax,unsigned int *ebx,unsigned int *ecx, unsigned int *edx)
paravirt_get_debugreg  function  arch/x86/include/asm/paravirt.h  38  static inline unsigned long paravirt_get_debugreg(int reg)
get_debugreg  macro  arch/x86/include/asm/paravirt.h  42  #define get_debugreg(var,reg) var = paravirt_get_debugreg(reg)
set_debugreg  function  arch/x86/include/asm/paravirt.h  43  static inline void set_debugreg(unsigned long val,int reg)
clts  function  arch/x86/include/asm/paravirt.h  48  static inline void clts(void)
read_cr0  function  arch/x86/include/asm/paravirt.h  53  static inline unsigned long read_cr0(void)
write_cr0  function  arch/x86/include/asm/paravirt.h  58  static inline void write_cr0(unsigned long x)
read_cr2  function  arch/x86/include/asm/paravirt.h  63  static inline unsigned long read_cr2(void)
write_cr2  function  arch/x86/include/asm/paravirt.h  68  static inline void write_cr2(unsigned long x)
read_cr3  function  arch/x86/include/asm/paravirt.h  73  static inline unsigned long read_cr3(void)
write_cr3  function  arch/x86/include/asm/paravirt.h  78  static inline void write_cr3(unsigned long x)
read_cr4  function  arch/x86/include/asm/paravirt.h  83  static inline unsigned long read_cr4(void)
read_cr4_safe  function  arch/x86/include/asm/paravirt.h  87  static inline unsigned long read_cr4_safe(void)
write_cr4  function  arch/x86/include/asm/paravirt.h  92  static inline void write_cr4(unsigned long x)
read_cr8  function  arch/x86/include/asm/paravirt.h  98  static inline unsigned long read_cr8(void)
write_cr8  function  arch/x86/include/asm/paravirt.h  103  static inline void write_cr8(unsigned long x)
arch_safe_halt  function  arch/x86/include/asm/paravirt.h  109  static inline void arch_safe_halt(void)
halt  function  arch/x86/include/asm/paravirt.h  114  static inline void halt(void)
wbinvd  function  arch/x86/include/asm/paravirt.h  119  static inline void wbinvd(void)
get_kernel_rpl  macro  arch/x86/include/asm/paravirt.h  124  #define get_kernel_rpl() (pv_info.kernel_rpl)
paravirt_read_msr  function  arch/x86/include/asm/paravirt.h  126  static inline u64 paravirt_read_msr(unsigned msr,int *err)
paravirt_write_msr  function  arch/x86/include/asm/paravirt.h  131  static inline int paravirt_write_msr(unsigned msr,unsigned low,unsigned high)
rdmsr  macro  arch/x86/include/asm/paravirt.h  137  #define rdmsr(msr,val1,val2) \
wrmsr  macro  arch/x86/include/asm/paravirt.h  145  #define wrmsr(msr,val1,val2) \
rdmsrl  macro  arch/x86/include/asm/paravirt.h  150  #define rdmsrl(msr,val) \
wrmsrl  macro  arch/x86/include/asm/paravirt.h  156  #define wrmsrl(msr,val) wrmsr(msr,(u32)((u64)(val)),((u64)(val))>>32)
wrmsr_safe  macro  arch/x86/include/asm/paravirt.h  157  #define wrmsr_safe(msr,a,b) paravirt_write_msr(msr,a,b)
rdmsr_safe  macro  arch/x86/include/asm/paravirt.h  160  #define rdmsr_safe(msr,a,b) \
rdmsrl_safe  function  arch/x86/include/asm/paravirt.h  169  static inline int rdmsrl_safe(unsigned msr,unsigned long long *p)
paravirt_read_tsc  function  arch/x86/include/asm/paravirt.h  177  static inline u64 paravirt_read_tsc(void)
rdtscl  macro  arch/x86/include/asm/paravirt.h  182  #define rdtscl(low) \
rdtscll  macro  arch/x86/include/asm/paravirt.h  188  #define rdtscll(val) (val = paravirt_read_tsc())
paravirt_sched_clock  function  arch/x86/include/asm/paravirt.h  190  static inline unsigned long long paravirt_sched_clock(void)
paravirt_steal_clock  function  arch/x86/include/asm/paravirt.h  199  static inline u64 paravirt_steal_clock(int cpu)
paravirt_read_pmc  function  arch/x86/include/asm/paravirt.h  204  static inline unsigned long long paravirt_read_pmc(int counter)
rdpmc  macro  arch/x86/include/asm/paravirt.h  209  #define rdpmc(counter,low,high) \
rdpmcl  macro  arch/x86/include/asm/paravirt.h  216  #define rdpmcl(counter,val) ((val) = paravirt_read_pmc(counter))
paravirt_rdtscp  function  arch/x86/include/asm/paravirt.h  218  static inline unsigned long long paravirt_rdtscp(unsigned int *aux)
rdtscp  macro  arch/x86/include/asm/paravirt.h  223  #define rdtscp(low,high,aux) \
rdtscpll  macro  arch/x86/include/asm/paravirt.h  232  #define rdtscpll(val,aux) \
paravirt_alloc_ldt  function  arch/x86/include/asm/paravirt.h  239  static inline void paravirt_alloc_ldt(struct desc_struct *ldt,unsigned entries)
paravirt_free_ldt  function  arch/x86/include/asm/paravirt.h  244  static inline void paravirt_free_ldt(struct desc_struct *ldt,unsigned entries)
load_TR_desc  function  arch/x86/include/asm/paravirt.h  249  static inline void load_TR_desc(void)
load_gdt  function  arch/x86/include/asm/paravirt.h  253  static inline void load_gdt(const struct desc_ptr *dtr)
load_idt  function  arch/x86/include/asm/paravirt.h  257  static inline void load_idt(const struct desc_ptr *dtr)
set_ldt  function  arch/x86/include/asm/paravirt.h  261  static inline void set_ldt(const void *addr,unsigned entries)
store_gdt  function  arch/x86/include/asm/paravirt.h  265  static inline void store_gdt(struct desc_ptr *dtr)
store_idt  function  arch/x86/include/asm/paravirt.h  269  static inline void store_idt(struct desc_ptr *dtr)
paravirt_store_tr  function  arch/x86/include/asm/paravirt.h  273  static inline unsigned long paravirt_store_tr(void)
store_tr  macro  arch/x86/include/asm/paravirt.h  277  #define store_tr(tr) ((tr) = paravirt_store_tr())
load_TLS  function  arch/x86/include/asm/paravirt.h  278  static inline void load_TLS(struct thread_struct *t,unsigned cpu)
load_gs_index  function  arch/x86/include/asm/paravirt.h  284  static inline void load_gs_index(unsigned int gs)
write_ldt_entry  function  arch/x86/include/asm/paravirt.h  291  static inline void write_ldt_entry(struct desc_struct *dt,int entry,const void *desc)
write_gdt_entry  function  arch/x86/include/asm/paravirt.h  297  static inline void write_gdt_entry(struct desc_struct *dt,int entry,void *desc, int type)
write_idt_entry  function  arch/x86/include/asm/paravirt.h  302  static inline void write_idt_entry(gate_desc *dt,int entry,const gate_desc *g)
set_iopl_mask  function  arch/x86/include/asm/paravirt.h  306  static inline void set_iopl_mask(unsigned mask)
startup_ipi_hook  function  arch/x86/include/asm/paravirt.h  324  static inline void startup_ipi_hook(int phys_apicid,unsigned long start_eip,unsigned long start_esp)
paravirt_activate_mm  function  arch/x86/include/asm/paravirt.h  332  static inline void paravirt_activate_mm(struct mm_struct *prev,struct mm_struct *next)
arch_dup_mmap  function  arch/x86/include/asm/paravirt.h  338  static inline void arch_dup_mmap(struct mm_struct *oldmm,struct mm_struct *mm)
arch_exit_mmap  function  arch/x86/include/asm/paravirt.h  343  static inline void arch_exit_mmap(struct mm_struct *mm)
__flush_tlb  function  arch/x86/include/asm/paravirt.h  348  static inline void __flush_tlb(void)
__flush_tlb_global  function  arch/x86/include/asm/paravirt.h  352  static inline void __flush_tlb_global(void)
__flush_tlb_single  function  arch/x86/include/asm/paravirt.h  356  static inline void __flush_tlb_single(unsigned long addr)
flush_tlb_others  function  arch/x86/include/asm/paravirt.h  364  static inline void flush_tlb_others(const struct cpumask *cpumask,struct mm_struct *mm,unsigned long start,unsigned long end)
paravirt_pgd_alloc  function  arch/x86/include/asm/paravirt.h  369  static inline int paravirt_pgd_alloc(struct mm_struct *mm)
paravirt_pgd_free  function  arch/x86/include/asm/paravirt.h  374  static inline void paravirt_pgd_free(struct mm_struct *mm,pgd_t *pgd)
paravirt_alloc_pte  function  arch/x86/include/asm/paravirt.h  379  static inline void paravirt_alloc_pte(struct mm_struct *mm,unsigned long pfn)
paravirt_release_pte  function  arch/x86/include/asm/paravirt.h  383  static inline void paravirt_release_pte(unsigned long pfn)
paravirt_alloc_pmd  function  arch/x86/include/asm/paravirt.h  388  static inline void paravirt_alloc_pmd(struct mm_struct *mm,unsigned long pfn)
paravirt_release_pmd  function  arch/x86/include/asm/paravirt.h  393  static inline void paravirt_release_pmd(unsigned long pfn)
paravirt_alloc_pud  function  arch/x86/include/asm/paravirt.h  398  static inline void paravirt_alloc_pud(struct mm_struct *mm,unsigned long pfn)
paravirt_release_pud  function  arch/x86/include/asm/paravirt.h  402  static inline void paravirt_release_pud(unsigned long pfn)
pte_update  function  arch/x86/include/asm/paravirt.h  408  static inline void pte_update(struct mm_struct *mm,unsigned long addr,pte_t *ptep)
pmd_update  function  arch/x86/include/asm/paravirt.h  413  static inline void pmd_update(struct mm_struct *mm,unsigned long addr,pmd_t *pmdp)
pte_update_defer  function  arch/x86/include/asm/paravirt.h  419  static inline void pte_update_defer(struct mm_struct *mm,unsigned long addr,pte_t *ptep)
pmd_update_defer  function  arch/x86/include/asm/paravirt.h  425  static inline void pmd_update_defer(struct mm_struct *mm,unsigned long addr,pmd_t *pmdp)
__pte  function  arch/x86/include/asm/paravirt.h  430  static inline pte_t __pte(pteval_t val)
pte_val  function  arch/x86/include/asm/paravirt.h  446  static inline pteval_t pte_val(pte_t pte)
__pgd  function  arch/x86/include/asm/paravirt.h  460  static inline pgd_t __pgd(pgdval_t val)
pgd_val  function  arch/x86/include/asm/paravirt.h  474  static inline pgdval_t pgd_val(pgd_t pgd)
__HAVE_ARCH_PTEP_MODIFY_PROT_TRANSACTION  macro  arch/x86/include/asm/paravirt.h  488  #define __HAVE_ARCH_PTEP_MODIFY_PROT_TRANSACTION
ptep_modify_prot_start  function  arch/x86/include/asm/paravirt.h  490  static inline pte_t ptep_modify_prot_start(struct mm_struct *mm,unsigned long addr,pte_t *ptep)
ptep_modify_prot_commit  function  arch/x86/include/asm/paravirt.h  501  static inline void ptep_modify_prot_commit(struct mm_struct *mm,unsigned long addr,pte_t *ptep, pte_t pte)
set_pte  function  arch/x86/include/asm/paravirt.h  511  static inline void set_pte(pte_t *ptep,pte_t pte)
set_pte_at  function  arch/x86/include/asm/paravirt.h  522  static inline void set_pte_at(struct mm_struct *mm,unsigned long addr,pte_t *ptep, pte_t pte)
set_pmd_at  function  arch/x86/include/asm/paravirt.h  532  static inline void set_pmd_at(struct mm_struct *mm,unsigned long addr,pmd_t *pmdp, pmd_t pmd)
set_pmd  function  arch/x86/include/asm/paravirt.h  542  static inline void set_pmd(pmd_t *pmdp,pmd_t pmd)
__pmd  function  arch/x86/include/asm/paravirt.h  553  static inline pmd_t __pmd(pmdval_t val)
pmd_val  function  arch/x86/include/asm/paravirt.h  567  static inline pmdval_t pmd_val(pmd_t pmd)
set_pud  function  arch/x86/include/asm/paravirt.h  581  static inline void set_pud(pud_t *pudp,pud_t pud)
__pud  function  arch/x86/include/asm/paravirt.h  593  static inline pud_t __pud(pudval_t val)
pud_val  function  arch/x86/include/asm/paravirt.h  607  static inline pudval_t pud_val(pud_t pud)
set_pgd  function  arch/x86/include/asm/paravirt.h  621  static inline void set_pgd(pgd_t *pgdp,pgd_t pgd)
pgd_clear  function  arch/x86/include/asm/paravirt.h  633  static inline void pgd_clear(pgd_t *pgdp)
pud_clear  function  arch/x86/include/asm/paravirt.h  638  static inline void pud_clear(pud_t *pudp)
set_pte_atomic  function  arch/x86/include/asm/paravirt.h  667  static inline void set_pte_atomic(pte_t *ptep,pte_t pte)
pte_clear  function  arch/x86/include/asm/paravirt.h  673  static inline void pte_clear(struct mm_struct *mm,unsigned long addr,pte_t *ptep)
pmd_clear  function  arch/x86/include/asm/paravirt.h  678  static inline void pmd_clear(pmd_t *pmdp)
__HAVE_ARCH_START_CONTEXT_SWITCH  macro  arch/x86/include/asm/paravirt.h  684  #define __HAVE_ARCH_START_CONTEXT_SWITCH
arch_start_context_switch  function  arch/x86/include/asm/paravirt.h  685  static inline void arch_start_context_switch(struct task_struct *prev)
arch_end_context_switch  function  arch/x86/include/asm/paravirt.h  690  static inline void arch_end_context_switch(struct task_struct *next)
__HAVE_ARCH_ENTER_LAZY_MMU_MODE  macro  arch/x86/include/asm/paravirt.h  695  #define __HAVE_ARCH_ENTER_LAZY_MMU_MODE
arch_enter_lazy_mmu_mode  function  arch/x86/include/asm/paravirt.h  696  static inline void arch_enter_lazy_mmu_mode(void)
arch_leave_lazy_mmu_mode  function  arch/x86/include/asm/paravirt.h  701  static inline void arch_leave_lazy_mmu_mode(void)
arch_flush_lazy_mmu_mode  function  arch/x86/include/asm/paravirt.h  706  static inline void arch_flush_lazy_mmu_mode(void)
__set_fixmap  function  arch/x86/include/asm/paravirt.h  711  static inline void __set_fixmap(unsigned
PV_SAVE_REGS  macro  arch/x86/include/asm/paravirt.h  920  #define PV_SAVE_REGS(set) \
PV_RESTORE_REGS  macro  arch/x86/include/asm/paravirt.h  925  #define PV_RESTORE_REGS(set) \
PV_SAVE_ALL_CALLER_REGS  macro  arch/x86/include/asm/paravirt.h  766  #define PV_SAVE_ALL_CALLER_REGS \
PV_RESTORE_ALL_CALLER_REGS  macro  arch/x86/include/asm/paravirt.h  775  #define PV_RESTORE_ALL_CALLER_REGS \
PV_FLAGS_ARG  macro  arch/x86/include/asm/paravirt.h  791  #define PV_FLAGS_ARG "D"
PV_EXTRA_CLOBBERS  macro  arch/x86/include/asm/paravirt.h  789  #define PV_EXTRA_CLOBBERS EXTRA_CLOBBERS,"rcx" ,"rdx","rsi"
PV_VEXTRA_CLOBBERS  macro  arch/x86/include/asm/paravirt.h  790  #define PV_VEXTRA_CLOBBERS EXTRA_CLOBBERS,"rdi","rcx" ,"rdx","rsi"
PV_CALLEE_SAVE_REGS_THUNK  macro  arch/x86/include/asm/paravirt.h  806  #define PV_CALLEE_SAVE_REGS_THUNK(func) \
PV_CALLEE_SAVE  macro  arch/x86/include/asm/paravirt.h  819  #define PV_CALLEE_SAVE(func) \
__PV_IS_CALLEE_SAVE  macro  arch/x86/include/asm/paravirt.h  823  #define __PV_IS_CALLEE_SAVE(func) \
arch_local_save_flags  function  arch/x86/include/asm/paravirt.h  826  static inline notrace unsigned long arch_local_save_flags(void)
arch_local_irq_restore  function  arch/x86/include/asm/paravirt.h  831  static inline notrace void arch_local_irq_restore(unsigned long f)
arch_local_irq_disable  function  arch/x86/include/asm/paravirt.h  836  static inline notrace void arch_local_irq_disable(void)
arch_local_irq_enable  function  arch/x86/include/asm/paravirt.h  841  static inline notrace void arch_local_irq_enable(void)
arch_local_irq_save  function  arch/x86/include/asm/paravirt.h  846  static inline notrace unsigned long arch_local_irq_save(void)
PARAVIRT_CALL  macro  arch/x86/include/asm/paravirt.h  857  #undef PARAVIRT_CALL
__PVOP_CALL  macro  arch/x86/include/asm/paravirt.h  858  #undef __PVOP_CALL
__PVOP_VCALL  macro  arch/x86/include/asm/paravirt.h  859  #undef __PVOP_VCALL
PVOP_VCALL0  macro  arch/x86/include/asm/paravirt.h  860  #undef PVOP_VCALL0
PVOP_CALL0  macro  arch/x86/include/asm/paravirt.h  861  #undef PVOP_CALL0
PVOP_VCALL1  macro  arch/x86/include/asm/paravirt.h  862  #undef PVOP_VCALL1
PVOP_CALL1  macro  arch/x86/include/asm/paravirt.h  863  #undef PVOP_CALL1
PVOP_VCALL2  macro  arch/x86/include/asm/paravirt.h  864  #undef PVOP_VCALL2
PVOP_CALL2  macro  arch/x86/include/asm/paravirt.h  865  #undef PVOP_CALL2
PVOP_VCALL3  macro  arch/x86/include/asm/paravirt.h  866  #undef PVOP_VCALL3
PVOP_CALL3  macro  arch/x86/include/asm/paravirt.h  867  #undef PVOP_CALL3
PVOP_VCALL4  macro  arch/x86/include/asm/paravirt.h  868  #undef PVOP_VCALL4
PVOP_CALL4  macro  arch/x86/include/asm/paravirt.h  869  #undef PVOP_CALL4
default_banner  macro  arch/x86/include/asm/paravirt.h  1012  # define default_banner x86_init_noop
_PVSITE  macro  arch/x86/include/asm/paravirt.h  875  #define _PVSITE(ptype,clobbers,ops,word,algn) \
COND_PUSH  macro  arch/x86/include/asm/paravirt.h  888  #define COND_PUSH(set,mask,reg) \
COND_POP  macro  arch/x86/include/asm/paravirt.h  890  #define COND_POP(set,mask,reg) \
PARA_PATCH  macro  arch/x86/include/asm/paravirt.h  931  #define PARA_PATCH(struct,off) ((PARAVIRT_PATCH_##struct + (off)) / 4)
PARA_SITE  macro  arch/x86/include/asm/paravirt.h  932  #define PARA_SITE(ptype,clobbers,ops) _PVSITE(ptype,clobbers,ops,.long,4)
PARA_INDIRECT  macro  arch/x86/include/asm/paravirt.h  933  #define PARA_INDIRECT(addr) *%cs:addr
INTERRUPT_RETURN  macro  arch/x86/include/asm/paravirt.h  936  #define INTERRUPT_RETURN \
DISABLE_INTERRUPTS  macro  arch/x86/include/asm/paravirt.h  940  #define DISABLE_INTERRUPTS(clobbers) \
ENABLE_INTERRUPTS  macro  arch/x86/include/asm/paravirt.h  946  #define ENABLE_INTERRUPTS(clobbers) \
USERGS_SYSRET32  macro  arch/x86/include/asm/paravirt.h  952  #define USERGS_SYSRET32 \
GET_CR0_INTO_EAX  macro  arch/x86/include/asm/paravirt.h  958  #define GET_CR0_INTO_EAX \
ENABLE_INTERRUPTS_SYSEXIT  macro  arch/x86/include/asm/paravirt.h  963  #define ENABLE_INTERRUPTS_SYSEXIT \
SWAPGS_UNSAFE_STACK  macro  arch/x86/include/asm/paravirt.h  976  #define SWAPGS_UNSAFE_STACK \
SWAPGS  macro  arch/x86/include/asm/paravirt.h  986  #define SWAPGS \
GET_CR2_INTO_RAX  macro  arch/x86/include/asm/paravirt.h  991  #define GET_CR2_INTO_RAX \
PARAVIRT_ADJUST_EXCEPTION_FRAME  macro  arch/x86/include/asm/paravirt.h  994  #define PARAVIRT_ADJUST_EXCEPTION_FRAME \
USERGS_SYSRET64  macro  arch/x86/include/asm/paravirt.h  999  #define USERGS_SYSRET64 \
ENABLE_INTERRUPTS_SYSEXIT32  macro  arch/x86/include/asm/paravirt.h  1004  #define ENABLE_INTERRUPTS_SYSEXIT32 \
_XEN_XEN_H  macro  include/xen/xen.h  2  #define _XEN_XEN_H
xen_domain_type  macro  include/xen/xen.h  13  #define xen_domain_type XEN_NATIVE
XEN_NATIVE  enumerator  include/xen/xen.h  5  XEN_NATIVE,
XEN_PV_DOMAIN  enumerator  include/xen/xen.h  6  XEN_PV_DOMAIN,
XEN_HVM_DOMAIN  enumerator  include/xen/xen.h  7  XEN_HVM_DOMAIN,
xen_domain  macro  include/xen/xen.h  16  #define xen_domain() (xen_domain_type != XEN_NATIVE)
xen_pv_domain  macro  include/xen/xen.h  17  #define xen_pv_domain() (xen_domain() && \
xen_hvm_domain  macro  include/xen/xen.h  19  #define xen_hvm_domain() (xen_domain() && \
xen_initial_domain  macro  include/xen/xen.h  29  #define xen_initial_domain() (0)
