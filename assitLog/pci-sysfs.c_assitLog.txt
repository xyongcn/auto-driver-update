filename to process: pci-sysfs.c
more info about this log description to read assitlog_description.txt


===== A  level =====
total count: 0


===== B  level =====
total count: 4

device 	( diff_type: Mod type: struct file: include/linux/device.h )
	-- struct device { struct device *parent; struct device_private *p; struct kobject kobj; const char *init_name; const struct device_type *type; struct mutex mutex; struct bus_type *bus; struct device_driver *driver; void *platform_data; struct dev_pm_info power; struct dev_pm_domain *pm_domain; int numa_node; u64 *dma_mask; u64 coherent_dma_mask; struct device_dma_parameters *dma_parms; struct list_head dma_pools; struct dma_coherent_mem *dma_mem; struct cma *cma_area; struct dev_archdata archdata; struct device_node *of_node; dev_t devt; u32 id; spinlock_t devres_lock; struct list_head devres_head; struct klist_node knode_class; const struct attribute_group **groups; void (*release)(struct device *dev); };
	++ struct device { struct device *parent; struct device_private *p; struct kobject kobj; const char *init_name; const struct device_type *type; struct mutex mutex; struct bus_type *bus; struct device_driver *driver; void *platform_data; struct dev_pm_info power; struct dev_pm_domain *pm_domain; int numa_node; u64 *dma_mask; u64 coherent_dma_mask; struct device_dma_parameters *dma_parms; struct list_head dma_pools; struct dma_coherent_mem *dma_mem; struct cma *cma_area; struct dev_archdata archdata; struct device_node *of_node; struct acpi_dev_node acpi_node; dev_t devt; u32 id; spinlock_t devres_lock; struct list_head devres_head; struct klist_node knode_class; const struct attribute_group **groups; void (*release)(struct device *dev); struct iommu_group *iommu_group; };

  vendor_show:
    drivers/pci/pci-sysfs.c:46
  device_show:
    drivers/pci/pci-sysfs.c:47
  subsystem_vendor_show:
    drivers/pci/pci-sysfs.c:48
  subsystem_device_show:
    drivers/pci/pci-sysfs.c:49
  class_show:
    drivers/pci/pci-sysfs.c:50
  irq_show:
    drivers/pci/pci-sysfs.c:51
  broken_parity_status_show:
    drivers/pci/pci-sysfs.c:53
  broken_parity_status_store:
    drivers/pci/pci-sysfs.c:61
  local_cpus_show:
    drivers/pci/pci-sysfs.c:76
  local_cpulist_show:
    drivers/pci/pci-sysfs.c:95
  pci_bus_show_cpuaffinity:
    drivers/pci/pci-sysfs.c:116
  pci_bus_show_cpumaskaffinity:
    drivers/pci/pci-sysfs.c:133
  pci_bus_show_cpulistaffinity:
    drivers/pci/pci-sysfs.c:140
  resource_show:
    drivers/pci/pci-sysfs.c:149
  modalias_show:
    drivers/pci/pci-sysfs.c:173
  is_enabled_store:
    drivers/pci/pci-sysfs.c:184
  is_enabled_show:
    drivers/pci/pci-sysfs.c:210
  dma_mask_bits_show:
    drivers/pci/pci-sysfs.c:228
  consistent_dma_mask_bits_show:
    drivers/pci/pci-sysfs.c:236
  msi_bus_show:
    drivers/pci/pci-sysfs.c:243
  msi_bus_store:
    drivers/pci/pci-sysfs.c:255
  dev_rescan_store:
    drivers/pci/pci-sysfs.c:312
  remove_callback:
    drivers/pci/pci-sysfs.c:329
  remove_store:
    drivers/pci/pci-sysfs.c:339
  dev_bus_rescan_store:
    drivers/pci/pci-sysfs.c:359
  boot_vga_show:
    drivers/pci/pci-sysfs.c:418
  reset_store:
    drivers/pci/pci-sysfs.c:1120

pci_dev 	( diff_type: Mod type: struct file: include/linux/pci.h )
	-- struct pci_dev { struct list_head bus_list; struct pci_bus *bus; struct pci_bus *subordinate; void *sysdata; struct proc_dir_entry *procent; struct pci_slot *slot; unsigned int devfn; unsigned short vendor; unsigned short device; unsigned short subsystem_vendor; unsigned short subsystem_device; u8 revision; u8 hdr_type; u8 pcie_cap; u8 pcie_type:4; u8 pcie_mpss:3; u8 rom_base_reg; u8 pin; struct pci_driver *driver; u64 dma_mask; struct device_dma_parameters dma_parms; pci_power_t current_state; int pm_cap; unsigned int pme_support:5; unsigned int pme_interrupt:1; unsigned int pme_poll:1; unsigned int d1_support:1; unsigned int d2_support:1; unsigned int no_d1d2:1; unsigned int mmio_always_on:1; unsigned int wakeup_prepared:1; unsigned int d3_delay; struct pcie_link_state *link_state; pci_channel_state_t error_state; struct device dev; int cfg_size; unsigned int irq; struct resource resource[DEVICE_COUNT_RESOURCE]; unsigned int transparent:1; unsigned int multifunction:1; unsigned int is_added:1; unsigned int is_busmaster:1; unsigned int no_msi:1; unsigned int block_cfg_access:1; unsigned int broken_parity_status:1; unsigned int irq_reroute_variant:2; unsigned int msi_enabled:1; unsigned int msix_enabled:1; unsigned int ari_enabled:1; unsigned int is_managed:1; unsigned int is_pcie:1; unsigned int needs_freset:1; unsigned int state_saved:1; unsigned int is_physfn:1; unsigned int is_virtfn:1; unsigned int reset_fn:1; unsigned int is_hotplug_bridge:1; unsigned int __aer_firmware_first_valid:1; unsigned int __aer_firmware_first:1; pci_dev_flags_t dev_flags; atomic_t enable_cnt; u32 saved_config_space[16]; struct hlist_head saved_cap_space; struct bin_attribute *rom_attr; int rom_attr_enabled; struct bin_attribute *res_attr[DEVICE_COUNT_RESOURCE]; struct bin_attribute *res_attr_wc[DEVICE_COUNT_RESOURCE]; struct list_head msi_list; struct kset *msi_kset; struct pci_vpd *vpd; struct pci_sriov *sriov; struct pci_dev *physfn; }; struct pci_ats *ats; };
	++ struct pci_dev { struct list_head bus_list; struct pci_bus *bus; struct pci_bus *subordinate; void *sysdata; struct proc_dir_entry *procent; struct pci_slot *slot; unsigned int devfn; unsigned short vendor; unsigned short device; unsigned short subsystem_vendor; unsigned short subsystem_device; u8 revision; u8 hdr_type; u8 pcie_cap; u8 pcie_mpss:3; u8 rom_base_reg; u8 pin; u16 pcie_flags_reg; struct pci_driver *driver; u64 dma_mask; struct device_dma_parameters dma_parms; pci_power_t current_state; int pm_cap; unsigned int pme_support:5; unsigned int pme_interrupt:1; unsigned int pme_poll:1; unsigned int d1_support:1; unsigned int d2_support:1; unsigned int no_d1d2:1; unsigned int no_d3cold:1; unsigned int d3cold_allowed:1; unsigned int mmio_always_on:1; unsigned int wakeup_prepared:1; unsigned int runtime_d3cold:1; unsigned int d3_delay; unsigned int d3cold_delay; struct pcie_link_state *link_state; pci_channel_state_t error_state; struct device dev; int cfg_size; unsigned int irq; struct resource resource[DEVICE_COUNT_RESOURCE]; unsigned int transparent:1; unsigned int multifunction:1; unsigned int is_added:1; unsigned int is_busmaster:1; unsigned int no_msi:1; unsigned int block_cfg_access:1; unsigned int broken_parity_status:1; unsigned int irq_reroute_variant:2; unsigned int msi_enabled:1; unsigned int msix_enabled:1; unsigned int ari_enabled:1; unsigned int is_managed:1; unsigned int is_pcie:1; unsigned int needs_freset:1; unsigned int state_saved:1; unsigned int is_physfn:1; unsigned int is_virtfn:1; unsigned int reset_fn:1; unsigned int is_hotplug_bridge:1; unsigned int __aer_firmware_first_valid:1; unsigned int __aer_firmware_first:1; unsigned int broken_intx_masking:1; unsigned int io_window_1k:1; pci_dev_flags_t dev_flags; atomic_t enable_cnt; u32 saved_config_space[16]; struct hlist_head saved_cap_space; struct bin_attribute *rom_attr; int rom_attr_enabled; struct bin_attribute *res_attr[DEVICE_COUNT_RESOURCE]; struct bin_attribute *res_attr_wc[DEVICE_COUNT_RESOURCE]; struct list_head msi_list; struct kset *msi_kset; struct pci_vpd *vpd; struct pci_sriov *sriov; struct pci_dev *physfn; }; struct pci_ats *ats; phys_addr_t rom; size_t romlen; };

  pci_mmap_fits:
    drivers/pci/pci-sysfs.c:780
  pci_remove_resource_files:
    drivers/pci/pci-sysfs.c:936
  pci_create_attr:
    drivers/pci/pci-sysfs.c:957
  pci_create_resource_files:
    drivers/pci/pci-sysfs.c:999
  pcibios_add_platform_entries:
    drivers/pci/pci-sysfs.c:1115
  pci_create_capabilities_sysfs:
    drivers/pci/pci-sysfs.c:1143
  pci_create_sysfs_dev_files:
    drivers/pci/pci-sysfs.c:1189
  pci_remove_capabilities_sysfs:
    drivers/pci/pci-sysfs.c:1275
  pci_remove_sysfs_dev_files:
    drivers/pci/pci-sysfs.c:1295

vm_area_struct 	( diff_type: Mod type: struct file: include/linux/mm_types.h )
	-- struct vm_area_struct { struct mm_struct * vm_mm; unsigned long vm_start; unsigned long vm_end; struct vm_area_struct *vm_next, *vm_prev; pgprot_t vm_page_prot; unsigned long vm_flags; struct rb_node vm_rb; struct list_head list; void *parent; struct vm_area_struct *head; } vm_set; struct raw_prio_tree_node prio_tree_node; } shared; struct list_head anon_vma_chain; struct anon_vma *anon_vma; const struct vm_operations_struct *vm_ops; unsigned long vm_pgoff; struct file * vm_file; void * vm_private_data; struct vm_region *vm_region; struct mempolicy *vm_policy; };
	++ struct vm_area_struct { unsigned long vm_start; unsigned long vm_end; struct vm_area_struct *vm_next, *vm_prev; struct rb_node vm_rb; unsigned long rb_subtree_gap; struct mm_struct *vm_mm; pgprot_t vm_page_prot; unsigned long vm_flags; struct rb_node rb; unsigned long rb_subtree_last; } linear; struct list_head nonlinear; } shared; struct list_head anon_vma_chain; struct anon_vma *anon_vma; const struct vm_operations_struct *vm_ops; unsigned long vm_pgoff; struct file * vm_file; void * vm_private_data; struct vm_region *vm_region; struct mempolicy *vm_policy; };

  pci_mmap_fits:
    drivers/pci/pci-sysfs.c:780
  pci_mmap_resource:
    drivers/pci/pci-sysfs.c:809
  pci_mmap_resource_uc:
    drivers/pci/pci-sysfs.c:851
  pci_mmap_resource_wc:
    drivers/pci/pci-sysfs.c:859

pci_bus 	( diff_type: Mod type: struct file: include/linux/pci.h )
	-- struct pci_bus { struct list_head node; struct pci_bus *parent; struct list_head children; struct list_head devices; struct pci_dev *self; struct list_head slots; struct resource *resource[PCI_BRIDGE_RESOURCE_NUM]; struct list_head resources; struct pci_ops *ops; void *sysdata; struct proc_dir_entry *procdir; unsigned char number; unsigned char primary; unsigned char secondary; unsigned char subordinate; unsigned char max_bus_speed; unsigned char cur_bus_speed; char name[48]; unsigned short bridge_ctl; pci_bus_flags_t bus_flags; struct device *bridge; struct device dev; struct bin_attribute *legacy_io; struct bin_attribute *legacy_mem; unsigned int is_added:1; };
	++ struct pci_bus { struct list_head node; struct pci_bus *parent; struct list_head children; struct list_head devices; struct pci_dev *self; struct list_head slots; struct resource *resource[PCI_BRIDGE_RESOURCE_NUM]; struct list_head resources; struct resource busn_res; struct pci_ops *ops; void *sysdata; struct proc_dir_entry *procdir; unsigned char number; unsigned char primary; unsigned char max_bus_speed; unsigned char cur_bus_speed; char name[48]; unsigned short bridge_ctl; pci_bus_flags_t bus_flags; struct device *bridge; struct device dev; struct bin_attribute *legacy_io; struct bin_attribute *legacy_mem; unsigned int is_added:1; };

	pci-sysfs.c: 292:	struct pci_bus *b = NULL;
	pci-sysfs.c: 363:	struct pci_bus *bus = to_pci_bus(dev);
	pci-sysfs.c: 614:        struct pci_bus *bus = to_pci_bus(container_of(kobj,
	pci-sysfs.c: 642:        struct pci_bus *bus = to_pci_bus(container_of(kobj,
	pci-sysfs.c: 668:        struct pci_bus *bus = to_pci_bus(container_of(kobj,
	pci-sysfs.c: 691:        struct pci_bus *bus = to_pci_bus(container_of(kobj,
	pci-sysfs.c: 706:pci_adjust_legacy_attr(struct pci_bus *b, enum pci_mmap_state mmap_type)
	pci-sysfs.c: 722:void pci_create_legacy_files(struct pci_bus *b)
	pci-sysfs.c: 768:void pci_remove_legacy_files(struct pci_bus *b)


===== C  level =====
total count: 0
