filename to process: ttyprintk.c
more info about this log description to read assitlog_description.txt


===== A  level =====
total count: 2

alloc_tty_driver   ( diff_type: Mod type: macro-->function file: include/linux/tty_driver.h )
  -- #define alloc_tty_driver(lines) __alloc_tty_driver(lines,THIS_MODULE)
  ++ static inline struct tty_driver *alloc_tty_driver(unsigned int lines)

  ttyprintk_init:
    drivers/char/ttyprintk.c:183:2

__alloc_tty_driver   ( diff_type: Del type: prototype file: include/linux/tty_driver.h )
  -- extern struct tty_driver *__alloc_tty_driver(int lines,struct module *owner);

  ttyprintk_init:
    drivers/char/ttyprintk.c:183:21


===== B  level =====
total count: 2

tty_struct   ( diff_type: Mod type: struct file: include/linux/tty.h )
  -- struct tty_struct { int magic; struct kref kref; struct device *dev; struct tty_driver *driver; const struct tty_operations *ops; int index; struct mutex ldisc_mutex; struct tty_ldisc *ldisc; struct mutex termios_mutex; spinlock_t ctrl_lock; struct ktermios *termios, *termios_locked; struct termiox *termiox; char name[64]; struct pid *pgrp; struct pid *session; unsigned long flags; int count; struct winsize winsize; unsigned char stopped:1, hw_stopped:1, flow_stopped:1, packet:1; unsigned char low_latency:1, warned:1; unsigned char ctrl_status; unsigned int receive_room; struct tty_struct *link; struct fasync_struct *fasync; struct tty_bufhead buf; int alt_speed; wait_queue_head_t write_wait; wait_queue_head_t read_wait; struct work_struct hangup_work; void *disc_data; void *driver_data; struct list_head tty_files; #define N_TTY_BUF_SIZE 4096 unsigned int column; unsigned char lnext:1, erasing:1, raw:1, real_raw:1, icanon:1; unsigned char closing:1; unsigned char echo_overrun:1; unsigned short minimum_to_wake; unsigned long overrun_time; int num_overrun; unsigned long process_char_map[256/(8*sizeof(unsigned long))]; char *read_buf; int read_head; int read_tail; int read_cnt; unsigned long read_flags[N_TTY_BUF_SIZE/(8*sizeof(unsigned long))]; unsigned char *echo_buf; unsigned int echo_pos; unsigned int echo_cnt; int canon_data; unsigned long canon_head; unsigned int canon_column; struct mutex atomic_read_lock; struct mutex atomic_write_lock; struct mutex output_lock; struct mutex echo_lock; unsigned char *write_buf; int write_cnt; spinlock_t read_lock; struct work_struct SAK_work; struct tty_port *port; };
  ++ struct tty_struct { int magic; struct kref kref; struct device *dev; struct tty_driver *driver; const struct tty_operations *ops; int index; struct mutex ldisc_mutex; struct tty_ldisc *ldisc; struct mutex atomic_write_lock; struct mutex legacy_mutex; struct mutex termios_mutex; spinlock_t ctrl_lock; struct ktermios termios, termios_locked; struct termiox *termiox; char name[64]; struct pid *pgrp; struct pid *session; unsigned long flags; int count; struct winsize winsize; unsigned char stopped:1, hw_stopped:1, flow_stopped:1, packet:1; unsigned char low_latency:1, warned:1; unsigned char ctrl_status; unsigned int receive_room; struct tty_struct *link; struct fasync_struct *fasync; int alt_speed; wait_queue_head_t write_wait; wait_queue_head_t read_wait; struct work_struct hangup_work; void *disc_data; void *driver_data; struct list_head tty_files; #define N_TTY_BUF_SIZE 4096 unsigned char closing:1; unsigned short minimum_to_wake; unsigned char *write_buf; int write_cnt; struct work_struct SAK_work; struct tty_port *port; };

  tpk_open:
    drivers/char/ttyprintk.c:97
  tpk_close:
    drivers/char/ttyprintk.c:107
  tpk_write:
    drivers/char/ttyprintk.c:122
  tpk_write_room:
    drivers/char/ttyprintk.c:140
  tpk_ioctl:
    drivers/char/ttyprintk.c:148

tty_port   ( diff_type: Mod type: struct file: include/linux/tty.h )
  -- struct tty_port { struct tty_struct *tty; const struct tty_port_operations *ops; spinlock_t lock; int blocked_open; int count; wait_queue_head_t open_wait; wait_queue_head_t close_wait; wait_queue_head_t delta_msr_wait; unsigned long flags; unsigned char console:1; struct mutex mutex; struct mutex buf_mutex; unsigned char *xmit_buf; unsigned int close_delay; unsigned int closing_wait; int drain_delay; struct kref kref; };
  ++ struct tty_port { struct tty_bufhead buf; struct tty_struct *tty; struct tty_struct *itty; const struct tty_port_operations *ops; spinlock_t lock; int blocked_open; int count; wait_queue_head_t open_wait; wait_queue_head_t close_wait; wait_queue_head_t delta_msr_wait; unsigned long flags; unsigned long iflags; #define TTYP_FLUSHING 1 #define TTYP_FLUSHPENDING 2 unsigned char console:1; struct mutex mutex; struct mutex buf_mutex; unsigned char *xmit_buf; unsigned int close_delay; unsigned int closing_wait; int drain_delay; struct kref kref; };

   ttyprintk.c: 23:	struct tty_port port;


===== C  level =====
total count: 0
