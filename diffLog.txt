
__ALIGN_KERNEL 	( diff_type: Mov type: macro file: include/linux/kernel.h )
	-- include/uapi/linux/kernel.h
	++ #define __ALIGN_KERNEL(x,a) __ALIGN_KERNEL_MASK(x,(typeof(x))(a) - 1)


__ALIGN_KERNEL_MASK 	( diff_type: Mov type: macro file: include/linux/kernel.h )
	-- include/uapi/linux/kernel.h
	++ #define __ALIGN_KERNEL_MASK(x,mask) (((x) + (mask)) & ~(mask))


DIV_ROUND_CLOSEST 	( diff_type: Mod type: macro file: include/linux/kernel.h )
	-- #define DIV_ROUND_CLOSEST(x,divisor)( { typeof(divisor) __divisor = divisor; (((x) + ((__divisor) / 2)) / (__divisor)); } )
	++ #define DIV_ROUND_CLOSEST(x,divisor)( { typeof(x) __x = x; typeof(divisor) __d = divisor; (((typeof(x))-1) > 0 || ((typeof(divisor))-1) > 0 || (__x) > 0) ? (((__x) + ((__d) / 2)) / (__d)) : (((__x) - ((__d) / 2)) / (__d)); } )


trace_printk 	( diff_type: Mod type: function file: include/linux/kernel.h )
	-- trace_printk(const char *fmt,...)
	++ int trace_printk(const char *fmt,...)


NUMA_BUILD 	( diff_type: Del type: macro file: include/linux/kernel.h )
	-- #define NUMA_BUILD 0


COMPACTION_BUILD 	( diff_type: Del type: macro file: include/linux/kernel.h )
	-- #define COMPACTION_BUILD 0


module_state 	( diff_type: Mod type: enum file: include/linux/module.h )
	-- enum module_state { MODULE_STATE_LIVE, MODULE_STATE_COMING, MODULE_STATE_GOING, };
	++ enum module_state { MODULE_STATE_LIVE, MODULE_STATE_COMING, MODULE_STATE_GOING, MODULE_STATE_UNFORMED, };


module 	( diff_type: Mod type: struct file: include/linux/module.h )
	-- struct module { enum module_state state; struct list_head list; char name[MODULE_NAME_LEN]; struct module_kobject mkobj; struct module_attribute *modinfo_attrs; const char *version; const char *srcversion; struct kobject *holders_dir; const struct kernel_symbol *syms; const unsigned long *crcs; unsigned int num_syms; struct kernel_param *kp; unsigned int num_kp; unsigned int num_gpl_syms; const struct kernel_symbol *gpl_syms; const unsigned long *gpl_crcs; const struct kernel_symbol *unused_syms; const unsigned long *unused_crcs; unsigned int num_unused_syms; unsigned int num_unused_gpl_syms; const struct kernel_symbol *unused_gpl_syms; const unsigned long *unused_gpl_crcs; const struct kernel_symbol *gpl_future_syms; const unsigned long *gpl_future_crcs; unsigned int num_gpl_future_syms; unsigned int num_exentries; struct exception_table_entry *extable; int (*init)(void); void *module_init; void *module_core; unsigned int init_size, core_size; unsigned int init_text_size, core_text_size; unsigned int init_ro_size, core_ro_size; struct mod_arch_specific arch; unsigned int taints; unsigned num_bugs; struct list_head bug_list; struct bug_entry *bug_table; Elf_Sym *symtab, *core_symtab; unsigned int num_symtab, core_num_syms; char *strtab, *core_strtab; struct module_sect_attrs *sect_attrs; struct module_notes_attrs *notes_attrs; char *args; void __percpu *percpu; unsigned int percpu_size; unsigned int num_tracepoints; struct tracepoint * const *tracepoints_ptrs; struct jump_entry *jump_entries; unsigned int num_jump_entries; unsigned int num_trace_bprintk_fmt; const char **trace_bprintk_fmt_start; struct ftrace_event_call **trace_events; unsigned int num_trace_events; unsigned int num_ftrace_callsites; unsigned long *ftrace_callsites; struct list_head source_list; struct list_head target_list; struct task_struct *waiter; void (*exit)(void); struct module_ref __percpu *refptr; ctor_fn_t *ctors; unsigned int num_ctors; };
	++ struct module { enum module_state state; struct list_head list; char name[MODULE_NAME_LEN]; struct module_kobject mkobj; struct module_attribute *modinfo_attrs; const char *version; const char *srcversion; struct kobject *holders_dir; const struct kernel_symbol *syms; const unsigned long *crcs; unsigned int num_syms; struct kernel_param *kp; unsigned int num_kp; unsigned int num_gpl_syms; const struct kernel_symbol *gpl_syms; const unsigned long *gpl_crcs; const struct kernel_symbol *unused_syms; const unsigned long *unused_crcs; unsigned int num_unused_syms; unsigned int num_unused_gpl_syms; const struct kernel_symbol *unused_gpl_syms; const unsigned long *unused_gpl_crcs; bool sig_ok; const struct kernel_symbol *gpl_future_syms; const unsigned long *gpl_future_crcs; unsigned int num_gpl_future_syms; unsigned int num_exentries; struct exception_table_entry *extable; int (*init)(void); void *module_init; void *module_core; unsigned int init_size, core_size; unsigned int init_text_size, core_text_size; unsigned int init_ro_size, core_ro_size; struct mod_arch_specific arch; unsigned int taints; unsigned num_bugs; struct list_head bug_list; struct bug_entry *bug_table; Elf_Sym *symtab, *core_symtab; unsigned int num_symtab, core_num_syms; char *strtab, *core_strtab; struct module_sect_attrs *sect_attrs; struct module_notes_attrs *notes_attrs; char *args; void __percpu *percpu; unsigned int percpu_size; unsigned int num_tracepoints; struct tracepoint * const *tracepoints_ptrs; struct jump_entry *jump_entries; unsigned int num_jump_entries; unsigned int num_trace_bprintk_fmt; const char **trace_bprintk_fmt_start; struct ftrace_event_call **trace_events; unsigned int num_trace_events; unsigned int num_ftrace_callsites; unsigned long *ftrace_callsites; struct list_head source_list; struct list_head target_list; struct task_struct *waiter; void (*exit)(void); struct module_ref __percpu *refptr; ctor_fn_t *ctors; unsigned int num_ctors; };


IRQF_SAMPLE_RANDOM 	( diff_type: Del type: macro file: include/linux/interrupt.h )
	-- #define IRQF_SAMPLE_RANDOM 0x00000040


irq_run_affinity_notifiers 	( diff_type: Del type: function file: include/linux/interrupt.h )
	-- static inline void irq_run_affinity_notifiers(void)


kmem_cache_size 	( diff_type: Mod type: prototype-->function file: include/linux/slab.h )
	-- unsigned int kmem_cache_size(struct kmem_cache *);
	++ static inline unsigned int kmem_cache_size(struct kmem_cache *s)


delayed_work 	( diff_type: Mod type: struct file: include/linux/workqueue.h )
	-- struct delayed_work { struct work_struct work; struct timer_list timer; };
	++ struct delayed_work { struct work_struct work; struct timer_list timer; int cpu; };


__DELAYED_WORK_INITIALIZER 	( diff_type: Mod type: macro file: include/linux/workqueue.h )
	-- #define __DELAYED_WORK_INITIALIZER(n,f) { .work = __WORK_INITIALIZER((n).work, (f)), .timer = TIMER_INITIALIZER(NULL, 0, 0), }
	++ #define __DELAYED_WORK_INITIALIZER(n,f,tflags) { .work = __WORK_INITIALIZER((n).work, (f)), .timer = __TIMER_INITIALIZER(delayed_work_timer_fn, 0, (unsigned long)&(n), (tflags) | TIMER_IRQSAFE), }


__DEFERRED_WORK_INITIALIZER 	( diff_type: Del type: macro file: include/linux/workqueue.h )
	-- #define __DEFERRED_WORK_INITIALIZER(n,f) { .work = __WORK_INITIALIZER((n).work, (f)), .timer = TIMER_DEFERRED_INITIALIZER(NULL, 0, 0), }


DECLARE_DELAYED_WORK 	( diff_type: Mod type: macro file: include/linux/workqueue.h )
	-- #define DECLARE_DELAYED_WORK(n,f) struct delayed_work n = __DELAYED_WORK_INITIALIZER(n, f)
	++ #define DECLARE_DELAYED_WORK(n,f) struct delayed_work n = __DELAYED_WORK_INITIALIZER(n, f, 0)


DECLARE_DEFERRED_WORK 	( diff_type: Del type: macro file: include/linux/workqueue.h )
	-- #define DECLARE_DEFERRED_WORK(n,f) struct delayed_work n = __DEFERRED_WORK_INITIALIZER(n, f)


INIT_DELAYED_WORK 	( diff_type: Mod type: macro file: include/linux/workqueue.h )
	-- #define INIT_DELAYED_WORK(_work,_func) do { INIT_WORK(&(_work)->work, (_func)); init_timer(&(_work)->timer); } while (0)
	++ #define INIT_DELAYED_WORK(_work,_func) __INIT_DELAYED_WORK(_work, _func, 0)


INIT_DELAYED_WORK_ONSTACK 	( diff_type: Mod type: macro file: include/linux/workqueue.h )
	-- #define INIT_DELAYED_WORK_ONSTACK(_work,_func) do { INIT_WORK_ONSTACK(&(_work)->work, (_func)); init_timer_on_stack(&(_work)->timer); } while (0)
	++ #define INIT_DELAYED_WORK_ONSTACK(_work,_func) __INIT_DELAYED_WORK_ONSTACK(_work, _func, 0)


INIT_DELAYED_WORK_DEFERRABLE 	( diff_type: Del type: macro file: include/linux/workqueue.h )
	-- #define INIT_DELAYED_WORK_DEFERRABLE(_work,_func) do { INIT_WORK(&(_work)->work, (_func)); init_timer_deferrable(&(_work)->timer); } while (0)


queue_work 	( diff_type: Mod type: prototype file: include/linux/workqueue.h )
	-- extern int queue_work(struct workqueue_struct *wq,struct work_struct *work);
	++ extern bool queue_work(struct workqueue_struct *wq,struct work_struct *work);


queue_work_on 	( diff_type: Mod type: prototype file: include/linux/workqueue.h )
	-- extern int queue_work_on(int cpu,struct workqueue_struct *wq,struct work_struct *work);
	++ extern bool queue_work_on(int cpu,struct workqueue_struct *wq,struct work_struct *work);


queue_delayed_work 	( diff_type: Mod type: prototype file: include/linux/workqueue.h )
	-- extern int queue_delayed_work(struct workqueue_struct *wq,struct delayed_work *work, unsigned long delay);
	++ extern bool queue_delayed_work(struct workqueue_struct *wq,struct delayed_work *work, unsigned long delay);


queue_delayed_work_on 	( diff_type: Mod type: prototype file: include/linux/workqueue.h )
	-- extern int queue_delayed_work_on(int cpu,struct workqueue_struct *wq,struct delayed_work *work, unsigned long delay);
	++ extern bool queue_delayed_work_on(int cpu,struct workqueue_struct *wq,struct delayed_work *work, unsigned long delay);


schedule_work 	( diff_type: Mod type: prototype file: include/linux/workqueue.h )
	-- extern int schedule_work(struct work_struct *work);
	++ extern bool schedule_work(struct work_struct *work);


schedule_work_on 	( diff_type: Mod type: prototype file: include/linux/workqueue.h )
	-- extern int schedule_work_on(int cpu,struct work_struct *work);
	++ extern bool schedule_work_on(int cpu,struct work_struct *work);


schedule_delayed_work 	( diff_type: Mod type: prototype file: include/linux/workqueue.h )
	-- extern int schedule_delayed_work(struct delayed_work *work,unsigned long delay);
	++ extern bool schedule_delayed_work(struct delayed_work *work,unsigned long delay);


schedule_delayed_work_on 	( diff_type: Mod type: prototype file: include/linux/workqueue.h )
	-- extern int schedule_delayed_work_on(int cpu,struct delayed_work *work,unsigned long delay);
	++ extern bool schedule_delayed_work_on(int cpu,struct delayed_work *work,unsigned long delay);


flush_work_sync 	( diff_type: Mod type: prototype-->function file: include/linux/workqueue.h )
	-- extern bool flush_work_sync(struct work_struct *work);
	++ static inline bool __deprecated flush_work_sync(struct work_struct *work)


flush_delayed_work_sync 	( diff_type: Mod type: prototype-->function file: include/linux/workqueue.h )
	-- extern bool flush_delayed_work_sync(struct delayed_work *work);
	++ static inline bool __deprecated flush_delayed_work_sync(struct delayed_work *dwork)


cancel_delayed_work 	( diff_type: Mod type: function-->prototype file: include/linux/workqueue.h )
	-- static inline bool cancel_delayed_work(struct delayed_work *work)
	++ extern bool cancel_delayed_work(struct delayed_work *dwork);


__cancel_delayed_work 	( diff_type: Mod type: function file: include/linux/workqueue.h )
	-- static inline bool __cancel_delayed_work(struct delayed_work *work)
	++ static inline bool __deprecated __cancel_delayed_work(struct delayed_work *work)


PCI_DEVFN 	( diff_type: Mov type: macro file: include/linux/pci.h )
	-- include/uapi/linux/pci.h
	++ #define PCI_DEVFN(slot,func) ((((slot) & 0x1f) << 3) | ((func) & 0x07))


PCI_SLOT 	( diff_type: Mov type: macro file: include/linux/pci.h )
	-- include/uapi/linux/pci.h
	++ #define PCI_SLOT(devfn) (((devfn) >> 3) & 0x1f)


PCI_FUNC 	( diff_type: Mov type: macro file: include/linux/pci.h )
	-- include/uapi/linux/pci.h
	++ #define PCI_FUNC(devfn) ((devfn) & 0x07)


PCIIOC_BASE 	( diff_type: Mov type: macro file: include/linux/pci.h )
	-- include/uapi/linux/pci.h
	++ #define PCIIOC_BASE ('P' << 24 | 'C' << 16 | 'I' << 8)


PCIIOC_CONTROLLER 	( diff_type: Mov type: macro file: include/linux/pci.h )
	-- include/uapi/linux/pci.h
	++ #define PCIIOC_CONTROLLER (PCIIOC_BASE | 0x00)


PCIIOC_MMAP_IS_IO 	( diff_type: Mov type: macro file: include/linux/pci.h )
	-- include/uapi/linux/pci.h
	++ #define PCIIOC_MMAP_IS_IO (PCIIOC_BASE | 0x01)


PCIIOC_MMAP_IS_MEM 	( diff_type: Mov type: macro file: include/linux/pci.h )
	-- include/uapi/linux/pci.h
	++ #define PCIIOC_MMAP_IS_MEM (PCIIOC_BASE | 0x02)


PCIIOC_WRITE_COMBINE 	( diff_type: Mov type: macro file: include/linux/pci.h )
	-- include/uapi/linux/pci.h
	++ #define PCIIOC_WRITE_COMBINE (PCIIOC_BASE | 0x03)


pci_dev 	( diff_type: Mod type: struct file: include/linux/pci.h )
	-- struct pci_dev { struct list_head bus_list; struct pci_bus *bus; struct pci_bus *subordinate; void *sysdata; struct proc_dir_entry *procent; struct pci_slot *slot; unsigned int devfn; unsigned short vendor; unsigned short device; unsigned short subsystem_vendor; unsigned short subsystem_device; u8 revision; u8 hdr_type; u8 pcie_cap; u8 pcie_type:4; u8 pcie_mpss:3; u8 rom_base_reg; u8 pin; struct pci_driver *driver; u64 dma_mask; struct device_dma_parameters dma_parms; pci_power_t current_state; int pm_cap; unsigned int pme_support:5; unsigned int pme_interrupt:1; unsigned int pme_poll:1; unsigned int d1_support:1; unsigned int d2_support:1; unsigned int no_d1d2:1; unsigned int mmio_always_on:1; unsigned int wakeup_prepared:1; unsigned int d3_delay; struct pcie_link_state *link_state; pci_channel_state_t error_state; struct device dev; int cfg_size; unsigned int irq; struct resource resource[DEVICE_COUNT_RESOURCE]; unsigned int transparent:1; unsigned int multifunction:1; unsigned int is_added:1; unsigned int is_busmaster:1; unsigned int no_msi:1; unsigned int block_cfg_access:1; unsigned int broken_parity_status:1; unsigned int irq_reroute_variant:2; unsigned int msi_enabled:1; unsigned int msix_enabled:1; unsigned int ari_enabled:1; unsigned int is_managed:1; unsigned int is_pcie:1; unsigned int needs_freset:1; unsigned int state_saved:1; unsigned int is_physfn:1; unsigned int is_virtfn:1; unsigned int reset_fn:1; unsigned int is_hotplug_bridge:1; unsigned int __aer_firmware_first_valid:1; unsigned int __aer_firmware_first:1; pci_dev_flags_t dev_flags; atomic_t enable_cnt; u32 saved_config_space[16]; struct hlist_head saved_cap_space; struct bin_attribute *rom_attr; int rom_attr_enabled; struct bin_attribute *res_attr[DEVICE_COUNT_RESOURCE]; struct bin_attribute *res_attr_wc[DEVICE_COUNT_RESOURCE]; struct list_head msi_list; struct kset *msi_kset; struct pci_vpd *vpd; struct pci_sriov *sriov; struct pci_dev *physfn; }; struct pci_ats *ats; };
	++ struct pci_dev { struct list_head bus_list; struct pci_bus *bus; struct pci_bus *subordinate; void *sysdata; struct proc_dir_entry *procent; struct pci_slot *slot; unsigned int devfn; unsigned short vendor; unsigned short device; unsigned short subsystem_vendor; unsigned short subsystem_device; u8 revision; u8 hdr_type; u8 pcie_cap; u8 pcie_mpss:3; u8 rom_base_reg; u8 pin; u16 pcie_flags_reg; struct pci_driver *driver; u64 dma_mask; struct device_dma_parameters dma_parms; pci_power_t current_state; int pm_cap; unsigned int pme_support:5; unsigned int pme_interrupt:1; unsigned int pme_poll:1; unsigned int d1_support:1; unsigned int d2_support:1; unsigned int no_d1d2:1; unsigned int no_d3cold:1; unsigned int d3cold_allowed:1; unsigned int mmio_always_on:1; unsigned int wakeup_prepared:1; unsigned int runtime_d3cold:1; unsigned int d3_delay; unsigned int d3cold_delay; struct pcie_link_state *link_state; pci_channel_state_t error_state; struct device dev; int cfg_size; unsigned int irq; struct resource resource[DEVICE_COUNT_RESOURCE]; unsigned int transparent:1; unsigned int multifunction:1; unsigned int is_added:1; unsigned int is_busmaster:1; unsigned int no_msi:1; unsigned int block_cfg_access:1; unsigned int broken_parity_status:1; unsigned int irq_reroute_variant:2; unsigned int msi_enabled:1; unsigned int msix_enabled:1; unsigned int ari_enabled:1; unsigned int is_managed:1; unsigned int is_pcie:1; unsigned int needs_freset:1; unsigned int state_saved:1; unsigned int is_physfn:1; unsigned int is_virtfn:1; unsigned int reset_fn:1; unsigned int is_hotplug_bridge:1; unsigned int __aer_firmware_first_valid:1; unsigned int __aer_firmware_first:1; unsigned int broken_intx_masking:1; unsigned int io_window_1k:1; pci_dev_flags_t dev_flags; atomic_t enable_cnt; u32 saved_config_space[16]; struct hlist_head saved_cap_space; struct bin_attribute *rom_attr; int rom_attr_enabled; struct bin_attribute *res_attr[DEVICE_COUNT_RESOURCE]; struct bin_attribute *res_attr_wc[DEVICE_COUNT_RESOURCE]; struct list_head msi_list; struct kset *msi_kset; struct pci_vpd *vpd; struct pci_sriov *sriov; struct pci_dev *physfn; }; struct pci_ats *ats; phys_addr_t rom; size_t romlen; };


pci_dev_b 	( diff_type: Del type: macro file: include/linux/pci.h )
	-- #define pci_dev_b(n) list_entry(n,struct pci_dev,bus_list)


pci_bus 	( diff_type: Mod type: struct file: include/linux/pci.h )
	-- struct pci_bus { struct list_head node; struct pci_bus *parent; struct list_head children; struct list_head devices; struct pci_dev *self; struct list_head slots; struct resource *resource[PCI_BRIDGE_RESOURCE_NUM]; struct list_head resources; struct pci_ops *ops; void *sysdata; struct proc_dir_entry *procdir; unsigned char number; unsigned char primary; unsigned char secondary; unsigned char subordinate; unsigned char max_bus_speed; unsigned char cur_bus_speed; char name[48]; unsigned short bridge_ctl; pci_bus_flags_t bus_flags; struct device *bridge; struct device dev; struct bin_attribute *legacy_io; struct bin_attribute *legacy_mem; unsigned int is_added:1; };
	++ struct pci_bus { struct list_head node; struct pci_bus *parent; struct list_head children; struct list_head devices; struct pci_dev *self; struct list_head slots; struct resource *resource[PCI_BRIDGE_RESOURCE_NUM]; struct list_head resources; struct resource busn_res; struct pci_ops *ops; void *sysdata; struct proc_dir_entry *procdir; unsigned char number; unsigned char primary; unsigned char max_bus_speed; unsigned char cur_bus_speed; char name[48]; unsigned short bridge_ctl; pci_bus_flags_t bus_flags; struct device *bridge; struct device dev; struct bin_attribute *legacy_io; struct bin_attribute *legacy_mem; unsigned int is_added:1; };


pci_ers_result 	( diff_type: Mod type: enum file: include/linux/pci.h )
	-- enum pci_ers_result { PCI_ERS_RESULT_NONE = (__force pci_ers_result_t) 1, PCI_ERS_RESULT_CAN_RECOVER = (__force pci_ers_result_t) 2, PCI_ERS_RESULT_NEED_RESET = (__force pci_ers_result_t) 3, PCI_ERS_RESULT_DISCONNECT = (__force pci_ers_result_t) 4, PCI_ERS_RESULT_RECOVERED = (__force pci_ers_result_t) 5, };
	++ enum pci_ers_result { PCI_ERS_RESULT_NONE = (__force pci_ers_result_t) 1, PCI_ERS_RESULT_CAN_RECOVER = (__force pci_ers_result_t) 2, PCI_ERS_RESULT_NEED_RESET = (__force pci_ers_result_t) 3, PCI_ERS_RESULT_DISCONNECT = (__force pci_ers_result_t) 4, PCI_ERS_RESULT_RECOVERED = (__force pci_ers_result_t) 5, PCI_ERS_RESULT_NO_AER_DRIVER = (__force pci_ers_result_t) 6, };


pci_driver 	( diff_type: Mod type: struct file: include/linux/pci.h )
	-- struct pci_driver { struct list_head node; const char *name; const struct pci_device_id *id_table; int (*probe) (struct pci_dev *dev, const struct pci_device_id *id); void (*remove) (struct pci_dev *dev); int (*suspend) (struct pci_dev *dev, pm_message_t state); int (*suspend_late) (struct pci_dev *dev, pm_message_t state); int (*resume_early) (struct pci_dev *dev); int (*resume) (struct pci_dev *dev); void (*shutdown) (struct pci_dev *dev); struct pci_error_handlers *err_handler; struct device_driver driver; struct pci_dynids dynids; };
	++ struct pci_driver { struct list_head node; const char *name; const struct pci_device_id *id_table; int (*probe) (struct pci_dev *dev, const struct pci_device_id *id); void (*remove) (struct pci_dev *dev); int (*suspend) (struct pci_dev *dev, pm_message_t state); int (*suspend_late) (struct pci_dev *dev, pm_message_t state); int (*resume_early) (struct pci_dev *dev); int (*resume) (struct pci_dev *dev); void (*shutdown) (struct pci_dev *dev); int (*sriov_configure) (struct pci_dev *dev, int num_vfs); const struct pci_error_handlers *err_handler; struct device_driver driver; struct pci_dynids dynids; };


DEFINE_PCI_DEVICE_TABLE 	( diff_type: Mod type: macro file: include/linux/pci.h )
	-- #define DEFINE_PCI_DEVICE_TABLE(_table) const struct pci_device_id _table[] __devinitconst
	++ #define DEFINE_PCI_DEVICE_TABLE(_table) const struct pci_device_id _table[]


pci_scan_root_bus 	( diff_type: Mod type: prototype file: include/linux/pci.h )
	-- struct pci_bus * __devinit pci_scan_root_bus(struct device *parent,int bus,struct pci_ops *ops, void *sysdata,struct list_head *resources);
	++ struct pci_bus *pci_scan_root_bus(struct device *parent,int bus,struct pci_ops *ops, void *sysdata,struct list_head *resources);


pci_dev_get 	( diff_type: Mod type: prototype-->function file: include/linux/pci.h )
	-- extern struct pci_dev *pci_dev_get(struct pci_dev *dev);
	++ static inline struct pci_dev *pci_dev_get(struct pci_dev *dev)


__pci_remove_bus_device 	( diff_type: Del type: prototype file: include/linux/pci.h )
	-- extern void __pci_remove_bus_device(struct pci_dev *dev);


pci_stop_bus_device 	( diff_type: Del type: prototype file: include/linux/pci.h )
	-- extern void pci_stop_bus_device(struct pci_dev *dev);


pci_bus_find_ext_capability 	( diff_type: Del type: prototype file: include/linux/pci.h )
	-- int pci_bus_find_ext_capability(struct pci_bus *bus,unsigned int devfn,int cap);


pci_ltr_supported 	( diff_type: Del type: prototype file: include/linux/pci.h )
	-- bool pci_ltr_supported(struct pci_dev *dev);


pci_stop_and_remove_behind_bridge 	( diff_type: Del type: prototype file: include/linux/pci.h )
	-- void pci_stop_and_remove_behind_bridge(struct pci_dev *dev);


DECLARE_PCI_FIXUP_SECTION 	( diff_type: Mod type: macro file: include/linux/pci.h )
	-- #define DECLARE_PCI_FIXUP_SECTION(section,name,vendor,device,class, class_shift, hook) static const struct pci_fixup const __pci_fixup_##name __used __attribute__((__section__(#section), aligned((sizeof(void *))))) = { vendor, device, class, class_shift, hook };
	++ #define DECLARE_PCI_FIXUP_SECTION(section,name,vendor,device,class, class_shift, hook) static const struct pci_fixup __pci_fixup_##name __used __attribute__((__section__(#section), aligned((sizeof(void *))))) = { vendor, device, class, class_shift, hook };


pci_ext_cfg_avail 	( diff_type: Mod type: prototype file: include/linux/pci.h )
	-- int pci_ext_cfg_avail(struct pci_dev *dev);
	++ int pci_ext_cfg_avail(void);


scsi_device_state 	( diff_type: Mod type: enum file: include/scsi/scsi_device.h )
	-- enum scsi_device_state { SDEV_CREATED = 1, SDEV_RUNNING, SDEV_CANCEL, SDEV_DEL, SDEV_QUIESCE, SDEV_OFFLINE, SDEV_BLOCK, SDEV_CREATED_BLOCK, };
	++ enum scsi_device_state { SDEV_CREATED = 1, SDEV_RUNNING, SDEV_CANCEL, SDEV_DEL, SDEV_QUIESCE, SDEV_OFFLINE, SDEV_TRANSPORT_OFFLINE, SDEV_BLOCK, SDEV_CREATED_BLOCK, };


scsi_device 	( diff_type: Mod type: struct file: include/scsi/scsi_device.h )
	-- struct scsi_device { struct Scsi_Host *host; struct request_queue *request_queue; struct list_head siblings; struct list_head same_target_siblings; unsigned int device_busy; spinlock_t list_lock; struct list_head cmd_list; struct list_head starved_entry; struct scsi_cmnd *current_cmnd; unsigned short queue_depth; unsigned short max_queue_depth; unsigned short last_queue_full_depth; unsigned short last_queue_full_count; unsigned long last_queue_full_time; unsigned long queue_ramp_up_period; #define SCSI_DEFAULT_RAMP_UP_PERIOD (120 * HZ) unsigned long last_queue_ramp_up; unsigned int id, lun, channel; unsigned int manufacturer; unsigned sector_size; void *hostdata; char type; char scsi_level; char inq_periph_qual; unsigned char inquiry_len; unsigned char * inquiry; const char * vendor; const char * model; const char * rev; unsigned char current_tag; struct scsi_target *sdev_target; unsigned int sdev_bflags; unsigned writeable:1; unsigned removable:1; unsigned changed:1; unsigned busy:1; unsigned lockable:1; unsigned locked:1; unsigned borken:1; unsigned disconnect:1; unsigned soft_reset:1; unsigned sdtr:1; unsigned wdtr:1; unsigned ppr:1; unsigned tagged_supported:1; unsigned simple_tags:1; unsigned ordered_tags:1; unsigned was_reset:1; unsigned expecting_cc_ua:1; unsigned use_10_for_rw:1; unsigned use_10_for_ms:1; unsigned skip_ms_page_8:1; unsigned skip_ms_page_3f:1; unsigned skip_vpd_pages:1; unsigned use_192_bytes_for_3f:1; unsigned no_start_on_add:1; unsigned allow_restart:1; unsigned manage_start_stop:1; unsigned start_stop_pwr_cond:1; unsigned no_uld_attach:1; unsigned select_no_atn:1; unsigned fix_capacity:1; unsigned guess_capacity:1; unsigned retry_hwerror:1; unsigned last_sector_bug:1; unsigned no_read_disc_info:1; unsigned no_read_capacity_16:1; unsigned try_rc_10_first:1; unsigned is_visible:1; DECLARE_BITMAP(supported_events, SDEV_EVT_MAXBITS); struct list_head event_list; struct work_struct event_work; unsigned int device_blocked; unsigned int max_device_blocked; #define SCSI_DEFAULT_DEVICE_BLOCKED 3 atomic_t iorequest_cnt; atomic_t iodone_cnt; atomic_t ioerr_cnt; struct device sdev_gendev,sdev_dev; struct execute_work ew; struct work_struct requeue_work; struct scsi_dh_data *scsi_dh_data; enum scsi_device_state sdev_state; unsigned long sdev_data[0]; } __attribute__((aligned(sizeof(unsigned long))));
	++ struct scsi_device { struct Scsi_Host *host; struct request_queue *request_queue; struct list_head siblings; struct list_head same_target_siblings; unsigned int device_busy; spinlock_t list_lock; struct list_head cmd_list; struct list_head starved_entry; struct scsi_cmnd *current_cmnd; unsigned short queue_depth; unsigned short max_queue_depth; unsigned short last_queue_full_depth; unsigned short last_queue_full_count; unsigned long last_queue_full_time; unsigned long queue_ramp_up_period; #define SCSI_DEFAULT_RAMP_UP_PERIOD (120 * HZ) unsigned long last_queue_ramp_up; unsigned int id, lun, channel; unsigned int manufacturer; unsigned sector_size; void *hostdata; char type; char scsi_level; char inq_periph_qual; unsigned char inquiry_len; unsigned char * inquiry; const char * vendor; const char * model; const char * rev; unsigned char current_tag; struct scsi_target *sdev_target; unsigned int sdev_bflags; unsigned writeable:1; unsigned removable:1; unsigned changed:1; unsigned busy:1; unsigned lockable:1; unsigned locked:1; unsigned borken:1; unsigned disconnect:1; unsigned soft_reset:1; unsigned sdtr:1; unsigned wdtr:1; unsigned ppr:1; unsigned tagged_supported:1; unsigned simple_tags:1; unsigned ordered_tags:1; unsigned was_reset:1; unsigned expecting_cc_ua:1; unsigned use_10_for_rw:1; unsigned use_10_for_ms:1; unsigned no_report_opcodes:1; unsigned no_write_same:1; unsigned use_16_for_rw:1; unsigned skip_ms_page_8:1; unsigned skip_ms_page_3f:1; unsigned skip_vpd_pages:1; unsigned use_192_bytes_for_3f:1; unsigned no_start_on_add:1; unsigned allow_restart:1; unsigned manage_start_stop:1; unsigned start_stop_pwr_cond:1; unsigned no_uld_attach:1; unsigned select_no_atn:1; unsigned fix_capacity:1; unsigned guess_capacity:1; unsigned retry_hwerror:1; unsigned last_sector_bug:1; unsigned no_read_disc_info:1; unsigned no_read_capacity_16:1; unsigned try_rc_10_first:1; unsigned is_visible:1; unsigned can_power_off:1; unsigned wce_default_on:1; unsigned no_dif:1; DECLARE_BITMAP(supported_events, SDEV_EVT_MAXBITS); struct list_head event_list; struct work_struct event_work; unsigned int device_blocked; unsigned int max_device_blocked; #define SCSI_DEFAULT_DEVICE_BLOCKED 3 atomic_t iorequest_cnt; atomic_t iodone_cnt; atomic_t ioerr_cnt; struct device sdev_gendev,sdev_dev; struct execute_work ew; struct work_struct requeue_work; struct scsi_dh_data *scsi_dh_data; enum scsi_device_state sdev_state; unsigned long sdev_data[0]; } __attribute__((aligned(sizeof(unsigned long))));


scsi_target_unblock 	( diff_type: Mod type: prototype file: include/scsi/scsi_device.h )
	-- extern void scsi_target_unblock(struct device *);
	++ extern void scsi_target_unblock(struct device *,enum scsi_device_state);


_LINUX_SYSINFO_H 	( diff_type: Mov type: macro file: include/linux/sysinfo.h )
	-- include/uapi/linux/sysinfo.h
	++ #define _LINUX_SYSINFO_H


SI_LOAD_SHIFT 	( diff_type: Mov type: macro file: include/linux/sysinfo.h )
	-- include/uapi/linux/sysinfo.h
	++ #define SI_LOAD_SHIFT 16


sysinfo 	( diff_type: Mov type: struct file: include/linux/sysinfo.h )
	-- include/uapi/linux/sysinfo.h
	++ struct sysinfo { __kernel_long_t uptime; __kernel_ulong_t loads[3]; __kernel_ulong_t totalram; __kernel_ulong_t freeram; __kernel_ulong_t sharedram; __kernel_ulong_t bufferram; __kernel_ulong_t totalswap; __kernel_ulong_t freeswap; __u16 procs; __u16 pad; __kernel_ulong_t totalhigh; __kernel_ulong_t freehigh; __u32 mem_unit; char _f[20-2*sizeof(__kernel_ulong_t)-sizeof(__u32)]; };


__bitwise__ 	( diff_type: Mov type: macro file: include/linux/types.h )
	-- include/uapi/linux/types.h
	++ #define __bitwise__


__bitwise 	( diff_type: Mov type: macro file: include/linux/types.h )
	-- include/uapi/linux/types.h
	++ #define __bitwise


__aligned_u64 	( diff_type: Mov type: macro file: include/linux/types.h )
	-- include/uapi/linux/types.h
	++ #define __aligned_u64 __u64 __attribute__((aligned(8)))


__aligned_be64 	( diff_type: Mov type: macro file: include/linux/types.h )
	-- include/uapi/linux/types.h
	++ #define __aligned_be64 __be64 __attribute__((aligned(8)))


__aligned_le64 	( diff_type: Mov type: macro file: include/linux/types.h )
	-- include/uapi/linux/types.h
	++ #define __aligned_le64 __le64 __attribute__((aligned(8)))


rcu_head 	( diff_type: Mod type: struct-->macro file: include/linux/types.h )
	-- struct rcu_head { struct rcu_head *next; void (*func)(struct rcu_head *head); };
	++ #define rcu_head callback_head


KERN_EMERG 	( diff_type: All type: macro file: include/linux/printk.h-->include/linux/kern_levels.h )
	-- #define KERN_EMERG "<0>"
	++ #define KERN_EMERG KERN_SOH "0"


KERN_ALERT 	( diff_type: All type: macro file: include/linux/printk.h-->include/linux/kern_levels.h )
	-- #define KERN_ALERT "<1>"
	++ #define KERN_ALERT KERN_SOH "1"


KERN_CRIT 	( diff_type: All type: macro file: include/linux/printk.h-->include/linux/kern_levels.h )
	-- #define KERN_CRIT "<2>"
	++ #define KERN_CRIT KERN_SOH "2"


KERN_ERR 	( diff_type: All type: macro file: include/linux/printk.h-->include/linux/kern_levels.h )
	-- #define KERN_ERR "<3>"
	++ #define KERN_ERR KERN_SOH "3"


KERN_WARNING 	( diff_type: All type: macro file: include/linux/printk.h-->include/linux/kern_levels.h )
	-- #define KERN_WARNING "<4>"
	++ #define KERN_WARNING KERN_SOH "4"


KERN_NOTICE 	( diff_type: All type: macro file: include/linux/printk.h-->include/linux/kern_levels.h )
	-- #define KERN_NOTICE "<5>"
	++ #define KERN_NOTICE KERN_SOH "5"


KERN_INFO 	( diff_type: All type: macro file: include/linux/printk.h-->include/linux/kern_levels.h )
	-- #define KERN_INFO "<6>"
	++ #define KERN_INFO KERN_SOH "6"


KERN_DEBUG 	( diff_type: All type: macro file: include/linux/printk.h-->include/linux/kern_levels.h )
	-- #define KERN_DEBUG "<7>"
	++ #define KERN_DEBUG KERN_SOH "7"


KERN_DEFAULT 	( diff_type: All type: macro file: include/linux/printk.h-->include/linux/kern_levels.h )
	-- #define KERN_DEFAULT "<d>"
	++ #define KERN_DEFAULT KERN_SOH "d"


KERN_CONT 	( diff_type: All type: macro file: include/linux/printk.h-->include/linux/kern_levels.h )
	-- #define KERN_CONT "<c>"
	++ #define KERN_CONT ""


DEFINE_DYNAMIC_DEBUG_METADATA 	( diff_type: Mod type: macro file: include/linux/dynamic_debug.h )
	-- #define DEFINE_DYNAMIC_DEBUG_METADATA(name,fmt) static struct _ddebug __used __aligned(8) __attribute__((section("__verbose"))) name = { .modname = KBUILD_MODNAME, .function = __func__, .filename = __FILE__, .format = (fmt), .lineno = __LINE__, .flags = _DPRINTK_FLAGS_DEFAULT, }
	++ #define DEFINE_DYNAMIC_DEBUG_METADATA(name,fmt) static struct _ddebug __aligned(8) __attribute__((section("__verbose"))) name = { .modname = KBUILD_MODNAME, .function = __func__, .filename = __FILE__, .format = (fmt), .lineno = __LINE__, .flags = _DPRINTK_FLAGS_DEFAULT, }


_ASM_X86_BYTEORDER_H 	( diff_type: Mov type: macro file: arch/x86/include/asm/byteorder.h )
	-- arch/x86/include/uapi/asm/byteorder.h
	++ #define _ASM_X86_BYTEORDER_H


S_IFMT 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IFMT 00170000


S_IFSOCK 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IFSOCK 0140000


S_IFLNK 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IFLNK 0120000


S_IFREG 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IFREG 0100000


S_IFBLK 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IFBLK 0060000


S_IFDIR 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IFDIR 0040000


S_IFCHR 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IFCHR 0020000


S_IFIFO 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IFIFO 0010000


S_ISUID 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_ISUID 0004000


S_ISGID 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_ISGID 0002000


S_ISVTX 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_ISVTX 0001000


S_ISLNK 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_ISLNK(m) (((m) & S_IFMT) == S_IFLNK)


S_ISREG 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_ISREG(m) (((m) & S_IFMT) == S_IFREG)


S_ISDIR 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_ISDIR(m) (((m) & S_IFMT) == S_IFDIR)


S_ISCHR 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_ISCHR(m) (((m) & S_IFMT) == S_IFCHR)


S_ISBLK 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_ISBLK(m) (((m) & S_IFMT) == S_IFBLK)


S_ISFIFO 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_ISFIFO(m) (((m) & S_IFMT) == S_IFIFO)


S_ISSOCK 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_ISSOCK(m) (((m) & S_IFMT) == S_IFSOCK)


S_IRWXU 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IRWXU 00700


S_IRUSR 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IRUSR 00400


S_IWUSR 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IWUSR 00200


S_IXUSR 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IXUSR 00100


S_IRWXG 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IRWXG 00070


S_IRGRP 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IRGRP 00040


S_IWGRP 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IWGRP 00020


S_IXGRP 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IXGRP 00010


S_IRWXO 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IRWXO 00007


S_IROTH 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IROTH 00004


S_IWOTH 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IWOTH 00002


S_IXOTH 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IXOTH 00001


PT_NULL 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_NULL 0


PT_LOAD 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_LOAD 1


PT_DYNAMIC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_DYNAMIC 2


PT_INTERP 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_INTERP 3


PT_NOTE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_NOTE 4


PT_SHLIB 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_SHLIB 5


PT_PHDR 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_PHDR 6


PT_TLS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_TLS 7


PT_LOOS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_LOOS 0x60000000


PT_HIOS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_HIOS 0x6fffffff


PT_LOPROC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_LOPROC 0x70000000


PT_HIPROC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_HIPROC 0x7fffffff


PT_GNU_EH_FRAME 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_GNU_EH_FRAME 0x6474e550


PT_GNU_STACK 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_GNU_STACK (PT_LOOS + 0x474e551)


PN_XNUM 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PN_XNUM 0xffff


ET_NONE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ET_NONE 0


ET_REL 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ET_REL 1


ET_EXEC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ET_EXEC 2


ET_DYN 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ET_DYN 3


ET_CORE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ET_CORE 4


ET_LOPROC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ET_LOPROC 0xff00


ET_HIPROC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ET_HIPROC 0xffff


DT_NULL 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_NULL 0


DT_NEEDED 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_NEEDED 1


DT_PLTRELSZ 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_PLTRELSZ 2


DT_PLTGOT 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_PLTGOT 3


DT_HASH 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_HASH 4


DT_STRTAB 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_STRTAB 5


DT_SYMTAB 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_SYMTAB 6


DT_RELA 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_RELA 7


DT_RELASZ 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_RELASZ 8


DT_RELAENT 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_RELAENT 9


DT_STRSZ 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_STRSZ 10


DT_SYMENT 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_SYMENT 11


DT_INIT 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_INIT 12


DT_FINI 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_FINI 13


DT_SONAME 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_SONAME 14


DT_RPATH 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_RPATH 15


DT_SYMBOLIC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_SYMBOLIC 16


DT_REL 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_REL 17


DT_RELSZ 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_RELSZ 18


DT_RELENT 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_RELENT 19


DT_PLTREL 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_PLTREL 20


DT_DEBUG 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_DEBUG 21


DT_TEXTREL 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_TEXTREL 22


DT_JMPREL 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_JMPREL 23


DT_ENCODING 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_ENCODING 32


OLD_DT_LOOS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define OLD_DT_LOOS 0x60000000


DT_LOOS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_LOOS 0x6000000d


DT_HIOS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_HIOS 0x6ffff000


DT_VALRNGLO 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_VALRNGLO 0x6ffffd00


DT_VALRNGHI 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_VALRNGHI 0x6ffffdff


DT_ADDRRNGLO 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_ADDRRNGLO 0x6ffffe00


DT_ADDRRNGHI 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_ADDRRNGHI 0x6ffffeff


DT_VERSYM 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_VERSYM 0x6ffffff0


DT_RELACOUNT 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_RELACOUNT 0x6ffffff9


DT_RELCOUNT 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_RELCOUNT 0x6ffffffa


DT_FLAGS_1 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_FLAGS_1 0x6ffffffb


DT_VERDEF 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_VERDEF 0x6ffffffc


DT_VERDEFNUM 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_VERDEFNUM 0x6ffffffd


DT_VERNEED 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_VERNEED 0x6ffffffe


DT_VERNEEDNUM 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_VERNEEDNUM 0x6fffffff


OLD_DT_HIOS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define OLD_DT_HIOS 0x6fffffff


DT_LOPROC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_LOPROC 0x70000000


DT_HIPROC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_HIPROC 0x7fffffff


STB_LOCAL 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define STB_LOCAL 0


STB_GLOBAL 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define STB_GLOBAL 1


STB_WEAK 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define STB_WEAK 2


STT_NOTYPE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define STT_NOTYPE 0


STT_OBJECT 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define STT_OBJECT 1


STT_FUNC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define STT_FUNC 2


STT_SECTION 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define STT_SECTION 3


STT_FILE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define STT_FILE 4


STT_COMMON 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define STT_COMMON 5


STT_TLS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define STT_TLS 6


ELF_ST_BIND 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELF_ST_BIND(x) ((x) >> 4)


ELF_ST_TYPE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELF_ST_TYPE(x) (((unsigned int) x) & 0xf)


ELF32_ST_BIND 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELF32_ST_BIND(x) ELF_ST_BIND(x)


ELF32_ST_TYPE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELF32_ST_TYPE(x) ELF_ST_TYPE(x)


ELF64_ST_BIND 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELF64_ST_BIND(x) ELF_ST_BIND(x)


ELF64_ST_TYPE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELF64_ST_TYPE(x) ELF_ST_TYPE(x)


dynamic 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct dynamic{ Elf32_Sword d_tag; union { Elf32_Sword d_val; Elf32_Addr d_ptr; } d_un; } Elf32_Dyn;


Elf32_Dyn 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct dynamic{ Elf32_Sword d_tag; union { Elf32_Sword d_val; Elf32_Addr d_ptr; } d_un; } Elf32_Dyn;


Elf64_Dyn 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct { Elf64_Sxword d_tag; Elf64_Xword d_val; Elf64_Addr d_ptr; } d_un; } Elf64_Dyn;


ELF32_R_SYM 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELF32_R_SYM(x) ((x) >> 8)


ELF32_R_TYPE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELF32_R_TYPE(x) ((x) & 0xff)


ELF64_R_SYM 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELF64_R_SYM(i) ((i) >> 32)


ELF64_R_TYPE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELF64_R_TYPE(i) ((i) & 0xffffffff)


elf32_rel 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_rel { Elf32_Addr r_offset; Elf32_Word r_info; } Elf32_Rel;


Elf32_Rel 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_rel { Elf32_Addr r_offset; Elf32_Word r_info; } Elf32_Rel;


elf64_rel 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_rel { Elf64_Addr r_offset; Elf64_Xword r_info; } Elf64_Rel;


Elf64_Rel 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_rel { Elf64_Addr r_offset; Elf64_Xword r_info; } Elf64_Rel;


elf32_rela 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_rela{ Elf32_Addr r_offset; Elf32_Word r_info; Elf32_Sword r_addend; } Elf32_Rela;


Elf32_Rela 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_rela{ Elf32_Addr r_offset; Elf32_Word r_info; Elf32_Sword r_addend; } Elf32_Rela;


elf64_rela 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_rela { Elf64_Addr r_offset; Elf64_Xword r_info; Elf64_Sxword r_addend; } Elf64_Rela;


Elf64_Rela 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_rela { Elf64_Addr r_offset; Elf64_Xword r_info; Elf64_Sxword r_addend; } Elf64_Rela;


elf32_sym 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_sym{ Elf32_Word st_name; Elf32_Addr st_value; Elf32_Word st_size; unsigned char st_info; unsigned char st_other; Elf32_Half st_shndx; } Elf32_Sym;


Elf32_Sym 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_sym{ Elf32_Word st_name; Elf32_Addr st_value; Elf32_Word st_size; unsigned char st_info; unsigned char st_other; Elf32_Half st_shndx; } Elf32_Sym;


elf64_sym 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_sym { Elf64_Word st_name; unsigned char st_info; unsigned char st_other; Elf64_Half st_shndx; Elf64_Addr st_value; Elf64_Xword st_size; } Elf64_Sym;


Elf64_Sym 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_sym { Elf64_Word st_name; unsigned char st_info; unsigned char st_other; Elf64_Half st_shndx; Elf64_Addr st_value; Elf64_Xword st_size; } Elf64_Sym;


EI_NIDENT 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define EI_NIDENT 16


elf32_hdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_hdr{ unsigned char e_ident[EI_NIDENT]; Elf32_Half e_type; Elf32_Half e_machine; Elf32_Word e_version; Elf32_Addr e_entry; Elf32_Off e_phoff; Elf32_Off e_shoff; Elf32_Word e_flags; Elf32_Half e_ehsize; Elf32_Half e_phentsize; Elf32_Half e_phnum; Elf32_Half e_shentsize; Elf32_Half e_shnum; Elf32_Half e_shstrndx; } Elf32_Ehdr;


Elf32_Ehdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_hdr{ unsigned char e_ident[EI_NIDENT]; Elf32_Half e_type; Elf32_Half e_machine; Elf32_Word e_version; Elf32_Addr e_entry; Elf32_Off e_phoff; Elf32_Off e_shoff; Elf32_Word e_flags; Elf32_Half e_ehsize; Elf32_Half e_phentsize; Elf32_Half e_phnum; Elf32_Half e_shentsize; Elf32_Half e_shnum; Elf32_Half e_shstrndx; } Elf32_Ehdr;


elf64_hdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_hdr { unsigned char e_ident[EI_NIDENT]; Elf64_Half e_type; Elf64_Half e_machine; Elf64_Word e_version; Elf64_Addr e_entry; Elf64_Off e_phoff; Elf64_Off e_shoff; Elf64_Word e_flags; Elf64_Half e_ehsize; Elf64_Half e_phentsize; Elf64_Half e_phnum; Elf64_Half e_shentsize; Elf64_Half e_shnum; Elf64_Half e_shstrndx; } Elf64_Ehdr;


Elf64_Ehdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_hdr { unsigned char e_ident[EI_NIDENT]; Elf64_Half e_type; Elf64_Half e_machine; Elf64_Word e_version; Elf64_Addr e_entry; Elf64_Off e_phoff; Elf64_Off e_shoff; Elf64_Word e_flags; Elf64_Half e_ehsize; Elf64_Half e_phentsize; Elf64_Half e_phnum; Elf64_Half e_shentsize; Elf64_Half e_shnum; Elf64_Half e_shstrndx; } Elf64_Ehdr;


PF_R 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PF_R 0x4


PF_W 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PF_W 0x2


PF_X 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PF_X 0x1


elf32_phdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_phdr{ Elf32_Word p_type; Elf32_Off p_offset; Elf32_Addr p_vaddr; Elf32_Addr p_paddr; Elf32_Word p_filesz; Elf32_Word p_memsz; Elf32_Word p_flags; Elf32_Word p_align; } Elf32_Phdr;


Elf32_Phdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_phdr{ Elf32_Word p_type; Elf32_Off p_offset; Elf32_Addr p_vaddr; Elf32_Addr p_paddr; Elf32_Word p_filesz; Elf32_Word p_memsz; Elf32_Word p_flags; Elf32_Word p_align; } Elf32_Phdr;


elf64_phdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_phdr { Elf64_Word p_type; Elf64_Word p_flags; Elf64_Off p_offset; Elf64_Addr p_vaddr; Elf64_Addr p_paddr; Elf64_Xword p_filesz; Elf64_Xword p_memsz; Elf64_Xword p_align; } Elf64_Phdr;


Elf64_Phdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_phdr { Elf64_Word p_type; Elf64_Word p_flags; Elf64_Off p_offset; Elf64_Addr p_vaddr; Elf64_Addr p_paddr; Elf64_Xword p_filesz; Elf64_Xword p_memsz; Elf64_Xword p_align; } Elf64_Phdr;


SHT_NULL 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_NULL 0


SHT_PROGBITS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_PROGBITS 1


SHT_SYMTAB 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_SYMTAB 2


SHT_STRTAB 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_STRTAB 3


SHT_RELA 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_RELA 4


SHT_HASH 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_HASH 5


SHT_DYNAMIC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_DYNAMIC 6


SHT_NOTE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_NOTE 7


SHT_NOBITS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_NOBITS 8


SHT_REL 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_REL 9


SHT_SHLIB 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_SHLIB 10


SHT_DYNSYM 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_DYNSYM 11


SHT_NUM 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_NUM 12


SHT_LOPROC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_LOPROC 0x70000000


SHT_HIPROC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_HIPROC 0x7fffffff


SHT_LOUSER 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_LOUSER 0x80000000


SHT_HIUSER 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_HIUSER 0xffffffff


SHF_WRITE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHF_WRITE 0x1


SHF_ALLOC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHF_ALLOC 0x2


SHF_EXECINSTR 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHF_EXECINSTR 0x4


SHF_MASKPROC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHF_MASKPROC 0xf0000000


SHN_UNDEF 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHN_UNDEF 0


SHN_LORESERVE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHN_LORESERVE 0xff00


SHN_LOPROC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHN_LOPROC 0xff00


SHN_HIPROC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHN_HIPROC 0xff1f


SHN_ABS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHN_ABS 0xfff1


SHN_COMMON 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHN_COMMON 0xfff2


SHN_HIRESERVE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHN_HIRESERVE 0xffff


elf32_shdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_shdr { Elf32_Word sh_name; Elf32_Word sh_type; Elf32_Word sh_flags; Elf32_Addr sh_addr; Elf32_Off sh_offset; Elf32_Word sh_size; Elf32_Word sh_link; Elf32_Word sh_info; Elf32_Word sh_addralign; Elf32_Word sh_entsize; } Elf32_Shdr;


Elf32_Shdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_shdr { Elf32_Word sh_name; Elf32_Word sh_type; Elf32_Word sh_flags; Elf32_Addr sh_addr; Elf32_Off sh_offset; Elf32_Word sh_size; Elf32_Word sh_link; Elf32_Word sh_info; Elf32_Word sh_addralign; Elf32_Word sh_entsize; } Elf32_Shdr;


elf64_shdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_shdr { Elf64_Word sh_name; Elf64_Word sh_type; Elf64_Xword sh_flags; Elf64_Addr sh_addr; Elf64_Off sh_offset; Elf64_Xword sh_size; Elf64_Word sh_link; Elf64_Word sh_info; Elf64_Xword sh_addralign; Elf64_Xword sh_entsize; } Elf64_Shdr;


Elf64_Shdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_shdr { Elf64_Word sh_name; Elf64_Word sh_type; Elf64_Xword sh_flags; Elf64_Addr sh_addr; Elf64_Off sh_offset; Elf64_Xword sh_size; Elf64_Word sh_link; Elf64_Word sh_info; Elf64_Xword sh_addralign; Elf64_Xword sh_entsize; } Elf64_Shdr;


EI_MAG0 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define EI_MAG0 0


EI_MAG1 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define EI_MAG1 1


EI_MAG2 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define EI_MAG2 2


EI_MAG3 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define EI_MAG3 3


EI_CLASS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define EI_CLASS 4


EI_DATA 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define EI_DATA 5


EI_VERSION 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define EI_VERSION 6


EI_OSABI 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define EI_OSABI 7


EI_PAD 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define EI_PAD 8


ELFMAG0 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFMAG0 0x7f


ELFMAG1 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFMAG1 'E'


ELFMAG2 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFMAG2 'L'


ELFMAG3 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFMAG3 'F'


ELFMAG 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFMAG "\177ELF"


SELFMAG 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SELFMAG 4


ELFCLASSNONE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFCLASSNONE 0


ELFCLASS32 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFCLASS32 1


ELFCLASS64 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFCLASS64 2


ELFCLASSNUM 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFCLASSNUM 3


ELFDATANONE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFDATANONE 0


ELFDATA2LSB 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFDATA2LSB 1


ELFDATA2MSB 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFDATA2MSB 2


EV_NONE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define EV_NONE 0


EV_CURRENT 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define EV_CURRENT 1


EV_NUM 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define EV_NUM 2


ELFOSABI_NONE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFOSABI_NONE 0


ELFOSABI_LINUX 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFOSABI_LINUX 3


ELF_OSABI 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELF_OSABI ELFOSABI_NONE


NT_PRSTATUS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_PRSTATUS 1


NT_PRFPREG 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_PRFPREG 2


NT_PRPSINFO 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_PRPSINFO 3


NT_TASKSTRUCT 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_TASKSTRUCT 4


NT_AUXV 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_AUXV 6


NT_PRXFPREG 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_PRXFPREG 0x46e62b7f


NT_PPC_VMX 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_PPC_VMX 0x100


NT_PPC_SPE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_PPC_SPE 0x101


NT_PPC_VSX 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_PPC_VSX 0x102


NT_386_TLS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_386_TLS 0x200


NT_386_IOPERM 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_386_IOPERM 0x201


NT_X86_XSTATE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_X86_XSTATE 0x202


NT_S390_HIGH_GPRS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_S390_HIGH_GPRS 0x300


NT_S390_TIMER 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_S390_TIMER 0x301


NT_S390_TODCMP 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_S390_TODCMP 0x302


NT_S390_TODPREG 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_S390_TODPREG 0x303


NT_S390_CTRS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_S390_CTRS 0x304


NT_S390_PREFIX 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_S390_PREFIX 0x305


NT_S390_LAST_BREAK 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_S390_LAST_BREAK 0x306


NT_S390_SYSTEM_CALL 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_S390_SYSTEM_CALL 0x307


NT_ARM_VFP 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_ARM_VFP 0x400


elf32_note 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_note { Elf32_Word n_namesz; Elf32_Word n_descsz; Elf32_Word n_type; } Elf32_Nhdr;


Elf32_Nhdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_note { Elf32_Word n_namesz; Elf32_Word n_descsz; Elf32_Word n_type; } Elf32_Nhdr;


elf64_note 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_note { Elf64_Word n_namesz; Elf64_Word n_descsz; Elf64_Word n_type; } Elf64_Nhdr;


Elf64_Nhdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_note { Elf64_Word n_namesz; Elf64_Word n_descsz; Elf64_Word n_type; } Elf64_Nhdr;


kobject_uevent 	( diff_type: Mod type: function-->prototype file: include/linux/kobject.h )
	-- static inline int kobject_uevent(struct kobject *kobj,enum kobject_action action)
	++ int kobject_uevent(struct kobject *kobj,enum kobject_action action);


kobject_uevent_env 	( diff_type: Mod type: function-->prototype file: include/linux/kobject.h )
	-- static inline int kobject_uevent_env(struct kobject *kobj,enum kobject_action action,char *envp[])
	++ int kobject_uevent_env(struct kobject *kobj,enum kobject_action action,char *envp[]);


add_uevent_var 	( diff_type: Mod type: function-->prototype file: include/linux/kobject.h )
	-- int add_uevent_var(struct kobj_uevent_env *env,const char *format,...)
	++ int add_uevent_var(struct kobj_uevent_env *env,const char *format,...);


kobject_action_type 	( diff_type: Mod type: function-->prototype file: include/linux/kobject.h )
	-- static inline int kobject_action_type(const char *buf,size_t count,enum kobject_action *type)
	++ int kobject_action_type(const char *buf,size_t count,enum kobject_action *type);


___module_cat 	( diff_type: Del type: macro file: include/linux/moduleparam.h )
	-- #define ___module_cat(a,b) __mod_ ## a ## b


__module_cat 	( diff_type: Del type: macro file: include/linux/moduleparam.h )
	-- #define __module_cat(a,b) ___module_cat(a,b)


__MODULE_INFO 	( diff_type: Mod type: macro file: include/linux/moduleparam.h )
	-- #define __MODULE_INFO(tag,name,info) struct __module_cat(name,__LINE__) {}
	++ #define __MODULE_INFO(tag,name,info) struct __UNIQUE_ID(name) {}


preempt_disable 	( diff_type: Mod type: macro file: include/linux/preempt.h )
	-- #define preempt_disable() do { } while (0)
	++ #define preempt_disable() barrier()


sched_preempt_enable_no_resched 	( diff_type: Mod type: macro file: include/linux/preempt.h )
	-- #define sched_preempt_enable_no_resched() do { } while (0)
	++ #define sched_preempt_enable_no_resched() barrier()


preempt_enable_no_resched 	( diff_type: Mod type: macro file: include/linux/preempt.h )
	-- #define preempt_enable_no_resched() do { } while (0)
	++ #define preempt_enable_no_resched() barrier()


preempt_enable 	( diff_type: Mod type: macro file: include/linux/preempt.h )
	-- #define preempt_enable() do { } while (0)
	++ #define preempt_enable() barrier()


preempt_disable_notrace 	( diff_type: Mod type: macro file: include/linux/preempt.h )
	-- #define preempt_disable_notrace() do { } while (0)
	++ #define preempt_disable_notrace() barrier()


preempt_enable_no_resched_notrace 	( diff_type: Mod type: macro file: include/linux/preempt.h )
	-- #define preempt_enable_no_resched_notrace() do { } while (0)
	++ #define preempt_enable_no_resched_notrace() barrier()


preempt_enable_notrace 	( diff_type: Mod type: macro file: include/linux/preempt.h )
	-- #define preempt_enable_notrace() do { } while (0)
	++ #define preempt_enable_notrace() barrier()


account_system_vtime 	( diff_type: Del type: prototype file: include/linux/hardirq.h )
	-- extern void account_system_vtime(struct task_struct *tsk);


__irq_enter 	( diff_type: Mod type: macro file: include/linux/hardirq.h )
	-- #define __irq_enter() do { account_system_vtime(current); add_preempt_count(HARDIRQ_OFFSET); trace_hardirq_enter(); } while (0)
	++ #define __irq_enter() do { vtime_account_irq_enter(current); add_preempt_count(HARDIRQ_OFFSET); trace_hardirq_enter(); } while (0)


__irq_exit 	( diff_type: Mod type: macro file: include/linux/hardirq.h )
	-- #define __irq_exit() do { trace_hardirq_exit(); account_system_vtime(current); sub_preempt_count(HARDIRQ_OFFSET); } while (0)
	++ #define __irq_exit() do { trace_hardirq_exit(); vtime_account_irq_exit(current); sub_preempt_count(HARDIRQ_OFFSET); } while (0)


ipi_call_lock 	( diff_type: Del type: prototype file: include/linux/smp.h )
	-- void ipi_call_lock(void);


ipi_call_unlock 	( diff_type: Del type: prototype file: include/linux/smp.h )
	-- void ipi_call_unlock(void);


ipi_call_lock_irq 	( diff_type: Del type: prototype file: include/linux/smp.h )
	-- void ipi_call_lock_irq(void);


ipi_call_unlock_irq 	( diff_type: Del type: prototype file: include/linux/smp.h )
	-- void ipi_call_unlock_irq(void);


num_booting_cpus 	( diff_type: Del type: function file: arch/x86/include/asm/smp.h )
	-- static inline int num_booting_cpus(void)


pt_regs 	( diff_type: All type: struct file: arch/x86/include/asm/ptrace.h-->arch/x86/include/uapi/asm/ptrace.h )
	-- struct pt_regs { unsigned long r15; unsigned long r14; unsigned long r13; unsigned long r12; unsigned long bp; unsigned long bx; unsigned long r11; unsigned long r10; unsigned long r9; unsigned long r8; unsigned long ax; unsigned long cx; unsigned long dx; unsigned long si; unsigned long di; unsigned long orig_ax; unsigned long ip; unsigned long cs; unsigned long flags; unsigned long sp; unsigned long ss; };
	++ struct pt_regs { unsigned long r15; unsigned long r14; unsigned long r13; unsigned long r12; unsigned long rbp; unsigned long rbx; unsigned long r11; unsigned long r10; unsigned long r9; unsigned long r8; unsigned long rax; unsigned long rcx; unsigned long rdx; unsigned long rsi; unsigned long rdi; unsigned long orig_rax; unsigned long rip; unsigned long cs; unsigned long eflags; unsigned long rsp; unsigned long ss; };


___GFP_NOTRACK 	( diff_type: Mod type: macro file: include/linux/gfp.h )
	-- #define ___GFP_NOTRACK 0
	++ #define ___GFP_NOTRACK 0x200000u


GFP_RECLAIM_MASK 	( diff_type: Mod type: macro file: include/linux/gfp.h )
	-- #define GFP_RECLAIM_MASK (__GFP_WAIT|__GFP_HIGH|__GFP_IO|__GFP_FS| __GFP_NOWARN|__GFP_REPEAT|__GFP_NOFAIL| __GFP_NORETRY|__GFP_NOMEMALLOC)
	++ #define GFP_RECLAIM_MASK (__GFP_WAIT|__GFP_HIGH|__GFP_IO|__GFP_FS| __GFP_NOWARN|__GFP_REPEAT|__GFP_NOFAIL| __GFP_NORETRY|__GFP_MEMALLOC|__GFP_NOMEMALLOC)


kmem_cache_cpu 	( diff_type: Mod type: struct file: include/linux/slub_def.h )
	-- struct kmem_cache_cpu { void **freelist; unsigned long tid; struct page *page; struct page *partial; int node; unsigned stat[NR_SLUB_STAT_ITEMS]; };
	++ struct kmem_cache_cpu { void **freelist; unsigned long tid; struct page *page; struct page *partial; unsigned stat[NR_SLUB_STAT_ITEMS]; };


kmem_cache 	( diff_type: Mod type: struct file: include/linux/slab_def.h )
	-- struct kmem_cache { unsigned int batchcount; unsigned int limit; unsigned int shared; unsigned int buffer_size; u32 reciprocal_buffer_size; unsigned int flags; unsigned int num; unsigned int gfporder; gfp_t gfpflags; size_t colour; unsigned int colour_off; struct kmem_cache *slabp_cache; unsigned int slab_size; unsigned int dflags; void (*ctor)(void *obj); const char *name; struct list_head next; unsigned long num_active; unsigned long num_allocations; unsigned long high_mark; unsigned long grown; unsigned long reaped; unsigned long errors; unsigned long max_freeable; unsigned long node_allocs; unsigned long node_frees; unsigned long node_overflow; atomic_t allochit; atomic_t allocmiss; atomic_t freehit; atomic_t freemiss; int obj_offset; int obj_size; struct kmem_list3 **nodelists; struct array_cache *array[NR_CPUS]; };
	++ struct kmem_cache { unsigned int batchcount; unsigned int limit; unsigned int shared; unsigned int size; u32 reciprocal_buffer_size; unsigned int flags; unsigned int num; unsigned int gfporder; gfp_t allocflags; size_t colour; unsigned int colour_off; struct kmem_cache *slabp_cache; unsigned int slab_size; void (*ctor)(void *obj); const char *name; struct list_head list; int refcount; int object_size; int align; unsigned long num_active; unsigned long num_allocations; unsigned long high_mark; unsigned long grown; unsigned long reaped; unsigned long errors; unsigned long max_freeable; unsigned long node_allocs; unsigned long node_frees; unsigned long node_overflow; atomic_t allochit; atomic_t allocmiss; atomic_t freehit; atomic_t freemiss; int obj_offset; struct memcg_cache_params *memcg_params; struct kmem_list3 **nodelists; struct array_cache *array[NR_CPUS + MAX_NUMNODES]; };


kmem_cache_alloc_trace 	( diff_type: Mod type: function file: include/linux/slab_def.h )
	-- kmem_cache_alloc_trace(size_t size,struct kmem_cache *cachep,gfp_t flags)
	++ kmem_cache_alloc_trace(struct kmem_cache *cachep,gfp_t flags,size_t size)


kmem_cache_alloc_node_trace 	( diff_type: Mod type: function file: include/linux/slab_def.h )
	-- kmem_cache_alloc_node_trace(size_t size,struct kmem_cache *cachep,gfp_t flags,int nodeid)
	++ kmem_cache_alloc_node_trace(struct kmem_cache *cachep,gfp_t flags,int nodeid,size_t size)


slab_buffer_size 	( diff_type: Del type: function file: include/linux/slab_def.h )
	-- static inline size_t slab_buffer_size(struct kmem_cache *cachep)


TBASE_DEFERRABLE_FLAG 	( diff_type: Del type: macro file: include/linux/timer.h )
	-- #define TBASE_DEFERRABLE_FLAG (0x1)


TIMER_INITIALIZER 	( diff_type: Mod type: macro file: include/linux/timer.h )
	-- #define TIMER_INITIALIZER(_function,_expires,_data) { .entry = { .prev = TIMER_ENTRY_STATIC }, .function = (_function), .expires = (_expires), .data = (_data), .base = &boot_tvec_bases, .slack = -1, __TIMER_LOCKDEP_MAP_INITIALIZER( __FILE__ ":" __stringify(__LINE__)) }
	++ #define TIMER_INITIALIZER(_function,_expires,_data) __TIMER_INITIALIZER((_function), (_expires), (_data), 0)


TBASE_MAKE_DEFERRED 	( diff_type: Del type: macro file: include/linux/timer.h )
	-- #define TBASE_MAKE_DEFERRED(ptr) ((struct tvec_base *) ((unsigned char *)(ptr) + TBASE_DEFERRABLE_FLAG))


TIMER_DEFERRED_INITIALIZER 	( diff_type: Mod type: macro file: include/linux/timer.h )
	-- #define TIMER_DEFERRED_INITIALIZER(_function,_expires,_data) { .entry = { .prev = TIMER_ENTRY_STATIC }, .function = (_function), .expires = (_expires), .data = (_data), .base = TBASE_MAKE_DEFERRED(&boot_tvec_bases), __TIMER_LOCKDEP_MAP_INITIALIZER( __FILE__ ":" __stringify(__LINE__)) }
	++ #define TIMER_DEFERRED_INITIALIZER(_function,_expires,_data) __TIMER_INITIALIZER((_function), (_expires), (_data), TIMER_DEFERRABLE)


init_timer_key 	( diff_type: Mod type: prototype file: include/linux/timer.h )
	-- void init_timer_key(struct timer_list *timer,const char *name,struct lock_class_key *key);
	++ void init_timer_key(struct timer_list *timer,unsigned int flags,const char *name, struct lock_class_key *key);


init_timer_deferrable_key 	( diff_type: Del type: prototype file: include/linux/timer.h )
	-- void init_timer_deferrable_key(struct timer_list *timer,const char *name,struct lock_class_key *key);


init_timer 	( diff_type: Mod type: macro file: include/linux/timer.h )
	-- #define init_timer(timer) init_timer_key((timer), NULL, NULL)
	++ #define init_timer(timer) __init_timer((timer), 0)


init_timer_deferrable 	( diff_type: Mod type: macro file: include/linux/timer.h )
	-- #define init_timer_deferrable(timer) init_timer_deferrable_key((timer), NULL, NULL)
	++ #define init_timer_deferrable(timer) __init_timer((timer), TIMER_DEFERRABLE)


init_timer_on_stack 	( diff_type: Mod type: macro file: include/linux/timer.h )
	-- #define init_timer_on_stack(timer) init_timer_on_stack_key((timer), NULL, NULL)
	++ #define init_timer_on_stack(timer) __init_timer_on_stack((timer), 0)


setup_timer 	( diff_type: Mod type: macro file: include/linux/timer.h )
	-- #define setup_timer(timer,fn,data) setup_timer_key((timer), NULL, NULL, (fn), (data))
	++ #define setup_timer(timer,fn,data) __setup_timer((timer), (fn), (data), 0)


setup_timer_on_stack 	( diff_type: Mod type: macro file: include/linux/timer.h )
	-- #define setup_timer_on_stack(timer,fn,data) setup_timer_on_stack_key((timer), NULL, NULL, (fn), (data))
	++ #define setup_timer_on_stack(timer,fn,data) __setup_timer_on_stack((timer), (fn), (data), 0)


setup_deferrable_timer_on_stack 	( diff_type: Mod type: macro file: include/linux/timer.h )
	-- #define setup_deferrable_timer_on_stack(timer,fn,data) setup_deferrable_timer_on_stack_key((timer), NULL, NULL, (fn), (data))
	++ #define setup_deferrable_timer_on_stack(timer,fn,data) __setup_timer_on_stack((timer), (fn), (data), TIMER_DEFERRABLE)


init_timer_on_stack_key 	( diff_type: Mod type: function file: include/linux/timer.h )
	-- static inline void init_timer_on_stack_key(struct timer_list *timer,const char *name,struct lock_class_key *key)
	++ static inline void init_timer_on_stack_key(struct timer_list *timer,unsigned int flags, const char *name,struct lock_class_key *key)


setup_timer_key 	( diff_type: Del type: function file: include/linux/timer.h )
	-- static inline void setup_timer_key(struct timer_list * timer,const char *name,struct lock_class_key *key,void (*function)(unsigned long),unsigned long data)


setup_timer_on_stack_key 	( diff_type: Del type: function file: include/linux/timer.h )
	-- static inline void setup_timer_on_stack_key(struct timer_list *timer,const char *name,struct lock_class_key *key,void (*function)(unsigned long),unsigned long data)


setup_deferrable_timer_on_stack_key 	( diff_type: Del type: prototype file: include/linux/timer.h )
	-- extern void setup_deferrable_timer_on_stack_key(struct timer_list *timer,const char *name,struct lock_class_key *key,void (*function)(unsigned long),unsigned long data);


LINUX_PCI_REGS_H 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define LINUX_PCI_REGS_H


PCI_VENDOR_ID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_VENDOR_ID 0x00


PCI_DEVICE_ID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_DEVICE_ID 0x02


PCI_COMMAND 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_COMMAND 0x04


PCI_COMMAND_IO 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_COMMAND_IO 0x1


PCI_COMMAND_MEMORY 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_COMMAND_MEMORY 0x2


PCI_COMMAND_MASTER 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_COMMAND_MASTER 0x4


PCI_COMMAND_SPECIAL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_COMMAND_SPECIAL 0x8


PCI_COMMAND_INVALIDATE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_COMMAND_INVALIDATE 0x10


PCI_COMMAND_VGA_PALETTE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_COMMAND_VGA_PALETTE 0x20


PCI_COMMAND_PARITY 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_COMMAND_PARITY 0x40


PCI_COMMAND_WAIT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_COMMAND_WAIT 0x80


PCI_COMMAND_SERR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_COMMAND_SERR 0x100


PCI_COMMAND_FAST_BACK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_COMMAND_FAST_BACK 0x200


PCI_COMMAND_INTX_DISABLE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_COMMAND_INTX_DISABLE 0x400


PCI_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS 0x06


PCI_STATUS_INTERRUPT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_INTERRUPT 0x08


PCI_STATUS_CAP_LIST 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_CAP_LIST 0x10


PCI_STATUS_66MHZ 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_66MHZ 0x20


PCI_STATUS_UDF 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_UDF 0x40


PCI_STATUS_FAST_BACK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_FAST_BACK 0x80


PCI_STATUS_PARITY 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_PARITY 0x100


PCI_STATUS_DEVSEL_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_DEVSEL_MASK 0x600


PCI_STATUS_DEVSEL_FAST 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_DEVSEL_FAST 0x000


PCI_STATUS_DEVSEL_MEDIUM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_DEVSEL_MEDIUM 0x200


PCI_STATUS_DEVSEL_SLOW 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_DEVSEL_SLOW 0x400


PCI_STATUS_SIG_TARGET_ABORT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_SIG_TARGET_ABORT 0x800


PCI_STATUS_REC_TARGET_ABORT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_REC_TARGET_ABORT 0x1000


PCI_STATUS_REC_MASTER_ABORT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_REC_MASTER_ABORT 0x2000


PCI_STATUS_SIG_SYSTEM_ERROR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_SIG_SYSTEM_ERROR 0x4000


PCI_STATUS_DETECTED_PARITY 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_DETECTED_PARITY 0x8000


PCI_CLASS_REVISION 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CLASS_REVISION 0x08


PCI_REVISION_ID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_REVISION_ID 0x08


PCI_CLASS_PROG 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CLASS_PROG 0x09


PCI_CLASS_DEVICE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CLASS_DEVICE 0x0a


PCI_CACHE_LINE_SIZE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CACHE_LINE_SIZE 0x0c


PCI_LATENCY_TIMER 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_LATENCY_TIMER 0x0d


PCI_HEADER_TYPE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_HEADER_TYPE 0x0e


PCI_HEADER_TYPE_NORMAL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_HEADER_TYPE_NORMAL 0


PCI_HEADER_TYPE_BRIDGE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_HEADER_TYPE_BRIDGE 1


PCI_HEADER_TYPE_CARDBUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_HEADER_TYPE_CARDBUS 2


PCI_BIST 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BIST 0x0f


PCI_BIST_CODE_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BIST_CODE_MASK 0x0f


PCI_BIST_START 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BIST_START 0x40


PCI_BIST_CAPABLE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BIST_CAPABLE 0x80


PCI_BASE_ADDRESS_0 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_0 0x10


PCI_BASE_ADDRESS_1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_1 0x14


PCI_BASE_ADDRESS_2 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_2 0x18


PCI_BASE_ADDRESS_3 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_3 0x1c


PCI_BASE_ADDRESS_4 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_4 0x20


PCI_BASE_ADDRESS_5 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_5 0x24


PCI_BASE_ADDRESS_SPACE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_SPACE 0x01


PCI_BASE_ADDRESS_SPACE_IO 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_SPACE_IO 0x01


PCI_BASE_ADDRESS_SPACE_MEMORY 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_SPACE_MEMORY 0x00


PCI_BASE_ADDRESS_MEM_TYPE_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_MEM_TYPE_MASK 0x06


PCI_BASE_ADDRESS_MEM_TYPE_32 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_MEM_TYPE_32 0x00


PCI_BASE_ADDRESS_MEM_TYPE_1M 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_MEM_TYPE_1M 0x02


PCI_BASE_ADDRESS_MEM_TYPE_64 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_MEM_TYPE_64 0x04


PCI_BASE_ADDRESS_MEM_PREFETCH 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_MEM_PREFETCH 0x08


PCI_BASE_ADDRESS_MEM_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_MEM_MASK (~0x0fUL)


PCI_BASE_ADDRESS_IO_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_IO_MASK (~0x03UL)


PCI_CARDBUS_CIS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CARDBUS_CIS 0x28


PCI_SUBSYSTEM_VENDOR_ID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SUBSYSTEM_VENDOR_ID 0x2c


PCI_SUBSYSTEM_ID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SUBSYSTEM_ID 0x2e


PCI_ROM_ADDRESS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ROM_ADDRESS 0x30


PCI_ROM_ADDRESS_ENABLE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ROM_ADDRESS_ENABLE 0x01


PCI_ROM_ADDRESS_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ROM_ADDRESS_MASK (~0x7ffUL)


PCI_CAPABILITY_LIST 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAPABILITY_LIST 0x34


PCI_INTERRUPT_LINE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_INTERRUPT_LINE 0x3c


PCI_INTERRUPT_PIN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_INTERRUPT_PIN 0x3d


PCI_MIN_GNT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MIN_GNT 0x3e


PCI_MAX_LAT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MAX_LAT 0x3f


PCI_PRIMARY_BUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PRIMARY_BUS 0x18


PCI_SECONDARY_BUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SECONDARY_BUS 0x19


PCI_SUBORDINATE_BUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SUBORDINATE_BUS 0x1a


PCI_SEC_LATENCY_TIMER 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SEC_LATENCY_TIMER 0x1b


PCI_IO_BASE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_IO_BASE 0x1c


PCI_IO_LIMIT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_IO_LIMIT 0x1d


PCI_IO_RANGE_TYPE_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_IO_RANGE_TYPE_MASK 0x0fUL


PCI_IO_RANGE_TYPE_16 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_IO_RANGE_TYPE_16 0x00


PCI_IO_RANGE_TYPE_32 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_IO_RANGE_TYPE_32 0x01


PCI_IO_RANGE_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_IO_RANGE_MASK (~0x0fUL)


PCI_SEC_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SEC_STATUS 0x1e


PCI_MEMORY_BASE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MEMORY_BASE 0x20


PCI_MEMORY_LIMIT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MEMORY_LIMIT 0x22


PCI_MEMORY_RANGE_TYPE_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MEMORY_RANGE_TYPE_MASK 0x0fUL


PCI_MEMORY_RANGE_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MEMORY_RANGE_MASK (~0x0fUL)


PCI_PREF_MEMORY_BASE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PREF_MEMORY_BASE 0x24


PCI_PREF_MEMORY_LIMIT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PREF_MEMORY_LIMIT 0x26


PCI_PREF_RANGE_TYPE_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PREF_RANGE_TYPE_MASK 0x0fUL


PCI_PREF_RANGE_TYPE_32 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PREF_RANGE_TYPE_32 0x00


PCI_PREF_RANGE_TYPE_64 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PREF_RANGE_TYPE_64 0x01


PCI_PREF_RANGE_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PREF_RANGE_MASK (~0x0fUL)


PCI_PREF_BASE_UPPER32 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PREF_BASE_UPPER32 0x28


PCI_PREF_LIMIT_UPPER32 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PREF_LIMIT_UPPER32 0x2c


PCI_IO_BASE_UPPER16 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_IO_BASE_UPPER16 0x30


PCI_IO_LIMIT_UPPER16 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_IO_LIMIT_UPPER16 0x32


PCI_ROM_ADDRESS1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ROM_ADDRESS1 0x38


PCI_BRIDGE_CONTROL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BRIDGE_CONTROL 0x3e


PCI_BRIDGE_CTL_PARITY 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BRIDGE_CTL_PARITY 0x01


PCI_BRIDGE_CTL_SERR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BRIDGE_CTL_SERR 0x02


PCI_BRIDGE_CTL_ISA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BRIDGE_CTL_ISA 0x04


PCI_BRIDGE_CTL_VGA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BRIDGE_CTL_VGA 0x08


PCI_BRIDGE_CTL_MASTER_ABORT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BRIDGE_CTL_MASTER_ABORT 0x20


PCI_BRIDGE_CTL_BUS_RESET 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BRIDGE_CTL_BUS_RESET 0x40


PCI_BRIDGE_CTL_FAST_BACK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BRIDGE_CTL_FAST_BACK 0x80


PCI_CB_CAPABILITY_LIST 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_CAPABILITY_LIST 0x14


PCI_CB_SEC_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_SEC_STATUS 0x16


PCI_CB_PRIMARY_BUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_PRIMARY_BUS 0x18


PCI_CB_CARD_BUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_CARD_BUS 0x19


PCI_CB_SUBORDINATE_BUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_SUBORDINATE_BUS 0x1a


PCI_CB_LATENCY_TIMER 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_LATENCY_TIMER 0x1b


PCI_CB_MEMORY_BASE_0 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_MEMORY_BASE_0 0x1c


PCI_CB_MEMORY_LIMIT_0 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_MEMORY_LIMIT_0 0x20


PCI_CB_MEMORY_BASE_1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_MEMORY_BASE_1 0x24


PCI_CB_MEMORY_LIMIT_1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_MEMORY_LIMIT_1 0x28


PCI_CB_IO_BASE_0 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_IO_BASE_0 0x2c


PCI_CB_IO_BASE_0_HI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_IO_BASE_0_HI 0x2e


PCI_CB_IO_LIMIT_0 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_IO_LIMIT_0 0x30


PCI_CB_IO_LIMIT_0_HI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_IO_LIMIT_0_HI 0x32


PCI_CB_IO_BASE_1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_IO_BASE_1 0x34


PCI_CB_IO_BASE_1_HI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_IO_BASE_1_HI 0x36


PCI_CB_IO_LIMIT_1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_IO_LIMIT_1 0x38


PCI_CB_IO_LIMIT_1_HI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_IO_LIMIT_1_HI 0x3a


PCI_CB_IO_RANGE_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_IO_RANGE_MASK (~0x03UL)


PCI_CB_BRIDGE_CONTROL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_BRIDGE_CONTROL 0x3e


PCI_CB_BRIDGE_CTL_PARITY 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_BRIDGE_CTL_PARITY 0x01


PCI_CB_BRIDGE_CTL_SERR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_BRIDGE_CTL_SERR 0x02


PCI_CB_BRIDGE_CTL_ISA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_BRIDGE_CTL_ISA 0x04


PCI_CB_BRIDGE_CTL_VGA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_BRIDGE_CTL_VGA 0x08


PCI_CB_BRIDGE_CTL_MASTER_ABORT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_BRIDGE_CTL_MASTER_ABORT 0x20


PCI_CB_BRIDGE_CTL_CB_RESET 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_BRIDGE_CTL_CB_RESET 0x40


PCI_CB_BRIDGE_CTL_16BIT_INT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_BRIDGE_CTL_16BIT_INT 0x80


PCI_CB_BRIDGE_CTL_PREFETCH_MEM0 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_BRIDGE_CTL_PREFETCH_MEM0 0x100


PCI_CB_BRIDGE_CTL_PREFETCH_MEM1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_BRIDGE_CTL_PREFETCH_MEM1 0x200


PCI_CB_BRIDGE_CTL_POST_WRITES 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_BRIDGE_CTL_POST_WRITES 0x400


PCI_CB_SUBSYSTEM_VENDOR_ID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_SUBSYSTEM_VENDOR_ID 0x40


PCI_CB_SUBSYSTEM_ID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_SUBSYSTEM_ID 0x42


PCI_CB_LEGACY_MODE_BASE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_LEGACY_MODE_BASE 0x44


PCI_CAP_LIST_ID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_LIST_ID 0


PCI_CAP_ID_PM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_PM 0x01


PCI_CAP_ID_AGP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_AGP 0x02


PCI_CAP_ID_VPD 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_VPD 0x03


PCI_CAP_ID_SLOTID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_SLOTID 0x04


PCI_CAP_ID_MSI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_MSI 0x05


PCI_CAP_ID_CHSWP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_CHSWP 0x06


PCI_CAP_ID_PCIX 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_PCIX 0x07


PCI_CAP_ID_HT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_HT 0x08


PCI_CAP_ID_VNDR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_VNDR 0x09


PCI_CAP_ID_DBG 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_DBG 0x0A


PCI_CAP_ID_CCRC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_CCRC 0x0B


PCI_CAP_ID_SHPC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_SHPC 0x0C


PCI_CAP_ID_SSVID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_SSVID 0x0D


PCI_CAP_ID_AGP3 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_AGP3 0x0E


PCI_CAP_ID_EXP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_EXP 0x10


PCI_CAP_ID_MSIX 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_MSIX 0x11


PCI_CAP_ID_AF 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_AF 0x13


PCI_CAP_LIST_NEXT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_LIST_NEXT 1


PCI_CAP_FLAGS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_FLAGS 2


PCI_CAP_SIZEOF 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_SIZEOF 4


PCI_PM_PMC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_PMC 2


PCI_PM_CAP_VER_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_VER_MASK 0x0007


PCI_PM_CAP_PME_CLOCK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_PME_CLOCK 0x0008


PCI_PM_CAP_RESERVED 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_RESERVED 0x0010


PCI_PM_CAP_DSI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_DSI 0x0020


PCI_PM_CAP_AUX_POWER 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_AUX_POWER 0x01C0


PCI_PM_CAP_D1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_D1 0x0200


PCI_PM_CAP_D2 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_D2 0x0400


PCI_PM_CAP_PME 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_PME 0x0800


PCI_PM_CAP_PME_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_PME_MASK 0xF800


PCI_PM_CAP_PME_D0 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_PME_D0 0x0800


PCI_PM_CAP_PME_D1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_PME_D1 0x1000


PCI_PM_CAP_PME_D2 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_PME_D2 0x2000


PCI_PM_CAP_PME_D3 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_PME_D3 0x4000


PCI_PM_CAP_PME_D3cold 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_PME_D3cold 0x8000


PCI_PM_CAP_PME_SHIFT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_PME_SHIFT 11


PCI_PM_CTRL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CTRL 4


PCI_PM_CTRL_STATE_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CTRL_STATE_MASK 0x0003


PCI_PM_CTRL_NO_SOFT_RESET 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CTRL_NO_SOFT_RESET 0x0008


PCI_PM_CTRL_PME_ENABLE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CTRL_PME_ENABLE 0x0100


PCI_PM_CTRL_DATA_SEL_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CTRL_DATA_SEL_MASK 0x1e00


PCI_PM_CTRL_DATA_SCALE_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CTRL_DATA_SCALE_MASK 0x6000


PCI_PM_CTRL_PME_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CTRL_PME_STATUS 0x8000


PCI_PM_PPB_EXTENSIONS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_PPB_EXTENSIONS 6


PCI_PM_PPB_B2_B3 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_PPB_B2_B3 0x40


PCI_PM_BPCC_ENABLE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_BPCC_ENABLE 0x80


PCI_PM_DATA_REGISTER 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_DATA_REGISTER 7


PCI_PM_SIZEOF 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_SIZEOF 8


PCI_AGP_VERSION 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_VERSION 2


PCI_AGP_RFU 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_RFU 3


PCI_AGP_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_STATUS 4


PCI_AGP_STATUS_RQ_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_STATUS_RQ_MASK 0xff000000


PCI_AGP_STATUS_SBA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_STATUS_SBA 0x0200


PCI_AGP_STATUS_64BIT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_STATUS_64BIT 0x0020


PCI_AGP_STATUS_FW 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_STATUS_FW 0x0010


PCI_AGP_STATUS_RATE4 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_STATUS_RATE4 0x0004


PCI_AGP_STATUS_RATE2 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_STATUS_RATE2 0x0002


PCI_AGP_STATUS_RATE1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_STATUS_RATE1 0x0001


PCI_AGP_COMMAND 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_COMMAND 8


PCI_AGP_COMMAND_RQ_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_COMMAND_RQ_MASK 0xff000000


PCI_AGP_COMMAND_SBA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_COMMAND_SBA 0x0200


PCI_AGP_COMMAND_AGP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_COMMAND_AGP 0x0100


PCI_AGP_COMMAND_64BIT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_COMMAND_64BIT 0x0020


PCI_AGP_COMMAND_FW 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_COMMAND_FW 0x0010


PCI_AGP_COMMAND_RATE4 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_COMMAND_RATE4 0x0004


PCI_AGP_COMMAND_RATE2 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_COMMAND_RATE2 0x0002


PCI_AGP_COMMAND_RATE1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_COMMAND_RATE1 0x0001


PCI_AGP_SIZEOF 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_SIZEOF 12


PCI_VPD_ADDR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_VPD_ADDR 2


PCI_VPD_ADDR_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_VPD_ADDR_MASK 0x7fff


PCI_VPD_ADDR_F 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_VPD_ADDR_F 0x8000


PCI_VPD_DATA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_VPD_DATA 4


PCI_SID_ESR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SID_ESR 2


PCI_SID_ESR_NSLOTS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SID_ESR_NSLOTS 0x1f


PCI_SID_ESR_FIC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SID_ESR_FIC 0x20


PCI_SID_CHASSIS_NR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SID_CHASSIS_NR 3


PCI_MSI_FLAGS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSI_FLAGS 2


PCI_MSI_FLAGS_64BIT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSI_FLAGS_64BIT 0x80


PCI_MSI_FLAGS_QSIZE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSI_FLAGS_QSIZE 0x70


PCI_MSI_FLAGS_QMASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSI_FLAGS_QMASK 0x0e


PCI_MSI_FLAGS_ENABLE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSI_FLAGS_ENABLE 0x01


PCI_MSI_FLAGS_MASKBIT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSI_FLAGS_MASKBIT 0x100


PCI_MSI_RFU 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSI_RFU 3


PCI_MSI_ADDRESS_LO 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSI_ADDRESS_LO 4


PCI_MSI_ADDRESS_HI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSI_ADDRESS_HI 8


PCI_MSI_DATA_32 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSI_DATA_32 8


PCI_MSI_MASK_32 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSI_MASK_32 12


PCI_MSI_DATA_64 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSI_DATA_64 12


PCI_MSI_MASK_64 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSI_MASK_64 16


PCI_MSIX_FLAGS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSIX_FLAGS 2


PCI_MSIX_FLAGS_QSIZE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSIX_FLAGS_QSIZE 0x7FF


PCI_MSIX_FLAGS_ENABLE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSIX_FLAGS_ENABLE (1 << 15)


PCI_MSIX_FLAGS_MASKALL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSIX_FLAGS_MASKALL (1 << 14)


PCI_MSIX_TABLE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSIX_TABLE 4


PCI_MSIX_PBA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSIX_PBA 8


PCI_MSIX_FLAGS_BIRMASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSIX_FLAGS_BIRMASK (7 << 0)


PCI_MSIX_ENTRY_SIZE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSIX_ENTRY_SIZE 16


PCI_MSIX_ENTRY_LOWER_ADDR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSIX_ENTRY_LOWER_ADDR 0


PCI_MSIX_ENTRY_UPPER_ADDR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSIX_ENTRY_UPPER_ADDR 4


PCI_MSIX_ENTRY_DATA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSIX_ENTRY_DATA 8


PCI_MSIX_ENTRY_VECTOR_CTRL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSIX_ENTRY_VECTOR_CTRL 12


PCI_MSIX_ENTRY_CTRL_MASKBIT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSIX_ENTRY_CTRL_MASKBIT 1


PCI_CHSWP_CSR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CHSWP_CSR 2


PCI_CHSWP_DHA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CHSWP_DHA 0x01


PCI_CHSWP_EIM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CHSWP_EIM 0x02


PCI_CHSWP_PIE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CHSWP_PIE 0x04


PCI_CHSWP_LOO 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CHSWP_LOO 0x08


PCI_CHSWP_PI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CHSWP_PI 0x30


PCI_CHSWP_EXT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CHSWP_EXT 0x40


PCI_CHSWP_INS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CHSWP_INS 0x80


PCI_AF_LENGTH 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AF_LENGTH 2


PCI_AF_CAP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AF_CAP 3


PCI_AF_CAP_TP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AF_CAP_TP 0x01


PCI_AF_CAP_FLR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AF_CAP_FLR 0x02


PCI_AF_CTRL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AF_CTRL 4


PCI_AF_CTRL_FLR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AF_CTRL_FLR 0x01


PCI_AF_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AF_STATUS 5


PCI_AF_STATUS_TP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AF_STATUS_TP 0x01


PCI_X_CMD 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD 2


PCI_X_CMD_DPERR_E 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_DPERR_E 0x0001


PCI_X_CMD_ERO 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_ERO 0x0002


PCI_X_CMD_READ_512 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_READ_512 0x0000


PCI_X_CMD_READ_1K 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_READ_1K 0x0004


PCI_X_CMD_READ_2K 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_READ_2K 0x0008


PCI_X_CMD_READ_4K 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_READ_4K 0x000c


PCI_X_CMD_MAX_READ 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_MAX_READ 0x000c


PCI_X_CMD_SPLIT_1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_SPLIT_1 0x0000


PCI_X_CMD_SPLIT_2 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_SPLIT_2 0x0010


PCI_X_CMD_SPLIT_3 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_SPLIT_3 0x0020


PCI_X_CMD_SPLIT_4 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_SPLIT_4 0x0030


PCI_X_CMD_SPLIT_8 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_SPLIT_8 0x0040


PCI_X_CMD_SPLIT_12 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_SPLIT_12 0x0050


PCI_X_CMD_SPLIT_16 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_SPLIT_16 0x0060


PCI_X_CMD_SPLIT_32 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_SPLIT_32 0x0070


PCI_X_CMD_MAX_SPLIT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_MAX_SPLIT 0x0070


PCI_X_CMD_VERSION 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_VERSION(x) (((x) >> 12) & 3)


PCI_X_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS 4


PCI_X_STATUS_DEVFN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS_DEVFN 0x000000ff


PCI_X_STATUS_BUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS_BUS 0x0000ff00


PCI_X_STATUS_64BIT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS_64BIT 0x00010000


PCI_X_STATUS_133MHZ 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS_133MHZ 0x00020000


PCI_X_STATUS_SPL_DISC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS_SPL_DISC 0x00040000


PCI_X_STATUS_UNX_SPL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS_UNX_SPL 0x00080000


PCI_X_STATUS_COMPLEX 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS_COMPLEX 0x00100000


PCI_X_STATUS_MAX_READ 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS_MAX_READ 0x00600000


PCI_X_STATUS_MAX_SPLIT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS_MAX_SPLIT 0x03800000


PCI_X_STATUS_MAX_CUM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS_MAX_CUM 0x1c000000


PCI_X_STATUS_SPL_ERR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS_SPL_ERR 0x20000000


PCI_X_STATUS_266MHZ 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS_266MHZ 0x40000000


PCI_X_STATUS_533MHZ 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS_533MHZ 0x80000000


PCI_SSVID_VENDOR_ID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SSVID_VENDOR_ID 4


PCI_SSVID_DEVICE_ID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SSVID_DEVICE_ID 6


PCI_EXP_FLAGS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_FLAGS 2


PCI_EXP_FLAGS_VERS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_FLAGS_VERS 0x000f


PCI_EXP_FLAGS_TYPE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_FLAGS_TYPE 0x00f0


PCI_EXP_TYPE_ENDPOINT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_TYPE_ENDPOINT 0x0


PCI_EXP_TYPE_LEG_END 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_TYPE_LEG_END 0x1


PCI_EXP_TYPE_ROOT_PORT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_TYPE_ROOT_PORT 0x4


PCI_EXP_TYPE_UPSTREAM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_TYPE_UPSTREAM 0x5


PCI_EXP_TYPE_DOWNSTREAM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_TYPE_DOWNSTREAM 0x6


PCI_EXP_TYPE_PCI_BRIDGE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_TYPE_PCI_BRIDGE 0x7


PCI_EXP_TYPE_PCIE_BRIDGE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_TYPE_PCIE_BRIDGE 0x8


PCI_EXP_TYPE_RC_END 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_TYPE_RC_END 0x9


PCI_EXP_TYPE_RC_EC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_TYPE_RC_EC 0xa


PCI_EXP_FLAGS_SLOT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_FLAGS_SLOT 0x0100


PCI_EXP_FLAGS_IRQ 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_FLAGS_IRQ 0x3e00


PCI_EXP_DEVCAP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP 4


PCI_EXP_DEVCAP_PAYLOAD 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP_PAYLOAD 0x07


PCI_EXP_DEVCAP_PHANTOM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP_PHANTOM 0x18


PCI_EXP_DEVCAP_EXT_TAG 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP_EXT_TAG 0x20


PCI_EXP_DEVCAP_L0S 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP_L0S 0x1c0


PCI_EXP_DEVCAP_L1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP_L1 0xe00


PCI_EXP_DEVCAP_ATN_BUT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP_ATN_BUT 0x1000


PCI_EXP_DEVCAP_ATN_IND 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP_ATN_IND 0x2000


PCI_EXP_DEVCAP_PWR_IND 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP_PWR_IND 0x4000


PCI_EXP_DEVCAP_RBER 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP_RBER 0x8000


PCI_EXP_DEVCAP_PWR_VAL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP_PWR_VAL 0x3fc0000


PCI_EXP_DEVCAP_PWR_SCL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP_PWR_SCL 0xc000000


PCI_EXP_DEVCAP_FLR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP_FLR 0x10000000


PCI_EXP_DEVCTL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL 8


PCI_EXP_DEVCTL_CERE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL_CERE 0x0001


PCI_EXP_DEVCTL_NFERE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL_NFERE 0x0002


PCI_EXP_DEVCTL_FERE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL_FERE 0x0004


PCI_EXP_DEVCTL_URRE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL_URRE 0x0008


PCI_EXP_DEVCTL_RELAX_EN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL_RELAX_EN 0x0010


PCI_EXP_DEVCTL_PAYLOAD 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL_PAYLOAD 0x00e0


PCI_EXP_DEVCTL_EXT_TAG 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL_EXT_TAG 0x0100


PCI_EXP_DEVCTL_PHANTOM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL_PHANTOM 0x0200


PCI_EXP_DEVCTL_AUX_PME 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL_AUX_PME 0x0400


PCI_EXP_DEVCTL_NOSNOOP_EN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL_NOSNOOP_EN 0x0800


PCI_EXP_DEVCTL_READRQ 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL_READRQ 0x7000


PCI_EXP_DEVCTL_BCR_FLR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL_BCR_FLR 0x8000


PCI_EXP_DEVSTA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVSTA 10


PCI_EXP_DEVSTA_CED 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVSTA_CED 0x01


PCI_EXP_DEVSTA_NFED 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVSTA_NFED 0x02


PCI_EXP_DEVSTA_FED 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVSTA_FED 0x04


PCI_EXP_DEVSTA_URD 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVSTA_URD 0x08


PCI_EXP_DEVSTA_AUXPD 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVSTA_AUXPD 0x10


PCI_EXP_DEVSTA_TRPND 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVSTA_TRPND 0x20


PCI_EXP_LNKCAP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCAP 12


PCI_EXP_LNKCAP_SLS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCAP_SLS 0x0000000f


PCI_EXP_LNKCAP_MLW 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCAP_MLW 0x000003f0


PCI_EXP_LNKCAP_ASPMS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCAP_ASPMS 0x00000c00


PCI_EXP_LNKCAP_L0SEL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCAP_L0SEL 0x00007000


PCI_EXP_LNKCAP_L1EL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCAP_L1EL 0x00038000


PCI_EXP_LNKCAP_CLKPM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCAP_CLKPM 0x00040000


PCI_EXP_LNKCAP_SDERC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCAP_SDERC 0x00080000


PCI_EXP_LNKCAP_DLLLARC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCAP_DLLLARC 0x00100000


PCI_EXP_LNKCAP_LBNC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCAP_LBNC 0x00200000


PCI_EXP_LNKCAP_PN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCAP_PN 0xff000000


PCI_EXP_LNKCTL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCTL 16


PCI_EXP_LNKCTL_ASPMC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCTL_ASPMC 0x0003


PCI_EXP_LNKCTL_RCB 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCTL_RCB 0x0008


PCI_EXP_LNKCTL_LD 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCTL_LD 0x0010


PCI_EXP_LNKCTL_RL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCTL_RL 0x0020


PCI_EXP_LNKCTL_CCC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCTL_CCC 0x0040


PCI_EXP_LNKCTL_ES 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCTL_ES 0x0080


PCI_EXP_LNKCTL_CLKREQ_EN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCTL_CLKREQ_EN 0x100


PCI_EXP_LNKCTL_HAWD 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCTL_HAWD 0x0200


PCI_EXP_LNKCTL_LBMIE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCTL_LBMIE 0x0400


PCI_EXP_LNKCTL_LABIE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCTL_LABIE 0x0800


PCI_EXP_LNKSTA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKSTA 18


PCI_EXP_LNKSTA_CLS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKSTA_CLS 0x000f


PCI_EXP_LNKSTA_CLS_2_5GB 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKSTA_CLS_2_5GB 0x01


PCI_EXP_LNKSTA_CLS_5_0GB 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKSTA_CLS_5_0GB 0x02


PCI_EXP_LNKSTA_NLW 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKSTA_NLW 0x03f0


PCI_EXP_LNKSTA_NLW_SHIFT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKSTA_NLW_SHIFT 4


PCI_EXP_LNKSTA_LT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKSTA_LT 0x0800


PCI_EXP_LNKSTA_SLC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKSTA_SLC 0x1000


PCI_EXP_LNKSTA_DLLLA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKSTA_DLLLA 0x2000


PCI_EXP_LNKSTA_LBMS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKSTA_LBMS 0x4000


PCI_EXP_LNKSTA_LABS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKSTA_LABS 0x8000


PCI_EXP_SLTCAP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCAP 20


PCI_EXP_SLTCAP_ABP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCAP_ABP 0x00000001


PCI_EXP_SLTCAP_PCP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCAP_PCP 0x00000002


PCI_EXP_SLTCAP_MRLSP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCAP_MRLSP 0x00000004


PCI_EXP_SLTCAP_AIP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCAP_AIP 0x00000008


PCI_EXP_SLTCAP_PIP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCAP_PIP 0x00000010


PCI_EXP_SLTCAP_HPS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCAP_HPS 0x00000020


PCI_EXP_SLTCAP_HPC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCAP_HPC 0x00000040


PCI_EXP_SLTCAP_SPLV 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCAP_SPLV 0x00007f80


PCI_EXP_SLTCAP_SPLS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCAP_SPLS 0x00018000


PCI_EXP_SLTCAP_EIP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCAP_EIP 0x00020000


PCI_EXP_SLTCAP_NCCS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCAP_NCCS 0x00040000


PCI_EXP_SLTCAP_PSN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCAP_PSN 0xfff80000


PCI_EXP_SLTCTL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCTL 24


PCI_EXP_SLTCTL_ABPE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCTL_ABPE 0x0001


PCI_EXP_SLTCTL_PFDE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCTL_PFDE 0x0002


PCI_EXP_SLTCTL_MRLSCE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCTL_MRLSCE 0x0004


PCI_EXP_SLTCTL_PDCE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCTL_PDCE 0x0008


PCI_EXP_SLTCTL_CCIE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCTL_CCIE 0x0010


PCI_EXP_SLTCTL_HPIE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCTL_HPIE 0x0020


PCI_EXP_SLTCTL_AIC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCTL_AIC 0x00c0


PCI_EXP_SLTCTL_PIC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCTL_PIC 0x0300


PCI_EXP_SLTCTL_PCC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCTL_PCC 0x0400


PCI_EXP_SLTCTL_EIC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCTL_EIC 0x0800


PCI_EXP_SLTCTL_DLLSCE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCTL_DLLSCE 0x1000


PCI_EXP_SLTSTA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTSTA 26


PCI_EXP_SLTSTA_ABP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTSTA_ABP 0x0001


PCI_EXP_SLTSTA_PFD 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTSTA_PFD 0x0002


PCI_EXP_SLTSTA_MRLSC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTSTA_MRLSC 0x0004


PCI_EXP_SLTSTA_PDC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTSTA_PDC 0x0008


PCI_EXP_SLTSTA_CC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTSTA_CC 0x0010


PCI_EXP_SLTSTA_MRLSS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTSTA_MRLSS 0x0020


PCI_EXP_SLTSTA_PDS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTSTA_PDS 0x0040


PCI_EXP_SLTSTA_EIS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTSTA_EIS 0x0080


PCI_EXP_SLTSTA_DLLSC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTSTA_DLLSC 0x0100


PCI_EXP_RTCTL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_RTCTL 28


PCI_EXP_RTCTL_SECEE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_RTCTL_SECEE 0x01


PCI_EXP_RTCTL_SENFEE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_RTCTL_SENFEE 0x02


PCI_EXP_RTCTL_SEFEE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_RTCTL_SEFEE 0x04


PCI_EXP_RTCTL_PMEIE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_RTCTL_PMEIE 0x08


PCI_EXP_RTCTL_CRSSVE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_RTCTL_CRSSVE 0x10


PCI_EXP_RTCAP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_RTCAP 30


PCI_EXP_RTSTA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_RTSTA 32


PCI_EXP_RTSTA_PME 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_RTSTA_PME 0x10000


PCI_EXP_RTSTA_PENDING 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_RTSTA_PENDING 0x20000


PCI_EXP_DEVCAP2 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP2 36


PCI_EXP_DEVCAP2_ARI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP2_ARI 0x20


PCI_EXP_DEVCAP2_LTR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP2_LTR 0x800


PCI_EXP_OBFF_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_OBFF_MASK 0xc0000


PCI_EXP_OBFF_MSG 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_OBFF_MSG 0x40000


PCI_EXP_OBFF_WAKE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_OBFF_WAKE 0x80000


PCI_EXP_DEVCTL2 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL2 40


PCI_EXP_DEVCTL2_ARI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL2_ARI 0x20


PCI_EXP_IDO_REQ_EN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_IDO_REQ_EN 0x100


PCI_EXP_IDO_CMP_EN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_IDO_CMP_EN 0x200


PCI_EXP_LTR_EN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LTR_EN 0x400


PCI_EXP_OBFF_MSGA_EN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_OBFF_MSGA_EN 0x2000


PCI_EXP_OBFF_MSGB_EN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_OBFF_MSGB_EN 0x4000


PCI_EXP_OBFF_WAKE_EN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_OBFF_WAKE_EN 0x6000


PCI_EXP_LNKCTL2 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCTL2 48


PCI_EXP_SLTCTL2 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCTL2 56


PCI_EXT_CAP_ID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXT_CAP_ID(header) (header & 0x0000ffff)


PCI_EXT_CAP_VER 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXT_CAP_VER(header) ((header >> 16) & 0xf)


PCI_EXT_CAP_NEXT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXT_CAP_NEXT(header) ((header >> 20) & 0xffc)


PCI_EXT_CAP_ID_ERR 	( diff_type: All type: macro file: include/linux/pci_regs.h-->include/uapi/linux/pci_regs.h )
	-- #define PCI_EXT_CAP_ID_ERR 1
	++ #define PCI_EXT_CAP_ID_ERR 0x01


PCI_EXT_CAP_ID_VC 	( diff_type: All type: macro file: include/linux/pci_regs.h-->include/uapi/linux/pci_regs.h )
	-- #define PCI_EXT_CAP_ID_VC 2
	++ #define PCI_EXT_CAP_ID_VC 0x02


PCI_EXT_CAP_ID_DSN 	( diff_type: All type: macro file: include/linux/pci_regs.h-->include/uapi/linux/pci_regs.h )
	-- #define PCI_EXT_CAP_ID_DSN 3
	++ #define PCI_EXT_CAP_ID_DSN 0x03


PCI_EXT_CAP_ID_PWR 	( diff_type: All type: macro file: include/linux/pci_regs.h-->include/uapi/linux/pci_regs.h )
	-- #define PCI_EXT_CAP_ID_PWR 4
	++ #define PCI_EXT_CAP_ID_PWR 0x04


PCI_EXT_CAP_ID_VNDR 	( diff_type: All type: macro file: include/linux/pci_regs.h-->include/uapi/linux/pci_regs.h )
	-- #define PCI_EXT_CAP_ID_VNDR 11
	++ #define PCI_EXT_CAP_ID_VNDR 0x0B


PCI_EXT_CAP_ID_ACS 	( diff_type: All type: macro file: include/linux/pci_regs.h-->include/uapi/linux/pci_regs.h )
	-- #define PCI_EXT_CAP_ID_ACS 13
	++ #define PCI_EXT_CAP_ID_ACS 0x0D


PCI_EXT_CAP_ID_ARI 	( diff_type: All type: macro file: include/linux/pci_regs.h-->include/uapi/linux/pci_regs.h )
	-- #define PCI_EXT_CAP_ID_ARI 14
	++ #define PCI_EXT_CAP_ID_ARI 0x0E


PCI_EXT_CAP_ID_ATS 	( diff_type: All type: macro file: include/linux/pci_regs.h-->include/uapi/linux/pci_regs.h )
	-- #define PCI_EXT_CAP_ID_ATS 15
	++ #define PCI_EXT_CAP_ID_ATS 0x0F


PCI_EXT_CAP_ID_SRIOV 	( diff_type: All type: macro file: include/linux/pci_regs.h-->include/uapi/linux/pci_regs.h )
	-- #define PCI_EXT_CAP_ID_SRIOV 16
	++ #define PCI_EXT_CAP_ID_SRIOV 0x10


PCI_EXT_CAP_ID_PRI 	( diff_type: All type: macro file: include/linux/pci_regs.h-->include/uapi/linux/pci_regs.h )
	-- #define PCI_EXT_CAP_ID_PRI 19
	++ #define PCI_EXT_CAP_ID_PRI 0x13


PCI_EXT_CAP_ID_LTR 	( diff_type: All type: macro file: include/linux/pci_regs.h-->include/uapi/linux/pci_regs.h )
	-- #define PCI_EXT_CAP_ID_LTR 24
	++ #define PCI_EXT_CAP_ID_LTR 0x18


PCI_EXT_CAP_ID_PASID 	( diff_type: All type: macro file: include/linux/pci_regs.h-->include/uapi/linux/pci_regs.h )
	-- #define PCI_EXT_CAP_ID_PASID 27
	++ #define PCI_EXT_CAP_ID_PASID 0x1B


PCI_ERR_UNCOR_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNCOR_STATUS 4


PCI_ERR_UNC_TRAIN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNC_TRAIN 0x00000001


PCI_ERR_UNC_DLP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNC_DLP 0x00000010


PCI_ERR_UNC_POISON_TLP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNC_POISON_TLP 0x00001000


PCI_ERR_UNC_FCP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNC_FCP 0x00002000


PCI_ERR_UNC_COMP_TIME 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNC_COMP_TIME 0x00004000


PCI_ERR_UNC_COMP_ABORT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNC_COMP_ABORT 0x00008000


PCI_ERR_UNC_UNX_COMP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNC_UNX_COMP 0x00010000


PCI_ERR_UNC_RX_OVER 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNC_RX_OVER 0x00020000


PCI_ERR_UNC_MALF_TLP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNC_MALF_TLP 0x00040000


PCI_ERR_UNC_ECRC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNC_ECRC 0x00080000


PCI_ERR_UNC_UNSUP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNC_UNSUP 0x00100000


PCI_ERR_UNCOR_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNCOR_MASK 8


PCI_ERR_UNCOR_SEVER 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNCOR_SEVER 12


PCI_ERR_COR_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_COR_STATUS 16


PCI_ERR_COR_RCVR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_COR_RCVR 0x00000001


PCI_ERR_COR_BAD_TLP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_COR_BAD_TLP 0x00000040


PCI_ERR_COR_BAD_DLLP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_COR_BAD_DLLP 0x00000080


PCI_ERR_COR_REP_ROLL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_COR_REP_ROLL 0x00000100


PCI_ERR_COR_REP_TIMER 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_COR_REP_TIMER 0x00001000


PCI_ERR_COR_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_COR_MASK 20


PCI_ERR_CAP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_CAP 24


PCI_ERR_CAP_FEP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_CAP_FEP(x) ((x) & 31)


PCI_ERR_CAP_ECRC_GENC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_CAP_ECRC_GENC 0x00000020


PCI_ERR_CAP_ECRC_GENE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_CAP_ECRC_GENE 0x00000040


PCI_ERR_CAP_ECRC_CHKC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_CAP_ECRC_CHKC 0x00000080


PCI_ERR_CAP_ECRC_CHKE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_CAP_ECRC_CHKE 0x00000100


PCI_ERR_HEADER_LOG 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_HEADER_LOG 28


PCI_ERR_ROOT_COMMAND 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_ROOT_COMMAND 44


PCI_ERR_ROOT_CMD_COR_EN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_ROOT_CMD_COR_EN 0x00000001


PCI_ERR_ROOT_CMD_NONFATAL_EN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_ROOT_CMD_NONFATAL_EN 0x00000002


PCI_ERR_ROOT_CMD_FATAL_EN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_ROOT_CMD_FATAL_EN 0x00000004


PCI_ERR_ROOT_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_ROOT_STATUS 48


PCI_ERR_ROOT_COR_RCV 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_ROOT_COR_RCV 0x00000001


PCI_ERR_ROOT_MULTI_COR_RCV 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_ROOT_MULTI_COR_RCV 0x00000002


PCI_ERR_ROOT_UNCOR_RCV 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_ROOT_UNCOR_RCV 0x00000004


PCI_ERR_ROOT_MULTI_UNCOR_RCV 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_ROOT_MULTI_UNCOR_RCV 0x00000008


PCI_ERR_ROOT_FIRST_FATAL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_ROOT_FIRST_FATAL 0x00000010


PCI_ERR_ROOT_NONFATAL_RCV 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_ROOT_NONFATAL_RCV 0x00000020


PCI_ERR_ROOT_FATAL_RCV 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_ROOT_FATAL_RCV 0x00000040


PCI_ERR_ROOT_ERR_SRC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_ROOT_ERR_SRC 52


PCI_VC_PORT_REG1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_VC_PORT_REG1 4


PCI_VC_PORT_REG2 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_VC_PORT_REG2 8


PCI_VC_PORT_CTRL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_VC_PORT_CTRL 12


PCI_VC_PORT_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_VC_PORT_STATUS 14


PCI_VC_RES_CAP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_VC_RES_CAP 16


PCI_VC_RES_CTRL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_VC_RES_CTRL 20


PCI_VC_RES_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_VC_RES_STATUS 26


PCI_PWR_DSR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PWR_DSR 4


PCI_PWR_DATA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PWR_DATA 8


PCI_PWR_DATA_BASE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PWR_DATA_BASE(x) ((x) & 0xff)


PCI_PWR_DATA_SCALE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PWR_DATA_SCALE(x) (((x) >> 8) & 3)


PCI_PWR_DATA_PM_SUB 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PWR_DATA_PM_SUB(x) (((x) >> 10) & 7)


PCI_PWR_DATA_PM_STATE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PWR_DATA_PM_STATE(x) (((x) >> 13) & 3)


PCI_PWR_DATA_TYPE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PWR_DATA_TYPE(x) (((x) >> 15) & 7)


PCI_PWR_DATA_RAIL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PWR_DATA_RAIL(x) (((x) >> 18) & 7)


PCI_PWR_CAP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PWR_CAP 12


PCI_PWR_CAP_BUDGET 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PWR_CAP_BUDGET(x) ((x) & 1)


HT_3BIT_CAP_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_3BIT_CAP_MASK 0xE0


HT_CAPTYPE_SLAVE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_CAPTYPE_SLAVE 0x00


HT_CAPTYPE_HOST 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_CAPTYPE_HOST 0x20


HT_5BIT_CAP_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_5BIT_CAP_MASK 0xF8


HT_CAPTYPE_IRQ 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_CAPTYPE_IRQ 0x80


HT_CAPTYPE_REMAPPING_40 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_CAPTYPE_REMAPPING_40 0xA0


HT_CAPTYPE_REMAPPING_64 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_CAPTYPE_REMAPPING_64 0xA2


HT_CAPTYPE_UNITID_CLUMP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_CAPTYPE_UNITID_CLUMP 0x90


HT_CAPTYPE_EXTCONF 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_CAPTYPE_EXTCONF 0x98


HT_CAPTYPE_MSI_MAPPING 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_CAPTYPE_MSI_MAPPING 0xA8


HT_MSI_FLAGS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_MSI_FLAGS 0x02


HT_MSI_FLAGS_ENABLE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_MSI_FLAGS_ENABLE 0x1


HT_MSI_FLAGS_FIXED 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_MSI_FLAGS_FIXED 0x2


HT_MSI_FIXED_ADDR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_MSI_FIXED_ADDR 0x00000000FEE00000ULL


HT_MSI_ADDR_LO 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_MSI_ADDR_LO 0x04


HT_MSI_ADDR_LO_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_MSI_ADDR_LO_MASK 0xFFF00000


HT_MSI_ADDR_HI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_MSI_ADDR_HI 0x08


HT_CAPTYPE_DIRECT_ROUTE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_CAPTYPE_DIRECT_ROUTE 0xB0


HT_CAPTYPE_VCSET 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_CAPTYPE_VCSET 0xB8


HT_CAPTYPE_ERROR_RETRY 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_CAPTYPE_ERROR_RETRY 0xC0


HT_CAPTYPE_GEN3 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_CAPTYPE_GEN3 0xD0


HT_CAPTYPE_PM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_CAPTYPE_PM 0xE0


PCI_ARI_CAP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ARI_CAP 0x04


PCI_ARI_CAP_MFVC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ARI_CAP_MFVC 0x0001


PCI_ARI_CAP_ACS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ARI_CAP_ACS 0x0002


PCI_ARI_CAP_NFN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ARI_CAP_NFN(x) (((x) >> 8) & 0xff)


PCI_ARI_CTRL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ARI_CTRL 0x06


PCI_ARI_CTRL_MFVC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ARI_CTRL_MFVC 0x0001


PCI_ARI_CTRL_ACS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ARI_CTRL_ACS 0x0002


PCI_ARI_CTRL_FG 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ARI_CTRL_FG(x) (((x) >> 4) & 7)


PCI_ATS_CAP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ATS_CAP 0x04


PCI_ATS_CAP_QDEP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ATS_CAP_QDEP(x) ((x) & 0x1f)


PCI_ATS_MAX_QDEP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ATS_MAX_QDEP 32


PCI_ATS_CTRL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ATS_CTRL 0x06


PCI_ATS_CTRL_ENABLE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ATS_CTRL_ENABLE 0x8000


PCI_ATS_CTRL_STU 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ATS_CTRL_STU(x) ((x) & 0x1f)


PCI_ATS_MIN_STU 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ATS_MIN_STU 12


PCI_PRI_CTRL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PRI_CTRL 0x04


PCI_PRI_CTRL_ENABLE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PRI_CTRL_ENABLE 0x01


PCI_PRI_CTRL_RESET 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PRI_CTRL_RESET 0x02


PCI_PRI_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PRI_STATUS 0x06


PCI_PRI_STATUS_RF 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PRI_STATUS_RF 0x001


PCI_PRI_STATUS_UPRGI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PRI_STATUS_UPRGI 0x002


PCI_PRI_STATUS_STOPPED 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PRI_STATUS_STOPPED 0x100


PCI_PRI_MAX_REQ 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PRI_MAX_REQ 0x08


PCI_PRI_ALLOC_REQ 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PRI_ALLOC_REQ 0x0c


PCI_PASID_CAP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PASID_CAP 0x04


PCI_PASID_CAP_EXEC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PASID_CAP_EXEC 0x02


PCI_PASID_CAP_PRIV 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PASID_CAP_PRIV 0x04


PCI_PASID_CTRL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PASID_CTRL 0x06


PCI_PASID_CTRL_ENABLE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PASID_CTRL_ENABLE 0x01


PCI_PASID_CTRL_EXEC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PASID_CTRL_EXEC 0x02


PCI_PASID_CTRL_PRIV 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PASID_CTRL_PRIV 0x04


PCI_SRIOV_CAP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_CAP 0x04


PCI_SRIOV_CAP_VFM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_CAP_VFM 0x01


PCI_SRIOV_CAP_INTR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_CAP_INTR(x) ((x) >> 21)


PCI_SRIOV_CTRL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_CTRL 0x08


PCI_SRIOV_CTRL_VFE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_CTRL_VFE 0x01


PCI_SRIOV_CTRL_VFM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_CTRL_VFM 0x02


PCI_SRIOV_CTRL_INTR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_CTRL_INTR 0x04


PCI_SRIOV_CTRL_MSE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_CTRL_MSE 0x08


PCI_SRIOV_CTRL_ARI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_CTRL_ARI 0x10


PCI_SRIOV_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_STATUS 0x0a


PCI_SRIOV_STATUS_VFM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_STATUS_VFM 0x01


PCI_SRIOV_INITIAL_VF 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_INITIAL_VF 0x0c


PCI_SRIOV_TOTAL_VF 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_TOTAL_VF 0x0e


PCI_SRIOV_NUM_VF 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_NUM_VF 0x10


PCI_SRIOV_FUNC_LINK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_FUNC_LINK 0x12


PCI_SRIOV_VF_OFFSET 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_VF_OFFSET 0x14


PCI_SRIOV_VF_STRIDE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_VF_STRIDE 0x16


PCI_SRIOV_VF_DID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_VF_DID 0x1a


PCI_SRIOV_SUP_PGSIZE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_SUP_PGSIZE 0x1c


PCI_SRIOV_SYS_PGSIZE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_SYS_PGSIZE 0x20


PCI_SRIOV_BAR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_BAR 0x24


PCI_SRIOV_NUM_BARS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_NUM_BARS 6


PCI_SRIOV_VFM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_VFM 0x3c


PCI_SRIOV_VFM_BIR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_VFM_BIR(x) ((x) & 7)


PCI_SRIOV_VFM_OFFSET 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_VFM_OFFSET(x) ((x) & ~7)


PCI_SRIOV_VFM_UA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_VFM_UA 0x0


PCI_SRIOV_VFM_MI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_VFM_MI 0x1


PCI_SRIOV_VFM_MO 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_VFM_MO 0x2


PCI_SRIOV_VFM_AV 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_VFM_AV 0x3


PCI_LTR_MAX_SNOOP_LAT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_LTR_MAX_SNOOP_LAT 0x4


PCI_LTR_MAX_NOSNOOP_LAT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_LTR_MAX_NOSNOOP_LAT 0x6


PCI_LTR_VALUE_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_LTR_VALUE_MASK 0x000003ff


PCI_LTR_SCALE_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_LTR_SCALE_MASK 0x00001c00


PCI_LTR_SCALE_SHIFT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_LTR_SCALE_SHIFT 10


PCI_ACS_CAP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ACS_CAP 0x04


PCI_ACS_SV 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ACS_SV 0x01


PCI_ACS_TB 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ACS_TB 0x02


PCI_ACS_RR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ACS_RR 0x04


PCI_ACS_CR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ACS_CR 0x08


PCI_ACS_UF 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ACS_UF 0x10


PCI_ACS_EC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ACS_EC 0x20


PCI_ACS_DT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ACS_DT 0x40


PCI_ACS_CTRL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ACS_CTRL 0x06


PCI_ACS_EGRESS_CTL_V 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ACS_EGRESS_CTL_V 0x08


usb_device_id 	( diff_type: Mod type: struct file: include/linux/mod_devicetable.h )
	-- struct usb_device_id { __u16 match_flags; __u16 idVendor; __u16 idProduct; __u16 bcdDevice_lo; __u16 bcdDevice_hi; __u8 bDeviceClass; __u8 bDeviceSubClass; __u8 bDeviceProtocol; __u8 bInterfaceClass; __u8 bInterfaceSubClass; __u8 bInterfaceProtocol; kernel_ulong_t driver_info; };
	++ struct usb_device_id { __u16 match_flags; __u16 idVendor; __u16 idProduct; __u16 bcdDevice_lo; __u16 bcdDevice_hi; __u8 bDeviceClass; __u8 bDeviceSubClass; __u8 bDeviceProtocol; __u8 bInterfaceClass; __u8 bInterfaceSubClass; __u8 bInterfaceProtocol; __u8 bInterfaceNumber; kernel_ulong_t driver_info };


of_device_id 	( diff_type: Mod type: struct file: include/linux/mod_devicetable.h )
	-- struct of_device_id { char name[32]; char type[32]; char compatible[128]; void *data; kernel_ulong_t data; };
	++ struct of_device_id { char name[32]; char type[32]; char compatible[128]; const void *data; kernel_ulong_t data; };


__initconst 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define __initconst __section(.init.rodata)
	++ #define __initconst __constsection(.init.rodata)


__refconst 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define __refconst __section(.ref.rodata)
	++ #define __refconst __constsection(.ref.rodata)


__devinit 	( diff_type: Del type: macro file: include/linux/init.h )
	-- #define __devinit __section(.devinit.text) __cold notrace


__devinitdata 	( diff_type: Del type: macro file: include/linux/init.h )
	-- #define __devinitdata __section(.devinit.data)


__devinitconst 	( diff_type: Del type: macro file: include/linux/init.h )
	-- #define __devinitconst __section(.devinit.rodata)


__devexit 	( diff_type: Del type: macro file: include/linux/init.h )
	-- #define __devexit __section(.devexit.text) __exitused __cold notrace


__devexitdata 	( diff_type: Del type: macro file: include/linux/init.h )
	-- #define __devexitdata __section(.devexit.data)


__devexitconst 	( diff_type: Del type: macro file: include/linux/init.h )
	-- #define __devexitconst __section(.devexit.rodata)


__cpuinitconst 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define __cpuinitconst __section(.cpuinit.rodata)
	++ #define __cpuinitconst __constsection(.cpuinit.rodata)


__cpuexitconst 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define __cpuexitconst __section(.cpuexit.rodata)
	++ #define __cpuexitconst __constsection(.cpuexit.rodata)


__meminitconst 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define __meminitconst __section(.meminit.rodata)
	++ #define __meminitconst __constsection(.meminit.rodata)


__memexitconst 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define __memexitconst __section(.memexit.rodata)
	++ #define __memexitconst __constsection(.memexit.rodata)


__DEVINIT 	( diff_type: Del type: macro file: include/linux/init.h )
	-- #define __DEVINIT .section ".devinit.text","ax"


__DEVINITDATA 	( diff_type: Del type: macro file: include/linux/init.h )
	-- #define __DEVINITDATA .section ".devinit.data","aw"


__DEVINITRODATA 	( diff_type: Del type: macro file: include/linux/init.h )
	-- #define __DEVINITRODATA .section ".devinit.rodata","a"


__define_initcall 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define __define_initcall(level,fn,id) static initcall_t __initcall_##fn##id __used __attribute__((__section__(".initcall" level ".init"))) = fn
	++ #define __define_initcall(fn,id) static initcall_t __initcall_##fn##id __used __attribute__((__section__(".initcall" #id ".init"))) = fn


pure_initcall 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define pure_initcall(fn) __define_initcall("0",fn,0)
	++ #define pure_initcall(fn) __define_initcall(fn,0)


core_initcall_sync 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define core_initcall_sync(fn) __define_initcall("1s",fn,1s)
	++ #define core_initcall_sync(fn) __define_initcall(fn,1s)


postcore_initcall_sync 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define postcore_initcall_sync(fn) __define_initcall("2s",fn,2s)
	++ #define postcore_initcall_sync(fn) __define_initcall(fn,2s)


arch_initcall_sync 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define arch_initcall_sync(fn) __define_initcall("3s",fn,3s)
	++ #define arch_initcall_sync(fn) __define_initcall(fn,3s)


subsys_initcall_sync 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define subsys_initcall_sync(fn) __define_initcall("4s",fn,4s)
	++ #define subsys_initcall_sync(fn) __define_initcall(fn,4s)


fs_initcall_sync 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define fs_initcall_sync(fn) __define_initcall("5s",fn,5s)
	++ #define fs_initcall_sync(fn) __define_initcall(fn,5s)


rootfs_initcall 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define rootfs_initcall(fn) __define_initcall("rootfs",fn,rootfs)
	++ #define rootfs_initcall(fn) __define_initcall(fn,rootfs)


device_initcall_sync 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define device_initcall_sync(fn) __define_initcall("6s",fn,6s)
	++ #define device_initcall_sync(fn) __define_initcall(fn,6s)


late_initcall_sync 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define late_initcall_sync(fn) __define_initcall("7s",fn,7s)
	++ #define late_initcall_sync(fn) __define_initcall(fn,7s)


__devexit_p 	( diff_type: Del type: macro file: include/linux/init.h )
	-- #define __devexit_p(x) NULL


device_driver 	( diff_type: Mod type: struct file: include/linux/device.h )
	-- struct device_driver { const char *name; struct bus_type *bus; struct module *owner; const char *mod_name; bool suppress_bind_attrs; const struct of_device_id *of_match_table; int (*probe) (struct device *dev); int (*remove) (struct device *dev); void (*shutdown) (struct device *dev); int (*suspend) (struct device *dev, pm_message_t state); int (*resume) (struct device *dev); const struct attribute_group **groups; const struct dev_pm_ops *pm; struct driver_private *p; };
	++ struct device_driver { const char *name; struct bus_type *bus; struct module *owner; const char *mod_name; bool suppress_bind_attrs; const struct of_device_id *of_match_table; const struct acpi_device_id *acpi_match_table; int (*probe) (struct device *dev); int (*remove) (struct device *dev); void (*shutdown) (struct device *dev); int (*suspend) (struct device *dev, pm_message_t state); int (*resume) (struct device *dev); const struct attribute_group **groups; const struct dev_pm_ops *pm; struct driver_private *p; };


device 	( diff_type: Mod type: struct file: include/linux/device.h )
	-- struct device { struct device *parent; struct device_private *p; struct kobject kobj; const char *init_name; const struct device_type *type; struct mutex mutex; struct bus_type *bus; struct device_driver *driver; void *platform_data; struct dev_pm_info power; struct dev_pm_domain *pm_domain; int numa_node; u64 *dma_mask; u64 coherent_dma_mask; struct device_dma_parameters *dma_parms; struct list_head dma_pools; struct dma_coherent_mem *dma_mem; struct cma *cma_area; struct dev_archdata archdata; struct device_node *of_node; dev_t devt; u32 id; spinlock_t devres_lock; struct list_head devres_head; struct klist_node knode_class; const struct attribute_group **groups; void (*release)(struct device *dev); };
	++ struct device { struct device *parent; struct device_private *p; struct kobject kobj; const char *init_name; const struct device_type *type; struct mutex mutex; struct bus_type *bus; struct device_driver *driver; void *platform_data; struct dev_pm_info power; struct dev_pm_domain *pm_domain; int numa_node; u64 *dma_mask; u64 coherent_dma_mask; struct device_dma_parameters *dma_parms; struct list_head dma_pools; struct dma_coherent_mem *dma_mem; struct cma *cma_area; struct dev_archdata archdata; struct device_node *of_node; struct acpi_dev_node acpi_node; dev_t devt; u32 id; spinlock_t devres_lock; struct list_head devres_head; struct klist_node knode_class; const struct attribute_group **groups; void (*release)(struct device *dev); struct iommu_group *iommu_group; };


dev_dbg_ratelimited 	( diff_type: Mod type: macro file: include/linux/device.h )
	-- #define dev_dbg_ratelimited(dev,fmt,...) dev_level_ratelimited(dev_dbg, dev, fmt, ##__VA_ARGS__)
	++ #define dev_dbg_ratelimited(dev,fmt,...) no_printk(KERN_DEBUG pr_fmt(fmt), ##__VA_ARGS__)


dma_map_ops 	( diff_type: Mod type: struct file: include/linux/dma-mapping.h )
	-- struct dma_map_ops { void* (*alloc)(struct device *dev, size_t size,dma_addr_t *dma_handle, gfp_t gfp,struct dma_attrs *attrs); void (*free)(struct device *dev, size_t size,void *vaddr, dma_addr_t dma_handle,struct dma_attrs *attrs); int (*mmap)(struct device *, struct vm_area_struct *,void *, dma_addr_t, size_t, struct dma_attrs *attrs); dma_addr_t (*map_page)(struct device *dev, struct page *page,unsigned long offset, size_t size,enum dma_data_direction dir,struct dma_attrs *attrs); void (*unmap_page)(struct device *dev, dma_addr_t dma_handle,size_t size, enum dma_data_direction dir,struct dma_attrs *attrs); int (*map_sg)(struct device *dev, struct scatterlist *sg,int nents, enum dma_data_direction dir,struct dma_attrs *attrs); void (*unmap_sg)(struct device *dev,struct scatterlist *sg, int nents,enum dma_data_direction dir,struct dma_attrs *attrs); void (*sync_single_for_cpu)(struct device *dev,dma_addr_t dma_handle, size_t size,enum dma_data_direction dir); void (*sync_single_for_device)(struct device *dev,dma_addr_t dma_handle, size_t size,enum dma_data_direction dir); void (*sync_sg_for_cpu)(struct device *dev,struct scatterlist *sg, int nents,enum dma_data_direction dir); void (*sync_sg_for_device)(struct device *dev,struct scatterlist *sg, int nents,enum dma_data_direction dir); int (*mapping_error)(struct device *dev, dma_addr_t dma_addr); int (*dma_supported)(struct device *dev, u64 mask); int (*set_dma_mask)(struct device *dev, u64 mask); u64 (*get_required_mask)(struct device *dev); int is_phys; };
	++ struct dma_map_ops { void* (*alloc)(struct device *dev, size_t size,dma_addr_t *dma_handle, gfp_t gfp,struct dma_attrs *attrs); void (*free)(struct device *dev, size_t size,void *vaddr, dma_addr_t dma_handle,struct dma_attrs *attrs); int (*mmap)(struct device *, struct vm_area_struct *,void *, dma_addr_t, size_t, struct dma_attrs *attrs); int (*get_sgtable)(struct device *dev, struct sg_table *sgt, void *,dma_addr_t, size_t, struct dma_attrs *attrs); dma_addr_t (*map_page)(struct device *dev, struct page *page,unsigned long offset, size_t size,enum dma_data_direction dir,struct dma_attrs *attrs); void (*unmap_page)(struct device *dev, dma_addr_t dma_handle,size_t size, enum dma_data_direction dir,struct dma_attrs *attrs); int (*map_sg)(struct device *dev, struct scatterlist *sg,int nents, enum dma_data_direction dir,struct dma_attrs *attrs); void (*unmap_sg)(struct device *dev,struct scatterlist *sg, int nents,enum dma_data_direction dir,struct dma_attrs *attrs); void (*sync_single_for_cpu)(struct device *dev,dma_addr_t dma_handle, size_t size,enum dma_data_direction dir); void (*sync_single_for_device)(struct device *dev,dma_addr_t dma_handle, size_t size,enum dma_data_direction dir); void (*sync_sg_for_cpu)(struct device *dev,struct scatterlist *sg, int nents,enum dma_data_direction dir); void (*sync_sg_for_device)(struct device *dev,struct scatterlist *sg, int nents,enum dma_data_direction dir); int (*mapping_error)(struct device *dev, dma_addr_t dma_addr); int (*dma_supported)(struct device *dev, u64 mask); int (*set_dma_mask)(struct device *dev, u64 mask); u64 (*get_required_mask)(struct device *dev); int is_phys; };


request_list 	( diff_type: Mod type: struct file: include/linux/blkdev.h )
	-- struct request_list { int count[2]; int starved[2]; int elvpriv; mempool_t *rq_pool; wait_queue_head_t wait[2]; };
	++ struct request_list { struct request_queue *q; struct blkcg_gq *blkg; int count[2]; int starved[2]; mempool_t *rq_pool; wait_queue_head_t wait[2]; unsigned int flags; };


request 	( diff_type: Mod type: struct file: include/linux/blkdev.h )
	-- struct request { struct list_head queuelist; struct call_single_data csd; struct request_queue *q; unsigned int cmd_flags; enum rq_cmd_type_bits cmd_type; unsigned long atomic_flags; int cpu; unsigned int __data_len; sector_t __sector; struct bio *bio; struct bio *biotail; struct hlist_node hash; struct rb_node rb_node; void *completion_data; }; struct io_cq *icq; void *priv[2]; } elv; struct { unsigned int seq; struct list_head list; rq_end_io_fn *saved_end_io; } flush; }; struct gendisk *rq_disk; struct hd_struct *part; unsigned long start_time; unsigned long long start_time_ns; unsigned long long io_start_time_ns; unsigned short nr_phys_segments; unsigned short nr_integrity_segments; unsigned short ioprio; int ref_count; void *special; char *buffer; int tag; int errors; unsigned char __cmd[BLK_MAX_CDB]; unsigned char *cmd; unsigned short cmd_len; unsigned int extra_len; unsigned int sense_len; unsigned int resid_len; void *sense; unsigned long deadline; struct list_head timeout_list; unsigned int timeout; int retries; rq_end_io_fn *end_io; void *end_io_data; struct request *next_rq; };
	++ struct request { struct list_head queuelist; struct call_single_data csd; struct request_queue *q; unsigned int cmd_flags; enum rq_cmd_type_bits cmd_type; unsigned long atomic_flags; int cpu; unsigned int __data_len; sector_t __sector; struct bio *bio; struct bio *biotail; struct hlist_node hash; struct rb_node rb_node; void *completion_data; }; struct io_cq *icq; void *priv[2]; } elv; struct { unsigned int seq; struct list_head list; rq_end_io_fn *saved_end_io; } flush; }; struct gendisk *rq_disk; struct hd_struct *part; unsigned long start_time; struct request_list *rl; unsigned long long start_time_ns; unsigned long long io_start_time_ns; unsigned short nr_phys_segments; unsigned short nr_integrity_segments; unsigned short ioprio; int ref_count; void *special; char *buffer; int tag; int errors; unsigned char __cmd[BLK_MAX_CDB]; unsigned char *cmd; unsigned short cmd_len; unsigned int extra_len; unsigned int sense_len; unsigned int resid_len; void *sense; unsigned long deadline; struct list_head timeout_list; unsigned int timeout; int retries; rq_end_io_fn *end_io; void *end_io_data; struct request *next_rq; };


queue_limits 	( diff_type: Mod type: struct file: include/linux/blkdev.h )
	-- struct queue_limits { unsigned long bounce_pfn; unsigned long seg_boundary_mask; unsigned int max_hw_sectors; unsigned int max_sectors; unsigned int max_segment_size; unsigned int physical_block_size; unsigned int alignment_offset; unsigned int io_min; unsigned int io_opt; unsigned int max_discard_sectors; unsigned int discard_granularity; unsigned int discard_alignment; unsigned short logical_block_size; unsigned short max_segments; unsigned short max_integrity_segments; unsigned char misaligned; unsigned char discard_misaligned; unsigned char cluster; unsigned char discard_zeroes_data; };
	++ struct queue_limits { unsigned long bounce_pfn; unsigned long seg_boundary_mask; unsigned int max_hw_sectors; unsigned int max_sectors; unsigned int max_segment_size; unsigned int physical_block_size; unsigned int alignment_offset; unsigned int io_min; unsigned int io_opt; unsigned int max_discard_sectors; unsigned int max_write_same_sectors; unsigned int discard_granularity; unsigned int discard_alignment; unsigned short logical_block_size; unsigned short max_segments; unsigned short max_integrity_segments; unsigned char misaligned; unsigned char discard_misaligned; unsigned char cluster; unsigned char discard_zeroes_data; };


request_queue 	( diff_type: Mod type: struct file: include/linux/blkdev.h )
	-- struct request_queue { struct list_head queue_head; struct request *last_merge; struct elevator_queue *elevator; struct request_list rq; request_fn_proc *request_fn; make_request_fn *make_request_fn; prep_rq_fn *prep_rq_fn; unprep_rq_fn *unprep_rq_fn; merge_bvec_fn *merge_bvec_fn; softirq_done_fn *softirq_done_fn; rq_timed_out_fn *rq_timed_out_fn; dma_drain_needed_fn *dma_drain_needed; lld_busy_fn *lld_busy_fn; sector_t end_sector; struct request *boundary_rq; struct delayed_work delay_work; struct backing_dev_info backing_dev_info; void *queuedata; unsigned long queue_flags; int id; gfp_t bounce_gfp; spinlock_t __queue_lock; spinlock_t *queue_lock; struct kobject kobj; unsigned long nr_requests; unsigned int nr_congestion_on; unsigned int nr_congestion_off; unsigned int nr_batching; unsigned int dma_drain_size; void *dma_drain_buffer; unsigned int dma_pad_mask; unsigned int dma_alignment; struct blk_queue_tag *queue_tags; struct list_head tag_busy_list; unsigned int nr_sorted; unsigned int in_flight[2]; unsigned int rq_timeout; struct timer_list timeout; struct list_head timeout_list; struct list_head icq_list; DECLARE_BITMAP (blkcg_pols, BLKCG_MAX_POLS); struct blkcg_gq *root_blkg; struct list_head blkg_list; struct queue_limits limits; unsigned int sg_timeout; unsigned int sg_reserved_size; int node; struct blk_trace *blk_trace; unsigned int flush_flags; unsigned int flush_not_queueable:1; unsigned int flush_queue_delayed:1; unsigned int flush_pending_idx:1; unsigned int flush_running_idx:1; unsigned long flush_pending_since; struct list_head flush_queue[2]; struct list_head flush_data_in_flight; struct request flush_rq; struct mutex sysfs_lock; int bypass_depth; bsg_job_fn *bsg_job_fn; int bsg_job_size; struct bsg_class_device bsg_dev; struct list_head all_q_node; struct throtl_data *td; };
	++ struct request_queue { struct list_head queue_head; struct request *last_merge; struct elevator_queue *elevator; int nr_rqs[2]; int nr_rqs_elvpriv; struct request_list root_rl; request_fn_proc *request_fn; make_request_fn *make_request_fn; prep_rq_fn *prep_rq_fn; unprep_rq_fn *unprep_rq_fn; merge_bvec_fn *merge_bvec_fn; softirq_done_fn *softirq_done_fn; rq_timed_out_fn *rq_timed_out_fn; dma_drain_needed_fn *dma_drain_needed; lld_busy_fn *lld_busy_fn; sector_t end_sector; struct request *boundary_rq; struct delayed_work delay_work; struct backing_dev_info backing_dev_info; void *queuedata; unsigned long queue_flags; int id; gfp_t bounce_gfp; spinlock_t __queue_lock; spinlock_t *queue_lock; struct kobject kobj; unsigned long nr_requests; unsigned int nr_congestion_on; unsigned int nr_congestion_off; unsigned int nr_batching; unsigned int dma_drain_size; void *dma_drain_buffer; unsigned int dma_pad_mask; unsigned int dma_alignment; struct blk_queue_tag *queue_tags; struct list_head tag_busy_list; unsigned int nr_sorted; unsigned int in_flight[2]; unsigned int request_fn_active; unsigned int rq_timeout; struct timer_list timeout; struct list_head timeout_list; struct list_head icq_list; DECLARE_BITMAP (blkcg_pols, BLKCG_MAX_POLS); struct blkcg_gq *root_blkg; struct list_head blkg_list; struct queue_limits limits; unsigned int sg_timeout; unsigned int sg_reserved_size; int node; struct blk_trace *blk_trace; unsigned int flush_flags; unsigned int flush_not_queueable:1; unsigned int flush_queue_delayed:1; unsigned int flush_pending_idx:1; unsigned int flush_running_idx:1; unsigned long flush_pending_since; struct list_head flush_queue[2]; struct list_head flush_data_in_flight; struct request flush_rq; struct mutex sysfs_lock; int bypass_depth; bsg_job_fn *bsg_job_fn; int bsg_job_size; struct bsg_class_device bsg_dev; struct list_head all_q_node; struct throtl_data *td; };


QUEUE_FLAG_DEAD 	( diff_type: Mod type: macro file: include/linux/blkdev.h )
	-- #define QUEUE_FLAG_DEAD 5
	++ #define QUEUE_FLAG_DEAD 19


blk_account_rq 	( diff_type: Mod type: macro file: include/linux/blkdev.h )
	-- #define blk_account_rq(rq) (((rq)->cmd_flags & REQ_STARTED) && ((rq)->cmd_type == REQ_TYPE_FS || ((rq)->cmd_flags & REQ_DISCARD)))
	++ #define blk_account_rq(rq) (((rq)->cmd_flags & REQ_STARTED) && ((rq)->cmd_type == REQ_TYPE_FS))


blk_queue_full 	( diff_type: Del type: function file: include/linux/blkdev.h )
	-- static inline int blk_queue_full(struct request_queue *q,int sync)


blk_set_queue_full 	( diff_type: Del type: function file: include/linux/blkdev.h )
	-- static inline void blk_set_queue_full(struct request_queue *q,int sync)


blk_clear_queue_full 	( diff_type: Del type: function file: include/linux/blkdev.h )
	-- static inline void blk_clear_queue_full(struct request_queue *q,int sync)


RQ_NOMERGE_FLAGS 	( diff_type: Del type: macro file: include/linux/blkdev.h )
	-- #define RQ_NOMERGE_FLAGS (REQ_NOMERGE | REQ_STARTED | REQ_SOFTBARRIER | REQ_FLUSH | REQ_FUA)


rq_mergeable 	( diff_type: Mod type: macro-->function file: include/linux/blkdev.h )
	-- #define rq_mergeable(rq) (!((rq)->cmd_flags & RQ_NOMERGE_FLAGS) && (((rq)->cmd_flags & REQ_DISCARD) || (rq)->cmd_type == REQ_TYPE_FS))
	++ static inline bool rq_mergeable(struct request *rq)


blk_plug_cb 	( diff_type: Mod type: struct file: include/linux/blkdev.h )
	-- struct blk_plug_cb { struct list_head list; void (*callback)(struct blk_plug_cb *); };
	++ struct blk_plug_cb { struct list_head list; blk_plug_cb_fn callback; void *data; };


_ASM_X86_TYPES_H 	( diff_type: Mov type: macro file: arch/x86/include/asm/types.h )
	-- arch/x86/include/uapi/asm/types.h
	++ #define _ASM_X86_TYPES_H


_LINUX_POSIX_TYPES_H 	( diff_type: Del type: macro file: include/linux/posix_types.h )
	-- #define _LINUX_POSIX_TYPES_H


__FD_SETSIZE 	( diff_type: Del type: macro file: include/linux/posix_types.h )
	-- #define __FD_SETSIZE 1024


__kernel_fd_set 	( diff_type: Del type: struct file: include/linux/posix_types.h )
	-- typedef struct { unsigned long fds_bits[__FD_SETSIZE / (8 * sizeof(long))]; } __kernel_fd_set;


_LINUX_BYTEORDER_LITTLE_ENDIAN_H 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define _LINUX_BYTEORDER_LITTLE_ENDIAN_H


__LITTLE_ENDIAN 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __LITTLE_ENDIAN 1234


__LITTLE_ENDIAN_BITFIELD 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __LITTLE_ENDIAN_BITFIELD


__constant_htonl 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_htonl(x) ((__force __be32)___constant_swab32((x)))


__constant_ntohl 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_ntohl(x) ___constant_swab32((__force __be32)(x))


__constant_htons 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_htons(x) ((__force __be16)___constant_swab16((x)))


__constant_ntohs 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_ntohs(x) ___constant_swab16((__force __be16)(x))


__constant_cpu_to_le64 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_cpu_to_le64(x) ((__force __le64)(__u64)(x))


__constant_le64_to_cpu 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_le64_to_cpu(x) ((__force __u64)(__le64)(x))


__constant_cpu_to_le32 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_cpu_to_le32(x) ((__force __le32)(__u32)(x))


__constant_le32_to_cpu 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_le32_to_cpu(x) ((__force __u32)(__le32)(x))


__constant_cpu_to_le16 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_cpu_to_le16(x) ((__force __le16)(__u16)(x))


__constant_le16_to_cpu 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_le16_to_cpu(x) ((__force __u16)(__le16)(x))


__constant_cpu_to_be64 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_cpu_to_be64(x) ((__force __be64)___constant_swab64((x)))


__constant_be64_to_cpu 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_be64_to_cpu(x) ___constant_swab64((__force __u64)(__be64)(x))


__constant_cpu_to_be32 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_cpu_to_be32(x) ((__force __be32)___constant_swab32((x)))


__constant_be32_to_cpu 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_be32_to_cpu(x) ___constant_swab32((__force __u32)(__be32)(x))


__constant_cpu_to_be16 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_cpu_to_be16(x) ((__force __be16)___constant_swab16((x)))


__constant_be16_to_cpu 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_be16_to_cpu(x) ___constant_swab16((__force __u16)(__be16)(x))


__cpu_to_le64 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __cpu_to_le64(x) ((__force __le64)(__u64)(x))


__le64_to_cpu 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __le64_to_cpu(x) ((__force __u64)(__le64)(x))


__cpu_to_le32 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __cpu_to_le32(x) ((__force __le32)(__u32)(x))


__le32_to_cpu 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __le32_to_cpu(x) ((__force __u32)(__le32)(x))


__cpu_to_le16 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __cpu_to_le16(x) ((__force __le16)(__u16)(x))


__le16_to_cpu 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __le16_to_cpu(x) ((__force __u16)(__le16)(x))


__cpu_to_be64 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __cpu_to_be64(x) ((__force __be64)__swab64((x)))


__be64_to_cpu 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __be64_to_cpu(x) __swab64((__force __u64)(__be64)(x))


__cpu_to_be32 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __cpu_to_be32(x) ((__force __be32)__swab32((x)))


__be32_to_cpu 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __be32_to_cpu(x) __swab32((__force __u32)(__be32)(x))


__cpu_to_be16 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __cpu_to_be16(x) ((__force __be16)__swab16((x)))


__be16_to_cpu 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __be16_to_cpu(x) __swab16((__force __u16)(__be16)(x))


__cpu_to_le64p 	( diff_type: Del type: function file: include/linux/byteorder/little_endian.h )
	-- static inline __le64 __cpu_to_le64p(const __u64 *p)


__le64_to_cpup 	( diff_type: Del type: function file: include/linux/byteorder/little_endian.h )
	-- static inline __u64 __le64_to_cpup(const __le64 *p)


__cpu_to_le32p 	( diff_type: Del type: function file: include/linux/byteorder/little_endian.h )
	-- static inline __le32 __cpu_to_le32p(const __u32 *p)


__le32_to_cpup 	( diff_type: Del type: function file: include/linux/byteorder/little_endian.h )
	-- static inline __u32 __le32_to_cpup(const __le32 *p)


__cpu_to_le16p 	( diff_type: Del type: function file: include/linux/byteorder/little_endian.h )
	-- static inline __le16 __cpu_to_le16p(const __u16 *p)


__le16_to_cpup 	( diff_type: Del type: function file: include/linux/byteorder/little_endian.h )
	-- static inline __u16 __le16_to_cpup(const __le16 *p)


__cpu_to_be64p 	( diff_type: Del type: function file: include/linux/byteorder/little_endian.h )
	-- static inline __be64 __cpu_to_be64p(const __u64 *p)


__be64_to_cpup 	( diff_type: Del type: function file: include/linux/byteorder/little_endian.h )
	-- static inline __u64 __be64_to_cpup(const __be64 *p)


__cpu_to_be32p 	( diff_type: Del type: function file: include/linux/byteorder/little_endian.h )
	-- static inline __be32 __cpu_to_be32p(const __u32 *p)


__be32_to_cpup 	( diff_type: Del type: function file: include/linux/byteorder/little_endian.h )
	-- static inline __u32 __be32_to_cpup(const __be32 *p)


__cpu_to_be16p 	( diff_type: Del type: function file: include/linux/byteorder/little_endian.h )
	-- static inline __be16 __cpu_to_be16p(const __u16 *p)


__be16_to_cpup 	( diff_type: Del type: function file: include/linux/byteorder/little_endian.h )
	-- static inline __u16 __be16_to_cpup(const __be16 *p)


__cpu_to_le64s 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __cpu_to_le64s(x) do { (void)(x); } while (0)


__le64_to_cpus 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __le64_to_cpus(x) do { (void)(x); } while (0)


__cpu_to_le32s 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __cpu_to_le32s(x) do { (void)(x); } while (0)


__le32_to_cpus 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __le32_to_cpus(x) do { (void)(x); } while (0)


__cpu_to_le16s 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __cpu_to_le16s(x) do { (void)(x); } while (0)


__le16_to_cpus 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __le16_to_cpus(x) do { (void)(x); } while (0)


__cpu_to_be64s 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __cpu_to_be64s(x) __swab64s((x))


__be64_to_cpus 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __be64_to_cpus(x) __swab64s((x))


__cpu_to_be32s 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __cpu_to_be32s(x) __swab32s((x))


__be32_to_cpus 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __be32_to_cpus(x) __swab32s((x))


__cpu_to_be16s 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __cpu_to_be16s(x) __swab16s((x))


__be16_to_cpus 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __be16_to_cpus(x) __swab16s((x))


_LINUX_CONST_H 	( diff_type: Mov type: macro file: include/linux/const.h )
	-- include/uapi/linux/const.h
	++ #define _LINUX_CONST_H


_AC 	( diff_type: Mov type: macro file: include/linux/const.h )
	-- include/uapi/linux/const.h
	++ #define _AC(X,Y) __AC(X,Y)


_AT 	( diff_type: Mov type: macro file: include/linux/const.h )
	-- include/uapi/linux/const.h
	++ #define _AT(T,X) ((T)(X))


__AC 	( diff_type: Mov type: macro file: include/linux/const.h )
	-- include/uapi/linux/const.h
	++ #define __AC(X,Y) (X##Y)


_ASM_X86_STAT_H 	( diff_type: Mov type: macro file: arch/x86/include/asm/stat.h )
	-- arch/x86/include/uapi/asm/stat.h
	++ #define _ASM_X86_STAT_H


STAT_HAVE_NSEC 	( diff_type: Mov type: macro file: arch/x86/include/asm/stat.h )
	-- arch/x86/include/uapi/asm/stat.h
	++ #define STAT_HAVE_NSEC 1


stat 	( diff_type: Mov type: struct file: arch/x86/include/asm/stat.h )
	-- arch/x86/include/uapi/asm/stat.h
	++ struct stat { unsigned long st_dev; unsigned long st_ino; unsigned long st_nlink; unsigned int st_mode; unsigned int st_uid; unsigned int st_gid; unsigned int __pad0; unsigned long st_rdev; long st_size; long st_blksize; long st_blocks; unsigned long st_atime; unsigned long st_atime_nsec; unsigned long st_mtime; unsigned long st_mtime_nsec; unsigned long st_ctime; unsigned long st_ctime_nsec; long __unused[3]; };


INIT_STRUCT_STAT_PADDING 	( diff_type: Mov type: macro file: arch/x86/include/asm/stat.h )
	-- arch/x86/include/uapi/asm/stat.h
	++ #define INIT_STRUCT_STAT_PADDING(st) do { st.__pad0 = 0; st.__unused[0] = 0; st.__unused[1] = 0; st.__unused[2] = 0; } while (0)


STAT64_HAS_BROKEN_ST_INO 	( diff_type: Mov type: macro file: arch/x86/include/asm/stat.h )
	-- arch/x86/include/uapi/asm/stat.h
	++ #define STAT64_HAS_BROKEN_ST_INO 1


stat64 	( diff_type: Mov type: struct file: arch/x86/include/asm/stat.h )
	-- arch/x86/include/uapi/asm/stat.h
	++ struct stat64 { unsigned long long st_dev; unsigned char __pad0[4]; unsigned long __st_ino; unsigned int st_mode; unsigned int st_nlink; unsigned long st_uid; unsigned long st_gid; unsigned long long st_rdev; unsigned char __pad3[4]; long long st_size; unsigned long st_blksize; unsigned long long st_blocks; unsigned long st_atime; unsigned long st_atime_nsec; unsigned long st_mtime; unsigned int st_mtime_nsec; unsigned long st_ctime; unsigned long st_ctime_nsec; unsigned long long st_ino; };


INIT_STRUCT_STAT64_PADDING 	( diff_type: Mov type: macro file: arch/x86/include/asm/stat.h )
	-- arch/x86/include/uapi/asm/stat.h
	++ #define INIT_STRUCT_STAT64_PADDING(st) do { memset(&st.__pad0, 0, sizeof(st.__pad0)); memset(&st.__pad3, 0, sizeof(st.__pad3)); } while (0)


__old_kernel_stat 	( diff_type: Mov type: struct file: arch/x86/include/asm/stat.h )
	-- arch/x86/include/uapi/asm/stat.h
	++ struct __old_kernel_stat { unsigned short st_dev; unsigned short st_ino; unsigned short st_mode; unsigned short st_nlink; unsigned short st_uid; unsigned short st_gid; unsigned short st_rdev; unsigned long st_size; unsigned long st_atime; unsigned long st_mtime; unsigned long st_ctime; unsigned int st_size; unsigned int st_atime; unsigned int st_mtime; unsigned int st_ctime; };


_STRUCT_TIMESPEC 	( diff_type: Del type: macro file: include/linux/time.h )
	-- #define _STRUCT_TIMESPEC


timespec 	( diff_type: Del type: struct file: include/linux/time.h )
	-- struct timespec { __kernel_time_t tv_sec; long tv_nsec; };


timeval 	( diff_type: Del type: struct file: include/linux/time.h )
	-- struct timeval { __kernel_time_t tv_sec; __kernel_suseconds_t tv_usec; };


timezone 	( diff_type: Del type: struct file: include/linux/time.h )
	-- struct timezone { int tz_minuteswest; int tz_dsttime; };


ITIMER_REAL 	( diff_type: Del type: macro file: include/linux/time.h )
	-- #define ITIMER_REAL 0


ITIMER_VIRTUAL 	( diff_type: Del type: macro file: include/linux/time.h )
	-- #define ITIMER_VIRTUAL 1


ITIMER_PROF 	( diff_type: Del type: macro file: include/linux/time.h )
	-- #define ITIMER_PROF 2


itimerspec 	( diff_type: Del type: struct file: include/linux/time.h )
	-- struct itimerspec { struct timespec it_interval; struct timespec it_value; };


itimerval 	( diff_type: Del type: struct file: include/linux/time.h )
	-- struct itimerval { struct timeval it_interval; struct timeval it_value; };


CLOCK_REALTIME 	( diff_type: Del type: macro file: include/linux/time.h )
	-- #define CLOCK_REALTIME 0


CLOCK_MONOTONIC 	( diff_type: Del type: macro file: include/linux/time.h )
	-- #define CLOCK_MONOTONIC 1


CLOCK_PROCESS_CPUTIME_ID 	( diff_type: Del type: macro file: include/linux/time.h )
	-- #define CLOCK_PROCESS_CPUTIME_ID 2


CLOCK_THREAD_CPUTIME_ID 	( diff_type: Del type: macro file: include/linux/time.h )
	-- #define CLOCK_THREAD_CPUTIME_ID 3


CLOCK_MONOTONIC_RAW 	( diff_type: Del type: macro file: include/linux/time.h )
	-- #define CLOCK_MONOTONIC_RAW 4


CLOCK_REALTIME_COARSE 	( diff_type: Del type: macro file: include/linux/time.h )
	-- #define CLOCK_REALTIME_COARSE 5


CLOCK_MONOTONIC_COARSE 	( diff_type: Del type: macro file: include/linux/time.h )
	-- #define CLOCK_MONOTONIC_COARSE 6


CLOCK_BOOTTIME 	( diff_type: Del type: macro file: include/linux/time.h )
	-- #define CLOCK_BOOTTIME 7


CLOCK_REALTIME_ALARM 	( diff_type: Del type: macro file: include/linux/time.h )
	-- #define CLOCK_REALTIME_ALARM 8


CLOCK_BOOTTIME_ALARM 	( diff_type: Del type: macro file: include/linux/time.h )
	-- #define CLOCK_BOOTTIME_ALARM 9


CLOCK_SGI_CYCLE 	( diff_type: Del type: macro file: include/linux/time.h )
	-- #define CLOCK_SGI_CYCLE 10


MAX_CLOCKS 	( diff_type: Del type: macro file: include/linux/time.h )
	-- #define MAX_CLOCKS 16


CLOCKS_MASK 	( diff_type: Del type: macro file: include/linux/time.h )
	-- #define CLOCKS_MASK (CLOCK_REALTIME | CLOCK_MONOTONIC)


CLOCKS_MONO 	( diff_type: Del type: macro file: include/linux/time.h )
	-- #define CLOCKS_MONO CLOCK_MONOTONIC


TIMER_ABSTIME 	( diff_type: Del type: macro file: include/linux/time.h )
	-- #define TIMER_ABSTIME 0x01


CTL_MAXNAME 	( diff_type: Del type: macro file: include/linux/sysctl.h )
	-- #define CTL_MAXNAME 10


__sysctl_args 	( diff_type: Del type: struct file: include/linux/sysctl.h )
	-- struct __sysctl_args { int __user *name; int nlen; void __user *oldval; size_t __user *oldlenp; void __user *newval; size_t newlen; unsigned long __unused[4]; };


ctl_table_root 	( diff_type: Mod type: struct file: include/linux/sysctl.h )
	-- struct ctl_table_root { struct ctl_table_set default_set; struct ctl_table_set *(*lookup)(struct ctl_table_root *root,struct nsproxy *namespaces); int (*permissions)(struct ctl_table_root *root,struct nsproxy *namespaces, struct ctl_table *table); };
	++ struct ctl_table_root { struct ctl_table_set default_set; struct ctl_table_set *(*lookup)(struct ctl_table_root *root,struct nsproxy *namespaces); int (*permissions)(struct ctl_table_header *head, struct ctl_table *table); };


_LINUX_ELF_EM_H 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define _LINUX_ELF_EM_H


EM_NONE 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_NONE 0


EM_M32 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_M32 1


EM_SPARC 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_SPARC 2


EM_386 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_386 3


EM_68K 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_68K 4


EM_88K 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_88K 5


EM_486 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_486 6


EM_860 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_860 7


EM_MIPS 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_MIPS 8


EM_MIPS_RS3_LE 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_MIPS_RS3_LE 10


EM_MIPS_RS4_BE 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_MIPS_RS4_BE 10


EM_PARISC 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_PARISC 15


EM_SPARC32PLUS 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_SPARC32PLUS 18


EM_PPC 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_PPC 20


EM_PPC64 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_PPC64 21


EM_SPU 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_SPU 23


EM_SH 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_SH 42


EM_SPARCV9 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_SPARCV9 43


EM_IA_64 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_IA_64 50


EM_X86_64 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_X86_64 62


EM_S390 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_S390 22


EM_CRIS 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_CRIS 76


EM_V850 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_V850 87


EM_M32R 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_M32R 88


EM_H8_300 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_H8_300 46


EM_MN10300 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_MN10300 89


EM_BLACKFIN 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_BLACKFIN 106


EM_TI_C6000 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_TI_C6000 140


EM_FRV 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_FRV 0x5441


EM_AVR32 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_AVR32 0x18ad


EM_ALPHA 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_ALPHA 0x9026


EM_CYGNUS_V850 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_CYGNUS_V850 0x9080


EM_CYGNUS_M32R 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_CYGNUS_M32R 0x9041


EM_S390_OLD 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_S390_OLD 0xA390


EM_CYGNUS_MN10300 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_CYGNUS_MN10300 0xbeef


align_flags 	( diff_type: Mod type: enum file: arch/x86/include/asm/elf.h )
	-- enum align_flags { ALIGN_VA_32 = BIT(0), ALIGN_VA_64 = BIT(1), ALIGN_VDSO = BIT(2), ALIGN_TOPDOWN = BIT(3), };
	++ enum align_flags { ALIGN_VA_32 = BIT(0), ALIGN_VA_64 = BIT(1), };


align_addr 	( diff_type: Del type: prototype file: arch/x86/include/asm/elf.h )
	-- extern unsigned long align_addr(unsigned long,struct file *,enum align_flags);


WNOHANG 	( diff_type: Del type: macro file: include/linux/wait.h )
	-- #define WNOHANG 0x00000001


WUNTRACED 	( diff_type: Del type: macro file: include/linux/wait.h )
	-- #define WUNTRACED 0x00000002


WSTOPPED 	( diff_type: Del type: macro file: include/linux/wait.h )
	-- #define WSTOPPED WUNTRACED


WEXITED 	( diff_type: Del type: macro file: include/linux/wait.h )
	-- #define WEXITED 0x00000004


WCONTINUED 	( diff_type: Del type: macro file: include/linux/wait.h )
	-- #define WCONTINUED 0x00000008


WNOWAIT 	( diff_type: Del type: macro file: include/linux/wait.h )
	-- #define WNOWAIT 0x01000000


__WNOTHREAD 	( diff_type: Del type: macro file: include/linux/wait.h )
	-- #define __WNOTHREAD 0x20000000


__WALL 	( diff_type: Del type: macro file: include/linux/wait.h )
	-- #define __WALL 0x40000000


__WCLONE 	( diff_type: Del type: macro file: include/linux/wait.h )
	-- #define __WCLONE 0x80000000


P_ALL 	( diff_type: Del type: macro file: include/linux/wait.h )
	-- #define P_ALL 0


P_PID 	( diff_type: Del type: macro file: include/linux/wait.h )
	-- #define P_PID 1


P_PGID 	( diff_type: Del type: macro file: include/linux/wait.h )
	-- #define P_PGID 2


RCU_NONIDLE 	( diff_type: Mod type: macro file: include/linux/rcupdate.h )
	-- #define RCU_NONIDLE(a) do { rcu_idle_exit(); do { a; } while (0); rcu_idle_enter(); } while (0)
	++ #define RCU_NONIDLE(a) do { rcu_irq_enter(); do { a; } while (0); rcu_irq_exit(); } while (0)


rcu_is_cpu_idle 	( diff_type: Mod type: function-->prototype file: include/linux/rcupdate.h )
	-- static inline int rcu_is_cpu_idle(void)
	++ extern int rcu_is_cpu_idle(void);


__rcu_assign_pointer 	( diff_type: Mod type: macro file: include/linux/rcupdate.h )
	-- #define __rcu_assign_pointer(p,v,space) ({ smp_wmb(); (p) = (typeof(*v) __force space *)(v); })
	++ #define __rcu_assign_pointer(p,v,space) do { smp_wmb(); (p) = (typeof(*v) __force space *)(v); } while (0)


RCU_INIT_POINTER 	( diff_type: Mod type: macro file: include/linux/rcupdate.h )
	-- #define RCU_INIT_POINTER(p,v) p = (typeof(*v) __force __rcu *)(v)
	++ #define RCU_INIT_POINTER(p,v) do { p = (typeof(*v) __force __rcu *)(v); } while (0)


__kfree_rcu 	( diff_type: Mod type: macro file: include/linux/rcupdate.h )
	-- #define __kfree_rcu(head,offset) do { BUILD_BUG_ON(!__is_kfree_rcu_offset(offset)); call_rcu(head, (void (*)(struct rcu_head *))(unsigned long)(offset)); } while (0)
	++ #define __kfree_rcu(head,offset) do { BUILD_BUG_ON(!__is_kfree_rcu_offset(offset)); kfree_call_rcu(head, (void (*)(struct rcu_head *))(unsigned long)(offset)); } while (0)


rb_node 	( diff_type: Mod type: struct file: include/linux/rbtree.h )
	-- struct rb_node { unsigned long rb_parent_color; #define RB_RED 0 #define RB_BLACK 1 struct rb_node *rb_right; struct rb_node *rb_left; } __attribute__((aligned(sizeof(long))));
	++ struct rb_node { unsigned long __rb_parent_color; struct rb_node *rb_right; struct rb_node *rb_left; } __attribute__((aligned(sizeof(long))));


rb_parent 	( diff_type: Mod type: macro file: include/linux/rbtree.h )
	-- #define rb_parent(r) ((struct rb_node *)((r)->rb_parent_color & ~3))
	++ #define rb_parent(r) ((struct rb_node *)((r)->__rb_parent_color & ~3))


rb_color 	( diff_type: Del type: macro file: include/linux/rbtree.h )
	-- #define rb_color(r) ((r)->rb_parent_color & 1)


rb_is_red 	( diff_type: Del type: macro file: include/linux/rbtree.h )
	-- #define rb_is_red(r) (!rb_color(r))


rb_is_black 	( diff_type: Del type: macro file: include/linux/rbtree.h )
	-- #define rb_is_black(r) rb_color(r)


rb_set_red 	( diff_type: Del type: macro file: include/linux/rbtree.h )
	-- #define rb_set_red(r) do { (r)->rb_parent_color &= ~1; } while (0)


rb_set_black 	( diff_type: Del type: macro file: include/linux/rbtree.h )
	-- #define rb_set_black(r) do { (r)->rb_parent_color |= 1; } while (0)


rb_set_parent 	( diff_type: Del type: function file: include/linux/rbtree.h )
	-- static inline void rb_set_parent(struct rb_node *rb,struct rb_node *p)


rb_set_color 	( diff_type: Del type: function file: include/linux/rbtree.h )
	-- static inline void rb_set_color(struct rb_node *rb,int color)


RB_EMPTY_NODE 	( diff_type: Mod type: macro file: include/linux/rbtree.h )
	-- #define RB_EMPTY_NODE(node) (rb_parent(node) == node)
	++ #define RB_EMPTY_NODE(node) ((node)->__rb_parent_color == (unsigned long)(node))


RB_CLEAR_NODE 	( diff_type: Mod type: macro file: include/linux/rbtree.h )
	-- #define RB_CLEAR_NODE(node) (rb_set_parent(node,node))
	++ #define RB_CLEAR_NODE(node) ((node)->__rb_parent_color = (unsigned long)(node))


rb_init_node 	( diff_type: Del type: function file: include/linux/rbtree.h )
	-- static inline void rb_init_node(struct rb_node *rb)


rb_augment_insert 	( diff_type: Del type: prototype file: include/linux/rbtree.h )
	-- extern void rb_augment_insert(struct rb_node *node,rb_augment_f func, void *data);


rb_augment_erase_begin 	( diff_type: Del type: prototype file: include/linux/rbtree.h )
	-- extern struct rb_node *rb_augment_erase_begin(struct rb_node *node);


rb_augment_erase_end 	( diff_type: Del type: prototype file: include/linux/rbtree.h )
	-- extern void rb_augment_erase_end(struct rb_node *node,rb_augment_f func, void *data);


atomic_dec_if_positive 	( diff_type: Mov type: function file: arch/x86/include/asm/atomic.h )
	-- include/linux/atomic.h
	++ static inline int atomic_dec_if_positive(atomic_t *v)


_ASM_X86_PTRACE_ABI_H 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define _ASM_X86_PTRACE_ABI_H


EBX 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define EBX 0


ECX 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define ECX 1


EDX 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define EDX 2


ESI 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define ESI 3


EDI 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define EDI 4


EBP 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define EBP 5


EAX 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define EAX 6


DS 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define DS 7


ES 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define ES 8


FS 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define FS 9


GS 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define GS 10


ORIG_EAX 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define ORIG_EAX 11


EIP 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define EIP 12


CS 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define CS 136


EFL 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define EFL 14


UESP 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define UESP 15


SS 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define SS 160


FRAME_SIZE 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define FRAME_SIZE 168


R15 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define R15 0


R14 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define R14 8


R13 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define R13 16


R12 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define R12 24


RBP 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define RBP 32


RBX 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define RBX 40


R11 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define R11 48


R10 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define R10 56


R9 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define R9 64


R8 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define R8 72


RAX 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define RAX 80


RCX 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define RCX 88


RDX 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define RDX 96


RSI 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define RSI 104


RDI 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define RDI 112


ORIG_RAX 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define ORIG_RAX 120


RIP 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define RIP 128


EFLAGS 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define EFLAGS 144


RSP 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define RSP 152


ARGOFFSET 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define ARGOFFSET R11


PTRACE_GETREGS 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define PTRACE_GETREGS 12


PTRACE_SETREGS 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define PTRACE_SETREGS 13


PTRACE_GETFPREGS 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define PTRACE_GETFPREGS 14


PTRACE_SETFPREGS 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define PTRACE_SETFPREGS 15


PTRACE_GETFPXREGS 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define PTRACE_GETFPXREGS 18


PTRACE_SETFPXREGS 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define PTRACE_SETFPXREGS 19


PTRACE_OLDSETOPTIONS 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define PTRACE_OLDSETOPTIONS 21


PTRACE_GET_THREAD_AREA 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define PTRACE_GET_THREAD_AREA 25


PTRACE_SET_THREAD_AREA 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define PTRACE_SET_THREAD_AREA 26


PTRACE_ARCH_PRCTL 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- # define PTRACE_ARCH_PRCTL 30


PTRACE_SYSEMU 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define PTRACE_SYSEMU 31


PTRACE_SYSEMU_SINGLESTEP 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define PTRACE_SYSEMU_SINGLESTEP 32


PTRACE_SINGLEBLOCK 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define PTRACE_SINGLEBLOCK 33


_ASM_X86_PROCESSOR_FLAGS_H 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define _ASM_X86_PROCESSOR_FLAGS_H


X86_EFLAGS_CF 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_CF 0x00000001


X86_EFLAGS_BIT1 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_BIT1 0x00000002


X86_EFLAGS_PF 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_PF 0x00000004


X86_EFLAGS_AF 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_AF 0x00000010


X86_EFLAGS_ZF 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_ZF 0x00000040


X86_EFLAGS_SF 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_SF 0x00000080


X86_EFLAGS_TF 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_TF 0x00000100


X86_EFLAGS_IF 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_IF 0x00000200


X86_EFLAGS_DF 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_DF 0x00000400


X86_EFLAGS_OF 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_OF 0x00000800


X86_EFLAGS_IOPL 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_IOPL 0x00003000


X86_EFLAGS_NT 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_NT 0x00004000


X86_EFLAGS_RF 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_RF 0x00010000


X86_EFLAGS_VM 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_VM 0x00020000


X86_EFLAGS_AC 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_AC 0x00040000


X86_EFLAGS_VIF 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_VIF 0x00080000


X86_EFLAGS_VIP 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_VIP 0x00100000


X86_EFLAGS_ID 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_ID 0x00200000


X86_CR0_PE 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR0_PE 0x00000001


X86_CR0_MP 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR0_MP 0x00000002


X86_CR0_EM 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR0_EM 0x00000004


X86_CR0_TS 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR0_TS 0x00000008


X86_CR0_ET 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR0_ET 0x00000010


X86_CR0_NE 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR0_NE 0x00000020


X86_CR0_WP 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR0_WP 0x00010000


X86_CR0_AM 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR0_AM 0x00040000


X86_CR0_NW 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR0_NW 0x20000000


X86_CR0_CD 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR0_CD 0x40000000


X86_CR0_PG 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR0_PG 0x80000000


X86_CR3_PWT 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR3_PWT 0x00000008


X86_CR3_PCD 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR3_PCD 0x00000010


X86_CR4_VME 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_VME 0x00000001


X86_CR4_PVI 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_PVI 0x00000002


X86_CR4_TSD 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_TSD 0x00000004


X86_CR4_DE 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_DE 0x00000008


X86_CR4_PSE 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_PSE 0x00000010


X86_CR4_PAE 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_PAE 0x00000020


X86_CR4_MCE 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_MCE 0x00000040


X86_CR4_PGE 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_PGE 0x00000080


X86_CR4_PCE 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_PCE 0x00000100


X86_CR4_OSFXSR 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_OSFXSR 0x00000200


X86_CR4_OSXMMEXCPT 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_OSXMMEXCPT 0x00000400


X86_CR4_VMXE 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_VMXE 0x00002000


X86_CR4_RDWRGSFS 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_RDWRGSFS 0x00010000


X86_CR4_OSXSAVE 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_OSXSAVE 0x00040000


X86_CR4_SMEP 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_SMEP 0x00100000


X86_CR8_TPR 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR8_TPR 0x0000000F


CX86_PCR0 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_PCR0 0x20


CX86_GCR 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_GCR 0xb8


CX86_CCR0 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_CCR0 0xc0


CX86_CCR1 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_CCR1 0xc1


CX86_CCR2 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_CCR2 0xc2


CX86_CCR3 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_CCR3 0xc3


CX86_CCR4 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_CCR4 0xe8


CX86_CCR5 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_CCR5 0xe9


CX86_CCR6 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_CCR6 0xea


CX86_CCR7 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_CCR7 0xeb


CX86_PCR1 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_PCR1 0xf0


CX86_DIR0 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_DIR0 0xfe


CX86_DIR1 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_DIR1 0xff


CX86_ARR_BASE 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_ARR_BASE 0xc4


CX86_RCR_BASE 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_RCR_BASE 0xdc


X86_VM_MASK 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_VM_MASK 0


pv_lazy_ops 	( diff_type: Mod type: struct file: arch/x86/include/asm/paravirt_types.h )
	-- struct pv_lazy_ops { void (*enter)(void); void (*leave)(void); };
	++ struct pv_lazy_ops { void (*enter)(void); void (*leave)(void); void (*flush)(void); };


pv_cpu_ops 	( diff_type: Mod type: struct file: arch/x86/include/asm/paravirt_types.h )
	-- struct pv_cpu_ops { unsigned long (*get_debugreg)(int regno); void (*set_debugreg)(int regno, unsigned long value); void (*clts)(void); unsigned long (*read_cr0)(void); void (*write_cr0)(unsigned long); unsigned long (*read_cr4_safe)(void); unsigned long (*read_cr4)(void); void (*write_cr4)(unsigned long); unsigned long (*read_cr8)(void); void (*write_cr8)(unsigned long); void (*load_tr_desc)(void); void (*load_gdt)(const struct desc_ptr *); void (*load_idt)(const struct desc_ptr *); void (*store_gdt)(struct desc_ptr *); void (*store_idt)(struct desc_ptr *); void (*set_ldt)(const void *desc, unsigned entries); unsigned long (*store_tr)(void); void (*load_tls)(struct thread_struct *t, unsigned int cpu); void (*load_gs_index)(unsigned int idx); void (*write_ldt_entry)(struct desc_struct *ldt, int entrynum,const void *desc); void (*write_gdt_entry)(struct desc_struct *,int entrynum, const void *desc, int size); void (*write_idt_entry)(gate_desc *,int entrynum, const gate_desc *gate); void (*alloc_ldt)(struct desc_struct *ldt, unsigned entries); void (*free_ldt)(struct desc_struct *ldt, unsigned entries); void (*load_sp0)(struct tss_struct *tss, struct thread_struct *t); void (*set_iopl_mask)(unsigned mask); void (*wbinvd)(void); void (*io_delay)(void); void (*cpuid)(unsigned int *eax, unsigned int *ebx,unsigned int *ecx, unsigned int *edx); u64 (*read_msr)(unsigned int msr, int *err); int (*rdmsr_regs)(u32 *regs); int (*write_msr)(unsigned int msr, unsigned low, unsigned high); int (*wrmsr_regs)(u32 *regs); u64 (*read_tsc)(void); u64 (*read_pmc)(int counter); unsigned long long (*read_tscp)(unsigned int *aux); void (*irq_enable_sysexit)(void); void (*usergs_sysret64)(void); void (*usergs_sysret32)(void); void (*iret)(void); void (*swapgs)(void); void (*start_context_switch)(struct task_struct *prev); void (*end_context_switch)(struct task_struct *next); };
	++ struct pv_cpu_ops { unsigned long (*get_debugreg)(int regno); void (*set_debugreg)(int regno, unsigned long value); void (*clts)(void); unsigned long (*read_cr0)(void); void (*write_cr0)(unsigned long); unsigned long (*read_cr4_safe)(void); unsigned long (*read_cr4)(void); void (*write_cr4)(unsigned long); unsigned long (*read_cr8)(void); void (*write_cr8)(unsigned long); void (*load_tr_desc)(void); void (*load_gdt)(const struct desc_ptr *); void (*load_idt)(const struct desc_ptr *); void (*store_gdt)(struct desc_ptr *); void (*store_idt)(struct desc_ptr *); void (*set_ldt)(const void *desc, unsigned entries); unsigned long (*store_tr)(void); void (*load_tls)(struct thread_struct *t, unsigned int cpu); void (*load_gs_index)(unsigned int idx); void (*write_ldt_entry)(struct desc_struct *ldt, int entrynum,const void *desc); void (*write_gdt_entry)(struct desc_struct *,int entrynum, const void *desc, int size); void (*write_idt_entry)(gate_desc *,int entrynum, const gate_desc *gate); void (*alloc_ldt)(struct desc_struct *ldt, unsigned entries); void (*free_ldt)(struct desc_struct *ldt, unsigned entries); void (*load_sp0)(struct tss_struct *tss, struct thread_struct *t); void (*set_iopl_mask)(unsigned mask); void (*wbinvd)(void); void (*io_delay)(void); void (*cpuid)(unsigned int *eax, unsigned int *ebx,unsigned int *ecx, unsigned int *edx); u64 (*read_msr)(unsigned int msr, int *err); int (*write_msr)(unsigned int msr, unsigned low, unsigned high); u64 (*read_tsc)(void); u64 (*read_pmc)(int counter); unsigned long long (*read_tscp)(unsigned int *aux); void (*irq_enable_sysexit)(void); void (*usergs_sysret64)(void); void (*usergs_sysret32)(void); void (*iret)(void); void (*swapgs)(void); void (*start_context_switch)(struct task_struct *prev); void (*end_context_switch)(struct task_struct *next); };


pv_mmu_ops 	( diff_type: Mod type: struct file: arch/x86/include/asm/paravirt_types.h )
	-- struct pv_mmu_ops { unsigned long (*read_cr2)(void); void (*write_cr2)(unsigned long); unsigned long (*read_cr3)(void); void (*write_cr3)(unsigned long); void (*activate_mm)(struct mm_struct *prev,struct mm_struct *next); void (*dup_mmap)(struct mm_struct *oldmm,struct mm_struct *mm); void (*exit_mmap)(struct mm_struct *mm); void (*flush_tlb_user)(void); void (*flush_tlb_kernel)(void); void (*flush_tlb_single)(unsigned long addr); void (*flush_tlb_others)(const struct cpumask *cpus,struct mm_struct *mm,unsigned long va); int (*pgd_alloc)(struct mm_struct *mm); void (*pgd_free)(struct mm_struct *mm, pgd_t *pgd); void (*alloc_pte)(struct mm_struct *mm, unsigned long pfn); void (*alloc_pmd)(struct mm_struct *mm, unsigned long pfn); void (*alloc_pud)(struct mm_struct *mm, unsigned long pfn); void (*release_pte)(unsigned long pfn); void (*release_pmd)(unsigned long pfn); void (*release_pud)(unsigned long pfn); void (*set_pte)(pte_t *ptep, pte_t pteval); void (*set_pte_at)(struct mm_struct *mm, unsigned long addr,pte_t *ptep, pte_t pteval); void (*set_pmd)(pmd_t *pmdp, pmd_t pmdval); void (*set_pmd_at)(struct mm_struct *mm, unsigned long addr,pmd_t *pmdp, pmd_t pmdval); void (*pte_update)(struct mm_struct *mm, unsigned long addr,pte_t *ptep); void (*pte_update_defer)(struct mm_struct *mm,unsigned long addr, pte_t *ptep); void (*pmd_update)(struct mm_struct *mm, unsigned long addr,pmd_t *pmdp); void (*pmd_update_defer)(struct mm_struct *mm,unsigned long addr, pmd_t *pmdp); pte_t (*ptep_modify_prot_start)(struct mm_struct *mm, unsigned long addr,pte_t *ptep); void (*ptep_modify_prot_commit)(struct mm_struct *mm, unsigned long addr,pte_t *ptep, pte_t pte); struct paravirt_callee_save pte_val; struct paravirt_callee_save make_pte; struct paravirt_callee_save pgd_val; struct paravirt_callee_save make_pgd; void (*set_pte_atomic)(pte_t *ptep, pte_t pteval); void (*pte_clear)(struct mm_struct *mm, unsigned long addr,pte_t *ptep); void (*pmd_clear)(pmd_t *pmdp); void (*set_pud)(pud_t *pudp, pud_t pudval); struct paravirt_callee_save pmd_val; struct paravirt_callee_save make_pmd; struct paravirt_callee_save pud_val; struct paravirt_callee_save make_pud; void (*set_pgd)(pgd_t *pudp, pgd_t pgdval); struct pv_lazy_ops lazy_mode; void (*set_fixmap)(unsigned };
	++ struct pv_mmu_ops { unsigned long (*read_cr2)(void); void (*write_cr2)(unsigned long); unsigned long (*read_cr3)(void); void (*write_cr3)(unsigned long); void (*activate_mm)(struct mm_struct *prev,struct mm_struct *next); void (*dup_mmap)(struct mm_struct *oldmm,struct mm_struct *mm); void (*exit_mmap)(struct mm_struct *mm); void (*flush_tlb_user)(void); void (*flush_tlb_kernel)(void); void (*flush_tlb_single)(unsigned long addr); void (*flush_tlb_others)(const struct cpumask *cpus,struct mm_struct *mm,unsigned long start,unsigned long end); int (*pgd_alloc)(struct mm_struct *mm); void (*pgd_free)(struct mm_struct *mm, pgd_t *pgd); void (*alloc_pte)(struct mm_struct *mm, unsigned long pfn); void (*alloc_pmd)(struct mm_struct *mm, unsigned long pfn); void (*alloc_pud)(struct mm_struct *mm, unsigned long pfn); void (*release_pte)(unsigned long pfn); void (*release_pmd)(unsigned long pfn); void (*release_pud)(unsigned long pfn); void (*set_pte)(pte_t *ptep, pte_t pteval); void (*set_pte_at)(struct mm_struct *mm, unsigned long addr,pte_t *ptep, pte_t pteval); void (*set_pmd)(pmd_t *pmdp, pmd_t pmdval); void (*set_pmd_at)(struct mm_struct *mm, unsigned long addr,pmd_t *pmdp, pmd_t pmdval); void (*pte_update)(struct mm_struct *mm, unsigned long addr,pte_t *ptep); void (*pte_update_defer)(struct mm_struct *mm,unsigned long addr, pte_t *ptep); void (*pmd_update)(struct mm_struct *mm, unsigned long addr,pmd_t *pmdp); void (*pmd_update_defer)(struct mm_struct *mm,unsigned long addr, pmd_t *pmdp); pte_t (*ptep_modify_prot_start)(struct mm_struct *mm, unsigned long addr,pte_t *ptep); void (*ptep_modify_prot_commit)(struct mm_struct *mm, unsigned long addr,pte_t *ptep, pte_t pte); struct paravirt_callee_save pte_val; struct paravirt_callee_save make_pte; struct paravirt_callee_save pgd_val; struct paravirt_callee_save make_pgd; void (*set_pte_atomic)(pte_t *ptep, pte_t pteval); void (*pte_clear)(struct mm_struct *mm, unsigned long addr,pte_t *ptep); void (*pmd_clear)(pmd_t *pmdp); void (*set_pud)(pud_t *pudp, pud_t pudval); struct paravirt_callee_save pmd_val; struct paravirt_callee_save make_pmd; struct paravirt_callee_save pud_val; struct paravirt_callee_save make_pud; void (*set_pgd)(pgd_t *pudp, pgd_t pgdval); struct pv_lazy_ops lazy_mode; void (*set_fixmap)(unsigned };


cma_wmark_pages 	( diff_type: Del type: macro file: include/linux/mmzone.h )
	-- # define cma_wmark_pages(zone) 0


zone_stat_item 	( diff_type: Mod type: enum file: include/linux/mmzone.h )
	-- enum zone_stat_item { NR_FREE_PAGES, NR_LRU_BASE, NR_INACTIVE_ANON = NR_LRU_BASE, NR_ACTIVE_ANON, NR_INACTIVE_FILE, NR_ACTIVE_FILE, NR_UNEVICTABLE, NR_MLOCK, NR_ANON_PAGES, NR_FILE_MAPPED, NR_FILE_PAGES, NR_FILE_DIRTY, NR_WRITEBACK, NR_SLAB_RECLAIMABLE, NR_SLAB_UNRECLAIMABLE, NR_PAGETABLE, NR_KERNEL_STACK, NR_UNSTABLE_NFS, NR_BOUNCE, NR_VMSCAN_WRITE, NR_VMSCAN_IMMEDIATE, NR_WRITEBACK_TEMP, NR_ISOLATED_ANON, NR_ISOLATED_FILE, NR_SHMEM, NR_DIRTIED, NR_WRITTEN, NUMA_HIT, NUMA_MISS, NUMA_FOREIGN, NUMA_INTERLEAVE_HIT, NUMA_LOCAL, NUMA_OTHER, NR_ANON_TRANSPARENT_HUGEPAGES, NR_VM_ZONE_STAT_ITEMS };
	++ enum zone_stat_item { NR_FREE_PAGES, NR_LRU_BASE, NR_INACTIVE_ANON = NR_LRU_BASE, NR_ACTIVE_ANON, NR_INACTIVE_FILE, NR_ACTIVE_FILE, NR_UNEVICTABLE, NR_MLOCK, NR_ANON_PAGES, NR_FILE_MAPPED, NR_FILE_PAGES, NR_FILE_DIRTY, NR_WRITEBACK, NR_SLAB_RECLAIMABLE, NR_SLAB_UNRECLAIMABLE, NR_PAGETABLE, NR_KERNEL_STACK, NR_UNSTABLE_NFS, NR_BOUNCE, NR_VMSCAN_WRITE, NR_VMSCAN_IMMEDIATE, NR_WRITEBACK_TEMP, NR_ISOLATED_ANON, NR_ISOLATED_FILE, NR_SHMEM, NR_DIRTIED, NR_WRITTEN, NUMA_HIT, NUMA_MISS, NUMA_FOREIGN, NUMA_INTERLEAVE_HIT, NUMA_LOCAL, NUMA_OTHER, NR_ANON_TRANSPARENT_HUGEPAGES, NR_FREE_CMA_PAGES, NR_VM_ZONE_STAT_ITEMS };


LRU_ALL_EVICTABLE 	( diff_type: Del type: macro file: include/linux/mmzone.h )
	-- #define LRU_ALL_EVICTABLE (LRU_ALL_FILE | LRU_ALL_ANON)


zone 	( diff_type: Mod type: struct file: include/linux/mmzone.h )
	-- struct zone { unsigned long watermark[NR_WMARK]; unsigned long percpu_drift_mark; unsigned long lowmem_reserve[MAX_NR_ZONES]; unsigned long dirty_balance_reserve; int node; unsigned long min_unmapped_pages; unsigned long min_slab_pages; struct per_cpu_pageset __percpu *pageset; spinlock_t lock; int all_unreclaimable; seqlock_t span_seqlock; unsigned long min_cma_pages; struct free_area free_area[MAX_ORDER]; unsigned long *pageblock_flags; unsigned int compact_considered; unsigned int compact_defer_shift; int compact_order_failed; spinlock_t lru_lock; struct lruvec lruvec; unsigned long pages_scanned; unsigned long flags; atomic_long_t vm_stat[NR_VM_ZONE_STAT_ITEMS]; unsigned int inactive_ratio; wait_queue_head_t * wait_table; unsigned long wait_table_hash_nr_entries; unsigned long wait_table_bits; struct pglist_data *zone_pgdat; unsigned long zone_start_pfn; unsigned long spanned_pages; unsigned long present_pages; const char *name; } ____cacheline_internodealigned_in_smp;
	++ struct zone { unsigned long watermark[NR_WMARK]; unsigned long percpu_drift_mark; unsigned long lowmem_reserve[MAX_NR_ZONES]; unsigned long dirty_balance_reserve; int node; unsigned long min_unmapped_pages; unsigned long min_slab_pages; struct per_cpu_pageset __percpu *pageset; spinlock_t lock; int all_unreclaimable; bool compact_blockskip_flush; unsigned long compact_cached_free_pfn; unsigned long compact_cached_migrate_pfn; seqlock_t span_seqlock; struct free_area free_area[MAX_ORDER]; unsigned long *pageblock_flags; unsigned int compact_considered; unsigned int compact_defer_shift; int compact_order_failed; spinlock_t lru_lock; struct lruvec lruvec; unsigned long pages_scanned; unsigned long flags; atomic_long_t vm_stat[NR_VM_ZONE_STAT_ITEMS]; unsigned int inactive_ratio; wait_queue_head_t * wait_table; unsigned long wait_table_hash_nr_entries; unsigned long wait_table_bits; struct pglist_data *zone_pgdat; unsigned long zone_start_pfn; unsigned long spanned_pages; unsigned long present_pages; unsigned long managed_pages; const char *name; } ____cacheline_internodealigned_in_smp;


pglist_data 	( diff_type: Mod type: struct file: include/linux/mmzone.h )
	-- typedef struct pglist_data { struct zone node_zones[MAX_NR_ZONES]; struct zonelist node_zonelists[MAX_ZONELISTS]; int nr_zones; struct page *node_mem_map; struct page_cgroup *node_page_cgroup; struct bootmem_data *bdata; spinlock_t node_size_lock; unsigned long node_start_pfn; unsigned long node_present_pages; unsigned long node_spanned_pages; int node_id; wait_queue_head_t kswapd_wait; struct task_struct *kswapd; int kswapd_max_order; enum zone_type classzone_idx; } pg_data_t;
	++ typedef struct pglist_data { struct zone node_zones[MAX_NR_ZONES]; struct zonelist node_zonelists[MAX_ZONELISTS]; int nr_zones; struct page *node_mem_map; struct page_cgroup *node_page_cgroup; struct bootmem_data *bdata; spinlock_t node_size_lock; unsigned long node_start_pfn; unsigned long node_present_pages; unsigned long node_spanned_pages; int node_id; nodemask_t reclaim_nodes; wait_queue_head_t kswapd_wait; wait_queue_head_t pfmemalloc_wait; struct task_struct *kswapd; int kswapd_max_order; enum zone_type classzone_idx; spinlock_t numabalancing_migrate_lock; unsigned long numabalancing_migrate_next_window; unsigned long numabalancing_migrate_nr_pages; } pg_data_t;


pg_data_t 	( diff_type: Mod type: struct file: include/linux/mmzone.h )
	-- typedef struct pglist_data { struct zone node_zones[MAX_NR_ZONES]; struct zonelist node_zonelists[MAX_ZONELISTS]; int nr_zones; struct page *node_mem_map; struct page_cgroup *node_page_cgroup; struct bootmem_data *bdata; spinlock_t node_size_lock; unsigned long node_start_pfn; unsigned long node_present_pages; unsigned long node_spanned_pages; int node_id; wait_queue_head_t kswapd_wait; struct task_struct *kswapd; int kswapd_max_order; enum zone_type classzone_idx; } pg_data_t;
	++ typedef struct pglist_data { struct zone node_zones[MAX_NR_ZONES]; struct zonelist node_zonelists[MAX_ZONELISTS]; int nr_zones; struct page *node_mem_map; struct page_cgroup *node_page_cgroup; struct bootmem_data *bdata; spinlock_t node_size_lock; unsigned long node_start_pfn; unsigned long node_present_pages; unsigned long node_spanned_pages; int node_id; nodemask_t reclaim_nodes; wait_queue_head_t kswapd_wait; wait_queue_head_t pfmemalloc_wait; struct task_struct *kswapd; int kswapd_max_order; enum zone_type classzone_idx; spinlock_t numabalancing_migrate_lock; unsigned long numabalancing_migrate_next_window; unsigned long numabalancing_migrate_nr_pages; } pg_data_t;


build_all_zonelists 	( diff_type: Mod type: prototype file: include/linux/mmzone.h )
	-- void build_all_zonelists(void *data);
	++ void build_all_zonelists(pg_data_t *pgdat,struct zone *zone);


lruvec_init 	( diff_type: Mod type: prototype file: include/linux/mmzone.h )
	-- extern void lruvec_init(struct lruvec *lruvec,struct zone *zone);
	++ extern void lruvec_init(struct lruvec *lruvec);


SD_MC_INIT 	( diff_type: Mod type: macro file: include/linux/topology.h )
	-- #define SD_MC_INIT (struct sched_domain) { .min_interval = 1, .max_interval = 4, .busy_factor = 64, .imbalance_pct = 125, .cache_nice_tries = 1, .busy_idx = 2, .wake_idx = 0, .forkexec_idx = 0, .flags = 1*SD_LOAD_BALANCE | 1*SD_BALANCE_NEWIDLE | 1*SD_BALANCE_EXEC | 1*SD_BALANCE_FORK | 0*SD_BALANCE_WAKE | 1*SD_WAKE_AFFINE | 0*SD_PREFER_LOCAL | 0*SD_SHARE_CPUPOWER | 1*SD_SHARE_PKG_RESOURCES | 0*SD_SERIALIZE , .last_balance = jiffies, .balance_interval = 1, }
	++ #define SD_MC_INIT (struct sched_domain) { .min_interval = 1, .max_interval = 4, .busy_factor = 64, .imbalance_pct = 125, .cache_nice_tries = 1, .busy_idx = 2, .wake_idx = 0, .forkexec_idx = 0, .flags = 1*SD_LOAD_BALANCE | 1*SD_BALANCE_NEWIDLE | 1*SD_BALANCE_EXEC | 1*SD_BALANCE_FORK | 0*SD_BALANCE_WAKE | 1*SD_WAKE_AFFINE | 0*SD_SHARE_CPUPOWER | 1*SD_SHARE_PKG_RESOURCES | 0*SD_SERIALIZE , .last_balance = jiffies, .balance_interval = 1, }


SD_CPU_INIT 	( diff_type: Mod type: macro file: include/linux/topology.h )
	-- #define SD_CPU_INIT (struct sched_domain) { .min_interval = 1, .max_interval = 4, .busy_factor = 64, .imbalance_pct = 125, .cache_nice_tries = 1, .busy_idx = 2, .idle_idx = 1, .newidle_idx = 0, .wake_idx = 0, .forkexec_idx = 0, .flags = 1*SD_LOAD_BALANCE | 1*SD_BALANCE_NEWIDLE | 1*SD_BALANCE_EXEC | 1*SD_BALANCE_FORK | 0*SD_BALANCE_WAKE | 1*SD_WAKE_AFFINE | 0*SD_PREFER_LOCAL | 0*SD_SHARE_CPUPOWER | 0*SD_SHARE_PKG_RESOURCES | 0*SD_SERIALIZE , .last_balance = jiffies, .balance_interval = 1, }
	++ #define SD_CPU_INIT (struct sched_domain) { .min_interval = 1, .max_interval = 4, .busy_factor = 64, .imbalance_pct = 125, .cache_nice_tries = 1, .busy_idx = 2, .idle_idx = 1, .newidle_idx = 0, .wake_idx = 0, .forkexec_idx = 0, .flags = 1*SD_LOAD_BALANCE | 1*SD_BALANCE_NEWIDLE | 1*SD_BALANCE_EXEC | 1*SD_BALANCE_FORK | 0*SD_BALANCE_WAKE | 1*SD_WAKE_AFFINE | 0*SD_SHARE_CPUPOWER | 0*SD_SHARE_PKG_RESOURCES | 0*SD_SERIALIZE | 1*SD_PREFER_SIBLING , .last_balance = jiffies, .balance_interval = 1, }


dev_pm_info 	( diff_type: Mod type: struct file: include/linux/pm.h )
	-- struct dev_pm_info { pm_message_t power_state; unsigned int can_wakeup:1; unsigned int async_suspend:1; bool is_prepared:1; bool is_suspended:1; bool ignore_children:1; spinlock_t lock; struct list_head entry; struct completion completion; struct wakeup_source *wakeup; bool wakeup_path:1; unsigned int should_wakeup:1; struct timer_list suspend_timer; unsigned long timer_expires; struct work_struct work; wait_queue_head_t wait_queue; atomic_t usage_count; atomic_t child_count; unsigned int disable_depth:3; unsigned int idle_notification:1; unsigned int request_pending:1; unsigned int deferred_resume:1; unsigned int run_wake:1; unsigned int runtime_auto:1; unsigned int no_callbacks:1; unsigned int irq_safe:1; unsigned int use_autosuspend:1; unsigned int timer_autosuspends:1; enum rpm_request request; enum rpm_status runtime_status; int runtime_error; int autosuspend_delay; unsigned long last_busy; unsigned long active_jiffies; unsigned long suspended_jiffies; unsigned long accounting_timestamp; struct dev_pm_qos_request *pq_req; struct pm_subsys_data *subsys_data; struct pm_qos_constraints *constraints; };
	++ struct dev_pm_info { pm_message_t power_state; unsigned int can_wakeup:1; unsigned int async_suspend:1; bool is_prepared:1; bool is_suspended:1; bool ignore_children:1; bool early_init:1; spinlock_t lock; struct list_head entry; struct completion completion; struct wakeup_source *wakeup; bool wakeup_path:1; bool syscore:1; unsigned int should_wakeup:1; struct timer_list suspend_timer; unsigned long timer_expires; struct work_struct work; wait_queue_head_t wait_queue; atomic_t usage_count; atomic_t child_count; unsigned int disable_depth:3; unsigned int idle_notification:1; unsigned int request_pending:1; unsigned int deferred_resume:1; unsigned int run_wake:1; unsigned int runtime_auto:1; unsigned int no_callbacks:1; unsigned int irq_safe:1; unsigned int use_autosuspend:1; unsigned int timer_autosuspends:1; enum rpm_request request; enum rpm_status runtime_status; int runtime_error; int autosuspend_delay; unsigned long last_busy; unsigned long active_jiffies; unsigned long suspended_jiffies; unsigned long accounting_timestamp; struct pm_subsys_data *subsys_data; struct dev_pm_qos *qos; };


__WARN_RATELIMIT 	( diff_type: Del type: macro file: include/linux/ratelimit.h )
	-- #define __WARN_RATELIMIT(condition,state,format...) ({ int rtn = WARN(condition, format); rtn; })


WARN_RATELIMIT 	( diff_type: Mod type: macro file: include/linux/ratelimit.h )
	-- #define WARN_RATELIMIT(condition,format...) ({ int rtn = WARN(condition, format); rtn; })
	++ #define WARN_RATELIMIT(condition,format,...) ({ int rtn = WARN(condition, format, ##__VA_ARGS__); rtn; })


dev_archdata 	( diff_type: Mod type: struct file: arch/x86/include/asm/device.h )
	-- struct dev_archdata { void *acpi_handle; struct dma_map_ops *dma_ops; void *iommu; };
	++ struct dev_archdata { struct dma_map_ops *dma_ops; void *iommu; };


VM_GROWSUP 	( diff_type: Mod type: macro file: include/linux/mm.h )
	-- #define VM_GROWSUP 0x00000000
	++ # define VM_GROWSUP VM_NONE


VM_NOHUGEPAGE 	( diff_type: Mod type: macro file: include/linux/mm.h )
	-- #define VM_NOHUGEPAGE 0x00000200
	++ #define VM_NOHUGEPAGE 0x40000000


VM_EXECUTABLE 	( diff_type: Del type: macro file: include/linux/mm.h )
	-- #define VM_EXECUTABLE 0x00001000


VM_RESERVED 	( diff_type: Del type: macro file: include/linux/mm.h )
	-- #define VM_RESERVED 0x00080000


VM_MAPPED_COPY 	( diff_type: Mod type: macro file: include/linux/mm.h )
	-- #define VM_MAPPED_COPY 0x01000000
	++ # define VM_MAPPED_COPY VM_ARCH_1


VM_HUGEPAGE 	( diff_type: Mod type: macro file: include/linux/mm.h )
	-- #define VM_HUGEPAGE 0x01000000
	++ #define VM_HUGEPAGE 0x20000000


VM_INSERTPAGE 	( diff_type: Del type: macro file: include/linux/mm.h )
	-- #define VM_INSERTPAGE 0x02000000


VM_NODUMP 	( diff_type: Del type: macro file: include/linux/mm.h )
	-- #define VM_NODUMP 0x04000000


VM_CAN_NONLINEAR 	( diff_type: Del type: macro file: include/linux/mm.h )
	-- #define VM_CAN_NONLINEAR 0x08000000


VM_SAO 	( diff_type: Mod type: macro file: include/linux/mm.h )
	-- #define VM_SAO 0x20000000
	++ # define VM_SAO VM_ARCH_1


VM_PFN_AT_MMAP 	( diff_type: Del type: macro file: include/linux/mm.h )
	-- #define VM_PFN_AT_MMAP 0x40000000


VM_SPECIAL 	( diff_type: Mod type: macro file: include/linux/mm.h )
	-- #define VM_SPECIAL (VM_IO | VM_DONTEXPAND | VM_RESERVED | VM_PFNMAP)
	++ #define VM_SPECIAL (VM_IO | VM_DONTEXPAND | VM_PFNMAP)


is_linear_pfn_mapping 	( diff_type: Del type: function file: include/linux/mm.h )
	-- static inline int is_linear_pfn_mapping(struct vm_area_struct *vma)


is_pfn_mapping 	( diff_type: Del type: function file: include/linux/mm.h )
	-- static inline int is_pfn_mapping(struct vm_area_struct *vma)


vm_operations_struct 	( diff_type: Mod type: struct file: include/linux/mm.h )
	-- struct vm_operations_struct { void (*open)(struct vm_area_struct * area); void (*close)(struct vm_area_struct * area); int (*fault)(struct vm_area_struct *vma, struct vm_fault *vmf); int (*page_mkwrite)(struct vm_area_struct *vma, struct vm_fault *vmf); int (*access)(struct vm_area_struct *vma, unsigned long addr,void *buf, int len, int write); int (*set_policy)(struct vm_area_struct *vma, struct mempolicy *new); struct mempolicy *(*get_policy)(struct vm_area_struct *vma,unsigned long addr); int (*migrate)(struct vm_area_struct *vma, const nodemask_t *from,const nodemask_t *to, unsigned long flags); };
	++ struct vm_operations_struct { void (*open)(struct vm_area_struct * area); void (*close)(struct vm_area_struct * area); int (*fault)(struct vm_area_struct *vma, struct vm_fault *vmf); int (*page_mkwrite)(struct vm_area_struct *vma, struct vm_fault *vmf); int (*access)(struct vm_area_struct *vma, unsigned long addr,void *buf, int len, int write); int (*set_policy)(struct vm_area_struct *vma, struct mempolicy *new); struct mempolicy *(*get_policy)(struct vm_area_struct *vma,unsigned long addr); int (*migrate)(struct vm_area_struct *vma, const nodemask_t *from,const nodemask_t *to, unsigned long flags); int (*remap_pages)(struct vm_area_struct *vma, unsigned long addr,unsigned long size, pgoff_t pgoff); };


vmtruncate 	( diff_type: Del type: prototype file: include/linux/mm.h )
	-- extern int vmtruncate(struct inode *inode,loff_t offset);


move_page_tables 	( diff_type: Mod type: prototype file: include/linux/mm.h )
	-- extern unsigned long move_page_tables(struct vm_area_struct *vma,unsigned long old_addr, struct vm_area_struct *new_vma,unsigned long new_addr, unsigned long len);
	++ extern unsigned long move_page_tables(struct vm_area_struct *vma,unsigned long old_addr, struct vm_area_struct *new_vma,unsigned long new_addr, unsigned long len,bool need_rmap_locks);


vma_prio_tree_add 	( diff_type: Del type: prototype file: include/linux/mm.h )
	-- void vma_prio_tree_add(struct vm_area_struct *,struct vm_area_struct *old);


vma_prio_tree_insert 	( diff_type: Del type: prototype file: include/linux/mm.h )
	-- void vma_prio_tree_insert(struct vm_area_struct *,struct prio_tree_root *);


vma_prio_tree_remove 	( diff_type: Del type: prototype file: include/linux/mm.h )
	-- void vma_prio_tree_remove(struct vm_area_struct *,struct prio_tree_root *);


vma_prio_tree_next 	( diff_type: Del type: prototype file: include/linux/mm.h )
	-- struct vm_area_struct *vma_prio_tree_next(struct vm_area_struct *vma,struct prio_tree_iter *iter);


vma_prio_tree_foreach 	( diff_type: Del type: macro file: include/linux/mm.h )
	-- #define vma_prio_tree_foreach(vma,iter,root,begin,end) for (prio_tree_iter_init(iter, root, begin, end), vma = NULL; (vma = vma_prio_tree_next(vma, iter)); )


copy_vma 	( diff_type: Mod type: prototype file: include/linux/mm.h )
	-- extern struct vm_area_struct *copy_vma(struct vm_area_struct **,unsigned long addr, unsigned long len, pgoff_t pgoff);
	++ extern struct vm_area_struct *copy_vma(struct vm_area_struct **,unsigned long addr, unsigned long len, pgoff_t pgoff,bool *need_rmap_locks);


added_exe_file_vma 	( diff_type: Del type: prototype file: include/linux/mm.h )
	-- extern void added_exe_file_vma(struct mm_struct *mm);


removed_exe_file_vma 	( diff_type: Del type: prototype file: include/linux/mm.h )
	-- extern void removed_exe_file_vma(struct mm_struct *mm);


x86_init_paging 	( diff_type: Mod type: struct file: arch/x86/include/asm/x86_init.h )
	-- struct x86_init_paging { void (*pagetable_setup_start)(pgd_t *base); void (*pagetable_setup_done)(pgd_t *base); };
	++ struct x86_init_paging { void (*pagetable_init)(void); };


x86_platform_ops 	( diff_type: Mod type: struct file: arch/x86/include/asm/x86_init.h )
	-- struct x86_platform_ops { unsigned long (*calibrate_tsc)(void); void (*wallclock_init)(void); unsigned long (*get_wallclock)(void); int (*set_wallclock)(unsigned long nowtime); void (*iommu_shutdown)(void); bool (*is_untracked_pat_range)(u64 start, u64 end); void (*nmi_init)(void); unsigned char (*get_nmi_reason)(void); int (*i8042_detect)(void); void (*save_sched_clock_state)(void); void (*restore_sched_clock_state)(void); };
	++ struct x86_platform_ops { unsigned long (*calibrate_tsc)(void); unsigned long (*get_wallclock)(void); int (*set_wallclock)(unsigned long nowtime); void (*iommu_shutdown)(void); bool (*is_untracked_pat_range)(u64 start, u64 end); void (*nmi_init)(void); unsigned char (*get_nmi_reason)(void); int (*i8042_detect)(void); void (*save_sched_clock_state)(void); void (*restore_sched_clock_state)(void); void (*apic_post_init)(void); };


dma_attr 	( diff_type: Mod type: enum file: include/linux/dma-attrs.h )
	-- enum dma_attr { DMA_ATTR_WRITE_BARRIER, DMA_ATTR_WEAK_ORDERING, DMA_ATTR_WRITE_COMBINE, DMA_ATTR_NON_CONSISTENT, DMA_ATTR_MAX, };
	++ enum dma_attr { DMA_ATTR_WRITE_BARRIER, DMA_ATTR_WEAK_ORDERING, DMA_ATTR_WRITE_COMBINE, DMA_ATTR_NON_CONSISTENT, DMA_ATTR_NO_KERNEL_MAPPING, DMA_ATTR_SKIP_CPU_SYNC, DMA_ATTR_FORCE_CONTIGUOUS, DMA_ATTR_MAX, };


dma_alloc_attrs 	( diff_type: All type: function file: arch/x86/include/asm/dma-mapping.h-->include/asm-generic/dma-mapping-broken.h )
	-- dma_alloc_attrs(struct device *dev,size_t size,dma_addr_t *dma_handle,gfp_t gfp, struct dma_attrs *attrs)
	++ static inline void *dma_alloc_attrs(struct device *dev,size_t size,dma_addr_t *dma_handle, gfp_t flag,struct dma_attrs *attrs)


dma_free_attrs 	( diff_type: All type: function file: arch/x86/include/asm/dma-mapping.h-->include/asm-generic/dma-mapping-broken.h )
	-- static inline void dma_free_attrs(struct device *dev,size_t size,void *vaddr, dma_addr_t bus,struct dma_attrs *attrs)
	++ static inline void dma_free_attrs(struct device *dev,size_t size,void *cpu_addr, dma_addr_t dma_handle,struct dma_attrs *attrs)


CSIGNAL 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define CSIGNAL 0x000000ff


CLONE_VM 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define CLONE_VM 0x00000100


CLONE_FS 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define CLONE_FS 0x00000200


CLONE_FILES 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define CLONE_FILES 0x00000400


CLONE_SIGHAND 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define CLONE_SIGHAND 0x00000800


CLONE_PTRACE 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define CLONE_PTRACE 0x00002000


CLONE_VFORK 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define CLONE_VFORK 0x00004000


CLONE_PARENT 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define CLONE_PARENT 0x00008000


CLONE_THREAD 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define CLONE_THREAD 0x00010000


CLONE_NEWNS 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define CLONE_NEWNS 0x00020000


CLONE_SYSVSEM 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define CLONE_SYSVSEM 0x00040000


CLONE_SETTLS 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define CLONE_SETTLS 0x00080000


CLONE_PARENT_SETTID 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define CLONE_PARENT_SETTID 0x00100000


CLONE_CHILD_CLEARTID 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define CLONE_CHILD_CLEARTID 0x00200000


CLONE_DETACHED 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define CLONE_DETACHED 0x00400000


CLONE_UNTRACED 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define CLONE_UNTRACED 0x00800000


CLONE_CHILD_SETTID 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define CLONE_CHILD_SETTID 0x01000000


CLONE_NEWUTS 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define CLONE_NEWUTS 0x04000000


CLONE_NEWIPC 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define CLONE_NEWIPC 0x08000000


CLONE_NEWUSER 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define CLONE_NEWUSER 0x10000000


CLONE_NEWPID 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define CLONE_NEWPID 0x20000000


CLONE_NEWNET 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define CLONE_NEWNET 0x40000000


CLONE_IO 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define CLONE_IO 0x80000000


SCHED_NORMAL 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define SCHED_NORMAL 0


SCHED_FIFO 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define SCHED_FIFO 1


SCHED_RR 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define SCHED_RR 2


SCHED_BATCH 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define SCHED_BATCH 3


SCHED_IDLE 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define SCHED_IDLE 5


SCHED_RESET_ON_FORK 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define SCHED_RESET_ON_FORK 0x40000000


TASK_STATE_MAX 	( diff_type: Mod type: macro file: include/linux/sched.h )
	-- #define TASK_STATE_MAX 512
	++ #define TASK_STATE_MAX 1024


TASK_STATE_TO_CHAR_STR 	( diff_type: Mod type: macro file: include/linux/sched.h )
	-- #define TASK_STATE_TO_CHAR_STR "RSDTtZXxKW"
	++ #define TASK_STATE_TO_CHAR_STR "RSDTtZXxKWP"


select_nohz_load_balancer 	( diff_type: Del type: function file: include/linux/sched.h )
	-- static inline void select_nohz_load_balancer(int stop_tick) { }


signal_struct 	( diff_type: Mod type: struct file: include/linux/sched.h )
	-- struct signal_struct { atomic_t sigcnt; atomic_t live; int nr_threads; wait_queue_head_t wait_chldexit; struct task_struct *curr_target; struct sigpending shared_pending; int group_exit_code; int notify_count; struct task_struct *group_exit_task; int group_stop_count; unsigned int flags; unsigned int is_child_subreaper:1; unsigned int has_child_subreaper:1; struct list_head posix_timers; struct hrtimer real_timer; struct pid *leader_pid; ktime_t it_real_incr; struct cpu_itimer it[2]; struct thread_group_cputimer cputimer; struct task_cputime cputime_expires; struct list_head cpu_timers[3]; struct pid *tty_old_pgrp; int leader; struct tty_struct *tty; struct autogroup *autogroup; cputime_t utime, stime, cutime, cstime; cputime_t gtime; cputime_t cgtime; cputime_t prev_utime, prev_stime; unsigned long nvcsw, nivcsw, cnvcsw, cnivcsw; unsigned long min_flt, maj_flt, cmin_flt, cmaj_flt; unsigned long inblock, oublock, cinblock, coublock; unsigned long maxrss, cmaxrss; struct task_io_accounting ioac; unsigned long long sum_sched_runtime; struct rlimit rlim[RLIM_NLIMITS]; struct pacct_struct pacct; struct taskstats *stats; unsigned audit_tty; struct tty_audit_buf *tty_audit_buf; struct rw_semaphore group_rwsem; int oom_adj; int oom_score_adj; int oom_score_adj_min; struct mutex cred_guard_mutex; };
	++ struct signal_struct { atomic_t sigcnt; atomic_t live; int nr_threads; wait_queue_head_t wait_chldexit; struct task_struct *curr_target; struct sigpending shared_pending; int group_exit_code; int notify_count; struct task_struct *group_exit_task; int group_stop_count; unsigned int flags; unsigned int is_child_subreaper:1; unsigned int has_child_subreaper:1; struct list_head posix_timers; struct hrtimer real_timer; struct pid *leader_pid; ktime_t it_real_incr; struct cpu_itimer it[2]; struct thread_group_cputimer cputimer; struct task_cputime cputime_expires; struct list_head cpu_timers[3]; struct pid *tty_old_pgrp; int leader; struct tty_struct *tty; struct autogroup *autogroup; cputime_t utime, stime, cutime, cstime; cputime_t gtime; cputime_t cgtime; struct cputime prev_cputime; unsigned long nvcsw, nivcsw, cnvcsw, cnivcsw; unsigned long min_flt, maj_flt, cmin_flt, cmaj_flt; unsigned long inblock, oublock, cinblock, coublock; unsigned long maxrss, cmaxrss; struct task_io_accounting ioac; unsigned long long sum_sched_runtime; struct rlimit rlim[RLIM_NLIMITS]; struct pacct_struct pacct; struct taskstats *stats; unsigned audit_tty; struct tty_audit_buf *tty_audit_buf; struct rw_semaphore group_rwsem; oom_flags_t oom_flags; short oom_score_adj; short oom_score_adj_min; struct mutex cred_guard_mutex; };


__ARCH_WANT_UNLOCKED_CTXSW 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- # define __ARCH_WANT_UNLOCKED_CTXSW


SD_PREFER_LOCAL 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define SD_PREFER_LOCAL 0x0040


sched_class 	( diff_type: Mod type: struct file: include/linux/sched.h )
	-- struct sched_class { const struct sched_class *next; void (*enqueue_task) (struct rq *rq, struct task_struct *p, int flags); void (*dequeue_task) (struct rq *rq, struct task_struct *p, int flags); void (*yield_task) (struct rq *rq); bool (*yield_to_task) (struct rq *rq, struct task_struct *p, bool preempt); void (*check_preempt_curr) (struct rq *rq, struct task_struct *p, int flags); struct task_struct * (*pick_next_task) (struct rq *rq); void (*put_prev_task) (struct rq *rq, struct task_struct *p); int (*select_task_rq)(struct task_struct *p, int sd_flag, int flags); void (*pre_schedule) (struct rq *this_rq, struct task_struct *task); void (*post_schedule) (struct rq *this_rq); void (*task_waking) (struct task_struct *task); void (*task_woken) (struct rq *this_rq, struct task_struct *task); void (*set_cpus_allowed)(struct task_struct *p,const struct cpumask *newmask); void (*rq_online)(struct rq *rq); void (*rq_offline)(struct rq *rq); void (*set_curr_task) (struct rq *rq); void (*task_tick) (struct rq *rq, struct task_struct *p, int queued); void (*task_fork) (struct task_struct *p); void (*switched_from) (struct rq *this_rq, struct task_struct *task); void (*switched_to) (struct rq *this_rq, struct task_struct *task); void (*prio_changed) (struct rq *this_rq, struct task_struct *task,int oldprio); unsigned int (*get_rr_interval) (struct rq *rq,struct task_struct *task); void (*task_move_group) (struct task_struct *p, int on_rq); };
	++ struct sched_class { const struct sched_class *next; void (*enqueue_task) (struct rq *rq, struct task_struct *p, int flags); void (*dequeue_task) (struct rq *rq, struct task_struct *p, int flags); void (*yield_task) (struct rq *rq); bool (*yield_to_task) (struct rq *rq, struct task_struct *p, bool preempt); void (*check_preempt_curr) (struct rq *rq, struct task_struct *p, int flags); struct task_struct * (*pick_next_task) (struct rq *rq); void (*put_prev_task) (struct rq *rq, struct task_struct *p); int (*select_task_rq)(struct task_struct *p, int sd_flag, int flags); void (*migrate_task_rq)(struct task_struct *p, int next_cpu); void (*pre_schedule) (struct rq *this_rq, struct task_struct *task); void (*post_schedule) (struct rq *this_rq); void (*task_waking) (struct task_struct *task); void (*task_woken) (struct rq *this_rq, struct task_struct *task); void (*set_cpus_allowed)(struct task_struct *p,const struct cpumask *newmask); void (*rq_online)(struct rq *rq); void (*rq_offline)(struct rq *rq); void (*set_curr_task) (struct rq *rq); void (*task_tick) (struct rq *rq, struct task_struct *p, int queued); void (*task_fork) (struct task_struct *p); void (*switched_from) (struct rq *this_rq, struct task_struct *task); void (*switched_to) (struct rq *this_rq, struct task_struct *task); void (*prio_changed) (struct rq *this_rq, struct task_struct *task,int oldprio); unsigned int (*get_rr_interval) (struct rq *rq,struct task_struct *task); void (*task_move_group) (struct task_struct *p, int on_rq); };


sched_entity 	( diff_type: Mod type: struct file: include/linux/sched.h )
	-- struct sched_entity { struct load_weight load; struct rb_node run_node; struct list_head group_node; unsigned int on_rq; u64 exec_start; u64 sum_exec_runtime; u64 vruntime; u64 prev_sum_exec_runtime; u64 nr_migrations; struct sched_statistics statistics; struct sched_entity *parent; struct cfs_rq *cfs_rq; struct cfs_rq *my_q; };
	++ struct sched_entity { struct load_weight load; struct rb_node run_node; struct list_head group_node; unsigned int on_rq; u64 exec_start; u64 sum_exec_runtime; u64 vruntime; u64 prev_sum_exec_runtime; u64 nr_migrations; struct sched_statistics statistics; struct sched_entity *parent; struct cfs_rq *cfs_rq; struct cfs_rq *my_q; struct sched_avg avg; };


task_struct 	( diff_type: Mod type: struct file: include/linux/sched.h )
	-- struct task_struct { volatile long state; void *stack; atomic_t usage; unsigned int flags; unsigned int ptrace; struct llist_node wake_entry; int on_cpu; int on_rq; int prio, static_prio, normal_prio; unsigned int rt_priority; const struct sched_class *sched_class; struct sched_entity se; struct sched_rt_entity rt; struct task_group *sched_task_group; struct hlist_head preempt_notifiers; unsigned char fpu_counter; unsigned int btrace_seq; unsigned int policy; int nr_cpus_allowed; cpumask_t cpus_allowed; int rcu_read_lock_nesting; char rcu_read_unlock_special; struct list_head rcu_node_entry; struct rcu_node *rcu_blocked_node; struct rt_mutex *rcu_boost_mutex; struct sched_info sched_info; struct list_head tasks; struct plist_node pushable_tasks; struct mm_struct *mm, *active_mm; unsigned brk_randomized:1; struct task_rss_stat rss_stat; int exit_state; int exit_code, exit_signal; int pdeath_signal; unsigned int jobctl; unsigned int personality; unsigned did_exec:1; unsigned in_execve:1; unsigned in_iowait:1; unsigned no_new_privs:1; unsigned sched_reset_on_fork:1; unsigned sched_contributes_to_load:1; pid_t pid; pid_t tgid; unsigned long stack_canary; struct task_struct __rcu *real_parent; struct task_struct __rcu *parent; struct list_head children; struct list_head sibling; struct task_struct *group_leader; struct list_head ptraced; struct list_head ptrace_entry; struct pid_link pids[PIDTYPE_MAX]; struct list_head thread_group; struct completion *vfork_done; int __user *set_child_tid; int __user *clear_child_tid; cputime_t utime, stime, utimescaled, stimescaled; cputime_t gtime; cputime_t prev_utime, prev_stime; unsigned long nvcsw, nivcsw; struct timespec start_time; struct timespec real_start_time; unsigned long min_flt, maj_flt; struct task_cputime cputime_expires; struct list_head cpu_timers[3]; const struct cred __rcu *real_cred; const struct cred __rcu *cred; char comm[TASK_COMM_LEN]; int link_count, total_link_count; struct sysv_sem sysvsem; unsigned long last_switch_count; struct thread_struct thread; struct fs_struct *fs; struct files_struct *files; struct nsproxy *nsproxy; struct signal_struct *signal; struct sighand_struct *sighand; sigset_t blocked, real_blocked; sigset_t saved_sigmask; struct sigpending pending; unsigned long sas_ss_sp; size_t sas_ss_size; int (*notifier)(void *priv); void *notifier_data; sigset_t *notifier_mask; struct hlist_head task_works; struct audit_context *audit_context; uid_t loginuid; unsigned int sessionid; struct seccomp seccomp; u32 parent_exec_id; u32 self_exec_id; spinlock_t alloc_lock; raw_spinlock_t pi_lock; struct plist_head pi_waiters; struct rt_mutex_waiter *pi_blocked_on; struct mutex_waiter *blocked_on; unsigned int irq_events; unsigned long hardirq_enable_ip; unsigned long hardirq_disable_ip; unsigned int hardirq_enable_event; unsigned int hardirq_disable_event; int hardirqs_enabled; int hardirq_context; unsigned long softirq_disable_ip; unsigned long softirq_enable_ip; unsigned int softirq_disable_event; unsigned int softirq_enable_event; int softirqs_enabled; int softirq_context; # define MAX_LOCK_DEPTH 48UL u64 curr_chain_key; int lockdep_depth; unsigned int lockdep_recursion; struct held_lock held_locks[MAX_LOCK_DEPTH]; gfp_t lockdep_reclaim_gfp; void *journal_info; struct bio_list *bio_list; struct blk_plug *plug; struct reclaim_state *reclaim_state; struct backing_dev_info *backing_dev_info; struct io_context *io_context; unsigned long ptrace_message; siginfo_t *last_siginfo; struct task_io_accounting ioac; u64 acct_rss_mem1; u64 acct_vm_mem1; cputime_t acct_timexpd; nodemask_t mems_allowed; seqcount_t mems_allowed_seq; int cpuset_mem_spread_rotor; int cpuset_slab_spread_rotor; struct css_set __rcu *cgroups; struct list_head cg_list; struct robust_list_head __user *robust_list; struct compat_robust_list_head __user *compat_robust_list; struct list_head pi_state_list; struct futex_pi_state *pi_state_cache; struct perf_event_context *perf_event_ctxp[perf_nr_task_contexts]; struct mutex perf_event_mutex; struct list_head perf_event_list; struct mempolicy *mempolicy; short il_next; short pref_node_fork; struct rcu_head rcu; struct pipe_inode_info *splice_pipe; struct task_delay_info *delays; int make_it_fail; int nr_dirtied; int nr_dirtied_pause; unsigned long dirty_paused_when; int latency_record_count; struct latency_record latency_record[LT_SAVECOUNT]; unsigned long timer_slack_ns; unsigned long default_timer_slack_ns; struct list_head *scm_work_list; int curr_ret_stack; struct ftrace_ret_stack *ret_stack; unsigned long long ftrace_timestamp; atomic_t trace_overrun; atomic_t tracing_graph_pause; unsigned long trace; unsigned long trace_recursion; struct memcg_batch_info { int do_batch; struct mem_cgroup *memcg; unsigned long nr_pages; unsigned long memsw_nr_pages; } memcg_batch; atomic_t ptrace_bp_refcnt; struct uprobe_task *utask; int uprobe_srcu_id; };
	++ struct task_struct { volatile long state; void *stack; atomic_t usage; unsigned int flags; unsigned int ptrace; struct llist_node wake_entry; int on_cpu; int on_rq; int prio, static_prio, normal_prio; unsigned int rt_priority; const struct sched_class *sched_class; struct sched_entity se; struct sched_rt_entity rt; struct task_group *sched_task_group; struct hlist_head preempt_notifiers; unsigned char fpu_counter; unsigned int btrace_seq; unsigned int policy; int nr_cpus_allowed; cpumask_t cpus_allowed; int rcu_read_lock_nesting; char rcu_read_unlock_special; struct list_head rcu_node_entry; struct rcu_node *rcu_blocked_node; struct rt_mutex *rcu_boost_mutex; struct sched_info sched_info; struct list_head tasks; struct plist_node pushable_tasks; struct mm_struct *mm, *active_mm; unsigned brk_randomized:1; struct task_rss_stat rss_stat; int exit_state; int exit_code, exit_signal; int pdeath_signal; unsigned int jobctl; unsigned int personality; unsigned did_exec:1; unsigned in_execve:1; unsigned in_iowait:1; unsigned no_new_privs:1; unsigned sched_reset_on_fork:1; unsigned sched_contributes_to_load:1; pid_t pid; pid_t tgid; unsigned long stack_canary; struct task_struct __rcu *real_parent; struct task_struct __rcu *parent; struct list_head children; struct list_head sibling; struct task_struct *group_leader; struct list_head ptraced; struct list_head ptrace_entry; struct pid_link pids[PIDTYPE_MAX]; struct list_head thread_group; struct completion *vfork_done; int __user *set_child_tid; int __user *clear_child_tid; cputime_t utime, stime, utimescaled, stimescaled; cputime_t gtime; struct cputime prev_cputime; unsigned long nvcsw, nivcsw; struct timespec start_time; struct timespec real_start_time; unsigned long min_flt, maj_flt; struct task_cputime cputime_expires; struct list_head cpu_timers[3]; const struct cred __rcu *real_cred; const struct cred __rcu *cred; char comm[TASK_COMM_LEN]; int link_count, total_link_count; struct sysv_sem sysvsem; unsigned long last_switch_count; struct thread_struct thread; struct fs_struct *fs; struct files_struct *files; struct nsproxy *nsproxy; struct signal_struct *signal; struct sighand_struct *sighand; sigset_t blocked, real_blocked; sigset_t saved_sigmask; struct sigpending pending; unsigned long sas_ss_sp; size_t sas_ss_size; int (*notifier)(void *priv); void *notifier_data; sigset_t *notifier_mask; struct callback_head *task_works; struct audit_context *audit_context; kuid_t loginuid; unsigned int sessionid; struct seccomp seccomp; u32 parent_exec_id; u32 self_exec_id; spinlock_t alloc_lock; raw_spinlock_t pi_lock; struct plist_head pi_waiters; struct rt_mutex_waiter *pi_blocked_on; struct mutex_waiter *blocked_on; unsigned int irq_events; unsigned long hardirq_enable_ip; unsigned long hardirq_disable_ip; unsigned int hardirq_enable_event; unsigned int hardirq_disable_event; int hardirqs_enabled; int hardirq_context; unsigned long softirq_disable_ip; unsigned long softirq_enable_ip; unsigned int softirq_disable_event; unsigned int softirq_enable_event; int softirqs_enabled; int softirq_context; # define MAX_LOCK_DEPTH 48UL u64 curr_chain_key; int lockdep_depth; unsigned int lockdep_recursion; struct held_lock held_locks[MAX_LOCK_DEPTH]; gfp_t lockdep_reclaim_gfp; void *journal_info; struct bio_list *bio_list; struct blk_plug *plug; struct reclaim_state *reclaim_state; struct backing_dev_info *backing_dev_info; struct io_context *io_context; unsigned long ptrace_message; siginfo_t *last_siginfo; struct task_io_accounting ioac; u64 acct_rss_mem1; u64 acct_vm_mem1; cputime_t acct_timexpd; nodemask_t mems_allowed; seqcount_t mems_allowed_seq; int cpuset_mem_spread_rotor; int cpuset_slab_spread_rotor; struct css_set __rcu *cgroups; struct list_head cg_list; struct robust_list_head __user *robust_list; struct compat_robust_list_head __user *compat_robust_list; struct list_head pi_state_list; struct futex_pi_state *pi_state_cache; struct perf_event_context *perf_event_ctxp[perf_nr_task_contexts]; struct mutex perf_event_mutex; struct list_head perf_event_list; struct mempolicy *mempolicy; short il_next; short pref_node_fork; int numa_scan_seq; int numa_migrate_seq; unsigned int numa_scan_period; u64 node_stamp; struct callback_head numa_work; struct rcu_head rcu; struct pipe_inode_info *splice_pipe; struct page_frag task_frag; struct task_delay_info *delays; int make_it_fail; int nr_dirtied; int nr_dirtied_pause; unsigned long dirty_paused_when; int latency_record_count; struct latency_record latency_record[LT_SAVECOUNT]; unsigned long timer_slack_ns; unsigned long default_timer_slack_ns; int curr_ret_stack; struct ftrace_ret_stack *ret_stack; unsigned long long ftrace_timestamp; atomic_t trace_overrun; atomic_t tracing_graph_pause; unsigned long trace; unsigned long trace_recursion; struct memcg_batch_info { int do_batch; struct mem_cgroup *memcg; unsigned long nr_pages; unsigned long memsw_nr_pages; } memcg_batch; unsigned int memcg_kmem_skip_account; atomic_t ptrace_bp_refcnt; struct uprobe_task *utask; };


is_container_init 	( diff_type: Del type: prototype file: include/linux/sched.h )
	-- extern int is_container_init(struct task_struct *tsk);


task_times 	( diff_type: Del type: prototype file: include/linux/sched.h )
	-- extern void task_times(struct task_struct *p,cputime_t *ut,cputime_t *st);


thread_group_times 	( diff_type: Del type: prototype file: include/linux/sched.h )
	-- extern void thread_group_times(struct task_struct *p,cputime_t *ut,cputime_t *st);


copy_thread 	( diff_type: Mod type: prototype file: include/linux/sched.h )
	-- extern int copy_thread(unsigned long,unsigned long,unsigned long,struct task_struct *, struct pt_regs *);
	++ extern int copy_thread(unsigned long,unsigned long,unsigned long,struct task_struct *);


daemonize 	( diff_type: Del type: prototype file: include/linux/sched.h )
	-- extern void daemonize(const char *,...);


do_execve 	( diff_type: Mod type: prototype file: include/linux/sched.h )
	-- extern int do_execve(const char *,const char __user * const __user *,const char __user * const __user *, struct pt_regs *);
	++ extern int do_execve(const char *,const char __user * const __user *,const char __user * const __user *);


do_fork 	( diff_type: Mod type: prototype file: include/linux/sched.h )
	-- extern long do_fork(unsigned long,unsigned long,struct pt_regs *,unsigned long,int __user *,int __user *);
	++ extern long do_fork(unsigned long,unsigned long,unsigned long,int __user *,int __user *);


signal_wake_up 	( diff_type: Mod type: prototype-->function file: include/linux/sched.h )
	-- extern void signal_wake_up(struct task_struct *t,int resume_stopped);
	++ static inline void signal_wake_up(struct task_struct *t,bool resume)


_LINUX_MAJOR_H 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define _LINUX_MAJOR_H


UNNAMED_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define UNNAMED_MAJOR 0


MEM_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define MEM_MAJOR 1


RAMDISK_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define RAMDISK_MAJOR 1


FLOPPY_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define FLOPPY_MAJOR 2


PTY_MASTER_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define PTY_MASTER_MAJOR 2


IDE0_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define IDE0_MAJOR 3


HD_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define HD_MAJOR IDE0_MAJOR


PTY_SLAVE_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define PTY_SLAVE_MAJOR 3


TTY_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define TTY_MAJOR 4


TTYAUX_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define TTYAUX_MAJOR 5


LP_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define LP_MAJOR 6


VCS_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define VCS_MAJOR 7


LOOP_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define LOOP_MAJOR 7


SCSI_DISK0_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define SCSI_DISK0_MAJOR 8


SCSI_TAPE_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define SCSI_TAPE_MAJOR 9


MD_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define MD_MAJOR 9


MISC_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define MISC_MAJOR 10


SCSI_CDROM_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define SCSI_CDROM_MAJOR 11


MUX_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define MUX_MAJOR 11


XT_DISK_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define XT_DISK_MAJOR 13


INPUT_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define INPUT_MAJOR 13


SOUND_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define SOUND_MAJOR 14


CDU31A_CDROM_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define CDU31A_CDROM_MAJOR 15


JOYSTICK_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define JOYSTICK_MAJOR 15


GOLDSTAR_CDROM_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define GOLDSTAR_CDROM_MAJOR 16


OPTICS_CDROM_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define OPTICS_CDROM_MAJOR 17


SANYO_CDROM_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define SANYO_CDROM_MAJOR 18


CYCLADES_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define CYCLADES_MAJOR 19


CYCLADESAUX_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define CYCLADESAUX_MAJOR 20


MITSUMI_X_CDROM_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define MITSUMI_X_CDROM_MAJOR 20


MFM_ACORN_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define MFM_ACORN_MAJOR 21


SCSI_GENERIC_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define SCSI_GENERIC_MAJOR 21


IDE1_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define IDE1_MAJOR 22


DIGICU_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define DIGICU_MAJOR 22


DIGI_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define DIGI_MAJOR 23


MITSUMI_CDROM_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define MITSUMI_CDROM_MAJOR 23


CDU535_CDROM_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define CDU535_CDROM_MAJOR 24


STL_SERIALMAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define STL_SERIALMAJOR 24


MATSUSHITA_CDROM_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define MATSUSHITA_CDROM_MAJOR 25


STL_CALLOUTMAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define STL_CALLOUTMAJOR 25


MATSUSHITA_CDROM2_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define MATSUSHITA_CDROM2_MAJOR 26


QIC117_TAPE_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define QIC117_TAPE_MAJOR 27


MATSUSHITA_CDROM3_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define MATSUSHITA_CDROM3_MAJOR 27


MATSUSHITA_CDROM4_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define MATSUSHITA_CDROM4_MAJOR 28


STL_SIOMEMMAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define STL_SIOMEMMAJOR 28


ACSI_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define ACSI_MAJOR 28


AZTECH_CDROM_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define AZTECH_CDROM_MAJOR 29


FB_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define FB_MAJOR 29


CM206_CDROM_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define CM206_CDROM_MAJOR 32


IDE2_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define IDE2_MAJOR 33


IDE3_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define IDE3_MAJOR 34


Z8530_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define Z8530_MAJOR 34


XPRAM_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define XPRAM_MAJOR 35


NETLINK_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define NETLINK_MAJOR 36


PS2ESDI_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define PS2ESDI_MAJOR 36


IDETAPE_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define IDETAPE_MAJOR 37


Z2RAM_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define Z2RAM_MAJOR 37


APBLOCK_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define APBLOCK_MAJOR 38


DDV_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define DDV_MAJOR 39


NBD_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define NBD_MAJOR 43


RISCOM8_NORMAL_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define RISCOM8_NORMAL_MAJOR 48


DAC960_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define DAC960_MAJOR 48


RISCOM8_CALLOUT_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define RISCOM8_CALLOUT_MAJOR 49


MKISS_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define MKISS_MAJOR 55


DSP56K_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define DSP56K_MAJOR 55


IDE4_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define IDE4_MAJOR 56


IDE5_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define IDE5_MAJOR 57


SCSI_DISK1_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define SCSI_DISK1_MAJOR 65


SCSI_DISK2_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define SCSI_DISK2_MAJOR 66


SCSI_DISK3_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define SCSI_DISK3_MAJOR 67


SCSI_DISK4_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define SCSI_DISK4_MAJOR 68


SCSI_DISK5_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define SCSI_DISK5_MAJOR 69


SCSI_DISK6_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define SCSI_DISK6_MAJOR 70


SCSI_DISK7_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define SCSI_DISK7_MAJOR 71


COMPAQ_SMART2_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define COMPAQ_SMART2_MAJOR 72


COMPAQ_SMART2_MAJOR1 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define COMPAQ_SMART2_MAJOR1 73


COMPAQ_SMART2_MAJOR2 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define COMPAQ_SMART2_MAJOR2 74


COMPAQ_SMART2_MAJOR3 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define COMPAQ_SMART2_MAJOR3 75


COMPAQ_SMART2_MAJOR4 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define COMPAQ_SMART2_MAJOR4 76


COMPAQ_SMART2_MAJOR5 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define COMPAQ_SMART2_MAJOR5 77


COMPAQ_SMART2_MAJOR6 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define COMPAQ_SMART2_MAJOR6 78


COMPAQ_SMART2_MAJOR7 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define COMPAQ_SMART2_MAJOR7 79


SPECIALIX_NORMAL_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define SPECIALIX_NORMAL_MAJOR 75


SPECIALIX_CALLOUT_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define SPECIALIX_CALLOUT_MAJOR 76


AURORA_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define AURORA_MAJOR 79


I2O_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define I2O_MAJOR 80


SHMIQ_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define SHMIQ_MAJOR 85


SCSI_CHANGER_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define SCSI_CHANGER_MAJOR 86


IDE6_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define IDE6_MAJOR 88


IDE7_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define IDE7_MAJOR 89


IDE8_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define IDE8_MAJOR 90


IDE9_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define IDE9_MAJOR 91


DASD_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define DASD_MAJOR 94


MDISK_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define MDISK_MAJOR 95


UBD_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define UBD_MAJOR 98


PP_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define PP_MAJOR 99


JSFD_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define JSFD_MAJOR 99


PHONE_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define PHONE_MAJOR 100


COMPAQ_CISS_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define COMPAQ_CISS_MAJOR 104


COMPAQ_CISS_MAJOR1 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define COMPAQ_CISS_MAJOR1 105


COMPAQ_CISS_MAJOR2 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define COMPAQ_CISS_MAJOR2 106


COMPAQ_CISS_MAJOR3 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define COMPAQ_CISS_MAJOR3 107


COMPAQ_CISS_MAJOR4 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define COMPAQ_CISS_MAJOR4 108


COMPAQ_CISS_MAJOR5 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define COMPAQ_CISS_MAJOR5 109


COMPAQ_CISS_MAJOR6 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define COMPAQ_CISS_MAJOR6 110


COMPAQ_CISS_MAJOR7 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define COMPAQ_CISS_MAJOR7 111


VIODASD_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define VIODASD_MAJOR 112


VIOCD_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define VIOCD_MAJOR 113


ATARAID_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define ATARAID_MAJOR 114


SCSI_DISK8_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define SCSI_DISK8_MAJOR 128


SCSI_DISK9_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define SCSI_DISK9_MAJOR 129


SCSI_DISK10_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define SCSI_DISK10_MAJOR 130


SCSI_DISK11_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define SCSI_DISK11_MAJOR 131


SCSI_DISK12_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define SCSI_DISK12_MAJOR 132


SCSI_DISK13_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define SCSI_DISK13_MAJOR 133


SCSI_DISK14_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define SCSI_DISK14_MAJOR 134


SCSI_DISK15_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define SCSI_DISK15_MAJOR 135


UNIX98_PTY_MASTER_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define UNIX98_PTY_MASTER_MAJOR 128


UNIX98_PTY_MAJOR_COUNT 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define UNIX98_PTY_MAJOR_COUNT 8


UNIX98_PTY_SLAVE_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define UNIX98_PTY_SLAVE_MAJOR (UNIX98_PTY_MASTER_MAJOR+UNIX98_PTY_MAJOR_COUNT)


DRBD_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define DRBD_MAJOR 147


RTF_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define RTF_MAJOR 150


RAW_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define RAW_MAJOR 162


USB_ACM_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define USB_ACM_MAJOR 166


USB_ACM_AUX_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define USB_ACM_AUX_MAJOR 167


USB_CHAR_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define USB_CHAR_MAJOR 180


MMC_BLOCK_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define MMC_BLOCK_MAJOR 179


VXVM_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define VXVM_MAJOR 199


VXSPEC_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define VXSPEC_MAJOR 200


VXDMP_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define VXDMP_MAJOR 201


XENVBD_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define XENVBD_MAJOR 202


MSR_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define MSR_MAJOR 202


CPUID_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define CPUID_MAJOR 203


OSST_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define OSST_MAJOR 206


IBM_TTY3270_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define IBM_TTY3270_MAJOR 227


IBM_FS3270_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define IBM_FS3270_MAJOR 228


VIOTAPE_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define VIOTAPE_MAJOR 230


BLOCK_EXT_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define BLOCK_EXT_MAJOR 259


SCSI_OSD_MAJOR 	( diff_type: Mov type: macro file: include/linux/major.h )
	-- include/uapi/linux/major.h
	++ #define SCSI_OSD_MAJOR 260


kobj_to_dev 	( diff_type: All type: macro-->function file: include/linux/genhd.h-->include/linux/device.h )
	-- #define kobj_to_dev(k) container_of((k),struct device,kobj)
	++ static inline struct device *kobj_to_dev(struct kobject *kobj)


PARTITION_META_INFO_UUIDLTH 	( diff_type: Mod type: macro file: include/linux/genhd.h )
	-- #define PARTITION_META_INFO_UUIDLTH 16
	++ #define PARTITION_META_INFO_UUIDLTH 37


partition_meta_info 	( diff_type: Mod type: struct file: include/linux/genhd.h )
	-- struct partition_meta_info { u8 uuid[PARTITION_META_INFO_UUIDLTH]; u8 volname[PARTITION_META_INFO_VOLNAMELTH]; };
	++ struct partition_meta_info { char uuid[PARTITION_META_INFO_UUIDLTH]; u8 volname[PARTITION_META_INFO_VOLNAMELTH]; };


hd_struct 	( diff_type: Mod type: struct file: include/linux/genhd.h )
	-- struct hd_struct { sector_t start_sect; sector_t nr_sects; sector_t alignment_offset; unsigned int discard_alignment; struct device __dev; struct kobject *holder_dir; int policy, partno; struct partition_meta_info *info; int make_it_fail; unsigned long stamp; atomic_t in_flight[2]; struct disk_stats __percpu *dkstats; struct disk_stats dkstats; atomic_t ref; struct rcu_head rcu_head; };
	++ struct hd_struct { sector_t start_sect; sector_t nr_sects; seqcount_t nr_sects_seq; sector_t alignment_offset; unsigned int discard_alignment; struct device __dev; struct kobject *holder_dir; int policy, partno; struct partition_meta_info *info; int make_it_fail; unsigned long stamp; atomic_t in_flight[2]; struct disk_stats __percpu *dkstats; struct disk_stats dkstats; atomic_t ref; struct rcu_head rcu_head; };


mapping_flags 	( diff_type: Mod type: enum file: include/linux/pagemap.h )
	-- enum mapping_flags { AS_EIO = __GFP_BITS_SHIFT + 0, AS_ENOSPC = __GFP_BITS_SHIFT + 1, AS_MM_ALL_LOCKS = __GFP_BITS_SHIFT + 2, AS_UNEVICTABLE = __GFP_BITS_SHIFT + 3, };
	++ enum mapping_flags { AS_EIO = __GFP_BITS_SHIFT + 0, AS_ENOSPC = __GFP_BITS_SHIFT + 1, AS_MM_ALL_LOCKS = __GFP_BITS_SHIFT + 2, AS_UNEVICTABLE = __GFP_BITS_SHIFT + 3, AS_BALLOON_MAP = __GFP_BITS_SHIFT + 4, };


backing_dev_info 	( diff_type: Mod type: struct file: include/linux/backing-dev.h )
	-- struct backing_dev_info { struct list_head bdi_list; unsigned long ra_pages; unsigned long state; unsigned int capabilities; congested_fn *congested_fn; void *congested_data; char *name; struct percpu_counter bdi_stat[NR_BDI_STAT_ITEMS]; unsigned long bw_time_stamp; unsigned long dirtied_stamp; unsigned long written_stamp; unsigned long write_bandwidth; unsigned long avg_write_bandwidth; unsigned long dirty_ratelimit; unsigned long balanced_dirty_ratelimit; struct prop_local_percpu completions; int dirty_exceeded; unsigned int min_ratio; unsigned int max_ratio, max_prop_frac; struct bdi_writeback wb; spinlock_t wb_lock; struct list_head work_list; struct device *dev; struct timer_list laptop_mode_wb_timer; struct dentry *debug_dir; struct dentry *debug_stats; };
	++ struct backing_dev_info { struct list_head bdi_list; unsigned long ra_pages; unsigned long state; unsigned int capabilities; congested_fn *congested_fn; void *congested_data; char *name; struct percpu_counter bdi_stat[NR_BDI_STAT_ITEMS]; unsigned long bw_time_stamp; unsigned long dirtied_stamp; unsigned long written_stamp; unsigned long write_bandwidth; unsigned long avg_write_bandwidth; unsigned long dirty_ratelimit; unsigned long balanced_dirty_ratelimit; struct fprop_local_percpu completions; int dirty_exceeded; unsigned int min_ratio; unsigned int max_ratio, max_prop_frac; struct bdi_writeback wb; spinlock_t wb_lock; struct list_head work_list; struct device *dev; struct timer_list laptop_mode_wb_timer; struct dentry *debug_dir; struct dentry *debug_stats; };


bdi_arm_supers_timer 	( diff_type: Del type: prototype file: include/linux/backing-dev.h )
	-- void bdi_arm_supers_timer(void);


mempool_create_node 	( diff_type: Mod type: prototype file: include/linux/mempool.h )
	-- extern mempool_t *mempool_create_node(int min_nr,mempool_alloc_t *alloc_fn,mempool_free_t *free_fn, void *pool_data, int nid);
	++ extern mempool_t *mempool_create_node(int min_nr,mempool_alloc_t *alloc_fn,mempool_free_t *free_fn, void *pool_data,gfp_t gfp_mask, int nid);


bio_alloc 	( diff_type: Mod type: prototype-->function file: include/linux/bio.h )
	-- extern struct bio *bio_alloc(gfp_t,unsigned int);
	++ static inline struct bio *bio_alloc(gfp_t gfp_mask,unsigned int nr_iovecs)


bio_kmalloc 	( diff_type: Mod type: prototype-->function file: include/linux/bio.h )
	-- extern struct bio *bio_kmalloc(gfp_t,unsigned int);
	++ static inline struct bio *bio_kmalloc(gfp_t gfp_mask,unsigned int nr_iovecs)


bio_free 	( diff_type: Del type: prototype file: include/linux/bio.h )
	-- extern void bio_free(struct bio *,struct bio_set *);


bio_clone 	( diff_type: Mod type: prototype-->function file: include/linux/bio.h )
	-- extern struct bio *bio_clone(struct bio *,gfp_t);
	++ static inline struct bio *bio_clone(struct bio *bio,gfp_t gfp_mask)


bio_has_data 	( diff_type: Mod type: function file: include/linux/bio.h )
	-- static inline int bio_has_data(struct bio *bio)
	++ static inline bool bio_has_data(struct bio *bio)


bio_integrity_alloc_bioset 	( diff_type: Del type: prototype file: include/linux/bio.h )
	-- extern struct bio_integrity_payload *bio_integrity_alloc_bioset(struct bio *,gfp_t,unsigned int,struct bio_set *);


bio_integrity_free 	( diff_type: Mod type: function file: include/linux/bio.h )
	-- static inline void bio_integrity_free(struct bio *bio,struct bio_set *bs)
	++ static inline void bio_integrity_free(struct bio *bio)


bio_integrity_clone 	( diff_type: Mod type: function file: include/linux/bio.h )
	-- static inline int bio_integrity_clone(struct bio *bio,struct bio *bio_src,gfp_t gfp_mask, struct bio_set *bs)
	++ static inline int bio_integrity_clone(struct bio *bio,struct bio *bio_src,gfp_t gfp_mask)


BSG_PROTOCOL_SCSI 	( diff_type: Del type: macro file: include/linux/bsg.h )
	-- #define BSG_PROTOCOL_SCSI 0


BSG_SUB_PROTOCOL_SCSI_CMD 	( diff_type: Del type: macro file: include/linux/bsg.h )
	-- #define BSG_SUB_PROTOCOL_SCSI_CMD 0


BSG_SUB_PROTOCOL_SCSI_TMF 	( diff_type: Del type: macro file: include/linux/bsg.h )
	-- #define BSG_SUB_PROTOCOL_SCSI_TMF 1


BSG_SUB_PROTOCOL_SCSI_TRANSPORT 	( diff_type: Del type: macro file: include/linux/bsg.h )
	-- #define BSG_SUB_PROTOCOL_SCSI_TRANSPORT 2


BSG_FLAG_Q_AT_TAIL 	( diff_type: Del type: macro file: include/linux/bsg.h )
	-- #define BSG_FLAG_Q_AT_TAIL 0x10


sg_io_v4 	( diff_type: Del type: struct file: include/linux/bsg.h )
	-- struct sg_io_v4 { __s32 guard; __u32 protocol; __u32 subprotocol; __u32 request_len; __u64 request; __u64 request_tag; __u32 request_attr; __u32 request_priority; __u32 request_extra; __u32 max_response_len; __u64 response; __u32 dout_iovec_count; __u32 dout_xfer_len; __u32 din_iovec_count; __u32 din_xfer_len; __u64 dout_xferp; __u64 din_xferp; __u32 timeout; __u32 flags; __u64 usr_ptr; __u32 spare_in; __u32 driver_status; __u32 transport_status; __u32 device_status; __u32 retry_delay; __u32 info; __u32 duration; __u32 response_len; __s32 din_resid; __s32 dout_resid; __u64 generated_tag; __u32 spare_out; __u32 padding; };


arch_spin_lock 	( diff_type: Mod type: macro file: include/linux/spinlock_up.h )
	-- # define arch_spin_lock(lock) do { (void)(lock); } while (0)
	++ # define arch_spin_lock(lock) do { barrier(); (void)(lock); } while (0)


arch_spin_trylock 	( diff_type: Mod type: macro file: include/linux/spinlock_up.h )
	-- # define arch_spin_trylock(lock) ({ (void)(lock); 1; })
	++ # define arch_spin_trylock(lock) ({ barrier(); (void)(lock); 1; })


arch_spin_unlock 	( diff_type: Mod type: macro file: include/linux/spinlock_up.h )
	-- # define arch_spin_unlock(lock) do { (void)(lock); } while (0)
	++ # define arch_spin_unlock(lock) do { barrier(); (void)(lock); } while (0)


arch_spin_lock_flags 	( diff_type: Mod type: macro file: include/linux/spinlock_up.h )
	-- # define arch_spin_lock_flags(lock,flags) do { (void)(lock); } while (0)
	++ # define arch_spin_lock_flags(lock,flags) do { barrier(); (void)(lock); } while (0)


arch_read_lock 	( diff_type: Mod type: macro file: include/linux/spinlock_up.h )
	-- #define arch_read_lock(lock) do { (void)(lock); } while (0)
	++ #define arch_read_lock(lock) do { barrier(); (void)(lock); } while (0)


arch_write_lock 	( diff_type: Mod type: macro file: include/linux/spinlock_up.h )
	-- #define arch_write_lock(lock) do { (void)(lock); } while (0)
	++ #define arch_write_lock(lock) do { barrier(); (void)(lock); } while (0)


arch_read_trylock 	( diff_type: Mod type: macro file: include/linux/spinlock_up.h )
	-- #define arch_read_trylock(lock) ({ (void)(lock); 1; })
	++ #define arch_read_trylock(lock) ({ barrier(); (void)(lock); 1; })


arch_write_trylock 	( diff_type: Mod type: macro file: include/linux/spinlock_up.h )
	-- #define arch_write_trylock(lock) ({ (void)(lock); 1; })
	++ #define arch_write_trylock(lock) ({ barrier(); (void)(lock); 1; })


arch_read_unlock 	( diff_type: Mod type: macro file: include/linux/spinlock_up.h )
	-- #define arch_read_unlock(lock) do { (void)(lock); } while (0)
	++ #define arch_read_unlock(lock) do { barrier(); (void)(lock); } while (0)


arch_write_unlock 	( diff_type: Mod type: macro file: include/linux/spinlock_up.h )
	-- #define arch_write_unlock(lock) do { (void)(lock); } while (0)
	++ #define arch_write_unlock(lock) do { barrier(); (void)(lock); } while (0)


SYMBOL_PREFIX 	( diff_type: Add type: macro file: include/linux/kernel.h )
	-- 726
	++ #define SYMBOL_PREFIX ""


MODULE_SIG_STRING 	( diff_type: Add type: macro file: include/linux/module.h )
	-- 25
	++ #define MODULE_SIG_STRING "~Module signature appended~\n"


SOFTIRQ_STOP_IDLE_MASK 	( diff_type: Add type: macro file: include/linux/interrupt.h )
	-- 428
	++ #define SOFTIRQ_STOP_IDLE_MASK (~(1 << RCU_SOFTIRQ))


kmem_cache_create_memcg 	( diff_type: Add type: prototype file: include/linux/slab.h )
	-- 132
	++ kmem_cache_create_memcg(struct mem_cgroup *,const char *,size_t,size_t,unsigned long, void (*)(void *), struct kmem_cache *);


memcg_cache_params 	( diff_type: Add type: struct file: include/linux/slab.h )
	-- 206
	++ struct memcg_cache_params { bool is_root_cache; union { struct kmem_cache *memcg_caches[0]; struct { struct mem_cgroup *memcg; struct list_head list; struct kmem_cache *root_cache; bool dead; atomic_t nr_pages; struct work_struct destroy; };


memcg_update_all_caches 	( diff_type: Add type: prototype file: include/linux/slab.h )
	-- 221
	++ int memcg_update_all_caches(int num_memcgs);


cache_show 	( diff_type: Add type: prototype file: include/linux/slab.h )
	-- 224
	++ int cache_show(struct kmem_cache *s,struct seq_file *m);


print_slabinfo_header 	( diff_type: Add type: prototype file: include/linux/slab.h )
	-- 225
	++ void print_slabinfo_header(struct seq_file *m);


delayed_work_timer_fn 	( diff_type: Add type: prototype file: include/linux/workqueue.h )
	-- 19
	++ void delayed_work_timer_fn(unsigned long __data);


DECLARE_DEFERRABLE_WORK 	( diff_type: Add type: macro file: include/linux/workqueue.h )
	-- 149
	++ #define DECLARE_DEFERRABLE_WORK(n,f) struct delayed_work n = __DELAYED_WORK_INITIALIZER(n, f, TIMER_DEFERRABLE)


__INIT_DELAYED_WORK 	( diff_type: Add type: macro file: include/linux/workqueue.h )
	-- 214
	++ #define __INIT_DELAYED_WORK(_work,_func,_tflags) do { INIT_WORK(&(_work)->work, (_func)); __setup_timer(&(_work)->timer, delayed_work_timer_fn, (unsigned long)(_work), (_tflags) | TIMER_IRQSAFE); } while (0)


__INIT_DELAYED_WORK_ONSTACK 	( diff_type: Add type: macro file: include/linux/workqueue.h )
	-- 222
	++ #define __INIT_DELAYED_WORK_ONSTACK(_work,_func,_tflags) do { INIT_WORK_ONSTACK(&(_work)->work, (_func)); __setup_timer_on_stack(&(_work)->timer, delayed_work_timer_fn, (unsigned long)(_work), (_tflags) | TIMER_IRQSAFE); } while (0)


INIT_DEFERRABLE_WORK 	( diff_type: Add type: macro file: include/linux/workqueue.h )
	-- 237
	++ #define INIT_DEFERRABLE_WORK(_work,_func) __INIT_DELAYED_WORK(_work, _func, TIMER_DEFERRABLE)


INIT_DEFERRABLE_WORK_ONSTACK 	( diff_type: Add type: macro file: include/linux/workqueue.h )
	-- 240
	++ #define INIT_DEFERRABLE_WORK_ONSTACK(_work,_func) __INIT_DELAYED_WORK_ONSTACK(_work, _func, TIMER_DEFERRABLE)


__system_nrt_wq 	( diff_type: Add type: function file: include/linux/workqueue.h )
	-- 313
	++ static inline struct workqueue_struct * __deprecated __system_nrt_wq(void)


__system_nrt_freezable_wq 	( diff_type: Add type: function file: include/linux/workqueue.h )
	-- 318
	++ static inline struct workqueue_struct * __deprecated __system_nrt_freezable_wq(void)


system_nrt_wq 	( diff_type: Add type: macro file: include/linux/workqueue.h )
	-- 324
	++ #define system_nrt_wq __system_nrt_wq()


system_nrt_freezable_wq 	( diff_type: Add type: macro file: include/linux/workqueue.h )
	-- 325
	++ #define system_nrt_freezable_wq __system_nrt_freezable_wq()


mod_delayed_work_on 	( diff_type: Add type: prototype file: include/linux/workqueue.h )
	-- 399
	++ extern bool mod_delayed_work_on(int cpu,struct workqueue_struct *wq,struct delayed_work *dwork, unsigned long delay);


mod_delayed_work 	( diff_type: Add type: prototype file: include/linux/workqueue.h )
	-- 401
	++ extern bool mod_delayed_work(struct workqueue_struct *wq,struct delayed_work *dwork, unsigned long delay);


PCI_PM_D3COLD_WAIT 	( diff_type: Add type: macro file: include/linux/pci.h )
	-- 115
	++ #define PCI_PM_D3COLD_WAIT 100


pcibios_err_to_errno 	( diff_type: Add type: function file: include/linux/pci.h )
	-- 470
	++ static inline int pcibios_err_to_errno(int err)


PCI_DEVICE_SUB 	( diff_type: Add type: macro file: include/linux/pci.h )
	-- 622
	++ #define PCI_DEVICE_SUB(vend,dev,subvend,subdev) .vendor = (vend), .device = (dev), .subvendor = (subvend), .subdevice = (subdev)


pci_bus_insert_busn_res 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 706
	++ int pci_bus_insert_busn_res(struct pci_bus *b,int bus,int busmax);


pci_bus_update_busn_res_end 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 707
	++ int pci_bus_update_busn_res_end(struct pci_bus *b,int busmax);


pci_bus_release_busn_res 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 708
	++ void pci_bus_release_busn_res(struct pci_bus *b);


pci_stop_root_bus 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 735
	++ void pci_stop_root_bus(struct pci_bus *bus);


pci_remove_root_bus 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 736
	++ void pci_remove_root_bus(struct pci_bus *bus);


pci_find_next_ext_capability 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 755
	++ int pci_find_next_ext_capability(struct pci_dev *dev,int pos,int cap);


pcie_capability_read_word 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 817
	++ int pcie_capability_read_word(struct pci_dev *dev,int pos,u16 *val);


pcie_capability_read_dword 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 818
	++ int pcie_capability_read_dword(struct pci_dev *dev,int pos,u32 *val);


pcie_capability_write_word 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 819
	++ int pcie_capability_write_word(struct pci_dev *dev,int pos,u16 val);


pcie_capability_write_dword 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 820
	++ int pcie_capability_write_dword(struct pci_dev *dev,int pos,u32 val);


pcie_capability_clear_and_set_word 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 821
	++ int pcie_capability_clear_and_set_word(struct pci_dev *dev,int pos,u16 clear, u16 set);


pcie_capability_clear_and_set_dword 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 823
	++ int pcie_capability_clear_and_set_dword(struct pci_dev *dev,int pos,u32 clear, u32 set);


pcie_capability_set_word 	( diff_type: Add type: function file: include/linux/pci.h )
	-- 826
	++ static inline int pcie_capability_set_word(struct pci_dev *dev,int pos,u16 set)


pcie_capability_set_dword 	( diff_type: Add type: function file: include/linux/pci.h )
	-- 832
	++ static inline int pcie_capability_set_dword(struct pci_dev *dev,int pos,u32 set)


pcie_capability_clear_word 	( diff_type: Add type: function file: include/linux/pci.h )
	-- 838
	++ static inline int pcie_capability_clear_word(struct pci_dev *dev,int pos,u16 clear)


pcie_capability_clear_dword 	( diff_type: Add type: function file: include/linux/pci.h )
	-- 844
	++ static inline int pcie_capability_clear_dword(struct pci_dev *dev,int pos,u32 clear)


pci_user_read_config_byte 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 851
	++ int pci_user_read_config_byte(struct pci_dev *dev,int where,u8 *val);


pci_user_read_config_word 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 852
	++ int pci_user_read_config_word(struct pci_dev *dev,int where,u16 *val);


pci_user_read_config_dword 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 853
	++ int pci_user_read_config_dword(struct pci_dev *dev,int where,u32 *val);


pci_user_write_config_byte 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 854
	++ int pci_user_write_config_byte(struct pci_dev *dev,int where,u8 val);


pci_user_write_config_word 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 855
	++ int pci_user_write_config_word(struct pci_dev *dev,int where,u16 val);


pci_user_write_config_dword 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 856
	++ int pci_user_write_config_dword(struct pci_dev *dev,int where,u32 val);


pci_assign_unassigned_bus_resources 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 981
	++ void pci_assign_unassigned_bus_resources(struct pci_bus *bus);


pcibios_window_alignment 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 1063
	++ resource_size_t pcibios_window_alignment(struct pci_bus *bus,unsigned long type);


pci_get_dma_source 	( diff_type: Add type: function file: include/linux/pci.h )
	-- 1574
	++ static inline struct pci_dev *pci_get_dma_source(struct pci_dev *dev)


pci_dev_specific_acs_enabled 	( diff_type: Add type: function file: include/linux/pci.h )
	-- 1578
	++ static inline int pci_dev_specific_acs_enabled(struct pci_dev *dev,u16 acs_flags)


pcibios_add_device 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 1616
	++ int pcibios_add_device(struct pci_dev *dev);


pci_sriov_set_totalvfs 	( diff_type: Add type: function file: include/linux/pci.h )
	-- 1653
	++ static inline int pci_sriov_set_totalvfs(struct pci_dev *dev,u16 numvfs)


pci_sriov_get_totalvfs 	( diff_type: Add type: function file: include/linux/pci.h )
	-- 1657
	++ static inline int pci_sriov_get_totalvfs(struct pci_dev *dev)


pci_pcie_type 	( diff_type: Add type: function file: include/linux/pci.h )
	-- 1699
	++ static inline int pci_pcie_type(const struct pci_dev *dev)


pci_acs_enabled 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 1705
	++ bool pci_acs_enabled(struct pci_dev *pdev,u16 acs_flags);


pci_acs_path_enabled 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 1706
	++ bool pci_acs_path_enabled(struct pci_dev *start,struct pci_dev *end, u16 acs_flags);


MI_EXT_HDR_PARAM_FMT 	( diff_type: Add type: macro file: include/scsi/scsi.h )
	-- 165
	++ #define MI_EXT_HDR_PARAM_FMT 0x20


scsi_register_acpi_bus_type 	( diff_type: Add type: prototype file: include/scsi/scsi.h )
	-- 223
	++ scsi_register_acpi_bus_type(struct acpi_bus_type *bus);


scsi_unregister_acpi_bus_type 	( diff_type: Add type: prototype file: include/scsi/scsi.h )
	-- 226
	++ scsi_unregister_acpi_bus_type(struct acpi_bus_type *bus);


scsi_report_opcode 	( diff_type: Add type: prototype file: include/scsi/scsi_device.h )
	-- 368
	++ extern int scsi_report_opcode(struct scsi_device *sdev,unsigned char *buffer,unsigned int len, unsigned char opcode);


__EXPORTED_HEADERS__ 	( diff_type: Add type: macro file: include/linux/types.h )
	-- 4
	++ #define __EXPORTED_HEADERS__


callback_head 	( diff_type: Add type: struct file: include/linux/types.h )
	-- 209
	++ struct callback_head { struct callback_head *next; void (*func)(struct callback_head *head); };


__must_hold 	( diff_type: Add type: macro file: include/linux/compiler.h )
	-- 37
	++ # define __must_hold(x)


___PASTE 	( diff_type: Add type: macro file: include/linux/compiler.h )
	-- 48
	++ #define ___PASTE(a,b) a##b


__PASTE 	( diff_type: Add type: macro file: include/linux/compiler.h )
	-- 49
	++ #define __PASTE(a,b) ___PASTE(a,b)


__UNIQUE_ID 	( diff_type: Add type: macro file: include/linux/compiler.h )
	-- 175
	++ # define __UNIQUE_ID(prefix) __PASTE(__PASTE(__UNIQUE_ID_,prefix),__LINE__)


__visible 	( diff_type: Add type: macro file: include/linux/compiler.h )
	-- 293
	++ #define __visible


printk_get_level 	( diff_type: Add type: function file: include/linux/printk.h )
	-- 10
	++ static inline int printk_get_level(const char *buffer)


printk_skip_level 	( diff_type: Add type: function file: include/linux/printk.h )
	-- 22
	++ static inline const char *printk_skip_level(const char *buffer)


_UAPI_LINUX_KERNEL_H 	( diff_type: Add type: macro file: include/uapi/linux/kernel.h )
	-- 2
	++ #define _UAPI_LINUX_KERNEL_H


__DECLARE_TRACE_RCU 	( diff_type: Add type: macro file: include/linux/tracepoint.h )
	-- 152
	++ #define __DECLARE_TRACE_RCU(name,proto,args,cond,data_proto,data_args)


kref_put_mutex 	( diff_type: Add type: function file: include/linux/kref.h )
	-- 98
	++ static inline int kref_put_mutex(struct kref *kref,void (*release)(struct kref *kref),struct mutex *lock)


kref_get_unless_zero 	( diff_type: Add type: function file: include/linux/kref.h )
	-- 131
	++ static inline int __must_check kref_get_unless_zero(struct kref *kref)


current_user_stack_pointer 	( diff_type: Add type: macro file: arch/x86/include/asm/ptrace.h )
	-- 137
	++ #define current_user_stack_pointer() this_cpu_read(old_rsp)


compat_user_stack_pointer 	( diff_type: Add type: macro file: arch/x86/include/asm/ptrace.h )
	-- 139
	++ #define compat_user_stack_pointer() (test_thread_flag(TIF_IA32) ? current_pt_regs()->sp : this_cpu_read(old_rsp))


___GFP_MEMALLOC 	( diff_type: Add type: macro file: include/linux/gfp.h )
	-- 26
	++ #define ___GFP_MEMALLOC 0x2000u


___GFP_KMEMCG 	( diff_type: Add type: macro file: include/linux/gfp.h )
	-- 33
	++ #define ___GFP_KMEMCG 0x100000u


__GFP_MEMALLOC 	( diff_type: Add type: macro file: include/linux/gfp.h )
	-- 78
	++ #define __GFP_MEMALLOC ((__force gfp_t)___GFP_MEMALLOC)


__GFP_KMEMCG 	( diff_type: Add type: macro file: include/linux/gfp.h )
	-- 93
	++ #define __GFP_KMEMCG ((__force gfp_t)___GFP_KMEMCG)


__free_memcg_kmem_pages 	( diff_type: Add type: prototype file: include/linux/gfp.h )
	-- 370
	++ extern void __free_memcg_kmem_pages(struct page *page,unsigned int order);


free_memcg_kmem_pages 	( diff_type: Add type: prototype file: include/linux/gfp.h )
	-- 371
	++ extern void free_memcg_kmem_pages(unsigned long addr,unsigned int order);


gfp_pfmemalloc_allowed 	( diff_type: Add type: prototype file: include/linux/gfp.h )
	-- 391
	++ bool gfp_pfmemalloc_allowed(gfp_t gfp_mask);


TIMER_DEFERRABLE 	( diff_type: Add type: macro file: include/linux/timer.h )
	-- 68
	++ #define TIMER_DEFERRABLE 0x1LU


TIMER_IRQSAFE 	( diff_type: Add type: macro file: include/linux/timer.h )
	-- 69
	++ #define TIMER_IRQSAFE 0x2LU


TIMER_FLAG_MASK 	( diff_type: Add type: macro file: include/linux/timer.h )
	-- 71
	++ #define TIMER_FLAG_MASK 0x3LU


__TIMER_INITIALIZER 	( diff_type: Add type: macro file: include/linux/timer.h )
	-- 73
	++ #define __TIMER_INITIALIZER(_function,_expires,_data,_flags) { .entry = { .prev = TIMER_ENTRY_STATIC }, .function = (_function), .expires = (_expires), .data = (_data), .base = (void *)((unsigned long)&boot_tvec_bases + (_flags)), .slack = -1, __TIMER_LOCKDEP_MAP_INITIALIZER( __FILE__ ":" __stringify(__LINE__)) }


__init_timer 	( diff_type: Add type: macro file: include/linux/timer.h )
	-- 125
	++ #define __init_timer(_timer,_flags) init_timer_key((_timer), (_flags), NULL, NULL)


__init_timer_on_stack 	( diff_type: Add type: macro file: include/linux/timer.h )
	-- 127
	++ #define __init_timer_on_stack(_timer,_flags) init_timer_on_stack_key((_timer), (_flags), NULL, NULL)


__setup_timer 	( diff_type: Add type: macro file: include/linux/timer.h )
	-- 138
	++ #define __setup_timer(_timer,_fn,_data,_flags) do { __init_timer((_timer), (_flags)); (_timer)->function = (_fn); (_timer)->data = (_data); } while (0)


__setup_timer_on_stack 	( diff_type: Add type: macro file: include/linux/timer.h )
	-- 145
	++ #define __setup_timer_on_stack(_timer,_fn,_data,_flags) do { __init_timer_on_stack((_timer), (_flags)); (_timer)->function = (_fn); (_timer)->data = (_data); } while (0)


rwsem_acquire_nest 	( diff_type: Add type: macro file: include/linux/lockdep.h )
	-- 537
	++ # define rwsem_acquire_nest(l,s,t,n,i) do { } while (0)


USB_DEVICE_ID_MATCH_INT_NUMBER 	( diff_type: Add type: macro file: include/linux/mod_devicetable.h )
	-- 140
	++ #define USB_DEVICE_ID_MATCH_INT_NUMBER 0x0400


IPACK_ANY_FORMAT 	( diff_type: Add type: macro file: include/linux/mod_devicetable.h )
	-- 603
	++ #define IPACK_ANY_FORMAT 0xff


IPACK_ANY_ID 	( diff_type: Add type: macro file: include/linux/mod_devicetable.h )
	-- 604
	++ #define IPACK_ANY_ID (~0)


ipack_device_id 	( diff_type: Add type: struct file: include/linux/mod_devicetable.h )
	-- 605
	++ struct ipack_device_id { __u8 format; __u32 vendor; __u32 device; };


__constsection 	( diff_type: Add type: macro file: include/linux/init.h )
	-- 58
	++ #define __constsection(x) __section(x)


IORESOURCE_REG 	( diff_type: Add type: macro file: include/linux/ioport.h )
	-- 34
	++ #define IORESOURCE_REG 0x00000300


device_show_bool 	( diff_type: Add type: prototype file: include/linux/device.h )
	-- 501
	++ ssize_t device_show_bool(struct device *dev,struct device_attribute *attr,char *buf);


device_store_bool 	( diff_type: Add type: prototype file: include/linux/device.h )
	-- 503
	++ ssize_t device_store_bool(struct device *dev,struct device_attribute *attr,const char *buf, size_t count);


DEVICE_BOOL_ATTR 	( diff_type: Add type: macro file: include/linux/device.h )
	-- 514
	++ #define DEVICE_BOOL_ATTR(_name,_mode,_var) struct dev_ext_attribute dev_attr_##_name = { __ATTR(_name, _mode, device_show_bool, device_store_bool), &(_var) }


devres_for_each_res 	( diff_type: Add type: prototype file: include/linux/device.h )
	-- 548
	++ extern void devres_for_each_res(struct device *dev,dr_release_t release,dr_match_t match, void *match_data,void (*fn)(struct device *, void *, void *),void *data);


acpi_dev_node 	( diff_type: Add type: struct file: include/linux/device.h )
	-- 588
	++ struct acpi_dev_node { void *handle; };


ACPI_HANDLE 	( diff_type: Add type: macro file: include/linux/device.h )
	-- 724
	++ #define ACPI_HANDLE(dev) (NULL)


ACPI_HANDLE_SET 	( diff_type: Add type: macro file: include/linux/device.h )
	-- 725
	++ #define ACPI_HANDLE_SET(dev,_handle_) do { } while (0)


dev_pm_syscore_device 	( diff_type: Add type: function file: include/linux/device.h )
	-- 804
	++ static inline void dev_pm_syscore_device(struct device *dev,bool val)


dev_vprintk_emit 	( diff_type: Add type: function file: include/linux/device.h )
	-- 957
	++ int dev_vprintk_emit(int level,const struct device *dev,const char *fmt, va_list args)


dev_printk_emit 	( diff_type: Add type: function file: include/linux/device.h )
	-- 961
	++ int dev_printk_emit(int level,const struct device *dev,const char *fmt,...)


arch_has_dev_port 	( diff_type: Add type: macro file: include/linux/io.h )
	-- 76
	++ #define arch_has_dev_port() (1)


_UAPILINUX_PCI_H 	( diff_type: Add type: macro file: include/uapi/linux/pci.h )
	-- 18
	++ #define _UAPILINUX_PCI_H


PCI_DEVICE_ID_AMD_15H_M10H_F3 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 520
	++ #define PCI_DEVICE_ID_AMD_15H_M10H_F3 0x1403


PCI_DEVICE_ID_HP_CISSH 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 756
	++ #define PCI_DEVICE_ID_HP_CISSH 0x323c


PCI_DEVICE_ID_VIA_VX900 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 1430
	++ #define PCI_DEVICE_ID_VIA_VX900 0x8410


PCI_DEVICE_ID_RICOH_R5CE822 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 1571
	++ #define PCI_DEVICE_ID_RICOH_R5CE822 0xe822


PCI_DEVICE_ID_EXAR_XR17V352 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 1989
	++ #define PCI_DEVICE_ID_EXAR_XR17V352 0x0352


PCI_DEVICE_ID_EXAR_XR17V354 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 1990
	++ #define PCI_DEVICE_ID_EXAR_XR17V354 0x0354


PCI_DEVICE_ID_EXAR_XR17V358 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 1991
	++ #define PCI_DEVICE_ID_EXAR_XR17V358 0x0358


PCI_VENDOR_ID_COMMTECH 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 2330
	++ #define PCI_VENDOR_ID_COMMTECH 0x18f7


PCI_DEVICE_ID_INTEL_UNC_HA 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 2766
	++ #define PCI_DEVICE_ID_INTEL_UNC_HA 0x3c46


PCI_DEVICE_ID_INTEL_UNC_IMC0 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 2767
	++ #define PCI_DEVICE_ID_INTEL_UNC_IMC0 0x3cb0


PCI_DEVICE_ID_INTEL_UNC_IMC1 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 2768
	++ #define PCI_DEVICE_ID_INTEL_UNC_IMC1 0x3cb1


PCI_DEVICE_ID_INTEL_UNC_IMC2 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 2769
	++ #define PCI_DEVICE_ID_INTEL_UNC_IMC2 0x3cb4


PCI_DEVICE_ID_INTEL_UNC_IMC3 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 2770
	++ #define PCI_DEVICE_ID_INTEL_UNC_IMC3 0x3cb5


PCI_DEVICE_ID_INTEL_UNC_QPI0 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 2771
	++ #define PCI_DEVICE_ID_INTEL_UNC_QPI0 0x3c41


PCI_DEVICE_ID_INTEL_UNC_QPI1 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 2772
	++ #define PCI_DEVICE_ID_INTEL_UNC_QPI1 0x3c42


PCI_DEVICE_ID_INTEL_UNC_R2PCIE 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 2773
	++ #define PCI_DEVICE_ID_INTEL_UNC_R2PCIE 0x3c43


PCI_DEVICE_ID_INTEL_UNC_R3QPI0 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 2774
	++ #define PCI_DEVICE_ID_INTEL_UNC_R3QPI0 0x3c44


PCI_DEVICE_ID_INTEL_UNC_R3QPI1 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 2775
	++ #define PCI_DEVICE_ID_INTEL_UNC_R3QPI1 0x3c45


PCI_DEVICE_ID_INTEL_JAKETOWN_UBOX 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 2776
	++ #define PCI_DEVICE_ID_INTEL_JAKETOWN_UBOX 0x3ce0


pci_setup_rom 	( diff_type: Add type: struct file: arch/x86/include/asm/pci.h )
	-- 174
	++ struct pci_setup_rom { struct setup_data data; uint16_t vendor; uint16_t devid; uint64_t pcilen; unsigned long segment; unsigned long bus; unsigned long device; unsigned long function; uint8_t romdata[0]; };


sg_nents 	( diff_type: Add type: prototype file: include/linux/scatterlist.h )
	-- 204
	++ int sg_nents(struct scatterlist *sg);


sg_alloc_table_from_pages 	( diff_type: Add type: prototype file: include/linux/scatterlist.h )
	-- 218
	++ int sg_alloc_table_from_pages(struct sg_table *sgt,struct page **pages, unsigned int n_pages,unsigned long offset, unsigned long size,gfp_t gfp_mask);


BLK_RL_SYNCFULL 	( diff_type: Add type: macro file: include/linux/blkdev.h )
	-- 49
	++ #define BLK_RL_SYNCFULL (1U << 0)


BLK_RL_ASYNCFULL 	( diff_type: Add type: macro file: include/linux/blkdev.h )
	-- 50
	++ #define BLK_RL_ASYNCFULL (1U << 1)


QUEUE_FLAG_DYING 	( diff_type: Add type: macro file: include/linux/blkdev.h )
	-- 446
	++ #define QUEUE_FLAG_DYING 5


blk_queue_dying 	( diff_type: Add type: macro file: include/linux/blkdev.h )
	-- 531
	++ #define blk_queue_dying(q) test_bit(QUEUE_FLAG_DYING,&(q)->queue_flags)


blk_rl_full 	( diff_type: Add type: function file: include/linux/blkdev.h )
	-- 585
	++ static inline bool blk_rl_full(struct request_list *rl,bool sync)


blk_set_rl_full 	( diff_type: Add type: function file: include/linux/blkdev.h )
	-- 592
	++ static inline void blk_set_rl_full(struct request_list *rl,bool sync)


blk_clear_rl_full 	( diff_type: Add type: function file: include/linux/blkdev.h )
	-- 599
	++ static inline void blk_clear_rl_full(struct request_list *rl,bool sync)


blk_check_merge_flags 	( diff_type: Add type: function file: include/linux/blkdev.h )
	-- 617
	++ static inline bool blk_check_merge_flags(unsigned int flags1,unsigned int flags2)


blk_write_same_mergeable 	( diff_type: Add type: function file: include/linux/blkdev.h )
	-- 632
	++ static inline bool blk_write_same_mergeable(struct bio *a,struct bio *b)


blk_queue_get_max_sectors 	( diff_type: Add type: function file: include/linux/blkdev.h )
	-- 835
	++ static inline unsigned int blk_queue_get_max_sectors(struct request_queue *q,unsigned int cmd_flags)


blk_rq_get_max_sectors 	( diff_type: Add type: function file: include/linux/blkdev.h )
	-- 847
	++ static inline unsigned int blk_rq_get_max_sectors(struct request *rq)


blk_queue_max_write_same_sectors 	( diff_type: Add type: prototype file: include/linux/blkdev.h )
	-- 912
	++ extern void blk_queue_max_write_same_sectors(struct request_queue *q,unsigned int max_write_same_sectors);


blk_bio_map_sg 	( diff_type: Add type: prototype file: include/linux/blkdev.h )
	-- 951
	++ extern int blk_bio_map_sg(struct request_queue *q,struct bio *bio,struct scatterlist *sglist);


blk_check_plugged 	( diff_type: Add type: prototype file: include/linux/blkdev.h )
	-- 988
	++ extern struct blk_plug_cb *blk_check_plugged(blk_plug_cb_fn unplug,void *data, int size);


blkdev_issue_write_same 	( diff_type: Add type: prototype file: include/linux/blkdev.h )
	-- 1044
	++ extern int blkdev_issue_write_same(struct block_device *bdev,sector_t sector,sector_t nr_sects, gfp_t gfp_mask, struct page *page);


bdev_discard_alignment 	( diff_type: Add type: function file: include/linux/blkdev.h )
	-- 1212
	++ static inline int bdev_discard_alignment(struct block_device *bdev)


bdev_write_same 	( diff_type: Add type: function file: include/linux/blkdev.h )
	-- 1235
	++ static inline unsigned int bdev_write_same(struct block_device *bdev)


_UAPI_LINUX_TYPES_H 	( diff_type: Add type: macro file: include/uapi/linux/types.h )
	-- 2
	++ #define _UAPI_LINUX_TYPES_H


__HAVE_BUILTIN_BSWAP16__ 	( diff_type: Add type: macro file: include/linux/compiler-intel.h )
	-- 35
	++ #define __HAVE_BUILTIN_BSWAP16__


__builtin_bswap16 	( diff_type: Add type: macro file: include/linux/compiler-intel.h )
	-- 36
	++ #define __builtin_bswap16 _bswap16


__KERN_LEVELS_H__ 	( diff_type: Add type: macro file: include/linux/kern_levels.h )
	-- 2
	++ #define __KERN_LEVELS_H__


KERN_SOH 	( diff_type: Add type: macro file: include/linux/kern_levels.h )
	-- 4
	++ #define KERN_SOH "\001"


KERN_SOH_ASCII 	( diff_type: Add type: macro file: include/linux/kern_levels.h )
	-- 5
	++ #define KERN_SOH_ASCII '\001'


memweight 	( diff_type: Add type: prototype file: include/linux/string.h )
	-- 144
	++ extern size_t memweight(const void *ptr,size_t bytes);


kbasename 	( diff_type: Add type: function file: include/linux/string.h )
	-- 151
	++ static inline const char *kbasename(const char *path)


_UAPI_LINUX_STAT_H 	( diff_type: Add type: macro file: include/uapi/linux/stat.h )
	-- 2
	++ #define _UAPI_LINUX_STAT_H


align_vdso_addr 	( diff_type: Add type: prototype file: arch/x86/include/asm/elf.h )
	-- 369
	++ extern unsigned long align_vdso_addr(unsigned long);


_UAPI_LINUX_ELF_H 	( diff_type: Add type: macro file: include/uapi/linux/elf.h )
	-- 2
	++ #define _UAPI_LINUX_ELF_H


NT_SIGINFO 	( diff_type: Add type: macro file: include/uapi/linux/elf.h )
	-- 376
	++ #define NT_SIGINFO 0x53494749


NT_FILE 	( diff_type: Add type: macro file: include/uapi/linux/elf.h )
	-- 377
	++ #define NT_FILE 0x46494c45


NT_S390_TDB 	( diff_type: Add type: macro file: include/uapi/linux/elf.h )
	-- 393
	++ #define NT_S390_TDB 0x308


NT_ARM_TLS 	( diff_type: Add type: macro file: include/uapi/linux/elf.h )
	-- 395
	++ #define NT_ARM_TLS 0x401


NT_ARM_HW_BREAK 	( diff_type: Add type: macro file: include/uapi/linux/elf.h )
	-- 396
	++ #define NT_ARM_HW_BREAK 0x402


NT_ARM_HW_WATCH 	( diff_type: Add type: macro file: include/uapi/linux/elf.h )
	-- 397
	++ #define NT_ARM_HW_WATCH 0x403


__wait_event_lock_irq 	( diff_type: Add type: macro file: include/linux/wait.h )
	-- 554
	++ #define __wait_event_lock_irq(wq,condition,lock,cmd) do { DEFINE_WAIT(__wait); for (;;) { prepare_to_wait(&wq, &__wait, TASK_UNINTERRUPTIBLE); if (condition) break; spin_unlock_irq(&lock); cmd; schedule(); spin_lock_irq(&lock); } finish_wait(&wq, &__wait); } while (0)


wait_event_lock_irq_cmd 	( diff_type: Add type: macro file: include/linux/wait.h )
	-- 593
	++ #define wait_event_lock_irq_cmd(wq,condition,lock,cmd) do { if (condition) break; __wait_event_lock_irq(wq, condition, lock, cmd); } while (0)


wait_event_lock_irq 	( diff_type: Add type: macro file: include/linux/wait.h )
	-- 620
	++ #define wait_event_lock_irq(wq,condition,lock) do { if (condition) break; __wait_event_lock_irq(wq, condition, lock, ); } while (0)


__wait_event_interruptible_lock_irq 	( diff_type: Add type: macro file: include/linux/wait.h )
	-- 628
	++ #define __wait_event_interruptible_lock_irq(wq,condition, lock, ret, cmd) do { DEFINE_WAIT(__wait); for (;;) { prepare_to_wait(&wq, &__wait, TASK_INTERRUPTIBLE); if (condition) break; if (signal_pending(current)) { ret = -ERESTARTSYS; break; } spin_unlock_irq(&lock); cmd; schedule(); spin_lock_irq(&lock); } finish_wait(&wq, &__wait); } while (0)


wait_event_interruptible_lock_irq_cmd 	( diff_type: Add type: macro file: include/linux/wait.h )
	-- 674
	++ #define wait_event_interruptible_lock_irq_cmd(wq,condition,lock,cmd) ({ int __ret = 0; if (!(condition)) __wait_event_interruptible_lock_irq(wq, condition, lock, __ret, cmd); __ret; })


wait_event_interruptible_lock_irq 	( diff_type: Add type: macro file: include/linux/wait.h )
	-- 706
	++ #define wait_event_interruptible_lock_irq(wq,condition,lock) ({ int __ret = 0; if (!(condition)) __wait_event_interruptible_lock_irq(wq, condition, lock, __ret, ); __ret; })


rcu_read_unlock_special 	( diff_type: Add type: prototype file: include/linux/rcupdate.h )
	-- 175
	++ extern void rcu_read_unlock_special(struct task_struct *t);


rcu_user_enter 	( diff_type: Add type: function file: include/linux/rcupdate.h )
	-- 226
	++ static inline void rcu_user_enter(void) { }


rcu_user_exit 	( diff_type: Add type: function file: include/linux/rcupdate.h )
	-- 227
	++ static inline void rcu_user_exit(void) { }


rcu_user_enter_after_irq 	( diff_type: Add type: function file: include/linux/rcupdate.h )
	-- 228
	++ static inline void rcu_user_enter_after_irq(void) { }


rcu_user_exit_after_irq 	( diff_type: Add type: function file: include/linux/rcupdate.h )
	-- 229
	++ static inline void rcu_user_exit_after_irq(void) { }


rcu_user_hooks_switch 	( diff_type: Add type: function file: include/linux/rcupdate.h )
	-- 230
	++ static inline void rcu_user_hooks_switch(struct task_struct *prev,struct task_struct *next) { }


RCU_POINTER_INITIALIZER 	( diff_type: Add type: macro file: include/linux/rcupdate.h )
	-- 948
	++ #define RCU_POINTER_INITIALIZER(p,v) .p = (typeof(*v) __force __rcu *)(v)


DEFINE_EARLY_PER_CPU_READ_MOSTLY 	( diff_type: Add type: macro file: arch/x86/include/asm/percpu.h )
	-- 581
	++ #define DEFINE_EARLY_PER_CPU_READ_MOSTLY(_type,_name,_initvalue) DEFINE_PER_CPU_READ_MOSTLY(_type, _name) = _initvalue


DECLARE_EARLY_PER_CPU_READ_MOSTLY 	( diff_type: Add type: macro file: arch/x86/include/asm/percpu.h )
	-- 590
	++ #define DECLARE_EARLY_PER_CPU_READ_MOSTLY(_type,_name) DECLARE_PER_CPU_READ_MOSTLY(_type, _name)


Elf_Phdr 	( diff_type: Add type: macro file: include/asm-generic/module.h )
	-- 33
	++ #define Elf_Phdr Elf32_Phdr


Elf_Dyn 	( diff_type: Add type: macro file: include/asm-generic/module.h )
	-- 35
	++ #define Elf_Dyn Elf32_Dyn


Elf_Addr 	( diff_type: Add type: macro file: include/asm-generic/module.h )
	-- 37
	++ #define Elf_Addr Elf32_Addr


Elf_Rel 	( diff_type: Add type: macro file: include/asm-generic/module.h )
	-- 39
	++ #define Elf_Rel Elf32_Rel


Elf_Rela 	( diff_type: Add type: macro file: include/asm-generic/module.h )
	-- 42
	++ #define Elf_Rela Elf32_Rela


ELF_R_TYPE 	( diff_type: Add type: macro file: include/asm-generic/module.h )
	-- 44
	++ #define ELF_R_TYPE(X) ELF32_R_TYPE(X)


ELF_R_SYM 	( diff_type: Add type: macro file: include/asm-generic/module.h )
	-- 45
	++ #define ELF_R_SYM(X) ELF32_R_SYM(X)


THREADINFO_GFP_ACCOUNTED 	( diff_type: Add type: macro file: include/linux/thread_info.h )
	-- 64
	++ #define THREADINFO_GFP_ACCOUNTED (THREADINFO_GFP | __GFP_KMEMCG)


_LINUX_KERNEL_VTIME_H 	( diff_type: Add type: macro file: include/linux/vtime.h )
	-- 2
	++ #define _LINUX_KERNEL_VTIME_H


vtime_task_switch 	( diff_type: Add type: function file: include/linux/vtime.h )
	-- 14
	++ static inline void vtime_task_switch(struct task_struct *prev) { }


vtime_account_system 	( diff_type: Add type: function file: include/linux/vtime.h )
	-- 15
	++ static inline void vtime_account_system(struct task_struct *tsk) { }


vtime_account_system_irqsafe 	( diff_type: Add type: function file: include/linux/vtime.h )
	-- 16
	++ static inline void vtime_account_system_irqsafe(struct task_struct *tsk) { }


vtime_account_idle 	( diff_type: Add type: prototype file: include/linux/vtime.h )
	-- 10
	++ extern void vtime_account_idle(struct task_struct *tsk);


vtime_account_user 	( diff_type: Add type: prototype file: include/linux/vtime.h )
	-- 11
	++ extern void vtime_account_user(struct task_struct *tsk);


vtime_account 	( diff_type: Add type: function file: include/linux/vtime.h )
	-- 17
	++ static inline void vtime_account(struct task_struct *tsk) { }


irqtime_account_irq 	( diff_type: Add type: function file: include/linux/vtime.h )
	-- 23
	++ static inline void irqtime_account_irq(struct task_struct *tsk) { }


vtime_account_irq_enter 	( diff_type: Add type: function file: include/linux/vtime.h )
	-- 26
	++ static inline void vtime_account_irq_enter(struct task_struct *tsk)


vtime_account_irq_exit 	( diff_type: Add type: function file: include/linux/vtime.h )
	-- 41
	++ static inline void vtime_account_irq_exit(struct task_struct *tsk)


smp_store_boot_cpu_info 	( diff_type: Add type: prototype file: arch/x86/include/asm/smp.h )
	-- 169
	++ void smp_store_boot_cpu_info(void);


ktime_compare 	( diff_type: Add type: function file: include/linux/ktime.h )
	-- 295
	++ static inline int ktime_compare(const ktime_t cmp1,const ktime_t cmp2)


_UAPI_ASM_X86_PTRACE_H 	( diff_type: Add type: macro file: arch/x86/include/uapi/asm/ptrace.h )
	-- 2
	++ #define _UAPI_ASM_X86_PTRACE_H


paravirt_flush_lazy_mmu 	( diff_type: Add type: prototype file: arch/x86/include/asm/paravirt_types.h )
	-- 683
	++ void paravirt_flush_lazy_mmu(void);


ISOLATE_UNEVICTABLE 	( diff_type: Add type: macro file: include/linux/mmzone.h )
	-- 220
	++ #define ISOLATE_UNEVICTABLE ((__force isolate_mode_t)0x8)


_LINUX_NUMA_H 	( diff_type: Add type: macro file: include/linux/numa.h )
	-- 2
	++ #define _LINUX_NUMA_H


NODES_SHIFT 	( diff_type: Add type: macro file: include/linux/numa.h )
	-- 8
	++ #define NODES_SHIFT 0


MAX_NUMNODES 	( diff_type: Add type: macro file: include/linux/numa.h )
	-- 11
	++ #define MAX_NUMNODES (1 << NODES_SHIFT)


NUMA_NO_NODE 	( diff_type: Add type: macro file: include/linux/numa.h )
	-- 13
	++ #define NUMA_NO_NODE (-1)


dpm_for_each_dev 	( diff_type: Add type: function file: include/linux/pm.h )
	-- 682
	++ static inline void dpm_for_each_dev(void *data,void (*fn)(struct device *,void *))


PCI_STD_HEADER_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 29
	++ #define PCI_STD_HEADER_SIZEOF 64


PCI_IO_1K_RANGE_MASK 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 130
	++ #define PCI_IO_1K_RANGE_MASK (~0x03UL)


PCI_CAP_ID_SECDEV 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 214
	++ #define PCI_CAP_ID_SECDEV 0x0F


PCI_CAP_ID_SATA 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 217
	++ #define PCI_CAP_ID_SATA 0x12


PCI_CAP_ID_MAX 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 219
	++ #define PCI_CAP_ID_MAX PCI_CAP_ID_AF


PCI_CAP_VPD_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 284
	++ #define PCI_CAP_VPD_SIZEOF 8


PCI_MSI_PENDING_32 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 306
	++ #define PCI_MSI_PENDING_32 16


PCI_MSI_PENDING_64 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 309
	++ #define PCI_MSI_PENDING_64 20


PCI_CAP_MSIX_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 319
	++ #define PCI_CAP_MSIX_SIZEOF 12


PCI_CAP_AF_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 350
	++ #define PCI_CAP_AF_SIZEOF 6


PCI_X_ECC_CSR 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 387
	++ #define PCI_X_ECC_CSR 8


PCI_CAP_PCIX_SIZEOF_V0 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 388
	++ #define PCI_CAP_PCIX_SIZEOF_V0 8


PCI_CAP_PCIX_SIZEOF_V1 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 389
	++ #define PCI_CAP_PCIX_SIZEOF_V1 24


PCI_CAP_PCIX_SIZEOF_V2 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 390
	++ #define PCI_CAP_PCIX_SIZEOF_V2 PCI_CAP_PCIX_SIZEOF_V1


PCI_X_BRIDGE_SSTATUS 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 394
	++ #define PCI_X_BRIDGE_SSTATUS 2


PCI_X_SSTATUS_64BIT 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 395
	++ #define PCI_X_SSTATUS_64BIT 0x0001


PCI_X_SSTATUS_133MHZ 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 396
	++ #define PCI_X_SSTATUS_133MHZ 0x0002


PCI_X_SSTATUS_FREQ 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 397
	++ #define PCI_X_SSTATUS_FREQ 0x03c0


PCI_X_SSTATUS_VERS 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 398
	++ #define PCI_X_SSTATUS_VERS 0x3000


PCI_X_SSTATUS_V1 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 399
	++ #define PCI_X_SSTATUS_V1 0x1000


PCI_X_SSTATUS_V2 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 400
	++ #define PCI_X_SSTATUS_V2 0x2000


PCI_X_SSTATUS_266MHZ 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 401
	++ #define PCI_X_SSTATUS_266MHZ 0x4000


PCI_X_SSTATUS_533MHZ 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 402
	++ #define PCI_X_SSTATUS_533MHZ 0x8000


PCI_X_BRIDGE_STATUS 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 403
	++ #define PCI_X_BRIDGE_STATUS 4


PCI_EXP_LNKCAP_SLS_2_5GB 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 461
	++ #define PCI_EXP_LNKCAP_SLS_2_5GB 0x1


PCI_EXP_LNKCAP_SLS_5_0GB 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 462
	++ #define PCI_EXP_LNKCAP_SLS_5_0GB 0x2


PCI_EXP_LNKCTL_ASPM_L0S 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 474
	++ #define PCI_EXP_LNKCTL_ASPM_L0S 0x01


PCI_EXP_LNKCTL_ASPM_L1 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 475
	++ #define PCI_EXP_LNKCTL_ASPM_L1 0x02


PCI_CAP_EXP_ENDPOINT_SIZEOF_V1 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 496
	++ #define PCI_CAP_EXP_ENDPOINT_SIZEOF_V1 20


PCI_CAP_EXP_ENDPOINT_SIZEOF_V2 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 562
	++ #define PCI_CAP_EXP_ENDPOINT_SIZEOF_V2 44


PCI_EXP_LNKCAP2 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 563
	++ #define PCI_EXP_LNKCAP2 44


PCI_EXP_LNKCAP2_SLS_2_5GB 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 564
	++ #define PCI_EXP_LNKCAP2_SLS_2_5GB 0x02


PCI_EXP_LNKCAP2_SLS_5_0GB 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 565
	++ #define PCI_EXP_LNKCAP2_SLS_5_0GB 0x04


PCI_EXP_LNKCAP2_SLS_8_0GB 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 566
	++ #define PCI_EXP_LNKCAP2_SLS_8_0GB 0x08


PCI_EXP_LNKCAP2_CROSSLINK 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 567
	++ #define PCI_EXP_LNKCAP2_CROSSLINK 0x100


PCI_EXP_LNKSTA2 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 569
	++ #define PCI_EXP_LNKSTA2 50


PCI_EXT_CAP_ID_RCLD 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 581
	++ #define PCI_EXT_CAP_ID_RCLD 0x05


PCI_EXT_CAP_ID_RCILC 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 582
	++ #define PCI_EXT_CAP_ID_RCILC 0x06


PCI_EXT_CAP_ID_RCEC 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 583
	++ #define PCI_EXT_CAP_ID_RCEC 0x07


PCI_EXT_CAP_ID_MFVC 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 584
	++ #define PCI_EXT_CAP_ID_MFVC 0x08


PCI_EXT_CAP_ID_VC9 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 585
	++ #define PCI_EXT_CAP_ID_VC9 0x09


PCI_EXT_CAP_ID_RCRB 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 586
	++ #define PCI_EXT_CAP_ID_RCRB 0x0A


PCI_EXT_CAP_ID_CAC 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 588
	++ #define PCI_EXT_CAP_ID_CAC 0x0C


PCI_EXT_CAP_ID_MRIOV 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 593
	++ #define PCI_EXT_CAP_ID_MRIOV 0x11


PCI_EXT_CAP_ID_MCAST 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 594
	++ #define PCI_EXT_CAP_ID_MCAST 0x12


PCI_EXT_CAP_ID_AMD_XXX 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 596
	++ #define PCI_EXT_CAP_ID_AMD_XXX 0x14


PCI_EXT_CAP_ID_REBAR 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 597
	++ #define PCI_EXT_CAP_ID_REBAR 0x15


PCI_EXT_CAP_ID_DPA 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 598
	++ #define PCI_EXT_CAP_ID_DPA 0x16


PCI_EXT_CAP_ID_TPH 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 599
	++ #define PCI_EXT_CAP_ID_TPH 0x17


PCI_EXT_CAP_ID_SECPCI 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 601
	++ #define PCI_EXT_CAP_ID_SECPCI 0x19


PCI_EXT_CAP_ID_PMUX 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 602
	++ #define PCI_EXT_CAP_ID_PMUX 0x1A


PCI_EXT_CAP_ID_MAX 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 604
	++ #define PCI_EXT_CAP_ID_MAX PCI_EXT_CAP_ID_PASID


PCI_EXT_CAP_DSN_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 606
	++ #define PCI_EXT_CAP_DSN_SIZEOF 12


PCI_EXT_CAP_MCAST_ENDPOINT_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 607
	++ #define PCI_EXT_CAP_MCAST_ENDPOINT_SIZEOF 40


PCI_ERR_UNC_SURPDN 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 613
	++ #define PCI_ERR_UNC_SURPDN 0x00000020


PCI_ERR_UNC_ACSV 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 623
	++ #define PCI_ERR_UNC_ACSV 0x00200000


PCI_ERR_UNC_INTN 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 624
	++ #define PCI_ERR_UNC_INTN 0x00400000


PCI_ERR_UNC_MCBTLP 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 625
	++ #define PCI_ERR_UNC_MCBTLP 0x00800000


PCI_ERR_UNC_ATOMEG 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 626
	++ #define PCI_ERR_UNC_ATOMEG 0x01000000


PCI_ERR_UNC_TLPPRE 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 627
	++ #define PCI_ERR_UNC_TLPPRE 0x02000000


PCI_ERR_COR_ADV_NFAT 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 638
	++ #define PCI_ERR_COR_ADV_NFAT 0x00002000


PCI_ERR_COR_INTERNAL 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 639
	++ #define PCI_ERR_COR_INTERNAL 0x00004000


PCI_ERR_COR_LOG_OVER 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 640
	++ #define PCI_ERR_COR_LOG_OVER 0x00008000


PCI_VC_REG1_EVCC 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 672
	++ #define PCI_VC_REG1_EVCC 0x7


PCI_VC_REG2_32_PHASE 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 674
	++ #define PCI_VC_REG2_32_PHASE 0x2


PCI_VC_REG2_64_PHASE 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 675
	++ #define PCI_VC_REG2_64_PHASE 0x4


PCI_VC_REG2_128_PHASE 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 676
	++ #define PCI_VC_REG2_128_PHASE 0x8


PCI_CAP_VC_BASE_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 682
	++ #define PCI_CAP_VC_BASE_SIZEOF 0x10


PCI_CAP_VC_PER_VC_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 683
	++ #define PCI_CAP_VC_PER_VC_SIZEOF 0x0C


PCI_EXT_CAP_PWR_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 696
	++ #define PCI_EXT_CAP_PWR_SIZEOF 16


PCI_VNDR_HEADER 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 699
	++ #define PCI_VNDR_HEADER 4


PCI_VNDR_HEADER_ID 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 700
	++ #define PCI_VNDR_HEADER_ID(x) ((x) & 0xffff)


PCI_VNDR_HEADER_REV 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 701
	++ #define PCI_VNDR_HEADER_REV(x) (((x) >> 16) & 0xf)


PCI_VNDR_HEADER_LEN 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 702
	++ #define PCI_VNDR_HEADER_LEN(x) (((x) >> 20) & 0xfff)


HT_CAP_SIZEOF_LONG 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 735
	++ #define HT_CAP_SIZEOF_LONG 28


HT_CAP_SIZEOF_SHORT 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 736
	++ #define HT_CAP_SIZEOF_SHORT 24


PCI_EXT_CAP_ARI_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 747
	++ #define PCI_EXT_CAP_ARI_SIZEOF 8


PCI_EXT_CAP_ATS_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 757
	++ #define PCI_EXT_CAP_ATS_SIZEOF 8


PCI_EXT_CAP_PRI_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 769
	++ #define PCI_EXT_CAP_PRI_SIZEOF 16


PCI_EXT_CAP_PASID_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 779
	++ #define PCI_EXT_CAP_PASID_SIZEOF 8


PCI_EXT_CAP_SRIOV_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 811
	++ #define PCI_EXT_CAP_SRIOV_SIZEOF 64


PCI_EXT_CAP_LTR_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 818
	++ #define PCI_EXT_CAP_LTR_SIZEOF 8


PCI_ACS_EGRESS_BITS 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 829
	++ #define PCI_ACS_EGRESS_BITS 0x05


PCI_VSEC_HDR 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 833
	++ #define PCI_VSEC_HDR 4


PCI_VSEC_HDR_LEN_SHIFT 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 834
	++ #define PCI_VSEC_HDR_LEN_SHIFT 20


PCI_SATA_REGS 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 837
	++ #define PCI_SATA_REGS 4


PCI_SATA_REGS_MASK 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 838
	++ #define PCI_SATA_REGS_MASK 0xF


PCI_SATA_REGS_INLINE 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 839
	++ #define PCI_SATA_REGS_INLINE 0xF


PCI_SATA_SIZEOF_SHORT 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 840
	++ #define PCI_SATA_SIZEOF_SHORT 8


PCI_SATA_SIZEOF_LONG 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 841
	++ #define PCI_SATA_SIZEOF_LONG 16


PCI_REBAR_CTRL 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 844
	++ #define PCI_REBAR_CTRL 8


PCI_REBAR_CTRL_NBAR_MASK 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 845
	++ #define PCI_REBAR_CTRL_NBAR_MASK (7 << 5)


PCI_REBAR_CTRL_NBAR_SHIFT 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 846
	++ #define PCI_REBAR_CTRL_NBAR_SHIFT 5


PCI_DPA_CAP 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 849
	++ #define PCI_DPA_CAP 4


PCI_DPA_CAP_SUBSTATE_MASK 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 850
	++ #define PCI_DPA_CAP_SUBSTATE_MASK 0x1F


PCI_DPA_BASE_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 851
	++ #define PCI_DPA_BASE_SIZEOF 16


PCI_TPH_CAP 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 854
	++ #define PCI_TPH_CAP 4


PCI_TPH_CAP_LOC_MASK 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 855
	++ #define PCI_TPH_CAP_LOC_MASK 0x600


PCI_TPH_LOC_NONE 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 856
	++ #define PCI_TPH_LOC_NONE 0x000


PCI_TPH_LOC_CAP 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 857
	++ #define PCI_TPH_LOC_CAP 0x200


PCI_TPH_LOC_MSIX 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 858
	++ #define PCI_TPH_LOC_MSIX 0x400


PCI_TPH_CAP_ST_MASK 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 859
	++ #define PCI_TPH_CAP_ST_MASK 0x07FF0000


PCI_TPH_CAP_ST_SHIFT 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 860
	++ #define PCI_TPH_CAP_ST_SHIFT 16


PCI_TPH_BASE_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 861
	++ #define PCI_TPH_BASE_SIZEOF 12


VM_NONE 	( diff_type: Add type: macro file: include/linux/mm.h )
	-- 73
	++ #define VM_NONE 0x00000000


VM_ARCH_1 	( diff_type: Add type: macro file: include/linux/mm.h )
	-- 103
	++ #define VM_ARCH_1 0x01000000


VM_DONTDUMP 	( diff_type: Add type: macro file: include/linux/mm.h )
	-- 104
	++ #define VM_DONTDUMP 0x04000000


VM_PAT 	( diff_type: Add type: macro file: include/linux/mm.h )
	-- 112
	++ # define VM_PAT VM_ARCH_1


FAULT_FLAG_TRIED 	( diff_type: Add type: macro file: include/linux/mm.h )
	-- 164
	++ #define FAULT_FLAG_TRIED 0x40


set_freepage_migratetype 	( diff_type: Add type: function file: include/linux/mm.h )
	-- 242
	++ static inline void set_freepage_migratetype(struct page *page,int migratetype)


get_freepage_migratetype 	( diff_type: Add type: function file: include/linux/mm.h )
	-- 248
	++ static inline int get_freepage_migratetype(struct page *page)


page_xchg_last_nid 	( diff_type: Add type: function file: include/linux/mm.h )
	-- 710
	++ static inline int page_xchg_last_nid(struct page *page,int nid)


page_last_nid 	( diff_type: Add type: function file: include/linux/mm.h )
	-- 715
	++ static inline int page_last_nid(struct page *page)


reset_page_last_nid 	( diff_type: Add type: function file: include/linux/mm.h )
	-- 720
	++ static inline void reset_page_last_nid(struct page *page)


__page_file_mapping 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 839
	++ extern struct address_space *__page_file_mapping(struct page *);


page_file_mapping 	( diff_type: Add type: function file: include/linux/mm.h )
	-- 842
	++ struct address_space *page_file_mapping(struct page *page)


__page_file_index 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 866
	++ extern pgoff_t __page_file_index(struct page *page);


page_file_index 	( diff_type: Add type: function file: include/linux/mm.h )
	-- 872
	++ static inline pgoff_t page_file_index(struct page *page)


get_kernel_pages 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1053
	++ int get_kernel_pages(const struct kvec *iov,int nr_pages,int write,struct page **pages);


get_kernel_page 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1055
	++ int get_kernel_page(unsigned long start,int write,struct page **pages);


change_protection 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1109
	++ extern unsigned long change_protection(struct vm_area_struct *vma,unsigned long start,unsigned long end, pgprot_t newprot,int dirty_accountable, int prot_numa);


zone_pcp_reset 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1397
	++ extern void zone_pcp_reset(struct zone *zone);


vma_interval_tree_insert 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1404
	++ void vma_interval_tree_insert(struct vm_area_struct *node,struct rb_root *root);


vma_interval_tree_insert_after 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1406
	++ void vma_interval_tree_insert_after(struct vm_area_struct *node,struct vm_area_struct *prev,struct rb_root *root);


vma_interval_tree_remove 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1409
	++ void vma_interval_tree_remove(struct vm_area_struct *node,struct rb_root *root);


vma_interval_tree_iter_first 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1411
	++ struct vm_area_struct *vma_interval_tree_iter_first(struct rb_root *root,unsigned long start, unsigned long last);


vma_interval_tree_iter_next 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1413
	++ struct vm_area_struct *vma_interval_tree_iter_next(struct vm_area_struct *node,unsigned long start, unsigned long last);


vma_interval_tree_foreach 	( diff_type: Add type: macro file: include/linux/mm.h )
	-- 1416
	++ #define vma_interval_tree_foreach(vma,root,start,last) for (vma = vma_interval_tree_iter_first(root, start, last); vma; vma = vma_interval_tree_iter_next(vma, start, last))


anon_vma_interval_tree_insert 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1426
	++ void anon_vma_interval_tree_insert(struct anon_vma_chain *node,struct rb_root *root);


anon_vma_interval_tree_remove 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1428
	++ void anon_vma_interval_tree_remove(struct anon_vma_chain *node,struct rb_root *root);


anon_vma_interval_tree_iter_first 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1430
	++ struct anon_vma_chain *anon_vma_interval_tree_iter_first(


anon_vma_interval_tree_iter_next 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1432
	++ struct anon_vma_chain *anon_vma_interval_tree_iter_next(


anon_vma_interval_tree_verify 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1435
	++ void anon_vma_interval_tree_verify(struct anon_vma_chain *node);


anon_vma_interval_tree_foreach 	( diff_type: Add type: macro file: include/linux/mm.h )
	-- 1438
	++ #define anon_vma_interval_tree_foreach(avc,root,start,last) for (avc = anon_vma_interval_tree_iter_first(root, start, last); avc; avc = anon_vma_interval_tree_iter_next(avc, start, last))


vm_unmapped_area_info 	( diff_type: Add type: struct file: include/linux/mm.h )
	-- 1490
	++ struct vm_unmapped_area_info { #define VM_UNMAPPED_AREA_TOPDOWN 1 unsigned long flags; unsigned long length; unsigned long low_limit; unsigned long high_limit; unsigned long align_mask; unsigned long align_offset; };


unmapped_area 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1500
	++ extern unsigned long unmapped_area(struct vm_unmapped_area_info *info);


unmapped_area_topdown 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1501
	++ extern unsigned long unmapped_area_topdown(struct vm_unmapped_area_info *info);


vm_unmapped_area 	( diff_type: Add type: function file: include/linux/mm.h )
	-- 1513
	++ vm_unmapped_area(struct vm_unmapped_area_info *info)


filemap_page_mkwrite 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1528
	++ extern int filemap_page_mkwrite(struct vm_area_struct *vma,struct vm_fault *vmf);


change_prot_numa 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1614
	++ unsigned long change_prot_numa(struct vm_area_struct *vma,unsigned long start, unsigned long end);


vm_iomap_memory 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1626
	++ int vm_iomap_memory(struct vm_area_struct *vma,phys_addr_t start,unsigned long len);


FOLL_NUMA 	( diff_type: Add type: macro file: include/linux/mm.h )
	-- 1641
	++ #define FOLL_NUMA 0x200


task_migration_notifier 	( diff_type: Add type: struct file: include/linux/sched.h )
	-- 111
	++ struct task_migration_notifier { struct task_struct *task; int from_cpu; int to_cpu; };


register_task_migration_notifier 	( diff_type: Add type: prototype file: include/linux/sched.h )
	-- 116
	++ extern void register_task_migration_notifier(struct notifier_block *n);


dump_cpu_task 	( diff_type: Add type: prototype file: include/linux/sched.h )
	-- 120
	++ extern void dump_cpu_task(int cpu);


TASK_PARKED 	( diff_type: Add type: macro file: include/linux/sched.h )
	-- 166
	++ #define TASK_PARKED 512


nohz_balance_enter_idle 	( diff_type: Add type: function file: include/linux/sched.h )
	-- 251
	++ static inline void nohz_balance_enter_idle(int cpu) { }


SUID_DUMPABLE_DISABLED 	( diff_type: Add type: macro file: include/linux/sched.h )
	-- 381
	++ #define SUID_DUMPABLE_DISABLED 0


SUID_DUMPABLE_ENABLED 	( diff_type: Add type: macro file: include/linux/sched.h )
	-- 382
	++ #define SUID_DUMPABLE_ENABLED 1


SUID_DUMPABLE_SAFE 	( diff_type: Add type: macro file: include/linux/sched.h )
	-- 383
	++ #define SUID_DUMPABLE_SAFE 2


MMF_HAS_UPROBES 	( diff_type: Add type: macro file: include/linux/sched.h )
	-- 420
	++ #define MMF_HAS_UPROBES 19


MMF_RECALC_UPROBES 	( diff_type: Add type: macro file: include/linux/sched.h )
	-- 421
	++ #define MMF_RECALC_UPROBES 20


cputime 	( diff_type: Add type: struct file: include/linux/sched.h )
	-- 454
	++ struct cputime { cputime_t utime; cputime_t stime; };


sched_avg 	( diff_type: Add type: struct file: include/linux/sched.h )
	-- 1126
	++ struct sched_avg { u32 runnable_avg_sum, runnable_avg_period; u64 last_runnable_update; s64 decay_count; unsigned long load_avg_contrib; };


task_numa_fault 	( diff_type: Add type: function file: include/linux/sched.h )
	-- 1618
	++ static inline void task_numa_fault(int node,int pages,bool migrated)


set_numabalancing_state 	( diff_type: Add type: function file: include/linux/sched.h )
	-- 1621
	++ static inline void set_numabalancing_state(bool enabled)


task_cputime_adjusted 	( diff_type: Add type: prototype file: include/linux/sched.h )
	-- 1796
	++ extern void task_cputime_adjusted(struct task_struct *p,cputime_t *ut,cputime_t *st);


thread_group_cputime_adjusted 	( diff_type: Add type: prototype file: include/linux/sched.h )
	-- 1797
	++ extern void thread_group_cputime_adjusted(struct task_struct *p,cputime_t *ut,cputime_t *st);


PF_USED_ASYNC 	( diff_type: Add type: macro file: include/linux/sched.h )
	-- 1814
	++ #define PF_USED_ASYNC 0x00004000


tsk_restore_flags 	( diff_type: Add type: function file: include/linux/sched.h )
	-- 1912
	++ static inline void tsk_restore_flags(struct task_struct *task,unsigned long orig_flags, unsigned long flags)


kernel_thread 	( diff_type: Add type: prototype file: include/linux/sched.h )
	-- 2358
	++ extern pid_t kernel_thread(int (*fn)(void *),void *arg,unsigned long flags);


signal_wake_up_state 	( diff_type: Add type: prototype file: include/linux/sched.h )
	-- 2708
	++ extern void signal_wake_up_state(struct task_struct *t,unsigned int state);


ptrace_signal_wake_up 	( diff_type: Add type: function file: include/linux/sched.h )
	-- 2714
	++ static inline void ptrace_signal_wake_up(struct task_struct *t,bool resume)


part_nr_sects_read 	( diff_type: Add type: function file: include/linux/genhd.h )
	-- 669
	++ static inline sector_t part_nr_sects_read(struct hd_struct *part)


part_nr_sects_write 	( diff_type: Add type: function file: include/linux/genhd.h )
	-- 696
	++ static inline void part_nr_sects_write(struct hd_struct *part,sector_t size)


mapping_set_balloon 	( diff_type: Add type: function file: include/linux/pagemap.h )
	-- 57
	++ static inline void mapping_set_balloon(struct address_space *mapping)


mapping_clear_balloon 	( diff_type: Add type: function file: include/linux/pagemap.h )
	-- 62
	++ static inline void mapping_clear_balloon(struct address_space *mapping)


mapping_balloon 	( diff_type: Add type: function file: include/linux/pagemap.h )
	-- 67
	++ static inline int mapping_balloon(struct address_space *mapping)


page_file_offset 	( diff_type: Add type: function file: include/linux/pagemap.h )
	-- 305
	++ static inline loff_t page_file_offset(struct page *page)


pdflush_proc_obsolete 	( diff_type: Add type: prototype file: include/linux/backing-dev.h )
	-- 308
	++ int pdflush_proc_obsolete(struct ctl_table *table,int write,void __user *buffer, size_t *lenp, loff_t *ppos);


bio_clone_bioset 	( diff_type: Add type: prototype file: include/linux/bio.h )
	-- 219
	++ extern struct bio *bio_clone_bioset(struct bio *,gfp_t,struct bio_set *bs);


bio_clone_kmalloc 	( diff_type: Add type: function file: include/linux/bio.h )
	-- 238
	++ static inline struct bio *bio_clone_kmalloc(struct bio *bio,gfp_t gfp_mask)


bio_reset 	( diff_type: Add type: prototype file: include/linux/bio.h )
	-- 249
	++ extern void bio_reset(struct bio *);


bio_is_rw 	( diff_type: Add type: function file: include/linux/bio.h )
	-- 397
	++ static inline bool bio_is_rw(struct bio *bio)


bio_mergeable 	( diff_type: Add type: function file: include/linux/bio.h )
	-- 408
	++ static inline bool bio_mergeable(struct bio *bio)

