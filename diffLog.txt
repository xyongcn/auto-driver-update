
module_state 	( diff_type: Mod type: enum file: include/linux/module.h )
	-- enum module_state { MODULE_STATE_LIVE, MODULE_STATE_COMING, MODULE_STATE_GOING, };
	++ enum module_state { MODULE_STATE_LIVE, MODULE_STATE_COMING, MODULE_STATE_GOING, MODULE_STATE_UNFORMED, };


module 	( diff_type: Mod type: struct file: include/linux/module.h )
	-- struct module { enum module_state state; struct list_head list; char name[MODULE_NAME_LEN]; struct module_kobject mkobj; struct module_attribute *modinfo_attrs; const char *version; const char *srcversion; struct kobject *holders_dir; const struct kernel_symbol *syms; const unsigned long *crcs; unsigned int num_syms; struct kernel_param *kp; unsigned int num_kp; unsigned int num_gpl_syms; const struct kernel_symbol *gpl_syms; const unsigned long *gpl_crcs; const struct kernel_symbol *unused_syms; const unsigned long *unused_crcs; unsigned int num_unused_syms; unsigned int num_unused_gpl_syms; const struct kernel_symbol *unused_gpl_syms; const unsigned long *unused_gpl_crcs; const struct kernel_symbol *gpl_future_syms; const unsigned long *gpl_future_crcs; unsigned int num_gpl_future_syms; unsigned int num_exentries; struct exception_table_entry *extable; int (*init)(void); void *module_init; void *module_core; unsigned int init_size, core_size; unsigned int init_text_size, core_text_size; unsigned int init_ro_size, core_ro_size; struct mod_arch_specific arch; unsigned int taints; unsigned num_bugs; struct list_head bug_list; struct bug_entry *bug_table; Elf_Sym *symtab, *core_symtab; unsigned int num_symtab, core_num_syms; char *strtab, *core_strtab; struct module_sect_attrs *sect_attrs; struct module_notes_attrs *notes_attrs; char *args; void __percpu *percpu; unsigned int percpu_size; unsigned int num_tracepoints; struct tracepoint * const *tracepoints_ptrs; struct jump_entry *jump_entries; unsigned int num_jump_entries; unsigned int num_trace_bprintk_fmt; const char **trace_bprintk_fmt_start; struct ftrace_event_call **trace_events; unsigned int num_trace_events; unsigned int num_ftrace_callsites; unsigned long *ftrace_callsites; struct list_head source_list; struct list_head target_list; struct task_struct *waiter; void (*exit)(void); struct module_ref __percpu *refptr; ctor_fn_t *ctors; unsigned int num_ctors; };
	++ struct module { enum module_state state; struct list_head list; char name[MODULE_NAME_LEN]; struct module_kobject mkobj; struct module_attribute *modinfo_attrs; const char *version; const char *srcversion; struct kobject *holders_dir; const struct kernel_symbol *syms; const unsigned long *crcs; unsigned int num_syms; struct kernel_param *kp; unsigned int num_kp; unsigned int num_gpl_syms; const struct kernel_symbol *gpl_syms; const unsigned long *gpl_crcs; const struct kernel_symbol *unused_syms; const unsigned long *unused_crcs; unsigned int num_unused_syms; unsigned int num_unused_gpl_syms; const struct kernel_symbol *unused_gpl_syms; const unsigned long *unused_gpl_crcs; bool sig_ok; const struct kernel_symbol *gpl_future_syms; const unsigned long *gpl_future_crcs; unsigned int num_gpl_future_syms; unsigned int num_exentries; struct exception_table_entry *extable; int (*init)(void); void *module_init; void *module_core; unsigned int init_size, core_size; unsigned int init_text_size, core_text_size; unsigned int init_ro_size, core_ro_size; struct mod_arch_specific arch; unsigned int taints; unsigned num_bugs; struct list_head bug_list; struct bug_entry *bug_table; Elf_Sym *symtab, *core_symtab; unsigned int num_symtab, core_num_syms; char *strtab, *core_strtab; struct module_sect_attrs *sect_attrs; struct module_notes_attrs *notes_attrs; char *args; void __percpu *percpu; unsigned int percpu_size; unsigned int num_tracepoints; struct tracepoint * const *tracepoints_ptrs; struct jump_entry *jump_entries; unsigned int num_jump_entries; unsigned int num_trace_bprintk_fmt; const char **trace_bprintk_fmt_start; struct ftrace_event_call **trace_events; unsigned int num_trace_events; unsigned int num_ftrace_callsites; unsigned long *ftrace_callsites; struct list_head source_list; struct list_head target_list; struct task_struct *waiter; void (*exit)(void); struct module_ref __percpu *refptr; ctor_fn_t *ctors; unsigned int num_ctors; };


__ALIGN_KERNEL 	( diff_type: Mov type: macro file: include/linux/kernel.h )
	-- include/uapi/linux/kernel.h
	++ #define __ALIGN_KERNEL(x,a) __ALIGN_KERNEL_MASK(x,(typeof(x))(a) - 1)


__ALIGN_KERNEL_MASK 	( diff_type: Mov type: macro file: include/linux/kernel.h )
	-- include/uapi/linux/kernel.h
	++ #define __ALIGN_KERNEL_MASK(x,mask) (((x) + (mask)) & ~(mask))


DIV_ROUND_CLOSEST 	( diff_type: Mod type: macro file: include/linux/kernel.h )
	-- #define DIV_ROUND_CLOSEST(x,divisor)( { typeof(divisor) __divisor = divisor; (((x) + ((__divisor) / 2)) / (__divisor)); } )
	++ #define DIV_ROUND_CLOSEST(x,divisor)( { typeof(x) __x = x; typeof(divisor) __d = divisor; (((typeof(x))-1) > 0 || ((typeof(divisor))-1) > 0 || (__x) > 0) ? (((__x) + ((__d) / 2)) / (__d)) : (((__x) - ((__d) / 2)) / (__d)); } )


trace_printk 	( diff_type: Mod type: function file: include/linux/kernel.h )
	-- trace_printk(const char *fmt,...)
	++ int trace_printk(const char *fmt,...)


NUMA_BUILD 	( diff_type: Del type: macro file: include/linux/kernel.h )
	-- #define NUMA_BUILD 0


COMPACTION_BUILD 	( diff_type: Del type: macro file: include/linux/kernel.h )
	-- #define COMPACTION_BUILD 0


CSIGNAL 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define CSIGNAL 0x000000ff


CLONE_VM 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define CLONE_VM 0x00000100


CLONE_FS 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define CLONE_FS 0x00000200


CLONE_FILES 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define CLONE_FILES 0x00000400


CLONE_SIGHAND 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define CLONE_SIGHAND 0x00000800


CLONE_PTRACE 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define CLONE_PTRACE 0x00002000


CLONE_VFORK 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define CLONE_VFORK 0x00004000


CLONE_PARENT 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define CLONE_PARENT 0x00008000


CLONE_THREAD 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define CLONE_THREAD 0x00010000


CLONE_NEWNS 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define CLONE_NEWNS 0x00020000


CLONE_SYSVSEM 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define CLONE_SYSVSEM 0x00040000


CLONE_SETTLS 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define CLONE_SETTLS 0x00080000


CLONE_PARENT_SETTID 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define CLONE_PARENT_SETTID 0x00100000


CLONE_CHILD_CLEARTID 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define CLONE_CHILD_CLEARTID 0x00200000


CLONE_DETACHED 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define CLONE_DETACHED 0x00400000


CLONE_UNTRACED 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define CLONE_UNTRACED 0x00800000


CLONE_CHILD_SETTID 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define CLONE_CHILD_SETTID 0x01000000


CLONE_NEWUTS 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define CLONE_NEWUTS 0x04000000


CLONE_NEWIPC 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define CLONE_NEWIPC 0x08000000


CLONE_NEWUSER 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define CLONE_NEWUSER 0x10000000


CLONE_NEWPID 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define CLONE_NEWPID 0x20000000


CLONE_NEWNET 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define CLONE_NEWNET 0x40000000


CLONE_IO 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define CLONE_IO 0x80000000


SCHED_NORMAL 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define SCHED_NORMAL 0


SCHED_FIFO 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define SCHED_FIFO 1


SCHED_RR 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define SCHED_RR 2


SCHED_BATCH 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define SCHED_BATCH 3


SCHED_IDLE 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define SCHED_IDLE 5


SCHED_RESET_ON_FORK 	( diff_type: Mov type: macro file: include/linux/sched.h )
	-- include/uapi/linux/sched.h
	++ #define SCHED_RESET_ON_FORK 0x40000000


TASK_STATE_MAX 	( diff_type: Mod type: macro file: include/linux/sched.h )
	-- #define TASK_STATE_MAX 512
	++ #define TASK_STATE_MAX 1024


TASK_STATE_TO_CHAR_STR 	( diff_type: Mod type: macro file: include/linux/sched.h )
	-- #define TASK_STATE_TO_CHAR_STR "RSDTtZXxKW"
	++ #define TASK_STATE_TO_CHAR_STR "RSDTtZXxKWP"


select_nohz_load_balancer 	( diff_type: Del type: function file: include/linux/sched.h )
	-- static inline void select_nohz_load_balancer(int stop_tick) { }


signal_struct 	( diff_type: Mod type: struct file: include/linux/sched.h )
	-- struct signal_struct { atomic_t sigcnt; atomic_t live; int nr_threads; wait_queue_head_t wait_chldexit; struct task_struct *curr_target; struct sigpending shared_pending; int group_exit_code; int notify_count; struct task_struct *group_exit_task; int group_stop_count; unsigned int flags; unsigned int is_child_subreaper:1; unsigned int has_child_subreaper:1; struct list_head posix_timers; struct hrtimer real_timer; struct pid *leader_pid; ktime_t it_real_incr; struct cpu_itimer it[2]; struct thread_group_cputimer cputimer; struct task_cputime cputime_expires; struct list_head cpu_timers[3]; struct pid *tty_old_pgrp; int leader; struct tty_struct *tty; struct autogroup *autogroup; cputime_t utime, stime, cutime, cstime; cputime_t gtime; cputime_t cgtime; cputime_t prev_utime, prev_stime; unsigned long nvcsw, nivcsw, cnvcsw, cnivcsw; unsigned long min_flt, maj_flt, cmin_flt, cmaj_flt; unsigned long inblock, oublock, cinblock, coublock; unsigned long maxrss, cmaxrss; struct task_io_accounting ioac; unsigned long long sum_sched_runtime; struct rlimit rlim[RLIM_NLIMITS]; struct pacct_struct pacct; struct taskstats *stats; unsigned audit_tty; struct tty_audit_buf *tty_audit_buf; struct rw_semaphore group_rwsem; int oom_adj; int oom_score_adj; int oom_score_adj_min; struct mutex cred_guard_mutex; };
	++ struct signal_struct { atomic_t sigcnt; atomic_t live; int nr_threads; wait_queue_head_t wait_chldexit; struct task_struct *curr_target; struct sigpending shared_pending; int group_exit_code; int notify_count; struct task_struct *group_exit_task; int group_stop_count; unsigned int flags; unsigned int is_child_subreaper:1; unsigned int has_child_subreaper:1; struct list_head posix_timers; struct hrtimer real_timer; struct pid *leader_pid; ktime_t it_real_incr; struct cpu_itimer it[2]; struct thread_group_cputimer cputimer; struct task_cputime cputime_expires; struct list_head cpu_timers[3]; struct pid *tty_old_pgrp; int leader; struct tty_struct *tty; struct autogroup *autogroup; cputime_t utime, stime, cutime, cstime; cputime_t gtime; cputime_t cgtime; struct cputime prev_cputime; unsigned long nvcsw, nivcsw, cnvcsw, cnivcsw; unsigned long min_flt, maj_flt, cmin_flt, cmaj_flt; unsigned long inblock, oublock, cinblock, coublock; unsigned long maxrss, cmaxrss; struct task_io_accounting ioac; unsigned long long sum_sched_runtime; struct rlimit rlim[RLIM_NLIMITS]; struct pacct_struct pacct; struct taskstats *stats; unsigned audit_tty; struct tty_audit_buf *tty_audit_buf; struct rw_semaphore group_rwsem; oom_flags_t oom_flags; short oom_score_adj; short oom_score_adj_min; struct mutex cred_guard_mutex; };


__ARCH_WANT_UNLOCKED_CTXSW 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- # define __ARCH_WANT_UNLOCKED_CTXSW


SD_PREFER_LOCAL 	( diff_type: Del type: macro file: include/linux/sched.h )
	-- #define SD_PREFER_LOCAL 0x0040


sched_class 	( diff_type: Mod type: struct file: include/linux/sched.h )
	-- struct sched_class { const struct sched_class *next; void (*enqueue_task) (struct rq *rq, struct task_struct *p, int flags); void (*dequeue_task) (struct rq *rq, struct task_struct *p, int flags); void (*yield_task) (struct rq *rq); bool (*yield_to_task) (struct rq *rq, struct task_struct *p, bool preempt); void (*check_preempt_curr) (struct rq *rq, struct task_struct *p, int flags); struct task_struct * (*pick_next_task) (struct rq *rq); void (*put_prev_task) (struct rq *rq, struct task_struct *p); int (*select_task_rq)(struct task_struct *p, int sd_flag, int flags); void (*pre_schedule) (struct rq *this_rq, struct task_struct *task); void (*post_schedule) (struct rq *this_rq); void (*task_waking) (struct task_struct *task); void (*task_woken) (struct rq *this_rq, struct task_struct *task); void (*set_cpus_allowed)(struct task_struct *p,const struct cpumask *newmask); void (*rq_online)(struct rq *rq); void (*rq_offline)(struct rq *rq); void (*set_curr_task) (struct rq *rq); void (*task_tick) (struct rq *rq, struct task_struct *p, int queued); void (*task_fork) (struct task_struct *p); void (*switched_from) (struct rq *this_rq, struct task_struct *task); void (*switched_to) (struct rq *this_rq, struct task_struct *task); void (*prio_changed) (struct rq *this_rq, struct task_struct *task,int oldprio); unsigned int (*get_rr_interval) (struct rq *rq,struct task_struct *task); void (*task_move_group) (struct task_struct *p, int on_rq); };
	++ struct sched_class { const struct sched_class *next; void (*enqueue_task) (struct rq *rq, struct task_struct *p, int flags); void (*dequeue_task) (struct rq *rq, struct task_struct *p, int flags); void (*yield_task) (struct rq *rq); bool (*yield_to_task) (struct rq *rq, struct task_struct *p, bool preempt); void (*check_preempt_curr) (struct rq *rq, struct task_struct *p, int flags); struct task_struct * (*pick_next_task) (struct rq *rq); void (*put_prev_task) (struct rq *rq, struct task_struct *p); int (*select_task_rq)(struct task_struct *p, int sd_flag, int flags); void (*migrate_task_rq)(struct task_struct *p, int next_cpu); void (*pre_schedule) (struct rq *this_rq, struct task_struct *task); void (*post_schedule) (struct rq *this_rq); void (*task_waking) (struct task_struct *task); void (*task_woken) (struct rq *this_rq, struct task_struct *task); void (*set_cpus_allowed)(struct task_struct *p,const struct cpumask *newmask); void (*rq_online)(struct rq *rq); void (*rq_offline)(struct rq *rq); void (*set_curr_task) (struct rq *rq); void (*task_tick) (struct rq *rq, struct task_struct *p, int queued); void (*task_fork) (struct task_struct *p); void (*switched_from) (struct rq *this_rq, struct task_struct *task); void (*switched_to) (struct rq *this_rq, struct task_struct *task); void (*prio_changed) (struct rq *this_rq, struct task_struct *task,int oldprio); unsigned int (*get_rr_interval) (struct rq *rq,struct task_struct *task); void (*task_move_group) (struct task_struct *p, int on_rq); };


sched_entity 	( diff_type: Mod type: struct file: include/linux/sched.h )
	-- struct sched_entity { struct load_weight load; struct rb_node run_node; struct list_head group_node; unsigned int on_rq; u64 exec_start; u64 sum_exec_runtime; u64 vruntime; u64 prev_sum_exec_runtime; u64 nr_migrations; struct sched_statistics statistics; struct sched_entity *parent; struct cfs_rq *cfs_rq; struct cfs_rq *my_q; };
	++ struct sched_entity { struct load_weight load; struct rb_node run_node; struct list_head group_node; unsigned int on_rq; u64 exec_start; u64 sum_exec_runtime; u64 vruntime; u64 prev_sum_exec_runtime; u64 nr_migrations; struct sched_statistics statistics; struct sched_entity *parent; struct cfs_rq *cfs_rq; struct cfs_rq *my_q; struct sched_avg avg; };


task_struct 	( diff_type: Mod type: struct file: include/linux/sched.h )
	-- struct task_struct { volatile long state; void *stack; atomic_t usage; unsigned int flags; unsigned int ptrace; struct llist_node wake_entry; int on_cpu; int on_rq; int prio, static_prio, normal_prio; unsigned int rt_priority; const struct sched_class *sched_class; struct sched_entity se; struct sched_rt_entity rt; struct task_group *sched_task_group; struct hlist_head preempt_notifiers; unsigned char fpu_counter; unsigned int btrace_seq; unsigned int policy; int nr_cpus_allowed; cpumask_t cpus_allowed; int rcu_read_lock_nesting; char rcu_read_unlock_special; struct list_head rcu_node_entry; struct rcu_node *rcu_blocked_node; struct rt_mutex *rcu_boost_mutex; struct sched_info sched_info; struct list_head tasks; struct plist_node pushable_tasks; struct mm_struct *mm, *active_mm; unsigned brk_randomized:1; struct task_rss_stat rss_stat; int exit_state; int exit_code, exit_signal; int pdeath_signal; unsigned int jobctl; unsigned int personality; unsigned did_exec:1; unsigned in_execve:1; unsigned in_iowait:1; unsigned no_new_privs:1; unsigned sched_reset_on_fork:1; unsigned sched_contributes_to_load:1; pid_t pid; pid_t tgid; unsigned long stack_canary; struct task_struct __rcu *real_parent; struct task_struct __rcu *parent; struct list_head children; struct list_head sibling; struct task_struct *group_leader; struct list_head ptraced; struct list_head ptrace_entry; struct pid_link pids[PIDTYPE_MAX]; struct list_head thread_group; struct completion *vfork_done; int __user *set_child_tid; int __user *clear_child_tid; cputime_t utime, stime, utimescaled, stimescaled; cputime_t gtime; cputime_t prev_utime, prev_stime; unsigned long nvcsw, nivcsw; struct timespec start_time; struct timespec real_start_time; unsigned long min_flt, maj_flt; struct task_cputime cputime_expires; struct list_head cpu_timers[3]; const struct cred __rcu *real_cred; const struct cred __rcu *cred; char comm[TASK_COMM_LEN]; int link_count, total_link_count; struct sysv_sem sysvsem; unsigned long last_switch_count; struct thread_struct thread; struct fs_struct *fs; struct files_struct *files; struct nsproxy *nsproxy; struct signal_struct *signal; struct sighand_struct *sighand; sigset_t blocked, real_blocked; sigset_t saved_sigmask; struct sigpending pending; unsigned long sas_ss_sp; size_t sas_ss_size; int (*notifier)(void *priv); void *notifier_data; sigset_t *notifier_mask; struct hlist_head task_works; struct audit_context *audit_context; uid_t loginuid; unsigned int sessionid; struct seccomp seccomp; u32 parent_exec_id; u32 self_exec_id; spinlock_t alloc_lock; raw_spinlock_t pi_lock; struct plist_head pi_waiters; struct rt_mutex_waiter *pi_blocked_on; struct mutex_waiter *blocked_on; unsigned int irq_events; unsigned long hardirq_enable_ip; unsigned long hardirq_disable_ip; unsigned int hardirq_enable_event; unsigned int hardirq_disable_event; int hardirqs_enabled; int hardirq_context; unsigned long softirq_disable_ip; unsigned long softirq_enable_ip; unsigned int softirq_disable_event; unsigned int softirq_enable_event; int softirqs_enabled; int softirq_context; # define MAX_LOCK_DEPTH 48UL u64 curr_chain_key; int lockdep_depth; unsigned int lockdep_recursion; struct held_lock held_locks[MAX_LOCK_DEPTH]; gfp_t lockdep_reclaim_gfp; void *journal_info; struct bio_list *bio_list; struct blk_plug *plug; struct reclaim_state *reclaim_state; struct backing_dev_info *backing_dev_info; struct io_context *io_context; unsigned long ptrace_message; siginfo_t *last_siginfo; struct task_io_accounting ioac; u64 acct_rss_mem1; u64 acct_vm_mem1; cputime_t acct_timexpd; nodemask_t mems_allowed; seqcount_t mems_allowed_seq; int cpuset_mem_spread_rotor; int cpuset_slab_spread_rotor; struct css_set __rcu *cgroups; struct list_head cg_list; struct robust_list_head __user *robust_list; struct compat_robust_list_head __user *compat_robust_list; struct list_head pi_state_list; struct futex_pi_state *pi_state_cache; struct perf_event_context *perf_event_ctxp[perf_nr_task_contexts]; struct mutex perf_event_mutex; struct list_head perf_event_list; struct mempolicy *mempolicy; short il_next; short pref_node_fork; struct rcu_head rcu; struct pipe_inode_info *splice_pipe; struct task_delay_info *delays; int make_it_fail; int nr_dirtied; int nr_dirtied_pause; unsigned long dirty_paused_when; int latency_record_count; struct latency_record latency_record[LT_SAVECOUNT]; unsigned long timer_slack_ns; unsigned long default_timer_slack_ns; struct list_head *scm_work_list; int curr_ret_stack; struct ftrace_ret_stack *ret_stack; unsigned long long ftrace_timestamp; atomic_t trace_overrun; atomic_t tracing_graph_pause; unsigned long trace; unsigned long trace_recursion; struct memcg_batch_info { int do_batch; struct mem_cgroup *memcg; unsigned long nr_pages; unsigned long memsw_nr_pages; } memcg_batch; atomic_t ptrace_bp_refcnt; struct uprobe_task *utask; int uprobe_srcu_id; };
	++ struct task_struct { volatile long state; void *stack; atomic_t usage; unsigned int flags; unsigned int ptrace; struct llist_node wake_entry; int on_cpu; int on_rq; int prio, static_prio, normal_prio; unsigned int rt_priority; const struct sched_class *sched_class; struct sched_entity se; struct sched_rt_entity rt; struct task_group *sched_task_group; struct hlist_head preempt_notifiers; unsigned char fpu_counter; unsigned int btrace_seq; unsigned int policy; int nr_cpus_allowed; cpumask_t cpus_allowed; int rcu_read_lock_nesting; char rcu_read_unlock_special; struct list_head rcu_node_entry; struct rcu_node *rcu_blocked_node; struct rt_mutex *rcu_boost_mutex; struct sched_info sched_info; struct list_head tasks; struct plist_node pushable_tasks; struct mm_struct *mm, *active_mm; unsigned brk_randomized:1; struct task_rss_stat rss_stat; int exit_state; int exit_code, exit_signal; int pdeath_signal; unsigned int jobctl; unsigned int personality; unsigned did_exec:1; unsigned in_execve:1; unsigned in_iowait:1; unsigned no_new_privs:1; unsigned sched_reset_on_fork:1; unsigned sched_contributes_to_load:1; pid_t pid; pid_t tgid; unsigned long stack_canary; struct task_struct __rcu *real_parent; struct task_struct __rcu *parent; struct list_head children; struct list_head sibling; struct task_struct *group_leader; struct list_head ptraced; struct list_head ptrace_entry; struct pid_link pids[PIDTYPE_MAX]; struct list_head thread_group; struct completion *vfork_done; int __user *set_child_tid; int __user *clear_child_tid; cputime_t utime, stime, utimescaled, stimescaled; cputime_t gtime; struct cputime prev_cputime; unsigned long nvcsw, nivcsw; struct timespec start_time; struct timespec real_start_time; unsigned long min_flt, maj_flt; struct task_cputime cputime_expires; struct list_head cpu_timers[3]; const struct cred __rcu *real_cred; const struct cred __rcu *cred; char comm[TASK_COMM_LEN]; int link_count, total_link_count; struct sysv_sem sysvsem; unsigned long last_switch_count; struct thread_struct thread; struct fs_struct *fs; struct files_struct *files; struct nsproxy *nsproxy; struct signal_struct *signal; struct sighand_struct *sighand; sigset_t blocked, real_blocked; sigset_t saved_sigmask; struct sigpending pending; unsigned long sas_ss_sp; size_t sas_ss_size; int (*notifier)(void *priv); void *notifier_data; sigset_t *notifier_mask; struct callback_head *task_works; struct audit_context *audit_context; kuid_t loginuid; unsigned int sessionid; struct seccomp seccomp; u32 parent_exec_id; u32 self_exec_id; spinlock_t alloc_lock; raw_spinlock_t pi_lock; struct plist_head pi_waiters; struct rt_mutex_waiter *pi_blocked_on; struct mutex_waiter *blocked_on; unsigned int irq_events; unsigned long hardirq_enable_ip; unsigned long hardirq_disable_ip; unsigned int hardirq_enable_event; unsigned int hardirq_disable_event; int hardirqs_enabled; int hardirq_context; unsigned long softirq_disable_ip; unsigned long softirq_enable_ip; unsigned int softirq_disable_event; unsigned int softirq_enable_event; int softirqs_enabled; int softirq_context; # define MAX_LOCK_DEPTH 48UL u64 curr_chain_key; int lockdep_depth; unsigned int lockdep_recursion; struct held_lock held_locks[MAX_LOCK_DEPTH]; gfp_t lockdep_reclaim_gfp; void *journal_info; struct bio_list *bio_list; struct blk_plug *plug; struct reclaim_state *reclaim_state; struct backing_dev_info *backing_dev_info; struct io_context *io_context; unsigned long ptrace_message; siginfo_t *last_siginfo; struct task_io_accounting ioac; u64 acct_rss_mem1; u64 acct_vm_mem1; cputime_t acct_timexpd; nodemask_t mems_allowed; seqcount_t mems_allowed_seq; int cpuset_mem_spread_rotor; int cpuset_slab_spread_rotor; struct css_set __rcu *cgroups; struct list_head cg_list; struct robust_list_head __user *robust_list; struct compat_robust_list_head __user *compat_robust_list; struct list_head pi_state_list; struct futex_pi_state *pi_state_cache; struct perf_event_context *perf_event_ctxp[perf_nr_task_contexts]; struct mutex perf_event_mutex; struct list_head perf_event_list; struct mempolicy *mempolicy; short il_next; short pref_node_fork; int numa_scan_seq; int numa_migrate_seq; unsigned int numa_scan_period; u64 node_stamp; struct callback_head numa_work; struct rcu_head rcu; struct pipe_inode_info *splice_pipe; struct page_frag task_frag; struct task_delay_info *delays; int make_it_fail; int nr_dirtied; int nr_dirtied_pause; unsigned long dirty_paused_when; int latency_record_count; struct latency_record latency_record[LT_SAVECOUNT]; unsigned long timer_slack_ns; unsigned long default_timer_slack_ns; int curr_ret_stack; struct ftrace_ret_stack *ret_stack; unsigned long long ftrace_timestamp; atomic_t trace_overrun; atomic_t tracing_graph_pause; unsigned long trace; unsigned long trace_recursion; struct memcg_batch_info { int do_batch; struct mem_cgroup *memcg; unsigned long nr_pages; unsigned long memsw_nr_pages; } memcg_batch; unsigned int memcg_kmem_skip_account; atomic_t ptrace_bp_refcnt; struct uprobe_task *utask; };


is_container_init 	( diff_type: Del type: prototype file: include/linux/sched.h )
	-- extern int is_container_init(struct task_struct *tsk);


task_times 	( diff_type: Del type: prototype file: include/linux/sched.h )
	-- extern void task_times(struct task_struct *p,cputime_t *ut,cputime_t *st);


thread_group_times 	( diff_type: Del type: prototype file: include/linux/sched.h )
	-- extern void thread_group_times(struct task_struct *p,cputime_t *ut,cputime_t *st);


copy_thread 	( diff_type: Mod type: prototype file: include/linux/sched.h )
	-- extern int copy_thread(unsigned long,unsigned long,unsigned long,struct task_struct *, struct pt_regs *);
	++ extern int copy_thread(unsigned long,unsigned long,unsigned long,struct task_struct *);


daemonize 	( diff_type: Del type: prototype file: include/linux/sched.h )
	-- extern void daemonize(const char *,...);


do_execve 	( diff_type: Mod type: prototype file: include/linux/sched.h )
	-- extern int do_execve(const char *,const char __user * const __user *,const char __user * const __user *, struct pt_regs *);
	++ extern int do_execve(const char *,const char __user * const __user *,const char __user * const __user *);


do_fork 	( diff_type: Mod type: prototype file: include/linux/sched.h )
	-- extern long do_fork(unsigned long,unsigned long,struct pt_regs *,unsigned long,int __user *,int __user *);
	++ extern long do_fork(unsigned long,unsigned long,unsigned long,int __user *,int __user *);


signal_wake_up 	( diff_type: Mod type: prototype-->function file: include/linux/sched.h )
	-- extern void signal_wake_up(struct task_struct *t,int resume_stopped);
	++ static inline void signal_wake_up(struct task_struct *t,bool resume)


rlimit 	( diff_type: Mov type: struct file: include/linux/resource.h )
	-- include/uapi/linux/resource.h
	++ struct rlimit { unsigned long rlim_cur; unsigned long rlim_max; };


kmem_cache_size 	( diff_type: Mod type: prototype-->function file: include/linux/slab.h )
	-- unsigned int kmem_cache_size(struct kmem_cache *);
	++ static inline unsigned int kmem_cache_size(struct kmem_cache *s)


IRQF_SAMPLE_RANDOM 	( diff_type: Del type: macro file: include/linux/interrupt.h )
	-- #define IRQF_SAMPLE_RANDOM 0x00000040


irq_run_affinity_notifiers 	( diff_type: Del type: function file: include/linux/interrupt.h )
	-- static inline void irq_run_affinity_notifiers(void)


PCI_DEVFN 	( diff_type: Mov type: macro file: include/linux/pci.h )
	-- include/uapi/linux/pci.h
	++ #define PCI_DEVFN(slot,func) ((((slot) & 0x1f) << 3) | ((func) & 0x07))


PCI_SLOT 	( diff_type: Mov type: macro file: include/linux/pci.h )
	-- include/uapi/linux/pci.h
	++ #define PCI_SLOT(devfn) (((devfn) >> 3) & 0x1f)


PCI_FUNC 	( diff_type: Mov type: macro file: include/linux/pci.h )
	-- include/uapi/linux/pci.h
	++ #define PCI_FUNC(devfn) ((devfn) & 0x07)


PCIIOC_BASE 	( diff_type: Mov type: macro file: include/linux/pci.h )
	-- include/uapi/linux/pci.h
	++ #define PCIIOC_BASE ('P' << 24 | 'C' << 16 | 'I' << 8)


PCIIOC_CONTROLLER 	( diff_type: Mov type: macro file: include/linux/pci.h )
	-- include/uapi/linux/pci.h
	++ #define PCIIOC_CONTROLLER (PCIIOC_BASE | 0x00)


PCIIOC_MMAP_IS_IO 	( diff_type: Mov type: macro file: include/linux/pci.h )
	-- include/uapi/linux/pci.h
	++ #define PCIIOC_MMAP_IS_IO (PCIIOC_BASE | 0x01)


PCIIOC_MMAP_IS_MEM 	( diff_type: Mov type: macro file: include/linux/pci.h )
	-- include/uapi/linux/pci.h
	++ #define PCIIOC_MMAP_IS_MEM (PCIIOC_BASE | 0x02)


PCIIOC_WRITE_COMBINE 	( diff_type: Mov type: macro file: include/linux/pci.h )
	-- include/uapi/linux/pci.h
	++ #define PCIIOC_WRITE_COMBINE (PCIIOC_BASE | 0x03)


pci_dev 	( diff_type: Mod type: struct file: include/linux/pci.h )
	-- struct pci_dev { struct list_head bus_list; struct pci_bus *bus; struct pci_bus *subordinate; void *sysdata; struct proc_dir_entry *procent; struct pci_slot *slot; unsigned int devfn; unsigned short vendor; unsigned short device; unsigned short subsystem_vendor; unsigned short subsystem_device; u8 revision; u8 hdr_type; u8 pcie_cap; u8 pcie_type:4; u8 pcie_mpss:3; u8 rom_base_reg; u8 pin; struct pci_driver *driver; u64 dma_mask; struct device_dma_parameters dma_parms; pci_power_t current_state; int pm_cap; unsigned int pme_support:5; unsigned int pme_interrupt:1; unsigned int pme_poll:1; unsigned int d1_support:1; unsigned int d2_support:1; unsigned int no_d1d2:1; unsigned int mmio_always_on:1; unsigned int wakeup_prepared:1; unsigned int d3_delay; struct pcie_link_state *link_state; pci_channel_state_t error_state; struct device dev; int cfg_size; unsigned int irq; struct resource resource[DEVICE_COUNT_RESOURCE]; unsigned int transparent:1; unsigned int multifunction:1; unsigned int is_added:1; unsigned int is_busmaster:1; unsigned int no_msi:1; unsigned int block_cfg_access:1; unsigned int broken_parity_status:1; unsigned int irq_reroute_variant:2; unsigned int msi_enabled:1; unsigned int msix_enabled:1; unsigned int ari_enabled:1; unsigned int is_managed:1; unsigned int is_pcie:1; unsigned int needs_freset:1; unsigned int state_saved:1; unsigned int is_physfn:1; unsigned int is_virtfn:1; unsigned int reset_fn:1; unsigned int is_hotplug_bridge:1; unsigned int __aer_firmware_first_valid:1; unsigned int __aer_firmware_first:1; pci_dev_flags_t dev_flags; atomic_t enable_cnt; u32 saved_config_space[16]; struct hlist_head saved_cap_space; struct bin_attribute *rom_attr; int rom_attr_enabled; struct bin_attribute *res_attr[DEVICE_COUNT_RESOURCE]; struct bin_attribute *res_attr_wc[DEVICE_COUNT_RESOURCE]; struct list_head msi_list; struct kset *msi_kset; struct pci_vpd *vpd; struct pci_sriov *sriov; struct pci_dev *physfn; }; struct pci_ats *ats; };
	++ struct pci_dev { struct list_head bus_list; struct pci_bus *bus; struct pci_bus *subordinate; void *sysdata; struct proc_dir_entry *procent; struct pci_slot *slot; unsigned int devfn; unsigned short vendor; unsigned short device; unsigned short subsystem_vendor; unsigned short subsystem_device; u8 revision; u8 hdr_type; u8 pcie_cap; u8 pcie_mpss:3; u8 rom_base_reg; u8 pin; u16 pcie_flags_reg; struct pci_driver *driver; u64 dma_mask; struct device_dma_parameters dma_parms; pci_power_t current_state; int pm_cap; unsigned int pme_support:5; unsigned int pme_interrupt:1; unsigned int pme_poll:1; unsigned int d1_support:1; unsigned int d2_support:1; unsigned int no_d1d2:1; unsigned int no_d3cold:1; unsigned int d3cold_allowed:1; unsigned int mmio_always_on:1; unsigned int wakeup_prepared:1; unsigned int runtime_d3cold:1; unsigned int d3_delay; unsigned int d3cold_delay; struct pcie_link_state *link_state; pci_channel_state_t error_state; struct device dev; int cfg_size; unsigned int irq; struct resource resource[DEVICE_COUNT_RESOURCE]; unsigned int transparent:1; unsigned int multifunction:1; unsigned int is_added:1; unsigned int is_busmaster:1; unsigned int no_msi:1; unsigned int block_cfg_access:1; unsigned int broken_parity_status:1; unsigned int irq_reroute_variant:2; unsigned int msi_enabled:1; unsigned int msix_enabled:1; unsigned int ari_enabled:1; unsigned int is_managed:1; unsigned int is_pcie:1; unsigned int needs_freset:1; unsigned int state_saved:1; unsigned int is_physfn:1; unsigned int is_virtfn:1; unsigned int reset_fn:1; unsigned int is_hotplug_bridge:1; unsigned int __aer_firmware_first_valid:1; unsigned int __aer_firmware_first:1; unsigned int broken_intx_masking:1; unsigned int io_window_1k:1; pci_dev_flags_t dev_flags; atomic_t enable_cnt; u32 saved_config_space[16]; struct hlist_head saved_cap_space; struct bin_attribute *rom_attr; int rom_attr_enabled; struct bin_attribute *res_attr[DEVICE_COUNT_RESOURCE]; struct bin_attribute *res_attr_wc[DEVICE_COUNT_RESOURCE]; struct list_head msi_list; struct kset *msi_kset; struct pci_vpd *vpd; struct pci_sriov *sriov; struct pci_dev *physfn; }; struct pci_ats *ats; phys_addr_t rom; size_t romlen; };


pci_dev_b 	( diff_type: Del type: macro file: include/linux/pci.h )
	-- #define pci_dev_b(n) list_entry(n,struct pci_dev,bus_list)


pci_bus 	( diff_type: Mod type: struct file: include/linux/pci.h )
	-- struct pci_bus { struct list_head node; struct pci_bus *parent; struct list_head children; struct list_head devices; struct pci_dev *self; struct list_head slots; struct resource *resource[PCI_BRIDGE_RESOURCE_NUM]; struct list_head resources; struct pci_ops *ops; void *sysdata; struct proc_dir_entry *procdir; unsigned char number; unsigned char primary; unsigned char secondary; unsigned char subordinate; unsigned char max_bus_speed; unsigned char cur_bus_speed; char name[48]; unsigned short bridge_ctl; pci_bus_flags_t bus_flags; struct device *bridge; struct device dev; struct bin_attribute *legacy_io; struct bin_attribute *legacy_mem; unsigned int is_added:1; };
	++ struct pci_bus { struct list_head node; struct pci_bus *parent; struct list_head children; struct list_head devices; struct pci_dev *self; struct list_head slots; struct resource *resource[PCI_BRIDGE_RESOURCE_NUM]; struct list_head resources; struct resource busn_res; struct pci_ops *ops; void *sysdata; struct proc_dir_entry *procdir; unsigned char number; unsigned char primary; unsigned char max_bus_speed; unsigned char cur_bus_speed; char name[48]; unsigned short bridge_ctl; pci_bus_flags_t bus_flags; struct device *bridge; struct device dev; struct bin_attribute *legacy_io; struct bin_attribute *legacy_mem; unsigned int is_added:1; };


pci_ers_result 	( diff_type: Mod type: enum file: include/linux/pci.h )
	-- enum pci_ers_result { PCI_ERS_RESULT_NONE = (__force pci_ers_result_t) 1, PCI_ERS_RESULT_CAN_RECOVER = (__force pci_ers_result_t) 2, PCI_ERS_RESULT_NEED_RESET = (__force pci_ers_result_t) 3, PCI_ERS_RESULT_DISCONNECT = (__force pci_ers_result_t) 4, PCI_ERS_RESULT_RECOVERED = (__force pci_ers_result_t) 5, };
	++ enum pci_ers_result { PCI_ERS_RESULT_NONE = (__force pci_ers_result_t) 1, PCI_ERS_RESULT_CAN_RECOVER = (__force pci_ers_result_t) 2, PCI_ERS_RESULT_NEED_RESET = (__force pci_ers_result_t) 3, PCI_ERS_RESULT_DISCONNECT = (__force pci_ers_result_t) 4, PCI_ERS_RESULT_RECOVERED = (__force pci_ers_result_t) 5, PCI_ERS_RESULT_NO_AER_DRIVER = (__force pci_ers_result_t) 6, };


pci_driver 	( diff_type: Mod type: struct file: include/linux/pci.h )
	-- struct pci_driver { struct list_head node; const char *name; const struct pci_device_id *id_table; int (*probe) (struct pci_dev *dev, const struct pci_device_id *id); void (*remove) (struct pci_dev *dev); int (*suspend) (struct pci_dev *dev, pm_message_t state); int (*suspend_late) (struct pci_dev *dev, pm_message_t state); int (*resume_early) (struct pci_dev *dev); int (*resume) (struct pci_dev *dev); void (*shutdown) (struct pci_dev *dev); struct pci_error_handlers *err_handler; struct device_driver driver; struct pci_dynids dynids; };
	++ struct pci_driver { struct list_head node; const char *name; const struct pci_device_id *id_table; int (*probe) (struct pci_dev *dev, const struct pci_device_id *id); void (*remove) (struct pci_dev *dev); int (*suspend) (struct pci_dev *dev, pm_message_t state); int (*suspend_late) (struct pci_dev *dev, pm_message_t state); int (*resume_early) (struct pci_dev *dev); int (*resume) (struct pci_dev *dev); void (*shutdown) (struct pci_dev *dev); int (*sriov_configure) (struct pci_dev *dev, int num_vfs); const struct pci_error_handlers *err_handler; struct device_driver driver; struct pci_dynids dynids; };


DEFINE_PCI_DEVICE_TABLE 	( diff_type: Mod type: macro file: include/linux/pci.h )
	-- #define DEFINE_PCI_DEVICE_TABLE(_table) const struct pci_device_id _table[] __devinitconst
	++ #define DEFINE_PCI_DEVICE_TABLE(_table) const struct pci_device_id _table[]


pci_scan_root_bus 	( diff_type: Mod type: prototype file: include/linux/pci.h )
	-- struct pci_bus * __devinit pci_scan_root_bus(struct device *parent,int bus,struct pci_ops *ops, void *sysdata,struct list_head *resources);
	++ struct pci_bus *pci_scan_root_bus(struct device *parent,int bus,struct pci_ops *ops, void *sysdata,struct list_head *resources);


pci_dev_get 	( diff_type: Mod type: prototype-->function file: include/linux/pci.h )
	-- extern struct pci_dev *pci_dev_get(struct pci_dev *dev);
	++ static inline struct pci_dev *pci_dev_get(struct pci_dev *dev)


__pci_remove_bus_device 	( diff_type: Del type: prototype file: include/linux/pci.h )
	-- extern void __pci_remove_bus_device(struct pci_dev *dev);


pci_stop_bus_device 	( diff_type: Del type: prototype file: include/linux/pci.h )
	-- extern void pci_stop_bus_device(struct pci_dev *dev);


pci_bus_find_ext_capability 	( diff_type: Del type: prototype file: include/linux/pci.h )
	-- int pci_bus_find_ext_capability(struct pci_bus *bus,unsigned int devfn,int cap);


pci_ltr_supported 	( diff_type: Del type: prototype file: include/linux/pci.h )
	-- bool pci_ltr_supported(struct pci_dev *dev);


pci_stop_and_remove_behind_bridge 	( diff_type: Del type: prototype file: include/linux/pci.h )
	-- void pci_stop_and_remove_behind_bridge(struct pci_dev *dev);


DECLARE_PCI_FIXUP_SECTION 	( diff_type: Mod type: macro file: include/linux/pci.h )
	-- #define DECLARE_PCI_FIXUP_SECTION(section,name,vendor,device,class, class_shift, hook) static const struct pci_fixup const __pci_fixup_##name __used __attribute__((__section__(#section), aligned((sizeof(void *))))) = { vendor, device, class, class_shift, hook };
	++ #define DECLARE_PCI_FIXUP_SECTION(section,name,vendor,device,class, class_shift, hook) static const struct pci_fixup __pci_fixup_##name __used __attribute__((__section__(#section), aligned((sizeof(void *))))) = { vendor, device, class, class_shift, hook };


pci_ext_cfg_avail 	( diff_type: Mod type: prototype file: include/linux/pci.h )
	-- int pci_ext_cfg_avail(struct pci_dev *dev);
	++ int pci_ext_cfg_avail(void);


__initconst 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define __initconst __section(.init.rodata)
	++ #define __initconst __constsection(.init.rodata)


__refconst 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define __refconst __section(.ref.rodata)
	++ #define __refconst __constsection(.ref.rodata)


__devinit 	( diff_type: Del type: macro file: include/linux/init.h )
	-- #define __devinit __section(.devinit.text) __cold notrace


__devinitdata 	( diff_type: Del type: macro file: include/linux/init.h )
	-- #define __devinitdata __section(.devinit.data)


__devinitconst 	( diff_type: Del type: macro file: include/linux/init.h )
	-- #define __devinitconst __section(.devinit.rodata)


__devexit 	( diff_type: Del type: macro file: include/linux/init.h )
	-- #define __devexit __section(.devexit.text) __exitused __cold notrace


__devexitdata 	( diff_type: Del type: macro file: include/linux/init.h )
	-- #define __devexitdata __section(.devexit.data)


__devexitconst 	( diff_type: Del type: macro file: include/linux/init.h )
	-- #define __devexitconst __section(.devexit.rodata)


__cpuinitconst 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define __cpuinitconst __section(.cpuinit.rodata)
	++ #define __cpuinitconst __constsection(.cpuinit.rodata)


__cpuexitconst 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define __cpuexitconst __section(.cpuexit.rodata)
	++ #define __cpuexitconst __constsection(.cpuexit.rodata)


__meminitconst 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define __meminitconst __section(.meminit.rodata)
	++ #define __meminitconst __constsection(.meminit.rodata)


__memexitconst 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define __memexitconst __section(.memexit.rodata)
	++ #define __memexitconst __constsection(.memexit.rodata)


__DEVINIT 	( diff_type: Del type: macro file: include/linux/init.h )
	-- #define __DEVINIT .section ".devinit.text","ax"


__DEVINITDATA 	( diff_type: Del type: macro file: include/linux/init.h )
	-- #define __DEVINITDATA .section ".devinit.data","aw"


__DEVINITRODATA 	( diff_type: Del type: macro file: include/linux/init.h )
	-- #define __DEVINITRODATA .section ".devinit.rodata","a"


__define_initcall 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define __define_initcall(level,fn,id) static initcall_t __initcall_##fn##id __used __attribute__((__section__(".initcall" level ".init"))) = fn
	++ #define __define_initcall(fn,id) static initcall_t __initcall_##fn##id __used __attribute__((__section__(".initcall" #id ".init"))) = fn


pure_initcall 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define pure_initcall(fn) __define_initcall("0",fn,0)
	++ #define pure_initcall(fn) __define_initcall(fn,0)


core_initcall_sync 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define core_initcall_sync(fn) __define_initcall("1s",fn,1s)
	++ #define core_initcall_sync(fn) __define_initcall(fn,1s)


postcore_initcall_sync 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define postcore_initcall_sync(fn) __define_initcall("2s",fn,2s)
	++ #define postcore_initcall_sync(fn) __define_initcall(fn,2s)


arch_initcall_sync 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define arch_initcall_sync(fn) __define_initcall("3s",fn,3s)
	++ #define arch_initcall_sync(fn) __define_initcall(fn,3s)


subsys_initcall_sync 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define subsys_initcall_sync(fn) __define_initcall("4s",fn,4s)
	++ #define subsys_initcall_sync(fn) __define_initcall(fn,4s)


fs_initcall_sync 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define fs_initcall_sync(fn) __define_initcall("5s",fn,5s)
	++ #define fs_initcall_sync(fn) __define_initcall(fn,5s)


rootfs_initcall 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define rootfs_initcall(fn) __define_initcall("rootfs",fn,rootfs)
	++ #define rootfs_initcall(fn) __define_initcall(fn,rootfs)


device_initcall_sync 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define device_initcall_sync(fn) __define_initcall("6s",fn,6s)
	++ #define device_initcall_sync(fn) __define_initcall(fn,6s)


late_initcall_sync 	( diff_type: Mod type: macro file: include/linux/init.h )
	-- #define late_initcall_sync(fn) __define_initcall("7s",fn,7s)
	++ #define late_initcall_sync(fn) __define_initcall(fn,7s)


__devexit_p 	( diff_type: Del type: macro file: include/linux/init.h )
	-- #define __devexit_p(x) NULL


ethtool_cmd 	( diff_type: All type: struct file: include/linux/ethtool.h-->include/uapi/linux/ethtool.h )
	-- struct ethtool_cmd { __u32 cmd; __u32 supported; __u32 advertising; __u16 speed; __u8 duplex; __u8 port; __u8 phy_address; __u8 transceiver; __u8 autoneg; __u8 mdio_support; __u32 maxtxpkt; __u32 maxrxpkt; __u16 speed_hi; __u8 eth_tp_mdix; __u8 reserved2; __u32 lp_advertising; __u32 reserved[2]; };
	++ struct ethtool_cmd { __u32 cmd; __u32 supported; __u32 advertising; __u16 speed; __u8 duplex; __u8 port; __u8 phy_address; __u8 transceiver; __u8 autoneg; __u8 mdio_support; __u32 maxtxpkt; __u32 maxrxpkt; __u16 speed_hi; __u8 eth_tp_mdix; __u8 eth_tp_mdix_ctrl; __u32 lp_advertising; __u32 reserved[2]; };


ethtool_cmd_speed_set 	( diff_type: Mov type: function file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ static inline void ethtool_cmd_speed_set(struct ethtool_cmd *ep,__u32 speed)


ethtool_cmd_speed 	( diff_type: Mov type: function file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ static inline __u32 ethtool_cmd_speed(const struct ethtool_cmd *ep)


ETH_MDIO_SUPPORTS_C22 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETH_MDIO_SUPPORTS_C22 1


ETH_MDIO_SUPPORTS_C45 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETH_MDIO_SUPPORTS_C45 2


ETHTOOL_FWVERS_LEN 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_FWVERS_LEN 32


ETHTOOL_BUSINFO_LEN 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_BUSINFO_LEN 32


ethtool_drvinfo 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_drvinfo { __u32 cmd; char driver[32]; char version[32]; char fw_version[ETHTOOL_FWVERS_LEN]; char bus_info[ETHTOOL_BUSINFO_LEN]; char reserved1[32]; char reserved2[12]; __u32 n_priv_flags; __u32 n_stats; __u32 testinfo_len; __u32 eedump_len; __u32 regdump_len; };


SOPASS_MAX 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SOPASS_MAX 6


ethtool_wolinfo 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_wolinfo { __u32 cmd; __u32 supported; __u32 wolopts; __u8 sopass[SOPASS_MAX]; };


ethtool_value 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_value { __u32 cmd; __u32 data; };


ethtool_regs 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_regs { __u32 cmd; __u32 version; __u32 len; __u8 data[0]; };


ethtool_eeprom 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_eeprom { __u32 cmd; __u32 magic; __u32 offset; __u32 len; __u8 data[0]; };


ethtool_modinfo 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_modinfo { __u32 cmd; __u32 type; __u32 eeprom_len; __u32 reserved[8]; };


ethtool_coalesce 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_coalesce { __u32 cmd; __u32 rx_coalesce_usecs; __u32 rx_max_coalesced_frames; __u32 rx_coalesce_usecs_irq; __u32 rx_max_coalesced_frames_irq; __u32 tx_coalesce_usecs; __u32 tx_max_coalesced_frames; __u32 tx_coalesce_usecs_irq; __u32 tx_max_coalesced_frames_irq; __u32 stats_block_coalesce_usecs; __u32 use_adaptive_rx_coalesce; __u32 use_adaptive_tx_coalesce; __u32 pkt_rate_low; __u32 rx_coalesce_usecs_low; __u32 rx_max_coalesced_frames_low; __u32 tx_coalesce_usecs_low; __u32 tx_max_coalesced_frames_low; __u32 pkt_rate_high; __u32 rx_coalesce_usecs_high; __u32 rx_max_coalesced_frames_high; __u32 tx_coalesce_usecs_high; __u32 tx_max_coalesced_frames_high; __u32 rate_sample_interval; };


ethtool_ringparam 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_ringparam { __u32 cmd; __u32 rx_max_pending; __u32 rx_mini_max_pending; __u32 rx_jumbo_max_pending; __u32 tx_max_pending; __u32 rx_pending; __u32 rx_mini_pending; __u32 rx_jumbo_pending; __u32 tx_pending; };


ethtool_channels 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_channels { __u32 cmd; __u32 max_rx; __u32 max_tx; __u32 max_other; __u32 max_combined; __u32 rx_count; __u32 tx_count; __u32 other_count; __u32 combined_count; };


ethtool_pauseparam 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_pauseparam { __u32 cmd; __u32 autoneg; __u32 rx_pause; __u32 tx_pause; };


ETH_GSTRING_LEN 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETH_GSTRING_LEN 32


ethtool_stringset 	( diff_type: Mov type: enum file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ enum ethtool_stringset { ETH_SS_TEST = 0, ETH_SS_STATS, ETH_SS_PRIV_FLAGS, ETH_SS_NTUPLE_FILTERS, ETH_SS_FEATURES, };


ethtool_gstrings 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_gstrings { __u32 cmd; __u32 string_set; __u32 len; __u8 data[0]; };


ethtool_sset_info 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_sset_info { __u32 cmd; __u32 reserved; __u64 sset_mask; __u32 data[0]; };


ethtool_test_flags 	( diff_type: Mov type: enum file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ enum ethtool_test_flags { ETH_TEST_FL_OFFLINE = (1 << 0), ETH_TEST_FL_FAILED = (1 << 1), ETH_TEST_FL_EXTERNAL_LB = (1 << 2), ETH_TEST_FL_EXTERNAL_LB_DONE = (1 << 3), };


ethtool_test 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_test { __u32 cmd; __u32 flags; __u32 reserved; __u32 len; __u64 data[0]; };


ethtool_stats 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_stats { __u32 cmd; __u32 n_stats; __u64 data[0]; };


ethtool_perm_addr 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_perm_addr { __u32 cmd; __u32 size; __u8 data[0]; };


ethtool_flags 	( diff_type: Mov type: enum file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ enum ethtool_flags { ETH_FLAG_TXVLAN = (1 << 7), ETH_FLAG_RXVLAN = (1 << 8), ETH_FLAG_LRO = (1 << 15), ETH_FLAG_NTUPLE = (1 << 27), ETH_FLAG_RXHASH = (1 << 28), };


ethtool_tcpip4_spec 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_tcpip4_spec { __be32 ip4src; __be32 ip4dst; __be16 psrc; __be16 pdst; __u8 tos; };


ethtool_ah_espip4_spec 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_ah_espip4_spec { __be32 ip4src; __be32 ip4dst; __be32 spi; __u8 tos; };


ETH_RX_NFC_IP4 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETH_RX_NFC_IP4 1


ethtool_usrip4_spec 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_usrip4_spec { __be32 ip4src; __be32 ip4dst; __be32 l4_4_bytes; __u8 tos; __u8 ip_ver; __u8 proto; };


ethtool_flow_union 	( diff_type: All type: union file: include/linux/ethtool.h-->include/uapi/linux/ethtool.h )
	-- union ethtool_flow_union { struct ethtool_tcpip4_spec tcp_ip4_spec; struct ethtool_tcpip4_spec udp_ip4_spec; struct ethtool_tcpip4_spec sctp_ip4_spec; struct ethtool_ah_espip4_spec ah_ip4_spec; struct ethtool_ah_espip4_spec esp_ip4_spec; struct ethtool_usrip4_spec usr_ip4_spec; struct ethhdr ether_spec; __u8 hdata[60]; };
	++ union ethtool_flow_union { struct ethtool_tcpip4_spec tcp_ip4_spec; struct ethtool_tcpip4_spec udp_ip4_spec; struct ethtool_tcpip4_spec sctp_ip4_spec; struct ethtool_ah_espip4_spec ah_ip4_spec; struct ethtool_ah_espip4_spec esp_ip4_spec; struct ethtool_usrip4_spec usr_ip4_spec; struct ethhdr ether_spec; __u8 hdata[52]; };


ethtool_flow_ext 	( diff_type: All type: struct file: include/linux/ethtool.h-->include/uapi/linux/ethtool.h )
	-- struct ethtool_flow_ext { __be16 vlan_etype; __be16 vlan_tci; __be32 data[2]; };
	++ struct ethtool_flow_ext { __u8 padding[2]; unsigned char h_dest[ETH_ALEN]; __be16 vlan_etype; __be16 vlan_tci; __be32 data[2]; };


ethtool_rx_flow_spec 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_rx_flow_spec { __u32 flow_type; union ethtool_flow_union h_u; struct ethtool_flow_ext h_ext; union ethtool_flow_union m_u; struct ethtool_flow_ext m_ext; __u64 ring_cookie; __u32 location; };


ethtool_rxnfc 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_rxnfc { __u32 cmd; __u32 flow_type; __u64 data; struct ethtool_rx_flow_spec fs; __u32 rule_cnt; __u32 rule_locs[0]; };


ethtool_rxfh_indir 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_rxfh_indir { __u32 cmd; __u32 size; __u32 ring_index[0]; };


ethtool_rx_ntuple_flow_spec 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_rx_ntuple_flow_spec { __u32 flow_type; union { struct ethtool_tcpip4_spec tcp_ip4_spec; struct ethtool_tcpip4_spec udp_ip4_spec; struct ethtool_tcpip4_spec sctp_ip4_spec; struct ethtool_ah_espip4_spec ah_ip4_spec; struct ethtool_ah_espip4_spec esp_ip4_spec; struct ethtool_usrip4_spec usr_ip4_spec; struct ethhdr ether_spec; __u8 hdata[72]; } h_u, m_u; __u16 vlan_tag; __u16 vlan_tag_mask; __u64 data; __u64 data_mask; __s32 action; #define ETHTOOL_RXNTUPLE_ACTION_DROP (-1) #define ETHTOOL_RXNTUPLE_ACTION_CLEAR (-2) };


ethtool_rx_ntuple 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_rx_ntuple { __u32 cmd; struct ethtool_rx_ntuple_flow_spec fs; };


ETHTOOL_FLASH_MAX_FILENAME 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_FLASH_MAX_FILENAME 128


ethtool_flash_op_type 	( diff_type: Mov type: enum file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ enum ethtool_flash_op_type { ETHTOOL_FLASH_ALL_REGIONS = 0, };


ethtool_flash 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_flash { __u32 cmd; __u32 region; char data[ETHTOOL_FLASH_MAX_FILENAME]; };


ETH_FW_DUMP_DISABLE 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETH_FW_DUMP_DISABLE 0


ethtool_dump 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_dump { __u32 cmd; __u32 version; __u32 flag; __u32 len; __u8 data[0]; };


ethtool_get_features_block 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_get_features_block { __u32 available; __u32 requested; __u32 active; __u32 never_changed; };


ethtool_gfeatures 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_gfeatures { __u32 cmd; __u32 size; struct ethtool_get_features_block features[0]; };


ethtool_set_features_block 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_set_features_block { __u32 valid; __u32 requested; };


ethtool_sfeatures 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_sfeatures { __u32 cmd; __u32 size; struct ethtool_set_features_block features[0]; };


ethtool_ts_info 	( diff_type: Mov type: struct file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ struct ethtool_ts_info { __u32 cmd; __u32 so_timestamping; __s32 phc_index; __u32 tx_types; __u32 tx_reserved[3]; __u32 rx_filters; __u32 rx_reserved[3]; };


ethtool_sfeatures_retval_bits 	( diff_type: Mov type: enum file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ enum ethtool_sfeatures_retval_bits { ETHTOOL_F_UNSUPPORTED__BIT, ETHTOOL_F_WISH__BIT, ETHTOOL_F_COMPAT__BIT, };


ETHTOOL_F_UNSUPPORTED 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_F_UNSUPPORTED (1 << ETHTOOL_F_UNSUPPORTED__BIT)


ETHTOOL_F_WISH 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_F_WISH (1 << ETHTOOL_F_WISH__BIT)


ETHTOOL_F_COMPAT 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_F_COMPAT (1 << ETHTOOL_F_COMPAT__BIT)


ethtool_ops 	( diff_type: Mod type: struct file: include/linux/ethtool.h )
	-- struct ethtool_ops { int (*get_settings)(struct net_device *, struct ethtool_cmd *); int (*set_settings)(struct net_device *, struct ethtool_cmd *); void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *); int (*get_regs_len)(struct net_device *); void (*get_regs)(struct net_device *, struct ethtool_regs *, void *); void (*get_wol)(struct net_device *, struct ethtool_wolinfo *); int (*set_wol)(struct net_device *, struct ethtool_wolinfo *); u32 (*get_msglevel)(struct net_device *); void (*set_msglevel)(struct net_device *, u32); int (*nway_reset)(struct net_device *); u32 (*get_link)(struct net_device *); int (*get_eeprom_len)(struct net_device *); int (*get_eeprom)(struct net_device *,struct ethtool_eeprom *, u8 *); int (*set_eeprom)(struct net_device *,struct ethtool_eeprom *, u8 *); int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *); int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *); void (*get_ringparam)(struct net_device *,struct ethtool_ringparam *); int (*set_ringparam)(struct net_device *,struct ethtool_ringparam *); void (*get_pauseparam)(struct net_device *,struct ethtool_pauseparam*); int (*set_pauseparam)(struct net_device *,struct ethtool_pauseparam*); void (*self_test)(struct net_device *, struct ethtool_test *, u64 *); void (*get_strings)(struct net_device *, u32 stringset, u8 *); int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state); void (*get_ethtool_stats)(struct net_device *,struct ethtool_stats *, u64 *); int (*begin)(struct net_device *); void (*complete)(struct net_device *); u32 (*get_priv_flags)(struct net_device *); int (*set_priv_flags)(struct net_device *, u32); int (*get_sset_count)(struct net_device *, int); int (*get_rxnfc)(struct net_device *,struct ethtool_rxnfc *, u32 *rule_locs); int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *); int (*flash_device)(struct net_device *, struct ethtool_flash *); int (*reset)(struct net_device *, u32 *); u32 (*get_rxfh_indir_size)(struct net_device *); int (*get_rxfh_indir)(struct net_device *, u32 *); int (*set_rxfh_indir)(struct net_device *, const u32 *); void (*get_channels)(struct net_device *, struct ethtool_channels *); int (*set_channels)(struct net_device *, struct ethtool_channels *); int (*get_dump_flag)(struct net_device *, struct ethtool_dump *); int (*get_dump_data)(struct net_device *,struct ethtool_dump *, void *); int (*set_dump)(struct net_device *, struct ethtool_dump *); int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *); int (*get_module_info)(struct net_device *,struct ethtool_modinfo *); int (*get_module_eeprom)(struct net_device *,struct ethtool_eeprom *, u8 *); };
	++ struct ethtool_ops { int (*get_settings)(struct net_device *, struct ethtool_cmd *); int (*set_settings)(struct net_device *, struct ethtool_cmd *); void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *); int (*get_regs_len)(struct net_device *); void (*get_regs)(struct net_device *, struct ethtool_regs *, void *); void (*get_wol)(struct net_device *, struct ethtool_wolinfo *); int (*set_wol)(struct net_device *, struct ethtool_wolinfo *); u32 (*get_msglevel)(struct net_device *); void (*set_msglevel)(struct net_device *, u32); int (*nway_reset)(struct net_device *); u32 (*get_link)(struct net_device *); int (*get_eeprom_len)(struct net_device *); int (*get_eeprom)(struct net_device *,struct ethtool_eeprom *, u8 *); int (*set_eeprom)(struct net_device *,struct ethtool_eeprom *, u8 *); int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *); int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *); void (*get_ringparam)(struct net_device *,struct ethtool_ringparam *); int (*set_ringparam)(struct net_device *,struct ethtool_ringparam *); void (*get_pauseparam)(struct net_device *,struct ethtool_pauseparam*); int (*set_pauseparam)(struct net_device *,struct ethtool_pauseparam*); void (*self_test)(struct net_device *, struct ethtool_test *, u64 *); void (*get_strings)(struct net_device *, u32 stringset, u8 *); int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state); void (*get_ethtool_stats)(struct net_device *,struct ethtool_stats *, u64 *); int (*begin)(struct net_device *); void (*complete)(struct net_device *); u32 (*get_priv_flags)(struct net_device *); int (*set_priv_flags)(struct net_device *, u32); int (*get_sset_count)(struct net_device *, int); int (*get_rxnfc)(struct net_device *,struct ethtool_rxnfc *, u32 *rule_locs); int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *); int (*flash_device)(struct net_device *, struct ethtool_flash *); int (*reset)(struct net_device *, u32 *); u32 (*get_rxfh_indir_size)(struct net_device *); int (*get_rxfh_indir)(struct net_device *, u32 *); int (*set_rxfh_indir)(struct net_device *, const u32 *); void (*get_channels)(struct net_device *, struct ethtool_channels *); int (*set_channels)(struct net_device *, struct ethtool_channels *); int (*get_dump_flag)(struct net_device *, struct ethtool_dump *); int (*get_dump_data)(struct net_device *,struct ethtool_dump *, void *); int (*set_dump)(struct net_device *, struct ethtool_dump *); int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *); int (*get_module_info)(struct net_device *,struct ethtool_modinfo *); int (*get_module_eeprom)(struct net_device *,struct ethtool_eeprom *, u8 *); int (*get_eee)(struct net_device *, struct ethtool_eee *); int (*set_eee)(struct net_device *, struct ethtool_eee *); };


ETHTOOL_GSET 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GSET 0x00000001


ETHTOOL_SSET 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_SSET 0x00000002


ETHTOOL_GDRVINFO 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GDRVINFO 0x00000003


ETHTOOL_GREGS 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GREGS 0x00000004


ETHTOOL_GWOL 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GWOL 0x00000005


ETHTOOL_SWOL 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_SWOL 0x00000006


ETHTOOL_GMSGLVL 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GMSGLVL 0x00000007


ETHTOOL_SMSGLVL 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_SMSGLVL 0x00000008


ETHTOOL_NWAY_RST 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_NWAY_RST 0x00000009


ETHTOOL_GLINK 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GLINK 0x0000000a


ETHTOOL_GEEPROM 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GEEPROM 0x0000000b


ETHTOOL_SEEPROM 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_SEEPROM 0x0000000c


ETHTOOL_GCOALESCE 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GCOALESCE 0x0000000e


ETHTOOL_SCOALESCE 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_SCOALESCE 0x0000000f


ETHTOOL_GRINGPARAM 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GRINGPARAM 0x00000010


ETHTOOL_SRINGPARAM 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_SRINGPARAM 0x00000011


ETHTOOL_GPAUSEPARAM 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GPAUSEPARAM 0x00000012


ETHTOOL_SPAUSEPARAM 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_SPAUSEPARAM 0x00000013


ETHTOOL_GRXCSUM 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GRXCSUM 0x00000014


ETHTOOL_SRXCSUM 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_SRXCSUM 0x00000015


ETHTOOL_GTXCSUM 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GTXCSUM 0x00000016


ETHTOOL_STXCSUM 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_STXCSUM 0x00000017


ETHTOOL_GSG 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GSG 0x00000018


ETHTOOL_SSG 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_SSG 0x00000019


ETHTOOL_TEST 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_TEST 0x0000001a


ETHTOOL_GSTRINGS 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GSTRINGS 0x0000001b


ETHTOOL_PHYS_ID 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_PHYS_ID 0x0000001c


ETHTOOL_GSTATS 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GSTATS 0x0000001d


ETHTOOL_GTSO 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GTSO 0x0000001e


ETHTOOL_STSO 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_STSO 0x0000001f


ETHTOOL_GPERMADDR 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GPERMADDR 0x00000020


ETHTOOL_GUFO 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GUFO 0x00000021


ETHTOOL_SUFO 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_SUFO 0x00000022


ETHTOOL_GGSO 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GGSO 0x00000023


ETHTOOL_SGSO 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_SGSO 0x00000024


ETHTOOL_GFLAGS 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GFLAGS 0x00000025


ETHTOOL_SFLAGS 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_SFLAGS 0x00000026


ETHTOOL_GPFLAGS 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GPFLAGS 0x00000027


ETHTOOL_SPFLAGS 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_SPFLAGS 0x00000028


ETHTOOL_GRXFH 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GRXFH 0x00000029


ETHTOOL_SRXFH 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_SRXFH 0x0000002a


ETHTOOL_GGRO 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GGRO 0x0000002b


ETHTOOL_SGRO 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_SGRO 0x0000002c


ETHTOOL_GRXRINGS 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GRXRINGS 0x0000002d


ETHTOOL_GRXCLSRLCNT 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GRXCLSRLCNT 0x0000002e


ETHTOOL_GRXCLSRULE 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GRXCLSRULE 0x0000002f


ETHTOOL_GRXCLSRLALL 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GRXCLSRLALL 0x00000030


ETHTOOL_SRXCLSRLDEL 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_SRXCLSRLDEL 0x00000031


ETHTOOL_SRXCLSRLINS 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_SRXCLSRLINS 0x00000032


ETHTOOL_FLASHDEV 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_FLASHDEV 0x00000033


ETHTOOL_RESET 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_RESET 0x00000034


ETHTOOL_SRXNTUPLE 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_SRXNTUPLE 0x00000035


ETHTOOL_GRXNTUPLE 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GRXNTUPLE 0x00000036


ETHTOOL_GSSET_INFO 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GSSET_INFO 0x00000037


ETHTOOL_GRXFHINDIR 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GRXFHINDIR 0x00000038


ETHTOOL_SRXFHINDIR 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_SRXFHINDIR 0x00000039


ETHTOOL_GFEATURES 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GFEATURES 0x0000003a


ETHTOOL_SFEATURES 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_SFEATURES 0x0000003b


ETHTOOL_GCHANNELS 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GCHANNELS 0x0000003c


ETHTOOL_SCHANNELS 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_SCHANNELS 0x0000003d


ETHTOOL_SET_DUMP 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_SET_DUMP 0x0000003e


ETHTOOL_GET_DUMP_FLAG 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GET_DUMP_FLAG 0x0000003f


ETHTOOL_GET_DUMP_DATA 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GET_DUMP_DATA 0x00000040


ETHTOOL_GET_TS_INFO 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GET_TS_INFO 0x00000041


ETHTOOL_GMODULEINFO 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GMODULEINFO 0x00000042


ETHTOOL_GMODULEEEPROM 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHTOOL_GMODULEEEPROM 0x00000043


SPARC_ETH_GSET 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SPARC_ETH_GSET ETHTOOL_GSET


SPARC_ETH_SSET 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SPARC_ETH_SSET ETHTOOL_SSET


SUPPORTED_10baseT_Half 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SUPPORTED_10baseT_Half (1 << 0)


SUPPORTED_10baseT_Full 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SUPPORTED_10baseT_Full (1 << 1)


SUPPORTED_100baseT_Half 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SUPPORTED_100baseT_Half (1 << 2)


SUPPORTED_100baseT_Full 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SUPPORTED_100baseT_Full (1 << 3)


SUPPORTED_1000baseT_Half 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SUPPORTED_1000baseT_Half (1 << 4)


SUPPORTED_1000baseT_Full 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SUPPORTED_1000baseT_Full (1 << 5)


SUPPORTED_Autoneg 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SUPPORTED_Autoneg (1 << 6)


SUPPORTED_TP 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SUPPORTED_TP (1 << 7)


SUPPORTED_AUI 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SUPPORTED_AUI (1 << 8)


SUPPORTED_MII 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SUPPORTED_MII (1 << 9)


SUPPORTED_FIBRE 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SUPPORTED_FIBRE (1 << 10)


SUPPORTED_BNC 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SUPPORTED_BNC (1 << 11)


SUPPORTED_10000baseT_Full 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SUPPORTED_10000baseT_Full (1 << 12)


SUPPORTED_Pause 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SUPPORTED_Pause (1 << 13)


SUPPORTED_Asym_Pause 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SUPPORTED_Asym_Pause (1 << 14)


SUPPORTED_2500baseX_Full 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SUPPORTED_2500baseX_Full (1 << 15)


SUPPORTED_Backplane 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SUPPORTED_Backplane (1 << 16)


SUPPORTED_1000baseKX_Full 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SUPPORTED_1000baseKX_Full (1 << 17)


SUPPORTED_10000baseKX4_Full 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SUPPORTED_10000baseKX4_Full (1 << 18)


SUPPORTED_10000baseKR_Full 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SUPPORTED_10000baseKR_Full (1 << 19)


SUPPORTED_10000baseR_FEC 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SUPPORTED_10000baseR_FEC (1 << 20)


SUPPORTED_20000baseMLD2_Full 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SUPPORTED_20000baseMLD2_Full (1 << 21)


SUPPORTED_20000baseKR2_Full 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SUPPORTED_20000baseKR2_Full (1 << 22)


ADVERTISED_10baseT_Half 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ADVERTISED_10baseT_Half (1 << 0)


ADVERTISED_10baseT_Full 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ADVERTISED_10baseT_Full (1 << 1)


ADVERTISED_100baseT_Half 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ADVERTISED_100baseT_Half (1 << 2)


ADVERTISED_100baseT_Full 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ADVERTISED_100baseT_Full (1 << 3)


ADVERTISED_1000baseT_Half 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ADVERTISED_1000baseT_Half (1 << 4)


ADVERTISED_1000baseT_Full 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ADVERTISED_1000baseT_Full (1 << 5)


ADVERTISED_Autoneg 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ADVERTISED_Autoneg (1 << 6)


ADVERTISED_TP 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ADVERTISED_TP (1 << 7)


ADVERTISED_AUI 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ADVERTISED_AUI (1 << 8)


ADVERTISED_MII 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ADVERTISED_MII (1 << 9)


ADVERTISED_FIBRE 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ADVERTISED_FIBRE (1 << 10)


ADVERTISED_BNC 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ADVERTISED_BNC (1 << 11)


ADVERTISED_10000baseT_Full 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ADVERTISED_10000baseT_Full (1 << 12)


ADVERTISED_Pause 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ADVERTISED_Pause (1 << 13)


ADVERTISED_Asym_Pause 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ADVERTISED_Asym_Pause (1 << 14)


ADVERTISED_2500baseX_Full 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ADVERTISED_2500baseX_Full (1 << 15)


ADVERTISED_Backplane 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ADVERTISED_Backplane (1 << 16)


ADVERTISED_1000baseKX_Full 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ADVERTISED_1000baseKX_Full (1 << 17)


ADVERTISED_10000baseKX4_Full 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ADVERTISED_10000baseKX4_Full (1 << 18)


ADVERTISED_10000baseKR_Full 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ADVERTISED_10000baseKR_Full (1 << 19)


ADVERTISED_10000baseR_FEC 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ADVERTISED_10000baseR_FEC (1 << 20)


ADVERTISED_20000baseMLD2_Full 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ADVERTISED_20000baseMLD2_Full (1 << 21)


ADVERTISED_20000baseKR2_Full 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ADVERTISED_20000baseKR2_Full (1 << 22)


SPEED_10 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SPEED_10 10


SPEED_100 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SPEED_100 100


SPEED_1000 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SPEED_1000 1000


SPEED_2500 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SPEED_2500 2500


SPEED_10000 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SPEED_10000 10000


SPEED_UNKNOWN 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SPEED_UNKNOWN -1


DUPLEX_HALF 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define DUPLEX_HALF 0x00


DUPLEX_FULL 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define DUPLEX_FULL 0x01


DUPLEX_UNKNOWN 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define DUPLEX_UNKNOWN 0xff


PORT_TP 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define PORT_TP 0x00


PORT_AUI 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define PORT_AUI 0x01


PORT_MII 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define PORT_MII 0x02


PORT_FIBRE 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define PORT_FIBRE 0x03


PORT_BNC 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define PORT_BNC 0x04


PORT_DA 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define PORT_DA 0x05


PORT_NONE 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define PORT_NONE 0xef


PORT_OTHER 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define PORT_OTHER 0xff


XCVR_INTERNAL 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define XCVR_INTERNAL 0x00


XCVR_EXTERNAL 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define XCVR_EXTERNAL 0x01


XCVR_DUMMY1 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define XCVR_DUMMY1 0x02


XCVR_DUMMY2 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define XCVR_DUMMY2 0x03


XCVR_DUMMY3 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define XCVR_DUMMY3 0x04


AUTONEG_DISABLE 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define AUTONEG_DISABLE 0x00


AUTONEG_ENABLE 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define AUTONEG_ENABLE 0x01


ETH_TP_MDI_INVALID 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETH_TP_MDI_INVALID 0x00


ETH_TP_MDI 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETH_TP_MDI 0x01


ETH_TP_MDI_X 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETH_TP_MDI_X 0x02


WAKE_PHY 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define WAKE_PHY (1 << 0)


WAKE_UCAST 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define WAKE_UCAST (1 << 1)


WAKE_MCAST 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define WAKE_MCAST (1 << 2)


WAKE_BCAST 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define WAKE_BCAST (1 << 3)


WAKE_ARP 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define WAKE_ARP (1 << 4)


WAKE_MAGIC 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define WAKE_MAGIC (1 << 5)


WAKE_MAGICSECURE 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define WAKE_MAGICSECURE (1 << 6)


TCP_V4_FLOW 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define TCP_V4_FLOW 0x01


UDP_V4_FLOW 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define UDP_V4_FLOW 0x02


SCTP_V4_FLOW 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SCTP_V4_FLOW 0x03


AH_ESP_V4_FLOW 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define AH_ESP_V4_FLOW 0x04


TCP_V6_FLOW 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define TCP_V6_FLOW 0x05


UDP_V6_FLOW 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define UDP_V6_FLOW 0x06


SCTP_V6_FLOW 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define SCTP_V6_FLOW 0x07


AH_ESP_V6_FLOW 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define AH_ESP_V6_FLOW 0x08


AH_V4_FLOW 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define AH_V4_FLOW 0x09


ESP_V4_FLOW 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ESP_V4_FLOW 0x0a


AH_V6_FLOW 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define AH_V6_FLOW 0x0b


ESP_V6_FLOW 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ESP_V6_FLOW 0x0c


IP_USER_FLOW 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define IP_USER_FLOW 0x0d


IPV4_FLOW 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define IPV4_FLOW 0x10


IPV6_FLOW 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define IPV6_FLOW 0x11


ETHER_FLOW 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETHER_FLOW 0x12


FLOW_EXT 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define FLOW_EXT 0x80000000


RXH_L2DA 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define RXH_L2DA (1 << 1)


RXH_VLAN 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define RXH_VLAN (1 << 2)


RXH_L3_PROTO 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define RXH_L3_PROTO (1 << 3)


RXH_IP_SRC 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define RXH_IP_SRC (1 << 4)


RXH_IP_DST 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define RXH_IP_DST (1 << 5)


RXH_L4_B_0_1 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define RXH_L4_B_0_1 (1 << 6)


RXH_L4_B_2_3 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define RXH_L4_B_2_3 (1 << 7)


RXH_DISCARD 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define RXH_DISCARD (1 << 31)


RX_CLS_FLOW_DISC 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define RX_CLS_FLOW_DISC 0xffffffffffffffffULL


RX_CLS_LOC_SPECIAL 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define RX_CLS_LOC_SPECIAL 0x80000000


RX_CLS_LOC_ANY 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define RX_CLS_LOC_ANY 0xffffffff


RX_CLS_LOC_FIRST 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define RX_CLS_LOC_FIRST 0xfffffffe


RX_CLS_LOC_LAST 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define RX_CLS_LOC_LAST 0xfffffffd


ETH_MODULE_SFF_8079 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETH_MODULE_SFF_8079 0x1


ETH_MODULE_SFF_8079_LEN 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETH_MODULE_SFF_8079_LEN 256


ETH_MODULE_SFF_8472 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETH_MODULE_SFF_8472 0x2


ETH_MODULE_SFF_8472_LEN 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETH_MODULE_SFF_8472_LEN 512


ethtool_reset_flags 	( diff_type: Mov type: enum file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ enum ethtool_reset_flags { ETH_RESET_MGMT = 1 << 0, ETH_RESET_IRQ = 1 << 1, ETH_RESET_DMA = 1 << 2, ETH_RESET_FILTER = 1 << 3, ETH_RESET_OFFLOAD = 1 << 4, ETH_RESET_MAC = 1 << 5, ETH_RESET_PHY = 1 << 6, ETH_RESET_RAM = 1 << 7, ETH_RESET_DEDICATED = 0x0000ffff, ETH_RESET_ALL = 0xffffffff, };


ETH_RESET_SHARED_SHIFT 	( diff_type: Mov type: macro file: include/linux/ethtool.h )
	-- include/uapi/linux/ethtool.h
	++ #define ETH_RESET_SHARED_SHIFT 16


MII_BMCR 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define MII_BMCR 0x00


MII_BMSR 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define MII_BMSR 0x01


MII_PHYSID1 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define MII_PHYSID1 0x02


MII_PHYSID2 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define MII_PHYSID2 0x03


MII_ADVERTISE 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define MII_ADVERTISE 0x04


MII_LPA 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define MII_LPA 0x05


MII_EXPANSION 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define MII_EXPANSION 0x06


MII_CTRL1000 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define MII_CTRL1000 0x09


MII_STAT1000 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define MII_STAT1000 0x0a


MII_ESTATUS 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define MII_ESTATUS 0x0f


MII_DCOUNTER 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define MII_DCOUNTER 0x12


MII_FCSCOUNTER 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define MII_FCSCOUNTER 0x13


MII_NWAYTEST 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define MII_NWAYTEST 0x14


MII_RERRCOUNTER 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define MII_RERRCOUNTER 0x15


MII_SREVISION 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define MII_SREVISION 0x16


MII_RESV1 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define MII_RESV1 0x17


MII_LBRERROR 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define MII_LBRERROR 0x18


MII_PHYADDR 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define MII_PHYADDR 0x19


MII_RESV2 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define MII_RESV2 0x1a


MII_TPISTATUS 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define MII_TPISTATUS 0x1b


MII_NCONFIG 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define MII_NCONFIG 0x1c


BMCR_RESV 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define BMCR_RESV 0x003f


BMCR_SPEED1000 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define BMCR_SPEED1000 0x0040


BMCR_CTST 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define BMCR_CTST 0x0080


BMCR_FULLDPLX 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define BMCR_FULLDPLX 0x0100


BMCR_ANRESTART 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define BMCR_ANRESTART 0x0200


BMCR_ISOLATE 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define BMCR_ISOLATE 0x0400


BMCR_PDOWN 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define BMCR_PDOWN 0x0800


BMCR_ANENABLE 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define BMCR_ANENABLE 0x1000


BMCR_SPEED100 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define BMCR_SPEED100 0x2000


BMCR_LOOPBACK 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define BMCR_LOOPBACK 0x4000


BMCR_RESET 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define BMCR_RESET 0x8000


BMSR_ERCAP 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define BMSR_ERCAP 0x0001


BMSR_JCD 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define BMSR_JCD 0x0002


BMSR_LSTATUS 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define BMSR_LSTATUS 0x0004


BMSR_ANEGCAPABLE 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define BMSR_ANEGCAPABLE 0x0008


BMSR_RFAULT 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define BMSR_RFAULT 0x0010


BMSR_ANEGCOMPLETE 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define BMSR_ANEGCOMPLETE 0x0020


BMSR_RESV 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define BMSR_RESV 0x00c0


BMSR_ESTATEN 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define BMSR_ESTATEN 0x0100


BMSR_100HALF2 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define BMSR_100HALF2 0x0200


BMSR_100FULL2 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define BMSR_100FULL2 0x0400


BMSR_10HALF 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define BMSR_10HALF 0x0800


BMSR_10FULL 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define BMSR_10FULL 0x1000


BMSR_100HALF 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define BMSR_100HALF 0x2000


BMSR_100FULL 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define BMSR_100FULL 0x4000


BMSR_100BASE4 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define BMSR_100BASE4 0x8000


ADVERTISE_SLCT 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define ADVERTISE_SLCT 0x001f


ADVERTISE_CSMA 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define ADVERTISE_CSMA 0x0001


ADVERTISE_10HALF 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define ADVERTISE_10HALF 0x0020


ADVERTISE_1000XFULL 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define ADVERTISE_1000XFULL 0x0020


ADVERTISE_10FULL 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define ADVERTISE_10FULL 0x0040


ADVERTISE_1000XHALF 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define ADVERTISE_1000XHALF 0x0040


ADVERTISE_100HALF 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define ADVERTISE_100HALF 0x0080


ADVERTISE_1000XPAUSE 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define ADVERTISE_1000XPAUSE 0x0080


ADVERTISE_100FULL 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define ADVERTISE_100FULL 0x0100


ADVERTISE_1000XPSE_ASYM 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define ADVERTISE_1000XPSE_ASYM 0x0100


ADVERTISE_100BASE4 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define ADVERTISE_100BASE4 0x0200


ADVERTISE_PAUSE_CAP 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define ADVERTISE_PAUSE_CAP 0x0400


ADVERTISE_PAUSE_ASYM 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define ADVERTISE_PAUSE_ASYM 0x0800


ADVERTISE_RESV 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define ADVERTISE_RESV 0x1000


ADVERTISE_RFAULT 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define ADVERTISE_RFAULT 0x2000


ADVERTISE_LPACK 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define ADVERTISE_LPACK 0x4000


ADVERTISE_NPAGE 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define ADVERTISE_NPAGE 0x8000


ADVERTISE_FULL 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define ADVERTISE_FULL (ADVERTISE_100FULL | ADVERTISE_10FULL | ADVERTISE_CSMA)


ADVERTISE_ALL 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define ADVERTISE_ALL (ADVERTISE_10HALF | ADVERTISE_10FULL | ADVERTISE_100HALF | ADVERTISE_100FULL)


LPA_SLCT 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define LPA_SLCT 0x001f


LPA_10HALF 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define LPA_10HALF 0x0020


LPA_1000XFULL 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define LPA_1000XFULL 0x0020


LPA_10FULL 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define LPA_10FULL 0x0040


LPA_1000XHALF 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define LPA_1000XHALF 0x0040


LPA_100HALF 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define LPA_100HALF 0x0080


LPA_1000XPAUSE 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define LPA_1000XPAUSE 0x0080


LPA_100FULL 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define LPA_100FULL 0x0100


LPA_1000XPAUSE_ASYM 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define LPA_1000XPAUSE_ASYM 0x0100


LPA_100BASE4 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define LPA_100BASE4 0x0200


LPA_PAUSE_CAP 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define LPA_PAUSE_CAP 0x0400


LPA_PAUSE_ASYM 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define LPA_PAUSE_ASYM 0x0800


LPA_RESV 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define LPA_RESV 0x1000


LPA_RFAULT 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define LPA_RFAULT 0x2000


LPA_LPACK 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define LPA_LPACK 0x4000


LPA_NPAGE 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define LPA_NPAGE 0x8000


LPA_DUPLEX 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define LPA_DUPLEX (LPA_10FULL | LPA_100FULL)


LPA_100 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define LPA_100 (LPA_100FULL | LPA_100HALF | LPA_100BASE4)


EXPANSION_NWAY 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define EXPANSION_NWAY 0x0001


EXPANSION_LCWP 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define EXPANSION_LCWP 0x0002


EXPANSION_ENABLENPAGE 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define EXPANSION_ENABLENPAGE 0x0004


EXPANSION_NPCAPABLE 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define EXPANSION_NPCAPABLE 0x0008


EXPANSION_MFAULTS 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define EXPANSION_MFAULTS 0x0010


EXPANSION_RESV 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define EXPANSION_RESV 0xffe0


ESTATUS_1000_TFULL 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define ESTATUS_1000_TFULL 0x2000


ESTATUS_1000_THALF 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define ESTATUS_1000_THALF 0x1000


NWAYTEST_RESV1 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define NWAYTEST_RESV1 0x00ff


NWAYTEST_LOOPBACK 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define NWAYTEST_LOOPBACK 0x0100


NWAYTEST_RESV2 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define NWAYTEST_RESV2 0xfe00


ADVERTISE_1000FULL 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define ADVERTISE_1000FULL 0x0200


ADVERTISE_1000HALF 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define ADVERTISE_1000HALF 0x0100


CTL1000_AS_MASTER 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define CTL1000_AS_MASTER 0x0800


CTL1000_ENABLE_MASTER 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define CTL1000_ENABLE_MASTER 0x1000


LPA_1000LOCALRXOK 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define LPA_1000LOCALRXOK 0x2000


LPA_1000REMRXOK 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define LPA_1000REMRXOK 0x1000


LPA_1000FULL 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define LPA_1000FULL 0x0800


LPA_1000HALF 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define LPA_1000HALF 0x0400


FLOW_CTRL_TX 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define FLOW_CTRL_TX 0x01


FLOW_CTRL_RX 	( diff_type: Mov type: macro file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ #define FLOW_CTRL_RX 0x02


mii_ioctl_data 	( diff_type: Mov type: struct file: include/linux/mii.h )
	-- include/uapi/linux/mii.h
	++ struct mii_ioctl_data { __u16 phy_id; __u16 reg_num; __u16 val_in; __u16 val_out; };


MAX_ADDR_LEN 	( diff_type: Mov type: macro file: include/linux/netdevice.h )
	-- include/uapi/linux/netdevice.h
	++ #define MAX_ADDR_LEN 32


INIT_NETDEV_GROUP 	( diff_type: Mov type: macro file: include/linux/netdevice.h )
	-- include/uapi/linux/netdevice.h
	++ #define INIT_NETDEV_GROUP 0


netdev_hw_addr 	( diff_type: Mod type: struct file: include/linux/netdevice.h )
	-- struct netdev_hw_addr { struct list_head list; unsigned char addr[MAX_ADDR_LEN]; unsigned char type; #define NETDEV_HW_ADDR_T_LAN 1 #define NETDEV_HW_ADDR_T_SAN 2 #define NETDEV_HW_ADDR_T_SLAVE 3 #define NETDEV_HW_ADDR_T_UNICAST 4 #define NETDEV_HW_ADDR_T_MULTICAST 5 bool synced; bool global_use; int refcount; struct rcu_head rcu_head; };
	++ struct netdev_hw_addr { struct list_head list; unsigned char addr[MAX_ADDR_LEN]; unsigned char type; #define NETDEV_HW_ADDR_T_LAN 1 #define NETDEV_HW_ADDR_T_SAN 2 #define NETDEV_HW_ADDR_T_SLAVE 3 #define NETDEV_HW_ADDR_T_UNICAST 4 #define NETDEV_HW_ADDR_T_MULTICAST 5 bool global_use; int refcount; int synced; struct rcu_head rcu_head; };


napi_struct 	( diff_type: Mod type: struct file: include/linux/netdevice.h )
	-- struct napi_struct { struct list_head poll_list; unsigned long state; int weight; int (*poll)(struct napi_struct *, int); spinlock_t poll_lock; int poll_owner; unsigned int gro_count; struct net_device *dev; struct list_head dev_list; struct sk_buff *gro_list; struct sk_buff *skb; };
	++ struct napi_struct { struct list_head poll_list; unsigned long state; int weight; unsigned int gro_count; int (*poll)(struct napi_struct *, int); spinlock_t poll_lock; int poll_owner; struct net_device *dev; struct sk_buff *gro_list; struct sk_buff *skb; struct list_head dev_list; };


net_device_ops 	( diff_type: Mod type: struct file: include/linux/netdevice.h )
	-- struct net_device_ops { int (*ndo_init)(struct net_device *dev); void (*ndo_uninit)(struct net_device *dev); int (*ndo_open)(struct net_device *dev); int (*ndo_stop)(struct net_device *dev); netdev_tx_t (*ndo_start_xmit) (struct sk_buff *skb,struct net_device *dev); u16 (*ndo_select_queue)(struct net_device *dev,struct sk_buff *skb); void (*ndo_change_rx_flags)(struct net_device *dev,int flags); void (*ndo_set_rx_mode)(struct net_device *dev); int (*ndo_set_mac_address)(struct net_device *dev,void *addr); int (*ndo_validate_addr)(struct net_device *dev); int (*ndo_do_ioctl)(struct net_device *dev,struct ifreq *ifr, int cmd); int (*ndo_set_config)(struct net_device *dev,struct ifmap *map); int (*ndo_change_mtu)(struct net_device *dev,int new_mtu); int (*ndo_neigh_setup)(struct net_device *dev,struct neigh_parms *); void (*ndo_tx_timeout) (struct net_device *dev); struct rtnl_link_stats64* (*ndo_get_stats64)(struct net_device *dev,struct rtnl_link_stats64 *storage); struct net_device_stats* (*ndo_get_stats)(struct net_device *dev); int (*ndo_vlan_rx_add_vid)(struct net_device *dev,unsigned short vid); int (*ndo_vlan_rx_kill_vid)(struct net_device *dev,unsigned short vid); void (*ndo_poll_controller)(struct net_device *dev); int (*ndo_netpoll_setup)(struct net_device *dev,struct netpoll_info *info); void (*ndo_netpoll_cleanup)(struct net_device *dev); int (*ndo_set_vf_mac)(struct net_device *dev,int queue, u8 *mac); int (*ndo_set_vf_vlan)(struct net_device *dev,int queue, u16 vlan, u8 qos); int (*ndo_set_vf_tx_rate)(struct net_device *dev,int vf, int rate); int (*ndo_set_vf_spoofchk)(struct net_device *dev,int vf, bool setting); int (*ndo_get_vf_config)(struct net_device *dev,int vf,struct ifla_vf_info *ivf); int (*ndo_set_vf_port)(struct net_device *dev,int vf,struct nlattr *port[]); int (*ndo_get_vf_port)(struct net_device *dev,int vf, struct sk_buff *skb); int (*ndo_setup_tc)(struct net_device *dev, u8 tc); int (*ndo_fcoe_enable)(struct net_device *dev); int (*ndo_fcoe_disable)(struct net_device *dev); int (*ndo_fcoe_ddp_setup)(struct net_device *dev,u16 xid,struct scatterlist *sgl,unsigned int sgc); int (*ndo_fcoe_ddp_done)(struct net_device *dev,u16 xid); int (*ndo_fcoe_ddp_target)(struct net_device *dev,u16 xid,struct scatterlist *sgl,unsigned int sgc); int (*ndo_fcoe_get_hbainfo)(struct net_device *dev,struct netdev_fcoe_hbainfo *hbainfo); #define NETDEV_FCOE_WWNN 0 #define NETDEV_FCOE_WWPN 1 int (*ndo_fcoe_get_wwn)(struct net_device *dev,u64 *wwn, int type); int (*ndo_rx_flow_steer)(struct net_device *dev,const struct sk_buff *skb,u16 rxq_index,u32 flow_id); int (*ndo_add_slave)(struct net_device *dev,struct net_device *slave_dev); int (*ndo_del_slave)(struct net_device *dev,struct net_device *slave_dev); netdev_features_t (*ndo_fix_features)(struct net_device *dev,netdev_features_t features); int (*ndo_set_features)(struct net_device *dev,netdev_features_t features); int (*ndo_neigh_construct)(struct neighbour *n); void (*ndo_neigh_destroy)(struct neighbour *n); int (*ndo_fdb_add)(struct ndmsg *ndm,struct net_device *dev,unsigned char *addr,u16 flags); int (*ndo_fdb_del)(struct ndmsg *ndm,struct net_device *dev,unsigned char *addr); int (*ndo_fdb_dump)(struct sk_buff *skb,struct netlink_callback *cb,struct net_device *dev,int idx); };
	++ struct net_device_ops { int (*ndo_init)(struct net_device *dev); void (*ndo_uninit)(struct net_device *dev); int (*ndo_open)(struct net_device *dev); int (*ndo_stop)(struct net_device *dev); netdev_tx_t (*ndo_start_xmit) (struct sk_buff *skb,struct net_device *dev); u16 (*ndo_select_queue)(struct net_device *dev,struct sk_buff *skb); void (*ndo_change_rx_flags)(struct net_device *dev,int flags); void (*ndo_set_rx_mode)(struct net_device *dev); int (*ndo_set_mac_address)(struct net_device *dev,void *addr); int (*ndo_validate_addr)(struct net_device *dev); int (*ndo_do_ioctl)(struct net_device *dev,struct ifreq *ifr, int cmd); int (*ndo_set_config)(struct net_device *dev,struct ifmap *map); int (*ndo_change_mtu)(struct net_device *dev,int new_mtu); int (*ndo_neigh_setup)(struct net_device *dev,struct neigh_parms *); void (*ndo_tx_timeout) (struct net_device *dev); struct rtnl_link_stats64* (*ndo_get_stats64)(struct net_device *dev,struct rtnl_link_stats64 *storage); struct net_device_stats* (*ndo_get_stats)(struct net_device *dev); int (*ndo_vlan_rx_add_vid)(struct net_device *dev,unsigned short vid); int (*ndo_vlan_rx_kill_vid)(struct net_device *dev,unsigned short vid); void (*ndo_poll_controller)(struct net_device *dev); int (*ndo_netpoll_setup)(struct net_device *dev,struct netpoll_info *info,gfp_t gfp); void (*ndo_netpoll_cleanup)(struct net_device *dev); int (*ndo_set_vf_mac)(struct net_device *dev,int queue, u8 *mac); int (*ndo_set_vf_vlan)(struct net_device *dev,int queue, u16 vlan, u8 qos); int (*ndo_set_vf_tx_rate)(struct net_device *dev,int vf, int rate); int (*ndo_set_vf_spoofchk)(struct net_device *dev,int vf, bool setting); int (*ndo_get_vf_config)(struct net_device *dev,int vf,struct ifla_vf_info *ivf); int (*ndo_set_vf_port)(struct net_device *dev,int vf,struct nlattr *port[]); int (*ndo_get_vf_port)(struct net_device *dev,int vf, struct sk_buff *skb); int (*ndo_setup_tc)(struct net_device *dev, u8 tc); int (*ndo_fcoe_enable)(struct net_device *dev); int (*ndo_fcoe_disable)(struct net_device *dev); int (*ndo_fcoe_ddp_setup)(struct net_device *dev,u16 xid,struct scatterlist *sgl,unsigned int sgc); int (*ndo_fcoe_ddp_done)(struct net_device *dev,u16 xid); int (*ndo_fcoe_ddp_target)(struct net_device *dev,u16 xid,struct scatterlist *sgl,unsigned int sgc); int (*ndo_fcoe_get_hbainfo)(struct net_device *dev,struct netdev_fcoe_hbainfo *hbainfo); #define NETDEV_FCOE_WWNN 0 #define NETDEV_FCOE_WWPN 1 int (*ndo_fcoe_get_wwn)(struct net_device *dev,u64 *wwn, int type); int (*ndo_rx_flow_steer)(struct net_device *dev,const struct sk_buff *skb,u16 rxq_index,u32 flow_id); int (*ndo_add_slave)(struct net_device *dev,struct net_device *slave_dev); int (*ndo_del_slave)(struct net_device *dev,struct net_device *slave_dev); netdev_features_t (*ndo_fix_features)(struct net_device *dev,netdev_features_t features); int (*ndo_set_features)(struct net_device *dev,netdev_features_t features); int (*ndo_neigh_construct)(struct neighbour *n); void (*ndo_neigh_destroy)(struct neighbour *n); int (*ndo_fdb_add)(struct ndmsg *ndm,struct nlattr *tb[],struct net_device *dev,const unsigned char *addr,u16 flags); int (*ndo_fdb_del)(struct ndmsg *ndm,struct net_device *dev,const unsigned char *addr); int (*ndo_fdb_dump)(struct sk_buff *skb,struct netlink_callback *cb,struct net_device *dev,int idx); int (*ndo_bridge_setlink)(struct net_device *dev,struct nlmsghdr *nlh); int (*ndo_bridge_getlink)(struct sk_buff *skb,u32 pid, u32 seq,struct net_device *dev); };


net_device 	( diff_type: Mod type: struct file: include/linux/netdevice.h )
	-- struct net_device { char name[IFNAMSIZ]; struct pm_qos_request pm_qos_req; struct hlist_node name_hlist; char *ifalias; unsigned long mem_end; unsigned long mem_start; unsigned long base_addr; unsigned int irq; unsigned long state; struct list_head dev_list; struct list_head napi_list; struct list_head unreg_list; netdev_features_t features; netdev_features_t hw_features; netdev_features_t wanted_features; netdev_features_t vlan_features; int ifindex; int iflink; struct net_device_stats stats; atomic_long_t rx_dropped; const struct iw_handler_def * wireless_handlers; struct iw_public_data * wireless_data; const struct net_device_ops *netdev_ops; const struct ethtool_ops *ethtool_ops; const struct header_ops *header_ops; unsigned int flags; unsigned int priv_flags; unsigned short gflags; unsigned short padded; unsigned char operstate; unsigned char link_mode; unsigned char if_port; unsigned char dma; unsigned int mtu; unsigned short type; unsigned short hard_header_len; unsigned short needed_headroom; unsigned short needed_tailroom; unsigned char perm_addr[MAX_ADDR_LEN]; unsigned char addr_assign_type; unsigned char addr_len; unsigned char neigh_priv_len; unsigned short dev_id; spinlock_t addr_list_lock; struct netdev_hw_addr_list uc; struct netdev_hw_addr_list mc; bool uc_promisc; unsigned int promiscuity; unsigned int allmulti; struct vlan_info __rcu *vlan_info; struct dsa_switch_tree *dsa_ptr; void *atalk_ptr; struct in_device __rcu *ip_ptr; struct dn_dev __rcu *dn_ptr; struct inet6_dev __rcu *ip6_ptr; void *ax25_ptr; struct wireless_dev *ieee80211_ptr; unsigned long last_rx; struct net_device *master; unsigned char *dev_addr; struct netdev_hw_addr_list dev_addrs; unsigned char broadcast[MAX_ADDR_LEN]; struct kset *queues_kset; struct netdev_rx_queue *_rx; unsigned int num_rx_queues; unsigned int real_num_rx_queues; struct cpu_rmap *rx_cpu_rmap; rx_handler_func_t __rcu *rx_handler; void __rcu *rx_handler_data; struct netdev_queue __rcu *ingress_queue; struct netdev_queue *_tx ____cacheline_aligned_in_smp; unsigned int num_tx_queues; unsigned int real_num_tx_queues; struct Qdisc *qdisc; unsigned long tx_queue_len; spinlock_t tx_global_lock; struct xps_dev_maps __rcu *xps_maps; unsigned long trans_start; int watchdog_timeo; struct timer_list watchdog_timer; int __percpu *pcpu_refcnt; struct list_head todo_list; struct hlist_node index_hlist; struct list_head link_watch_list; enum { NETREG_UNINITIALIZED=0, NETREG_REGISTERED, NETREG_UNREGISTERING, NETREG_UNREGISTERED, NETREG_RELEASED, NETREG_DUMMY, } reg_state:8; bool dismantle; enum { RTNL_LINK_INITIALIZED, RTNL_LINK_INITIALIZING, } rtnl_link_state:16; void (*destructor)(struct net_device *dev); struct netpoll_info *npinfo; struct net *nd_net; void *ml_priv; struct pcpu_lstats __percpu *lstats; struct pcpu_tstats __percpu *tstats; struct pcpu_dstats __percpu *dstats; }; struct garp_port __rcu *garp_port; struct device dev; const struct attribute_group *sysfs_groups[4]; const struct rtnl_link_ops *rtnl_link_ops; #define GSO_MAX_SIZE 65536 unsigned int gso_max_size; #define GSO_MAX_SEGS 65535 u16 gso_max_segs; const struct dcbnl_rtnl_ops *dcbnl_ops; u8 num_tc; struct netdev_tc_txq tc_to_txq[TC_MAX_QUEUE]; u8 prio_tc_map[TC_BITMASK + 1]; unsigned int fcoe_ddp_xid; struct netprio_map __rcu *priomap; struct phy_device *phydev; int group; };
	++ struct net_device { char name[IFNAMSIZ]; struct hlist_node name_hlist; char *ifalias; unsigned long mem_end; unsigned long mem_start; unsigned long base_addr; unsigned int irq; unsigned long state; struct list_head dev_list; struct list_head napi_list; struct list_head unreg_list; netdev_features_t features; netdev_features_t hw_features; netdev_features_t wanted_features; netdev_features_t vlan_features; netdev_features_t hw_enc_features; int ifindex; int iflink; struct net_device_stats stats; atomic_long_t rx_dropped; const struct iw_handler_def * wireless_handlers; struct iw_public_data * wireless_data; const struct net_device_ops *netdev_ops; const struct ethtool_ops *ethtool_ops; const struct header_ops *header_ops; unsigned int flags; unsigned int priv_flags; unsigned short gflags; unsigned short padded; unsigned char operstate; unsigned char link_mode; unsigned char if_port; unsigned char dma; unsigned int mtu; unsigned short type; unsigned short hard_header_len; unsigned short needed_headroom; unsigned short needed_tailroom; unsigned char perm_addr[MAX_ADDR_LEN]; unsigned char addr_assign_type; unsigned char addr_len; unsigned char neigh_priv_len; unsigned short dev_id; spinlock_t addr_list_lock; struct netdev_hw_addr_list uc; struct netdev_hw_addr_list mc; bool uc_promisc; unsigned int promiscuity; unsigned int allmulti; struct vlan_info __rcu *vlan_info; struct dsa_switch_tree *dsa_ptr; void *atalk_ptr; struct in_device __rcu *ip_ptr; struct dn_dev __rcu *dn_ptr; struct inet6_dev __rcu *ip6_ptr; void *ax25_ptr; struct wireless_dev *ieee80211_ptr; unsigned long last_rx; struct net_device *master; unsigned char *dev_addr; struct netdev_hw_addr_list dev_addrs; unsigned char broadcast[MAX_ADDR_LEN]; struct kset *queues_kset; struct netdev_rx_queue *_rx; unsigned int num_rx_queues; unsigned int real_num_rx_queues; struct cpu_rmap *rx_cpu_rmap; rx_handler_func_t __rcu *rx_handler; void __rcu *rx_handler_data; struct netdev_queue __rcu *ingress_queue; struct netdev_queue *_tx ____cacheline_aligned_in_smp; unsigned int num_tx_queues; unsigned int real_num_tx_queues; struct Qdisc *qdisc; unsigned long tx_queue_len; spinlock_t tx_global_lock; struct xps_dev_maps __rcu *xps_maps; unsigned long trans_start; int watchdog_timeo; struct timer_list watchdog_timer; int __percpu *pcpu_refcnt; struct list_head todo_list; struct hlist_node index_hlist; struct list_head link_watch_list; enum { NETREG_UNINITIALIZED=0, NETREG_REGISTERED, NETREG_UNREGISTERING, NETREG_UNREGISTERED, NETREG_RELEASED, NETREG_DUMMY, } reg_state:8; bool dismantle; enum { RTNL_LINK_INITIALIZED, RTNL_LINK_INITIALIZING, } rtnl_link_state:16; void (*destructor)(struct net_device *dev); struct netpoll_info *npinfo; struct net *nd_net; void *ml_priv; struct pcpu_lstats __percpu *lstats; struct pcpu_tstats __percpu *tstats; struct pcpu_dstats __percpu *dstats; }; struct garp_port __rcu *garp_port; struct device dev; const struct attribute_group *sysfs_groups[4]; const struct rtnl_link_ops *rtnl_link_ops; #define GSO_MAX_SIZE 65536 unsigned int gso_max_size; #define GSO_MAX_SEGS 65535 u16 gso_max_segs; const struct dcbnl_rtnl_ops *dcbnl_ops; u8 num_tc; struct netdev_tc_txq tc_to_txq[TC_MAX_QUEUE]; u8 prio_tc_map[TC_BITMASK + 1]; unsigned int fcoe_ddp_xid; struct netprio_map __rcu *priomap; struct phy_device *phydev; struct lock_class_key *qdisc_tx_busylock; int group; struct pm_qos_request pm_qos_req; };


napi_gro_cb 	( diff_type: Mod type: struct file: include/linux/netdevice.h )
	-- struct napi_gro_cb { void *frag0; unsigned int frag0_len; int data_offset; int same_flow; int flush; int count; int free; #define NAPI_GRO_FREE 1 #define NAPI_GRO_FREE_STOLEN_HEAD 2 };
	++ struct napi_gro_cb { void *frag0; unsigned int frag0_len; int data_offset; int flush; u16 count; u8 same_flow; u8 free; #define NAPI_GRO_FREE 1 #define NAPI_GRO_FREE_STOLEN_HEAD 2 unsigned long age; int proto; struct sk_buff *last; };


packet_type 	( diff_type: Mod type: struct file: include/linux/netdevice.h )
	-- struct packet_type { __be16 type; struct net_device *dev; int (*func) (struct sk_buff *,struct net_device *,struct packet_type *,struct net_device *); struct sk_buff *(*gso_segment)(struct sk_buff *skb,netdev_features_t features); int (*gso_send_check)(struct sk_buff *skb); struct sk_buff **(*gro_receive)(struct sk_buff **head,struct sk_buff *skb); int (*gro_complete)(struct sk_buff *skb); bool (*id_match)(struct packet_type *ptype,struct sock *sk); void *af_packet_priv; struct list_head list; };
	++ struct packet_type { __be16 type; struct net_device *dev; int (*func) (struct sk_buff *,struct net_device *,struct packet_type *,struct net_device *); bool (*id_match)(struct packet_type *ptype,struct sock *sk); void *af_packet_priv; struct list_head list; };


NETDEV_UNREGISTER_BATCH 	( diff_type: Del type: macro file: include/linux/netdevice.h )
	-- #define NETDEV_UNREGISTER_BATCH 0x0011


skb_gro_reset_offset 	( diff_type: Del type: prototype file: include/linux/netdevice.h )
	-- extern void skb_gro_reset_offset(struct sk_buff *skb);


dev_gro_receive 	( diff_type: Del type: prototype file: include/linux/netdevice.h )
	-- extern gro_result_t dev_gro_receive(struct napi_struct *napi,struct sk_buff *skb);


napi_skb_finish 	( diff_type: Del type: prototype file: include/linux/netdevice.h )
	-- extern gro_result_t napi_skb_finish(gro_result_t ret,struct sk_buff *skb);


napi_gro_flush 	( diff_type: Mod type: prototype file: include/linux/netdevice.h )
	-- extern void napi_gro_flush(struct napi_struct *napi);
	++ extern void napi_gro_flush(struct napi_struct *napi,bool flush_old);


napi_frags_finish 	( diff_type: Del type: prototype file: include/linux/netdevice.h )
	-- extern gro_result_t napi_frags_finish(struct napi_struct *napi,struct sk_buff *skb,gro_result_t ret);


netif_notify_peers 	( diff_type: Del type: prototype file: include/linux/netdevice.h )
	-- extern void netif_notify_peers(struct net_device *dev);


dev_addr_add 	( diff_type: Mod type: prototype file: include/linux/netdevice.h )
	-- extern int dev_addr_add(struct net_device *dev,unsigned char *addr,unsigned char addr_type);
	++ extern int dev_addr_add(struct net_device *dev,const unsigned char *addr,unsigned char addr_type);


dev_addr_del 	( diff_type: Mod type: prototype file: include/linux/netdevice.h )
	-- extern int dev_addr_del(struct net_device *dev,unsigned char *addr,unsigned char addr_type);
	++ extern int dev_addr_del(struct net_device *dev,const unsigned char *addr,unsigned char addr_type);


dev_uc_add 	( diff_type: Mod type: prototype file: include/linux/netdevice.h )
	-- extern int dev_uc_add(struct net_device *dev,unsigned char *addr);
	++ extern int dev_uc_add(struct net_device *dev,const unsigned char *addr);


dev_uc_add_excl 	( diff_type: Mod type: prototype file: include/linux/netdevice.h )
	-- extern int dev_uc_add_excl(struct net_device *dev,unsigned char *addr);
	++ extern int dev_uc_add_excl(struct net_device *dev,const unsigned char *addr);


dev_uc_del 	( diff_type: Mod type: prototype file: include/linux/netdevice.h )
	-- extern int dev_uc_del(struct net_device *dev,unsigned char *addr);
	++ extern int dev_uc_del(struct net_device *dev,const unsigned char *addr);


dev_mc_add 	( diff_type: Mod type: prototype file: include/linux/netdevice.h )
	-- extern int dev_mc_add(struct net_device *dev,unsigned char *addr);
	++ extern int dev_mc_add(struct net_device *dev,const unsigned char *addr);


dev_mc_add_global 	( diff_type: Mod type: prototype file: include/linux/netdevice.h )
	-- extern int dev_mc_add_global(struct net_device *dev,unsigned char *addr);
	++ extern int dev_mc_add_global(struct net_device *dev,const unsigned char *addr);


dev_mc_add_excl 	( diff_type: Mod type: prototype file: include/linux/netdevice.h )
	-- extern int dev_mc_add_excl(struct net_device *dev,unsigned char *addr);
	++ extern int dev_mc_add_excl(struct net_device *dev,const unsigned char *addr);


dev_mc_del 	( diff_type: Mod type: prototype file: include/linux/netdevice.h )
	-- extern int dev_mc_del(struct net_device *dev,unsigned char *addr);
	++ extern int dev_mc_del(struct net_device *dev,const unsigned char *addr);


dev_mc_del_global 	( diff_type: Mod type: prototype file: include/linux/netdevice.h )
	-- extern int dev_mc_del_global(struct net_device *dev,unsigned char *addr);
	++ extern int dev_mc_del_global(struct net_device *dev,const unsigned char *addr);


netdev_bonding_change 	( diff_type: Del type: prototype file: include/linux/netdevice.h )
	-- extern int netdev_bonding_change(struct net_device *dev,unsigned long event);


__netdev_printk 	( diff_type: Del type: prototype file: include/linux/netdevice.h )
	-- extern int __netdev_printk(const char *level,const struct net_device *dev,struct va_format *vaf);


random_ether_addr 	( diff_type: Mod type: function-->macro file: include/linux/etherdevice.h )
	-- static inline void random_ether_addr(u8 *addr)
	++ #define random_ether_addr(addr) eth_random_addr(addr)


ETH_ALEN 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_ALEN 6


ETH_HLEN 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_HLEN 14


ETH_ZLEN 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_ZLEN 60


ETH_DATA_LEN 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_DATA_LEN 1500


ETH_FRAME_LEN 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_FRAME_LEN 1514


ETH_FCS_LEN 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_FCS_LEN 4


ETH_P_LOOP 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_LOOP 0x0060


ETH_P_PUP 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_PUP 0x0200


ETH_P_PUPAT 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_PUPAT 0x0201


ETH_P_IP 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_IP 0x0800


ETH_P_X25 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_X25 0x0805


ETH_P_ARP 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_ARP 0x0806


ETH_P_BPQ 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_BPQ 0x08FF


ETH_P_IEEEPUP 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_IEEEPUP 0x0a00


ETH_P_IEEEPUPAT 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_IEEEPUPAT 0x0a01


ETH_P_DEC 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_DEC 0x6000


ETH_P_DNA_DL 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_DNA_DL 0x6001


ETH_P_DNA_RC 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_DNA_RC 0x6002


ETH_P_DNA_RT 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_DNA_RT 0x6003


ETH_P_LAT 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_LAT 0x6004


ETH_P_DIAG 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_DIAG 0x6005


ETH_P_CUST 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_CUST 0x6006


ETH_P_SCA 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_SCA 0x6007


ETH_P_TEB 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_TEB 0x6558


ETH_P_RARP 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_RARP 0x8035


ETH_P_ATALK 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_ATALK 0x809B


ETH_P_AARP 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_AARP 0x80F3


ETH_P_8021Q 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_8021Q 0x8100


ETH_P_IPX 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_IPX 0x8137


ETH_P_IPV6 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_IPV6 0x86DD


ETH_P_PAUSE 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_PAUSE 0x8808


ETH_P_SLOW 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_SLOW 0x8809


ETH_P_WCCP 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_WCCP 0x883E


ETH_P_PPP_DISC 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_PPP_DISC 0x8863


ETH_P_PPP_SES 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_PPP_SES 0x8864


ETH_P_MPLS_UC 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_MPLS_UC 0x8847


ETH_P_MPLS_MC 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_MPLS_MC 0x8848


ETH_P_ATMMPOA 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_ATMMPOA 0x884c


ETH_P_LINK_CTL 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_LINK_CTL 0x886c


ETH_P_ATMFATE 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_ATMFATE 0x8884


ETH_P_PAE 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_PAE 0x888E


ETH_P_AOE 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_AOE 0x88A2


ETH_P_8021AD 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_8021AD 0x88A8


ETH_P_802_EX1 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_802_EX1 0x88B5


ETH_P_TIPC 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_TIPC 0x88CA


ETH_P_8021AH 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_8021AH 0x88E7


ETH_P_1588 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_1588 0x88F7


ETH_P_FCOE 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_FCOE 0x8906


ETH_P_TDLS 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_TDLS 0x890D


ETH_P_FIP 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_FIP 0x8914


ETH_P_QINQ1 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_QINQ1 0x9100


ETH_P_QINQ2 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_QINQ2 0x9200


ETH_P_QINQ3 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_QINQ3 0x9300


ETH_P_EDSA 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_EDSA 0xDADA


ETH_P_AF_IUCV 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_AF_IUCV 0xFBFB


ETH_P_802_3 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_802_3 0x0001


ETH_P_AX25 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_AX25 0x0002


ETH_P_ALL 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_ALL 0x0003


ETH_P_802_2 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_802_2 0x0004


ETH_P_SNAP 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_SNAP 0x0005


ETH_P_DDCMP 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_DDCMP 0x0006


ETH_P_WAN_PPP 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_WAN_PPP 0x0007


ETH_P_PPP_MP 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_PPP_MP 0x0008


ETH_P_LOCALTALK 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_LOCALTALK 0x0009


ETH_P_CAN 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_CAN 0x000C


ETH_P_PPPTALK 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_PPPTALK 0x0010


ETH_P_TR_802_2 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_TR_802_2 0x0011


ETH_P_MOBITEX 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_MOBITEX 0x0015


ETH_P_CONTROL 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_CONTROL 0x0016


ETH_P_IRDA 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_IRDA 0x0017


ETH_P_ECONET 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_ECONET 0x0018


ETH_P_HDLC 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_HDLC 0x0019


ETH_P_ARCNET 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_ARCNET 0x001A


ETH_P_DSA 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_DSA 0x001B


ETH_P_TRAILER 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_TRAILER 0x001C


ETH_P_PHONET 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_PHONET 0x00F5


ETH_P_IEEE802154 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_IEEE802154 0x00F6


ETH_P_CAIF 	( diff_type: Mov type: macro file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ #define ETH_P_CAIF 0x00F7


ethhdr 	( diff_type: Mov type: struct file: include/linux/if_ether.h )
	-- include/uapi/linux/if_ether.h
	++ struct ethhdr { unsigned char h_dest[ETH_ALEN]; unsigned char h_source[ETH_ALEN]; __be16 h_proto; } __attribute__((packed));


ubuf_info 	( diff_type: Mod type: struct file: include/linux/skbuff.h )
	-- struct ubuf_info { void (*callback)(struct ubuf_info *); void *ctx; unsigned long desc; };
	++ struct ubuf_info { void (*callback)(struct ubuf_info *, bool zerocopy_success); void *ctx; unsigned long desc; };


sk_buff 	( diff_type: Mod type: struct file: include/linux/skbuff.h )
	-- struct sk_buff { struct sk_buff *next; struct sk_buff *prev; ktime_t tstamp; struct sock *sk; struct net_device *dev; unsigned long _skb_refdst; struct sec_path *sp; unsigned int len,data_len; __u16 mac_len,hdr_len; union { hdr_len; union { __wsum csum; struct { __u16 csum_start; __u16 csum_offset; }; __u32 priority; kmemcheck_bitfield_begin(flags1); __u8 local_df:1,cloned:1,ip_summed:2,nohdr:1,nfctinfo:3; __u8 pkt_type:3,fclone:2,ipvs_property:1,peeked:1,nf_trace:1; kmemcheck_bitfield_end(flags1); __be16 protocol; void (*destructor)(struct sk_buff *skb); struct nf_conntrack *nfct; struct sk_buff *nfct_reasm; struct nf_bridge_info *nf_bridge; int skb_iif; __u32 rxhash; __u16 vlan_tci; __u16 tc_index; __u16 tc_verd; __u16 queue_mapping; kmemcheck_bitfield_begin(flags2); __u8 ndisc_nodetype:2; __u8 ooo_okay:1; __u8 l4_rxhash:1; __u8 wifi_acked_valid:1; __u8 wifi_acked:1; __u8 no_fcs:1; __u8 head_frag:1; kmemcheck_bitfield_end(flags2); dma_cookie_t dma_cookie; __u32 secmark; __u32 mark; __u32 dropcount; __u32 avail_size; }; sk_buff_data_t transport_header; sk_buff_data_t network_header; sk_buff_data_t mac_header; sk_buff_data_t tail; sk_buff_data_t end; unsigned char *head,*data; unsigned int truesize; atomic_t users; };
	++ struct sk_buff { struct sk_buff *next; struct sk_buff *prev; ktime_t tstamp; struct sock *sk; struct net_device *dev; unsigned long _skb_refdst; struct sec_path *sp; unsigned int len,data_len; __u16 mac_len,hdr_len; union { hdr_len; union { __wsum csum; struct { __u16 csum_start; __u16 csum_offset; }; __u32 priority; kmemcheck_bitfield_begin(flags1); __u8 local_df:1,cloned:1,ip_summed:2,nohdr:1,nfctinfo:3; __u8 pkt_type:3,fclone:2,ipvs_property:1,peeked:1,nf_trace:1; kmemcheck_bitfield_end(flags1); __be16 protocol; void (*destructor)(struct sk_buff *skb); struct nf_conntrack *nfct; struct sk_buff *nfct_reasm; struct nf_bridge_info *nf_bridge; int skb_iif; __u32 rxhash; __u16 vlan_tci; __u16 tc_index; __u16 tc_verd; __u16 queue_mapping; kmemcheck_bitfield_begin(flags2); __u8 ndisc_nodetype:2; __u8 pfmemalloc:1; __u8 ooo_okay:1; __u8 l4_rxhash:1; __u8 wifi_acked_valid:1; __u8 wifi_acked:1; __u8 no_fcs:1; __u8 head_frag:1; __u8 encapsulation:1; kmemcheck_bitfield_end(flags2); dma_cookie_t dma_cookie; __u32 secmark; __u32 mark; __u32 dropcount; __u32 reserved_tailroom; }; sk_buff_data_t inner_transport_header; sk_buff_data_t inner_network_header; sk_buff_data_t transport_header; sk_buff_data_t network_header; sk_buff_data_t mac_header; sk_buff_data_t tail; sk_buff_data_t end; unsigned char *head,*data; unsigned int truesize; atomic_t users; };


__alloc_skb 	( diff_type: Mod type: prototype file: include/linux/skbuff.h )
	-- extern struct sk_buff *__alloc_skb(unsigned int size,gfp_t priority, int fclone, int node);
	++ extern struct sk_buff *__alloc_skb(unsigned int size,gfp_t priority, int flags, int node);


skb_recycle 	( diff_type: Del type: prototype file: include/linux/skbuff.h )
	-- extern void skb_recycle(struct sk_buff *skb);


skb_recycle_check 	( diff_type: Del type: prototype file: include/linux/skbuff.h )
	-- extern bool skb_recycle_check(struct sk_buff *skb,int skb_size);


skb_is_recycleable 	( diff_type: Del type: function file: include/linux/skbuff.h )
	-- static inline bool skb_is_recycleable(const struct sk_buff *skb,int skb_size)


___module_cat 	( diff_type: Del type: macro file: include/linux/moduleparam.h )
	-- #define ___module_cat(a,b) __mod_ ## a ## b


__module_cat 	( diff_type: Del type: macro file: include/linux/moduleparam.h )
	-- #define __module_cat(a,b) ___module_cat(a,b)


__MODULE_INFO 	( diff_type: Mod type: macro file: include/linux/moduleparam.h )
	-- #define __MODULE_INFO(tag,name,info) struct __module_cat(name,__LINE__) {}
	++ #define __MODULE_INFO(tag,name,info) struct __UNIQUE_ID(name) {}


S_IFMT 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IFMT 00170000


S_IFSOCK 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IFSOCK 0140000


S_IFLNK 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IFLNK 0120000


S_IFREG 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IFREG 0100000


S_IFBLK 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IFBLK 0060000


S_IFDIR 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IFDIR 0040000


S_IFCHR 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IFCHR 0020000


S_IFIFO 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IFIFO 0010000


S_ISUID 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_ISUID 0004000


S_ISGID 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_ISGID 0002000


S_ISVTX 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_ISVTX 0001000


S_ISLNK 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_ISLNK(m) (((m) & S_IFMT) == S_IFLNK)


S_ISREG 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_ISREG(m) (((m) & S_IFMT) == S_IFREG)


S_ISDIR 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_ISDIR(m) (((m) & S_IFMT) == S_IFDIR)


S_ISCHR 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_ISCHR(m) (((m) & S_IFMT) == S_IFCHR)


S_ISBLK 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_ISBLK(m) (((m) & S_IFMT) == S_IFBLK)


S_ISFIFO 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_ISFIFO(m) (((m) & S_IFMT) == S_IFIFO)


S_ISSOCK 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_ISSOCK(m) (((m) & S_IFMT) == S_IFSOCK)


S_IRWXU 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IRWXU 00700


S_IRUSR 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IRUSR 00400


S_IWUSR 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IWUSR 00200


S_IXUSR 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IXUSR 00100


S_IRWXG 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IRWXG 00070


S_IRGRP 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IRGRP 00040


S_IWGRP 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IWGRP 00020


S_IXGRP 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IXGRP 00010


S_IRWXO 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IRWXO 00007


S_IROTH 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IROTH 00004


S_IWOTH 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IWOTH 00002


S_IXOTH 	( diff_type: Mov type: macro file: include/linux/stat.h )
	-- include/uapi/linux/stat.h
	++ #define S_IXOTH 00001


PT_NULL 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_NULL 0


PT_LOAD 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_LOAD 1


PT_DYNAMIC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_DYNAMIC 2


PT_INTERP 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_INTERP 3


PT_NOTE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_NOTE 4


PT_SHLIB 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_SHLIB 5


PT_PHDR 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_PHDR 6


PT_TLS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_TLS 7


PT_LOOS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_LOOS 0x60000000


PT_HIOS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_HIOS 0x6fffffff


PT_LOPROC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_LOPROC 0x70000000


PT_HIPROC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_HIPROC 0x7fffffff


PT_GNU_EH_FRAME 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_GNU_EH_FRAME 0x6474e550


PT_GNU_STACK 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PT_GNU_STACK (PT_LOOS + 0x474e551)


PN_XNUM 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PN_XNUM 0xffff


ET_NONE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ET_NONE 0


ET_REL 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ET_REL 1


ET_EXEC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ET_EXEC 2


ET_DYN 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ET_DYN 3


ET_CORE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ET_CORE 4


ET_LOPROC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ET_LOPROC 0xff00


ET_HIPROC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ET_HIPROC 0xffff


DT_NULL 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_NULL 0


DT_NEEDED 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_NEEDED 1


DT_PLTRELSZ 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_PLTRELSZ 2


DT_PLTGOT 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_PLTGOT 3


DT_HASH 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_HASH 4


DT_STRTAB 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_STRTAB 5


DT_SYMTAB 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_SYMTAB 6


DT_RELA 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_RELA 7


DT_RELASZ 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_RELASZ 8


DT_RELAENT 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_RELAENT 9


DT_STRSZ 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_STRSZ 10


DT_SYMENT 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_SYMENT 11


DT_INIT 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_INIT 12


DT_FINI 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_FINI 13


DT_SONAME 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_SONAME 14


DT_RPATH 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_RPATH 15


DT_SYMBOLIC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_SYMBOLIC 16


DT_REL 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_REL 17


DT_RELSZ 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_RELSZ 18


DT_RELENT 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_RELENT 19


DT_PLTREL 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_PLTREL 20


DT_DEBUG 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_DEBUG 21


DT_TEXTREL 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_TEXTREL 22


DT_JMPREL 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_JMPREL 23


DT_ENCODING 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_ENCODING 32


OLD_DT_LOOS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define OLD_DT_LOOS 0x60000000


DT_LOOS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_LOOS 0x6000000d


DT_HIOS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_HIOS 0x6ffff000


DT_VALRNGLO 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_VALRNGLO 0x6ffffd00


DT_VALRNGHI 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_VALRNGHI 0x6ffffdff


DT_ADDRRNGLO 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_ADDRRNGLO 0x6ffffe00


DT_ADDRRNGHI 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_ADDRRNGHI 0x6ffffeff


DT_VERSYM 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_VERSYM 0x6ffffff0


DT_RELACOUNT 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_RELACOUNT 0x6ffffff9


DT_RELCOUNT 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_RELCOUNT 0x6ffffffa


DT_FLAGS_1 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_FLAGS_1 0x6ffffffb


DT_VERDEF 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_VERDEF 0x6ffffffc


DT_VERDEFNUM 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_VERDEFNUM 0x6ffffffd


DT_VERNEED 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_VERNEED 0x6ffffffe


DT_VERNEEDNUM 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_VERNEEDNUM 0x6fffffff


OLD_DT_HIOS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define OLD_DT_HIOS 0x6fffffff


DT_LOPROC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_LOPROC 0x70000000


DT_HIPROC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define DT_HIPROC 0x7fffffff


STB_LOCAL 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define STB_LOCAL 0


STB_GLOBAL 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define STB_GLOBAL 1


STB_WEAK 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define STB_WEAK 2


STT_NOTYPE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define STT_NOTYPE 0


STT_OBJECT 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define STT_OBJECT 1


STT_FUNC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define STT_FUNC 2


STT_SECTION 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define STT_SECTION 3


STT_FILE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define STT_FILE 4


STT_COMMON 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define STT_COMMON 5


STT_TLS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define STT_TLS 6


ELF_ST_BIND 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELF_ST_BIND(x) ((x) >> 4)


ELF_ST_TYPE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELF_ST_TYPE(x) (((unsigned int) x) & 0xf)


ELF32_ST_BIND 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELF32_ST_BIND(x) ELF_ST_BIND(x)


ELF32_ST_TYPE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELF32_ST_TYPE(x) ELF_ST_TYPE(x)


ELF64_ST_BIND 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELF64_ST_BIND(x) ELF_ST_BIND(x)


ELF64_ST_TYPE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELF64_ST_TYPE(x) ELF_ST_TYPE(x)


dynamic 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct dynamic{ Elf32_Sword d_tag; union { Elf32_Sword d_val; Elf32_Addr d_ptr; } d_un; } Elf32_Dyn;


Elf32_Dyn 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct dynamic{ Elf32_Sword d_tag; union { Elf32_Sword d_val; Elf32_Addr d_ptr; } d_un; } Elf32_Dyn;


Elf64_Dyn 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct { Elf64_Sxword d_tag; Elf64_Xword d_val; Elf64_Addr d_ptr; } d_un; } Elf64_Dyn;


ELF32_R_SYM 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELF32_R_SYM(x) ((x) >> 8)


ELF32_R_TYPE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELF32_R_TYPE(x) ((x) & 0xff)


ELF64_R_SYM 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELF64_R_SYM(i) ((i) >> 32)


ELF64_R_TYPE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELF64_R_TYPE(i) ((i) & 0xffffffff)


elf32_rel 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_rel { Elf32_Addr r_offset; Elf32_Word r_info; } Elf32_Rel;


Elf32_Rel 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_rel { Elf32_Addr r_offset; Elf32_Word r_info; } Elf32_Rel;


elf64_rel 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_rel { Elf64_Addr r_offset; Elf64_Xword r_info; } Elf64_Rel;


Elf64_Rel 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_rel { Elf64_Addr r_offset; Elf64_Xword r_info; } Elf64_Rel;


elf32_rela 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_rela{ Elf32_Addr r_offset; Elf32_Word r_info; Elf32_Sword r_addend; } Elf32_Rela;


Elf32_Rela 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_rela{ Elf32_Addr r_offset; Elf32_Word r_info; Elf32_Sword r_addend; } Elf32_Rela;


elf64_rela 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_rela { Elf64_Addr r_offset; Elf64_Xword r_info; Elf64_Sxword r_addend; } Elf64_Rela;


Elf64_Rela 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_rela { Elf64_Addr r_offset; Elf64_Xword r_info; Elf64_Sxword r_addend; } Elf64_Rela;


elf32_sym 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_sym{ Elf32_Word st_name; Elf32_Addr st_value; Elf32_Word st_size; unsigned char st_info; unsigned char st_other; Elf32_Half st_shndx; } Elf32_Sym;


Elf32_Sym 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_sym{ Elf32_Word st_name; Elf32_Addr st_value; Elf32_Word st_size; unsigned char st_info; unsigned char st_other; Elf32_Half st_shndx; } Elf32_Sym;


elf64_sym 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_sym { Elf64_Word st_name; unsigned char st_info; unsigned char st_other; Elf64_Half st_shndx; Elf64_Addr st_value; Elf64_Xword st_size; } Elf64_Sym;


Elf64_Sym 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_sym { Elf64_Word st_name; unsigned char st_info; unsigned char st_other; Elf64_Half st_shndx; Elf64_Addr st_value; Elf64_Xword st_size; } Elf64_Sym;


EI_NIDENT 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define EI_NIDENT 16


elf32_hdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_hdr{ unsigned char e_ident[EI_NIDENT]; Elf32_Half e_type; Elf32_Half e_machine; Elf32_Word e_version; Elf32_Addr e_entry; Elf32_Off e_phoff; Elf32_Off e_shoff; Elf32_Word e_flags; Elf32_Half e_ehsize; Elf32_Half e_phentsize; Elf32_Half e_phnum; Elf32_Half e_shentsize; Elf32_Half e_shnum; Elf32_Half e_shstrndx; } Elf32_Ehdr;


Elf32_Ehdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_hdr{ unsigned char e_ident[EI_NIDENT]; Elf32_Half e_type; Elf32_Half e_machine; Elf32_Word e_version; Elf32_Addr e_entry; Elf32_Off e_phoff; Elf32_Off e_shoff; Elf32_Word e_flags; Elf32_Half e_ehsize; Elf32_Half e_phentsize; Elf32_Half e_phnum; Elf32_Half e_shentsize; Elf32_Half e_shnum; Elf32_Half e_shstrndx; } Elf32_Ehdr;


elf64_hdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_hdr { unsigned char e_ident[EI_NIDENT]; Elf64_Half e_type; Elf64_Half e_machine; Elf64_Word e_version; Elf64_Addr e_entry; Elf64_Off e_phoff; Elf64_Off e_shoff; Elf64_Word e_flags; Elf64_Half e_ehsize; Elf64_Half e_phentsize; Elf64_Half e_phnum; Elf64_Half e_shentsize; Elf64_Half e_shnum; Elf64_Half e_shstrndx; } Elf64_Ehdr;


Elf64_Ehdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_hdr { unsigned char e_ident[EI_NIDENT]; Elf64_Half e_type; Elf64_Half e_machine; Elf64_Word e_version; Elf64_Addr e_entry; Elf64_Off e_phoff; Elf64_Off e_shoff; Elf64_Word e_flags; Elf64_Half e_ehsize; Elf64_Half e_phentsize; Elf64_Half e_phnum; Elf64_Half e_shentsize; Elf64_Half e_shnum; Elf64_Half e_shstrndx; } Elf64_Ehdr;


PF_R 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PF_R 0x4


PF_W 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PF_W 0x2


PF_X 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define PF_X 0x1


elf32_phdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_phdr{ Elf32_Word p_type; Elf32_Off p_offset; Elf32_Addr p_vaddr; Elf32_Addr p_paddr; Elf32_Word p_filesz; Elf32_Word p_memsz; Elf32_Word p_flags; Elf32_Word p_align; } Elf32_Phdr;


Elf32_Phdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_phdr{ Elf32_Word p_type; Elf32_Off p_offset; Elf32_Addr p_vaddr; Elf32_Addr p_paddr; Elf32_Word p_filesz; Elf32_Word p_memsz; Elf32_Word p_flags; Elf32_Word p_align; } Elf32_Phdr;


elf64_phdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_phdr { Elf64_Word p_type; Elf64_Word p_flags; Elf64_Off p_offset; Elf64_Addr p_vaddr; Elf64_Addr p_paddr; Elf64_Xword p_filesz; Elf64_Xword p_memsz; Elf64_Xword p_align; } Elf64_Phdr;


Elf64_Phdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_phdr { Elf64_Word p_type; Elf64_Word p_flags; Elf64_Off p_offset; Elf64_Addr p_vaddr; Elf64_Addr p_paddr; Elf64_Xword p_filesz; Elf64_Xword p_memsz; Elf64_Xword p_align; } Elf64_Phdr;


SHT_NULL 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_NULL 0


SHT_PROGBITS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_PROGBITS 1


SHT_SYMTAB 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_SYMTAB 2


SHT_STRTAB 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_STRTAB 3


SHT_RELA 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_RELA 4


SHT_HASH 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_HASH 5


SHT_DYNAMIC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_DYNAMIC 6


SHT_NOTE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_NOTE 7


SHT_NOBITS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_NOBITS 8


SHT_REL 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_REL 9


SHT_SHLIB 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_SHLIB 10


SHT_DYNSYM 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_DYNSYM 11


SHT_NUM 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_NUM 12


SHT_LOPROC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_LOPROC 0x70000000


SHT_HIPROC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_HIPROC 0x7fffffff


SHT_LOUSER 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_LOUSER 0x80000000


SHT_HIUSER 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHT_HIUSER 0xffffffff


SHF_WRITE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHF_WRITE 0x1


SHF_ALLOC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHF_ALLOC 0x2


SHF_EXECINSTR 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHF_EXECINSTR 0x4


SHF_MASKPROC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHF_MASKPROC 0xf0000000


SHN_UNDEF 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHN_UNDEF 0


SHN_LORESERVE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHN_LORESERVE 0xff00


SHN_LOPROC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHN_LOPROC 0xff00


SHN_HIPROC 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHN_HIPROC 0xff1f


SHN_ABS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHN_ABS 0xfff1


SHN_COMMON 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHN_COMMON 0xfff2


SHN_HIRESERVE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SHN_HIRESERVE 0xffff


elf32_shdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_shdr { Elf32_Word sh_name; Elf32_Word sh_type; Elf32_Word sh_flags; Elf32_Addr sh_addr; Elf32_Off sh_offset; Elf32_Word sh_size; Elf32_Word sh_link; Elf32_Word sh_info; Elf32_Word sh_addralign; Elf32_Word sh_entsize; } Elf32_Shdr;


Elf32_Shdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_shdr { Elf32_Word sh_name; Elf32_Word sh_type; Elf32_Word sh_flags; Elf32_Addr sh_addr; Elf32_Off sh_offset; Elf32_Word sh_size; Elf32_Word sh_link; Elf32_Word sh_info; Elf32_Word sh_addralign; Elf32_Word sh_entsize; } Elf32_Shdr;


elf64_shdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_shdr { Elf64_Word sh_name; Elf64_Word sh_type; Elf64_Xword sh_flags; Elf64_Addr sh_addr; Elf64_Off sh_offset; Elf64_Xword sh_size; Elf64_Word sh_link; Elf64_Word sh_info; Elf64_Xword sh_addralign; Elf64_Xword sh_entsize; } Elf64_Shdr;


Elf64_Shdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_shdr { Elf64_Word sh_name; Elf64_Word sh_type; Elf64_Xword sh_flags; Elf64_Addr sh_addr; Elf64_Off sh_offset; Elf64_Xword sh_size; Elf64_Word sh_link; Elf64_Word sh_info; Elf64_Xword sh_addralign; Elf64_Xword sh_entsize; } Elf64_Shdr;


EI_MAG0 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define EI_MAG0 0


EI_MAG1 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define EI_MAG1 1


EI_MAG2 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define EI_MAG2 2


EI_MAG3 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define EI_MAG3 3


EI_CLASS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define EI_CLASS 4


EI_DATA 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define EI_DATA 5


EI_VERSION 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define EI_VERSION 6


EI_OSABI 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define EI_OSABI 7


EI_PAD 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define EI_PAD 8


ELFMAG0 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFMAG0 0x7f


ELFMAG1 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFMAG1 'E'


ELFMAG2 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFMAG2 'L'


ELFMAG3 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFMAG3 'F'


ELFMAG 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFMAG "\177ELF"


SELFMAG 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define SELFMAG 4


ELFCLASSNONE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFCLASSNONE 0


ELFCLASS32 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFCLASS32 1


ELFCLASS64 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFCLASS64 2


ELFCLASSNUM 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFCLASSNUM 3


ELFDATANONE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFDATANONE 0


ELFDATA2LSB 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFDATA2LSB 1


ELFDATA2MSB 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFDATA2MSB 2


EV_NONE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define EV_NONE 0


EV_CURRENT 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define EV_CURRENT 1


EV_NUM 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define EV_NUM 2


ELFOSABI_NONE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFOSABI_NONE 0


ELFOSABI_LINUX 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELFOSABI_LINUX 3


ELF_OSABI 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define ELF_OSABI ELFOSABI_NONE


NT_PRSTATUS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_PRSTATUS 1


NT_PRFPREG 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_PRFPREG 2


NT_PRPSINFO 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_PRPSINFO 3


NT_TASKSTRUCT 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_TASKSTRUCT 4


NT_AUXV 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_AUXV 6


NT_PRXFPREG 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_PRXFPREG 0x46e62b7f


NT_PPC_VMX 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_PPC_VMX 0x100


NT_PPC_SPE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_PPC_SPE 0x101


NT_PPC_VSX 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_PPC_VSX 0x102


NT_386_TLS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_386_TLS 0x200


NT_386_IOPERM 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_386_IOPERM 0x201


NT_X86_XSTATE 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_X86_XSTATE 0x202


NT_S390_HIGH_GPRS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_S390_HIGH_GPRS 0x300


NT_S390_TIMER 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_S390_TIMER 0x301


NT_S390_TODCMP 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_S390_TODCMP 0x302


NT_S390_TODPREG 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_S390_TODPREG 0x303


NT_S390_CTRS 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_S390_CTRS 0x304


NT_S390_PREFIX 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_S390_PREFIX 0x305


NT_S390_LAST_BREAK 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_S390_LAST_BREAK 0x306


NT_S390_SYSTEM_CALL 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_S390_SYSTEM_CALL 0x307


NT_ARM_VFP 	( diff_type: Mov type: macro file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ #define NT_ARM_VFP 0x400


elf32_note 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_note { Elf32_Word n_namesz; Elf32_Word n_descsz; Elf32_Word n_type; } Elf32_Nhdr;


Elf32_Nhdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf32_note { Elf32_Word n_namesz; Elf32_Word n_descsz; Elf32_Word n_type; } Elf32_Nhdr;


elf64_note 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_note { Elf64_Word n_namesz; Elf64_Word n_descsz; Elf64_Word n_type; } Elf64_Nhdr;


Elf64_Nhdr 	( diff_type: Mov type: struct file: include/linux/elf.h )
	-- include/uapi/linux/elf.h
	++ typedef struct elf64_note { Elf64_Word n_namesz; Elf64_Word n_descsz; Elf64_Word n_type; } Elf64_Nhdr;


kobject_uevent 	( diff_type: Mod type: function-->prototype file: include/linux/kobject.h )
	-- static inline int kobject_uevent(struct kobject *kobj,enum kobject_action action)
	++ int kobject_uevent(struct kobject *kobj,enum kobject_action action);


kobject_uevent_env 	( diff_type: Mod type: function-->prototype file: include/linux/kobject.h )
	-- static inline int kobject_uevent_env(struct kobject *kobj,enum kobject_action action,char *envp[])
	++ int kobject_uevent_env(struct kobject *kobj,enum kobject_action action,char *envp[]);


add_uevent_var 	( diff_type: Mod type: function-->prototype file: include/linux/kobject.h )
	-- int add_uevent_var(struct kobj_uevent_env *env,const char *format,...)
	++ int add_uevent_var(struct kobj_uevent_env *env,const char *format,...);


kobject_action_type 	( diff_type: Mod type: function-->prototype file: include/linux/kobject.h )
	-- static inline int kobject_action_type(const char *buf,size_t count,enum kobject_action *type)
	++ int kobject_action_type(const char *buf,size_t count,enum kobject_action *type);


_LINUX_SYSINFO_H 	( diff_type: Mov type: macro file: include/linux/sysinfo.h )
	-- include/uapi/linux/sysinfo.h
	++ #define _LINUX_SYSINFO_H


SI_LOAD_SHIFT 	( diff_type: Mov type: macro file: include/linux/sysinfo.h )
	-- include/uapi/linux/sysinfo.h
	++ #define SI_LOAD_SHIFT 16


sysinfo 	( diff_type: Mov type: struct file: include/linux/sysinfo.h )
	-- include/uapi/linux/sysinfo.h
	++ struct sysinfo { __kernel_long_t uptime; __kernel_ulong_t loads[3]; __kernel_ulong_t totalram; __kernel_ulong_t freeram; __kernel_ulong_t sharedram; __kernel_ulong_t bufferram; __kernel_ulong_t totalswap; __kernel_ulong_t freeswap; __u16 procs; __u16 pad; __kernel_ulong_t totalhigh; __kernel_ulong_t freehigh; __u32 mem_unit; char _f[20-2*sizeof(__kernel_ulong_t)-sizeof(__u32)]; };


__bitwise__ 	( diff_type: Mov type: macro file: include/linux/types.h )
	-- include/uapi/linux/types.h
	++ #define __bitwise__


__bitwise 	( diff_type: Mov type: macro file: include/linux/types.h )
	-- include/uapi/linux/types.h
	++ #define __bitwise


__aligned_u64 	( diff_type: Mov type: macro file: include/linux/types.h )
	-- include/uapi/linux/types.h
	++ #define __aligned_u64 __u64 __attribute__((aligned(8)))


__aligned_be64 	( diff_type: Mov type: macro file: include/linux/types.h )
	-- include/uapi/linux/types.h
	++ #define __aligned_be64 __be64 __attribute__((aligned(8)))


__aligned_le64 	( diff_type: Mov type: macro file: include/linux/types.h )
	-- include/uapi/linux/types.h
	++ #define __aligned_le64 __le64 __attribute__((aligned(8)))


rcu_head 	( diff_type: Mod type: struct-->macro file: include/linux/types.h )
	-- struct rcu_head { struct rcu_head *next; void (*func)(struct rcu_head *head); };
	++ #define rcu_head callback_head


KERN_EMERG 	( diff_type: All type: macro file: include/linux/printk.h-->include/linux/kern_levels.h )
	-- #define KERN_EMERG "<0>"
	++ #define KERN_EMERG KERN_SOH "0"


KERN_ALERT 	( diff_type: All type: macro file: include/linux/printk.h-->include/linux/kern_levels.h )
	-- #define KERN_ALERT "<1>"
	++ #define KERN_ALERT KERN_SOH "1"


KERN_CRIT 	( diff_type: All type: macro file: include/linux/printk.h-->include/linux/kern_levels.h )
	-- #define KERN_CRIT "<2>"
	++ #define KERN_CRIT KERN_SOH "2"


KERN_ERR 	( diff_type: All type: macro file: include/linux/printk.h-->include/linux/kern_levels.h )
	-- #define KERN_ERR "<3>"
	++ #define KERN_ERR KERN_SOH "3"


KERN_WARNING 	( diff_type: All type: macro file: include/linux/printk.h-->include/linux/kern_levels.h )
	-- #define KERN_WARNING "<4>"
	++ #define KERN_WARNING KERN_SOH "4"


KERN_NOTICE 	( diff_type: All type: macro file: include/linux/printk.h-->include/linux/kern_levels.h )
	-- #define KERN_NOTICE "<5>"
	++ #define KERN_NOTICE KERN_SOH "5"


KERN_INFO 	( diff_type: All type: macro file: include/linux/printk.h-->include/linux/kern_levels.h )
	-- #define KERN_INFO "<6>"
	++ #define KERN_INFO KERN_SOH "6"


KERN_DEBUG 	( diff_type: All type: macro file: include/linux/printk.h-->include/linux/kern_levels.h )
	-- #define KERN_DEBUG "<7>"
	++ #define KERN_DEBUG KERN_SOH "7"


KERN_DEFAULT 	( diff_type: All type: macro file: include/linux/printk.h-->include/linux/kern_levels.h )
	-- #define KERN_DEFAULT "<d>"
	++ #define KERN_DEFAULT KERN_SOH "d"


KERN_CONT 	( diff_type: All type: macro file: include/linux/printk.h-->include/linux/kern_levels.h )
	-- #define KERN_CONT "<c>"
	++ #define KERN_CONT ""


DEFINE_DYNAMIC_DEBUG_METADATA 	( diff_type: Mod type: macro file: include/linux/dynamic_debug.h )
	-- #define DEFINE_DYNAMIC_DEBUG_METADATA(name,fmt) static struct _ddebug __used __aligned(8) __attribute__((section("__verbose"))) name = { .modname = KBUILD_MODNAME, .function = __func__, .filename = __FILE__, .format = (fmt), .lineno = __LINE__, .flags = _DPRINTK_FLAGS_DEFAULT, }
	++ #define DEFINE_DYNAMIC_DEBUG_METADATA(name,fmt) static struct _ddebug __aligned(8) __attribute__((section("__verbose"))) name = { .modname = KBUILD_MODNAME, .function = __func__, .filename = __FILE__, .format = (fmt), .lineno = __LINE__, .flags = _DPRINTK_FLAGS_DEFAULT, }


_ASM_X86_BYTEORDER_H 	( diff_type: Mov type: macro file: arch/x86/include/asm/byteorder.h )
	-- arch/x86/include/uapi/asm/byteorder.h
	++ #define _ASM_X86_BYTEORDER_H


_LINUX_CAPABILITY_VERSION_1 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define _LINUX_CAPABILITY_VERSION_1 0x19980330


_LINUX_CAPABILITY_U32S_1 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define _LINUX_CAPABILITY_U32S_1 1


_LINUX_CAPABILITY_VERSION_2 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define _LINUX_CAPABILITY_VERSION_2 0x20071026


_LINUX_CAPABILITY_U32S_2 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define _LINUX_CAPABILITY_U32S_2 2


_LINUX_CAPABILITY_VERSION_3 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define _LINUX_CAPABILITY_VERSION_3 0x20080522


_LINUX_CAPABILITY_U32S_3 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define _LINUX_CAPABILITY_U32S_3 2


__user_cap_header_struct 	( diff_type: Mov type: struct file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ typedef struct __user_cap_header_struct { __u32 version; int pid; } __user *cap_user_header_t;


*cap_user_header_t 	( diff_type: Mov type: struct file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ typedef struct __user_cap_header_struct { __u32 version; int pid; } __user *cap_user_header_t;


__user_cap_data_struct 	( diff_type: Mov type: struct file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ typedef struct __user_cap_data_struct { __u32 effective; __u32 permitted; __u32 inheritable; } __user *cap_user_data_t;


*cap_user_data_t 	( diff_type: Mov type: struct file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ typedef struct __user_cap_data_struct { __u32 effective; __u32 permitted; __u32 inheritable; } __user *cap_user_data_t;


VFS_CAP_REVISION_MASK 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define VFS_CAP_REVISION_MASK 0xFF000000


VFS_CAP_REVISION_SHIFT 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define VFS_CAP_REVISION_SHIFT 24


VFS_CAP_FLAGS_MASK 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define VFS_CAP_FLAGS_MASK ~VFS_CAP_REVISION_MASK


VFS_CAP_FLAGS_EFFECTIVE 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define VFS_CAP_FLAGS_EFFECTIVE 0x000001


VFS_CAP_REVISION_1 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define VFS_CAP_REVISION_1 0x01000000


VFS_CAP_U32_1 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define VFS_CAP_U32_1 1


XATTR_CAPS_SZ_1 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define XATTR_CAPS_SZ_1 (sizeof(__le32)*(1 + 2*VFS_CAP_U32_1))


VFS_CAP_REVISION_2 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define VFS_CAP_REVISION_2 0x02000000


VFS_CAP_U32_2 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define VFS_CAP_U32_2 2


XATTR_CAPS_SZ_2 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define XATTR_CAPS_SZ_2 (sizeof(__le32)*(1 + 2*VFS_CAP_U32_2))


XATTR_CAPS_SZ 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define XATTR_CAPS_SZ XATTR_CAPS_SZ_2


VFS_CAP_U32 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define VFS_CAP_U32 VFS_CAP_U32_2


VFS_CAP_REVISION 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define VFS_CAP_REVISION VFS_CAP_REVISION_2


vfs_cap_data 	( diff_type: Mov type: struct file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ struct vfs_cap_data { __le32 magic_etc; struct { __le32 permitted; __le32 inheritable; } data[VFS_CAP_U32]; };


_LINUX_CAPABILITY_VERSION 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define _LINUX_CAPABILITY_VERSION _LINUX_CAPABILITY_VERSION_1


_LINUX_CAPABILITY_U32S 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define _LINUX_CAPABILITY_U32S _LINUX_CAPABILITY_U32S_1


CAP_CHOWN 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_CHOWN 0


CAP_DAC_OVERRIDE 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_DAC_OVERRIDE 1


CAP_DAC_READ_SEARCH 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_DAC_READ_SEARCH 2


CAP_FOWNER 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_FOWNER 3


CAP_FSETID 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_FSETID 4


CAP_KILL 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_KILL 5


CAP_SETGID 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_SETGID 6


CAP_SETUID 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_SETUID 7


CAP_SETPCAP 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_SETPCAP 8


CAP_LINUX_IMMUTABLE 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_LINUX_IMMUTABLE 9


CAP_NET_BIND_SERVICE 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_NET_BIND_SERVICE 10


CAP_NET_BROADCAST 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_NET_BROADCAST 11


CAP_NET_ADMIN 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_NET_ADMIN 12


CAP_NET_RAW 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_NET_RAW 13


CAP_IPC_LOCK 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_IPC_LOCK 14


CAP_IPC_OWNER 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_IPC_OWNER 15


CAP_SYS_MODULE 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_SYS_MODULE 16


CAP_SYS_RAWIO 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_SYS_RAWIO 17


CAP_SYS_CHROOT 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_SYS_CHROOT 18


CAP_SYS_PTRACE 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_SYS_PTRACE 19


CAP_SYS_PACCT 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_SYS_PACCT 20


CAP_SYS_ADMIN 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_SYS_ADMIN 21


CAP_SYS_BOOT 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_SYS_BOOT 22


CAP_SYS_NICE 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_SYS_NICE 23


CAP_SYS_RESOURCE 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_SYS_RESOURCE 24


CAP_SYS_TIME 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_SYS_TIME 25


CAP_SYS_TTY_CONFIG 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_SYS_TTY_CONFIG 26


CAP_MKNOD 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_MKNOD 27


CAP_LEASE 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_LEASE 28


CAP_AUDIT_WRITE 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_AUDIT_WRITE 29


CAP_AUDIT_CONTROL 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_AUDIT_CONTROL 30


CAP_SETFCAP 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_SETFCAP 31


CAP_MAC_OVERRIDE 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_MAC_OVERRIDE 32


CAP_MAC_ADMIN 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_MAC_ADMIN 33


CAP_SYSLOG 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_SYSLOG 34


CAP_WAKE_ALARM 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_WAKE_ALARM 35


CAP_BLOCK_SUSPEND 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_BLOCK_SUSPEND 36


CAP_LAST_CAP 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_LAST_CAP CAP_BLOCK_SUSPEND


cap_valid 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define cap_valid(x) ((x) >= 0 && (x) <= CAP_LAST_CAP)


CAP_TO_INDEX 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_TO_INDEX(x) ((x) >> 5)


CAP_TO_MASK 	( diff_type: Mov type: macro file: include/linux/capability.h )
	-- include/uapi/linux/capability.h
	++ #define CAP_TO_MASK(x) (1 << ((x) & 31))


NTP_API 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define NTP_API 4


timex 	( diff_type: Mov type: struct file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ struct timex { unsigned int modes; long offset; long freq; long maxerror; long esterror; int status; long constant; long precision; long tolerance; struct timeval time; long tick; long ppsfreq; long jitter; int shift; long stabil; long jitcnt; long calcnt; long errcnt; long stbcnt; int tai; };


ADJ_OFFSET 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define ADJ_OFFSET 0x0001


ADJ_FREQUENCY 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define ADJ_FREQUENCY 0x0002


ADJ_MAXERROR 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define ADJ_MAXERROR 0x0004


ADJ_ESTERROR 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define ADJ_ESTERROR 0x0008


ADJ_STATUS 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define ADJ_STATUS 0x0010


ADJ_TIMECONST 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define ADJ_TIMECONST 0x0020


ADJ_TAI 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define ADJ_TAI 0x0080


ADJ_SETOFFSET 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define ADJ_SETOFFSET 0x0100


ADJ_MICRO 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define ADJ_MICRO 0x1000


ADJ_NANO 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define ADJ_NANO 0x2000


ADJ_TICK 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define ADJ_TICK 0x4000


ADJ_OFFSET_SINGLESHOT 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define ADJ_OFFSET_SINGLESHOT 0x8001


ADJ_OFFSET_SS_READ 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define ADJ_OFFSET_SS_READ 0xa001


MOD_OFFSET 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define MOD_OFFSET ADJ_OFFSET


MOD_FREQUENCY 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define MOD_FREQUENCY ADJ_FREQUENCY


MOD_MAXERROR 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define MOD_MAXERROR ADJ_MAXERROR


MOD_ESTERROR 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define MOD_ESTERROR ADJ_ESTERROR


MOD_STATUS 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define MOD_STATUS ADJ_STATUS


MOD_TIMECONST 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define MOD_TIMECONST ADJ_TIMECONST


MOD_TAI 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define MOD_TAI ADJ_TAI


MOD_MICRO 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define MOD_MICRO ADJ_MICRO


MOD_NANO 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define MOD_NANO ADJ_NANO


STA_PLL 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define STA_PLL 0x0001


STA_PPSFREQ 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define STA_PPSFREQ 0x0002


STA_PPSTIME 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define STA_PPSTIME 0x0004


STA_FLL 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define STA_FLL 0x0008


STA_INS 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define STA_INS 0x0010


STA_DEL 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define STA_DEL 0x0020


STA_UNSYNC 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define STA_UNSYNC 0x0040


STA_FREQHOLD 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define STA_FREQHOLD 0x0080


STA_PPSSIGNAL 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define STA_PPSSIGNAL 0x0100


STA_PPSJITTER 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define STA_PPSJITTER 0x0200


STA_PPSWANDER 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define STA_PPSWANDER 0x0400


STA_PPSERROR 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define STA_PPSERROR 0x0800


STA_CLOCKERR 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define STA_CLOCKERR 0x1000


STA_NANO 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define STA_NANO 0x2000


STA_MODE 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define STA_MODE 0x4000


STA_CLK 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define STA_CLK 0x8000


STA_RONLY 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define STA_RONLY (STA_PPSSIGNAL | STA_PPSJITTER | STA_PPSWANDER | STA_PPSERROR | STA_CLOCKERR | STA_NANO | STA_MODE | STA_CLK)


TIME_OK 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define TIME_OK 0


TIME_INS 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define TIME_INS 1


TIME_DEL 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define TIME_DEL 2


TIME_OOP 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define TIME_OOP 3


TIME_WAIT 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define TIME_WAIT 4


TIME_ERROR 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define TIME_ERROR 5


TIME_BAD 	( diff_type: Mov type: macro file: include/linux/timex.h )
	-- include/uapi/linux/timex.h
	++ #define TIME_BAD TIME_ERROR


ACTHZ 	( diff_type: Del type: macro file: include/linux/jiffies.h )
	-- #define ACTHZ (SH_DIV (CLOCK_TICK_RATE,LATCH,8))


TICK_NSEC 	( diff_type: Mod type: macro file: include/linux/jiffies.h )
	-- #define TICK_NSEC (SH_DIV (1000000UL * 1000,ACTHZ,8))
	++ #define TICK_NSEC ((NSEC_PER_SEC+HZ/2)/HZ)


TICK_USEC_TO_NSEC 	( diff_type: Del type: macro file: include/linux/jiffies.h )
	-- #define TICK_USEC_TO_NSEC(TUSEC) (SH_DIV (TUSEC * USER_HZ * 1000,ACTHZ,8))


rb_node 	( diff_type: Mod type: struct file: include/linux/rbtree.h )
	-- struct rb_node { unsigned long rb_parent_color; #define RB_RED 0 #define RB_BLACK 1 struct rb_node *rb_right; struct rb_node *rb_left; } __attribute__((aligned(sizeof(long))));
	++ struct rb_node { unsigned long __rb_parent_color; struct rb_node *rb_right; struct rb_node *rb_left; } __attribute__((aligned(sizeof(long))));


rb_parent 	( diff_type: Mod type: macro file: include/linux/rbtree.h )
	-- #define rb_parent(r) ((struct rb_node *)((r)->rb_parent_color & ~3))
	++ #define rb_parent(r) ((struct rb_node *)((r)->__rb_parent_color & ~3))


rb_color 	( diff_type: Del type: macro file: include/linux/rbtree.h )
	-- #define rb_color(r) ((r)->rb_parent_color & 1)


rb_is_red 	( diff_type: Del type: macro file: include/linux/rbtree.h )
	-- #define rb_is_red(r) (!rb_color(r))


rb_is_black 	( diff_type: Del type: macro file: include/linux/rbtree.h )
	-- #define rb_is_black(r) rb_color(r)


rb_set_red 	( diff_type: Del type: macro file: include/linux/rbtree.h )
	-- #define rb_set_red(r) do { (r)->rb_parent_color &= ~1; } while (0)


rb_set_black 	( diff_type: Del type: macro file: include/linux/rbtree.h )
	-- #define rb_set_black(r) do { (r)->rb_parent_color |= 1; } while (0)


rb_set_parent 	( diff_type: Del type: function file: include/linux/rbtree.h )
	-- static inline void rb_set_parent(struct rb_node *rb,struct rb_node *p)


rb_set_color 	( diff_type: Del type: function file: include/linux/rbtree.h )
	-- static inline void rb_set_color(struct rb_node *rb,int color)


RB_EMPTY_NODE 	( diff_type: Mod type: macro file: include/linux/rbtree.h )
	-- #define RB_EMPTY_NODE(node) (rb_parent(node) == node)
	++ #define RB_EMPTY_NODE(node) ((node)->__rb_parent_color == (unsigned long)(node))


RB_CLEAR_NODE 	( diff_type: Mod type: macro file: include/linux/rbtree.h )
	-- #define RB_CLEAR_NODE(node) (rb_set_parent(node,node))
	++ #define RB_CLEAR_NODE(node) ((node)->__rb_parent_color = (unsigned long)(node))


rb_init_node 	( diff_type: Del type: function file: include/linux/rbtree.h )
	-- static inline void rb_init_node(struct rb_node *rb)


rb_augment_insert 	( diff_type: Del type: prototype file: include/linux/rbtree.h )
	-- extern void rb_augment_insert(struct rb_node *node,rb_augment_f func, void *data);


rb_augment_erase_begin 	( diff_type: Del type: prototype file: include/linux/rbtree.h )
	-- extern struct rb_node *rb_augment_erase_begin(struct rb_node *node);


rb_augment_erase_end 	( diff_type: Del type: prototype file: include/linux/rbtree.h )
	-- extern void rb_augment_erase_end(struct rb_node *node,rb_augment_f func, void *data);


node_states 	( diff_type: Mod type: enum file: include/linux/nodemask.h )
	-- enum node_states { N_POSSIBLE, N_ONLINE, N_NORMAL_MEMORY, N_HIGH_MEMORY, N_CPU, NR_NODE_STATES };
	++ enum node_states { N_POSSIBLE, N_ONLINE, N_NORMAL_MEMORY, N_HIGH_MEMORY, N_MEMORY, N_CPU, NR_NODE_STATES };


page 	( diff_type: Mod type: struct file: include/linux/mm_types.h )
	-- struct page { unsigned long flags; struct address_space *mapping; pgoff_t index; void *freelist; }; unsigned long counters; atomic_t _mapcount; struct { unsigned inuse:16; unsigned objects:15; unsigned frozen:1; }; atomic_t _count; }; struct list_head lru; struct page *next; int pages; int pobjects; short int pages; short int pobjects; spinlock_t ptl; struct kmem_cache *slab; struct page *first_page; }; unsigned long debug_flags; void *shadow; }
	++ struct page { unsigned long flags; struct address_space *mapping; pgoff_t index; void *freelist; bool pfmemalloc; unsigned long counters; atomic_t _mapcount; struct { unsigned inuse:16; unsigned objects:15; unsigned frozen:1; }; int units; }; atomic_t _count; }; struct list_head lru; struct page *next; int pages; int pobjects; short int pages; short int pobjects; struct list_head list; struct slab *slab_page; }; spinlock_t ptl; struct kmem_cache *slab_cache; struct page *first_page; }; unsigned long debug_flags; void *shadow; int _last_nid; }


vm_area_struct 	( diff_type: Mod type: struct file: include/linux/mm_types.h )
	-- struct vm_area_struct { struct mm_struct * vm_mm; unsigned long vm_start; unsigned long vm_end; struct vm_area_struct *vm_next, *vm_prev; pgprot_t vm_page_prot; unsigned long vm_flags; struct rb_node vm_rb; struct list_head list; void *parent; struct vm_area_struct *head; } vm_set; struct raw_prio_tree_node prio_tree_node; } shared; struct list_head anon_vma_chain; struct anon_vma *anon_vma; const struct vm_operations_struct *vm_ops; unsigned long vm_pgoff; struct file * vm_file; void * vm_private_data; struct vm_region *vm_region; struct mempolicy *vm_policy; };
	++ struct vm_area_struct { unsigned long vm_start; unsigned long vm_end; struct vm_area_struct *vm_next, *vm_prev; struct rb_node vm_rb; unsigned long rb_subtree_gap; struct mm_struct *vm_mm; pgprot_t vm_page_prot; unsigned long vm_flags; struct rb_node rb; unsigned long rb_subtree_last; } linear; struct list_head nonlinear; } shared; struct list_head anon_vma_chain; struct anon_vma *anon_vma; const struct vm_operations_struct *vm_ops; unsigned long vm_pgoff; struct file * vm_file; void * vm_private_data; struct vm_region *vm_region; struct mempolicy *vm_policy; };


mm_struct 	( diff_type: Mod type: struct file: include/linux/mm_types.h )
	-- struct mm_struct { struct vm_area_struct * mmap; struct rb_root mm_rb; struct vm_area_struct * mmap_cache; unsigned long (*get_unmapped_area) (struct file *filp,unsigned long addr, unsigned long len,unsigned long pgoff, unsigned long flags); void (*unmap_area) (struct mm_struct *mm, unsigned long addr); unsigned long mmap_base; unsigned long task_size; unsigned long cached_hole_size; unsigned long free_area_cache; pgd_t * pgd; atomic_t mm_users; atomic_t mm_count; int map_count; spinlock_t page_table_lock; struct rw_semaphore mmap_sem; struct list_head mmlist; unsigned long hiwater_rss; unsigned long hiwater_vm; unsigned long total_vm; unsigned long locked_vm; unsigned long pinned_vm; unsigned long shared_vm; unsigned long exec_vm; unsigned long stack_vm; unsigned long reserved_vm; unsigned long def_flags; unsigned long nr_ptes; unsigned long start_code, end_code, start_data, end_data; unsigned long start_brk, brk, start_stack; unsigned long arg_start, arg_end, env_start, env_end; unsigned long saved_auxv[AT_VECTOR_SIZE]; struct mm_rss_stat rss_stat; struct linux_binfmt *binfmt; cpumask_var_t cpu_vm_mask_var; mm_context_t context; unsigned long flags; struct core_state *core_state; spinlock_t ioctx_lock; struct hlist_head ioctx_list; struct task_struct __rcu *owner; struct file *exe_file; unsigned long num_exe_file_vmas; struct mmu_notifier_mm *mmu_notifier_mm; pgtable_t pmd_huge_pte; struct cpumask cpumask_allocation; struct uprobes_state uprobes_state; };
	++ struct mm_struct { struct vm_area_struct * mmap; struct rb_root mm_rb; struct vm_area_struct * mmap_cache; unsigned long (*get_unmapped_area) (struct file *filp,unsigned long addr, unsigned long len,unsigned long pgoff, unsigned long flags); void (*unmap_area) (struct mm_struct *mm, unsigned long addr); unsigned long mmap_base; unsigned long task_size; unsigned long cached_hole_size; unsigned long free_area_cache; unsigned long highest_vm_end; pgd_t * pgd; atomic_t mm_users; atomic_t mm_count; int map_count; spinlock_t page_table_lock; struct rw_semaphore mmap_sem; struct list_head mmlist; unsigned long hiwater_rss; unsigned long hiwater_vm; unsigned long total_vm; unsigned long locked_vm; unsigned long pinned_vm; unsigned long shared_vm; unsigned long exec_vm; unsigned long stack_vm; unsigned long def_flags; unsigned long nr_ptes; unsigned long start_code, end_code, start_data, end_data; unsigned long start_brk, brk, start_stack; unsigned long arg_start, arg_end, env_start, env_end; unsigned long saved_auxv[AT_VECTOR_SIZE]; struct mm_rss_stat rss_stat; struct linux_binfmt *binfmt; cpumask_var_t cpu_vm_mask_var; mm_context_t context; unsigned long flags; struct core_state *core_state; spinlock_t ioctx_lock; struct hlist_head ioctx_list; struct task_struct __rcu *owner; struct file *exe_file; struct mmu_notifier_mm *mmu_notifier_mm; pgtable_t pmd_huge_pte; struct cpumask cpumask_allocation; unsigned long numa_next_scan; unsigned long numa_next_reset; unsigned long numa_scan_offset; int numa_scan_seq; int first_nid; struct uprobes_state uprobes_state; };


pt_regs 	( diff_type: All type: struct file: arch/x86/include/asm/ptrace.h-->arch/x86/include/uapi/asm/ptrace.h )
	-- struct pt_regs { unsigned long r15; unsigned long r14; unsigned long r13; unsigned long r12; unsigned long bp; unsigned long bx; unsigned long r11; unsigned long r10; unsigned long r9; unsigned long r8; unsigned long ax; unsigned long cx; unsigned long dx; unsigned long si; unsigned long di; unsigned long orig_ax; unsigned long ip; unsigned long cs; unsigned long flags; unsigned long sp; unsigned long ss; };
	++ struct pt_regs { unsigned long r15; unsigned long r14; unsigned long r13; unsigned long r12; unsigned long rbp; unsigned long rbx; unsigned long r11; unsigned long r10; unsigned long r9; unsigned long r8; unsigned long rax; unsigned long rcx; unsigned long rdx; unsigned long rsi; unsigned long rdi; unsigned long orig_rax; unsigned long rip; unsigned long cs; unsigned long eflags; unsigned long rsp; unsigned long ss; };


ipi_call_lock 	( diff_type: Del type: prototype file: include/linux/smp.h )
	-- void ipi_call_lock(void);


ipi_call_unlock 	( diff_type: Del type: prototype file: include/linux/smp.h )
	-- void ipi_call_unlock(void);


ipi_call_lock_irq 	( diff_type: Del type: prototype file: include/linux/smp.h )
	-- void ipi_call_lock_irq(void);


ipi_call_unlock_irq 	( diff_type: Del type: prototype file: include/linux/smp.h )
	-- void ipi_call_unlock_irq(void);


num_booting_cpus 	( diff_type: Del type: function file: arch/x86/include/asm/smp.h )
	-- static inline int num_booting_cpus(void)


SEM_UNDO 	( diff_type: Mov type: macro file: include/linux/sem.h )
	-- include/uapi/linux/sem.h
	++ #define SEM_UNDO 0x1000


GETPID 	( diff_type: Mov type: macro file: include/linux/sem.h )
	-- include/uapi/linux/sem.h
	++ #define GETPID 11


GETVAL 	( diff_type: Mov type: macro file: include/linux/sem.h )
	-- include/uapi/linux/sem.h
	++ #define GETVAL 12


GETALL 	( diff_type: Mov type: macro file: include/linux/sem.h )
	-- include/uapi/linux/sem.h
	++ #define GETALL 13


GETNCNT 	( diff_type: Mov type: macro file: include/linux/sem.h )
	-- include/uapi/linux/sem.h
	++ #define GETNCNT 14


GETZCNT 	( diff_type: Mov type: macro file: include/linux/sem.h )
	-- include/uapi/linux/sem.h
	++ #define GETZCNT 15


SETVAL 	( diff_type: Mov type: macro file: include/linux/sem.h )
	-- include/uapi/linux/sem.h
	++ #define SETVAL 16


SETALL 	( diff_type: Mov type: macro file: include/linux/sem.h )
	-- include/uapi/linux/sem.h
	++ #define SETALL 17


SEM_STAT 	( diff_type: Mov type: macro file: include/linux/sem.h )
	-- include/uapi/linux/sem.h
	++ #define SEM_STAT 18


SEM_INFO 	( diff_type: Mov type: macro file: include/linux/sem.h )
	-- include/uapi/linux/sem.h
	++ #define SEM_INFO 19


semid_ds 	( diff_type: Mov type: struct file: include/linux/sem.h )
	-- include/uapi/linux/sem.h
	++ struct semid_ds { struct ipc_perm sem_perm; __kernel_time_t sem_otime; __kernel_time_t sem_ctime; struct sem *sem_base; struct sem_queue *sem_pending; struct sem_queue **sem_pending_last; struct sem_undo *undo; unsigned short sem_nsems; };


sembuf 	( diff_type: Mov type: struct file: include/linux/sem.h )
	-- include/uapi/linux/sem.h
	++ struct sembuf { unsigned short sem_num; short sem_op; short sem_flg; };


semun 	( diff_type: Mov type: union file: include/linux/sem.h )
	-- include/uapi/linux/sem.h
	++ union semun { int val; struct semid_ds __user *buf; unsigned short __user *array; struct seminfo __user *__buf; void __user *__pad; };


seminfo 	( diff_type: Mov type: struct file: include/linux/sem.h )
	-- include/uapi/linux/sem.h
	++ struct seminfo { int semmap; int semmni; int semmns; int semmnu; int semmsl; int semopm; int semume; int semusz; int semvmx; int semaem; };


SEMMNI 	( diff_type: Mov type: macro file: include/linux/sem.h )
	-- include/uapi/linux/sem.h
	++ #define SEMMNI 128


SEMMSL 	( diff_type: Mov type: macro file: include/linux/sem.h )
	-- include/uapi/linux/sem.h
	++ #define SEMMSL 250


SEMMNS 	( diff_type: Mov type: macro file: include/linux/sem.h )
	-- include/uapi/linux/sem.h
	++ #define SEMMNS (SEMMNI*SEMMSL)


SEMOPM 	( diff_type: Mov type: macro file: include/linux/sem.h )
	-- include/uapi/linux/sem.h
	++ #define SEMOPM 32


SEMVMX 	( diff_type: Mov type: macro file: include/linux/sem.h )
	-- include/uapi/linux/sem.h
	++ #define SEMVMX 32767


SEMAEM 	( diff_type: Mov type: macro file: include/linux/sem.h )
	-- include/uapi/linux/sem.h
	++ #define SEMAEM SEMVMX


SEMUME 	( diff_type: Mov type: macro file: include/linux/sem.h )
	-- include/uapi/linux/sem.h
	++ #define SEMUME SEMOPM


SEMMNU 	( diff_type: Mov type: macro file: include/linux/sem.h )
	-- include/uapi/linux/sem.h
	++ #define SEMMNU SEMMNS


SEMMAP 	( diff_type: Mov type: macro file: include/linux/sem.h )
	-- include/uapi/linux/sem.h
	++ #define SEMMAP SEMMNS


SEMUSZ 	( diff_type: Mov type: macro file: include/linux/sem.h )
	-- include/uapi/linux/sem.h
	++ #define SEMUSZ 20


SD_MC_INIT 	( diff_type: Mod type: macro file: include/linux/topology.h )
	-- #define SD_MC_INIT (struct sched_domain) { .min_interval = 1, .max_interval = 4, .busy_factor = 64, .imbalance_pct = 125, .cache_nice_tries = 1, .busy_idx = 2, .wake_idx = 0, .forkexec_idx = 0, .flags = 1*SD_LOAD_BALANCE | 1*SD_BALANCE_NEWIDLE | 1*SD_BALANCE_EXEC | 1*SD_BALANCE_FORK | 0*SD_BALANCE_WAKE | 1*SD_WAKE_AFFINE | 0*SD_PREFER_LOCAL | 0*SD_SHARE_CPUPOWER | 1*SD_SHARE_PKG_RESOURCES | 0*SD_SERIALIZE , .last_balance = jiffies, .balance_interval = 1, }
	++ #define SD_MC_INIT (struct sched_domain) { .min_interval = 1, .max_interval = 4, .busy_factor = 64, .imbalance_pct = 125, .cache_nice_tries = 1, .busy_idx = 2, .wake_idx = 0, .forkexec_idx = 0, .flags = 1*SD_LOAD_BALANCE | 1*SD_BALANCE_NEWIDLE | 1*SD_BALANCE_EXEC | 1*SD_BALANCE_FORK | 0*SD_BALANCE_WAKE | 1*SD_WAKE_AFFINE | 0*SD_SHARE_CPUPOWER | 1*SD_SHARE_PKG_RESOURCES | 0*SD_SERIALIZE , .last_balance = jiffies, .balance_interval = 1, }


SD_CPU_INIT 	( diff_type: Mod type: macro file: include/linux/topology.h )
	-- #define SD_CPU_INIT (struct sched_domain) { .min_interval = 1, .max_interval = 4, .busy_factor = 64, .imbalance_pct = 125, .cache_nice_tries = 1, .busy_idx = 2, .idle_idx = 1, .newidle_idx = 0, .wake_idx = 0, .forkexec_idx = 0, .flags = 1*SD_LOAD_BALANCE | 1*SD_BALANCE_NEWIDLE | 1*SD_BALANCE_EXEC | 1*SD_BALANCE_FORK | 0*SD_BALANCE_WAKE | 1*SD_WAKE_AFFINE | 0*SD_PREFER_LOCAL | 0*SD_SHARE_CPUPOWER | 0*SD_SHARE_PKG_RESOURCES | 0*SD_SERIALIZE , .last_balance = jiffies, .balance_interval = 1, }
	++ #define SD_CPU_INIT (struct sched_domain) { .min_interval = 1, .max_interval = 4, .busy_factor = 64, .imbalance_pct = 125, .cache_nice_tries = 1, .busy_idx = 2, .idle_idx = 1, .newidle_idx = 0, .wake_idx = 0, .forkexec_idx = 0, .flags = 1*SD_LOAD_BALANCE | 1*SD_BALANCE_NEWIDLE | 1*SD_BALANCE_EXEC | 1*SD_BALANCE_FORK | 0*SD_BALANCE_WAKE | 1*SD_WAKE_AFFINE | 0*SD_SHARE_CPUPOWER | 0*SD_SHARE_PKG_RESOURCES | 0*SD_SERIALIZE | 1*SD_PREFER_SIBLING , .last_balance = jiffies, .balance_interval = 1, }


SECCOMP_MODE_DISABLED 	( diff_type: Mov type: macro file: include/linux/seccomp.h )
	-- include/uapi/linux/seccomp.h
	++ #define SECCOMP_MODE_DISABLED 0


SECCOMP_MODE_STRICT 	( diff_type: Mov type: macro file: include/linux/seccomp.h )
	-- include/uapi/linux/seccomp.h
	++ #define SECCOMP_MODE_STRICT 1


SECCOMP_MODE_FILTER 	( diff_type: Mov type: macro file: include/linux/seccomp.h )
	-- include/uapi/linux/seccomp.h
	++ #define SECCOMP_MODE_FILTER 2


SECCOMP_RET_KILL 	( diff_type: Mov type: macro file: include/linux/seccomp.h )
	-- include/uapi/linux/seccomp.h
	++ #define SECCOMP_RET_KILL 0x00000000U


SECCOMP_RET_TRAP 	( diff_type: Mov type: macro file: include/linux/seccomp.h )
	-- include/uapi/linux/seccomp.h
	++ #define SECCOMP_RET_TRAP 0x00030000U


SECCOMP_RET_ERRNO 	( diff_type: Mov type: macro file: include/linux/seccomp.h )
	-- include/uapi/linux/seccomp.h
	++ #define SECCOMP_RET_ERRNO 0x00050000U


SECCOMP_RET_TRACE 	( diff_type: Mov type: macro file: include/linux/seccomp.h )
	-- include/uapi/linux/seccomp.h
	++ #define SECCOMP_RET_TRACE 0x7ff00000U


SECCOMP_RET_ALLOW 	( diff_type: Mov type: macro file: include/linux/seccomp.h )
	-- include/uapi/linux/seccomp.h
	++ #define SECCOMP_RET_ALLOW 0x7fff0000U


SECCOMP_RET_ACTION 	( diff_type: Mov type: macro file: include/linux/seccomp.h )
	-- include/uapi/linux/seccomp.h
	++ #define SECCOMP_RET_ACTION 0x7fff0000U


SECCOMP_RET_DATA 	( diff_type: Mov type: macro file: include/linux/seccomp.h )
	-- include/uapi/linux/seccomp.h
	++ #define SECCOMP_RET_DATA 0x0000ffffU


seccomp_data 	( diff_type: Mov type: struct file: include/linux/seccomp.h )
	-- include/uapi/linux/seccomp.h
	++ struct seccomp_data { int nr; __u32 arch; __u64 instruction_pointer; __u64 args[6]; };


RCU_NONIDLE 	( diff_type: Mod type: macro file: include/linux/rcupdate.h )
	-- #define RCU_NONIDLE(a) do { rcu_idle_exit(); do { a; } while (0); rcu_idle_enter(); } while (0)
	++ #define RCU_NONIDLE(a) do { rcu_irq_enter(); do { a; } while (0); rcu_irq_exit(); } while (0)


rcu_is_cpu_idle 	( diff_type: Mod type: function-->prototype file: include/linux/rcupdate.h )
	-- static inline int rcu_is_cpu_idle(void)
	++ extern int rcu_is_cpu_idle(void);


__rcu_assign_pointer 	( diff_type: Mod type: macro file: include/linux/rcupdate.h )
	-- #define __rcu_assign_pointer(p,v,space) ({ smp_wmb(); (p) = (typeof(*v) __force space *)(v); })
	++ #define __rcu_assign_pointer(p,v,space) do { smp_wmb(); (p) = (typeof(*v) __force space *)(v); } while (0)


RCU_INIT_POINTER 	( diff_type: Mod type: macro file: include/linux/rcupdate.h )
	-- #define RCU_INIT_POINTER(p,v) p = (typeof(*v) __force __rcu *)(v)
	++ #define RCU_INIT_POINTER(p,v) do { p = (typeof(*v) __force __rcu *)(v); } while (0)


__kfree_rcu 	( diff_type: Mod type: macro file: include/linux/rcupdate.h )
	-- #define __kfree_rcu(head,offset) do { BUILD_BUG_ON(!__is_kfree_rcu_offset(offset)); call_rcu(head, (void (*)(struct rcu_head *))(unsigned long)(offset)); } while (0)
	++ #define __kfree_rcu(head,offset) do { BUILD_BUG_ON(!__is_kfree_rcu_offset(offset)); kfree_call_rcu(head, (void (*)(struct rcu_head *))(unsigned long)(offset)); } while (0)


list_for_each_continue_rcu 	( diff_type: Del type: macro file: include/linux/rculist.h )
	-- #define list_for_each_continue_rcu(pos,head) for ((pos) = rcu_dereference_raw(list_next_rcu(pos)); (pos) != (head); (pos) = rcu_dereference_raw(list_next_rcu(pos)))


_STRUCT_TIMESPEC 	( diff_type: Mov type: macro file: include/linux/time.h )
	-- include/uapi/linux/time.h
	++ #define _STRUCT_TIMESPEC


timespec 	( diff_type: Mov type: struct file: include/linux/time.h )
	-- include/uapi/linux/time.h
	++ struct timespec { __kernel_time_t tv_sec; long tv_nsec; };


timeval 	( diff_type: Mov type: struct file: include/linux/time.h )
	-- include/uapi/linux/time.h
	++ struct timeval { __kernel_time_t tv_sec; __kernel_suseconds_t tv_usec; };


timezone 	( diff_type: Mov type: struct file: include/linux/time.h )
	-- include/uapi/linux/time.h
	++ struct timezone { int tz_minuteswest; int tz_dsttime; };


ITIMER_REAL 	( diff_type: Mov type: macro file: include/linux/time.h )
	-- include/uapi/linux/time.h
	++ #define ITIMER_REAL 0


ITIMER_VIRTUAL 	( diff_type: Mov type: macro file: include/linux/time.h )
	-- include/uapi/linux/time.h
	++ #define ITIMER_VIRTUAL 1


ITIMER_PROF 	( diff_type: Mov type: macro file: include/linux/time.h )
	-- include/uapi/linux/time.h
	++ #define ITIMER_PROF 2


itimerspec 	( diff_type: Mov type: struct file: include/linux/time.h )
	-- include/uapi/linux/time.h
	++ struct itimerspec { struct timespec it_interval; struct timespec it_value; };


itimerval 	( diff_type: Mov type: struct file: include/linux/time.h )
	-- include/uapi/linux/time.h
	++ struct itimerval { struct timeval it_interval; struct timeval it_value; };


CLOCK_REALTIME 	( diff_type: Mov type: macro file: include/linux/time.h )
	-- include/uapi/linux/time.h
	++ #define CLOCK_REALTIME 0


CLOCK_MONOTONIC 	( diff_type: Mov type: macro file: include/linux/time.h )
	-- include/uapi/linux/time.h
	++ #define CLOCK_MONOTONIC 1


CLOCK_PROCESS_CPUTIME_ID 	( diff_type: Mov type: macro file: include/linux/time.h )
	-- include/uapi/linux/time.h
	++ #define CLOCK_PROCESS_CPUTIME_ID 2


CLOCK_THREAD_CPUTIME_ID 	( diff_type: Mov type: macro file: include/linux/time.h )
	-- include/uapi/linux/time.h
	++ #define CLOCK_THREAD_CPUTIME_ID 3


CLOCK_MONOTONIC_RAW 	( diff_type: Mov type: macro file: include/linux/time.h )
	-- include/uapi/linux/time.h
	++ #define CLOCK_MONOTONIC_RAW 4


CLOCK_REALTIME_COARSE 	( diff_type: Mov type: macro file: include/linux/time.h )
	-- include/uapi/linux/time.h
	++ #define CLOCK_REALTIME_COARSE 5


CLOCK_MONOTONIC_COARSE 	( diff_type: Mov type: macro file: include/linux/time.h )
	-- include/uapi/linux/time.h
	++ #define CLOCK_MONOTONIC_COARSE 6


CLOCK_BOOTTIME 	( diff_type: Mov type: macro file: include/linux/time.h )
	-- include/uapi/linux/time.h
	++ #define CLOCK_BOOTTIME 7


CLOCK_REALTIME_ALARM 	( diff_type: Mov type: macro file: include/linux/time.h )
	-- include/uapi/linux/time.h
	++ #define CLOCK_REALTIME_ALARM 8


CLOCK_BOOTTIME_ALARM 	( diff_type: Mov type: macro file: include/linux/time.h )
	-- include/uapi/linux/time.h
	++ #define CLOCK_BOOTTIME_ALARM 9


CLOCK_SGI_CYCLE 	( diff_type: Mov type: macro file: include/linux/time.h )
	-- include/uapi/linux/time.h
	++ #define CLOCK_SGI_CYCLE 10


MAX_CLOCKS 	( diff_type: Mov type: macro file: include/linux/time.h )
	-- include/uapi/linux/time.h
	++ #define MAX_CLOCKS 16


CLOCKS_MASK 	( diff_type: Mov type: macro file: include/linux/time.h )
	-- include/uapi/linux/time.h
	++ #define CLOCKS_MASK (CLOCK_REALTIME | CLOCK_MONOTONIC)


CLOCKS_MONO 	( diff_type: Mov type: macro file: include/linux/time.h )
	-- include/uapi/linux/time.h
	++ #define CLOCKS_MONO CLOCK_MONOTONIC


TIMER_ABSTIME 	( diff_type: Mov type: macro file: include/linux/time.h )
	-- include/uapi/linux/time.h
	++ #define TIMER_ABSTIME 0x01


_LINUX_PARAM_H 	( diff_type: Mov type: macro file: include/linux/param.h )
	-- include/uapi/linux/param.h
	++ #define _LINUX_PARAM_H


RUSAGE_SELF 	( diff_type: Mov type: macro file: include/linux/resource.h )
	-- include/uapi/linux/resource.h
	++ #define RUSAGE_SELF 0


RUSAGE_CHILDREN 	( diff_type: Mov type: macro file: include/linux/resource.h )
	-- include/uapi/linux/resource.h
	++ #define RUSAGE_CHILDREN (-1)


RUSAGE_BOTH 	( diff_type: Mov type: macro file: include/linux/resource.h )
	-- include/uapi/linux/resource.h
	++ #define RUSAGE_BOTH (-2)


RUSAGE_THREAD 	( diff_type: Mov type: macro file: include/linux/resource.h )
	-- include/uapi/linux/resource.h
	++ #define RUSAGE_THREAD 1


rusage 	( diff_type: Mov type: struct file: include/linux/resource.h )
	-- include/uapi/linux/resource.h
	++ struct rusage { struct timeval ru_utime; struct timeval ru_stime; long ru_maxrss; long ru_ixrss; long ru_idrss; long ru_isrss; long ru_minflt; long ru_majflt; long ru_nswap; long ru_inblock; long ru_oublock; long ru_msgsnd; long ru_msgrcv; long ru_nsignals; long ru_nvcsw; long ru_nivcsw; };


RLIM64_INFINITY 	( diff_type: Mov type: macro file: include/linux/resource.h )
	-- include/uapi/linux/resource.h
	++ #define RLIM64_INFINITY (~0ULL)


rlimit64 	( diff_type: Mov type: struct file: include/linux/resource.h )
	-- include/uapi/linux/resource.h
	++ struct rlimit64 { __u64 rlim_cur; __u64 rlim_max; };


PRIO_MIN 	( diff_type: Mov type: macro file: include/linux/resource.h )
	-- include/uapi/linux/resource.h
	++ #define PRIO_MIN (-20)


PRIO_MAX 	( diff_type: Mov type: macro file: include/linux/resource.h )
	-- include/uapi/linux/resource.h
	++ #define PRIO_MAX 20


PRIO_PROCESS 	( diff_type: Mov type: macro file: include/linux/resource.h )
	-- include/uapi/linux/resource.h
	++ #define PRIO_PROCESS 0


PRIO_PGRP 	( diff_type: Mov type: macro file: include/linux/resource.h )
	-- include/uapi/linux/resource.h
	++ #define PRIO_PGRP 1


PRIO_USER 	( diff_type: Mov type: macro file: include/linux/resource.h )
	-- include/uapi/linux/resource.h
	++ #define PRIO_USER 2


_STK_LIM 	( diff_type: Mov type: macro file: include/linux/resource.h )
	-- include/uapi/linux/resource.h
	++ #define _STK_LIM (8*1024*1024)


MLOCK_LIMIT 	( diff_type: Mov type: macro file: include/linux/resource.h )
	-- include/uapi/linux/resource.h
	++ #define MLOCK_LIMIT ((PAGE_SIZE > 64*1024) ? PAGE_SIZE : 64*1024)


TBASE_DEFERRABLE_FLAG 	( diff_type: Del type: macro file: include/linux/timer.h )
	-- #define TBASE_DEFERRABLE_FLAG (0x1)


TIMER_INITIALIZER 	( diff_type: Mod type: macro file: include/linux/timer.h )
	-- #define TIMER_INITIALIZER(_function,_expires,_data) { .entry = { .prev = TIMER_ENTRY_STATIC }, .function = (_function), .expires = (_expires), .data = (_data), .base = &boot_tvec_bases, .slack = -1, __TIMER_LOCKDEP_MAP_INITIALIZER( __FILE__ ":" __stringify(__LINE__)) }
	++ #define TIMER_INITIALIZER(_function,_expires,_data) __TIMER_INITIALIZER((_function), (_expires), (_data), 0)


TBASE_MAKE_DEFERRED 	( diff_type: Del type: macro file: include/linux/timer.h )
	-- #define TBASE_MAKE_DEFERRED(ptr) ((struct tvec_base *) ((unsigned char *)(ptr) + TBASE_DEFERRABLE_FLAG))


TIMER_DEFERRED_INITIALIZER 	( diff_type: Mod type: macro file: include/linux/timer.h )
	-- #define TIMER_DEFERRED_INITIALIZER(_function,_expires,_data) { .entry = { .prev = TIMER_ENTRY_STATIC }, .function = (_function), .expires = (_expires), .data = (_data), .base = TBASE_MAKE_DEFERRED(&boot_tvec_bases), __TIMER_LOCKDEP_MAP_INITIALIZER( __FILE__ ":" __stringify(__LINE__)) }
	++ #define TIMER_DEFERRED_INITIALIZER(_function,_expires,_data) __TIMER_INITIALIZER((_function), (_expires), (_data), TIMER_DEFERRABLE)


init_timer_key 	( diff_type: Mod type: prototype file: include/linux/timer.h )
	-- void init_timer_key(struct timer_list *timer,const char *name,struct lock_class_key *key);
	++ void init_timer_key(struct timer_list *timer,unsigned int flags,const char *name, struct lock_class_key *key);


init_timer_deferrable_key 	( diff_type: Del type: prototype file: include/linux/timer.h )
	-- void init_timer_deferrable_key(struct timer_list *timer,const char *name,struct lock_class_key *key);


init_timer 	( diff_type: Mod type: macro file: include/linux/timer.h )
	-- #define init_timer(timer) init_timer_key((timer), NULL, NULL)
	++ #define init_timer(timer) __init_timer((timer), 0)


init_timer_deferrable 	( diff_type: Mod type: macro file: include/linux/timer.h )
	-- #define init_timer_deferrable(timer) init_timer_deferrable_key((timer), NULL, NULL)
	++ #define init_timer_deferrable(timer) __init_timer((timer), TIMER_DEFERRABLE)


init_timer_on_stack 	( diff_type: Mod type: macro file: include/linux/timer.h )
	-- #define init_timer_on_stack(timer) init_timer_on_stack_key((timer), NULL, NULL)
	++ #define init_timer_on_stack(timer) __init_timer_on_stack((timer), 0)


setup_timer 	( diff_type: Mod type: macro file: include/linux/timer.h )
	-- #define setup_timer(timer,fn,data) setup_timer_key((timer), NULL, NULL, (fn), (data))
	++ #define setup_timer(timer,fn,data) __setup_timer((timer), (fn), (data), 0)


setup_timer_on_stack 	( diff_type: Mod type: macro file: include/linux/timer.h )
	-- #define setup_timer_on_stack(timer,fn,data) setup_timer_on_stack_key((timer), NULL, NULL, (fn), (data))
	++ #define setup_timer_on_stack(timer,fn,data) __setup_timer_on_stack((timer), (fn), (data), 0)


setup_deferrable_timer_on_stack 	( diff_type: Mod type: macro file: include/linux/timer.h )
	-- #define setup_deferrable_timer_on_stack(timer,fn,data) setup_deferrable_timer_on_stack_key((timer), NULL, NULL, (fn), (data))
	++ #define setup_deferrable_timer_on_stack(timer,fn,data) __setup_timer_on_stack((timer), (fn), (data), TIMER_DEFERRABLE)


init_timer_on_stack_key 	( diff_type: Mod type: function file: include/linux/timer.h )
	-- static inline void init_timer_on_stack_key(struct timer_list *timer,const char *name,struct lock_class_key *key)
	++ static inline void init_timer_on_stack_key(struct timer_list *timer,unsigned int flags, const char *name,struct lock_class_key *key)


setup_timer_key 	( diff_type: Del type: function file: include/linux/timer.h )
	-- static inline void setup_timer_key(struct timer_list * timer,const char *name,struct lock_class_key *key,void (*function)(unsigned long),unsigned long data)


setup_timer_on_stack_key 	( diff_type: Del type: function file: include/linux/timer.h )
	-- static inline void setup_timer_on_stack_key(struct timer_list *timer,const char *name,struct lock_class_key *key,void (*function)(unsigned long),unsigned long data)


setup_deferrable_timer_on_stack_key 	( diff_type: Del type: prototype file: include/linux/timer.h )
	-- extern void setup_deferrable_timer_on_stack_key(struct timer_list *timer,const char *name,struct lock_class_key *key,void (*function)(unsigned long),unsigned long data);


thread_group_cred 	( diff_type: Del type: struct file: include/linux/cred.h )
	-- struct thread_group_cred { atomic_t usage; pid_t tgid; spinlock_t lock; struct key __rcu *session_keyring; struct key *process_keyring; struct rcu_head rcu; };


cred 	( diff_type: Mod type: struct file: include/linux/cred.h )
	-- struct cred { atomic_t usage; atomic_t subscribers; void *put_addr; unsigned magic; #define CRED_MAGIC 0x43736564 #define CRED_MAGIC_DEAD 0x44656144 kuid_t uid; kgid_t gid; kuid_t suid; kgid_t sgid; kuid_t euid; kgid_t egid; kuid_t fsuid; kgid_t fsgid; unsigned securebits; kernel_cap_t cap_inheritable; kernel_cap_t cap_permitted; kernel_cap_t cap_effective; kernel_cap_t cap_bset; unsigned char jit_keyring; struct key *thread_keyring; struct key *request_key_auth; struct thread_group_cred *tgcred; void *security; struct user_struct *user; struct user_namespace *user_ns; struct group_info *group_info; struct rcu_head rcu; };
	++ struct cred { atomic_t usage; atomic_t subscribers; void *put_addr; unsigned magic; #define CRED_MAGIC 0x43736564 #define CRED_MAGIC_DEAD 0x44656144 kuid_t uid; kgid_t gid; kuid_t suid; kgid_t sgid; kuid_t euid; kgid_t egid; kuid_t fsuid; kgid_t fsgid; unsigned securebits; kernel_cap_t cap_inheritable; kernel_cap_t cap_permitted; kernel_cap_t cap_effective; kernel_cap_t cap_bset; unsigned char jit_keyring; struct key __rcu *session_keyring; struct key *process_keyring; struct key *thread_keyring; struct key *request_key_auth; void *security; struct user_struct *user; struct user_namespace *user_ns; struct group_info *group_info; struct rcu_head rcu; };


task_user_ns 	( diff_type: Del type: macro file: include/linux/cred.h )
	-- #define task_user_ns(task) (&init_user_ns)


idle_regs 	( diff_type: Del type: prototype file: arch/x86/include/asm/processor.h )
	-- extern struct pt_regs *idle_regs(struct pt_regs *);


kernel_thread 	( diff_type: All type: prototype file: arch/x86/include/asm/processor.h-->include/linux/sched.h )
	-- extern int kernel_thread(int (*fn)(void *),void *arg,unsigned long flags);
	++ extern pid_t kernel_thread(int (*fn)(void *),void *arg,unsigned long flags);


is_sync_kiocb 	( diff_type: Mod type: macro-->function file: include/linux/aio.h )
	-- #define is_sync_kiocb(iocb) ((iocb)->ki_key == KIOCB_SYNC_KEY)
	++ static inline bool is_sync_kiocb(struct kiocb *kiocb)


init_sync_kiocb 	( diff_type: Mod type: macro-->function file: include/linux/aio.h )
	-- #define init_sync_kiocb(x,filp) do { struct task_struct *tsk = current; (x)->ki_flags = 0; (x)->ki_users = 1; (x)->ki_key = KIOCB_SYNC_KEY; (x)->ki_filp = (filp); (x)->ki_ctx = NULL; (x)->ki_cancel = NULL; (x)->ki_retry = NULL; (x)->ki_dtor = NULL; (x)->ki_obj.tsk = tsk; (x)->ki_user_data = 0; (x)->private = NULL; } while (0)
	++ static inline void init_sync_kiocb(struct kiocb *kiocb,struct file *filp)


aio_ring_avail 	( diff_type: Mod type: macro-->function file: include/linux/aio.h )
	-- #define aio_ring_avail(info,ring) (((ring)->head + (info)->nr - 1 - (ring)->tail) % (info)->nr)
	++ static inline unsigned aio_ring_avail(struct aio_ring_info *info,struct aio_ring *ring)


___GFP_NOTRACK 	( diff_type: Mod type: macro file: include/linux/gfp.h )
	-- #define ___GFP_NOTRACK 0
	++ #define ___GFP_NOTRACK 0x200000u


GFP_RECLAIM_MASK 	( diff_type: Mod type: macro file: include/linux/gfp.h )
	-- #define GFP_RECLAIM_MASK (__GFP_WAIT|__GFP_HIGH|__GFP_IO|__GFP_FS| __GFP_NOWARN|__GFP_REPEAT|__GFP_NOFAIL| __GFP_NORETRY|__GFP_NOMEMALLOC)
	++ #define GFP_RECLAIM_MASK (__GFP_WAIT|__GFP_HIGH|__GFP_IO|__GFP_FS| __GFP_NOWARN|__GFP_REPEAT|__GFP_NOFAIL| __GFP_NORETRY|__GFP_MEMALLOC|__GFP_NOMEMALLOC)


kmem_cache_cpu 	( diff_type: Mod type: struct file: include/linux/slub_def.h )
	-- struct kmem_cache_cpu { void **freelist; unsigned long tid; struct page *page; struct page *partial; int node; unsigned stat[NR_SLUB_STAT_ITEMS]; };
	++ struct kmem_cache_cpu { void **freelist; unsigned long tid; struct page *page; struct page *partial; unsigned stat[NR_SLUB_STAT_ITEMS]; };


kmem_cache 	( diff_type: Mod type: struct file: include/linux/slab_def.h )
	-- struct kmem_cache { unsigned int batchcount; unsigned int limit; unsigned int shared; unsigned int buffer_size; u32 reciprocal_buffer_size; unsigned int flags; unsigned int num; unsigned int gfporder; gfp_t gfpflags; size_t colour; unsigned int colour_off; struct kmem_cache *slabp_cache; unsigned int slab_size; unsigned int dflags; void (*ctor)(void *obj); const char *name; struct list_head next; unsigned long num_active; unsigned long num_allocations; unsigned long high_mark; unsigned long grown; unsigned long reaped; unsigned long errors; unsigned long max_freeable; unsigned long node_allocs; unsigned long node_frees; unsigned long node_overflow; atomic_t allochit; atomic_t allocmiss; atomic_t freehit; atomic_t freemiss; int obj_offset; int obj_size; struct kmem_list3 **nodelists; struct array_cache *array[NR_CPUS]; };
	++ struct kmem_cache { unsigned int batchcount; unsigned int limit; unsigned int shared; unsigned int size; u32 reciprocal_buffer_size; unsigned int flags; unsigned int num; unsigned int gfporder; gfp_t allocflags; size_t colour; unsigned int colour_off; struct kmem_cache *slabp_cache; unsigned int slab_size; void (*ctor)(void *obj); const char *name; struct list_head list; int refcount; int object_size; int align; unsigned long num_active; unsigned long num_allocations; unsigned long high_mark; unsigned long grown; unsigned long reaped; unsigned long errors; unsigned long max_freeable; unsigned long node_allocs; unsigned long node_frees; unsigned long node_overflow; atomic_t allochit; atomic_t allocmiss; atomic_t freehit; atomic_t freemiss; int obj_offset; struct memcg_cache_params *memcg_params; struct kmem_list3 **nodelists; struct array_cache *array[NR_CPUS + MAX_NUMNODES]; };


kmem_cache_alloc_trace 	( diff_type: Mod type: function file: include/linux/slab_def.h )
	-- kmem_cache_alloc_trace(size_t size,struct kmem_cache *cachep,gfp_t flags)
	++ kmem_cache_alloc_trace(struct kmem_cache *cachep,gfp_t flags,size_t size)


kmem_cache_alloc_node_trace 	( diff_type: Mod type: function file: include/linux/slab_def.h )
	-- kmem_cache_alloc_node_trace(size_t size,struct kmem_cache *cachep,gfp_t flags,int nodeid)
	++ kmem_cache_alloc_node_trace(struct kmem_cache *cachep,gfp_t flags,int nodeid,size_t size)


slab_buffer_size 	( diff_type: Del type: function file: include/linux/slab_def.h )
	-- static inline size_t slab_buffer_size(struct kmem_cache *cachep)


preempt_disable 	( diff_type: Mod type: macro file: include/linux/preempt.h )
	-- #define preempt_disable() do { } while (0)
	++ #define preempt_disable() barrier()


sched_preempt_enable_no_resched 	( diff_type: Mod type: macro file: include/linux/preempt.h )
	-- #define sched_preempt_enable_no_resched() do { } while (0)
	++ #define sched_preempt_enable_no_resched() barrier()


preempt_enable_no_resched 	( diff_type: Mod type: macro file: include/linux/preempt.h )
	-- #define preempt_enable_no_resched() do { } while (0)
	++ #define preempt_enable_no_resched() barrier()


preempt_enable 	( diff_type: Mod type: macro file: include/linux/preempt.h )
	-- #define preempt_enable() do { } while (0)
	++ #define preempt_enable() barrier()


preempt_disable_notrace 	( diff_type: Mod type: macro file: include/linux/preempt.h )
	-- #define preempt_disable_notrace() do { } while (0)
	++ #define preempt_disable_notrace() barrier()


preempt_enable_no_resched_notrace 	( diff_type: Mod type: macro file: include/linux/preempt.h )
	-- #define preempt_enable_no_resched_notrace() do { } while (0)
	++ #define preempt_enable_no_resched_notrace() barrier()


preempt_enable_notrace 	( diff_type: Mod type: macro file: include/linux/preempt.h )
	-- #define preempt_enable_notrace() do { } while (0)
	++ #define preempt_enable_notrace() barrier()


account_system_vtime 	( diff_type: Del type: prototype file: include/linux/hardirq.h )
	-- extern void account_system_vtime(struct task_struct *tsk);


__irq_enter 	( diff_type: Mod type: macro file: include/linux/hardirq.h )
	-- #define __irq_enter() do { account_system_vtime(current); add_preempt_count(HARDIRQ_OFFSET); trace_hardirq_enter(); } while (0)
	++ #define __irq_enter() do { vtime_account_irq_enter(current); add_preempt_count(HARDIRQ_OFFSET); trace_hardirq_enter(); } while (0)


__irq_exit 	( diff_type: Mod type: macro file: include/linux/hardirq.h )
	-- #define __irq_exit() do { trace_hardirq_exit(); account_system_vtime(current); sub_preempt_count(HARDIRQ_OFFSET); } while (0)
	++ #define __irq_exit() do { trace_hardirq_exit(); vtime_account_irq_exit(current); sub_preempt_count(HARDIRQ_OFFSET); } while (0)


delayed_work 	( diff_type: Mod type: struct file: include/linux/workqueue.h )
	-- struct delayed_work { struct work_struct work; struct timer_list timer; };
	++ struct delayed_work { struct work_struct work; struct timer_list timer; int cpu; };


__DELAYED_WORK_INITIALIZER 	( diff_type: Mod type: macro file: include/linux/workqueue.h )
	-- #define __DELAYED_WORK_INITIALIZER(n,f) { .work = __WORK_INITIALIZER((n).work, (f)), .timer = TIMER_INITIALIZER(NULL, 0, 0), }
	++ #define __DELAYED_WORK_INITIALIZER(n,f,tflags) { .work = __WORK_INITIALIZER((n).work, (f)), .timer = __TIMER_INITIALIZER(delayed_work_timer_fn, 0, (unsigned long)&(n), (tflags) | TIMER_IRQSAFE), }


__DEFERRED_WORK_INITIALIZER 	( diff_type: Del type: macro file: include/linux/workqueue.h )
	-- #define __DEFERRED_WORK_INITIALIZER(n,f) { .work = __WORK_INITIALIZER((n).work, (f)), .timer = TIMER_DEFERRED_INITIALIZER(NULL, 0, 0), }


DECLARE_DELAYED_WORK 	( diff_type: Mod type: macro file: include/linux/workqueue.h )
	-- #define DECLARE_DELAYED_WORK(n,f) struct delayed_work n = __DELAYED_WORK_INITIALIZER(n, f)
	++ #define DECLARE_DELAYED_WORK(n,f) struct delayed_work n = __DELAYED_WORK_INITIALIZER(n, f, 0)


DECLARE_DEFERRED_WORK 	( diff_type: Del type: macro file: include/linux/workqueue.h )
	-- #define DECLARE_DEFERRED_WORK(n,f) struct delayed_work n = __DEFERRED_WORK_INITIALIZER(n, f)


INIT_DELAYED_WORK 	( diff_type: Mod type: macro file: include/linux/workqueue.h )
	-- #define INIT_DELAYED_WORK(_work,_func) do { INIT_WORK(&(_work)->work, (_func)); init_timer(&(_work)->timer); } while (0)
	++ #define INIT_DELAYED_WORK(_work,_func) __INIT_DELAYED_WORK(_work, _func, 0)


INIT_DELAYED_WORK_ONSTACK 	( diff_type: Mod type: macro file: include/linux/workqueue.h )
	-- #define INIT_DELAYED_WORK_ONSTACK(_work,_func) do { INIT_WORK_ONSTACK(&(_work)->work, (_func)); init_timer_on_stack(&(_work)->timer); } while (0)
	++ #define INIT_DELAYED_WORK_ONSTACK(_work,_func) __INIT_DELAYED_WORK_ONSTACK(_work, _func, 0)


INIT_DELAYED_WORK_DEFERRABLE 	( diff_type: Del type: macro file: include/linux/workqueue.h )
	-- #define INIT_DELAYED_WORK_DEFERRABLE(_work,_func) do { INIT_WORK(&(_work)->work, (_func)); init_timer_deferrable(&(_work)->timer); } while (0)


queue_work 	( diff_type: Mod type: prototype file: include/linux/workqueue.h )
	-- extern int queue_work(struct workqueue_struct *wq,struct work_struct *work);
	++ extern bool queue_work(struct workqueue_struct *wq,struct work_struct *work);


queue_work_on 	( diff_type: Mod type: prototype file: include/linux/workqueue.h )
	-- extern int queue_work_on(int cpu,struct workqueue_struct *wq,struct work_struct *work);
	++ extern bool queue_work_on(int cpu,struct workqueue_struct *wq,struct work_struct *work);


queue_delayed_work 	( diff_type: Mod type: prototype file: include/linux/workqueue.h )
	-- extern int queue_delayed_work(struct workqueue_struct *wq,struct delayed_work *work, unsigned long delay);
	++ extern bool queue_delayed_work(struct workqueue_struct *wq,struct delayed_work *work, unsigned long delay);


queue_delayed_work_on 	( diff_type: Mod type: prototype file: include/linux/workqueue.h )
	-- extern int queue_delayed_work_on(int cpu,struct workqueue_struct *wq,struct delayed_work *work, unsigned long delay);
	++ extern bool queue_delayed_work_on(int cpu,struct workqueue_struct *wq,struct delayed_work *work, unsigned long delay);


schedule_work 	( diff_type: Mod type: prototype file: include/linux/workqueue.h )
	-- extern int schedule_work(struct work_struct *work);
	++ extern bool schedule_work(struct work_struct *work);


schedule_work_on 	( diff_type: Mod type: prototype file: include/linux/workqueue.h )
	-- extern int schedule_work_on(int cpu,struct work_struct *work);
	++ extern bool schedule_work_on(int cpu,struct work_struct *work);


schedule_delayed_work 	( diff_type: Mod type: prototype file: include/linux/workqueue.h )
	-- extern int schedule_delayed_work(struct delayed_work *work,unsigned long delay);
	++ extern bool schedule_delayed_work(struct delayed_work *work,unsigned long delay);


schedule_delayed_work_on 	( diff_type: Mod type: prototype file: include/linux/workqueue.h )
	-- extern int schedule_delayed_work_on(int cpu,struct delayed_work *work,unsigned long delay);
	++ extern bool schedule_delayed_work_on(int cpu,struct delayed_work *work,unsigned long delay);


flush_work_sync 	( diff_type: Mod type: prototype-->function file: include/linux/workqueue.h )
	-- extern bool flush_work_sync(struct work_struct *work);
	++ static inline bool __deprecated flush_work_sync(struct work_struct *work)


flush_delayed_work_sync 	( diff_type: Mod type: prototype-->function file: include/linux/workqueue.h )
	-- extern bool flush_delayed_work_sync(struct delayed_work *work);
	++ static inline bool __deprecated flush_delayed_work_sync(struct delayed_work *dwork)


cancel_delayed_work 	( diff_type: Mod type: function-->prototype file: include/linux/workqueue.h )
	-- static inline bool cancel_delayed_work(struct delayed_work *work)
	++ extern bool cancel_delayed_work(struct delayed_work *dwork);


__cancel_delayed_work 	( diff_type: Mod type: function file: include/linux/workqueue.h )
	-- static inline bool __cancel_delayed_work(struct delayed_work *work)
	++ static inline bool __deprecated __cancel_delayed_work(struct delayed_work *work)


LINUX_PCI_REGS_H 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define LINUX_PCI_REGS_H


PCI_VENDOR_ID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_VENDOR_ID 0x00


PCI_DEVICE_ID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_DEVICE_ID 0x02


PCI_COMMAND 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_COMMAND 0x04


PCI_COMMAND_IO 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_COMMAND_IO 0x1


PCI_COMMAND_MEMORY 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_COMMAND_MEMORY 0x2


PCI_COMMAND_MASTER 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_COMMAND_MASTER 0x4


PCI_COMMAND_SPECIAL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_COMMAND_SPECIAL 0x8


PCI_COMMAND_INVALIDATE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_COMMAND_INVALIDATE 0x10


PCI_COMMAND_VGA_PALETTE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_COMMAND_VGA_PALETTE 0x20


PCI_COMMAND_PARITY 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_COMMAND_PARITY 0x40


PCI_COMMAND_WAIT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_COMMAND_WAIT 0x80


PCI_COMMAND_SERR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_COMMAND_SERR 0x100


PCI_COMMAND_FAST_BACK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_COMMAND_FAST_BACK 0x200


PCI_COMMAND_INTX_DISABLE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_COMMAND_INTX_DISABLE 0x400


PCI_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS 0x06


PCI_STATUS_INTERRUPT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_INTERRUPT 0x08


PCI_STATUS_CAP_LIST 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_CAP_LIST 0x10


PCI_STATUS_66MHZ 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_66MHZ 0x20


PCI_STATUS_UDF 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_UDF 0x40


PCI_STATUS_FAST_BACK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_FAST_BACK 0x80


PCI_STATUS_PARITY 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_PARITY 0x100


PCI_STATUS_DEVSEL_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_DEVSEL_MASK 0x600


PCI_STATUS_DEVSEL_FAST 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_DEVSEL_FAST 0x000


PCI_STATUS_DEVSEL_MEDIUM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_DEVSEL_MEDIUM 0x200


PCI_STATUS_DEVSEL_SLOW 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_DEVSEL_SLOW 0x400


PCI_STATUS_SIG_TARGET_ABORT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_SIG_TARGET_ABORT 0x800


PCI_STATUS_REC_TARGET_ABORT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_REC_TARGET_ABORT 0x1000


PCI_STATUS_REC_MASTER_ABORT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_REC_MASTER_ABORT 0x2000


PCI_STATUS_SIG_SYSTEM_ERROR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_SIG_SYSTEM_ERROR 0x4000


PCI_STATUS_DETECTED_PARITY 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_STATUS_DETECTED_PARITY 0x8000


PCI_CLASS_REVISION 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CLASS_REVISION 0x08


PCI_REVISION_ID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_REVISION_ID 0x08


PCI_CLASS_PROG 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CLASS_PROG 0x09


PCI_CLASS_DEVICE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CLASS_DEVICE 0x0a


PCI_CACHE_LINE_SIZE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CACHE_LINE_SIZE 0x0c


PCI_LATENCY_TIMER 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_LATENCY_TIMER 0x0d


PCI_HEADER_TYPE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_HEADER_TYPE 0x0e


PCI_HEADER_TYPE_NORMAL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_HEADER_TYPE_NORMAL 0


PCI_HEADER_TYPE_BRIDGE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_HEADER_TYPE_BRIDGE 1


PCI_HEADER_TYPE_CARDBUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_HEADER_TYPE_CARDBUS 2


PCI_BIST 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BIST 0x0f


PCI_BIST_CODE_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BIST_CODE_MASK 0x0f


PCI_BIST_START 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BIST_START 0x40


PCI_BIST_CAPABLE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BIST_CAPABLE 0x80


PCI_BASE_ADDRESS_0 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_0 0x10


PCI_BASE_ADDRESS_1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_1 0x14


PCI_BASE_ADDRESS_2 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_2 0x18


PCI_BASE_ADDRESS_3 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_3 0x1c


PCI_BASE_ADDRESS_4 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_4 0x20


PCI_BASE_ADDRESS_5 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_5 0x24


PCI_BASE_ADDRESS_SPACE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_SPACE 0x01


PCI_BASE_ADDRESS_SPACE_IO 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_SPACE_IO 0x01


PCI_BASE_ADDRESS_SPACE_MEMORY 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_SPACE_MEMORY 0x00


PCI_BASE_ADDRESS_MEM_TYPE_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_MEM_TYPE_MASK 0x06


PCI_BASE_ADDRESS_MEM_TYPE_32 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_MEM_TYPE_32 0x00


PCI_BASE_ADDRESS_MEM_TYPE_1M 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_MEM_TYPE_1M 0x02


PCI_BASE_ADDRESS_MEM_TYPE_64 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_MEM_TYPE_64 0x04


PCI_BASE_ADDRESS_MEM_PREFETCH 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_MEM_PREFETCH 0x08


PCI_BASE_ADDRESS_MEM_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_MEM_MASK (~0x0fUL)


PCI_BASE_ADDRESS_IO_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BASE_ADDRESS_IO_MASK (~0x03UL)


PCI_CARDBUS_CIS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CARDBUS_CIS 0x28


PCI_SUBSYSTEM_VENDOR_ID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SUBSYSTEM_VENDOR_ID 0x2c


PCI_SUBSYSTEM_ID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SUBSYSTEM_ID 0x2e


PCI_ROM_ADDRESS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ROM_ADDRESS 0x30


PCI_ROM_ADDRESS_ENABLE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ROM_ADDRESS_ENABLE 0x01


PCI_ROM_ADDRESS_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ROM_ADDRESS_MASK (~0x7ffUL)


PCI_CAPABILITY_LIST 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAPABILITY_LIST 0x34


PCI_INTERRUPT_LINE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_INTERRUPT_LINE 0x3c


PCI_INTERRUPT_PIN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_INTERRUPT_PIN 0x3d


PCI_MIN_GNT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MIN_GNT 0x3e


PCI_MAX_LAT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MAX_LAT 0x3f


PCI_PRIMARY_BUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PRIMARY_BUS 0x18


PCI_SECONDARY_BUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SECONDARY_BUS 0x19


PCI_SUBORDINATE_BUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SUBORDINATE_BUS 0x1a


PCI_SEC_LATENCY_TIMER 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SEC_LATENCY_TIMER 0x1b


PCI_IO_BASE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_IO_BASE 0x1c


PCI_IO_LIMIT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_IO_LIMIT 0x1d


PCI_IO_RANGE_TYPE_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_IO_RANGE_TYPE_MASK 0x0fUL


PCI_IO_RANGE_TYPE_16 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_IO_RANGE_TYPE_16 0x00


PCI_IO_RANGE_TYPE_32 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_IO_RANGE_TYPE_32 0x01


PCI_IO_RANGE_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_IO_RANGE_MASK (~0x0fUL)


PCI_SEC_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SEC_STATUS 0x1e


PCI_MEMORY_BASE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MEMORY_BASE 0x20


PCI_MEMORY_LIMIT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MEMORY_LIMIT 0x22


PCI_MEMORY_RANGE_TYPE_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MEMORY_RANGE_TYPE_MASK 0x0fUL


PCI_MEMORY_RANGE_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MEMORY_RANGE_MASK (~0x0fUL)


PCI_PREF_MEMORY_BASE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PREF_MEMORY_BASE 0x24


PCI_PREF_MEMORY_LIMIT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PREF_MEMORY_LIMIT 0x26


PCI_PREF_RANGE_TYPE_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PREF_RANGE_TYPE_MASK 0x0fUL


PCI_PREF_RANGE_TYPE_32 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PREF_RANGE_TYPE_32 0x00


PCI_PREF_RANGE_TYPE_64 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PREF_RANGE_TYPE_64 0x01


PCI_PREF_RANGE_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PREF_RANGE_MASK (~0x0fUL)


PCI_PREF_BASE_UPPER32 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PREF_BASE_UPPER32 0x28


PCI_PREF_LIMIT_UPPER32 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PREF_LIMIT_UPPER32 0x2c


PCI_IO_BASE_UPPER16 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_IO_BASE_UPPER16 0x30


PCI_IO_LIMIT_UPPER16 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_IO_LIMIT_UPPER16 0x32


PCI_ROM_ADDRESS1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ROM_ADDRESS1 0x38


PCI_BRIDGE_CONTROL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BRIDGE_CONTROL 0x3e


PCI_BRIDGE_CTL_PARITY 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BRIDGE_CTL_PARITY 0x01


PCI_BRIDGE_CTL_SERR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BRIDGE_CTL_SERR 0x02


PCI_BRIDGE_CTL_ISA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BRIDGE_CTL_ISA 0x04


PCI_BRIDGE_CTL_VGA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BRIDGE_CTL_VGA 0x08


PCI_BRIDGE_CTL_MASTER_ABORT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BRIDGE_CTL_MASTER_ABORT 0x20


PCI_BRIDGE_CTL_BUS_RESET 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BRIDGE_CTL_BUS_RESET 0x40


PCI_BRIDGE_CTL_FAST_BACK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_BRIDGE_CTL_FAST_BACK 0x80


PCI_CB_CAPABILITY_LIST 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_CAPABILITY_LIST 0x14


PCI_CB_SEC_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_SEC_STATUS 0x16


PCI_CB_PRIMARY_BUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_PRIMARY_BUS 0x18


PCI_CB_CARD_BUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_CARD_BUS 0x19


PCI_CB_SUBORDINATE_BUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_SUBORDINATE_BUS 0x1a


PCI_CB_LATENCY_TIMER 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_LATENCY_TIMER 0x1b


PCI_CB_MEMORY_BASE_0 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_MEMORY_BASE_0 0x1c


PCI_CB_MEMORY_LIMIT_0 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_MEMORY_LIMIT_0 0x20


PCI_CB_MEMORY_BASE_1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_MEMORY_BASE_1 0x24


PCI_CB_MEMORY_LIMIT_1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_MEMORY_LIMIT_1 0x28


PCI_CB_IO_BASE_0 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_IO_BASE_0 0x2c


PCI_CB_IO_BASE_0_HI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_IO_BASE_0_HI 0x2e


PCI_CB_IO_LIMIT_0 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_IO_LIMIT_0 0x30


PCI_CB_IO_LIMIT_0_HI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_IO_LIMIT_0_HI 0x32


PCI_CB_IO_BASE_1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_IO_BASE_1 0x34


PCI_CB_IO_BASE_1_HI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_IO_BASE_1_HI 0x36


PCI_CB_IO_LIMIT_1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_IO_LIMIT_1 0x38


PCI_CB_IO_LIMIT_1_HI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_IO_LIMIT_1_HI 0x3a


PCI_CB_IO_RANGE_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_IO_RANGE_MASK (~0x03UL)


PCI_CB_BRIDGE_CONTROL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_BRIDGE_CONTROL 0x3e


PCI_CB_BRIDGE_CTL_PARITY 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_BRIDGE_CTL_PARITY 0x01


PCI_CB_BRIDGE_CTL_SERR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_BRIDGE_CTL_SERR 0x02


PCI_CB_BRIDGE_CTL_ISA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_BRIDGE_CTL_ISA 0x04


PCI_CB_BRIDGE_CTL_VGA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_BRIDGE_CTL_VGA 0x08


PCI_CB_BRIDGE_CTL_MASTER_ABORT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_BRIDGE_CTL_MASTER_ABORT 0x20


PCI_CB_BRIDGE_CTL_CB_RESET 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_BRIDGE_CTL_CB_RESET 0x40


PCI_CB_BRIDGE_CTL_16BIT_INT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_BRIDGE_CTL_16BIT_INT 0x80


PCI_CB_BRIDGE_CTL_PREFETCH_MEM0 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_BRIDGE_CTL_PREFETCH_MEM0 0x100


PCI_CB_BRIDGE_CTL_PREFETCH_MEM1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_BRIDGE_CTL_PREFETCH_MEM1 0x200


PCI_CB_BRIDGE_CTL_POST_WRITES 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_BRIDGE_CTL_POST_WRITES 0x400


PCI_CB_SUBSYSTEM_VENDOR_ID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_SUBSYSTEM_VENDOR_ID 0x40


PCI_CB_SUBSYSTEM_ID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_SUBSYSTEM_ID 0x42


PCI_CB_LEGACY_MODE_BASE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CB_LEGACY_MODE_BASE 0x44


PCI_CAP_LIST_ID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_LIST_ID 0


PCI_CAP_ID_PM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_PM 0x01


PCI_CAP_ID_AGP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_AGP 0x02


PCI_CAP_ID_VPD 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_VPD 0x03


PCI_CAP_ID_SLOTID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_SLOTID 0x04


PCI_CAP_ID_MSI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_MSI 0x05


PCI_CAP_ID_CHSWP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_CHSWP 0x06


PCI_CAP_ID_PCIX 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_PCIX 0x07


PCI_CAP_ID_HT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_HT 0x08


PCI_CAP_ID_VNDR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_VNDR 0x09


PCI_CAP_ID_DBG 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_DBG 0x0A


PCI_CAP_ID_CCRC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_CCRC 0x0B


PCI_CAP_ID_SHPC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_SHPC 0x0C


PCI_CAP_ID_SSVID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_SSVID 0x0D


PCI_CAP_ID_AGP3 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_AGP3 0x0E


PCI_CAP_ID_EXP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_EXP 0x10


PCI_CAP_ID_MSIX 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_MSIX 0x11


PCI_CAP_ID_AF 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_ID_AF 0x13


PCI_CAP_LIST_NEXT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_LIST_NEXT 1


PCI_CAP_FLAGS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_FLAGS 2


PCI_CAP_SIZEOF 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CAP_SIZEOF 4


PCI_PM_PMC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_PMC 2


PCI_PM_CAP_VER_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_VER_MASK 0x0007


PCI_PM_CAP_PME_CLOCK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_PME_CLOCK 0x0008


PCI_PM_CAP_RESERVED 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_RESERVED 0x0010


PCI_PM_CAP_DSI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_DSI 0x0020


PCI_PM_CAP_AUX_POWER 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_AUX_POWER 0x01C0


PCI_PM_CAP_D1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_D1 0x0200


PCI_PM_CAP_D2 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_D2 0x0400


PCI_PM_CAP_PME 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_PME 0x0800


PCI_PM_CAP_PME_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_PME_MASK 0xF800


PCI_PM_CAP_PME_D0 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_PME_D0 0x0800


PCI_PM_CAP_PME_D1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_PME_D1 0x1000


PCI_PM_CAP_PME_D2 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_PME_D2 0x2000


PCI_PM_CAP_PME_D3 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_PME_D3 0x4000


PCI_PM_CAP_PME_D3cold 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_PME_D3cold 0x8000


PCI_PM_CAP_PME_SHIFT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CAP_PME_SHIFT 11


PCI_PM_CTRL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CTRL 4


PCI_PM_CTRL_STATE_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CTRL_STATE_MASK 0x0003


PCI_PM_CTRL_NO_SOFT_RESET 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CTRL_NO_SOFT_RESET 0x0008


PCI_PM_CTRL_PME_ENABLE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CTRL_PME_ENABLE 0x0100


PCI_PM_CTRL_DATA_SEL_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CTRL_DATA_SEL_MASK 0x1e00


PCI_PM_CTRL_DATA_SCALE_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CTRL_DATA_SCALE_MASK 0x6000


PCI_PM_CTRL_PME_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_CTRL_PME_STATUS 0x8000


PCI_PM_PPB_EXTENSIONS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_PPB_EXTENSIONS 6


PCI_PM_PPB_B2_B3 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_PPB_B2_B3 0x40


PCI_PM_BPCC_ENABLE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_BPCC_ENABLE 0x80


PCI_PM_DATA_REGISTER 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_DATA_REGISTER 7


PCI_PM_SIZEOF 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PM_SIZEOF 8


PCI_AGP_VERSION 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_VERSION 2


PCI_AGP_RFU 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_RFU 3


PCI_AGP_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_STATUS 4


PCI_AGP_STATUS_RQ_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_STATUS_RQ_MASK 0xff000000


PCI_AGP_STATUS_SBA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_STATUS_SBA 0x0200


PCI_AGP_STATUS_64BIT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_STATUS_64BIT 0x0020


PCI_AGP_STATUS_FW 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_STATUS_FW 0x0010


PCI_AGP_STATUS_RATE4 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_STATUS_RATE4 0x0004


PCI_AGP_STATUS_RATE2 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_STATUS_RATE2 0x0002


PCI_AGP_STATUS_RATE1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_STATUS_RATE1 0x0001


PCI_AGP_COMMAND 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_COMMAND 8


PCI_AGP_COMMAND_RQ_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_COMMAND_RQ_MASK 0xff000000


PCI_AGP_COMMAND_SBA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_COMMAND_SBA 0x0200


PCI_AGP_COMMAND_AGP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_COMMAND_AGP 0x0100


PCI_AGP_COMMAND_64BIT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_COMMAND_64BIT 0x0020


PCI_AGP_COMMAND_FW 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_COMMAND_FW 0x0010


PCI_AGP_COMMAND_RATE4 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_COMMAND_RATE4 0x0004


PCI_AGP_COMMAND_RATE2 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_COMMAND_RATE2 0x0002


PCI_AGP_COMMAND_RATE1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_COMMAND_RATE1 0x0001


PCI_AGP_SIZEOF 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AGP_SIZEOF 12


PCI_VPD_ADDR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_VPD_ADDR 2


PCI_VPD_ADDR_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_VPD_ADDR_MASK 0x7fff


PCI_VPD_ADDR_F 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_VPD_ADDR_F 0x8000


PCI_VPD_DATA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_VPD_DATA 4


PCI_SID_ESR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SID_ESR 2


PCI_SID_ESR_NSLOTS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SID_ESR_NSLOTS 0x1f


PCI_SID_ESR_FIC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SID_ESR_FIC 0x20


PCI_SID_CHASSIS_NR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SID_CHASSIS_NR 3


PCI_MSI_FLAGS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSI_FLAGS 2


PCI_MSI_FLAGS_64BIT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSI_FLAGS_64BIT 0x80


PCI_MSI_FLAGS_QSIZE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSI_FLAGS_QSIZE 0x70


PCI_MSI_FLAGS_QMASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSI_FLAGS_QMASK 0x0e


PCI_MSI_FLAGS_ENABLE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSI_FLAGS_ENABLE 0x01


PCI_MSI_FLAGS_MASKBIT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSI_FLAGS_MASKBIT 0x100


PCI_MSI_RFU 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSI_RFU 3


PCI_MSI_ADDRESS_LO 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSI_ADDRESS_LO 4


PCI_MSI_ADDRESS_HI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSI_ADDRESS_HI 8


PCI_MSI_DATA_32 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSI_DATA_32 8


PCI_MSI_MASK_32 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSI_MASK_32 12


PCI_MSI_DATA_64 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSI_DATA_64 12


PCI_MSI_MASK_64 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSI_MASK_64 16


PCI_MSIX_FLAGS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSIX_FLAGS 2


PCI_MSIX_FLAGS_QSIZE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSIX_FLAGS_QSIZE 0x7FF


PCI_MSIX_FLAGS_ENABLE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSIX_FLAGS_ENABLE (1 << 15)


PCI_MSIX_FLAGS_MASKALL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSIX_FLAGS_MASKALL (1 << 14)


PCI_MSIX_TABLE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSIX_TABLE 4


PCI_MSIX_PBA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSIX_PBA 8


PCI_MSIX_FLAGS_BIRMASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSIX_FLAGS_BIRMASK (7 << 0)


PCI_MSIX_ENTRY_SIZE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSIX_ENTRY_SIZE 16


PCI_MSIX_ENTRY_LOWER_ADDR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSIX_ENTRY_LOWER_ADDR 0


PCI_MSIX_ENTRY_UPPER_ADDR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSIX_ENTRY_UPPER_ADDR 4


PCI_MSIX_ENTRY_DATA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSIX_ENTRY_DATA 8


PCI_MSIX_ENTRY_VECTOR_CTRL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSIX_ENTRY_VECTOR_CTRL 12


PCI_MSIX_ENTRY_CTRL_MASKBIT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_MSIX_ENTRY_CTRL_MASKBIT 1


PCI_CHSWP_CSR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CHSWP_CSR 2


PCI_CHSWP_DHA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CHSWP_DHA 0x01


PCI_CHSWP_EIM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CHSWP_EIM 0x02


PCI_CHSWP_PIE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CHSWP_PIE 0x04


PCI_CHSWP_LOO 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CHSWP_LOO 0x08


PCI_CHSWP_PI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CHSWP_PI 0x30


PCI_CHSWP_EXT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CHSWP_EXT 0x40


PCI_CHSWP_INS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_CHSWP_INS 0x80


PCI_AF_LENGTH 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AF_LENGTH 2


PCI_AF_CAP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AF_CAP 3


PCI_AF_CAP_TP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AF_CAP_TP 0x01


PCI_AF_CAP_FLR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AF_CAP_FLR 0x02


PCI_AF_CTRL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AF_CTRL 4


PCI_AF_CTRL_FLR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AF_CTRL_FLR 0x01


PCI_AF_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AF_STATUS 5


PCI_AF_STATUS_TP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_AF_STATUS_TP 0x01


PCI_X_CMD 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD 2


PCI_X_CMD_DPERR_E 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_DPERR_E 0x0001


PCI_X_CMD_ERO 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_ERO 0x0002


PCI_X_CMD_READ_512 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_READ_512 0x0000


PCI_X_CMD_READ_1K 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_READ_1K 0x0004


PCI_X_CMD_READ_2K 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_READ_2K 0x0008


PCI_X_CMD_READ_4K 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_READ_4K 0x000c


PCI_X_CMD_MAX_READ 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_MAX_READ 0x000c


PCI_X_CMD_SPLIT_1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_SPLIT_1 0x0000


PCI_X_CMD_SPLIT_2 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_SPLIT_2 0x0010


PCI_X_CMD_SPLIT_3 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_SPLIT_3 0x0020


PCI_X_CMD_SPLIT_4 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_SPLIT_4 0x0030


PCI_X_CMD_SPLIT_8 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_SPLIT_8 0x0040


PCI_X_CMD_SPLIT_12 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_SPLIT_12 0x0050


PCI_X_CMD_SPLIT_16 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_SPLIT_16 0x0060


PCI_X_CMD_SPLIT_32 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_SPLIT_32 0x0070


PCI_X_CMD_MAX_SPLIT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_MAX_SPLIT 0x0070


PCI_X_CMD_VERSION 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_CMD_VERSION(x) (((x) >> 12) & 3)


PCI_X_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS 4


PCI_X_STATUS_DEVFN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS_DEVFN 0x000000ff


PCI_X_STATUS_BUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS_BUS 0x0000ff00


PCI_X_STATUS_64BIT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS_64BIT 0x00010000


PCI_X_STATUS_133MHZ 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS_133MHZ 0x00020000


PCI_X_STATUS_SPL_DISC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS_SPL_DISC 0x00040000


PCI_X_STATUS_UNX_SPL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS_UNX_SPL 0x00080000


PCI_X_STATUS_COMPLEX 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS_COMPLEX 0x00100000


PCI_X_STATUS_MAX_READ 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS_MAX_READ 0x00600000


PCI_X_STATUS_MAX_SPLIT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS_MAX_SPLIT 0x03800000


PCI_X_STATUS_MAX_CUM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS_MAX_CUM 0x1c000000


PCI_X_STATUS_SPL_ERR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS_SPL_ERR 0x20000000


PCI_X_STATUS_266MHZ 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS_266MHZ 0x40000000


PCI_X_STATUS_533MHZ 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_X_STATUS_533MHZ 0x80000000


PCI_SSVID_VENDOR_ID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SSVID_VENDOR_ID 4


PCI_SSVID_DEVICE_ID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SSVID_DEVICE_ID 6


PCI_EXP_FLAGS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_FLAGS 2


PCI_EXP_FLAGS_VERS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_FLAGS_VERS 0x000f


PCI_EXP_FLAGS_TYPE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_FLAGS_TYPE 0x00f0


PCI_EXP_TYPE_ENDPOINT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_TYPE_ENDPOINT 0x0


PCI_EXP_TYPE_LEG_END 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_TYPE_LEG_END 0x1


PCI_EXP_TYPE_ROOT_PORT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_TYPE_ROOT_PORT 0x4


PCI_EXP_TYPE_UPSTREAM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_TYPE_UPSTREAM 0x5


PCI_EXP_TYPE_DOWNSTREAM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_TYPE_DOWNSTREAM 0x6


PCI_EXP_TYPE_PCI_BRIDGE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_TYPE_PCI_BRIDGE 0x7


PCI_EXP_TYPE_PCIE_BRIDGE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_TYPE_PCIE_BRIDGE 0x8


PCI_EXP_TYPE_RC_END 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_TYPE_RC_END 0x9


PCI_EXP_TYPE_RC_EC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_TYPE_RC_EC 0xa


PCI_EXP_FLAGS_SLOT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_FLAGS_SLOT 0x0100


PCI_EXP_FLAGS_IRQ 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_FLAGS_IRQ 0x3e00


PCI_EXP_DEVCAP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP 4


PCI_EXP_DEVCAP_PAYLOAD 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP_PAYLOAD 0x07


PCI_EXP_DEVCAP_PHANTOM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP_PHANTOM 0x18


PCI_EXP_DEVCAP_EXT_TAG 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP_EXT_TAG 0x20


PCI_EXP_DEVCAP_L0S 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP_L0S 0x1c0


PCI_EXP_DEVCAP_L1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP_L1 0xe00


PCI_EXP_DEVCAP_ATN_BUT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP_ATN_BUT 0x1000


PCI_EXP_DEVCAP_ATN_IND 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP_ATN_IND 0x2000


PCI_EXP_DEVCAP_PWR_IND 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP_PWR_IND 0x4000


PCI_EXP_DEVCAP_RBER 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP_RBER 0x8000


PCI_EXP_DEVCAP_PWR_VAL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP_PWR_VAL 0x3fc0000


PCI_EXP_DEVCAP_PWR_SCL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP_PWR_SCL 0xc000000


PCI_EXP_DEVCAP_FLR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP_FLR 0x10000000


PCI_EXP_DEVCTL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL 8


PCI_EXP_DEVCTL_CERE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL_CERE 0x0001


PCI_EXP_DEVCTL_NFERE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL_NFERE 0x0002


PCI_EXP_DEVCTL_FERE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL_FERE 0x0004


PCI_EXP_DEVCTL_URRE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL_URRE 0x0008


PCI_EXP_DEVCTL_RELAX_EN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL_RELAX_EN 0x0010


PCI_EXP_DEVCTL_PAYLOAD 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL_PAYLOAD 0x00e0


PCI_EXP_DEVCTL_EXT_TAG 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL_EXT_TAG 0x0100


PCI_EXP_DEVCTL_PHANTOM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL_PHANTOM 0x0200


PCI_EXP_DEVCTL_AUX_PME 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL_AUX_PME 0x0400


PCI_EXP_DEVCTL_NOSNOOP_EN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL_NOSNOOP_EN 0x0800


PCI_EXP_DEVCTL_READRQ 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL_READRQ 0x7000


PCI_EXP_DEVCTL_BCR_FLR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL_BCR_FLR 0x8000


PCI_EXP_DEVSTA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVSTA 10


PCI_EXP_DEVSTA_CED 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVSTA_CED 0x01


PCI_EXP_DEVSTA_NFED 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVSTA_NFED 0x02


PCI_EXP_DEVSTA_FED 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVSTA_FED 0x04


PCI_EXP_DEVSTA_URD 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVSTA_URD 0x08


PCI_EXP_DEVSTA_AUXPD 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVSTA_AUXPD 0x10


PCI_EXP_DEVSTA_TRPND 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVSTA_TRPND 0x20


PCI_EXP_LNKCAP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCAP 12


PCI_EXP_LNKCAP_SLS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCAP_SLS 0x0000000f


PCI_EXP_LNKCAP_MLW 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCAP_MLW 0x000003f0


PCI_EXP_LNKCAP_ASPMS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCAP_ASPMS 0x00000c00


PCI_EXP_LNKCAP_L0SEL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCAP_L0SEL 0x00007000


PCI_EXP_LNKCAP_L1EL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCAP_L1EL 0x00038000


PCI_EXP_LNKCAP_CLKPM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCAP_CLKPM 0x00040000


PCI_EXP_LNKCAP_SDERC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCAP_SDERC 0x00080000


PCI_EXP_LNKCAP_DLLLARC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCAP_DLLLARC 0x00100000


PCI_EXP_LNKCAP_LBNC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCAP_LBNC 0x00200000


PCI_EXP_LNKCAP_PN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCAP_PN 0xff000000


PCI_EXP_LNKCTL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCTL 16


PCI_EXP_LNKCTL_ASPMC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCTL_ASPMC 0x0003


PCI_EXP_LNKCTL_RCB 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCTL_RCB 0x0008


PCI_EXP_LNKCTL_LD 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCTL_LD 0x0010


PCI_EXP_LNKCTL_RL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCTL_RL 0x0020


PCI_EXP_LNKCTL_CCC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCTL_CCC 0x0040


PCI_EXP_LNKCTL_ES 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCTL_ES 0x0080


PCI_EXP_LNKCTL_CLKREQ_EN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCTL_CLKREQ_EN 0x100


PCI_EXP_LNKCTL_HAWD 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCTL_HAWD 0x0200


PCI_EXP_LNKCTL_LBMIE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCTL_LBMIE 0x0400


PCI_EXP_LNKCTL_LABIE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCTL_LABIE 0x0800


PCI_EXP_LNKSTA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKSTA 18


PCI_EXP_LNKSTA_CLS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKSTA_CLS 0x000f


PCI_EXP_LNKSTA_CLS_2_5GB 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKSTA_CLS_2_5GB 0x01


PCI_EXP_LNKSTA_CLS_5_0GB 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKSTA_CLS_5_0GB 0x02


PCI_EXP_LNKSTA_NLW 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKSTA_NLW 0x03f0


PCI_EXP_LNKSTA_NLW_SHIFT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKSTA_NLW_SHIFT 4


PCI_EXP_LNKSTA_LT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKSTA_LT 0x0800


PCI_EXP_LNKSTA_SLC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKSTA_SLC 0x1000


PCI_EXP_LNKSTA_DLLLA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKSTA_DLLLA 0x2000


PCI_EXP_LNKSTA_LBMS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKSTA_LBMS 0x4000


PCI_EXP_LNKSTA_LABS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKSTA_LABS 0x8000


PCI_EXP_SLTCAP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCAP 20


PCI_EXP_SLTCAP_ABP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCAP_ABP 0x00000001


PCI_EXP_SLTCAP_PCP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCAP_PCP 0x00000002


PCI_EXP_SLTCAP_MRLSP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCAP_MRLSP 0x00000004


PCI_EXP_SLTCAP_AIP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCAP_AIP 0x00000008


PCI_EXP_SLTCAP_PIP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCAP_PIP 0x00000010


PCI_EXP_SLTCAP_HPS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCAP_HPS 0x00000020


PCI_EXP_SLTCAP_HPC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCAP_HPC 0x00000040


PCI_EXP_SLTCAP_SPLV 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCAP_SPLV 0x00007f80


PCI_EXP_SLTCAP_SPLS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCAP_SPLS 0x00018000


PCI_EXP_SLTCAP_EIP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCAP_EIP 0x00020000


PCI_EXP_SLTCAP_NCCS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCAP_NCCS 0x00040000


PCI_EXP_SLTCAP_PSN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCAP_PSN 0xfff80000


PCI_EXP_SLTCTL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCTL 24


PCI_EXP_SLTCTL_ABPE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCTL_ABPE 0x0001


PCI_EXP_SLTCTL_PFDE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCTL_PFDE 0x0002


PCI_EXP_SLTCTL_MRLSCE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCTL_MRLSCE 0x0004


PCI_EXP_SLTCTL_PDCE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCTL_PDCE 0x0008


PCI_EXP_SLTCTL_CCIE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCTL_CCIE 0x0010


PCI_EXP_SLTCTL_HPIE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCTL_HPIE 0x0020


PCI_EXP_SLTCTL_AIC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCTL_AIC 0x00c0


PCI_EXP_SLTCTL_PIC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCTL_PIC 0x0300


PCI_EXP_SLTCTL_PCC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCTL_PCC 0x0400


PCI_EXP_SLTCTL_EIC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCTL_EIC 0x0800


PCI_EXP_SLTCTL_DLLSCE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCTL_DLLSCE 0x1000


PCI_EXP_SLTSTA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTSTA 26


PCI_EXP_SLTSTA_ABP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTSTA_ABP 0x0001


PCI_EXP_SLTSTA_PFD 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTSTA_PFD 0x0002


PCI_EXP_SLTSTA_MRLSC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTSTA_MRLSC 0x0004


PCI_EXP_SLTSTA_PDC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTSTA_PDC 0x0008


PCI_EXP_SLTSTA_CC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTSTA_CC 0x0010


PCI_EXP_SLTSTA_MRLSS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTSTA_MRLSS 0x0020


PCI_EXP_SLTSTA_PDS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTSTA_PDS 0x0040


PCI_EXP_SLTSTA_EIS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTSTA_EIS 0x0080


PCI_EXP_SLTSTA_DLLSC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTSTA_DLLSC 0x0100


PCI_EXP_RTCTL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_RTCTL 28


PCI_EXP_RTCTL_SECEE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_RTCTL_SECEE 0x01


PCI_EXP_RTCTL_SENFEE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_RTCTL_SENFEE 0x02


PCI_EXP_RTCTL_SEFEE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_RTCTL_SEFEE 0x04


PCI_EXP_RTCTL_PMEIE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_RTCTL_PMEIE 0x08


PCI_EXP_RTCTL_CRSSVE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_RTCTL_CRSSVE 0x10


PCI_EXP_RTCAP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_RTCAP 30


PCI_EXP_RTSTA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_RTSTA 32


PCI_EXP_RTSTA_PME 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_RTSTA_PME 0x10000


PCI_EXP_RTSTA_PENDING 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_RTSTA_PENDING 0x20000


PCI_EXP_DEVCAP2 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP2 36


PCI_EXP_DEVCAP2_ARI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP2_ARI 0x20


PCI_EXP_DEVCAP2_LTR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCAP2_LTR 0x800


PCI_EXP_OBFF_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_OBFF_MASK 0xc0000


PCI_EXP_OBFF_MSG 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_OBFF_MSG 0x40000


PCI_EXP_OBFF_WAKE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_OBFF_WAKE 0x80000


PCI_EXP_DEVCTL2 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL2 40


PCI_EXP_DEVCTL2_ARI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_DEVCTL2_ARI 0x20


PCI_EXP_IDO_REQ_EN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_IDO_REQ_EN 0x100


PCI_EXP_IDO_CMP_EN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_IDO_CMP_EN 0x200


PCI_EXP_LTR_EN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LTR_EN 0x400


PCI_EXP_OBFF_MSGA_EN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_OBFF_MSGA_EN 0x2000


PCI_EXP_OBFF_MSGB_EN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_OBFF_MSGB_EN 0x4000


PCI_EXP_OBFF_WAKE_EN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_OBFF_WAKE_EN 0x6000


PCI_EXP_LNKCTL2 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_LNKCTL2 48


PCI_EXP_SLTCTL2 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXP_SLTCTL2 56


PCI_EXT_CAP_ID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXT_CAP_ID(header) (header & 0x0000ffff)


PCI_EXT_CAP_VER 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXT_CAP_VER(header) ((header >> 16) & 0xf)


PCI_EXT_CAP_NEXT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_EXT_CAP_NEXT(header) ((header >> 20) & 0xffc)


PCI_EXT_CAP_ID_ERR 	( diff_type: All type: macro file: include/linux/pci_regs.h-->include/uapi/linux/pci_regs.h )
	-- #define PCI_EXT_CAP_ID_ERR 1
	++ #define PCI_EXT_CAP_ID_ERR 0x01


PCI_EXT_CAP_ID_VC 	( diff_type: All type: macro file: include/linux/pci_regs.h-->include/uapi/linux/pci_regs.h )
	-- #define PCI_EXT_CAP_ID_VC 2
	++ #define PCI_EXT_CAP_ID_VC 0x02


PCI_EXT_CAP_ID_DSN 	( diff_type: All type: macro file: include/linux/pci_regs.h-->include/uapi/linux/pci_regs.h )
	-- #define PCI_EXT_CAP_ID_DSN 3
	++ #define PCI_EXT_CAP_ID_DSN 0x03


PCI_EXT_CAP_ID_PWR 	( diff_type: All type: macro file: include/linux/pci_regs.h-->include/uapi/linux/pci_regs.h )
	-- #define PCI_EXT_CAP_ID_PWR 4
	++ #define PCI_EXT_CAP_ID_PWR 0x04


PCI_EXT_CAP_ID_VNDR 	( diff_type: All type: macro file: include/linux/pci_regs.h-->include/uapi/linux/pci_regs.h )
	-- #define PCI_EXT_CAP_ID_VNDR 11
	++ #define PCI_EXT_CAP_ID_VNDR 0x0B


PCI_EXT_CAP_ID_ACS 	( diff_type: All type: macro file: include/linux/pci_regs.h-->include/uapi/linux/pci_regs.h )
	-- #define PCI_EXT_CAP_ID_ACS 13
	++ #define PCI_EXT_CAP_ID_ACS 0x0D


PCI_EXT_CAP_ID_ARI 	( diff_type: All type: macro file: include/linux/pci_regs.h-->include/uapi/linux/pci_regs.h )
	-- #define PCI_EXT_CAP_ID_ARI 14
	++ #define PCI_EXT_CAP_ID_ARI 0x0E


PCI_EXT_CAP_ID_ATS 	( diff_type: All type: macro file: include/linux/pci_regs.h-->include/uapi/linux/pci_regs.h )
	-- #define PCI_EXT_CAP_ID_ATS 15
	++ #define PCI_EXT_CAP_ID_ATS 0x0F


PCI_EXT_CAP_ID_SRIOV 	( diff_type: All type: macro file: include/linux/pci_regs.h-->include/uapi/linux/pci_regs.h )
	-- #define PCI_EXT_CAP_ID_SRIOV 16
	++ #define PCI_EXT_CAP_ID_SRIOV 0x10


PCI_EXT_CAP_ID_PRI 	( diff_type: All type: macro file: include/linux/pci_regs.h-->include/uapi/linux/pci_regs.h )
	-- #define PCI_EXT_CAP_ID_PRI 19
	++ #define PCI_EXT_CAP_ID_PRI 0x13


PCI_EXT_CAP_ID_LTR 	( diff_type: All type: macro file: include/linux/pci_regs.h-->include/uapi/linux/pci_regs.h )
	-- #define PCI_EXT_CAP_ID_LTR 24
	++ #define PCI_EXT_CAP_ID_LTR 0x18


PCI_EXT_CAP_ID_PASID 	( diff_type: All type: macro file: include/linux/pci_regs.h-->include/uapi/linux/pci_regs.h )
	-- #define PCI_EXT_CAP_ID_PASID 27
	++ #define PCI_EXT_CAP_ID_PASID 0x1B


PCI_ERR_UNCOR_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNCOR_STATUS 4


PCI_ERR_UNC_TRAIN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNC_TRAIN 0x00000001


PCI_ERR_UNC_DLP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNC_DLP 0x00000010


PCI_ERR_UNC_POISON_TLP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNC_POISON_TLP 0x00001000


PCI_ERR_UNC_FCP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNC_FCP 0x00002000


PCI_ERR_UNC_COMP_TIME 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNC_COMP_TIME 0x00004000


PCI_ERR_UNC_COMP_ABORT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNC_COMP_ABORT 0x00008000


PCI_ERR_UNC_UNX_COMP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNC_UNX_COMP 0x00010000


PCI_ERR_UNC_RX_OVER 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNC_RX_OVER 0x00020000


PCI_ERR_UNC_MALF_TLP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNC_MALF_TLP 0x00040000


PCI_ERR_UNC_ECRC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNC_ECRC 0x00080000


PCI_ERR_UNC_UNSUP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNC_UNSUP 0x00100000


PCI_ERR_UNCOR_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNCOR_MASK 8


PCI_ERR_UNCOR_SEVER 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_UNCOR_SEVER 12


PCI_ERR_COR_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_COR_STATUS 16


PCI_ERR_COR_RCVR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_COR_RCVR 0x00000001


PCI_ERR_COR_BAD_TLP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_COR_BAD_TLP 0x00000040


PCI_ERR_COR_BAD_DLLP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_COR_BAD_DLLP 0x00000080


PCI_ERR_COR_REP_ROLL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_COR_REP_ROLL 0x00000100


PCI_ERR_COR_REP_TIMER 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_COR_REP_TIMER 0x00001000


PCI_ERR_COR_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_COR_MASK 20


PCI_ERR_CAP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_CAP 24


PCI_ERR_CAP_FEP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_CAP_FEP(x) ((x) & 31)


PCI_ERR_CAP_ECRC_GENC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_CAP_ECRC_GENC 0x00000020


PCI_ERR_CAP_ECRC_GENE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_CAP_ECRC_GENE 0x00000040


PCI_ERR_CAP_ECRC_CHKC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_CAP_ECRC_CHKC 0x00000080


PCI_ERR_CAP_ECRC_CHKE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_CAP_ECRC_CHKE 0x00000100


PCI_ERR_HEADER_LOG 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_HEADER_LOG 28


PCI_ERR_ROOT_COMMAND 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_ROOT_COMMAND 44


PCI_ERR_ROOT_CMD_COR_EN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_ROOT_CMD_COR_EN 0x00000001


PCI_ERR_ROOT_CMD_NONFATAL_EN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_ROOT_CMD_NONFATAL_EN 0x00000002


PCI_ERR_ROOT_CMD_FATAL_EN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_ROOT_CMD_FATAL_EN 0x00000004


PCI_ERR_ROOT_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_ROOT_STATUS 48


PCI_ERR_ROOT_COR_RCV 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_ROOT_COR_RCV 0x00000001


PCI_ERR_ROOT_MULTI_COR_RCV 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_ROOT_MULTI_COR_RCV 0x00000002


PCI_ERR_ROOT_UNCOR_RCV 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_ROOT_UNCOR_RCV 0x00000004


PCI_ERR_ROOT_MULTI_UNCOR_RCV 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_ROOT_MULTI_UNCOR_RCV 0x00000008


PCI_ERR_ROOT_FIRST_FATAL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_ROOT_FIRST_FATAL 0x00000010


PCI_ERR_ROOT_NONFATAL_RCV 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_ROOT_NONFATAL_RCV 0x00000020


PCI_ERR_ROOT_FATAL_RCV 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_ROOT_FATAL_RCV 0x00000040


PCI_ERR_ROOT_ERR_SRC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ERR_ROOT_ERR_SRC 52


PCI_VC_PORT_REG1 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_VC_PORT_REG1 4


PCI_VC_PORT_REG2 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_VC_PORT_REG2 8


PCI_VC_PORT_CTRL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_VC_PORT_CTRL 12


PCI_VC_PORT_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_VC_PORT_STATUS 14


PCI_VC_RES_CAP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_VC_RES_CAP 16


PCI_VC_RES_CTRL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_VC_RES_CTRL 20


PCI_VC_RES_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_VC_RES_STATUS 26


PCI_PWR_DSR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PWR_DSR 4


PCI_PWR_DATA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PWR_DATA 8


PCI_PWR_DATA_BASE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PWR_DATA_BASE(x) ((x) & 0xff)


PCI_PWR_DATA_SCALE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PWR_DATA_SCALE(x) (((x) >> 8) & 3)


PCI_PWR_DATA_PM_SUB 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PWR_DATA_PM_SUB(x) (((x) >> 10) & 7)


PCI_PWR_DATA_PM_STATE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PWR_DATA_PM_STATE(x) (((x) >> 13) & 3)


PCI_PWR_DATA_TYPE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PWR_DATA_TYPE(x) (((x) >> 15) & 7)


PCI_PWR_DATA_RAIL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PWR_DATA_RAIL(x) (((x) >> 18) & 7)


PCI_PWR_CAP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PWR_CAP 12


PCI_PWR_CAP_BUDGET 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PWR_CAP_BUDGET(x) ((x) & 1)


HT_3BIT_CAP_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_3BIT_CAP_MASK 0xE0


HT_CAPTYPE_SLAVE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_CAPTYPE_SLAVE 0x00


HT_CAPTYPE_HOST 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_CAPTYPE_HOST 0x20


HT_5BIT_CAP_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_5BIT_CAP_MASK 0xF8


HT_CAPTYPE_IRQ 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_CAPTYPE_IRQ 0x80


HT_CAPTYPE_REMAPPING_40 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_CAPTYPE_REMAPPING_40 0xA0


HT_CAPTYPE_REMAPPING_64 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_CAPTYPE_REMAPPING_64 0xA2


HT_CAPTYPE_UNITID_CLUMP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_CAPTYPE_UNITID_CLUMP 0x90


HT_CAPTYPE_EXTCONF 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_CAPTYPE_EXTCONF 0x98


HT_CAPTYPE_MSI_MAPPING 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_CAPTYPE_MSI_MAPPING 0xA8


HT_MSI_FLAGS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_MSI_FLAGS 0x02


HT_MSI_FLAGS_ENABLE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_MSI_FLAGS_ENABLE 0x1


HT_MSI_FLAGS_FIXED 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_MSI_FLAGS_FIXED 0x2


HT_MSI_FIXED_ADDR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_MSI_FIXED_ADDR 0x00000000FEE00000ULL


HT_MSI_ADDR_LO 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_MSI_ADDR_LO 0x04


HT_MSI_ADDR_LO_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_MSI_ADDR_LO_MASK 0xFFF00000


HT_MSI_ADDR_HI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_MSI_ADDR_HI 0x08


HT_CAPTYPE_DIRECT_ROUTE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_CAPTYPE_DIRECT_ROUTE 0xB0


HT_CAPTYPE_VCSET 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_CAPTYPE_VCSET 0xB8


HT_CAPTYPE_ERROR_RETRY 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_CAPTYPE_ERROR_RETRY 0xC0


HT_CAPTYPE_GEN3 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_CAPTYPE_GEN3 0xD0


HT_CAPTYPE_PM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define HT_CAPTYPE_PM 0xE0


PCI_ARI_CAP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ARI_CAP 0x04


PCI_ARI_CAP_MFVC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ARI_CAP_MFVC 0x0001


PCI_ARI_CAP_ACS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ARI_CAP_ACS 0x0002


PCI_ARI_CAP_NFN 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ARI_CAP_NFN(x) (((x) >> 8) & 0xff)


PCI_ARI_CTRL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ARI_CTRL 0x06


PCI_ARI_CTRL_MFVC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ARI_CTRL_MFVC 0x0001


PCI_ARI_CTRL_ACS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ARI_CTRL_ACS 0x0002


PCI_ARI_CTRL_FG 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ARI_CTRL_FG(x) (((x) >> 4) & 7)


PCI_ATS_CAP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ATS_CAP 0x04


PCI_ATS_CAP_QDEP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ATS_CAP_QDEP(x) ((x) & 0x1f)


PCI_ATS_MAX_QDEP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ATS_MAX_QDEP 32


PCI_ATS_CTRL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ATS_CTRL 0x06


PCI_ATS_CTRL_ENABLE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ATS_CTRL_ENABLE 0x8000


PCI_ATS_CTRL_STU 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ATS_CTRL_STU(x) ((x) & 0x1f)


PCI_ATS_MIN_STU 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ATS_MIN_STU 12


PCI_PRI_CTRL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PRI_CTRL 0x04


PCI_PRI_CTRL_ENABLE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PRI_CTRL_ENABLE 0x01


PCI_PRI_CTRL_RESET 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PRI_CTRL_RESET 0x02


PCI_PRI_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PRI_STATUS 0x06


PCI_PRI_STATUS_RF 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PRI_STATUS_RF 0x001


PCI_PRI_STATUS_UPRGI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PRI_STATUS_UPRGI 0x002


PCI_PRI_STATUS_STOPPED 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PRI_STATUS_STOPPED 0x100


PCI_PRI_MAX_REQ 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PRI_MAX_REQ 0x08


PCI_PRI_ALLOC_REQ 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PRI_ALLOC_REQ 0x0c


PCI_PASID_CAP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PASID_CAP 0x04


PCI_PASID_CAP_EXEC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PASID_CAP_EXEC 0x02


PCI_PASID_CAP_PRIV 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PASID_CAP_PRIV 0x04


PCI_PASID_CTRL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PASID_CTRL 0x06


PCI_PASID_CTRL_ENABLE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PASID_CTRL_ENABLE 0x01


PCI_PASID_CTRL_EXEC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PASID_CTRL_EXEC 0x02


PCI_PASID_CTRL_PRIV 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_PASID_CTRL_PRIV 0x04


PCI_SRIOV_CAP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_CAP 0x04


PCI_SRIOV_CAP_VFM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_CAP_VFM 0x01


PCI_SRIOV_CAP_INTR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_CAP_INTR(x) ((x) >> 21)


PCI_SRIOV_CTRL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_CTRL 0x08


PCI_SRIOV_CTRL_VFE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_CTRL_VFE 0x01


PCI_SRIOV_CTRL_VFM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_CTRL_VFM 0x02


PCI_SRIOV_CTRL_INTR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_CTRL_INTR 0x04


PCI_SRIOV_CTRL_MSE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_CTRL_MSE 0x08


PCI_SRIOV_CTRL_ARI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_CTRL_ARI 0x10


PCI_SRIOV_STATUS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_STATUS 0x0a


PCI_SRIOV_STATUS_VFM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_STATUS_VFM 0x01


PCI_SRIOV_INITIAL_VF 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_INITIAL_VF 0x0c


PCI_SRIOV_TOTAL_VF 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_TOTAL_VF 0x0e


PCI_SRIOV_NUM_VF 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_NUM_VF 0x10


PCI_SRIOV_FUNC_LINK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_FUNC_LINK 0x12


PCI_SRIOV_VF_OFFSET 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_VF_OFFSET 0x14


PCI_SRIOV_VF_STRIDE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_VF_STRIDE 0x16


PCI_SRIOV_VF_DID 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_VF_DID 0x1a


PCI_SRIOV_SUP_PGSIZE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_SUP_PGSIZE 0x1c


PCI_SRIOV_SYS_PGSIZE 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_SYS_PGSIZE 0x20


PCI_SRIOV_BAR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_BAR 0x24


PCI_SRIOV_NUM_BARS 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_NUM_BARS 6


PCI_SRIOV_VFM 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_VFM 0x3c


PCI_SRIOV_VFM_BIR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_VFM_BIR(x) ((x) & 7)


PCI_SRIOV_VFM_OFFSET 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_VFM_OFFSET(x) ((x) & ~7)


PCI_SRIOV_VFM_UA 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_VFM_UA 0x0


PCI_SRIOV_VFM_MI 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_VFM_MI 0x1


PCI_SRIOV_VFM_MO 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_VFM_MO 0x2


PCI_SRIOV_VFM_AV 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_SRIOV_VFM_AV 0x3


PCI_LTR_MAX_SNOOP_LAT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_LTR_MAX_SNOOP_LAT 0x4


PCI_LTR_MAX_NOSNOOP_LAT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_LTR_MAX_NOSNOOP_LAT 0x6


PCI_LTR_VALUE_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_LTR_VALUE_MASK 0x000003ff


PCI_LTR_SCALE_MASK 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_LTR_SCALE_MASK 0x00001c00


PCI_LTR_SCALE_SHIFT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_LTR_SCALE_SHIFT 10


PCI_ACS_CAP 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ACS_CAP 0x04


PCI_ACS_SV 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ACS_SV 0x01


PCI_ACS_TB 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ACS_TB 0x02


PCI_ACS_RR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ACS_RR 0x04


PCI_ACS_CR 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ACS_CR 0x08


PCI_ACS_UF 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ACS_UF 0x10


PCI_ACS_EC 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ACS_EC 0x20


PCI_ACS_DT 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ACS_DT 0x40


PCI_ACS_CTRL 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ACS_CTRL 0x06


PCI_ACS_EGRESS_CTL_V 	( diff_type: Mov type: macro file: include/linux/pci_regs.h )
	-- include/uapi/linux/pci_regs.h
	++ #define PCI_ACS_EGRESS_CTL_V 0x08


usb_device_id 	( diff_type: Mod type: struct file: include/linux/mod_devicetable.h )
	-- struct usb_device_id { __u16 match_flags; __u16 idVendor; __u16 idProduct; __u16 bcdDevice_lo; __u16 bcdDevice_hi; __u8 bDeviceClass; __u8 bDeviceSubClass; __u8 bDeviceProtocol; __u8 bInterfaceClass; __u8 bInterfaceSubClass; __u8 bInterfaceProtocol; kernel_ulong_t driver_info; };
	++ struct usb_device_id { __u16 match_flags; __u16 idVendor; __u16 idProduct; __u16 bcdDevice_lo; __u16 bcdDevice_hi; __u8 bDeviceClass; __u8 bDeviceSubClass; __u8 bDeviceProtocol; __u8 bInterfaceClass; __u8 bInterfaceSubClass; __u8 bInterfaceProtocol; __u8 bInterfaceNumber; kernel_ulong_t driver_info };


of_device_id 	( diff_type: Mod type: struct file: include/linux/mod_devicetable.h )
	-- struct of_device_id { char name[32]; char type[32]; char compatible[128]; void *data; kernel_ulong_t data; };
	++ struct of_device_id { char name[32]; char type[32]; char compatible[128]; const void *data; kernel_ulong_t data; };


device_driver 	( diff_type: Mod type: struct file: include/linux/device.h )
	-- struct device_driver { const char *name; struct bus_type *bus; struct module *owner; const char *mod_name; bool suppress_bind_attrs; const struct of_device_id *of_match_table; int (*probe) (struct device *dev); int (*remove) (struct device *dev); void (*shutdown) (struct device *dev); int (*suspend) (struct device *dev, pm_message_t state); int (*resume) (struct device *dev); const struct attribute_group **groups; const struct dev_pm_ops *pm; struct driver_private *p; };
	++ struct device_driver { const char *name; struct bus_type *bus; struct module *owner; const char *mod_name; bool suppress_bind_attrs; const struct of_device_id *of_match_table; const struct acpi_device_id *acpi_match_table; int (*probe) (struct device *dev); int (*remove) (struct device *dev); void (*shutdown) (struct device *dev); int (*suspend) (struct device *dev, pm_message_t state); int (*resume) (struct device *dev); const struct attribute_group **groups; const struct dev_pm_ops *pm; struct driver_private *p; };


device 	( diff_type: Mod type: struct file: include/linux/device.h )
	-- struct device { struct device *parent; struct device_private *p; struct kobject kobj; const char *init_name; const struct device_type *type; struct mutex mutex; struct bus_type *bus; struct device_driver *driver; void *platform_data; struct dev_pm_info power; struct dev_pm_domain *pm_domain; int numa_node; u64 *dma_mask; u64 coherent_dma_mask; struct device_dma_parameters *dma_parms; struct list_head dma_pools; struct dma_coherent_mem *dma_mem; struct cma *cma_area; struct dev_archdata archdata; struct device_node *of_node; dev_t devt; u32 id; spinlock_t devres_lock; struct list_head devres_head; struct klist_node knode_class; const struct attribute_group **groups; void (*release)(struct device *dev); };
	++ struct device { struct device *parent; struct device_private *p; struct kobject kobj; const char *init_name; const struct device_type *type; struct mutex mutex; struct bus_type *bus; struct device_driver *driver; void *platform_data; struct dev_pm_info power; struct dev_pm_domain *pm_domain; int numa_node; u64 *dma_mask; u64 coherent_dma_mask; struct device_dma_parameters *dma_parms; struct list_head dma_pools; struct dma_coherent_mem *dma_mem; struct cma *cma_area; struct dev_archdata archdata; struct device_node *of_node; struct acpi_dev_node acpi_node; dev_t devt; u32 id; spinlock_t devres_lock; struct list_head devres_head; struct klist_node knode_class; const struct attribute_group **groups; void (*release)(struct device *dev); struct iommu_group *iommu_group; };


dev_dbg_ratelimited 	( diff_type: Mod type: macro file: include/linux/device.h )
	-- #define dev_dbg_ratelimited(dev,fmt,...) dev_level_ratelimited(dev_dbg, dev, fmt, ##__VA_ARGS__)
	++ #define dev_dbg_ratelimited(dev,fmt,...) no_printk(KERN_DEBUG pr_fmt(fmt), ##__VA_ARGS__)


compat_sigval 	( diff_type: Mov type: union file: include/linux/compat.h )
	-- arch/x86/include/asm/compat.h
	++ typedef union compat_sigval { compat_int_t sival_int; compat_uptr_t sival_ptr; } compat_sigval_t;


compat_sigval_t 	( diff_type: Mov type: union file: include/linux/compat.h )
	-- arch/x86/include/asm/compat.h
	++ typedef union compat_sigval { compat_int_t sival_int; compat_uptr_t sival_ptr; } compat_sigval_t;


compat_sys_msgsnd 	( diff_type: Mod type: prototype file: include/linux/compat.h )
	-- long compat_sys_msgsnd(int msqid,struct compat_msgbuf __user *msgp,size_t msgsz, int msgflg);
	++ long compat_sys_msgsnd(int msqid,struct compat_msgbuf __user *msgp,compat_ssize_t msgsz, int msgflg);


compat_sys_msgrcv 	( diff_type: Mod type: prototype file: include/linux/compat.h )
	-- long compat_sys_msgrcv(int msqid,struct compat_msgbuf __user *msgp,size_t msgsz, long msgtyp, int msgflg);
	++ long compat_sys_msgrcv(int msqid,struct compat_msgbuf __user *msgp,compat_ssize_t msgsz, long msgtyp, int msgflg);


compat_do_execve 	( diff_type: Del type: prototype file: include/linux/compat.h )
	-- int compat_do_execve(char *filename,compat_uptr_t __user *argv,compat_uptr_t __user *envp, struct pt_regs *regs);


_LINUX_IF_H 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define _LINUX_IF_H


IFNAMSIZ 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFNAMSIZ 16


IFALIASZ 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFALIASZ 256


IFF_UP 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_UP 0x1


IFF_BROADCAST 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_BROADCAST 0x2


IFF_DEBUG 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_DEBUG 0x4


IFF_LOOPBACK 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_LOOPBACK 0x8


IFF_POINTOPOINT 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_POINTOPOINT 0x10


IFF_NOTRAILERS 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_NOTRAILERS 0x20


IFF_RUNNING 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_RUNNING 0x40


IFF_NOARP 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_NOARP 0x80


IFF_PROMISC 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_PROMISC 0x100


IFF_ALLMULTI 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_ALLMULTI 0x200


IFF_MASTER 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_MASTER 0x400


IFF_SLAVE 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_SLAVE 0x800


IFF_MULTICAST 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_MULTICAST 0x1000


IFF_PORTSEL 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_PORTSEL 0x2000


IFF_AUTOMEDIA 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_AUTOMEDIA 0x4000


IFF_DYNAMIC 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_DYNAMIC 0x8000


IFF_LOWER_UP 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_LOWER_UP 0x10000


IFF_DORMANT 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_DORMANT 0x20000


IFF_ECHO 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_ECHO 0x40000


IFF_VOLATILE 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_VOLATILE (IFF_LOOPBACK|IFF_POINTOPOINT|IFF_BROADCAST|IFF_ECHO| IFF_MASTER|IFF_SLAVE|IFF_RUNNING|IFF_LOWER_UP|IFF_DORMANT)


IFF_802_1Q_VLAN 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_802_1Q_VLAN 0x1


IFF_EBRIDGE 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_EBRIDGE 0x2


IFF_SLAVE_INACTIVE 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_SLAVE_INACTIVE 0x4


IFF_MASTER_8023AD 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_MASTER_8023AD 0x8


IFF_MASTER_ALB 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_MASTER_ALB 0x10


IFF_BONDING 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_BONDING 0x20


IFF_SLAVE_NEEDARP 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_SLAVE_NEEDARP 0x40


IFF_ISATAP 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_ISATAP 0x80


IFF_MASTER_ARPMON 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_MASTER_ARPMON 0x100


IFF_WAN_HDLC 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_WAN_HDLC 0x200


IFF_XMIT_DST_RELEASE 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_XMIT_DST_RELEASE 0x400


IFF_DONT_BRIDGE 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_DONT_BRIDGE 0x800


IFF_DISABLE_NETPOLL 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_DISABLE_NETPOLL 0x1000


IFF_MACVLAN_PORT 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_MACVLAN_PORT 0x2000


IFF_BRIDGE_PORT 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_BRIDGE_PORT 0x4000


IFF_OVS_DATAPATH 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_OVS_DATAPATH 0x8000


IFF_TX_SKB_SHARING 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_TX_SKB_SHARING 0x10000


IFF_UNICAST_FLT 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_UNICAST_FLT 0x20000


IFF_TEAM_PORT 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_TEAM_PORT 0x40000


IFF_SUPP_NOFCS 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IFF_SUPP_NOFCS 0x80000


IF_GET_IFACE 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IF_GET_IFACE 0x0001


IF_GET_PROTO 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IF_GET_PROTO 0x0002


IF_IFACE_V35 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IF_IFACE_V35 0x1000


IF_IFACE_V24 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IF_IFACE_V24 0x1001


IF_IFACE_X21 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IF_IFACE_X21 0x1002


IF_IFACE_T1 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IF_IFACE_T1 0x1003


IF_IFACE_E1 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IF_IFACE_E1 0x1004


IF_IFACE_SYNC_SERIAL 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IF_IFACE_SYNC_SERIAL 0x1005


IF_IFACE_X21D 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IF_IFACE_X21D 0x1006


IF_PROTO_HDLC 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IF_PROTO_HDLC 0x2000


IF_PROTO_PPP 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IF_PROTO_PPP 0x2001


IF_PROTO_CISCO 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IF_PROTO_CISCO 0x2002


IF_PROTO_FR 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IF_PROTO_FR 0x2003


IF_PROTO_FR_ADD_PVC 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IF_PROTO_FR_ADD_PVC 0x2004


IF_PROTO_FR_DEL_PVC 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IF_PROTO_FR_DEL_PVC 0x2005


IF_PROTO_X25 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IF_PROTO_X25 0x2006


IF_PROTO_HDLC_ETH 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IF_PROTO_HDLC_ETH 0x2007


IF_PROTO_FR_ADD_ETH_PVC 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IF_PROTO_FR_ADD_ETH_PVC 0x2008


IF_PROTO_FR_DEL_ETH_PVC 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IF_PROTO_FR_DEL_ETH_PVC 0x2009


IF_PROTO_FR_PVC 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IF_PROTO_FR_PVC 0x200A


IF_PROTO_FR_ETH_PVC 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IF_PROTO_FR_ETH_PVC 0x200B


IF_PROTO_RAW 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define IF_PROTO_RAW 0x200C


ifmap 	( diff_type: Mov type: struct file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ struct ifmap { unsigned long mem_start; unsigned long mem_end; unsigned short base_addr; unsigned char irq; unsigned char dma; unsigned char port; };


if_settings 	( diff_type: Mov type: struct file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ struct if_settings { unsigned int type; unsigned int size; union { raw_hdlc_proto __user *raw_hdlc; cisco_proto __user *cisco; fr_proto __user *fr; fr_proto_pvc __user *fr_pvc; fr_proto_pvc_info __user *fr_pvc_info; sync_serial_settings __user *sync; te1_settings __user *te1; } ifs_ifsu; };


ifreq 	( diff_type: Mov type: struct file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ struct ifreq { #define IFHWADDRLEN 6 union { char ifrn_name[IFNAMSIZ]; } ifr_ifrn; union { struct sockaddr ifru_addr; struct sockaddr ifru_dstaddr; struct sockaddr ifru_broadaddr; struct sockaddr ifru_netmask; struct sockaddr ifru_hwaddr; short ifru_flags; int ifru_ivalue; int ifru_mtu; struct ifmap ifru_map; char ifru_slave[IFNAMSIZ]; char ifru_newname[IFNAMSIZ]; void __user * ifru_data; struct if_settings ifru_settings; } ifr_ifru; };


ifr_name 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define ifr_name ifr_ifrn.ifrn_name


ifr_hwaddr 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define ifr_hwaddr ifr_ifru.ifru_hwaddr


ifr_addr 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define ifr_addr ifr_ifru.ifru_addr


ifr_dstaddr 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define ifr_dstaddr ifr_ifru.ifru_dstaddr


ifr_broadaddr 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define ifr_broadaddr ifr_ifru.ifru_broadaddr


ifr_netmask 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define ifr_netmask ifr_ifru.ifru_netmask


ifr_flags 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define ifr_flags ifr_ifru.ifru_flags


ifr_metric 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define ifr_metric ifr_ifru.ifru_ivalue


ifr_mtu 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define ifr_mtu ifr_ifru.ifru_mtu


ifr_map 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define ifr_map ifr_ifru.ifru_map


ifr_slave 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define ifr_slave ifr_ifru.ifru_slave


ifr_data 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define ifr_data ifr_ifru.ifru_data


ifr_ifindex 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define ifr_ifindex ifr_ifru.ifru_ivalue


ifr_bandwidth 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define ifr_bandwidth ifr_ifru.ifru_ivalue


ifr_qlen 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define ifr_qlen ifr_ifru.ifru_ivalue


ifr_newname 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define ifr_newname ifr_ifru.ifru_newname


ifr_settings 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define ifr_settings ifr_ifru.ifru_settings


ifconf 	( diff_type: Mov type: struct file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ struct ifconf { int ifc_len; union { char __user *ifcu_buf; struct ifreq __user *ifcu_req; } ifc_ifcu; };


ifc_buf 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define ifc_buf ifc_ifcu.ifcu_buf


ifc_req 	( diff_type: Mov type: macro file: include/linux/if.h )
	-- include/uapi/linux/if.h
	++ #define ifc_req ifc_ifcu.ifcu_req


__LINUX_IF_PACKET_H 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define __LINUX_IF_PACKET_H


sockaddr_pkt 	( diff_type: Mov type: struct file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ struct sockaddr_pkt { unsigned short spkt_family; unsigned char spkt_device[14]; __be16 spkt_protocol; };


sockaddr_ll 	( diff_type: Mov type: struct file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ struct sockaddr_ll { unsigned short sll_family; __be16 sll_protocol; int sll_ifindex; unsigned short sll_hatype; unsigned char sll_pkttype; unsigned char sll_halen; unsigned char sll_addr[8]; };


PACKET_HOST 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_HOST 0


PACKET_BROADCAST 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_BROADCAST 1


PACKET_MULTICAST 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_MULTICAST 2


PACKET_OTHERHOST 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_OTHERHOST 3


PACKET_OUTGOING 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_OUTGOING 4


PACKET_LOOPBACK 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_LOOPBACK 5


PACKET_FASTROUTE 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_FASTROUTE 6


PACKET_ADD_MEMBERSHIP 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_ADD_MEMBERSHIP 1


PACKET_DROP_MEMBERSHIP 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_DROP_MEMBERSHIP 2


PACKET_RECV_OUTPUT 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_RECV_OUTPUT 3


PACKET_RX_RING 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_RX_RING 5


PACKET_STATISTICS 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_STATISTICS 6


PACKET_COPY_THRESH 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_COPY_THRESH 7


PACKET_AUXDATA 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_AUXDATA 8


PACKET_ORIGDEV 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_ORIGDEV 9


PACKET_VERSION 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_VERSION 10


PACKET_HDRLEN 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_HDRLEN 11


PACKET_RESERVE 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_RESERVE 12


PACKET_TX_RING 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_TX_RING 13


PACKET_LOSS 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_LOSS 14


PACKET_VNET_HDR 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_VNET_HDR 15


PACKET_TX_TIMESTAMP 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_TX_TIMESTAMP 16


PACKET_TIMESTAMP 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_TIMESTAMP 17


PACKET_FANOUT 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_FANOUT 18


PACKET_FANOUT_HASH 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_FANOUT_HASH 0


PACKET_FANOUT_LB 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_FANOUT_LB 1


PACKET_FANOUT_CPU 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_FANOUT_CPU 2


PACKET_FANOUT_FLAG_DEFRAG 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_FANOUT_FLAG_DEFRAG 0x8000


tpacket_stats 	( diff_type: Mov type: struct file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ struct tpacket_stats { unsigned int tp_packets; unsigned int tp_drops; };


tpacket_stats_v3 	( diff_type: Mov type: struct file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ struct tpacket_stats_v3 { unsigned int tp_packets; unsigned int tp_drops; unsigned int tp_freeze_q_cnt; };


tpacket_stats_u 	( diff_type: Mov type: union file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ union tpacket_stats_u { struct tpacket_stats stats1; struct tpacket_stats_v3 stats3; };


tpacket_auxdata 	( diff_type: Mov type: struct file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ struct tpacket_auxdata { __u32 tp_status; __u32 tp_len; __u32 tp_snaplen; __u16 tp_mac; __u16 tp_net; __u16 tp_vlan_tci; __u16 tp_padding; };


TP_STATUS_KERNEL 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define TP_STATUS_KERNEL 0x0


TP_STATUS_USER 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define TP_STATUS_USER 0x1


TP_STATUS_COPY 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define TP_STATUS_COPY 0x2


TP_STATUS_LOSING 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define TP_STATUS_LOSING 0x4


TP_STATUS_CSUMNOTREADY 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define TP_STATUS_CSUMNOTREADY 0x8


TP_STATUS_VLAN_VALID 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define TP_STATUS_VLAN_VALID 0x10


TP_STATUS_BLK_TMO 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define TP_STATUS_BLK_TMO 0x20


TP_STATUS_AVAILABLE 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define TP_STATUS_AVAILABLE 0x0


TP_STATUS_SEND_REQUEST 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define TP_STATUS_SEND_REQUEST 0x1


TP_STATUS_SENDING 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define TP_STATUS_SENDING 0x2


TP_STATUS_WRONG_FORMAT 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define TP_STATUS_WRONG_FORMAT 0x4


TP_FT_REQ_FILL_RXHASH 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define TP_FT_REQ_FILL_RXHASH 0x1


tpacket_hdr 	( diff_type: Mov type: struct file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ struct tpacket_hdr { unsigned long tp_status; unsigned int tp_len; unsigned int tp_snaplen; unsigned short tp_mac; unsigned short tp_net; unsigned int tp_sec; unsigned int tp_usec; };


TPACKET_ALIGNMENT 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define TPACKET_ALIGNMENT 16


TPACKET_ALIGN 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define TPACKET_ALIGN(x) (((x)+TPACKET_ALIGNMENT-1)&~(TPACKET_ALIGNMENT-1))


TPACKET_HDRLEN 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define TPACKET_HDRLEN (TPACKET_ALIGN(sizeof(struct tpacket_hdr)) + sizeof(struct sockaddr_ll))


tpacket2_hdr 	( diff_type: Mov type: struct file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ struct tpacket2_hdr { __u32 tp_status; __u32 tp_len; __u32 tp_snaplen; __u16 tp_mac; __u16 tp_net; __u32 tp_sec; __u32 tp_nsec; __u16 tp_vlan_tci; __u16 tp_padding; };


tpacket_hdr_variant1 	( diff_type: Mov type: struct file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ struct tpacket_hdr_variant1 { __u32 tp_rxhash; __u32 tp_vlan_tci; };


tpacket3_hdr 	( diff_type: Mov type: struct file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ struct tpacket3_hdr { __u32 tp_next_offset; __u32 tp_sec; __u32 tp_nsec; __u32 tp_snaplen; __u32 tp_len; __u32 tp_status; __u16 tp_mac; __u16 tp_net; struct tpacket_hdr_variant1 hv1; };


tpacket_bd_ts 	( diff_type: Mov type: struct file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ struct tpacket_bd_ts { unsigned int ts_sec; union { unsigned int ts_usec; unsigned int ts_nsec; };


tpacket_hdr_v1 	( diff_type: Mov type: struct file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ struct tpacket_hdr_v1 { __u32 block_status; __u32 num_pkts; __u32 offset_to_first_pkt; __u32 blk_len; __aligned_u64 seq_num; struct tpacket_bd_ts ts_first_pkt, ts_last_pkt; };


tpacket_bd_header_u 	( diff_type: Mov type: union file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ union tpacket_bd_header_u { struct tpacket_hdr_v1 bh1; };


tpacket_block_desc 	( diff_type: Mov type: struct file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ struct tpacket_block_desc { __u32 version; __u32 offset_to_priv; union tpacket_bd_header_u hdr; };


TPACKET2_HDRLEN 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define TPACKET2_HDRLEN (TPACKET_ALIGN(sizeof(struct tpacket2_hdr)) + sizeof(struct sockaddr_ll))


TPACKET3_HDRLEN 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define TPACKET3_HDRLEN (TPACKET_ALIGN(sizeof(struct tpacket3_hdr)) + sizeof(struct sockaddr_ll))


tpacket_versions 	( diff_type: Mov type: enum file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ enum tpacket_versions { TPACKET_V1, TPACKET_V2, TPACKET_V3 };


tpacket_req 	( diff_type: Mov type: struct file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ struct tpacket_req { unsigned int tp_block_size; unsigned int tp_block_nr; unsigned int tp_frame_size; unsigned int tp_frame_nr; };


tpacket_req3 	( diff_type: Mov type: struct file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ struct tpacket_req3 { unsigned int tp_block_size; unsigned int tp_block_nr; unsigned int tp_frame_size; unsigned int tp_frame_nr; unsigned int tp_retire_blk_tov; unsigned int tp_sizeof_priv; unsigned int tp_feature_req_word; };


tpacket_req_u 	( diff_type: Mov type: union file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ union tpacket_req_u { struct tpacket_req req; struct tpacket_req3 req3; };


packet_mreq 	( diff_type: Mov type: struct file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ struct packet_mreq { int mr_ifindex; unsigned short mr_type; unsigned short mr_alen; unsigned char mr_address[8]; };


PACKET_MR_MULTICAST 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_MR_MULTICAST 0


PACKET_MR_PROMISC 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_MR_PROMISC 1


PACKET_MR_ALLMULTI 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_MR_ALLMULTI 2


PACKET_MR_UNICAST 	( diff_type: Mov type: macro file: include/linux/if_packet.h )
	-- include/uapi/linux/if_packet.h
	++ #define PACKET_MR_UNICAST 3


rtnl_link_stats 	( diff_type: Del type: struct file: include/linux/if_link.h )
	-- struct rtnl_link_stats { __u32 rx_packets; __u32 tx_packets; __u32 rx_bytes; __u32 tx_bytes; __u32 rx_errors; __u32 tx_errors; __u32 rx_dropped; __u32 tx_dropped; __u32 multicast; __u32 collisions; __u32 rx_length_errors; __u32 rx_over_errors; __u32 rx_crc_errors; __u32 rx_frame_errors; __u32 rx_fifo_errors; __u32 rx_missed_errors; __u32 tx_aborted_errors; __u32 tx_carrier_errors; __u32 tx_fifo_errors; __u32 tx_heartbeat_errors; __u32 tx_window_errors; __u32 rx_compressed; __u32 tx_compressed; };


rtnl_link_stats64 	( diff_type: Del type: struct file: include/linux/if_link.h )
	-- struct rtnl_link_stats64 { __u64 rx_packets; __u64 tx_packets; __u64 rx_bytes; __u64 tx_bytes; __u64 rx_errors; __u64 tx_errors; __u64 rx_dropped; __u64 tx_dropped; __u64 multicast; __u64 collisions; __u64 rx_length_errors; __u64 rx_over_errors; __u64 rx_crc_errors; __u64 rx_frame_errors; __u64 rx_fifo_errors; __u64 rx_missed_errors; __u64 tx_aborted_errors; __u64 tx_carrier_errors; __u64 tx_fifo_errors; __u64 tx_heartbeat_errors; __u64 tx_window_errors; __u64 rx_compressed; __u64 tx_compressed; };


rtnl_link_ifmap 	( diff_type: Del type: struct file: include/linux/if_link.h )
	-- struct rtnl_link_ifmap { __u64 mem_start; __u64 mem_end; __u64 base_addr; __u16 irq; __u8 dma; __u8 port; };


IFLA_MAX 	( diff_type: Del type: macro file: include/linux/if_link.h )
	-- #define IFLA_MAX (__IFLA_MAX - 1)


IFLA_RTA 	( diff_type: Del type: macro file: include/linux/if_link.h )
	-- #define IFLA_RTA(r) ((struct rtattr*)(((char*)(r)) + NLMSG_ALIGN(sizeof(struct ifinfomsg))))


IFLA_PAYLOAD 	( diff_type: Del type: macro file: include/linux/if_link.h )
	-- #define IFLA_PAYLOAD(n) NLMSG_PAYLOAD(n,sizeof(struct ifinfomsg))


IFLA_INET_MAX 	( diff_type: Del type: macro file: include/linux/if_link.h )
	-- #define IFLA_INET_MAX (__IFLA_INET_MAX - 1)


IFLA_INET6_MAX 	( diff_type: Del type: macro file: include/linux/if_link.h )
	-- #define IFLA_INET6_MAX (__IFLA_INET6_MAX - 1)


ifla_cacheinfo 	( diff_type: Del type: struct file: include/linux/if_link.h )
	-- struct ifla_cacheinfo { __u32 max_reasm_len; __u32 tstamp; __u32 reachable_time; __u32 retrans_time; };


IFLA_INFO_MAX 	( diff_type: Del type: macro file: include/linux/if_link.h )
	-- #define IFLA_INFO_MAX (__IFLA_INFO_MAX - 1)


IFLA_VLAN_MAX 	( diff_type: Del type: macro file: include/linux/if_link.h )
	-- #define IFLA_VLAN_MAX (__IFLA_VLAN_MAX - 1)


ifla_vlan_flags 	( diff_type: Del type: struct file: include/linux/if_link.h )
	-- struct ifla_vlan_flags { __u32 flags; __u32 mask; };


IFLA_VLAN_QOS_MAX 	( diff_type: Del type: macro file: include/linux/if_link.h )
	-- #define IFLA_VLAN_QOS_MAX (__IFLA_VLAN_QOS_MAX - 1)


ifla_vlan_qos_mapping 	( diff_type: Del type: struct file: include/linux/if_link.h )
	-- struct ifla_vlan_qos_mapping { __u32 from; __u32 to; };


IFLA_MACVLAN_MAX 	( diff_type: Del type: macro file: include/linux/if_link.h )
	-- #define IFLA_MACVLAN_MAX (__IFLA_MACVLAN_MAX - 1)


macvlan_mode 	( diff_type: Del type: enum file: include/linux/if_link.h )
	-- enum macvlan_mode { MACVLAN_MODE_PRIVATE = 1, MACVLAN_MODE_VEPA = 2, MACVLAN_MODE_BRIDGE = 4, MACVLAN_MODE_PASSTHRU = 8, };


MACVLAN_FLAG_NOPROMISC 	( diff_type: Del type: macro file: include/linux/if_link.h )
	-- #define MACVLAN_FLAG_NOPROMISC 1


IFLA_VF_INFO_MAX 	( diff_type: Del type: macro file: include/linux/if_link.h )
	-- #define IFLA_VF_INFO_MAX (__IFLA_VF_INFO_MAX - 1)


IFLA_VF_MAX 	( diff_type: Del type: macro file: include/linux/if_link.h )
	-- #define IFLA_VF_MAX (__IFLA_VF_MAX - 1)


ifla_vf_mac 	( diff_type: Del type: struct file: include/linux/if_link.h )
	-- struct ifla_vf_mac { __u32 vf; __u8 mac[32]; };


ifla_vf_vlan 	( diff_type: Del type: struct file: include/linux/if_link.h )
	-- struct ifla_vf_vlan { __u32 vf; __u32 vlan; __u32 qos; };


ifla_vf_tx_rate 	( diff_type: Del type: struct file: include/linux/if_link.h )
	-- struct ifla_vf_tx_rate { __u32 vf; __u32 rate; };


ifla_vf_spoofchk 	( diff_type: Del type: struct file: include/linux/if_link.h )
	-- struct ifla_vf_spoofchk { __u32 vf; __u32 setting; };


IFLA_VF_PORT_MAX 	( diff_type: Del type: macro file: include/linux/if_link.h )
	-- #define IFLA_VF_PORT_MAX (__IFLA_VF_PORT_MAX - 1)


IFLA_PORT_MAX 	( diff_type: Del type: macro file: include/linux/if_link.h )
	-- #define IFLA_PORT_MAX (__IFLA_PORT_MAX - 1)


PORT_PROFILE_MAX 	( diff_type: Del type: macro file: include/linux/if_link.h )
	-- #define PORT_PROFILE_MAX 40


PORT_UUID_MAX 	( diff_type: Del type: macro file: include/linux/if_link.h )
	-- #define PORT_UUID_MAX 16


PORT_SELF_VF 	( diff_type: Del type: macro file: include/linux/if_link.h )
	-- #define PORT_SELF_VF -1


ifla_port_vsi 	( diff_type: Del type: struct file: include/linux/if_link.h )
	-- struct ifla_port_vsi { __u8 vsi_mgr_id; __u8 vsi_type_id[3]; __u8 vsi_type_version; __u8 pad[3]; };


dev_pm_qos_request 	( diff_type: Mod type: struct file: include/linux/pm_qos.h )
	-- struct dev_pm_qos_request { struct plist_node node; struct device *dev; };
	++ struct dev_pm_qos_request { enum dev_pm_qos_req_type type; union { struct plist_node pnode; struct pm_qos_flags_request flr; } data; struct device *dev; };


dev_pm_qos_add_request 	( diff_type: Mod type: function file: include/linux/pm_qos.h )
	-- static inline int dev_pm_qos_add_request(struct device *dev,struct dev_pm_qos_request *req,s32 value)
	++ static inline int dev_pm_qos_add_request(struct device *dev,struct dev_pm_qos_request *req,enum dev_pm_qos_req_type type,s32 value)


dma_slave_config 	( diff_type: Mod type: struct file: include/linux/dmaengine.h )
	-- struct dma_slave_config { enum dma_transfer_direction direction; dma_addr_t src_addr; dma_addr_t dst_addr; enum dma_slave_buswidth src_addr_width; enum dma_slave_buswidth dst_addr_width; u32 src_maxburst; u32 dst_maxburst; bool device_fc; };
	++ struct dma_slave_config { enum dma_transfer_direction direction; dma_addr_t src_addr; dma_addr_t dst_addr; enum dma_slave_buswidth src_addr_width; enum dma_slave_buswidth dst_addr_width; u32 src_maxburst; u32 dst_maxburst; bool device_fc; unsigned int slave_id; };


net 	( diff_type: Mod type: struct file: include/net/net_namespace.h )
	-- struct net { atomic_t passive; atomic_t count; atomic_t use_count; spinlock_t rules_mod_lock; struct list_head list; struct list_head cleanup_list; struct list_head exit_list; struct proc_dir_entry *proc_net; struct proc_dir_entry *proc_net_stat; struct ctl_table_set sysctls; struct sock *rtnl; struct sock *genl_sock; struct list_head dev_base_head; struct hlist_head *dev_name_head; struct hlist_head *dev_index_head; unsigned int dev_base_seq; struct list_head rules_ops; struct net_device *loopback_dev; struct netns_core core; struct netns_mib mib; struct netns_packet packet; struct netns_unix unx; struct netns_ipv4 ipv4; struct netns_ipv6 ipv6; struct netns_dccp dccp; struct netns_xt xt; struct netns_ct ct; struct sock *nfnl; struct sock *nfnl_stash; struct sk_buff_head wext_nlevents; struct net_generic __rcu *gen; struct netns_xfrm xfrm; struct netns_ipvs *ipvs; };
	++ struct net { atomic_t passive; atomic_t count; atomic_t use_count; spinlock_t rules_mod_lock; struct list_head list; struct list_head cleanup_list; struct list_head exit_list; struct user_namespace *user_ns; unsigned int proc_inum; struct proc_dir_entry *proc_net; struct proc_dir_entry *proc_net_stat; struct ctl_table_set sysctls; struct sock *rtnl; struct sock *genl_sock; struct list_head dev_base_head; struct hlist_head *dev_name_head; struct hlist_head *dev_index_head; unsigned int dev_base_seq; int ifindex; struct list_head rules_ops; struct net_device *loopback_dev; struct netns_core core; struct netns_mib mib; struct netns_packet packet; struct netns_unix unx; struct netns_ipv4 ipv4; struct netns_ipv6 ipv6; struct netns_sctp sctp; struct netns_dccp dccp; struct netns_xt xt; struct netns_ct ct; struct netns_nf_frag nf_frag; struct sock *nfnl; struct sock *nfnl_stash; struct sk_buff_head wext_nlevents; struct net_generic __rcu *gen; struct netns_xfrm xfrm; struct netns_ipvs *ipvs; struct sock *diag_nlsk; atomic_t rt_genid; };


copy_net_ns 	( diff_type: Mod type: function file: include/net/net_namespace.h )
	-- static inline struct net *copy_net_ns(unsigned long flags,struct net *net_ns)
	++ static inline struct net *copy_net_ns(unsigned long flags,struct user_namespace *user_ns, struct net *old_net)


cgroup_netprio_state 	( diff_type: Mod type: struct file: include/net/netprio_cgroup.h )
	-- struct cgroup_netprio_state { struct cgroup_subsys_state css; u32 prioidx; };
	++ struct cgroup_netprio_state { struct cgroup_subsys_state css; };


sock_update_netprioidx 	( diff_type: Mod type: macro file: include/net/netprio_cgroup.h )
	-- #define sock_update_netprioidx(sk)
	++ #define sock_update_netprioidx(sk,task)


__LINUX_NEIGHBOUR_H 	( diff_type: Mov type: macro file: include/linux/neighbour.h )
	-- include/uapi/linux/neighbour.h
	++ #define __LINUX_NEIGHBOUR_H


ndmsg 	( diff_type: Mov type: struct file: include/linux/neighbour.h )
	-- include/uapi/linux/neighbour.h
	++ struct ndmsg { __u8 ndm_family; __u8 ndm_pad1; __u16 ndm_pad2; __s32 ndm_ifindex; __u16 ndm_state; __u8 ndm_flags; __u8 ndm_type; };


NDA_MAX 	( diff_type: Mov type: macro file: include/linux/neighbour.h )
	-- include/uapi/linux/neighbour.h
	++ #define NDA_MAX (__NDA_MAX - 1)


NTF_USE 	( diff_type: Mov type: macro file: include/linux/neighbour.h )
	-- include/uapi/linux/neighbour.h
	++ #define NTF_USE 0x01


NTF_PROXY 	( diff_type: Mov type: macro file: include/linux/neighbour.h )
	-- include/uapi/linux/neighbour.h
	++ #define NTF_PROXY 0x08


NTF_ROUTER 	( diff_type: Mov type: macro file: include/linux/neighbour.h )
	-- include/uapi/linux/neighbour.h
	++ #define NTF_ROUTER 0x80


NTF_SELF 	( diff_type: Mov type: macro file: include/linux/neighbour.h )
	-- include/uapi/linux/neighbour.h
	++ #define NTF_SELF 0x02


NTF_MASTER 	( diff_type: Mov type: macro file: include/linux/neighbour.h )
	-- include/uapi/linux/neighbour.h
	++ #define NTF_MASTER 0x04


NUD_INCOMPLETE 	( diff_type: Mov type: macro file: include/linux/neighbour.h )
	-- include/uapi/linux/neighbour.h
	++ #define NUD_INCOMPLETE 0x01


NUD_REACHABLE 	( diff_type: Mov type: macro file: include/linux/neighbour.h )
	-- include/uapi/linux/neighbour.h
	++ #define NUD_REACHABLE 0x02


NUD_STALE 	( diff_type: Mov type: macro file: include/linux/neighbour.h )
	-- include/uapi/linux/neighbour.h
	++ #define NUD_STALE 0x04


NUD_DELAY 	( diff_type: Mov type: macro file: include/linux/neighbour.h )
	-- include/uapi/linux/neighbour.h
	++ #define NUD_DELAY 0x08


NUD_PROBE 	( diff_type: Mov type: macro file: include/linux/neighbour.h )
	-- include/uapi/linux/neighbour.h
	++ #define NUD_PROBE 0x10


NUD_FAILED 	( diff_type: Mov type: macro file: include/linux/neighbour.h )
	-- include/uapi/linux/neighbour.h
	++ #define NUD_FAILED 0x20


NUD_NOARP 	( diff_type: Mov type: macro file: include/linux/neighbour.h )
	-- include/uapi/linux/neighbour.h
	++ #define NUD_NOARP 0x40


NUD_PERMANENT 	( diff_type: Mov type: macro file: include/linux/neighbour.h )
	-- include/uapi/linux/neighbour.h
	++ #define NUD_PERMANENT 0x80


NUD_NONE 	( diff_type: Mov type: macro file: include/linux/neighbour.h )
	-- include/uapi/linux/neighbour.h
	++ #define NUD_NONE 0x00


nda_cacheinfo 	( diff_type: Mov type: struct file: include/linux/neighbour.h )
	-- include/uapi/linux/neighbour.h
	++ struct nda_cacheinfo { __u32 ndm_confirmed; __u32 ndm_used; __u32 ndm_updated; __u32 ndm_refcnt; };


ndt_stats 	( diff_type: Mov type: struct file: include/linux/neighbour.h )
	-- include/uapi/linux/neighbour.h
	++ struct ndt_stats { __u64 ndts_allocs; __u64 ndts_destroys; __u64 ndts_hash_grows; __u64 ndts_res_failed; __u64 ndts_lookups; __u64 ndts_hits; __u64 ndts_rcv_probes_mcast; __u64 ndts_rcv_probes_ucast; __u64 ndts_periodic_gc_runs; __u64 ndts_forced_gc_runs; };


NDTPA_MAX 	( diff_type: Mov type: macro file: include/linux/neighbour.h )
	-- include/uapi/linux/neighbour.h
	++ #define NDTPA_MAX (__NDTPA_MAX - 1)


ndtmsg 	( diff_type: Mov type: struct file: include/linux/neighbour.h )
	-- include/uapi/linux/neighbour.h
	++ struct ndtmsg { __u8 ndtm_family; __u8 ndtm_pad1; __u16 ndtm_pad2; };


ndt_config 	( diff_type: Mov type: struct file: include/linux/neighbour.h )
	-- include/uapi/linux/neighbour.h
	++ struct ndt_config { __u16 ndtc_key_len; __u16 ndtc_entry_size; __u32 ndtc_entries; __u32 ndtc_last_flush; __u32 ndtc_last_rand; __u32 ndtc_hash_rnd; __u32 ndtc_hash_mask; __u32 ndtc_hash_chain_gc; __u32 ndtc_proxy_qlen; };


NDTA_MAX 	( diff_type: Mov type: macro file: include/linux/neighbour.h )
	-- include/uapi/linux/neighbour.h
	++ #define NDTA_MAX (__NDTA_MAX - 1)


RNDGETENTCNT 	( diff_type: Mov type: macro file: include/linux/random.h )
	-- include/uapi/linux/random.h
	++ #define RNDGETENTCNT _IOR( 'R',0x00,int )


RNDADDTOENTCNT 	( diff_type: Mov type: macro file: include/linux/random.h )
	-- include/uapi/linux/random.h
	++ #define RNDADDTOENTCNT _IOW( 'R',0x01,int )


RNDGETPOOL 	( diff_type: Mov type: macro file: include/linux/random.h )
	-- include/uapi/linux/random.h
	++ #define RNDGETPOOL _IOR( 'R',0x02,int [2] )


RNDADDENTROPY 	( diff_type: Mov type: macro file: include/linux/random.h )
	-- include/uapi/linux/random.h
	++ #define RNDADDENTROPY _IOW( 'R',0x03,int [2] )


RNDZAPENTCNT 	( diff_type: Mov type: macro file: include/linux/random.h )
	-- include/uapi/linux/random.h
	++ #define RNDZAPENTCNT _IO( 'R',0x04 )


RNDCLEARPOOL 	( diff_type: Mov type: macro file: include/linux/random.h )
	-- include/uapi/linux/random.h
	++ #define RNDCLEARPOOL _IO( 'R',0x06 )


rand_pool_info 	( diff_type: Mov type: struct file: include/linux/random.h )
	-- include/uapi/linux/random.h
	++ struct rand_pool_info { int entropy_count; int buf_size; __u32 buf[0]; };


rnd_state 	( diff_type: Mov type: struct file: include/linux/random.h )
	-- include/uapi/linux/random.h
	++ struct rnd_state { __u32 s1, s2, s3; };


random32 	( diff_type: Mod type: prototype-->macro file: include/linux/random.h )
	-- u32 random32(void);
	++ #define random32() prandom_u32()


srandom32 	( diff_type: Mod type: prototype-->macro file: include/linux/random.h )
	-- void srandom32(u32 seed);
	++ #define srandom32(seed) prandom_seed(seed)


prandom32 	( diff_type: Del type: prototype file: include/linux/random.h )
	-- u32 prandom32(struct rnd_state *);


prandom32_seed 	( diff_type: Del type: function file: include/linux/random.h )
	-- static inline void prandom32_seed(struct rnd_state *state,u64 seed)


_ASM_X86_TYPES_H 	( diff_type: Mov type: macro file: arch/x86/include/asm/types.h )
	-- arch/x86/include/uapi/asm/types.h
	++ #define _ASM_X86_TYPES_H


NPROTO 	( diff_type: Mov type: macro file: include/linux/net.h )
	-- include/uapi/linux/net.h
	++ #define NPROTO AF_MAX


SYS_SOCKET 	( diff_type: Mov type: macro file: include/linux/net.h )
	-- include/uapi/linux/net.h
	++ #define SYS_SOCKET 1


SYS_BIND 	( diff_type: Mov type: macro file: include/linux/net.h )
	-- include/uapi/linux/net.h
	++ #define SYS_BIND 2


SYS_CONNECT 	( diff_type: Mov type: macro file: include/linux/net.h )
	-- include/uapi/linux/net.h
	++ #define SYS_CONNECT 3


SYS_LISTEN 	( diff_type: Mov type: macro file: include/linux/net.h )
	-- include/uapi/linux/net.h
	++ #define SYS_LISTEN 4


SYS_ACCEPT 	( diff_type: Mov type: macro file: include/linux/net.h )
	-- include/uapi/linux/net.h
	++ #define SYS_ACCEPT 5


SYS_GETSOCKNAME 	( diff_type: Mov type: macro file: include/linux/net.h )
	-- include/uapi/linux/net.h
	++ #define SYS_GETSOCKNAME 6


SYS_GETPEERNAME 	( diff_type: Mov type: macro file: include/linux/net.h )
	-- include/uapi/linux/net.h
	++ #define SYS_GETPEERNAME 7


SYS_SOCKETPAIR 	( diff_type: Mov type: macro file: include/linux/net.h )
	-- include/uapi/linux/net.h
	++ #define SYS_SOCKETPAIR 8


SYS_SEND 	( diff_type: Mov type: macro file: include/linux/net.h )
	-- include/uapi/linux/net.h
	++ #define SYS_SEND 9


SYS_RECV 	( diff_type: Mov type: macro file: include/linux/net.h )
	-- include/uapi/linux/net.h
	++ #define SYS_RECV 10


SYS_SENDTO 	( diff_type: Mov type: macro file: include/linux/net.h )
	-- include/uapi/linux/net.h
	++ #define SYS_SENDTO 11


SYS_RECVFROM 	( diff_type: Mov type: macro file: include/linux/net.h )
	-- include/uapi/linux/net.h
	++ #define SYS_RECVFROM 12


SYS_SHUTDOWN 	( diff_type: Mov type: macro file: include/linux/net.h )
	-- include/uapi/linux/net.h
	++ #define SYS_SHUTDOWN 13


SYS_SETSOCKOPT 	( diff_type: Mov type: macro file: include/linux/net.h )
	-- include/uapi/linux/net.h
	++ #define SYS_SETSOCKOPT 14


SYS_GETSOCKOPT 	( diff_type: Mov type: macro file: include/linux/net.h )
	-- include/uapi/linux/net.h
	++ #define SYS_GETSOCKOPT 15


SYS_SENDMSG 	( diff_type: Mov type: macro file: include/linux/net.h )
	-- include/uapi/linux/net.h
	++ #define SYS_SENDMSG 16


SYS_RECVMSG 	( diff_type: Mov type: macro file: include/linux/net.h )
	-- include/uapi/linux/net.h
	++ #define SYS_RECVMSG 17


SYS_ACCEPT4 	( diff_type: Mov type: macro file: include/linux/net.h )
	-- include/uapi/linux/net.h
	++ #define SYS_ACCEPT4 18


SYS_RECVMMSG 	( diff_type: Mov type: macro file: include/linux/net.h )
	-- include/uapi/linux/net.h
	++ #define SYS_RECVMMSG 19


SYS_SENDMMSG 	( diff_type: Mov type: macro file: include/linux/net.h )
	-- include/uapi/linux/net.h
	++ #define SYS_SENDMMSG 20


socket_state 	( diff_type: Mov type: enum file: include/linux/net.h )
	-- include/uapi/linux/net.h
	++ typedef enum { SS_FREE = 0, SS_UNCONNECTED, SS_CONNECTING, SS_CONNECTED, SS_DISCONNECTING } socket_state;


__SO_ACCEPTCON 	( diff_type: Mov type: macro file: include/linux/net.h )
	-- include/uapi/linux/net.h
	++ #define __SO_ACCEPTCON (1 << 16)


sock_map_fd 	( diff_type: Del type: prototype file: include/linux/net.h )
	-- extern int sock_map_fd(struct socket *sock,int flags);


dma_map_ops 	( diff_type: Mod type: struct file: include/linux/dma-mapping.h )
	-- struct dma_map_ops { void* (*alloc)(struct device *dev, size_t size,dma_addr_t *dma_handle, gfp_t gfp,struct dma_attrs *attrs); void (*free)(struct device *dev, size_t size,void *vaddr, dma_addr_t dma_handle,struct dma_attrs *attrs); int (*mmap)(struct device *, struct vm_area_struct *,void *, dma_addr_t, size_t, struct dma_attrs *attrs); dma_addr_t (*map_page)(struct device *dev, struct page *page,unsigned long offset, size_t size,enum dma_data_direction dir,struct dma_attrs *attrs); void (*unmap_page)(struct device *dev, dma_addr_t dma_handle,size_t size, enum dma_data_direction dir,struct dma_attrs *attrs); int (*map_sg)(struct device *dev, struct scatterlist *sg,int nents, enum dma_data_direction dir,struct dma_attrs *attrs); void (*unmap_sg)(struct device *dev,struct scatterlist *sg, int nents,enum dma_data_direction dir,struct dma_attrs *attrs); void (*sync_single_for_cpu)(struct device *dev,dma_addr_t dma_handle, size_t size,enum dma_data_direction dir); void (*sync_single_for_device)(struct device *dev,dma_addr_t dma_handle, size_t size,enum dma_data_direction dir); void (*sync_sg_for_cpu)(struct device *dev,struct scatterlist *sg, int nents,enum dma_data_direction dir); void (*sync_sg_for_device)(struct device *dev,struct scatterlist *sg, int nents,enum dma_data_direction dir); int (*mapping_error)(struct device *dev, dma_addr_t dma_addr); int (*dma_supported)(struct device *dev, u64 mask); int (*set_dma_mask)(struct device *dev, u64 mask); u64 (*get_required_mask)(struct device *dev); int is_phys; };
	++ struct dma_map_ops { void* (*alloc)(struct device *dev, size_t size,dma_addr_t *dma_handle, gfp_t gfp,struct dma_attrs *attrs); void (*free)(struct device *dev, size_t size,void *vaddr, dma_addr_t dma_handle,struct dma_attrs *attrs); int (*mmap)(struct device *, struct vm_area_struct *,void *, dma_addr_t, size_t, struct dma_attrs *attrs); int (*get_sgtable)(struct device *dev, struct sg_table *sgt, void *,dma_addr_t, size_t, struct dma_attrs *attrs); dma_addr_t (*map_page)(struct device *dev, struct page *page,unsigned long offset, size_t size,enum dma_data_direction dir,struct dma_attrs *attrs); void (*unmap_page)(struct device *dev, dma_addr_t dma_handle,size_t size, enum dma_data_direction dir,struct dma_attrs *attrs); int (*map_sg)(struct device *dev, struct scatterlist *sg,int nents, enum dma_data_direction dir,struct dma_attrs *attrs); void (*unmap_sg)(struct device *dev,struct scatterlist *sg, int nents,enum dma_data_direction dir,struct dma_attrs *attrs); void (*sync_single_for_cpu)(struct device *dev,dma_addr_t dma_handle, size_t size,enum dma_data_direction dir); void (*sync_single_for_device)(struct device *dev,dma_addr_t dma_handle, size_t size,enum dma_data_direction dir); void (*sync_sg_for_cpu)(struct device *dev,struct scatterlist *sg, int nents,enum dma_data_direction dir); void (*sync_sg_for_device)(struct device *dev,struct scatterlist *sg, int nents,enum dma_data_direction dir); int (*mapping_error)(struct device *dev, dma_addr_t dma_addr); int (*dma_supported)(struct device *dev, u64 mask); int (*set_dma_mask)(struct device *dev, u64 mask); u64 (*get_required_mask)(struct device *dev); int is_phys; };


arch_read_lock 	( diff_type: Mod type: macro file: include/linux/spinlock_up.h )
	-- #define arch_read_lock(lock) do { (void)(lock); } while (0)
	++ #define arch_read_lock(lock) do { barrier(); (void)(lock); } while (0)


arch_write_lock 	( diff_type: Mod type: macro file: include/linux/spinlock_up.h )
	-- #define arch_write_lock(lock) do { (void)(lock); } while (0)
	++ #define arch_write_lock(lock) do { barrier(); (void)(lock); } while (0)


arch_read_trylock 	( diff_type: Mod type: macro file: include/linux/spinlock_up.h )
	-- #define arch_read_trylock(lock) ({ (void)(lock); 1; })
	++ #define arch_read_trylock(lock) ({ barrier(); (void)(lock); 1; })


arch_write_trylock 	( diff_type: Mod type: macro file: include/linux/spinlock_up.h )
	-- #define arch_write_trylock(lock) ({ (void)(lock); 1; })
	++ #define arch_write_trylock(lock) ({ barrier(); (void)(lock); 1; })


arch_read_unlock 	( diff_type: Mod type: macro file: include/linux/spinlock_up.h )
	-- #define arch_read_unlock(lock) do { (void)(lock); } while (0)
	++ #define arch_read_unlock(lock) do { barrier(); (void)(lock); } while (0)


arch_write_unlock 	( diff_type: Mod type: macro file: include/linux/spinlock_up.h )
	-- #define arch_write_unlock(lock) do { (void)(lock); } while (0)
	++ #define arch_write_unlock(lock) do { barrier(); (void)(lock); } while (0)


put_user 	( diff_type: Mod type: macro file: arch/x86/include/asm/uaccess.h )
	-- #define put_user(x,ptr) ({ int __ret_pu; __typeof__(*(ptr))__pus_tmp = x; __ret_pu = 0; if (unlikely(__copy_to_user_ll(ptr, &__pus_tmp, sizeof(*(ptr))) != 0)) __ret_pu = -EFAULT; __ret_pu; })
	++ #define put_user(x,ptr) ({ int __ret_pu; __typeof__(*(ptr)) __pu_val; __chk_user_ptr(ptr); might_fault(); __pu_val = x; switch (sizeof(*(ptr))) { case 1: __put_user_x(1, __pu_val, ptr, __ret_pu); break; case 2: __put_user_x(2, __pu_val, ptr, __ret_pu); break; case 4: __put_user_x(4, __pu_val, ptr, __ret_pu); break; case 8: __put_user_x8(__pu_val, ptr, __ret_pu); break; default: __put_user_x(X, __pu_val, ptr, __ret_pu); break; } __ret_pu; })


__put_user_size 	( diff_type: Mod type: macro file: arch/x86/include/asm/uaccess.h )
	-- #define __put_user_size(x,ptr,size,retval,errret) do { __typeof__(*(ptr))__pus_tmp = x; retval = 0; if (unlikely(__copy_to_user_ll(ptr, &__pus_tmp, size) != 0)) retval = errret; } while (0)
	++ #define __put_user_size(x,ptr,size,retval,errret) do { retval = 0; __chk_user_ptr(ptr); switch (size) { case 1: __put_user_asm(x, ptr, retval, "b", "b", "iq", errret); break; case 2: __put_user_asm(x, ptr, retval, "w", "w", "ir", errret); break; case 4: __put_user_asm(x, ptr, retval, "l", "k", "ir", errret); break; case 8: __put_user_asm_u64((__typeof__(*ptr))(x), ptr, retval, errret); break; default: __put_user_bad(); } } while (0)


__get_user_asm 	( diff_type: Mod type: macro file: arch/x86/include/asm/uaccess.h )
	-- #define __get_user_asm(x,addr,err,itype,rtype,ltype,errret) asm volatile("1: mov"itype" %2,%"rtype"1\n" "2:\n" ".section .fixup,\"ax\"\n" "3: mov %3,%0\n" " xor"itype" %"rtype"1,%"rtype"1\n" " jmp 2b\n" ".previous\n" _ASM_EXTABLE(1b, 3b) : "=r" (err), ltype(x) : "m" (__m(addr)), "i" (errret), "0" (err))
	++ #define __get_user_asm(x,addr,err,itype,rtype,ltype,errret) asm volatile(ASM_STAC "\n" "1: mov"itype" %2,%"rtype"1\n" "2: " ASM_CLAC "\n" ".section .fixup,\"ax\"\n" "3: mov %3,%0\n" " xor"itype" %"rtype"1,%"rtype"1\n" " jmp 2b\n" ".previous\n" _ASM_EXTABLE(1b, 3b) : "=r" (err), ltype(x) : "m" (__m(addr)), "i" (errret), "0" (err))


__put_user_asm 	( diff_type: Mod type: macro file: arch/x86/include/asm/uaccess.h )
	-- #define __put_user_asm(x,addr,err,itype,rtype,ltype,errret) asm volatile("1: mov"itype" %"rtype"1,%2\n" "2:\n" ".section .fixup,\"ax\"\n" "3: mov %3,%0\n" " jmp 2b\n" ".previous\n" _ASM_EXTABLE(1b, 3b) : "=r"(err) : ltype(x), "m" (__m(addr)), "i" (errret), "0" (err))
	++ #define __put_user_asm(x,addr,err,itype,rtype,ltype,errret) asm volatile(ASM_STAC "\n" "1: mov"itype" %"rtype"1,%2\n" "2: " ASM_CLAC "\n" ".section .fixup,\"ax\"\n" "3: mov %3,%0\n" " jmp 2b\n" ".previous\n" _ASM_EXTABLE(1b, 3b) : "=r"(err) : ltype(x), "m" (__m(addr)), "i" (errret), "0" (err))


uaccess_try 	( diff_type: Mod type: macro file: arch/x86/include/asm/uaccess.h )
	-- #define uaccess_try do { int prev_err = current_thread_info()->uaccess_err; current_thread_info()->uaccess_err = 0; barrier();
	++ #define uaccess_try do { current_thread_info()->uaccess_err = 0; stac(); barrier();


uaccess_catch 	( diff_type: Mod type: macro file: arch/x86/include/asm/uaccess.h )
	-- #define uaccess_catch(err) (err) |= (current_thread_info()->uaccess_err ? -EFAULT : 0); current_thread_info()->uaccess_err = prev_err; } while (0)
	++ #define uaccess_catch(err) clac(); (err) |= (current_thread_info()->uaccess_err ? -EFAULT : 0); } while (0)


put_user_try 	( diff_type: Mod type: macro file: arch/x86/include/asm/uaccess.h )
	-- #define put_user_try do { int __uaccess_err = 0;
	++ #define put_user_try uaccess_try


put_user_catch 	( diff_type: Mod type: macro file: arch/x86/include/asm/uaccess.h )
	-- #define put_user_catch(err) (err) |= __uaccess_err; } while (0)
	++ #define put_user_catch(err) uaccess_catch(err)


put_user_ex 	( diff_type: Mod type: macro file: arch/x86/include/asm/uaccess.h )
	-- #define put_user_ex(x,ptr) do { __uaccess_err |= __put_user(x, ptr); } while (0)
	++ #define put_user_ex(x,ptr) __put_user_size_ex((__typeof__(*(ptr)))(x), (ptr), sizeof(*(ptr)))


NUM_INVALIDATE_TLB_VECTORS 	( diff_type: Del type: macro file: arch/x86/include/asm/irq_vectors.h )
	-- # define NUM_INVALIDATE_TLB_VECTORS (32)


INVALIDATE_TLB_VECTOR_END 	( diff_type: Del type: macro file: arch/x86/include/asm/irq_vectors.h )
	-- #define INVALIDATE_TLB_VECTOR_END (0xee)


INVALIDATE_TLB_VECTOR_START 	( diff_type: Del type: macro file: arch/x86/include/asm/irq_vectors.h )
	-- #define INVALIDATE_TLB_VECTOR_START (INVALIDATE_TLB_VECTOR_END-NUM_INVALIDATE_TLB_VECTORS+1)


_LINUX_CONST_H 	( diff_type: Mov type: macro file: include/linux/const.h )
	-- include/uapi/linux/const.h
	++ #define _LINUX_CONST_H


_AC 	( diff_type: Mov type: macro file: include/linux/const.h )
	-- include/uapi/linux/const.h
	++ #define _AC(X,Y) __AC(X,Y)


_AT 	( diff_type: Mov type: macro file: include/linux/const.h )
	-- include/uapi/linux/const.h
	++ #define _AT(T,X) ((T)(X))


__AC 	( diff_type: Mov type: macro file: include/linux/const.h )
	-- include/uapi/linux/const.h
	++ #define __AC(X,Y) (X##Y)


_ASM_X86_STAT_H 	( diff_type: Mov type: macro file: arch/x86/include/asm/stat.h )
	-- arch/x86/include/uapi/asm/stat.h
	++ #define _ASM_X86_STAT_H


STAT_HAVE_NSEC 	( diff_type: Mov type: macro file: arch/x86/include/asm/stat.h )
	-- arch/x86/include/uapi/asm/stat.h
	++ #define STAT_HAVE_NSEC 1


stat 	( diff_type: Mov type: struct file: arch/x86/include/asm/stat.h )
	-- arch/x86/include/uapi/asm/stat.h
	++ struct stat { unsigned long st_dev; unsigned long st_ino; unsigned long st_nlink; unsigned int st_mode; unsigned int st_uid; unsigned int st_gid; unsigned int __pad0; unsigned long st_rdev; long st_size; long st_blksize; long st_blocks; unsigned long st_atime; unsigned long st_atime_nsec; unsigned long st_mtime; unsigned long st_mtime_nsec; unsigned long st_ctime; unsigned long st_ctime_nsec; long __unused[3]; };


INIT_STRUCT_STAT_PADDING 	( diff_type: Mov type: macro file: arch/x86/include/asm/stat.h )
	-- arch/x86/include/uapi/asm/stat.h
	++ #define INIT_STRUCT_STAT_PADDING(st) do { st.__pad0 = 0; st.__unused[0] = 0; st.__unused[1] = 0; st.__unused[2] = 0; } while (0)


STAT64_HAS_BROKEN_ST_INO 	( diff_type: Mov type: macro file: arch/x86/include/asm/stat.h )
	-- arch/x86/include/uapi/asm/stat.h
	++ #define STAT64_HAS_BROKEN_ST_INO 1


stat64 	( diff_type: Mov type: struct file: arch/x86/include/asm/stat.h )
	-- arch/x86/include/uapi/asm/stat.h
	++ struct stat64 { unsigned long long st_dev; unsigned char __pad0[4]; unsigned long __st_ino; unsigned int st_mode; unsigned int st_nlink; unsigned long st_uid; unsigned long st_gid; unsigned long long st_rdev; unsigned char __pad3[4]; long long st_size; unsigned long st_blksize; unsigned long long st_blocks; unsigned long st_atime; unsigned long st_atime_nsec; unsigned long st_mtime; unsigned int st_mtime_nsec; unsigned long st_ctime; unsigned long st_ctime_nsec; unsigned long long st_ino; };


INIT_STRUCT_STAT64_PADDING 	( diff_type: Mov type: macro file: arch/x86/include/asm/stat.h )
	-- arch/x86/include/uapi/asm/stat.h
	++ #define INIT_STRUCT_STAT64_PADDING(st) do { memset(&st.__pad0, 0, sizeof(st.__pad0)); memset(&st.__pad3, 0, sizeof(st.__pad3)); } while (0)


__old_kernel_stat 	( diff_type: Mov type: struct file: arch/x86/include/asm/stat.h )
	-- arch/x86/include/uapi/asm/stat.h
	++ struct __old_kernel_stat { unsigned short st_dev; unsigned short st_ino; unsigned short st_mode; unsigned short st_nlink; unsigned short st_uid; unsigned short st_gid; unsigned short st_rdev; unsigned long st_size; unsigned long st_atime; unsigned long st_mtime; unsigned long st_ctime; unsigned int st_size; unsigned int st_atime; unsigned int st_mtime; unsigned int st_ctime; };


CTL_MAXNAME 	( diff_type: Del type: macro file: include/linux/sysctl.h )
	-- #define CTL_MAXNAME 10


__sysctl_args 	( diff_type: Del type: struct file: include/linux/sysctl.h )
	-- struct __sysctl_args { int __user *name; int nlen; void __user *oldval; size_t __user *oldlenp; void __user *newval; size_t newlen; unsigned long __unused[4]; };


ctl_table_root 	( diff_type: Mod type: struct file: include/linux/sysctl.h )
	-- struct ctl_table_root { struct ctl_table_set default_set; struct ctl_table_set *(*lookup)(struct ctl_table_root *root,struct nsproxy *namespaces); int (*permissions)(struct ctl_table_root *root,struct nsproxy *namespaces, struct ctl_table *table); };
	++ struct ctl_table_root { struct ctl_table_set default_set; struct ctl_table_set *(*lookup)(struct ctl_table_root *root,struct nsproxy *namespaces); int (*permissions)(struct ctl_table_header *head, struct ctl_table *table); };


_LINUX_ELF_EM_H 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define _LINUX_ELF_EM_H


EM_NONE 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_NONE 0


EM_M32 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_M32 1


EM_SPARC 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_SPARC 2


EM_386 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_386 3


EM_68K 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_68K 4


EM_88K 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_88K 5


EM_486 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_486 6


EM_860 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_860 7


EM_MIPS 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_MIPS 8


EM_MIPS_RS3_LE 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_MIPS_RS3_LE 10


EM_MIPS_RS4_BE 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_MIPS_RS4_BE 10


EM_PARISC 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_PARISC 15


EM_SPARC32PLUS 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_SPARC32PLUS 18


EM_PPC 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_PPC 20


EM_PPC64 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_PPC64 21


EM_SPU 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_SPU 23


EM_SH 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_SH 42


EM_SPARCV9 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_SPARCV9 43


EM_IA_64 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_IA_64 50


EM_X86_64 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_X86_64 62


EM_S390 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_S390 22


EM_CRIS 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_CRIS 76


EM_V850 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_V850 87


EM_M32R 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_M32R 88


EM_H8_300 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_H8_300 46


EM_MN10300 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_MN10300 89


EM_BLACKFIN 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_BLACKFIN 106


EM_TI_C6000 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_TI_C6000 140


EM_FRV 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_FRV 0x5441


EM_AVR32 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_AVR32 0x18ad


EM_ALPHA 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_ALPHA 0x9026


EM_CYGNUS_V850 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_CYGNUS_V850 0x9080


EM_CYGNUS_M32R 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_CYGNUS_M32R 0x9041


EM_S390_OLD 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_S390_OLD 0xA390


EM_CYGNUS_MN10300 	( diff_type: Del type: macro file: include/linux/elf-em.h )
	-- #define EM_CYGNUS_MN10300 0xbeef


align_flags 	( diff_type: Mod type: enum file: arch/x86/include/asm/elf.h )
	-- enum align_flags { ALIGN_VA_32 = BIT(0), ALIGN_VA_64 = BIT(1), ALIGN_VDSO = BIT(2), ALIGN_TOPDOWN = BIT(3), };
	++ enum align_flags { ALIGN_VA_32 = BIT(0), ALIGN_VA_64 = BIT(1), };


align_addr 	( diff_type: Del type: prototype file: arch/x86/include/asm/elf.h )
	-- extern unsigned long align_addr(unsigned long,struct file *,enum align_flags);


WNOHANG 	( diff_type: Del type: macro file: include/linux/wait.h )
	-- #define WNOHANG 0x00000001


WUNTRACED 	( diff_type: Del type: macro file: include/linux/wait.h )
	-- #define WUNTRACED 0x00000002


WSTOPPED 	( diff_type: Del type: macro file: include/linux/wait.h )
	-- #define WSTOPPED WUNTRACED


WEXITED 	( diff_type: Del type: macro file: include/linux/wait.h )
	-- #define WEXITED 0x00000004


WCONTINUED 	( diff_type: Del type: macro file: include/linux/wait.h )
	-- #define WCONTINUED 0x00000008


WNOWAIT 	( diff_type: Del type: macro file: include/linux/wait.h )
	-- #define WNOWAIT 0x01000000


__WNOTHREAD 	( diff_type: Del type: macro file: include/linux/wait.h )
	-- #define __WNOTHREAD 0x20000000


__WALL 	( diff_type: Del type: macro file: include/linux/wait.h )
	-- #define __WALL 0x40000000


__WCLONE 	( diff_type: Del type: macro file: include/linux/wait.h )
	-- #define __WCLONE 0x80000000


P_ALL 	( diff_type: Del type: macro file: include/linux/wait.h )
	-- #define P_ALL 0


P_PID 	( diff_type: Del type: macro file: include/linux/wait.h )
	-- #define P_PID 1


P_PGID 	( diff_type: Del type: macro file: include/linux/wait.h )
	-- #define P_PGID 2


_LINUX_POSIX_TYPES_H 	( diff_type: Del type: macro file: include/linux/posix_types.h )
	-- #define _LINUX_POSIX_TYPES_H


__FD_SETSIZE 	( diff_type: Del type: macro file: include/linux/posix_types.h )
	-- #define __FD_SETSIZE 1024


__kernel_fd_set 	( diff_type: Del type: struct file: include/linux/posix_types.h )
	-- typedef struct { unsigned long fds_bits[__FD_SETSIZE / (8 * sizeof(long))]; } __kernel_fd_set;


_LINUX_BYTEORDER_LITTLE_ENDIAN_H 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define _LINUX_BYTEORDER_LITTLE_ENDIAN_H


__LITTLE_ENDIAN 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __LITTLE_ENDIAN 1234


__LITTLE_ENDIAN_BITFIELD 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __LITTLE_ENDIAN_BITFIELD


__constant_htonl 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_htonl(x) ((__force __be32)___constant_swab32((x)))


__constant_ntohl 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_ntohl(x) ___constant_swab32((__force __be32)(x))


__constant_htons 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_htons(x) ((__force __be16)___constant_swab16((x)))


__constant_ntohs 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_ntohs(x) ___constant_swab16((__force __be16)(x))


__constant_cpu_to_le64 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_cpu_to_le64(x) ((__force __le64)(__u64)(x))


__constant_le64_to_cpu 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_le64_to_cpu(x) ((__force __u64)(__le64)(x))


__constant_cpu_to_le32 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_cpu_to_le32(x) ((__force __le32)(__u32)(x))


__constant_le32_to_cpu 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_le32_to_cpu(x) ((__force __u32)(__le32)(x))


__constant_cpu_to_le16 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_cpu_to_le16(x) ((__force __le16)(__u16)(x))


__constant_le16_to_cpu 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_le16_to_cpu(x) ((__force __u16)(__le16)(x))


__constant_cpu_to_be64 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_cpu_to_be64(x) ((__force __be64)___constant_swab64((x)))


__constant_be64_to_cpu 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_be64_to_cpu(x) ___constant_swab64((__force __u64)(__be64)(x))


__constant_cpu_to_be32 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_cpu_to_be32(x) ((__force __be32)___constant_swab32((x)))


__constant_be32_to_cpu 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_be32_to_cpu(x) ___constant_swab32((__force __u32)(__be32)(x))


__constant_cpu_to_be16 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_cpu_to_be16(x) ((__force __be16)___constant_swab16((x)))


__constant_be16_to_cpu 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __constant_be16_to_cpu(x) ___constant_swab16((__force __u16)(__be16)(x))


__cpu_to_le64 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __cpu_to_le64(x) ((__force __le64)(__u64)(x))


__le64_to_cpu 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __le64_to_cpu(x) ((__force __u64)(__le64)(x))


__cpu_to_le32 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __cpu_to_le32(x) ((__force __le32)(__u32)(x))


__le32_to_cpu 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __le32_to_cpu(x) ((__force __u32)(__le32)(x))


__cpu_to_le16 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __cpu_to_le16(x) ((__force __le16)(__u16)(x))


__le16_to_cpu 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __le16_to_cpu(x) ((__force __u16)(__le16)(x))


__cpu_to_be64 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __cpu_to_be64(x) ((__force __be64)__swab64((x)))


__be64_to_cpu 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __be64_to_cpu(x) __swab64((__force __u64)(__be64)(x))


__cpu_to_be32 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __cpu_to_be32(x) ((__force __be32)__swab32((x)))


__be32_to_cpu 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __be32_to_cpu(x) __swab32((__force __u32)(__be32)(x))


__cpu_to_be16 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __cpu_to_be16(x) ((__force __be16)__swab16((x)))


__be16_to_cpu 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __be16_to_cpu(x) __swab16((__force __u16)(__be16)(x))


__cpu_to_le64p 	( diff_type: Del type: function file: include/linux/byteorder/little_endian.h )
	-- static inline __le64 __cpu_to_le64p(const __u64 *p)


__le64_to_cpup 	( diff_type: Del type: function file: include/linux/byteorder/little_endian.h )
	-- static inline __u64 __le64_to_cpup(const __le64 *p)


__cpu_to_le32p 	( diff_type: Del type: function file: include/linux/byteorder/little_endian.h )
	-- static inline __le32 __cpu_to_le32p(const __u32 *p)


__le32_to_cpup 	( diff_type: Del type: function file: include/linux/byteorder/little_endian.h )
	-- static inline __u32 __le32_to_cpup(const __le32 *p)


__cpu_to_le16p 	( diff_type: Del type: function file: include/linux/byteorder/little_endian.h )
	-- static inline __le16 __cpu_to_le16p(const __u16 *p)


__le16_to_cpup 	( diff_type: Del type: function file: include/linux/byteorder/little_endian.h )
	-- static inline __u16 __le16_to_cpup(const __le16 *p)


__cpu_to_be64p 	( diff_type: Del type: function file: include/linux/byteorder/little_endian.h )
	-- static inline __be64 __cpu_to_be64p(const __u64 *p)


__be64_to_cpup 	( diff_type: Del type: function file: include/linux/byteorder/little_endian.h )
	-- static inline __u64 __be64_to_cpup(const __be64 *p)


__cpu_to_be32p 	( diff_type: Del type: function file: include/linux/byteorder/little_endian.h )
	-- static inline __be32 __cpu_to_be32p(const __u32 *p)


__be32_to_cpup 	( diff_type: Del type: function file: include/linux/byteorder/little_endian.h )
	-- static inline __u32 __be32_to_cpup(const __be32 *p)


__cpu_to_be16p 	( diff_type: Del type: function file: include/linux/byteorder/little_endian.h )
	-- static inline __be16 __cpu_to_be16p(const __u16 *p)


__be16_to_cpup 	( diff_type: Del type: function file: include/linux/byteorder/little_endian.h )
	-- static inline __u16 __be16_to_cpup(const __be16 *p)


__cpu_to_le64s 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __cpu_to_le64s(x) do { (void)(x); } while (0)


__le64_to_cpus 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __le64_to_cpus(x) do { (void)(x); } while (0)


__cpu_to_le32s 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __cpu_to_le32s(x) do { (void)(x); } while (0)


__le32_to_cpus 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __le32_to_cpus(x) do { (void)(x); } while (0)


__cpu_to_le16s 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __cpu_to_le16s(x) do { (void)(x); } while (0)


__le16_to_cpus 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __le16_to_cpus(x) do { (void)(x); } while (0)


__cpu_to_be64s 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __cpu_to_be64s(x) __swab64s((x))


__be64_to_cpus 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __be64_to_cpus(x) __swab64s((x))


__cpu_to_be32s 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __cpu_to_be32s(x) __swab32s((x))


__be32_to_cpus 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __be32_to_cpus(x) __swab32s((x))


__cpu_to_be16s 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __cpu_to_be16s(x) __swab16s((x))


__be16_to_cpus 	( diff_type: Del type: macro file: include/linux/byteorder/little_endian.h )
	-- #define __be16_to_cpus(x) __swab16s((x))


__ASM_GENERIC_PARAM_H 	( diff_type: Del type: macro file: include/asm-generic/param.h )
	-- #define __ASM_GENERIC_PARAM_H


HZ 	( diff_type: Del type: macro file: include/asm-generic/param.h )
	-- # define HZ CONFIG_HZ


EXEC_PAGESIZE 	( diff_type: Del type: macro file: include/asm-generic/param.h )
	-- #define EXEC_PAGESIZE 4096


NOGROUP 	( diff_type: Del type: macro file: include/asm-generic/param.h )
	-- #define NOGROUP (-1)


MAXHOSTNAMELEN 	( diff_type: Del type: macro file: include/asm-generic/param.h )
	-- #define MAXHOSTNAMELEN 64


USER_HZ 	( diff_type: Del type: macro file: include/asm-generic/param.h )
	-- # define USER_HZ 100


CLOCKS_PER_SEC 	( diff_type: Del type: macro file: include/asm-generic/param.h )
	-- # define CLOCKS_PER_SEC (USER_HZ)


TIF_IRET 	( diff_type: Del type: macro file: arch/x86/include/asm/thread_info.h )
	-- #define TIF_IRET 5


_TIF_IRET 	( diff_type: Del type: macro file: arch/x86/include/asm/thread_info.h )
	-- #define _TIF_IRET (1 << TIF_IRET)


_TIF_WORK_SYSCALL_ENTRY 	( diff_type: Mod type: macro file: arch/x86/include/asm/thread_info.h )
	-- #define _TIF_WORK_SYSCALL_ENTRY (_TIF_SYSCALL_TRACE | _TIF_SYSCALL_EMU | _TIF_SYSCALL_AUDIT | _TIF_SECCOMP | _TIF_SINGLESTEP | _TIF_SYSCALL_TRACEPOINT)
	++ #define _TIF_WORK_SYSCALL_ENTRY (_TIF_SYSCALL_TRACE | _TIF_SYSCALL_EMU | _TIF_SYSCALL_AUDIT | _TIF_SECCOMP | _TIF_SINGLESTEP | _TIF_SYSCALL_TRACEPOINT | _TIF_NOHZ)


_TIF_WORK_SYSCALL_EXIT 	( diff_type: Mod type: macro file: arch/x86/include/asm/thread_info.h )
	-- #define _TIF_WORK_SYSCALL_EXIT (_TIF_SYSCALL_TRACE | _TIF_SYSCALL_AUDIT | _TIF_SINGLESTEP | _TIF_SYSCALL_TRACEPOINT)
	++ #define _TIF_WORK_SYSCALL_EXIT (_TIF_SYSCALL_TRACE | _TIF_SYSCALL_AUDIT | _TIF_SINGLESTEP | _TIF_SYSCALL_TRACEPOINT | _TIF_NOHZ)


_TIF_ALLWORK_MASK 	( diff_type: Mod type: macro file: arch/x86/include/asm/thread_info.h )
	-- #define _TIF_ALLWORK_MASK ((0x0000FFFF & ~_TIF_SECCOMP) | _TIF_SYSCALL_TRACEPOINT)
	++ #define _TIF_ALLWORK_MASK ((0x0000FFFF & ~_TIF_SECCOMP) | _TIF_SYSCALL_TRACEPOINT | _TIF_NOHZ)


AT_NULL 	( diff_type: Del type: macro file: include/linux/auxvec.h )
	-- #define AT_NULL 0


AT_IGNORE 	( diff_type: Del type: macro file: include/linux/auxvec.h )
	-- #define AT_IGNORE 1


AT_EXECFD 	( diff_type: Del type: macro file: include/linux/auxvec.h )
	-- #define AT_EXECFD 2


AT_PHDR 	( diff_type: Del type: macro file: include/linux/auxvec.h )
	-- #define AT_PHDR 3


AT_PHENT 	( diff_type: Del type: macro file: include/linux/auxvec.h )
	-- #define AT_PHENT 4


AT_PHNUM 	( diff_type: Del type: macro file: include/linux/auxvec.h )
	-- #define AT_PHNUM 5


AT_PAGESZ 	( diff_type: Del type: macro file: include/linux/auxvec.h )
	-- #define AT_PAGESZ 6


AT_BASE 	( diff_type: Del type: macro file: include/linux/auxvec.h )
	-- #define AT_BASE 7


AT_FLAGS 	( diff_type: Del type: macro file: include/linux/auxvec.h )
	-- #define AT_FLAGS 8


AT_ENTRY 	( diff_type: Del type: macro file: include/linux/auxvec.h )
	-- #define AT_ENTRY 9


AT_NOTELF 	( diff_type: Del type: macro file: include/linux/auxvec.h )
	-- #define AT_NOTELF 10


AT_UID 	( diff_type: Del type: macro file: include/linux/auxvec.h )
	-- #define AT_UID 11


AT_EUID 	( diff_type: Del type: macro file: include/linux/auxvec.h )
	-- #define AT_EUID 12


AT_GID 	( diff_type: Del type: macro file: include/linux/auxvec.h )
	-- #define AT_GID 13


AT_EGID 	( diff_type: Del type: macro file: include/linux/auxvec.h )
	-- #define AT_EGID 14


AT_PLATFORM 	( diff_type: Del type: macro file: include/linux/auxvec.h )
	-- #define AT_PLATFORM 15


AT_HWCAP 	( diff_type: Del type: macro file: include/linux/auxvec.h )
	-- #define AT_HWCAP 16


AT_CLKTCK 	( diff_type: Del type: macro file: include/linux/auxvec.h )
	-- #define AT_CLKTCK 17


AT_SECURE 	( diff_type: Del type: macro file: include/linux/auxvec.h )
	-- #define AT_SECURE 23


AT_BASE_PLATFORM 	( diff_type: Del type: macro file: include/linux/auxvec.h )
	-- #define AT_BASE_PLATFORM 24


AT_RANDOM 	( diff_type: Del type: macro file: include/linux/auxvec.h )
	-- #define AT_RANDOM 25


AT_EXECFN 	( diff_type: Del type: macro file: include/linux/auxvec.h )
	-- #define AT_EXECFN 31


_LINUX_PRIO_TREE_H 	( diff_type: Del type: macro file: include/linux/prio_tree.h )
	-- #define _LINUX_PRIO_TREE_H


raw_prio_tree_node 	( diff_type: Del type: struct file: include/linux/prio_tree.h )
	-- struct raw_prio_tree_node { struct prio_tree_node *left; struct prio_tree_node *right; struct prio_tree_node *parent; };


prio_tree_node 	( diff_type: Del type: struct file: include/linux/prio_tree.h )
	-- struct prio_tree_node { struct prio_tree_node *left; struct prio_tree_node *right; struct prio_tree_node *parent; unsigned long start; unsigned long last; };


prio_tree_root 	( diff_type: Del type: function file: include/linux/prio_tree.h )
	-- static inline int prio_tree_root(const struct prio_tree_node *node)


prio_tree_iter 	( diff_type: Del type: struct file: include/linux/prio_tree.h )
	-- struct prio_tree_iter { struct prio_tree_node *cur; unsigned long mask; unsigned long value; int size_level; struct prio_tree_root *root; pgoff_t r_index; pgoff_t h_index; };


prio_tree_iter_init 	( diff_type: Del type: function file: include/linux/prio_tree.h )
	-- static inline void prio_tree_iter_init(struct prio_tree_iter *iter,struct prio_tree_root *root, pgoff_t r_index, pgoff_t h_index)


__INIT_PRIO_TREE_ROOT 	( diff_type: Del type: macro file: include/linux/prio_tree.h )
	-- #define __INIT_PRIO_TREE_ROOT(ptr,_raw) do { (ptr)->prio_tree_node = NULL; (ptr)->index_bits = 1; (ptr)->raw = (_raw); } while (0)


INIT_PRIO_TREE_ROOT 	( diff_type: Del type: macro file: include/linux/prio_tree.h )
	-- #define INIT_PRIO_TREE_ROOT(ptr) __INIT_PRIO_TREE_ROOT(ptr,0)


INIT_RAW_PRIO_TREE_ROOT 	( diff_type: Del type: macro file: include/linux/prio_tree.h )
	-- #define INIT_RAW_PRIO_TREE_ROOT(ptr) __INIT_PRIO_TREE_ROOT(ptr,1)


INIT_PRIO_TREE_NODE 	( diff_type: Del type: macro file: include/linux/prio_tree.h )
	-- #define INIT_PRIO_TREE_NODE(ptr) do { (ptr)->left = (ptr)->right = (ptr)->parent = (ptr); } while (0)


INIT_PRIO_TREE_ITER 	( diff_type: Del type: macro file: include/linux/prio_tree.h )
	-- #define INIT_PRIO_TREE_ITER(ptr) do { (ptr)->cur = NULL; (ptr)->mask = 0UL; (ptr)->value = 0UL; (ptr)->size_level = 0; } while (0)


prio_tree_entry 	( diff_type: Del type: macro file: include/linux/prio_tree.h )
	-- #define prio_tree_entry(ptr,type,member) ((type *)((char *)(ptr)-(unsigned long)(&((type *)0)->member)))


prio_tree_empty 	( diff_type: Del type: function file: include/linux/prio_tree.h )
	-- static inline int prio_tree_empty(const struct prio_tree_root *root)


prio_tree_left_empty 	( diff_type: Del type: function file: include/linux/prio_tree.h )
	-- static inline int prio_tree_left_empty(const struct prio_tree_node *node)


prio_tree_right_empty 	( diff_type: Del type: function file: include/linux/prio_tree.h )
	-- static inline int prio_tree_right_empty(const struct prio_tree_node *node)


prio_tree_replace 	( diff_type: Del type: prototype file: include/linux/prio_tree.h )
	-- struct prio_tree_node *prio_tree_replace(struct prio_tree_root *root,struct prio_tree_node *old, struct prio_tree_node *node);


prio_tree_insert 	( diff_type: Del type: prototype file: include/linux/prio_tree.h )
	-- struct prio_tree_node *prio_tree_insert(struct prio_tree_root *root,struct prio_tree_node *node);


prio_tree_remove 	( diff_type: Del type: prototype file: include/linux/prio_tree.h )
	-- void prio_tree_remove(struct prio_tree_root *root,struct prio_tree_node *node);


prio_tree_next 	( diff_type: Del type: prototype file: include/linux/prio_tree.h )
	-- struct prio_tree_node *prio_tree_next(struct prio_tree_iter *iter);


raw_prio_tree_replace 	( diff_type: Del type: macro file: include/linux/prio_tree.h )
	-- #define raw_prio_tree_replace(root,old,node) prio_tree_replace(root, (struct prio_tree_node *) (old), (struct prio_tree_node *) (node))


raw_prio_tree_insert 	( diff_type: Del type: macro file: include/linux/prio_tree.h )
	-- #define raw_prio_tree_insert(root,node) prio_tree_insert(root, (struct prio_tree_node *) (node))


raw_prio_tree_remove 	( diff_type: Del type: macro file: include/linux/prio_tree.h )
	-- #define raw_prio_tree_remove(root,node) prio_tree_remove(root, (struct prio_tree_node *) (node))


UPROBE_COPY_INSN 	( diff_type: Del type: macro file: include/linux/uprobes.h )
	-- #define UPROBE_COPY_INSN 0x1


UPROBE_RUN_HANDLER 	( diff_type: Del type: macro file: include/linux/uprobes.h )
	-- #define UPROBE_RUN_HANDLER 0x2


UPROBE_SKIP_SSTEP 	( diff_type: Del type: macro file: include/linux/uprobes.h )
	-- #define UPROBE_SKIP_SSTEP 0x4


uprobe_task_state 	( diff_type: Mod type: enum file: include/linux/uprobes.h )
	-- enum uprobe_task_state { UTASK_RUNNING, UTASK_BP_HIT, UTASK_SSTEP, UTASK_SSTEP_ACK, UTASK_SSTEP_TRAPPED, };
	++ enum uprobe_task_state { UTASK_RUNNING, UTASK_SSTEP, UTASK_SSTEP_ACK, UTASK_SSTEP_TRAPPED, };


set_orig_insn 	( diff_type: Mod type: prototype file: include/linux/uprobes.h )
	-- extern int __weak set_orig_insn(struct arch_uprobe *aup,struct mm_struct *mm,unsigned long vaddr,bool verify);
	++ extern int __weak set_orig_insn(struct arch_uprobe *aup,struct mm_struct *mm,unsigned long vaddr);


uprobe_reset_state 	( diff_type: Del type: function file: include/linux/uprobes.h )
	-- static inline void uprobe_reset_state(struct mm_struct *mm)


_ASM_X86_PTRACE_ABI_H 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define _ASM_X86_PTRACE_ABI_H


EBX 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define EBX 0


ECX 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define ECX 1


EDX 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define EDX 2


ESI 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define ESI 3


EDI 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define EDI 4


EBP 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define EBP 5


EAX 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define EAX 6


DS 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define DS 7


ES 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define ES 8


FS 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define FS 9


GS 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define GS 10


ORIG_EAX 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define ORIG_EAX 11


EIP 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define EIP 12


CS 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define CS 136


EFL 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define EFL 14


UESP 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define UESP 15


SS 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define SS 160


FRAME_SIZE 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define FRAME_SIZE 168


R15 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define R15 0


R14 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define R14 8


R13 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define R13 16


R12 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define R12 24


RBP 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define RBP 32


RBX 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define RBX 40


R11 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define R11 48


R10 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define R10 56


R9 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define R9 64


R8 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define R8 72


RAX 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define RAX 80


RCX 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define RCX 88


RDX 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define RDX 96


RSI 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define RSI 104


RDI 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define RDI 112


ORIG_RAX 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define ORIG_RAX 120


RIP 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define RIP 128


EFLAGS 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define EFLAGS 144


RSP 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define RSP 152


ARGOFFSET 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define ARGOFFSET R11


PTRACE_GETREGS 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define PTRACE_GETREGS 12


PTRACE_SETREGS 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define PTRACE_SETREGS 13


PTRACE_GETFPREGS 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define PTRACE_GETFPREGS 14


PTRACE_SETFPREGS 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define PTRACE_SETFPREGS 15


PTRACE_GETFPXREGS 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define PTRACE_GETFPXREGS 18


PTRACE_SETFPXREGS 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define PTRACE_SETFPXREGS 19


PTRACE_OLDSETOPTIONS 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define PTRACE_OLDSETOPTIONS 21


PTRACE_GET_THREAD_AREA 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define PTRACE_GET_THREAD_AREA 25


PTRACE_SET_THREAD_AREA 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define PTRACE_SET_THREAD_AREA 26


PTRACE_ARCH_PRCTL 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- # define PTRACE_ARCH_PRCTL 30


PTRACE_SYSEMU 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define PTRACE_SYSEMU 31


PTRACE_SYSEMU_SINGLESTEP 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define PTRACE_SYSEMU_SINGLESTEP 32


PTRACE_SINGLEBLOCK 	( diff_type: Del type: macro file: arch/x86/include/asm/ptrace-abi.h )
	-- #define PTRACE_SINGLEBLOCK 33


X86_EFLAGS_CF 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_CF 0x00000001


X86_EFLAGS_BIT1 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_BIT1 0x00000002


X86_EFLAGS_PF 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_PF 0x00000004


X86_EFLAGS_AF 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_AF 0x00000010


X86_EFLAGS_ZF 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_ZF 0x00000040


X86_EFLAGS_SF 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_SF 0x00000080


X86_EFLAGS_TF 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_TF 0x00000100


X86_EFLAGS_IF 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_IF 0x00000200


X86_EFLAGS_DF 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_DF 0x00000400


X86_EFLAGS_OF 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_OF 0x00000800


X86_EFLAGS_IOPL 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_IOPL 0x00003000


X86_EFLAGS_NT 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_NT 0x00004000


X86_EFLAGS_RF 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_RF 0x00010000


X86_EFLAGS_VM 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_VM 0x00020000


X86_EFLAGS_AC 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_AC 0x00040000


X86_EFLAGS_VIF 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_VIF 0x00080000


X86_EFLAGS_VIP 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_VIP 0x00100000


X86_EFLAGS_ID 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_EFLAGS_ID 0x00200000


X86_CR0_PE 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR0_PE 0x00000001


X86_CR0_MP 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR0_MP 0x00000002


X86_CR0_EM 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR0_EM 0x00000004


X86_CR0_TS 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR0_TS 0x00000008


X86_CR0_ET 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR0_ET 0x00000010


X86_CR0_NE 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR0_NE 0x00000020


X86_CR0_WP 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR0_WP 0x00010000


X86_CR0_AM 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR0_AM 0x00040000


X86_CR0_NW 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR0_NW 0x20000000


X86_CR0_CD 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR0_CD 0x40000000


X86_CR0_PG 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR0_PG 0x80000000


X86_CR3_PWT 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR3_PWT 0x00000008


X86_CR3_PCD 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR3_PCD 0x00000010


X86_CR4_VME 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_VME 0x00000001


X86_CR4_PVI 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_PVI 0x00000002


X86_CR4_TSD 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_TSD 0x00000004


X86_CR4_DE 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_DE 0x00000008


X86_CR4_PSE 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_PSE 0x00000010


X86_CR4_PAE 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_PAE 0x00000020


X86_CR4_MCE 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_MCE 0x00000040


X86_CR4_PGE 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_PGE 0x00000080


X86_CR4_PCE 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_PCE 0x00000100


X86_CR4_OSFXSR 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_OSFXSR 0x00000200


X86_CR4_OSXMMEXCPT 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_OSXMMEXCPT 0x00000400


X86_CR4_VMXE 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_VMXE 0x00002000


X86_CR4_RDWRGSFS 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_RDWRGSFS 0x00010000


X86_CR4_OSXSAVE 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_OSXSAVE 0x00040000


X86_CR4_SMEP 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR4_SMEP 0x00100000


X86_CR8_TPR 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define X86_CR8_TPR 0x0000000F


CX86_PCR0 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_PCR0 0x20


CX86_GCR 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_GCR 0xb8


CX86_CCR0 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_CCR0 0xc0


CX86_CCR1 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_CCR1 0xc1


CX86_CCR2 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_CCR2 0xc2


CX86_CCR3 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_CCR3 0xc3


CX86_CCR4 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_CCR4 0xe8


CX86_CCR5 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_CCR5 0xe9


CX86_CCR6 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_CCR6 0xea


CX86_CCR7 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_CCR7 0xeb


CX86_PCR1 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_PCR1 0xf0


CX86_DIR0 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_DIR0 0xfe


CX86_DIR1 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_DIR1 0xff


CX86_ARR_BASE 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_ARR_BASE 0xc4


CX86_RCR_BASE 	( diff_type: Del type: macro file: arch/x86/include/asm/processor-flags.h )
	-- #define CX86_RCR_BASE 0xdc


pv_lazy_ops 	( diff_type: Mod type: struct file: arch/x86/include/asm/paravirt_types.h )
	-- struct pv_lazy_ops { void (*enter)(void); void (*leave)(void); };
	++ struct pv_lazy_ops { void (*enter)(void); void (*leave)(void); void (*flush)(void); };


pv_cpu_ops 	( diff_type: Mod type: struct file: arch/x86/include/asm/paravirt_types.h )
	-- struct pv_cpu_ops { unsigned long (*get_debugreg)(int regno); void (*set_debugreg)(int regno, unsigned long value); void (*clts)(void); unsigned long (*read_cr0)(void); void (*write_cr0)(unsigned long); unsigned long (*read_cr4_safe)(void); unsigned long (*read_cr4)(void); void (*write_cr4)(unsigned long); unsigned long (*read_cr8)(void); void (*write_cr8)(unsigned long); void (*load_tr_desc)(void); void (*load_gdt)(const struct desc_ptr *); void (*load_idt)(const struct desc_ptr *); void (*store_gdt)(struct desc_ptr *); void (*store_idt)(struct desc_ptr *); void (*set_ldt)(const void *desc, unsigned entries); unsigned long (*store_tr)(void); void (*load_tls)(struct thread_struct *t, unsigned int cpu); void (*load_gs_index)(unsigned int idx); void (*write_ldt_entry)(struct desc_struct *ldt, int entrynum,const void *desc); void (*write_gdt_entry)(struct desc_struct *,int entrynum, const void *desc, int size); void (*write_idt_entry)(gate_desc *,int entrynum, const gate_desc *gate); void (*alloc_ldt)(struct desc_struct *ldt, unsigned entries); void (*free_ldt)(struct desc_struct *ldt, unsigned entries); void (*load_sp0)(struct tss_struct *tss, struct thread_struct *t); void (*set_iopl_mask)(unsigned mask); void (*wbinvd)(void); void (*io_delay)(void); void (*cpuid)(unsigned int *eax, unsigned int *ebx,unsigned int *ecx, unsigned int *edx); u64 (*read_msr)(unsigned int msr, int *err); int (*rdmsr_regs)(u32 *regs); int (*write_msr)(unsigned int msr, unsigned low, unsigned high); int (*wrmsr_regs)(u32 *regs); u64 (*read_tsc)(void); u64 (*read_pmc)(int counter); unsigned long long (*read_tscp)(unsigned int *aux); void (*irq_enable_sysexit)(void); void (*usergs_sysret64)(void); void (*usergs_sysret32)(void); void (*iret)(void); void (*swapgs)(void); void (*start_context_switch)(struct task_struct *prev); void (*end_context_switch)(struct task_struct *next); };
	++ struct pv_cpu_ops { unsigned long (*get_debugreg)(int regno); void (*set_debugreg)(int regno, unsigned long value); void (*clts)(void); unsigned long (*read_cr0)(void); void (*write_cr0)(unsigned long); unsigned long (*read_cr4_safe)(void); unsigned long (*read_cr4)(void); void (*write_cr4)(unsigned long); unsigned long (*read_cr8)(void); void (*write_cr8)(unsigned long); void (*load_tr_desc)(void); void (*load_gdt)(const struct desc_ptr *); void (*load_idt)(const struct desc_ptr *); void (*store_gdt)(struct desc_ptr *); void (*store_idt)(struct desc_ptr *); void (*set_ldt)(const void *desc, unsigned entries); unsigned long (*store_tr)(void); void (*load_tls)(struct thread_struct *t, unsigned int cpu); void (*load_gs_index)(unsigned int idx); void (*write_ldt_entry)(struct desc_struct *ldt, int entrynum,const void *desc); void (*write_gdt_entry)(struct desc_struct *,int entrynum, const void *desc, int size); void (*write_idt_entry)(gate_desc *,int entrynum, const gate_desc *gate); void (*alloc_ldt)(struct desc_struct *ldt, unsigned entries); void (*free_ldt)(struct desc_struct *ldt, unsigned entries); void (*load_sp0)(struct tss_struct *tss, struct thread_struct *t); void (*set_iopl_mask)(unsigned mask); void (*wbinvd)(void); void (*io_delay)(void); void (*cpuid)(unsigned int *eax, unsigned int *ebx,unsigned int *ecx, unsigned int *edx); u64 (*read_msr)(unsigned int msr, int *err); int (*write_msr)(unsigned int msr, unsigned low, unsigned high); u64 (*read_tsc)(void); u64 (*read_pmc)(int counter); unsigned long long (*read_tscp)(unsigned int *aux); void (*irq_enable_sysexit)(void); void (*usergs_sysret64)(void); void (*usergs_sysret32)(void); void (*iret)(void); void (*swapgs)(void); void (*start_context_switch)(struct task_struct *prev); void (*end_context_switch)(struct task_struct *next); };


pv_mmu_ops 	( diff_type: Mod type: struct file: arch/x86/include/asm/paravirt_types.h )
	-- struct pv_mmu_ops { unsigned long (*read_cr2)(void); void (*write_cr2)(unsigned long); unsigned long (*read_cr3)(void); void (*write_cr3)(unsigned long); void (*activate_mm)(struct mm_struct *prev,struct mm_struct *next); void (*dup_mmap)(struct mm_struct *oldmm,struct mm_struct *mm); void (*exit_mmap)(struct mm_struct *mm); void (*flush_tlb_user)(void); void (*flush_tlb_kernel)(void); void (*flush_tlb_single)(unsigned long addr); void (*flush_tlb_others)(const struct cpumask *cpus,struct mm_struct *mm,unsigned long va); int (*pgd_alloc)(struct mm_struct *mm); void (*pgd_free)(struct mm_struct *mm, pgd_t *pgd); void (*alloc_pte)(struct mm_struct *mm, unsigned long pfn); void (*alloc_pmd)(struct mm_struct *mm, unsigned long pfn); void (*alloc_pud)(struct mm_struct *mm, unsigned long pfn); void (*release_pte)(unsigned long pfn); void (*release_pmd)(unsigned long pfn); void (*release_pud)(unsigned long pfn); void (*set_pte)(pte_t *ptep, pte_t pteval); void (*set_pte_at)(struct mm_struct *mm, unsigned long addr,pte_t *ptep, pte_t pteval); void (*set_pmd)(pmd_t *pmdp, pmd_t pmdval); void (*set_pmd_at)(struct mm_struct *mm, unsigned long addr,pmd_t *pmdp, pmd_t pmdval); void (*pte_update)(struct mm_struct *mm, unsigned long addr,pte_t *ptep); void (*pte_update_defer)(struct mm_struct *mm,unsigned long addr, pte_t *ptep); void (*pmd_update)(struct mm_struct *mm, unsigned long addr,pmd_t *pmdp); void (*pmd_update_defer)(struct mm_struct *mm,unsigned long addr, pmd_t *pmdp); pte_t (*ptep_modify_prot_start)(struct mm_struct *mm, unsigned long addr,pte_t *ptep); void (*ptep_modify_prot_commit)(struct mm_struct *mm, unsigned long addr,pte_t *ptep, pte_t pte); struct paravirt_callee_save pte_val; struct paravirt_callee_save make_pte; struct paravirt_callee_save pgd_val; struct paravirt_callee_save make_pgd; void (*set_pte_atomic)(pte_t *ptep, pte_t pteval); void (*pte_clear)(struct mm_struct *mm, unsigned long addr,pte_t *ptep); void (*pmd_clear)(pmd_t *pmdp); void (*set_pud)(pud_t *pudp, pud_t pudval); struct paravirt_callee_save pmd_val; struct paravirt_callee_save make_pmd; struct paravirt_callee_save pud_val; struct paravirt_callee_save make_pud; void (*set_pgd)(pgd_t *pudp, pgd_t pgdval); struct pv_lazy_ops lazy_mode; void (*set_fixmap)(unsigned };
	++ struct pv_mmu_ops { unsigned long (*read_cr2)(void); void (*write_cr2)(unsigned long); unsigned long (*read_cr3)(void); void (*write_cr3)(unsigned long); void (*activate_mm)(struct mm_struct *prev,struct mm_struct *next); void (*dup_mmap)(struct mm_struct *oldmm,struct mm_struct *mm); void (*exit_mmap)(struct mm_struct *mm); void (*flush_tlb_user)(void); void (*flush_tlb_kernel)(void); void (*flush_tlb_single)(unsigned long addr); void (*flush_tlb_others)(const struct cpumask *cpus,struct mm_struct *mm,unsigned long start,unsigned long end); int (*pgd_alloc)(struct mm_struct *mm); void (*pgd_free)(struct mm_struct *mm, pgd_t *pgd); void (*alloc_pte)(struct mm_struct *mm, unsigned long pfn); void (*alloc_pmd)(struct mm_struct *mm, unsigned long pfn); void (*alloc_pud)(struct mm_struct *mm, unsigned long pfn); void (*release_pte)(unsigned long pfn); void (*release_pmd)(unsigned long pfn); void (*release_pud)(unsigned long pfn); void (*set_pte)(pte_t *ptep, pte_t pteval); void (*set_pte_at)(struct mm_struct *mm, unsigned long addr,pte_t *ptep, pte_t pteval); void (*set_pmd)(pmd_t *pmdp, pmd_t pmdval); void (*set_pmd_at)(struct mm_struct *mm, unsigned long addr,pmd_t *pmdp, pmd_t pmdval); void (*pte_update)(struct mm_struct *mm, unsigned long addr,pte_t *ptep); void (*pte_update_defer)(struct mm_struct *mm,unsigned long addr, pte_t *ptep); void (*pmd_update)(struct mm_struct *mm, unsigned long addr,pmd_t *pmdp); void (*pmd_update_defer)(struct mm_struct *mm,unsigned long addr, pmd_t *pmdp); pte_t (*ptep_modify_prot_start)(struct mm_struct *mm, unsigned long addr,pte_t *ptep); void (*ptep_modify_prot_commit)(struct mm_struct *mm, unsigned long addr,pte_t *ptep, pte_t pte); struct paravirt_callee_save pte_val; struct paravirt_callee_save make_pte; struct paravirt_callee_save pgd_val; struct paravirt_callee_save make_pgd; void (*set_pte_atomic)(pte_t *ptep, pte_t pteval); void (*pte_clear)(struct mm_struct *mm, unsigned long addr,pte_t *ptep); void (*pmd_clear)(pmd_t *pmdp); void (*set_pud)(pud_t *pudp, pud_t pudval); struct paravirt_callee_save pmd_val; struct paravirt_callee_save make_pmd; struct paravirt_callee_save pud_val; struct paravirt_callee_save make_pud; void (*set_pgd)(pgd_t *pudp, pgd_t pgdval); struct pv_lazy_ops lazy_mode; void (*set_fixmap)(unsigned };


_LINUX_IPC_H 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define _LINUX_IPC_H


IPC_PRIVATE 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define IPC_PRIVATE ((__kernel_key_t) 0)


ipc_perm 	( diff_type: Del type: struct file: include/linux/ipc.h )
	-- struct ipc_perm { __kernel_key_t key; __kernel_uid_t uid; __kernel_gid_t gid; __kernel_uid_t cuid; __kernel_gid_t cgid; __kernel_mode_t mode; unsigned short seq; };


IPC_CREAT 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define IPC_CREAT 00001000


IPC_EXCL 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define IPC_EXCL 00002000


IPC_NOWAIT 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define IPC_NOWAIT 00004000


IPC_DIPC 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define IPC_DIPC 00010000


IPC_OWN 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define IPC_OWN 00020000


IPC_RMID 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define IPC_RMID 0


IPC_SET 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define IPC_SET 1


IPC_STAT 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define IPC_STAT 2


IPC_INFO 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define IPC_INFO 3


IPC_OLD 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define IPC_OLD 0


IPC_64 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define IPC_64 0x0100


ipc_kludge 	( diff_type: Del type: struct file: include/linux/ipc.h )
	-- struct ipc_kludge { struct msgbuf __user *msgp; long msgtyp; };


SEMOP 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define SEMOP 1


SEMGET 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define SEMGET 2


SEMCTL 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define SEMCTL 3


SEMTIMEDOP 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define SEMTIMEDOP 4


MSGSND 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define MSGSND 11


MSGRCV 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define MSGRCV 12


MSGGET 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define MSGGET 13


MSGCTL 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define MSGCTL 14


SHMAT 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define SHMAT 21


SHMDT 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define SHMDT 22


SHMGET 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define SHMGET 23


SHMCTL 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define SHMCTL 24


DIPC 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define DIPC 25


IPCCALL 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define IPCCALL(version,op) ((version)<<16 | (op))


IPCMNI 	( diff_type: Del type: macro file: include/linux/ipc.h )
	-- #define IPCMNI 32768


kern_ipc_perm 	( diff_type: Del type: struct file: include/linux/ipc.h )
	-- struct kern_ipc_perm { spinlock_t lock; int deleted; int id; key_t key; uid_t uid; gid_t gid; uid_t cuid; gid_t cgid; umode_t mode; unsigned long seq; void *security; };


_ASM_X86_SEMBUF_H 	( diff_type: Del type: macro file: arch/x86/include/asm/sembuf.h )
	-- #define _ASM_X86_SEMBUF_H


semid64_ds 	( diff_type: Del type: struct file: arch/x86/include/asm/sembuf.h )
	-- struct semid64_ds { struct ipc64_perm sem_perm; __kernel_time_t sem_otime; unsigned long __unused1; __kernel_time_t sem_ctime; unsigned long __unused2; unsigned long sem_nsems; unsigned long __unused3; unsigned long __unused4; };


NSIG 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define NSIG 32


SIGHUP 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGHUP 1


SIGINT 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGINT 2


SIGQUIT 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGQUIT 3


SIGILL 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGILL 4


SIGTRAP 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGTRAP 5


SIGABRT 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGABRT 6


SIGIOT 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGIOT 6


SIGBUS 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGBUS 7


SIGFPE 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGFPE 8


SIGKILL 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGKILL 9


SIGUSR1 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGUSR1 10


SIGSEGV 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGSEGV 11


SIGUSR2 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGUSR2 12


SIGPIPE 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGPIPE 13


SIGALRM 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGALRM 14


SIGTERM 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGTERM 15


SIGSTKFLT 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGSTKFLT 16


SIGCHLD 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGCHLD 17


SIGCONT 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGCONT 18


SIGSTOP 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGSTOP 19


SIGTSTP 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGTSTP 20


SIGTTIN 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGTTIN 21


SIGTTOU 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGTTOU 22


SIGURG 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGURG 23


SIGXCPU 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGXCPU 24


SIGXFSZ 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGXFSZ 25


SIGVTALRM 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGVTALRM 26


SIGPROF 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGPROF 27


SIGWINCH 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGWINCH 28


SIGIO 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGIO 29


SIGPOLL 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGPOLL SIGIO


SIGPWR 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGPWR 30


SIGSYS 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGSYS 31


SIGUNUSED 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGUNUSED 31


SIGRTMIN 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGRTMIN 32


SIGRTMAX 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGRTMAX _NSIG


SA_NOCLDSTOP 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SA_NOCLDSTOP 0x00000001u


SA_NOCLDWAIT 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SA_NOCLDWAIT 0x00000002u


SA_SIGINFO 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SA_SIGINFO 0x00000004u


SA_ONSTACK 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SA_ONSTACK 0x08000000u


SA_RESTART 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SA_RESTART 0x10000000u


SA_NODEFER 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SA_NODEFER 0x40000000u


SA_RESETHAND 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SA_RESETHAND 0x80000000u


SA_NOMASK 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SA_NOMASK SA_NODEFER


SA_ONESHOT 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SA_ONESHOT SA_RESETHAND


SA_RESTORER 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SA_RESTORER 0x04000000


SS_ONSTACK 	( diff_type: Mov type: macro file: arch/x86/include/asm/signal.h )
	-- include/uapi/linux/signal.h
	++ #define SS_ONSTACK 1


SS_DISABLE 	( diff_type: Mov type: macro file: arch/x86/include/asm/signal.h )
	-- include/uapi/linux/signal.h
	++ #define SS_DISABLE 2


MINSIGSTKSZ 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define MINSIGSTKSZ 2048


SIGSTKSZ 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define SIGSTKSZ 8192


sa_handler 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define sa_handler _u._sa_handler


sa_sigaction 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define sa_sigaction _u._sa_sigaction


sigaltstack 	( diff_type: Del type: struct file: arch/x86/include/asm/signal.h )
	-- typedef struct sigaltstack { void __user *ss_sp; int ss_flags; size_t ss_size; } stack_t;


stack_t 	( diff_type: Del type: struct file: arch/x86/include/asm/signal.h )
	-- typedef struct sigaltstack { void __user *ss_sp; int ss_flags; size_t ss_size; } stack_t;


ptrace_signal_deliver 	( diff_type: Del type: macro file: arch/x86/include/asm/signal.h )
	-- #define ptrace_signal_deliver(regs,cookie) do { } while (0)


_ASM_X86_SIGINFO_H 	( diff_type: Mov type: macro file: arch/x86/include/asm/siginfo.h )
	-- arch/x86/include/uapi/asm/siginfo.h
	++ #define _ASM_X86_SIGINFO_H


__ARCH_SI_CLOCK_T 	( diff_type: Mov type: macro file: arch/x86/include/asm/siginfo.h )
	-- arch/x86/include/uapi/asm/siginfo.h
	++ # define __ARCH_SI_CLOCK_T __kernel_si_clock_t


__ARCH_SI_ATTRIBUTES 	( diff_type: Mov type: macro file: arch/x86/include/asm/siginfo.h )
	-- arch/x86/include/uapi/asm/siginfo.h
	++ # define __ARCH_SI_ATTRIBUTES __attribute__((aligned(8)))


__ARCH_SI_PREAMBLE_SIZE 	( diff_type: Mov type: macro file: arch/x86/include/asm/siginfo.h )
	-- arch/x86/include/uapi/asm/siginfo.h
	++ # define __ARCH_SI_PREAMBLE_SIZE (4 * sizeof(int))


cma_wmark_pages 	( diff_type: Del type: macro file: include/linux/mmzone.h )
	-- # define cma_wmark_pages(zone) 0


zone_stat_item 	( diff_type: Mod type: enum file: include/linux/mmzone.h )
	-- enum zone_stat_item { NR_FREE_PAGES, NR_LRU_BASE, NR_INACTIVE_ANON = NR_LRU_BASE, NR_ACTIVE_ANON, NR_INACTIVE_FILE, NR_ACTIVE_FILE, NR_UNEVICTABLE, NR_MLOCK, NR_ANON_PAGES, NR_FILE_MAPPED, NR_FILE_PAGES, NR_FILE_DIRTY, NR_WRITEBACK, NR_SLAB_RECLAIMABLE, NR_SLAB_UNRECLAIMABLE, NR_PAGETABLE, NR_KERNEL_STACK, NR_UNSTABLE_NFS, NR_BOUNCE, NR_VMSCAN_WRITE, NR_VMSCAN_IMMEDIATE, NR_WRITEBACK_TEMP, NR_ISOLATED_ANON, NR_ISOLATED_FILE, NR_SHMEM, NR_DIRTIED, NR_WRITTEN, NUMA_HIT, NUMA_MISS, NUMA_FOREIGN, NUMA_INTERLEAVE_HIT, NUMA_LOCAL, NUMA_OTHER, NR_ANON_TRANSPARENT_HUGEPAGES, NR_VM_ZONE_STAT_ITEMS };
	++ enum zone_stat_item { NR_FREE_PAGES, NR_LRU_BASE, NR_INACTIVE_ANON = NR_LRU_BASE, NR_ACTIVE_ANON, NR_INACTIVE_FILE, NR_ACTIVE_FILE, NR_UNEVICTABLE, NR_MLOCK, NR_ANON_PAGES, NR_FILE_MAPPED, NR_FILE_PAGES, NR_FILE_DIRTY, NR_WRITEBACK, NR_SLAB_RECLAIMABLE, NR_SLAB_UNRECLAIMABLE, NR_PAGETABLE, NR_KERNEL_STACK, NR_UNSTABLE_NFS, NR_BOUNCE, NR_VMSCAN_WRITE, NR_VMSCAN_IMMEDIATE, NR_WRITEBACK_TEMP, NR_ISOLATED_ANON, NR_ISOLATED_FILE, NR_SHMEM, NR_DIRTIED, NR_WRITTEN, NUMA_HIT, NUMA_MISS, NUMA_FOREIGN, NUMA_INTERLEAVE_HIT, NUMA_LOCAL, NUMA_OTHER, NR_ANON_TRANSPARENT_HUGEPAGES, NR_FREE_CMA_PAGES, NR_VM_ZONE_STAT_ITEMS };


LRU_ALL_EVICTABLE 	( diff_type: Del type: macro file: include/linux/mmzone.h )
	-- #define LRU_ALL_EVICTABLE (LRU_ALL_FILE | LRU_ALL_ANON)


zone 	( diff_type: Mod type: struct file: include/linux/mmzone.h )
	-- struct zone { unsigned long watermark[NR_WMARK]; unsigned long percpu_drift_mark; unsigned long lowmem_reserve[MAX_NR_ZONES]; unsigned long dirty_balance_reserve; int node; unsigned long min_unmapped_pages; unsigned long min_slab_pages; struct per_cpu_pageset __percpu *pageset; spinlock_t lock; int all_unreclaimable; seqlock_t span_seqlock; unsigned long min_cma_pages; struct free_area free_area[MAX_ORDER]; unsigned long *pageblock_flags; unsigned int compact_considered; unsigned int compact_defer_shift; int compact_order_failed; spinlock_t lru_lock; struct lruvec lruvec; unsigned long pages_scanned; unsigned long flags; atomic_long_t vm_stat[NR_VM_ZONE_STAT_ITEMS]; unsigned int inactive_ratio; wait_queue_head_t * wait_table; unsigned long wait_table_hash_nr_entries; unsigned long wait_table_bits; struct pglist_data *zone_pgdat; unsigned long zone_start_pfn; unsigned long spanned_pages; unsigned long present_pages; const char *name; } ____cacheline_internodealigned_in_smp;
	++ struct zone { unsigned long watermark[NR_WMARK]; unsigned long percpu_drift_mark; unsigned long lowmem_reserve[MAX_NR_ZONES]; unsigned long dirty_balance_reserve; int node; unsigned long min_unmapped_pages; unsigned long min_slab_pages; struct per_cpu_pageset __percpu *pageset; spinlock_t lock; int all_unreclaimable; bool compact_blockskip_flush; unsigned long compact_cached_free_pfn; unsigned long compact_cached_migrate_pfn; seqlock_t span_seqlock; struct free_area free_area[MAX_ORDER]; unsigned long *pageblock_flags; unsigned int compact_considered; unsigned int compact_defer_shift; int compact_order_failed; spinlock_t lru_lock; struct lruvec lruvec; unsigned long pages_scanned; unsigned long flags; atomic_long_t vm_stat[NR_VM_ZONE_STAT_ITEMS]; unsigned int inactive_ratio; wait_queue_head_t * wait_table; unsigned long wait_table_hash_nr_entries; unsigned long wait_table_bits; struct pglist_data *zone_pgdat; unsigned long zone_start_pfn; unsigned long spanned_pages; unsigned long present_pages; unsigned long managed_pages; const char *name; } ____cacheline_internodealigned_in_smp;


pglist_data 	( diff_type: Mod type: struct file: include/linux/mmzone.h )
	-- typedef struct pglist_data { struct zone node_zones[MAX_NR_ZONES]; struct zonelist node_zonelists[MAX_ZONELISTS]; int nr_zones; struct page *node_mem_map; struct page_cgroup *node_page_cgroup; struct bootmem_data *bdata; spinlock_t node_size_lock; unsigned long node_start_pfn; unsigned long node_present_pages; unsigned long node_spanned_pages; int node_id; wait_queue_head_t kswapd_wait; struct task_struct *kswapd; int kswapd_max_order; enum zone_type classzone_idx; } pg_data_t;
	++ typedef struct pglist_data { struct zone node_zones[MAX_NR_ZONES]; struct zonelist node_zonelists[MAX_ZONELISTS]; int nr_zones; struct page *node_mem_map; struct page_cgroup *node_page_cgroup; struct bootmem_data *bdata; spinlock_t node_size_lock; unsigned long node_start_pfn; unsigned long node_present_pages; unsigned long node_spanned_pages; int node_id; nodemask_t reclaim_nodes; wait_queue_head_t kswapd_wait; wait_queue_head_t pfmemalloc_wait; struct task_struct *kswapd; int kswapd_max_order; enum zone_type classzone_idx; spinlock_t numabalancing_migrate_lock; unsigned long numabalancing_migrate_next_window; unsigned long numabalancing_migrate_nr_pages; } pg_data_t;


pg_data_t 	( diff_type: Mod type: struct file: include/linux/mmzone.h )
	-- typedef struct pglist_data { struct zone node_zones[MAX_NR_ZONES]; struct zonelist node_zonelists[MAX_ZONELISTS]; int nr_zones; struct page *node_mem_map; struct page_cgroup *node_page_cgroup; struct bootmem_data *bdata; spinlock_t node_size_lock; unsigned long node_start_pfn; unsigned long node_present_pages; unsigned long node_spanned_pages; int node_id; wait_queue_head_t kswapd_wait; struct task_struct *kswapd; int kswapd_max_order; enum zone_type classzone_idx; } pg_data_t;
	++ typedef struct pglist_data { struct zone node_zones[MAX_NR_ZONES]; struct zonelist node_zonelists[MAX_ZONELISTS]; int nr_zones; struct page *node_mem_map; struct page_cgroup *node_page_cgroup; struct bootmem_data *bdata; spinlock_t node_size_lock; unsigned long node_start_pfn; unsigned long node_present_pages; unsigned long node_spanned_pages; int node_id; nodemask_t reclaim_nodes; wait_queue_head_t kswapd_wait; wait_queue_head_t pfmemalloc_wait; struct task_struct *kswapd; int kswapd_max_order; enum zone_type classzone_idx; spinlock_t numabalancing_migrate_lock; unsigned long numabalancing_migrate_next_window; unsigned long numabalancing_migrate_nr_pages; } pg_data_t;


build_all_zonelists 	( diff_type: Mod type: prototype file: include/linux/mmzone.h )
	-- void build_all_zonelists(void *data);
	++ void build_all_zonelists(pg_data_t *pgdat,struct zone *zone);


lruvec_init 	( diff_type: Mod type: prototype file: include/linux/mmzone.h )
	-- extern void lruvec_init(struct lruvec *lruvec,struct zone *zone);
	++ extern void lruvec_init(struct lruvec *lruvec);


key 	( diff_type: Mod type: struct file: include/linux/key.h )
	-- struct key { atomic_t usage; key_serial_t serial; union { struct list_head graveyard_link; struct rb_node serial_node; }; struct key_type *type; struct rw_semaphore sem; struct key_user *user; void *security; union { time_t expiry; time_t revoked_at; }; time_t last_used_at; uid_t uid; gid_t gid; key_perm_t perm; unsigned short quotalen; unsigned short datalen; unsigned magic; #define KEY_DEBUG_MAGIC 0x18273645u #define KEY_DEBUG_MAGIC_X 0xf8e9dacbu unsigned long flags; #define KEY_FLAG_INSTANTIATED 0 #define KEY_FLAG_DEAD 1 #define KEY_FLAG_REVOKED 2 #define KEY_FLAG_IN_QUOTA 3 #define KEY_FLAG_USER_CONSTRUCT 4 #define KEY_FLAG_NEGATIVE 5 #define KEY_FLAG_ROOT_CAN_CLEAR 6 #define KEY_FLAG_INVALIDATED 7 char *description; struct list_head link; unsigned long x[2]; void *p[2]; int reject_error; } type_data; unsigned long value; void __rcu *rcudata; void *data; struct keyring_list __rcu *subscriptions; } payload; };
	++ struct key { atomic_t usage; key_serial_t serial; union { struct list_head graveyard_link; struct rb_node serial_node; }; struct key_type *type; struct rw_semaphore sem; struct key_user *user; void *security; union { time_t expiry; time_t revoked_at; }; time_t last_used_at; kuid_t uid; kgid_t gid; key_perm_t perm; unsigned short quotalen; unsigned short datalen; unsigned magic; #define KEY_DEBUG_MAGIC 0x18273645u #define KEY_DEBUG_MAGIC_X 0xf8e9dacbu unsigned long flags; #define KEY_FLAG_INSTANTIATED 0 #define KEY_FLAG_DEAD 1 #define KEY_FLAG_REVOKED 2 #define KEY_FLAG_IN_QUOTA 3 #define KEY_FLAG_USER_CONSTRUCT 4 #define KEY_FLAG_NEGATIVE 5 #define KEY_FLAG_ROOT_CAN_CLEAR 6 #define KEY_FLAG_INVALIDATED 7 char *description; struct list_head link; unsigned long x[2]; void *p[2]; int reject_error; } type_data; unsigned long value; void __rcu *rcudata; void *data; struct keyring_list __rcu *subscriptions; } payload; };


key_alloc 	( diff_type: Mod type: prototype file: include/linux/key.h )
	-- extern struct key *key_alloc(struct key_type *type,const char *desc,uid_t uid, gid_t gid,const struct cred *cred,key_perm_t perm,unsigned long flags);
	++ extern struct key *key_alloc(struct key_type *type,const char *desc,kuid_t uid, kgid_t gid,const struct cred *cred,key_perm_t perm,unsigned long flags);


keyring_alloc 	( diff_type: Mod type: prototype file: include/linux/key.h )
	-- extern struct key *keyring_alloc(const char *description,uid_t uid,gid_t gid,const struct cred *cred,unsigned long flags,struct key *dest);
	++ extern struct key *keyring_alloc(const char *description,kuid_t uid,kgid_t gid,const struct cred *cred,key_perm_t perm,unsigned long flags,struct key *dest);


rcu_assign_keypointer 	( diff_type: Mod type: macro file: include/linux/key.h )
	-- #define rcu_assign_keypointer(KEY,PAYLOAD) (rcu_assign_pointer((KEY)->payload.rcudata, PAYLOAD))
	++ #define rcu_assign_keypointer(KEY,PAYLOAD) do { rcu_assign_pointer((KEY)->payload.rcudata, (PAYLOAD)); } while (0)


BIOSSEG 	( diff_type: Del type: macro file: arch/x86/include/asm/vm86.h )
	-- #define BIOSSEG 0x0f000


CPU_086 	( diff_type: Del type: macro file: arch/x86/include/asm/vm86.h )
	-- #define CPU_086 0


CPU_186 	( diff_type: Del type: macro file: arch/x86/include/asm/vm86.h )
	-- #define CPU_186 1


CPU_286 	( diff_type: Del type: macro file: arch/x86/include/asm/vm86.h )
	-- #define CPU_286 2


CPU_386 	( diff_type: Del type: macro file: arch/x86/include/asm/vm86.h )
	-- #define CPU_386 3


CPU_486 	( diff_type: Del type: macro file: arch/x86/include/asm/vm86.h )
	-- #define CPU_486 4


CPU_586 	( diff_type: Del type: macro file: arch/x86/include/asm/vm86.h )
	-- #define CPU_586 5


VM86_TYPE 	( diff_type: Del type: macro file: arch/x86/include/asm/vm86.h )
	-- #define VM86_TYPE(retval) ((retval) & 0xff)


VM86_ARG 	( diff_type: Del type: macro file: arch/x86/include/asm/vm86.h )
	-- #define VM86_ARG(retval) ((retval) >> 8)


VM86_SIGNAL 	( diff_type: Del type: macro file: arch/x86/include/asm/vm86.h )
	-- #define VM86_SIGNAL 0


VM86_UNKNOWN 	( diff_type: Del type: macro file: arch/x86/include/asm/vm86.h )
	-- #define VM86_UNKNOWN 1


VM86_INTx 	( diff_type: Del type: macro file: arch/x86/include/asm/vm86.h )
	-- #define VM86_INTx 2


VM86_STI 	( diff_type: Del type: macro file: arch/x86/include/asm/vm86.h )
	-- #define VM86_STI 3


VM86_PICRETURN 	( diff_type: Del type: macro file: arch/x86/include/asm/vm86.h )
	-- #define VM86_PICRETURN 4


VM86_TRAP 	( diff_type: Del type: macro file: arch/x86/include/asm/vm86.h )
	-- #define VM86_TRAP 6


VM86_PLUS_INSTALL_CHECK 	( diff_type: Del type: macro file: arch/x86/include/asm/vm86.h )
	-- #define VM86_PLUS_INSTALL_CHECK 0


VM86_ENTER 	( diff_type: Del type: macro file: arch/x86/include/asm/vm86.h )
	-- #define VM86_ENTER 1


VM86_ENTER_NO_BYPASS 	( diff_type: Del type: macro file: arch/x86/include/asm/vm86.h )
	-- #define VM86_ENTER_NO_BYPASS 2


VM86_REQUEST_IRQ 	( diff_type: Del type: macro file: arch/x86/include/asm/vm86.h )
	-- #define VM86_REQUEST_IRQ 3


VM86_FREE_IRQ 	( diff_type: Del type: macro file: arch/x86/include/asm/vm86.h )
	-- #define VM86_FREE_IRQ 4


VM86_GET_IRQ_BITS 	( diff_type: Del type: macro file: arch/x86/include/asm/vm86.h )
	-- #define VM86_GET_IRQ_BITS 5


VM86_GET_AND_RESET_IRQ 	( diff_type: Del type: macro file: arch/x86/include/asm/vm86.h )
	-- #define VM86_GET_AND_RESET_IRQ 6


vm86_regs 	( diff_type: Del type: struct file: arch/x86/include/asm/vm86.h )
	-- struct vm86_regs { long ebx; long ecx; long edx; long esi; long edi; long ebp; long eax; long __null_ds; long __null_es; long __null_fs; long __null_gs; long orig_eax; long eip; unsigned short cs, __csh; long eflags; long esp; unsigned short ss, __ssh; unsigned short es, __esh; unsigned short ds, __dsh; unsigned short fs, __fsh; unsigned short gs, __gsh; };


revectored_struct 	( diff_type: Del type: struct file: arch/x86/include/asm/vm86.h )
	-- struct revectored_struct { unsigned long __map[8]; };


vm86_struct 	( diff_type: Del type: struct file: arch/x86/include/asm/vm86.h )
	-- struct vm86_struct { struct vm86_regs regs; unsigned long flags; unsigned long screen_bitmap; unsigned long cpu_type; struct revectored_struct int_revectored; struct revectored_struct int21_revectored; };


VM86_SCREEN_BITMAP 	( diff_type: Del type: macro file: arch/x86/include/asm/vm86.h )
	-- #define VM86_SCREEN_BITMAP 0x0001


vm86plus_info_struct 	( diff_type: Del type: struct file: arch/x86/include/asm/vm86.h )
	-- struct vm86plus_info_struct { unsigned long force_return_for_pic:1; unsigned long vm86dbg_active:1; unsigned long vm86dbg_TFpendig:1; unsigned long unused:28; unsigned long is_vm86pus:1; unsigned char vm86dbg_intxxtab[32]; };


vm86plus_struct 	( diff_type: Del type: struct file: arch/x86/include/asm/vm86.h )
	-- struct vm86plus_struct { struct vm86_regs regs; unsigned long flags; unsigned long screen_bitmap; unsigned long cpu_type; struct revectored_struct int_revectored; struct revectored_struct int21_revectored; struct vm86plus_info_struct vm86plus; };


FP_XSTATE_MAGIC1 	( diff_type: Del type: macro file: arch/x86/include/asm/sigcontext.h )
	-- #define FP_XSTATE_MAGIC1 0x46505853U


FP_XSTATE_MAGIC2 	( diff_type: Del type: macro file: arch/x86/include/asm/sigcontext.h )
	-- #define FP_XSTATE_MAGIC2 0x46505845U


FP_XSTATE_MAGIC2_SIZE 	( diff_type: Del type: macro file: arch/x86/include/asm/sigcontext.h )
	-- #define FP_XSTATE_MAGIC2_SIZE sizeof(FP_XSTATE_MAGIC2)


_fpx_sw_bytes 	( diff_type: Del type: struct file: arch/x86/include/asm/sigcontext.h )
	-- struct _fpx_sw_bytes { __u32 magic1; __u32 extended_size; __u64 xstate_bv; __u32 xstate_size; __u32 padding[7]; };


_fpreg 	( diff_type: Del type: struct file: arch/x86/include/asm/sigcontext.h )
	-- struct _fpreg { unsigned short significand[4]; unsigned short exponent; };


_fpxreg 	( diff_type: Del type: struct file: arch/x86/include/asm/sigcontext.h )
	-- struct _fpxreg { unsigned short significand[4]; unsigned short exponent; unsigned short padding[3]; };


_xmmreg 	( diff_type: Del type: struct file: arch/x86/include/asm/sigcontext.h )
	-- struct _xmmreg { unsigned long element[4]; };


_fpstate 	( diff_type: Del type: struct file: arch/x86/include/asm/sigcontext.h )
	-- struct _fpstate { __u16 cwd; __u16 swd; __u16 twd; __u16 fop; __u64 rip; __u64 rdp; __u32 mxcsr; __u32 mxcsr_mask; __u32 st_space[32]; __u32 xmm_space[64]; __u32 reserved2[12]; union { __u32 reserved3[12]; struct _fpx_sw_bytes sw_reserved; };


X86_FXSR_MAGIC 	( diff_type: Del type: macro file: arch/x86/include/asm/sigcontext.h )
	-- #define X86_FXSR_MAGIC 0x0000


sigcontext 	( diff_type: Mod type: struct file: arch/x86/include/asm/sigcontext.h )
	-- struct sigcontext { __u64 r8; __u64 r9; __u64 r10; __u64 r11; __u64 r12; __u64 r13; __u64 r14; __u64 r15; __u64 rdi; __u64 rsi; __u64 rbp; __u64 rbx; __u64 rdx; __u64 rax; __u64 rcx; __u64 rsp; __u64 rip; __u64 eflags; __u16 cs; __u16 gs; __u16 fs; __u16 __pad0; __u64 err; __u64 trapno; __u64 oldmask; __u64 cr2; struct _fpstate __user *fpstate; __u32 __fpstate_pad; __u64 reserved1[8]; };
	++ struct sigcontext { unsigned long r8; unsigned long r9; unsigned long r10; unsigned long r11; unsigned long r12; unsigned long r13; unsigned long r14; unsigned long r15; unsigned long di; unsigned long si; unsigned long bp; unsigned long bx; unsigned long dx; unsigned long ax; unsigned long cx; unsigned long sp; unsigned long ip; unsigned long flags; unsigned short cs; unsigned short gs; unsigned short fs; unsigned short __pad0; unsigned long err; unsigned long trapno; unsigned long oldmask; unsigned long cr2; void __user *fpstate; unsigned long reserved1[8]; };


_xsave_hdr 	( diff_type: Del type: struct file: arch/x86/include/asm/sigcontext.h )
	-- struct _xsave_hdr { __u64 xstate_bv; __u64 reserved1[2]; __u64 reserved2[5]; };


_ymmh_state 	( diff_type: Del type: struct file: arch/x86/include/asm/sigcontext.h )
	-- struct _ymmh_state { __u32 ymmh_space[64]; };


_xstate 	( diff_type: Del type: struct file: arch/x86/include/asm/sigcontext.h )
	-- struct _xstate { struct _fpstate fpstate; struct _xsave_hdr xstate_hdr; struct _ymmh_state ymmh; };


cpu_has_invlpg 	( diff_type: Del type: macro file: arch/x86/include/asm/cpufeature.h )
	-- # define cpu_has_invlpg (boot_cpu_data.x86 > 3)


native_pagetable_setup_start 	( diff_type: Del type: macro file: arch/x86/include/asm/pgtable_types.h )
	-- #define native_pagetable_setup_start x86_init_pgd_noop


native_pagetable_setup_done 	( diff_type: Del type: macro file: arch/x86/include/asm/pgtable_types.h )
	-- #define native_pagetable_setup_done x86_init_pgd_noop


X86_IOC_RDMSR_REGS 	( diff_type: Del type: macro file: arch/x86/include/asm/msr.h )
	-- #define X86_IOC_RDMSR_REGS _IOWR('c',0xA0,__u32[8])


X86_IOC_WRMSR_REGS 	( diff_type: Del type: macro file: arch/x86/include/asm/msr.h )
	-- #define X86_IOC_WRMSR_REGS _IOWR('c',0xA1,__u32[8])


native_rdmsr_safe_regs 	( diff_type: Del type: prototype file: arch/x86/include/asm/msr.h )
	-- extern int native_rdmsr_safe_regs(u32 regs[8]);


native_wrmsr_safe_regs 	( diff_type: Del type: prototype file: arch/x86/include/asm/msr.h )
	-- extern int native_wrmsr_safe_regs(u32 regs[8]);


rdmsrl_amd_safe 	( diff_type: Del type: function file: arch/x86/include/asm/paravirt.h )
	-- static inline int rdmsrl_amd_safe(unsigned msr,unsigned long long *p)


wrmsrl_amd_safe 	( diff_type: Del type: function file: arch/x86/include/asm/paravirt.h )
	-- static inline int wrmsrl_amd_safe(unsigned msr,unsigned long long val)


rdmsr_safe_regs 	( diff_type: All type: macro-->prototype file: arch/x86/include/asm/paravirt.h-->arch/x86/include/asm/msr.h )
	-- #define rdmsr_safe_regs(regs) paravirt_rdmsr_regs(regs)
	++ extern int rdmsr_safe_regs(u32 regs[8]);


wrmsr_safe_regs 	( diff_type: All type: macro-->prototype file: arch/x86/include/asm/paravirt.h-->arch/x86/include/asm/msr.h )
	-- #define wrmsr_safe_regs(regs) paravirt_wrmsr_regs(regs)
	++ extern int wrmsr_safe_regs(u32 regs[8]);


checking_wrmsrl 	( diff_type: Del type: macro file: arch/x86/include/asm/msr.h )
	-- #define checking_wrmsrl(msr,val) wrmsr_safe((msr),(u32)(val), (u32)((val) >> 32))


PER_CLEAR_ON_SETID 	( diff_type: Del type: macro file: include/linux/personality.h )
	-- #define PER_CLEAR_ON_SETID (READ_IMPLIES_EXEC | ADDR_NO_RANDOMIZE | ADDR_COMPAT_LAYOUT | MMAP_PAGE_ZERO)


paravirt_rdmsr_regs 	( diff_type: Del type: function file: arch/x86/include/asm/paravirt.h )
	-- static inline int paravirt_rdmsr_regs(u32 *regs)


paravirt_wrmsr_regs 	( diff_type: Del type: function file: arch/x86/include/asm/paravirt.h )
	-- static inline int paravirt_wrmsr_regs(u32 *regs)


flush_tlb_others 	( diff_type: Mod type: function file: arch/x86/include/asm/paravirt.h )
	-- static inline void flush_tlb_others(const struct cpumask *cpumask,struct mm_struct *mm,unsigned long va)
	++ static inline void flush_tlb_others(const struct cpumask *cpumask,struct mm_struct *mm,unsigned long start,unsigned long end)


arch_flush_lazy_mmu_mode 	( diff_type: Mod type: prototype-->function file: arch/x86/include/asm/paravirt.h )
	-- void arch_flush_lazy_mmu_mode(void);
	++ static inline void arch_flush_lazy_mmu_mode(void)


__LINUX__AIO_ABI_H 	( diff_type: Mov type: macro file: include/linux/aio_abi.h )
	-- include/uapi/linux/aio_abi.h
	++ #define __LINUX__AIO_ABI_H


IOCB_FLAG_RESFD 	( diff_type: Mov type: macro file: include/linux/aio_abi.h )
	-- include/uapi/linux/aio_abi.h
	++ #define IOCB_FLAG_RESFD (1 << 0)


io_event 	( diff_type: Mov type: struct file: include/linux/aio_abi.h )
	-- include/uapi/linux/aio_abi.h
	++ struct io_event { __u64 data; __u64 obj; __s64 res; __s64 res2; };


PADDED 	( diff_type: Mov type: macro file: include/linux/aio_abi.h )
	-- include/uapi/linux/aio_abi.h
	++ #define PADDED(x,y) y,x


iocb 	( diff_type: Mov type: struct file: include/linux/aio_abi.h )
	-- include/uapi/linux/aio_abi.h
	++ struct iocb { __u64 aio_data; __u32 PADDED(aio_key, aio_reserved1); __u16 aio_lio_opcode; __s16 aio_reqprio; __u32 aio_fildes; __u64 aio_buf; __u64 aio_nbytes; __s64 aio_offset; __u64 aio_reserved2; __u32 aio_flags; __u32 aio_resfd; };


IFBIG 	( diff_type: Mov type: macro file: include/linux/aio_abi.h )
	-- include/uapi/linux/aio_abi.h
	++ #undef IFBIG


IFLITTLE 	( diff_type: Mov type: macro file: include/linux/aio_abi.h )
	-- include/uapi/linux/aio_abi.h
	++ #undef IFLITTLE


iovec 	( diff_type: Del type: struct file: include/linux/uio.h )
	-- struct iovec { void __user *iov_base; __kernel_size_t iov_len; };


UIO_FASTIOV 	( diff_type: Del type: macro file: include/linux/uio.h )
	-- #define UIO_FASTIOV 8


UIO_MAXIOV 	( diff_type: Del type: macro file: include/linux/uio.h )
	-- #define UIO_MAXIOV 1024


_ASM_GENERIC_ERRNO_H 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define _ASM_GENERIC_ERRNO_H


EDEADLK 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EDEADLK 35


ENAMETOOLONG 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ENAMETOOLONG 36


ENOLCK 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ENOLCK 37


ENOSYS 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ENOSYS 38


ENOTEMPTY 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ENOTEMPTY 39


ELOOP 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ELOOP 40


EWOULDBLOCK 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EWOULDBLOCK EAGAIN


ENOMSG 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ENOMSG 42


EIDRM 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EIDRM 43


ECHRNG 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ECHRNG 44


EL2NSYNC 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EL2NSYNC 45


EL3HLT 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EL3HLT 46


EL3RST 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EL3RST 47


ELNRNG 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ELNRNG 48


EUNATCH 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EUNATCH 49


ENOCSI 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ENOCSI 50


EL2HLT 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EL2HLT 51


EBADE 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EBADE 52


EBADR 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EBADR 53


EXFULL 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EXFULL 54


ENOANO 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ENOANO 55


EBADRQC 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EBADRQC 56


EBADSLT 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EBADSLT 57


EDEADLOCK 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EDEADLOCK EDEADLK


EBFONT 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EBFONT 59


ENOSTR 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ENOSTR 60


ENODATA 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ENODATA 61


ETIME 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ETIME 62


ENOSR 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ENOSR 63


ENONET 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ENONET 64


ENOPKG 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ENOPKG 65


EREMOTE 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EREMOTE 66


ENOLINK 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ENOLINK 67


EADV 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EADV 68


ESRMNT 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ESRMNT 69


ECOMM 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ECOMM 70


EPROTO 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EPROTO 71


EMULTIHOP 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EMULTIHOP 72


EDOTDOT 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EDOTDOT 73


EBADMSG 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EBADMSG 74


EOVERFLOW 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EOVERFLOW 75


ENOTUNIQ 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ENOTUNIQ 76


EBADFD 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EBADFD 77


EREMCHG 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EREMCHG 78


ELIBACC 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ELIBACC 79


ELIBBAD 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ELIBBAD 80


ELIBSCN 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ELIBSCN 81


ELIBMAX 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ELIBMAX 82


ELIBEXEC 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ELIBEXEC 83


EILSEQ 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EILSEQ 84


ERESTART 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ERESTART 85


ESTRPIPE 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ESTRPIPE 86


EUSERS 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EUSERS 87


ENOTSOCK 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ENOTSOCK 88


EDESTADDRREQ 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EDESTADDRREQ 89


EMSGSIZE 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EMSGSIZE 90


EPROTOTYPE 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EPROTOTYPE 91


ENOPROTOOPT 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ENOPROTOOPT 92


EPROTONOSUPPORT 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EPROTONOSUPPORT 93


ESOCKTNOSUPPORT 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ESOCKTNOSUPPORT 94


EOPNOTSUPP 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EOPNOTSUPP 95


EPFNOSUPPORT 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EPFNOSUPPORT 96


EAFNOSUPPORT 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EAFNOSUPPORT 97


EADDRINUSE 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EADDRINUSE 98


EADDRNOTAVAIL 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EADDRNOTAVAIL 99


ENETDOWN 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ENETDOWN 100


ENETUNREACH 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ENETUNREACH 101


ENETRESET 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ENETRESET 102


ECONNABORTED 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ECONNABORTED 103


ECONNRESET 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ECONNRESET 104


ENOBUFS 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ENOBUFS 105


EISCONN 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EISCONN 106


ENOTCONN 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ENOTCONN 107


ESHUTDOWN 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ESHUTDOWN 108


ETOOMANYREFS 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ETOOMANYREFS 109


ETIMEDOUT 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ETIMEDOUT 110


ECONNREFUSED 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ECONNREFUSED 111


EHOSTDOWN 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EHOSTDOWN 112


EHOSTUNREACH 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EHOSTUNREACH 113


EALREADY 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EALREADY 114


EINPROGRESS 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EINPROGRESS 115


ESTALE 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ESTALE 116


EUCLEAN 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EUCLEAN 117


ENOTNAM 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ENOTNAM 118


ENAVAIL 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ENAVAIL 119


EISNAM 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EISNAM 120


EREMOTEIO 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EREMOTEIO 121


EDQUOT 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EDQUOT 122


ENOMEDIUM 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ENOMEDIUM 123


EMEDIUMTYPE 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EMEDIUMTYPE 124


ECANCELED 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ECANCELED 125


ENOKEY 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ENOKEY 126


EKEYEXPIRED 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EKEYEXPIRED 127


EKEYREVOKED 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EKEYREVOKED 128


EKEYREJECTED 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EKEYREJECTED 129


EOWNERDEAD 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EOWNERDEAD 130


ENOTRECOVERABLE 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ENOTRECOVERABLE 131


ERFKILL 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define ERFKILL 132


EHWPOISON 	( diff_type: Del type: macro file: include/asm-generic/errno.h )
	-- #define EHWPOISON 133


atomic_dec_if_positive 	( diff_type: Mov type: function file: arch/x86/include/asm/atomic.h )
	-- include/linux/atomic.h
	++ static inline int atomic_dec_if_positive(atomic_t *v)


dev_pm_info 	( diff_type: Mod type: struct file: include/linux/pm.h )
	-- struct dev_pm_info { pm_message_t power_state; unsigned int can_wakeup:1; unsigned int async_suspend:1; bool is_prepared:1; bool is_suspended:1; bool ignore_children:1; spinlock_t lock; struct list_head entry; struct completion completion; struct wakeup_source *wakeup; bool wakeup_path:1; unsigned int should_wakeup:1; struct timer_list suspend_timer; unsigned long timer_expires; struct work_struct work; wait_queue_head_t wait_queue; atomic_t usage_count; atomic_t child_count; unsigned int disable_depth:3; unsigned int idle_notification:1; unsigned int request_pending:1; unsigned int deferred_resume:1; unsigned int run_wake:1; unsigned int runtime_auto:1; unsigned int no_callbacks:1; unsigned int irq_safe:1; unsigned int use_autosuspend:1; unsigned int timer_autosuspends:1; enum rpm_request request; enum rpm_status runtime_status; int runtime_error; int autosuspend_delay; unsigned long last_busy; unsigned long active_jiffies; unsigned long suspended_jiffies; unsigned long accounting_timestamp; struct dev_pm_qos_request *pq_req; struct pm_subsys_data *subsys_data; struct pm_qos_constraints *constraints; };
	++ struct dev_pm_info { pm_message_t power_state; unsigned int can_wakeup:1; unsigned int async_suspend:1; bool is_prepared:1; bool is_suspended:1; bool ignore_children:1; bool early_init:1; spinlock_t lock; struct list_head entry; struct completion completion; struct wakeup_source *wakeup; bool wakeup_path:1; bool syscore:1; unsigned int should_wakeup:1; struct timer_list suspend_timer; unsigned long timer_expires; struct work_struct work; wait_queue_head_t wait_queue; atomic_t usage_count; atomic_t child_count; unsigned int disable_depth:3; unsigned int idle_notification:1; unsigned int request_pending:1; unsigned int deferred_resume:1; unsigned int run_wake:1; unsigned int runtime_auto:1; unsigned int no_callbacks:1; unsigned int irq_safe:1; unsigned int use_autosuspend:1; unsigned int timer_autosuspends:1; enum rpm_request request; enum rpm_status runtime_status; int runtime_error; int autosuspend_delay; unsigned long last_busy; unsigned long active_jiffies; unsigned long suspended_jiffies; unsigned long accounting_timestamp; struct pm_subsys_data *subsys_data; struct dev_pm_qos *qos; };


__WARN_RATELIMIT 	( diff_type: Del type: macro file: include/linux/ratelimit.h )
	-- #define __WARN_RATELIMIT(condition,state,format...) ({ int rtn = WARN(condition, format); rtn; })


WARN_RATELIMIT 	( diff_type: Mod type: macro file: include/linux/ratelimit.h )
	-- #define WARN_RATELIMIT(condition,format...) ({ int rtn = WARN(condition, format); rtn; })
	++ #define WARN_RATELIMIT(condition,format,...) ({ int rtn = WARN(condition, format, ##__VA_ARGS__); rtn; })


dev_archdata 	( diff_type: Mod type: struct file: arch/x86/include/asm/device.h )
	-- struct dev_archdata { void *acpi_handle; struct dma_map_ops *dma_ops; void *iommu; };
	++ struct dev_archdata { struct dma_map_ops *dma_ops; void *iommu; };


VM_GROWSUP 	( diff_type: Mod type: macro file: include/linux/mm.h )
	-- #define VM_GROWSUP 0x00000000
	++ # define VM_GROWSUP VM_NONE


VM_NOHUGEPAGE 	( diff_type: Mod type: macro file: include/linux/mm.h )
	-- #define VM_NOHUGEPAGE 0x00000200
	++ #define VM_NOHUGEPAGE 0x40000000


VM_EXECUTABLE 	( diff_type: Del type: macro file: include/linux/mm.h )
	-- #define VM_EXECUTABLE 0x00001000


VM_RESERVED 	( diff_type: Del type: macro file: include/linux/mm.h )
	-- #define VM_RESERVED 0x00080000


VM_MAPPED_COPY 	( diff_type: Mod type: macro file: include/linux/mm.h )
	-- #define VM_MAPPED_COPY 0x01000000
	++ # define VM_MAPPED_COPY VM_ARCH_1


VM_HUGEPAGE 	( diff_type: Mod type: macro file: include/linux/mm.h )
	-- #define VM_HUGEPAGE 0x01000000
	++ #define VM_HUGEPAGE 0x20000000


VM_INSERTPAGE 	( diff_type: Del type: macro file: include/linux/mm.h )
	-- #define VM_INSERTPAGE 0x02000000


VM_NODUMP 	( diff_type: Del type: macro file: include/linux/mm.h )
	-- #define VM_NODUMP 0x04000000


VM_CAN_NONLINEAR 	( diff_type: Del type: macro file: include/linux/mm.h )
	-- #define VM_CAN_NONLINEAR 0x08000000


VM_SAO 	( diff_type: Mod type: macro file: include/linux/mm.h )
	-- #define VM_SAO 0x20000000
	++ # define VM_SAO VM_ARCH_1


VM_PFN_AT_MMAP 	( diff_type: Del type: macro file: include/linux/mm.h )
	-- #define VM_PFN_AT_MMAP 0x40000000


VM_SPECIAL 	( diff_type: Mod type: macro file: include/linux/mm.h )
	-- #define VM_SPECIAL (VM_IO | VM_DONTEXPAND | VM_RESERVED | VM_PFNMAP)
	++ #define VM_SPECIAL (VM_IO | VM_DONTEXPAND | VM_PFNMAP)


is_linear_pfn_mapping 	( diff_type: Del type: function file: include/linux/mm.h )
	-- static inline int is_linear_pfn_mapping(struct vm_area_struct *vma)


is_pfn_mapping 	( diff_type: Del type: function file: include/linux/mm.h )
	-- static inline int is_pfn_mapping(struct vm_area_struct *vma)


vm_operations_struct 	( diff_type: Mod type: struct file: include/linux/mm.h )
	-- struct vm_operations_struct { void (*open)(struct vm_area_struct * area); void (*close)(struct vm_area_struct * area); int (*fault)(struct vm_area_struct *vma, struct vm_fault *vmf); int (*page_mkwrite)(struct vm_area_struct *vma, struct vm_fault *vmf); int (*access)(struct vm_area_struct *vma, unsigned long addr,void *buf, int len, int write); int (*set_policy)(struct vm_area_struct *vma, struct mempolicy *new); struct mempolicy *(*get_policy)(struct vm_area_struct *vma,unsigned long addr); int (*migrate)(struct vm_area_struct *vma, const nodemask_t *from,const nodemask_t *to, unsigned long flags); };
	++ struct vm_operations_struct { void (*open)(struct vm_area_struct * area); void (*close)(struct vm_area_struct * area); int (*fault)(struct vm_area_struct *vma, struct vm_fault *vmf); int (*page_mkwrite)(struct vm_area_struct *vma, struct vm_fault *vmf); int (*access)(struct vm_area_struct *vma, unsigned long addr,void *buf, int len, int write); int (*set_policy)(struct vm_area_struct *vma, struct mempolicy *new); struct mempolicy *(*get_policy)(struct vm_area_struct *vma,unsigned long addr); int (*migrate)(struct vm_area_struct *vma, const nodemask_t *from,const nodemask_t *to, unsigned long flags); int (*remap_pages)(struct vm_area_struct *vma, unsigned long addr,unsigned long size, pgoff_t pgoff); };


vmtruncate 	( diff_type: Del type: prototype file: include/linux/mm.h )
	-- extern int vmtruncate(struct inode *inode,loff_t offset);


move_page_tables 	( diff_type: Mod type: prototype file: include/linux/mm.h )
	-- extern unsigned long move_page_tables(struct vm_area_struct *vma,unsigned long old_addr, struct vm_area_struct *new_vma,unsigned long new_addr, unsigned long len);
	++ extern unsigned long move_page_tables(struct vm_area_struct *vma,unsigned long old_addr, struct vm_area_struct *new_vma,unsigned long new_addr, unsigned long len,bool need_rmap_locks);


vma_prio_tree_add 	( diff_type: Del type: prototype file: include/linux/mm.h )
	-- void vma_prio_tree_add(struct vm_area_struct *,struct vm_area_struct *old);


vma_prio_tree_insert 	( diff_type: Del type: prototype file: include/linux/mm.h )
	-- void vma_prio_tree_insert(struct vm_area_struct *,struct prio_tree_root *);


vma_prio_tree_remove 	( diff_type: Del type: prototype file: include/linux/mm.h )
	-- void vma_prio_tree_remove(struct vm_area_struct *,struct prio_tree_root *);


vma_prio_tree_next 	( diff_type: Del type: prototype file: include/linux/mm.h )
	-- struct vm_area_struct *vma_prio_tree_next(struct vm_area_struct *vma,struct prio_tree_iter *iter);


vma_prio_tree_foreach 	( diff_type: Del type: macro file: include/linux/mm.h )
	-- #define vma_prio_tree_foreach(vma,iter,root,begin,end) for (prio_tree_iter_init(iter, root, begin, end), vma = NULL; (vma = vma_prio_tree_next(vma, iter)); )


copy_vma 	( diff_type: Mod type: prototype file: include/linux/mm.h )
	-- extern struct vm_area_struct *copy_vma(struct vm_area_struct **,unsigned long addr, unsigned long len, pgoff_t pgoff);
	++ extern struct vm_area_struct *copy_vma(struct vm_area_struct **,unsigned long addr, unsigned long len, pgoff_t pgoff,bool *need_rmap_locks);


added_exe_file_vma 	( diff_type: Del type: prototype file: include/linux/mm.h )
	-- extern void added_exe_file_vma(struct mm_struct *mm);


removed_exe_file_vma 	( diff_type: Del type: prototype file: include/linux/mm.h )
	-- extern void removed_exe_file_vma(struct mm_struct *mm);


x86_init_paging 	( diff_type: Mod type: struct file: arch/x86/include/asm/x86_init.h )
	-- struct x86_init_paging { void (*pagetable_setup_start)(pgd_t *base); void (*pagetable_setup_done)(pgd_t *base); };
	++ struct x86_init_paging { void (*pagetable_init)(void); };


x86_platform_ops 	( diff_type: Mod type: struct file: arch/x86/include/asm/x86_init.h )
	-- struct x86_platform_ops { unsigned long (*calibrate_tsc)(void); void (*wallclock_init)(void); unsigned long (*get_wallclock)(void); int (*set_wallclock)(unsigned long nowtime); void (*iommu_shutdown)(void); bool (*is_untracked_pat_range)(u64 start, u64 end); void (*nmi_init)(void); unsigned char (*get_nmi_reason)(void); int (*i8042_detect)(void); void (*save_sched_clock_state)(void); void (*restore_sched_clock_state)(void); };
	++ struct x86_platform_ops { unsigned long (*calibrate_tsc)(void); unsigned long (*get_wallclock)(void); int (*set_wallclock)(unsigned long nowtime); void (*iommu_shutdown)(void); bool (*is_untracked_pat_range)(u64 start, u64 end); void (*nmi_init)(void); unsigned char (*get_nmi_reason)(void); int (*i8042_detect)(void); void (*save_sched_clock_state)(void); void (*restore_sched_clock_state)(void); void (*apic_post_init)(void); };


_K_SS_MAXSIZE 	( diff_type: Del type: macro file: include/linux/socket.h )
	-- #define _K_SS_MAXSIZE 128


_K_SS_ALIGNSIZE 	( diff_type: Del type: macro file: include/linux/socket.h )
	-- #define _K_SS_ALIGNSIZE (__alignof__ (struct sockaddr *))


__kernel_sockaddr_storage 	( diff_type: Del type: struct file: include/linux/socket.h )
	-- struct __kernel_sockaddr_storage { __kernel_sa_family_t ss_family; char __data[_K_SS_MAXSIZE - sizeof(unsigned short)]; } __attribute__ ((aligned(_K_SS_ALIGNSIZE)));


NR_OPEN 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #undef NR_OPEN


INR_OPEN_CUR 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define INR_OPEN_CUR 1024


INR_OPEN_MAX 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define INR_OPEN_MAX 4096


BLOCK_SIZE_BITS 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLOCK_SIZE_BITS 10


BLOCK_SIZE 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLOCK_SIZE (1<<BLOCK_SIZE_BITS)


SEEK_SET 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define SEEK_SET 0


SEEK_CUR 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define SEEK_CUR 1


SEEK_END 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define SEEK_END 2


SEEK_DATA 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define SEEK_DATA 3


SEEK_HOLE 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define SEEK_HOLE 4


SEEK_MAX 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define SEEK_MAX SEEK_HOLE


fstrim_range 	( diff_type: Del type: struct file: include/linux/fs.h )
	-- struct fstrim_range { __u64 start; __u64 len; __u64 minlen; };


files_stat_struct 	( diff_type: Del type: struct file: include/linux/fs.h )
	-- struct files_stat_struct { unsigned long nr_files; unsigned long nr_free_files; unsigned long max_files; };


inodes_stat_t 	( diff_type: Del type: struct file: include/linux/fs.h )
	-- struct inodes_stat_t { int nr_inodes; int nr_unused; int dummy[5]; };


NR_FILE 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define NR_FILE 8192


SEL_IN 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define SEL_IN 1


SEL_OUT 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define SEL_OUT 2


SEL_EX 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define SEL_EX 4


FS_REQUIRES_DEV 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_REQUIRES_DEV 1


FS_BINARY_MOUNTDATA 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_BINARY_MOUNTDATA 2


FS_HAS_SUBTYPE 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_HAS_SUBTYPE 4


FS_REVAL_DOT 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_REVAL_DOT 16384


FS_RENAME_DOES_D_MOVE 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_RENAME_DOES_D_MOVE 32768


MS_RDONLY 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_RDONLY 1


MS_NOSUID 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_NOSUID 2


MS_NODEV 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_NODEV 4


MS_NOEXEC 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_NOEXEC 8


MS_SYNCHRONOUS 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_SYNCHRONOUS 16


MS_REMOUNT 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_REMOUNT 32


MS_MANDLOCK 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_MANDLOCK 64


MS_DIRSYNC 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_DIRSYNC 128


MS_NOATIME 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_NOATIME 1024


MS_NODIRATIME 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_NODIRATIME 2048


MS_BIND 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_BIND 4096


MS_MOVE 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_MOVE 8192


MS_REC 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_REC 16384


MS_VERBOSE 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_VERBOSE 32768


MS_SILENT 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_SILENT 32768


MS_POSIXACL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_POSIXACL (1<<16)


MS_UNBINDABLE 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_UNBINDABLE (1<<17)


MS_PRIVATE 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_PRIVATE (1<<18)


MS_SLAVE 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_SLAVE (1<<19)


MS_SHARED 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_SHARED (1<<20)


MS_RELATIME 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_RELATIME (1<<21)


MS_KERNMOUNT 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_KERNMOUNT (1<<22)


MS_I_VERSION 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_I_VERSION (1<<23)


MS_STRICTATIME 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_STRICTATIME (1<<24)


MS_NOSEC 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_NOSEC (1<<28)


MS_BORN 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_BORN (1<<29)


MS_ACTIVE 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_ACTIVE (1<<30)


MS_NOUSER 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_NOUSER (1<<31)


MS_RMT_MASK 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_RMT_MASK (MS_RDONLY|MS_SYNCHRONOUS|MS_MANDLOCK|MS_I_VERSION)


MS_MGC_VAL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_MGC_VAL 0xC0ED0000


MS_MGC_MSK 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define MS_MGC_MSK 0xffff0000


BLKROSET 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKROSET _IO(0x12,93)


BLKROGET 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKROGET _IO(0x12,94)


BLKRRPART 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKRRPART _IO(0x12,95)


BLKGETSIZE 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKGETSIZE _IO(0x12,96)


BLKFLSBUF 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKFLSBUF _IO(0x12,97)


BLKRASET 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKRASET _IO(0x12,98)


BLKRAGET 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKRAGET _IO(0x12,99)


BLKFRASET 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKFRASET _IO(0x12,100)


BLKFRAGET 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKFRAGET _IO(0x12,101)


BLKSECTSET 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKSECTSET _IO(0x12,102)


BLKSECTGET 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKSECTGET _IO(0x12,103)


BLKSSZGET 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKSSZGET _IO(0x12,104)


BLKBSZGET 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKBSZGET _IOR(0x12,112,size_t)


BLKBSZSET 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKBSZSET _IOW(0x12,113,size_t)


BLKGETSIZE64 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKGETSIZE64 _IOR(0x12,114,size_t)


BLKTRACESETUP 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKTRACESETUP _IOWR(0x12,115,struct blk_user_trace_setup)


BLKTRACESTART 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKTRACESTART _IO(0x12,116)


BLKTRACESTOP 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKTRACESTOP _IO(0x12,117)


BLKTRACETEARDOWN 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKTRACETEARDOWN _IO(0x12,118)


BLKDISCARD 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKDISCARD _IO(0x12,119)


BLKIOMIN 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKIOMIN _IO(0x12,120)


BLKIOOPT 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKIOOPT _IO(0x12,121)


BLKALIGNOFF 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKALIGNOFF _IO(0x12,122)


BLKPBSZGET 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKPBSZGET _IO(0x12,123)


BLKDISCARDZEROES 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKDISCARDZEROES _IO(0x12,124)


BLKSECDISCARD 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKSECDISCARD _IO(0x12,125)


BLKROTATIONAL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BLKROTATIONAL _IO(0x12,126)


BMAP_IOCTL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define BMAP_IOCTL 1


FIBMAP 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FIBMAP _IO(0x00,1)


FIGETBSZ 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FIGETBSZ _IO(0x00,2)


FIFREEZE 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FIFREEZE _IOWR('X',119,int)


FITHAW 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FITHAW _IOWR('X',120,int)


FITRIM 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FITRIM _IOWR('X',121,struct fstrim_range)


FS_IOC_GETFLAGS 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_IOC_GETFLAGS _IOR('f',1,long)


FS_IOC_SETFLAGS 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_IOC_SETFLAGS _IOW('f',2,long)


FS_IOC_GETVERSION 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_IOC_GETVERSION _IOR('v',1,long)


FS_IOC_SETVERSION 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_IOC_SETVERSION _IOW('v',2,long)


FS_IOC_FIEMAP 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_IOC_FIEMAP _IOWR('f',11,struct fiemap)


FS_IOC32_GETFLAGS 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_IOC32_GETFLAGS _IOR('f',1,int)


FS_IOC32_SETFLAGS 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_IOC32_SETFLAGS _IOW('f',2,int)


FS_IOC32_GETVERSION 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_IOC32_GETVERSION _IOR('v',1,int)


FS_IOC32_SETVERSION 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_IOC32_SETVERSION _IOW('v',2,int)


FS_SECRM_FL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_SECRM_FL 0x00000001


FS_UNRM_FL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_UNRM_FL 0x00000002


FS_COMPR_FL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_COMPR_FL 0x00000004


FS_SYNC_FL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_SYNC_FL 0x00000008


FS_IMMUTABLE_FL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_IMMUTABLE_FL 0x00000010


FS_APPEND_FL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_APPEND_FL 0x00000020


FS_NODUMP_FL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_NODUMP_FL 0x00000040


FS_NOATIME_FL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_NOATIME_FL 0x00000080


FS_DIRTY_FL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_DIRTY_FL 0x00000100


FS_COMPRBLK_FL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_COMPRBLK_FL 0x00000200


FS_NOCOMP_FL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_NOCOMP_FL 0x00000400


FS_ECOMPR_FL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_ECOMPR_FL 0x00000800


FS_BTREE_FL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_BTREE_FL 0x00001000


FS_INDEX_FL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_INDEX_FL 0x00001000


FS_IMAGIC_FL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_IMAGIC_FL 0x00002000


FS_JOURNAL_DATA_FL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_JOURNAL_DATA_FL 0x00004000


FS_NOTAIL_FL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_NOTAIL_FL 0x00008000


FS_DIRSYNC_FL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_DIRSYNC_FL 0x00010000


FS_TOPDIR_FL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_TOPDIR_FL 0x00020000


FS_EXTENT_FL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_EXTENT_FL 0x00080000


FS_DIRECTIO_FL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_DIRECTIO_FL 0x00100000


FS_NOCOW_FL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_NOCOW_FL 0x00800000


FS_RESERVED_FL 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_RESERVED_FL 0x80000000


FS_FL_USER_VISIBLE 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_FL_USER_VISIBLE 0x0003DFFF


FS_FL_USER_MODIFIABLE 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define FS_FL_USER_MODIFIABLE 0x000380FF


SYNC_FILE_RANGE_WAIT_BEFORE 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define SYNC_FILE_RANGE_WAIT_BEFORE 1


SYNC_FILE_RANGE_WRITE 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define SYNC_FILE_RANGE_WRITE 2


SYNC_FILE_RANGE_WAIT_AFTER 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define SYNC_FILE_RANGE_WAIT_AFTER 4


address_space_operations 	( diff_type: Mod type: struct file: include/linux/fs.h )
	-- struct address_space_operations { int (*writepage)(struct page *page, struct writeback_control *wbc); int (*readpage)(struct file *, struct page *); int (*writepages)(struct address_space *, struct writeback_control *); int (*set_page_dirty)(struct page *page); int (*readpages)(struct file *filp, struct address_space *mapping,struct list_head *pages, unsigned nr_pages); int (*write_begin)(struct file *, struct address_space *mapping,loff_t pos, unsigned len, unsigned flags,struct page **pagep, void **fsdata); int (*write_end)(struct file *, struct address_space *mapping,loff_t pos, unsigned len, unsigned copied,struct page *page, void *fsdata); sector_t (*bmap)(struct address_space *, sector_t); void (*invalidatepage) (struct page *, unsigned long); int (*releasepage) (struct page *, gfp_t); void (*freepage)(struct page *); ssize_t (*direct_IO)(int, struct kiocb *, const struct iovec *iov,loff_t offset, unsigned long nr_segs); int (*get_xip_mem)(struct address_space *, pgoff_t, int,void **, unsigned long *); int (*migratepage) (struct address_space *,struct page *, struct page *, enum migrate_mode); int (*launder_page) (struct page *); int (*is_partially_uptodate) (struct page *, read_descriptor_t *,unsigned long); int (*error_remove_page)(struct address_space *, struct page *); };
	++ struct address_space_operations { int (*writepage)(struct page *page, struct writeback_control *wbc); int (*readpage)(struct file *, struct page *); int (*writepages)(struct address_space *, struct writeback_control *); int (*set_page_dirty)(struct page *page); int (*readpages)(struct file *filp, struct address_space *mapping,struct list_head *pages, unsigned nr_pages); int (*write_begin)(struct file *, struct address_space *mapping,loff_t pos, unsigned len, unsigned flags,struct page **pagep, void **fsdata); int (*write_end)(struct file *, struct address_space *mapping,loff_t pos, unsigned len, unsigned copied,struct page *page, void *fsdata); sector_t (*bmap)(struct address_space *, sector_t); void (*invalidatepage) (struct page *, unsigned long); int (*releasepage) (struct page *, gfp_t); void (*freepage)(struct page *); ssize_t (*direct_IO)(int, struct kiocb *, const struct iovec *iov,loff_t offset, unsigned long nr_segs); int (*get_xip_mem)(struct address_space *, pgoff_t, int,void **, unsigned long *); int (*migratepage) (struct address_space *,struct page *, struct page *, enum migrate_mode); int (*launder_page) (struct page *); int (*is_partially_uptodate) (struct page *, read_descriptor_t *,unsigned long); int (*error_remove_page)(struct address_space *, struct page *); int (*swap_activate)(struct swap_info_struct *sis, struct file *file,sector_t *span); void (*swap_deactivate)(struct file *file); };


address_space 	( diff_type: Mod type: struct file: include/linux/fs.h )
	-- struct address_space { struct inode *host; struct radix_tree_root page_tree; spinlock_t tree_lock; unsigned int i_mmap_writable; struct prio_tree_root i_mmap; struct list_head i_mmap_nonlinear; struct mutex i_mmap_mutex; unsigned long nrpages; pgoff_t writeback_index; const struct address_space_operations *a_ops; unsigned long flags; struct backing_dev_info *backing_dev_info; spinlock_t private_lock; struct list_head private_list; struct address_space *assoc_mapping; } __attribute__((aligned(sizeof(long))));
	++ struct address_space { struct inode *host; struct radix_tree_root page_tree; spinlock_t tree_lock; unsigned int i_mmap_writable; struct rb_root i_mmap; struct list_head i_mmap_nonlinear; struct mutex i_mmap_mutex; unsigned long nrpages; pgoff_t writeback_index; const struct address_space_operations *a_ops; unsigned long flags; struct backing_dev_info *backing_dev_info; spinlock_t private_lock; struct list_head private_list; void *private_data; } __attribute__((aligned(sizeof(long))));


inode 	( diff_type: Mod type: struct file: include/linux/fs.h )
	-- struct inode { umode_t i_mode; unsigned short i_opflags; kuid_t i_uid; kgid_t i_gid; unsigned int i_flags; struct posix_acl *i_acl; struct posix_acl *i_default_acl; const struct inode_operations *i_op; struct super_block *i_sb; struct address_space *i_mapping; void *i_security; unsigned long i_ino; const unsigned int i_nlink; unsigned int __i_nlink; }; dev_t i_rdev; loff_t i_size; struct timespec i_atime; struct timespec i_mtime; struct timespec i_ctime; spinlock_t i_lock; unsigned short i_bytes; unsigned int i_blkbits; blkcnt_t i_blocks; seqcount_t i_size_seqcount; unsigned long i_state; struct mutex i_mutex; unsigned long dirtied_when; struct hlist_node i_hash; struct list_head i_wb_list; struct list_head i_lru; struct list_head i_sb_list; union { struct list_head i_dentry; struct rcu_head i_rcu; }; u64 i_version; atomic_t i_count; atomic_t i_dio_count; atomic_t i_writecount; const struct file_operations *i_fop; struct file_lock *i_flock; struct address_space i_data; struct dquot *i_dquot[MAXQUOTAS]; struct list_head i_devices; union { struct pipe_inode_info *i_pipe; struct block_device *i_bdev; struct cdev *i_cdev; }; __u32 i_generation; __u32 i_fsnotify_mask; struct hlist_head i_fsnotify_marks; atomic_t i_readcount; void *i_private; };
	++ struct inode { umode_t i_mode; unsigned short i_opflags; kuid_t i_uid; kgid_t i_gid; unsigned int i_flags; struct posix_acl *i_acl; struct posix_acl *i_default_acl; const struct inode_operations *i_op; struct super_block *i_sb; struct address_space *i_mapping; void *i_security; unsigned long i_ino; const unsigned int i_nlink; unsigned int __i_nlink; }; dev_t i_rdev; loff_t i_size; struct timespec i_atime; struct timespec i_mtime; struct timespec i_ctime; spinlock_t i_lock; unsigned short i_bytes; unsigned int i_blkbits; blkcnt_t i_blocks; seqcount_t i_size_seqcount; unsigned long i_state; struct mutex i_mutex; unsigned long dirtied_when; struct hlist_node i_hash; struct list_head i_wb_list; struct list_head i_lru; struct list_head i_sb_list; union { struct hlist_head i_dentry; struct rcu_head i_rcu; }; u64 i_version; atomic_t i_count; atomic_t i_dio_count; atomic_t i_writecount; const struct file_operations *i_fop; struct file_lock *i_flock; struct address_space i_data; struct dquot *i_dquot[MAXQUOTAS]; struct list_head i_devices; union { struct pipe_inode_info *i_pipe; struct block_device *i_bdev; struct cdev *i_cdev; }; __u32 i_generation; __u32 i_fsnotify_mask; struct hlist_head i_fsnotify_marks; atomic_t i_readcount; void *i_private; };


get_file 	( diff_type: Mod type: macro-->function file: include/linux/fs.h )
	-- #define get_file(x) atomic_long_inc(&(x)->f_count)
	++ static inline struct file *get_file(struct file *f)


MAX_LFS_FILESIZE 	( diff_type: Mod type: macro file: include/linux/fs.h )
	-- #define MAX_LFS_FILESIZE 0x7fffffffffffffffUL
	++ #define MAX_LFS_FILESIZE ((loff_t)0x7fffffffffffffffLL)


lock_manager_operations 	( diff_type: Mod type: struct file: include/linux/fs.h )
	-- struct lock_manager_operations { int (*lm_compare_owner)(struct file_lock *, struct file_lock *); void (*lm_notify)(struct file_lock *); int (*lm_grant)(struct file_lock *, struct file_lock *, int); void (*lm_release_private)(struct file_lock *); void (*lm_break)(struct file_lock *); int (*lm_change)(struct file_lock **, int); };
	++ struct lock_manager_operations { int (*lm_compare_owner)(struct file_lock *, struct file_lock *); void (*lm_notify)(struct file_lock *); int (*lm_grant)(struct file_lock *, struct file_lock *, int); void (*lm_break)(struct file_lock *); int (*lm_change)(struct file_lock **, int); };


locks_start_grace 	( diff_type: Mod type: prototype file: include/linux/fs.h )
	-- void locks_start_grace(struct lock_manager *);
	++ void locks_start_grace(struct net *,struct lock_manager *);


locks_in_grace 	( diff_type: Mod type: prototype file: include/linux/fs.h )
	-- int locks_in_grace(void);
	++ int locks_in_grace(struct net *);


super_block 	( diff_type: Mod type: struct file: include/linux/fs.h )
	-- struct super_block { struct list_head s_list; dev_t s_dev; unsigned char s_dirt; unsigned char s_blocksize_bits; unsigned long s_blocksize; loff_t s_maxbytes; struct file_system_type *s_type; const struct super_operations *s_op; const struct dquot_operations *dq_op; const struct quotactl_ops *s_qcop; const struct export_operations *s_export_op; unsigned long s_flags; unsigned long s_magic; struct dentry *s_root; struct rw_semaphore s_umount; struct mutex s_lock; int s_count; atomic_t s_active; void *s_security; const struct xattr_handler **s_xattr; struct list_head s_inodes; struct hlist_bl_head s_anon; struct list_head __percpu *s_files; struct list_head s_files; struct list_head s_mounts; struct list_head s_dentry_lru; int s_nr_dentry_unused; spinlock_t s_inode_lru_lock ____cacheline_aligned_in_smp; struct list_head s_inode_lru; int s_nr_inodes_unused; struct block_device *s_bdev; struct backing_dev_info *s_bdi; struct mtd_info *s_mtd; struct hlist_node s_instances; struct quota_info s_dquot; int s_frozen; wait_queue_head_t s_wait_unfrozen; char s_id[32]; u8 s_uuid[16]; void *s_fs_info; unsigned int s_max_links; fmode_t s_mode; u32 s_time_gran; struct mutex s_vfs_rename_mutex; char *s_subtype; char __rcu *s_options; const struct dentry_operations *s_d_op; int cleancache_poolid; struct shrinker s_shrink; atomic_long_t s_remove_count; int s_readonly_remount; };
	++ struct super_block { struct list_head s_list; dev_t s_dev; unsigned char s_blocksize_bits; unsigned long s_blocksize; loff_t s_maxbytes; struct file_system_type *s_type; const struct super_operations *s_op; const struct dquot_operations *dq_op; const struct quotactl_ops *s_qcop; const struct export_operations *s_export_op; unsigned long s_flags; unsigned long s_magic; struct dentry *s_root; struct rw_semaphore s_umount; int s_count; atomic_t s_active; void *s_security; const struct xattr_handler **s_xattr; struct list_head s_inodes; struct hlist_bl_head s_anon; struct list_head __percpu *s_files; struct list_head s_files; struct list_head s_mounts; struct list_head s_dentry_lru; int s_nr_dentry_unused; spinlock_t s_inode_lru_lock ____cacheline_aligned_in_smp; struct list_head s_inode_lru; int s_nr_inodes_unused; struct block_device *s_bdev; struct backing_dev_info *s_bdi; struct mtd_info *s_mtd; struct hlist_node s_instances; struct quota_info s_dquot; struct sb_writers s_writers; char s_id[32]; u8 s_uuid[16]; void *s_fs_info; unsigned int s_max_links; fmode_t s_mode; u32 s_time_gran; struct mutex s_vfs_rename_mutex; char *s_subtype; char __rcu *s_options; const struct dentry_operations *s_d_op; int cleancache_poolid; struct shrinker s_shrink; atomic_long_t s_remove_count; int s_readonly_remount; };


vfs_check_frozen 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define vfs_check_frozen(sb,level) wait_event((sb)->s_wait_unfrozen, ((sb)->s_frozen < (level)))


lock_super 	( diff_type: Del type: prototype file: include/linux/fs.h )
	-- extern void lock_super(struct super_block *);


unlock_super 	( diff_type: Del type: prototype file: include/linux/fs.h )
	-- extern void unlock_super(struct super_block *);


vfs_create 	( diff_type: Mod type: prototype file: include/linux/fs.h )
	-- extern int vfs_create(struct inode *,struct dentry *,umode_t,struct nameidata *);
	++ extern int vfs_create(struct inode *,struct dentry *,umode_t,bool);


file_operations 	( diff_type: Mod type: struct file: include/linux/fs.h )
	-- struct file_operations { struct module *owner; loff_t (*llseek) (struct file *, loff_t, int); ssize_t (*read) (struct file *, char __user *, size_t, loff_t *); ssize_t (*write) (struct file *, const char __user *, size_t, loff_t *); ssize_t (*aio_read) (struct kiocb *, const struct iovec *, unsigned long, loff_t); ssize_t (*aio_write) (struct kiocb *, const struct iovec *, unsigned long, loff_t); int (*readdir) (struct file *, void *, filldir_t); unsigned int (*poll) (struct file *, struct poll_table_struct *); long (*unlocked_ioctl) (struct file *, unsigned int, unsigned long); long (*compat_ioctl) (struct file *, unsigned int, unsigned long); int (*mmap) (struct file *, struct vm_area_struct *); int (*open) (struct inode *, struct file *); int (*flush) (struct file *, fl_owner_t id); int (*release) (struct inode *, struct file *); int (*fsync) (struct file *, loff_t, loff_t, int datasync); int (*aio_fsync) (struct kiocb *, int datasync); int (*fasync) (int, struct file *, int); int (*lock) (struct file *, int, struct file_lock *); ssize_t (*sendpage) (struct file *, struct page *, int, size_t, loff_t *, int); unsigned long (*get_unmapped_area)(struct file *, unsigned long, unsigned long, unsigned long, unsigned long); int (*check_flags)(int); int (*flock) (struct file *, int, struct file_lock *); ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t, unsigned int); ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t, unsigned int); int (*setlease)(struct file *, long, struct file_lock **); long (*fallocate)(struct file *file, int mode, loff_t offset,loff_t len); };
	++ struct file_operations { struct module *owner; loff_t (*llseek) (struct file *, loff_t, int); ssize_t (*read) (struct file *, char __user *, size_t, loff_t *); ssize_t (*write) (struct file *, const char __user *, size_t, loff_t *); ssize_t (*aio_read) (struct kiocb *, const struct iovec *, unsigned long, loff_t); ssize_t (*aio_write) (struct kiocb *, const struct iovec *, unsigned long, loff_t); int (*readdir) (struct file *, void *, filldir_t); unsigned int (*poll) (struct file *, struct poll_table_struct *); long (*unlocked_ioctl) (struct file *, unsigned int, unsigned long); long (*compat_ioctl) (struct file *, unsigned int, unsigned long); int (*mmap) (struct file *, struct vm_area_struct *); int (*open) (struct inode *, struct file *); int (*flush) (struct file *, fl_owner_t id); int (*release) (struct inode *, struct file *); int (*fsync) (struct file *, loff_t, loff_t, int datasync); int (*aio_fsync) (struct kiocb *, int datasync); int (*fasync) (int, struct file *, int); int (*lock) (struct file *, int, struct file_lock *); ssize_t (*sendpage) (struct file *, struct page *, int, size_t, loff_t *, int); unsigned long (*get_unmapped_area)(struct file *, unsigned long, unsigned long, unsigned long, unsigned long); int (*check_flags)(int); int (*flock) (struct file *, int, struct file_lock *); ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t, unsigned int); ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t, unsigned int); int (*setlease)(struct file *, long, struct file_lock **); long (*fallocate)(struct file *file, int mode, loff_t offset,loff_t len); int (*show_fdinfo)(struct seq_file *m, struct file *f); };


inode_operations 	( diff_type: Mod type: struct file: include/linux/fs.h )
	-- struct inode_operations { struct dentry * (*lookup) (struct inode *,struct dentry *, struct nameidata *); void * (*follow_link) (struct dentry *, struct nameidata *); int (*permission) (struct inode *, int); struct posix_acl * (*get_acl)(struct inode *, int); int (*readlink) (struct dentry *, char __user *,int); void (*put_link) (struct dentry *, struct nameidata *, void *); int (*create) (struct inode *,struct dentry *,umode_t,struct nameidata *); int (*link) (struct dentry *,struct inode *,struct dentry *); int (*unlink) (struct inode *,struct dentry *); int (*symlink) (struct inode *,struct dentry *,const char *); int (*mkdir) (struct inode *,struct dentry *,umode_t); int (*rmdir) (struct inode *,struct dentry *); int (*mknod) (struct inode *,struct dentry *,umode_t,dev_t); int (*rename) (struct inode *, struct dentry *,struct inode *, struct dentry *); void (*truncate) (struct inode *); int (*setattr) (struct dentry *, struct iattr *); int (*getattr) (struct vfsmount *mnt, struct dentry *, struct kstat *); int (*setxattr) (struct dentry *, const char *,const void *,size_t,int); ssize_t (*getxattr) (struct dentry *, const char *, void *, size_t); ssize_t (*listxattr) (struct dentry *, char *, size_t); int (*removexattr) (struct dentry *, const char *); int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 start,u64 len); int (*update_time)(struct inode *, struct timespec *, int); } ____cacheline_aligned;
	++ struct inode_operations { struct dentry * (*lookup) (struct inode *,struct dentry *, unsigned int); void * (*follow_link) (struct dentry *, struct nameidata *); int (*permission) (struct inode *, int); struct posix_acl * (*get_acl)(struct inode *, int); int (*readlink) (struct dentry *, char __user *,int); void (*put_link) (struct dentry *, struct nameidata *, void *); int (*create) (struct inode *,struct dentry *, umode_t, bool); int (*link) (struct dentry *,struct inode *,struct dentry *); int (*unlink) (struct inode *,struct dentry *); int (*symlink) (struct inode *,struct dentry *,const char *); int (*mkdir) (struct inode *,struct dentry *,umode_t); int (*rmdir) (struct inode *,struct dentry *); int (*mknod) (struct inode *,struct dentry *,umode_t,dev_t); int (*rename) (struct inode *, struct dentry *,struct inode *, struct dentry *); int (*setattr) (struct dentry *, struct iattr *); int (*getattr) (struct vfsmount *mnt, struct dentry *, struct kstat *); int (*setxattr) (struct dentry *, const char *,const void *,size_t,int); ssize_t (*getxattr) (struct dentry *, const char *, void *, size_t); ssize_t (*listxattr) (struct dentry *, char *, size_t); int (*removexattr) (struct dentry *, const char *); int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 start,u64 len); int (*update_time)(struct inode *, struct timespec *, int); int (*atomic_open)(struct inode *, struct dentry *,struct file *, unsigned open_flag,umode_t create_mode, int *opened); } ____cacheline_aligned;


super_operations 	( diff_type: Mod type: struct file: include/linux/fs.h )
	-- struct super_operations { struct inode *(*alloc_inode)(struct super_block *sb); void (*destroy_inode)(struct inode *); void (*dirty_inode) (struct inode *, int flags); int (*write_inode) (struct inode *, struct writeback_control *wbc); int (*drop_inode) (struct inode *); void (*evict_inode) (struct inode *); void (*put_super) (struct super_block *); void (*write_super) (struct super_block *); int (*sync_fs)(struct super_block *sb, int wait); int (*freeze_fs) (struct super_block *); int (*unfreeze_fs) (struct super_block *); int (*statfs) (struct dentry *, struct kstatfs *); int (*remount_fs) (struct super_block *, int *, char *); void (*umount_begin) (struct super_block *); int (*show_options)(struct seq_file *, struct dentry *); int (*show_devname)(struct seq_file *, struct dentry *); int (*show_path)(struct seq_file *, struct dentry *); int (*show_stats)(struct seq_file *, struct dentry *); ssize_t (*quota_read)(struct super_block *, int, char *, size_t, loff_t); ssize_t (*quota_write)(struct super_block *, int, const char *, size_t, loff_t); int (*bdev_try_to_free_page)(struct super_block*, struct page*, gfp_t); int (*nr_cached_objects)(struct super_block *); void (*free_cached_objects)(struct super_block *, int); };
	++ struct super_operations { struct inode *(*alloc_inode)(struct super_block *sb); void (*destroy_inode)(struct inode *); void (*dirty_inode) (struct inode *, int flags); int (*write_inode) (struct inode *, struct writeback_control *wbc); int (*drop_inode) (struct inode *); void (*evict_inode) (struct inode *); void (*put_super) (struct super_block *); int (*sync_fs)(struct super_block *sb, int wait); int (*freeze_fs) (struct super_block *); int (*unfreeze_fs) (struct super_block *); int (*statfs) (struct dentry *, struct kstatfs *); int (*remount_fs) (struct super_block *, int *, char *); void (*umount_begin) (struct super_block *); int (*show_options)(struct seq_file *, struct dentry *); int (*show_devname)(struct seq_file *, struct dentry *); int (*show_path)(struct seq_file *, struct dentry *); int (*show_stats)(struct seq_file *, struct dentry *); ssize_t (*quota_read)(struct super_block *, int, char *, size_t, loff_t); ssize_t (*quota_write)(struct super_block *, int, const char *, size_t, loff_t); int (*bdev_try_to_free_page)(struct super_block*, struct page*, gfp_t); int (*nr_cached_objects)(struct super_block *); void (*free_cached_objects)(struct super_block *, int); };


file_system_type 	( diff_type: Mod type: struct file: include/linux/fs.h )
	-- struct file_system_type { const char *name; int fs_flags; struct dentry *(*mount) (struct file_system_type *, int,const char *, void *); void (*kill_sb) (struct super_block *); struct module *owner; struct file_system_type * next; struct hlist_head fs_supers; struct lock_class_key s_lock_key; struct lock_class_key s_umount_key; struct lock_class_key s_vfs_rename_key; struct lock_class_key i_lock_key; struct lock_class_key i_mutex_key; struct lock_class_key i_mutex_dir_key; };
	++ struct file_system_type { const char *name; int fs_flags; #define FS_REQUIRES_DEV 1 #define FS_BINARY_MOUNTDATA 2 #define FS_HAS_SUBTYPE 4 #define FS_USERNS_MOUNT 8 #define FS_USERNS_DEV_MOUNT 16 #define FS_REVAL_DOT 16384 #define FS_RENAME_DOES_D_MOVE 32768 struct dentry *(*mount) (struct file_system_type *, int,const char *, void *); void (*kill_sb) (struct super_block *); struct module *owner; struct file_system_type * next; struct hlist_head fs_supers; struct lock_class_key s_lock_key; struct lock_class_key s_umount_key; struct lock_class_key s_vfs_rename_key; struct lock_class_key s_writers_key[SB_FREEZE_LEVELS]; struct lock_class_key i_lock_key; struct lock_class_key i_mutex_key; struct lock_class_key i_mutex_dir_key; };


sget 	( diff_type: Mod type: prototype file: include/linux/fs.h )
	-- struct super_block *sget(struct file_system_type *type,int (*test)(struct super_block *,void *),int (*set)(struct super_block *,void *),void *data);
	++ struct super_block *sget(struct file_system_type *type,int (*test)(struct super_block *,void *),int (*set)(struct super_block *,void *),int flags, void *data);


do_mount 	( diff_type: Mod type: prototype file: include/linux/fs.h )
	-- extern long do_mount(char *,char *,char *,unsigned long,void *);
	++ extern long do_mount(const char *,const char *,const char *,unsigned long,void *);


dentry_open 	( diff_type: Mod type: prototype file: include/linux/fs.h )
	-- extern struct file * dentry_open(struct dentry *,struct vfsmount *,int,const struct cred *);
	++ extern struct file * dentry_open(const struct path *,int,const struct cred *);


getname 	( diff_type: Mod type: prototype file: include/linux/fs.h )
	-- extern char * getname(const char __user *);
	++ extern struct filename *getname(const char __user *);


__getname_gfp 	( diff_type: Del type: macro file: include/linux/fs.h )
	-- #define __getname_gfp(gfp) kmem_cache_alloc(names_cachep,(gfp))


__getname 	( diff_type: Mod type: macro file: include/linux/fs.h )
	-- #define __getname() __getname_gfp(GFP_KERNEL)
	++ #define __getname() kmem_cache_alloc(names_cachep,GFP_KERNEL)


putname 	( diff_type: Mod type: prototype file: include/linux/fs.h )
	-- extern void putname(const char *name);
	++ extern void putname(struct filename *name);


blkdev_max_block 	( diff_type: Del type: prototype file: include/linux/fs.h )
	-- extern sector_t blkdev_max_block(struct block_device *bdev);


sync_supers 	( diff_type: Del type: prototype file: include/linux/fs.h )
	-- extern void sync_supers(void);


create_read_pipe 	( diff_type: Del type: prototype file: include/linux/fs.h )
	-- extern struct file *create_read_pipe(struct file *f,int flags);


create_write_pipe 	( diff_type: Del type: prototype file: include/linux/fs.h )
	-- extern struct file *create_write_pipe(int flags);


free_write_pipe 	( diff_type: Del type: prototype file: include/linux/fs.h )
	-- extern void free_write_pipe(struct file *);


default_llseek 	( diff_type: Mod type: prototype file: include/linux/fs.h )
	-- extern loff_t default_llseek(struct file *file,loff_t offset,int origin);
	++ extern loff_t default_llseek(struct file *file,loff_t offset,int whence);


vfs_llseek 	( diff_type: Mod type: prototype file: include/linux/fs.h )
	-- extern loff_t vfs_llseek(struct file *file,loff_t offset,int origin);
	++ extern loff_t vfs_llseek(struct file *file,loff_t offset,int whence);


noop_llseek 	( diff_type: Mod type: prototype file: include/linux/fs.h )
	-- extern loff_t noop_llseek(struct file *file,loff_t offset,int origin);
	++ extern loff_t noop_llseek(struct file *file,loff_t offset,int whence);


no_llseek 	( diff_type: Mod type: prototype file: include/linux/fs.h )
	-- extern loff_t no_llseek(struct file *file,loff_t offset,int origin);
	++ extern loff_t no_llseek(struct file *file,loff_t offset,int whence);


generic_file_llseek 	( diff_type: Mod type: prototype file: include/linux/fs.h )
	-- extern loff_t generic_file_llseek(struct file *file,loff_t offset,int origin);
	++ extern loff_t generic_file_llseek(struct file *file,loff_t offset,int whence);


generic_file_llseek_size 	( diff_type: Mod type: prototype file: include/linux/fs.h )
	-- extern loff_t generic_file_llseek_size(struct file *file,loff_t offset,int origin, loff_t maxsize);
	++ extern loff_t generic_file_llseek_size(struct file *file,loff_t offset,int whence, loff_t maxsize, loff_t eof);


simple_lookup 	( diff_type: Mod type: prototype file: include/linux/fs.h )
	-- extern struct dentry *simple_lookup(struct inode *,struct dentry *,struct nameidata *);
	++ extern struct dentry *simple_lookup(struct inode *,struct dentry *,unsigned int flags);


__HDLC_IOCTL_H__ 	( diff_type: Del type: macro file: include/linux/hdlc/ioctl.h )
	-- #define __HDLC_IOCTL_H__


GENERIC_HDLC_VERSION 	( diff_type: Del type: macro file: include/linux/hdlc/ioctl.h )
	-- #define GENERIC_HDLC_VERSION 4


CLOCK_DEFAULT 	( diff_type: Del type: macro file: include/linux/hdlc/ioctl.h )
	-- #define CLOCK_DEFAULT 0


CLOCK_EXT 	( diff_type: Del type: macro file: include/linux/hdlc/ioctl.h )
	-- #define CLOCK_EXT 1


CLOCK_INT 	( diff_type: Del type: macro file: include/linux/hdlc/ioctl.h )
	-- #define CLOCK_INT 2


CLOCK_TXINT 	( diff_type: Del type: macro file: include/linux/hdlc/ioctl.h )
	-- #define CLOCK_TXINT 3


CLOCK_TXFROMRX 	( diff_type: Del type: macro file: include/linux/hdlc/ioctl.h )
	-- #define CLOCK_TXFROMRX 4


ENCODING_DEFAULT 	( diff_type: Del type: macro file: include/linux/hdlc/ioctl.h )
	-- #define ENCODING_DEFAULT 0


ENCODING_NRZ 	( diff_type: Del type: macro file: include/linux/hdlc/ioctl.h )
	-- #define ENCODING_NRZ 1


ENCODING_NRZI 	( diff_type: Del type: macro file: include/linux/hdlc/ioctl.h )
	-- #define ENCODING_NRZI 2


ENCODING_FM_MARK 	( diff_type: Del type: macro file: include/linux/hdlc/ioctl.h )
	-- #define ENCODING_FM_MARK 3


ENCODING_FM_SPACE 	( diff_type: Del type: macro file: include/linux/hdlc/ioctl.h )
	-- #define ENCODING_FM_SPACE 4


ENCODING_MANCHESTER 	( diff_type: Del type: macro file: include/linux/hdlc/ioctl.h )
	-- #define ENCODING_MANCHESTER 5


PARITY_DEFAULT 	( diff_type: Del type: macro file: include/linux/hdlc/ioctl.h )
	-- #define PARITY_DEFAULT 0


PARITY_NONE 	( diff_type: Del type: macro file: include/linux/hdlc/ioctl.h )
	-- #define PARITY_NONE 1


PARITY_CRC16_PR0 	( diff_type: Del type: macro file: include/linux/hdlc/ioctl.h )
	-- #define PARITY_CRC16_PR0 2


PARITY_CRC16_PR1 	( diff_type: Del type: macro file: include/linux/hdlc/ioctl.h )
	-- #define PARITY_CRC16_PR1 3


PARITY_CRC16_PR0_CCITT 	( diff_type: Del type: macro file: include/linux/hdlc/ioctl.h )
	-- #define PARITY_CRC16_PR0_CCITT 4


PARITY_CRC16_PR1_CCITT 	( diff_type: Del type: macro file: include/linux/hdlc/ioctl.h )
	-- #define PARITY_CRC16_PR1_CCITT 5


PARITY_CRC32_PR0_CCITT 	( diff_type: Del type: macro file: include/linux/hdlc/ioctl.h )
	-- #define PARITY_CRC32_PR0_CCITT 6


PARITY_CRC32_PR1_CCITT 	( diff_type: Del type: macro file: include/linux/hdlc/ioctl.h )
	-- #define PARITY_CRC32_PR1_CCITT 7


LMI_DEFAULT 	( diff_type: Del type: macro file: include/linux/hdlc/ioctl.h )
	-- #define LMI_DEFAULT 0


LMI_NONE 	( diff_type: Del type: macro file: include/linux/hdlc/ioctl.h )
	-- #define LMI_NONE 1


LMI_ANSI 	( diff_type: Del type: macro file: include/linux/hdlc/ioctl.h )
	-- #define LMI_ANSI 2


LMI_CCITT 	( diff_type: Del type: macro file: include/linux/hdlc/ioctl.h )
	-- #define LMI_CCITT 3


LMI_CISCO 	( diff_type: Del type: macro file: include/linux/hdlc/ioctl.h )
	-- #define LMI_CISCO 4


sync_serial_settings 	( diff_type: Del type: struct file: include/linux/hdlc/ioctl.h )
	-- typedef struct { unsigned int clock_rate; unsigned int clock_type; unsigned short loopback; } sync_serial_settings;


te1_settings 	( diff_type: Del type: struct file: include/linux/hdlc/ioctl.h )
	-- typedef struct { unsigned int clock_rate; unsigned int clock_type; unsigned short loopback; unsigned int slot_map; } te1_settings;


raw_hdlc_proto 	( diff_type: Del type: struct file: include/linux/hdlc/ioctl.h )
	-- typedef struct { unsigned short encoding; unsigned short parity; } raw_hdlc_proto;


fr_proto 	( diff_type: Del type: struct file: include/linux/hdlc/ioctl.h )
	-- typedef struct { unsigned int t391; unsigned int t392; unsigned int n391; unsigned int n392; unsigned int n393; unsigned short lmi; unsigned short dce; } fr_proto;


fr_proto_pvc 	( diff_type: Del type: struct file: include/linux/hdlc/ioctl.h )
	-- typedef struct { unsigned int dlci; } fr_proto_pvc;


fr_proto_pvc_info 	( diff_type: Del type: struct file: include/linux/hdlc/ioctl.h )
	-- typedef struct { unsigned int dlci; char master[IFNAMSIZ]; }fr_proto_pvc_info;


cisco_proto 	( diff_type: Del type: struct file: include/linux/hdlc/ioctl.h )
	-- typedef struct { unsigned int interval; unsigned int timeout; } cisco_proto;


__LINUX_NETLINK_H 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define __LINUX_NETLINK_H


NETLINK_ROUTE 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_ROUTE 0


NETLINK_UNUSED 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_UNUSED 1


NETLINK_USERSOCK 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_USERSOCK 2


NETLINK_FIREWALL 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_FIREWALL 3


NETLINK_SOCK_DIAG 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_SOCK_DIAG 4


NETLINK_NFLOG 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_NFLOG 5


NETLINK_XFRM 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_XFRM 6


NETLINK_SELINUX 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_SELINUX 7


NETLINK_ISCSI 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_ISCSI 8


NETLINK_AUDIT 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_AUDIT 9


NETLINK_FIB_LOOKUP 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_FIB_LOOKUP 10


NETLINK_CONNECTOR 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_CONNECTOR 11


NETLINK_NETFILTER 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_NETFILTER 12


NETLINK_IP6_FW 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_IP6_FW 13


NETLINK_DNRTMSG 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_DNRTMSG 14


NETLINK_KOBJECT_UEVENT 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_KOBJECT_UEVENT 15


NETLINK_GENERIC 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_GENERIC 16


NETLINK_SCSITRANSPORT 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_SCSITRANSPORT 18


NETLINK_ECRYPTFS 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_ECRYPTFS 19


NETLINK_RDMA 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_RDMA 20


NETLINK_CRYPTO 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_CRYPTO 21


NETLINK_INET_DIAG 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_INET_DIAG NETLINK_SOCK_DIAG


MAX_LINKS 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define MAX_LINKS 32


sockaddr_nl 	( diff_type: Del type: struct file: include/linux/netlink.h )
	-- struct sockaddr_nl { __kernel_sa_family_t nl_family; unsigned short nl_pad; __u32 nl_pid; __u32 nl_groups; };


nlmsghdr 	( diff_type: Del type: struct file: include/linux/netlink.h )
	-- struct nlmsghdr { __u32 nlmsg_len; __u16 nlmsg_type; __u16 nlmsg_flags; __u32 nlmsg_seq; __u32 nlmsg_pid; };


NLM_F_REQUEST 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLM_F_REQUEST 1


NLM_F_MULTI 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLM_F_MULTI 2


NLM_F_ACK 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLM_F_ACK 4


NLM_F_ECHO 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLM_F_ECHO 8


NLM_F_DUMP_INTR 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLM_F_DUMP_INTR 16


NLM_F_ROOT 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLM_F_ROOT 0x100


NLM_F_MATCH 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLM_F_MATCH 0x200


NLM_F_ATOMIC 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLM_F_ATOMIC 0x400


NLM_F_DUMP 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLM_F_DUMP (NLM_F_ROOT|NLM_F_MATCH)


NLM_F_REPLACE 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLM_F_REPLACE 0x100


NLM_F_EXCL 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLM_F_EXCL 0x200


NLM_F_CREATE 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLM_F_CREATE 0x400


NLM_F_APPEND 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLM_F_APPEND 0x800


NLMSG_ALIGNTO 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLMSG_ALIGNTO 4U


NLMSG_ALIGN 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLMSG_ALIGN(len) ( ((len)+NLMSG_ALIGNTO-1) & ~(NLMSG_ALIGNTO-1) )


NLMSG_HDRLEN 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLMSG_HDRLEN ((int) NLMSG_ALIGN(sizeof(struct nlmsghdr)))


NLMSG_LENGTH 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLMSG_LENGTH(len) ((len)+NLMSG_ALIGN(NLMSG_HDRLEN))


NLMSG_SPACE 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLMSG_SPACE(len) NLMSG_ALIGN(NLMSG_LENGTH(len))


NLMSG_DATA 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLMSG_DATA(nlh) ((void*)(((char*)nlh) + NLMSG_LENGTH(0)))


NLMSG_NEXT 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLMSG_NEXT(nlh,len) ((len) -= NLMSG_ALIGN((nlh)->nlmsg_len), (struct nlmsghdr*)(((char*)(nlh)) + NLMSG_ALIGN((nlh)->nlmsg_len)))


NLMSG_OK 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLMSG_OK(nlh,len) ((len) >= (int)sizeof(struct nlmsghdr) && (nlh)->nlmsg_len >= sizeof(struct nlmsghdr) && (nlh)->nlmsg_len <= (len))


NLMSG_PAYLOAD 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLMSG_PAYLOAD(nlh,len) ((nlh)->nlmsg_len - NLMSG_SPACE((len)))


NLMSG_NOOP 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLMSG_NOOP 0x1


NLMSG_ERROR 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLMSG_ERROR 0x2


NLMSG_DONE 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLMSG_DONE 0x3


NLMSG_OVERRUN 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLMSG_OVERRUN 0x4


NLMSG_MIN_TYPE 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLMSG_MIN_TYPE 0x10


nlmsgerr 	( diff_type: Del type: struct file: include/linux/netlink.h )
	-- struct nlmsgerr { int error; struct nlmsghdr msg; };


NETLINK_ADD_MEMBERSHIP 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_ADD_MEMBERSHIP 1


NETLINK_DROP_MEMBERSHIP 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_DROP_MEMBERSHIP 2


NETLINK_PKTINFO 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_PKTINFO 3


NETLINK_BROADCAST_ERROR 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_BROADCAST_ERROR 4


NETLINK_NO_ENOBUFS 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_NO_ENOBUFS 5


nl_pktinfo 	( diff_type: Del type: struct file: include/linux/netlink.h )
	-- struct nl_pktinfo { __u32 group; };


NET_MAJOR 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NET_MAJOR 36


nlattr 	( diff_type: Del type: struct file: include/linux/netlink.h )
	-- struct nlattr { __u16 nla_len; __u16 nla_type; };


NLA_F_NESTED 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLA_F_NESTED (1 << 15)


NLA_F_NET_BYTEORDER 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLA_F_NET_BYTEORDER (1 << 14)


NLA_TYPE_MASK 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLA_TYPE_MASK ~(NLA_F_NESTED | NLA_F_NET_BYTEORDER)


NLA_ALIGNTO 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLA_ALIGNTO 4


NLA_ALIGN 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLA_ALIGN(len) (((len) + NLA_ALIGNTO - 1) & ~(NLA_ALIGNTO - 1))


NLA_HDRLEN 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLA_HDRLEN ((int) NLA_ALIGN(sizeof(struct nlattr)))


nlmsg_hdr 	( diff_type: Del type: function file: include/linux/netlink.h )
	-- static inline struct nlmsghdr *nlmsg_hdr(const struct sk_buff *skb)


netlink_skb_parms 	( diff_type: Del type: struct file: include/linux/netlink.h )
	-- struct netlink_skb_parms { struct ucred creds; __u32 pid; __u32 dst_group; };


NETLINK_CB 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_CB(skb) (*(struct netlink_skb_parms*)&((skb)->cb))


NETLINK_CREDS 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NETLINK_CREDS(skb) (&NETLINK_CB((skb)).creds)


netlink_table_grab 	( diff_type: Del type: prototype file: include/linux/netlink.h )
	-- extern void netlink_table_grab(void);


netlink_table_ungrab 	( diff_type: Del type: prototype file: include/linux/netlink.h )
	-- extern void netlink_table_ungrab(void);


netlink_kernel_create 	( diff_type: Del type: prototype file: include/linux/netlink.h )
	-- extern struct sock *netlink_kernel_create(struct net *net,int unit,unsigned int groups,void (*input)(struct sk_buff *skb),struct mutex *cb_mutex,struct module *module);


netlink_kernel_release 	( diff_type: Del type: prototype file: include/linux/netlink.h )
	-- extern void netlink_kernel_release(struct sock *sk);


__netlink_change_ngroups 	( diff_type: Del type: prototype file: include/linux/netlink.h )
	-- extern int __netlink_change_ngroups(struct sock *sk,unsigned int groups);


netlink_change_ngroups 	( diff_type: Del type: prototype file: include/linux/netlink.h )
	-- extern int netlink_change_ngroups(struct sock *sk,unsigned int groups);


__netlink_clear_multicast_users 	( diff_type: Del type: prototype file: include/linux/netlink.h )
	-- extern void __netlink_clear_multicast_users(struct sock *sk,unsigned int group);


netlink_clear_multicast_users 	( diff_type: Del type: prototype file: include/linux/netlink.h )
	-- extern void netlink_clear_multicast_users(struct sock *sk,unsigned int group);


netlink_ack 	( diff_type: Del type: prototype file: include/linux/netlink.h )
	-- extern void netlink_ack(struct sk_buff *in_skb,struct nlmsghdr *nlh,int err);


netlink_has_listeners 	( diff_type: Del type: prototype file: include/linux/netlink.h )
	-- extern int netlink_has_listeners(struct sock *sk,unsigned int group);


netlink_unicast 	( diff_type: Del type: prototype file: include/linux/netlink.h )
	-- extern int netlink_unicast(struct sock *ssk,struct sk_buff *skb,__u32 pid,int nonblock);


netlink_broadcast 	( diff_type: Del type: prototype file: include/linux/netlink.h )
	-- extern int netlink_broadcast(struct sock *ssk,struct sk_buff *skb,__u32 pid,__u32 group, gfp_t allocation);


netlink_broadcast_filtered 	( diff_type: Del type: prototype file: include/linux/netlink.h )
	-- extern int netlink_broadcast_filtered(struct sock *ssk,struct sk_buff *skb,__u32 pid, __u32 group, gfp_t allocation,int (*filter)(struct sock *dsk, struct sk_buff *skb, void *data),void *filter_data);


netlink_set_err 	( diff_type: Del type: prototype file: include/linux/netlink.h )
	-- extern int netlink_set_err(struct sock *ssk,__u32 pid,__u32 group,int code);


netlink_register_notifier 	( diff_type: Del type: prototype file: include/linux/netlink.h )
	-- extern int netlink_register_notifier(struct notifier_block *nb);


netlink_unregister_notifier 	( diff_type: Del type: prototype file: include/linux/netlink.h )
	-- extern int netlink_unregister_notifier(struct notifier_block *nb);


netlink_getsockbyfilp 	( diff_type: Del type: prototype file: include/linux/netlink.h )
	-- struct sock *netlink_getsockbyfilp(struct file *filp);


netlink_attachskb 	( diff_type: Del type: prototype file: include/linux/netlink.h )
	-- int netlink_attachskb(struct sock *sk,struct sk_buff *skb,long *timeo, struct sock *ssk);


netlink_detachskb 	( diff_type: Del type: prototype file: include/linux/netlink.h )
	-- void netlink_detachskb(struct sock *sk,struct sk_buff *skb);


netlink_sendskb 	( diff_type: Del type: prototype file: include/linux/netlink.h )
	-- int netlink_sendskb(struct sock *sk,struct sk_buff *skb);


NLMSG_GOODSIZE 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLMSG_GOODSIZE SKB_WITH_OVERHEAD(8192UL)


NLMSG_DEFAULT_SIZE 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLMSG_DEFAULT_SIZE (NLMSG_GOODSIZE - NLMSG_HDRLEN)


netlink_callback 	( diff_type: Del type: struct file: include/linux/netlink.h )
	-- struct netlink_callback { struct sk_buff *skb; const struct nlmsghdr *nlh; int (*dump)(struct sk_buff * skb,struct netlink_callback *cb); int (*done)(struct netlink_callback *cb); void *data; u16 family; u16 min_dump_alloc; unsigned int prev_seq, seq; long args[6]; };


netlink_notify 	( diff_type: Del type: struct file: include/linux/netlink.h )
	-- struct netlink_notify { struct net *net; int pid; int protocol; };


__nlmsg_put 	( diff_type: Del type: prototype file: include/linux/netlink.h )
	-- __nlmsg_put(struct sk_buff *skb,u32 pid,u32 seq,int type,int len,int flags);


NLMSG_NEW 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLMSG_NEW(skb,pid,seq,type,len,flags) ({ if (unlikely(skb_tailroom(skb) < (int)NLMSG_SPACE(len))) goto nlmsg_failure; __nlmsg_put(skb, pid, seq, type, len, flags); })


NLMSG_PUT 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NLMSG_PUT(skb,pid,seq,type,len) NLMSG_NEW(skb, pid, seq, type, len, 0)


netlink_dump_control 	( diff_type: Del type: struct file: include/linux/netlink.h )
	-- struct netlink_dump_control { int (*dump)(struct sk_buff *skb, struct netlink_callback *); int (*done)(struct netlink_callback*); void *data; u16 min_dump_alloc; };


netlink_dump_start 	( diff_type: Del type: prototype file: include/linux/netlink.h )
	-- extern int netlink_dump_start(struct sock *ssk,struct sk_buff *skb,const struct nlmsghdr *nlh,struct netlink_dump_control *control);


NL_NONROOT_RECV 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NL_NONROOT_RECV 0x1


NL_NONROOT_SEND 	( diff_type: Del type: macro file: include/linux/netlink.h )
	-- #define NL_NONROOT_SEND 0x2


netlink_set_nonroot 	( diff_type: Del type: prototype file: include/linux/netlink.h )
	-- extern void netlink_set_nonroot(int protocol,unsigned flag);


netns_packet 	( diff_type: Mod type: struct file: include/net/netns/packet.h )
	-- struct netns_packet { spinlock_t sklist_lock; struct hlist_head sklist; };
	++ struct netns_packet { struct mutex sklist_lock; struct hlist_head sklist; };


netns_ipv4 	( diff_type: Mod type: struct file: include/net/netns/ipv4.h )
	-- struct netns_ipv4 { struct ctl_table_header *forw_hdr; struct ctl_table_header *frags_hdr; struct ctl_table_header *ipv4_hdr; struct ctl_table_header *route_hdr; struct ipv4_devconf *devconf_all; struct ipv4_devconf *devconf_dflt; struct fib_rules_ops *rules_ops; struct hlist_head *fib_table_hash; struct sock *fibnl; struct sock **icmp_sk; struct sock *tcp_sock; struct netns_frags frags; struct xt_table *iptable_filter; struct xt_table *iptable_mangle; struct xt_table *iptable_raw; struct xt_table *arptable_filter; struct xt_table *iptable_security; struct xt_table *nat_table; struct hlist_head *nat_bysource; unsigned int nat_htable_size; int sysctl_icmp_echo_ignore_all; int sysctl_icmp_echo_ignore_broadcasts; int sysctl_icmp_ignore_bogus_error_responses; int sysctl_icmp_ratelimit; int sysctl_icmp_ratemask; int sysctl_icmp_errors_use_inbound_ifaddr; int sysctl_rt_cache_rebuild_count; int current_rt_cache_rebuild_count; unsigned int sysctl_ping_group_range[2]; long sysctl_tcp_mem[3]; atomic_t rt_genid; atomic_t dev_addr_genid; struct mr_table *mrt; struct list_head mr_tables; struct fib_rules_ops *mr_rules_ops; };
	++ struct netns_ipv4 { struct ctl_table_header *forw_hdr; struct ctl_table_header *frags_hdr; struct ctl_table_header *ipv4_hdr; struct ctl_table_header *route_hdr; struct ipv4_devconf *devconf_all; struct ipv4_devconf *devconf_dflt; struct fib_rules_ops *rules_ops; bool fib_has_custom_rules; struct fib_table *fib_local; struct fib_table *fib_main; struct fib_table *fib_default; int fib_num_tclassid_users; struct hlist_head *fib_table_hash; struct sock *fibnl; struct sock **icmp_sk; struct inet_peer_base *peers; struct tcpm_hash_bucket *tcp_metrics_hash; unsigned int tcp_metrics_hash_log; struct netns_frags frags; struct xt_table *iptable_filter; struct xt_table *iptable_mangle; struct xt_table *iptable_raw; struct xt_table *arptable_filter; struct xt_table *iptable_security; struct xt_table *nat_table; int sysctl_icmp_echo_ignore_all; int sysctl_icmp_echo_ignore_broadcasts; int sysctl_icmp_ignore_bogus_error_responses; int sysctl_icmp_ratelimit; int sysctl_icmp_ratemask; int sysctl_icmp_errors_use_inbound_ifaddr; kgid_t sysctl_ping_group_range[2]; long sysctl_tcp_mem[3]; atomic_t dev_addr_genid; struct mr_table *mrt; struct list_head mr_tables; struct fib_rules_ops *mr_rules_ops; };


netns_ipv6 	( diff_type: Mod type: struct file: include/net/netns/ipv6.h )
	-- struct netns_ipv6 { struct netns_sysctl_ipv6 sysctl; struct ipv6_devconf *devconf_all; struct ipv6_devconf *devconf_dflt; struct netns_frags frags; struct xt_table *ip6table_filter; struct xt_table *ip6table_mangle; struct xt_table *ip6table_raw; struct xt_table *ip6table_security; struct rt6_info *ip6_null_entry; struct rt6_statistics *rt6_stats; struct timer_list ip6_fib_timer; struct hlist_head *fib_table_hash; struct fib6_table *fib6_main_tbl; struct dst_ops ip6_dst_ops; unsigned int ip6_rt_gc_expire; unsigned long ip6_rt_last_gc; struct rt6_info *ip6_prohibit_entry; struct rt6_info *ip6_blk_hole_entry; struct fib6_table *fib6_local_tbl; struct fib_rules_ops *fib6_rules_ops; struct sock **icmp_sk; struct sock *ndisc_sk; struct sock *tcp_sk; struct sock *igmp_sk; struct mr6_table *mrt6; struct list_head mr6_tables; struct fib_rules_ops *mr6_rules_ops; };
	++ struct netns_ipv6 { struct netns_sysctl_ipv6 sysctl; struct ipv6_devconf *devconf_all; struct ipv6_devconf *devconf_dflt; struct inet_peer_base *peers; struct netns_frags frags; struct xt_table *ip6table_filter; struct xt_table *ip6table_mangle; struct xt_table *ip6table_raw; struct xt_table *ip6table_security; struct xt_table *ip6table_nat; struct rt6_info *ip6_null_entry; struct rt6_statistics *rt6_stats; struct timer_list ip6_fib_timer; struct hlist_head *fib_table_hash; struct fib6_table *fib6_main_tbl; struct dst_ops ip6_dst_ops; unsigned int ip6_rt_gc_expire; unsigned long ip6_rt_last_gc; struct rt6_info *ip6_prohibit_entry; struct rt6_info *ip6_blk_hole_entry; struct fib6_table *fib6_local_tbl; struct fib_rules_ops *fib6_rules_ops; struct sock **icmp_sk; struct sock *ndisc_sk; struct sock *tcp_sk; struct sock *igmp_sk; struct mr6_table *mrt6; struct list_head mr6_tables; struct fib_rules_ops *mr6_rules_ops; };


netns_xt 	( diff_type: Mod type: struct file: include/net/netns/x_tables.h )
	-- struct netns_xt { struct list_head tables[NFPROTO_NUMPROTO]; struct ebt_table *broute_table; struct ebt_table *frame_filter; struct ebt_table *frame_nat; };
	++ struct netns_xt { struct list_head tables[NFPROTO_NUMPROTO]; bool notrack_deprecated_warning; struct ebt_table *broute_table; struct ebt_table *frame_filter; struct ebt_table *frame_nat; };


netns_ct 	( diff_type: Mod type: struct file: include/net/netns/conntrack.h )
	-- struct netns_ct { atomic_t count; unsigned int expect_count; unsigned int htable_size; struct kmem_cache *nf_conntrack_cachep; struct hlist_nulls_head *hash; struct hlist_head *expect_hash; struct hlist_nulls_head unconfirmed; struct hlist_nulls_head dying; struct ip_conntrack_stat __percpu *stat; struct nf_ct_event_notifier __rcu *nf_conntrack_event_cb; struct nf_exp_event_notifier __rcu *nf_expect_event_cb; int sysctl_events; unsigned int sysctl_events_retry_timeout; int sysctl_acct; int sysctl_tstamp; int sysctl_checksum; unsigned int sysctl_log_invalid; int sysctl_auto_assign_helper; bool auto_assign_helper_warned; struct ctl_table_header *sysctl_header; struct ctl_table_header *acct_sysctl_header; struct ctl_table_header *tstamp_sysctl_header; struct ctl_table_header *event_sysctl_header; struct ctl_table_header *helper_sysctl_header; char *slabname; };
	++ struct netns_ct { atomic_t count; unsigned int expect_count; unsigned int htable_size; struct kmem_cache *nf_conntrack_cachep; struct hlist_nulls_head *hash; struct hlist_head *expect_hash; struct hlist_nulls_head unconfirmed; struct hlist_nulls_head dying; struct hlist_nulls_head tmpl; struct ip_conntrack_stat __percpu *stat; struct nf_ct_event_notifier __rcu *nf_conntrack_event_cb; struct nf_exp_event_notifier __rcu *nf_expect_event_cb; int sysctl_events; unsigned int sysctl_events_retry_timeout; int sysctl_acct; int sysctl_tstamp; int sysctl_checksum; unsigned int sysctl_log_invalid; int sysctl_auto_assign_helper; bool auto_assign_helper_warned; struct nf_ip_net nf_ct_proto; struct hlist_head *nat_bysource; unsigned int nat_htable_size; struct ctl_table_header *sysctl_header; struct ctl_table_header *acct_sysctl_header; struct ctl_table_header *tstamp_sysctl_header; struct ctl_table_header *event_sysctl_header; struct ctl_table_header *helper_sysctl_header; char *slabname; };


__LINUX_DCBNL_H__ 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define __LINUX_DCBNL_H__


IEEE_8021QAZ_MAX_TCS 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define IEEE_8021QAZ_MAX_TCS 8


IEEE_8021QAZ_TSA_STRICT 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define IEEE_8021QAZ_TSA_STRICT 0


IEEE_8021QAZ_TSA_CB_SHAPER 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define IEEE_8021QAZ_TSA_CB_SHAPER 1


IEEE_8021QAZ_TSA_ETS 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define IEEE_8021QAZ_TSA_ETS 2


IEEE_8021QAZ_TSA_VENDOR 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define IEEE_8021QAZ_TSA_VENDOR 255


ieee_ets 	( diff_type: Mov type: struct file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ struct ieee_ets { __u8 willing; __u8 ets_cap; __u8 cbs; __u8 tc_tx_bw[IEEE_8021QAZ_MAX_TCS]; __u8 tc_rx_bw[IEEE_8021QAZ_MAX_TCS]; __u8 tc_tsa[IEEE_8021QAZ_MAX_TCS]; __u8 prio_tc[IEEE_8021QAZ_MAX_TCS]; __u8 tc_reco_bw[IEEE_8021QAZ_MAX_TCS]; __u8 tc_reco_tsa[IEEE_8021QAZ_MAX_TCS]; __u8 reco_prio_tc[IEEE_8021QAZ_MAX_TCS]; };


ieee_maxrate 	( diff_type: Mov type: struct file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ struct ieee_maxrate { __u64 tc_maxrate[IEEE_8021QAZ_MAX_TCS]; };


ieee_pfc 	( diff_type: Mov type: struct file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ struct ieee_pfc { __u8 pfc_cap; __u8 pfc_en; __u8 mbc; __u16 delay; __u64 requests[IEEE_8021QAZ_MAX_TCS]; __u64 indications[IEEE_8021QAZ_MAX_TCS]; };


CEE_DCBX_MAX_PGS 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define CEE_DCBX_MAX_PGS 8


CEE_DCBX_MAX_PRIO 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define CEE_DCBX_MAX_PRIO 8


cee_pg 	( diff_type: Mov type: struct file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ struct cee_pg { __u8 willing; __u8 error; __u8 pg_en; __u8 tcs_supported; __u8 pg_bw[CEE_DCBX_MAX_PGS]; __u8 prio_pg[CEE_DCBX_MAX_PGS]; };


cee_pfc 	( diff_type: Mov type: struct file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ struct cee_pfc { __u8 willing; __u8 error; __u8 pfc_en; __u8 tcs_supported; };


IEEE_8021QAZ_APP_SEL_ETHERTYPE 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define IEEE_8021QAZ_APP_SEL_ETHERTYPE 1


IEEE_8021QAZ_APP_SEL_STREAM 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define IEEE_8021QAZ_APP_SEL_STREAM 2


IEEE_8021QAZ_APP_SEL_DGRAM 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define IEEE_8021QAZ_APP_SEL_DGRAM 3


IEEE_8021QAZ_APP_SEL_ANY 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define IEEE_8021QAZ_APP_SEL_ANY 4


dcb_app 	( diff_type: Mov type: struct file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ struct dcb_app { __u8 selector; __u8 priority; __u16 protocol; };


dcb_peer_app_info 	( diff_type: Mov type: struct file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ struct dcb_peer_app_info { __u8 willing; __u8 error; };


dcbmsg 	( diff_type: Mov type: struct file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ struct dcbmsg { __u8 dcb_family; __u8 cmd; __u16 dcb_pad; };


dcbnl_commands 	( diff_type: Mov type: enum file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ enum dcbnl_commands { DCB_CMD_UNDEFINED, DCB_CMD_GSTATE, DCB_CMD_SSTATE, DCB_CMD_PGTX_GCFG, DCB_CMD_PGTX_SCFG, DCB_CMD_PGRX_GCFG, DCB_CMD_PGRX_SCFG, DCB_CMD_PFC_GCFG, DCB_CMD_PFC_SCFG, DCB_CMD_SET_ALL, DCB_CMD_GPERM_HWADDR, DCB_CMD_GCAP, DCB_CMD_GNUMTCS, DCB_CMD_SNUMTCS, DCB_CMD_PFC_GSTATE, DCB_CMD_PFC_SSTATE, DCB_CMD_BCN_GCFG, DCB_CMD_BCN_SCFG, DCB_CMD_GAPP, DCB_CMD_SAPP, DCB_CMD_IEEE_SET, DCB_CMD_IEEE_GET, DCB_CMD_GDCBX, DCB_CMD_SDCBX, DCB_CMD_GFEATCFG, DCB_CMD_SFEATCFG, DCB_CMD_CEE_GET, DCB_CMD_IEEE_DEL, __DCB_CMD_ENUM_MAX, DCB_CMD_MAX = __DCB_CMD_ENUM_MAX - 1, };


dcbnl_attrs 	( diff_type: Mov type: enum file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ enum dcbnl_attrs { DCB_ATTR_UNDEFINED, DCB_ATTR_IFNAME, DCB_ATTR_STATE, DCB_ATTR_PFC_STATE, DCB_ATTR_PFC_CFG, DCB_ATTR_NUM_TC, DCB_ATTR_PG_CFG, DCB_ATTR_SET_ALL, DCB_ATTR_PERM_HWADDR, DCB_ATTR_CAP, DCB_ATTR_NUMTCS, DCB_ATTR_BCN, DCB_ATTR_APP, DCB_ATTR_IEEE, DCB_ATTR_DCBX, DCB_ATTR_FEATCFG, DCB_ATTR_CEE, __DCB_ATTR_ENUM_MAX, DCB_ATTR_MAX = __DCB_ATTR_ENUM_MAX - 1, };


ieee_attrs 	( diff_type: Mov type: enum file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ enum ieee_attrs { DCB_ATTR_IEEE_UNSPEC, DCB_ATTR_IEEE_ETS, DCB_ATTR_IEEE_PFC, DCB_ATTR_IEEE_APP_TABLE, DCB_ATTR_IEEE_PEER_ETS, DCB_ATTR_IEEE_PEER_PFC, DCB_ATTR_IEEE_PEER_APP, DCB_ATTR_IEEE_MAXRATE, __DCB_ATTR_IEEE_MAX };


DCB_ATTR_IEEE_MAX 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define DCB_ATTR_IEEE_MAX (__DCB_ATTR_IEEE_MAX - 1)


ieee_attrs_app 	( diff_type: Mov type: enum file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ enum ieee_attrs_app { DCB_ATTR_IEEE_APP_UNSPEC, DCB_ATTR_IEEE_APP, __DCB_ATTR_IEEE_APP_MAX };


DCB_ATTR_IEEE_APP_MAX 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define DCB_ATTR_IEEE_APP_MAX (__DCB_ATTR_IEEE_APP_MAX - 1)


cee_attrs 	( diff_type: Mov type: enum file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ enum cee_attrs { DCB_ATTR_CEE_UNSPEC, DCB_ATTR_CEE_PEER_PG, DCB_ATTR_CEE_PEER_PFC, DCB_ATTR_CEE_PEER_APP_TABLE, DCB_ATTR_CEE_TX_PG, DCB_ATTR_CEE_RX_PG, DCB_ATTR_CEE_PFC, DCB_ATTR_CEE_APP_TABLE, DCB_ATTR_CEE_FEAT, __DCB_ATTR_CEE_MAX };


DCB_ATTR_CEE_MAX 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define DCB_ATTR_CEE_MAX (__DCB_ATTR_CEE_MAX - 1)


peer_app_attr 	( diff_type: Mov type: enum file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ enum peer_app_attr { DCB_ATTR_CEE_PEER_APP_UNSPEC, DCB_ATTR_CEE_PEER_APP_INFO, DCB_ATTR_CEE_PEER_APP, __DCB_ATTR_CEE_PEER_APP_MAX };


DCB_ATTR_CEE_PEER_APP_MAX 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define DCB_ATTR_CEE_PEER_APP_MAX (__DCB_ATTR_CEE_PEER_APP_MAX - 1)


cee_attrs_app 	( diff_type: Mov type: enum file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ enum cee_attrs_app { DCB_ATTR_CEE_APP_UNSPEC, DCB_ATTR_CEE_APP, __DCB_ATTR_CEE_APP_MAX };


DCB_ATTR_CEE_APP_MAX 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define DCB_ATTR_CEE_APP_MAX (__DCB_ATTR_CEE_APP_MAX - 1)


dcbnl_pfc_up_attrs 	( diff_type: Mov type: enum file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ enum dcbnl_pfc_up_attrs { DCB_PFC_UP_ATTR_UNDEFINED, DCB_PFC_UP_ATTR_0, DCB_PFC_UP_ATTR_1, DCB_PFC_UP_ATTR_2, DCB_PFC_UP_ATTR_3, DCB_PFC_UP_ATTR_4, DCB_PFC_UP_ATTR_5, DCB_PFC_UP_ATTR_6, DCB_PFC_UP_ATTR_7, DCB_PFC_UP_ATTR_ALL, __DCB_PFC_UP_ATTR_ENUM_MAX, DCB_PFC_UP_ATTR_MAX = __DCB_PFC_UP_ATTR_ENUM_MAX - 1, };


dcbnl_pg_attrs 	( diff_type: Mov type: enum file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ enum dcbnl_pg_attrs { DCB_PG_ATTR_UNDEFINED, DCB_PG_ATTR_TC_0, DCB_PG_ATTR_TC_1, DCB_PG_ATTR_TC_2, DCB_PG_ATTR_TC_3, DCB_PG_ATTR_TC_4, DCB_PG_ATTR_TC_5, DCB_PG_ATTR_TC_6, DCB_PG_ATTR_TC_7, DCB_PG_ATTR_TC_MAX, DCB_PG_ATTR_TC_ALL, DCB_PG_ATTR_BW_ID_0, DCB_PG_ATTR_BW_ID_1, DCB_PG_ATTR_BW_ID_2, DCB_PG_ATTR_BW_ID_3, DCB_PG_ATTR_BW_ID_4, DCB_PG_ATTR_BW_ID_5, DCB_PG_ATTR_BW_ID_6, DCB_PG_ATTR_BW_ID_7, DCB_PG_ATTR_BW_ID_MAX, DCB_PG_ATTR_BW_ID_ALL, __DCB_PG_ATTR_ENUM_MAX, DCB_PG_ATTR_MAX = __DCB_PG_ATTR_ENUM_MAX - 1, };


dcbnl_tc_attrs 	( diff_type: Mov type: enum file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ enum dcbnl_tc_attrs { DCB_TC_ATTR_PARAM_UNDEFINED, DCB_TC_ATTR_PARAM_PGID, DCB_TC_ATTR_PARAM_UP_MAPPING, DCB_TC_ATTR_PARAM_STRICT_PRIO, DCB_TC_ATTR_PARAM_BW_PCT, DCB_TC_ATTR_PARAM_ALL, __DCB_TC_ATTR_PARAM_ENUM_MAX, DCB_TC_ATTR_PARAM_MAX = __DCB_TC_ATTR_PARAM_ENUM_MAX - 1, };


dcbnl_cap_attrs 	( diff_type: Mov type: enum file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ enum dcbnl_cap_attrs { DCB_CAP_ATTR_UNDEFINED, DCB_CAP_ATTR_ALL, DCB_CAP_ATTR_PG, DCB_CAP_ATTR_PFC, DCB_CAP_ATTR_UP2TC, DCB_CAP_ATTR_PG_TCS, DCB_CAP_ATTR_PFC_TCS, DCB_CAP_ATTR_GSP, DCB_CAP_ATTR_BCN, DCB_CAP_ATTR_DCBX, __DCB_CAP_ATTR_ENUM_MAX, DCB_CAP_ATTR_MAX = __DCB_CAP_ATTR_ENUM_MAX - 1, };


DCB_CAP_DCBX_HOST 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define DCB_CAP_DCBX_HOST 0x01


DCB_CAP_DCBX_LLD_MANAGED 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define DCB_CAP_DCBX_LLD_MANAGED 0x02


DCB_CAP_DCBX_VER_CEE 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define DCB_CAP_DCBX_VER_CEE 0x04


DCB_CAP_DCBX_VER_IEEE 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define DCB_CAP_DCBX_VER_IEEE 0x08


DCB_CAP_DCBX_STATIC 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define DCB_CAP_DCBX_STATIC 0x10


dcbnl_numtcs_attrs 	( diff_type: Mov type: enum file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ enum dcbnl_numtcs_attrs { DCB_NUMTCS_ATTR_UNDEFINED, DCB_NUMTCS_ATTR_ALL, DCB_NUMTCS_ATTR_PG, DCB_NUMTCS_ATTR_PFC, __DCB_NUMTCS_ATTR_ENUM_MAX, DCB_NUMTCS_ATTR_MAX = __DCB_NUMTCS_ATTR_ENUM_MAX - 1, };


dcbnl_bcn_attrs 	( diff_type: Mov type: enum file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ enum dcbnl_bcn_attrs{ DCB_BCN_ATTR_UNDEFINED = 0, DCB_BCN_ATTR_RP_0, DCB_BCN_ATTR_RP_1, DCB_BCN_ATTR_RP_2, DCB_BCN_ATTR_RP_3, DCB_BCN_ATTR_RP_4, DCB_BCN_ATTR_RP_5, DCB_BCN_ATTR_RP_6, DCB_BCN_ATTR_RP_7, DCB_BCN_ATTR_RP_ALL, DCB_BCN_ATTR_BCNA_0, DCB_BCN_ATTR_BCNA_1, DCB_BCN_ATTR_ALPHA, DCB_BCN_ATTR_BETA, DCB_BCN_ATTR_GD, DCB_BCN_ATTR_GI, DCB_BCN_ATTR_TMAX, DCB_BCN_ATTR_TD, DCB_BCN_ATTR_RMIN, DCB_BCN_ATTR_W, DCB_BCN_ATTR_RD, DCB_BCN_ATTR_RU, DCB_BCN_ATTR_WRTT, DCB_BCN_ATTR_RI, DCB_BCN_ATTR_C, DCB_BCN_ATTR_ALL, __DCB_BCN_ATTR_ENUM_MAX, DCB_BCN_ATTR_MAX = __DCB_BCN_ATTR_ENUM_MAX - 1, };


dcb_general_attr_values 	( diff_type: Mov type: enum file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ enum dcb_general_attr_values { DCB_ATTR_VALUE_UNDEFINED = 0xff };


DCB_APP_IDTYPE_ETHTYPE 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define DCB_APP_IDTYPE_ETHTYPE 0x00


DCB_APP_IDTYPE_PORTNUM 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define DCB_APP_IDTYPE_PORTNUM 0x01


dcbnl_app_attrs 	( diff_type: Mov type: enum file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ enum dcbnl_app_attrs { DCB_APP_ATTR_UNDEFINED, DCB_APP_ATTR_IDTYPE, DCB_APP_ATTR_ID, DCB_APP_ATTR_PRIORITY, __DCB_APP_ATTR_ENUM_MAX, DCB_APP_ATTR_MAX = __DCB_APP_ATTR_ENUM_MAX - 1, };


DCB_FEATCFG_ERROR 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define DCB_FEATCFG_ERROR 0x01


DCB_FEATCFG_ENABLE 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define DCB_FEATCFG_ENABLE 0x02


DCB_FEATCFG_WILLING 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define DCB_FEATCFG_WILLING 0x04


DCB_FEATCFG_ADVERTISE 	( diff_type: Mov type: macro file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ #define DCB_FEATCFG_ADVERTISE 0x08


dcbnl_featcfg_attrs 	( diff_type: Mov type: enum file: include/linux/dcbnl.h )
	-- include/uapi/linux/dcbnl.h
	++ enum dcbnl_featcfg_attrs { DCB_FEATCFG_ATTR_UNDEFINED, DCB_FEATCFG_ATTR_ALL, DCB_FEATCFG_ATTR_PG, DCB_FEATCFG_ATTR_PFC, DCB_FEATCFG_ATTR_APP, __DCB_FEATCFG_ATTR_ENUM_MAX, DCB_FEATCFG_ATTR_MAX = __DCB_FEATCFG_ATTR_ENUM_MAX - 1, };


cgroup_subsys_id 	( diff_type: Mod type: enum file: include/linux/cgroup.h )
	-- enum cgroup_subsys_id { CGROUP_BUILTIN_SUBSYS_COUNT };
	++ enum cgroup_subsys_id { CGROUP_SUBSYS_COUNT, };


CGROUP_SUBSYS_COUNT 	( diff_type: Del type: macro file: include/linux/cgroup.h )
	-- #define CGROUP_SUBSYS_COUNT (BITS_PER_BYTE*sizeof(unsigned long))


css_is_removed 	( diff_type: Del type: function file: include/linux/cgroup.h )
	-- static inline bool css_is_removed(struct cgroup_subsys_state *css)


cgroup 	( diff_type: Mod type: struct file: include/linux/cgroup.h )
	-- struct cgroup { unsigned long flags; atomic_t count; struct list_head sibling; struct list_head children; struct list_head files; struct cgroup *parent; struct dentry __rcu *dentry; struct cgroup_subsys_state *subsys[CGROUP_SUBSYS_COUNT]; struct cgroupfs_root *root; struct cgroup *top_cgroup; struct list_head css_sets; struct list_head allcg_node; struct list_head cft_q_node; struct list_head release_list; struct list_head pidlists; struct mutex pidlist_mutex; struct rcu_head rcu_head; struct list_head event_list; spinlock_t event_list_lock; };
	++ struct cgroup { unsigned long flags; atomic_t count; int id; struct list_head sibling; struct list_head children; struct list_head files; struct cgroup *parent; struct dentry *dentry; struct cgroup_subsys_state *subsys[CGROUP_SUBSYS_COUNT]; struct cgroupfs_root *root; struct cgroup *top_cgroup; struct list_head css_sets; struct list_head allcg_node; struct list_head cft_q_node; struct list_head release_list; struct list_head pidlists; struct mutex pidlist_mutex; struct rcu_head rcu_head; struct list_head event_list; spinlock_t event_list_lock; struct simple_xattrs xattrs; };


cftype_set 	( diff_type: Mod type: struct file: include/linux/cgroup.h )
	-- struct cftype_set { struct list_head node; const struct cftype *cfts; };
	++ struct cftype_set { struct list_head node; struct cftype *cfts; };


cgroup_add_cftypes 	( diff_type: Mod type: prototype file: include/linux/cgroup.h )
	-- int cgroup_add_cftypes(struct cgroup_subsys *ss,const struct cftype *cfts);
	++ int cgroup_add_cftypes(struct cgroup_subsys *ss,struct cftype *cfts);


cgroup_rm_cftypes 	( diff_type: Mod type: prototype file: include/linux/cgroup.h )
	-- int cgroup_rm_cftypes(struct cgroup_subsys *ss,const struct cftype *cfts);
	++ int cgroup_rm_cftypes(struct cgroup_subsys *ss,struct cftype *cfts);


cgroup_exclude_rmdir 	( diff_type: Del type: prototype file: include/linux/cgroup.h )
	-- void cgroup_exclude_rmdir(struct cgroup_subsys_state *css);


cgroup_release_and_wakeup_rmdir 	( diff_type: Del type: prototype file: include/linux/cgroup.h )
	-- void cgroup_release_and_wakeup_rmdir(struct cgroup_subsys_state *css);


cgroup_subsys 	( diff_type: Mod type: struct file: include/linux/cgroup.h )
	-- struct cgroup_subsys { struct cgroup_subsys_state *(*create)(struct cgroup *cgrp); int (*pre_destroy)(struct cgroup *cgrp); void (*destroy)(struct cgroup *cgrp); int (*can_attach)(struct cgroup *cgrp, struct cgroup_taskset *tset); void (*cancel_attach)(struct cgroup *cgrp, struct cgroup_taskset *tset); void (*attach)(struct cgroup *cgrp, struct cgroup_taskset *tset); void (*fork)(struct task_struct *task); void (*exit)(struct cgroup *cgrp, struct cgroup *old_cgrp,struct task_struct *task); void (*post_clone)(struct cgroup *cgrp); void (*bind)(struct cgroup *root); int subsys_id; int active; int disabled; int early_init; bool use_id; bool __DEPRECATED_clear_css_refs; #define MAX_CGROUP_TYPE_NAMELEN 32 const char *name; struct mutex hierarchy_mutex; struct lock_class_key subsys_key; struct cgroupfs_root *root; struct list_head sibling; struct idr idr; spinlock_t id_lock; struct list_head cftsets; struct cftype *base_cftypes; struct cftype_set base_cftset; struct module *module; };
	++ struct cgroup_subsys { struct cgroup_subsys_state *(*css_alloc)(struct cgroup *cgrp); int (*css_online)(struct cgroup *cgrp); void (*css_offline)(struct cgroup *cgrp); void (*css_free)(struct cgroup *cgrp); int (*can_attach)(struct cgroup *cgrp, struct cgroup_taskset *tset); void (*cancel_attach)(struct cgroup *cgrp, struct cgroup_taskset *tset); void (*attach)(struct cgroup *cgrp, struct cgroup_taskset *tset); void (*fork)(struct task_struct *task); void (*exit)(struct cgroup *cgrp, struct cgroup *old_cgrp,struct task_struct *task); void (*bind)(struct cgroup *root); int subsys_id; int active; int disabled; int early_init; bool use_id; bool broken_hierarchy; bool warned_broken_hierarchy; #define MAX_CGROUP_TYPE_NAMELEN 32 const char *name; struct cgroupfs_root *root; struct list_head sibling; struct idr idr; spinlock_t id_lock; struct list_head cftsets; struct cftype *base_cftypes; struct cftype_set base_cftset; struct module *module; };


static_branch 	( diff_type: Del type: function file: include/linux/jump_label.h )
	-- static __always_inline bool static_branch(struct static_key *key)


_LINUX_IOCTL_H 	( diff_type: Del type: macro file: include/linux/ioctl.h )
	-- #define _LINUX_IOCTL_H


_ASM_GENERIC_TYPES_H 	( diff_type: Del type: macro file: include/asm-generic/types.h )
	-- #define _ASM_GENERIC_TYPES_H


F_SETLEASE 	( diff_type: Del type: macro file: include/linux/fcntl.h )
	-- #define F_SETLEASE (F_LINUX_SPECIFIC_BASE + 0)


F_GETLEASE 	( diff_type: Del type: macro file: include/linux/fcntl.h )
	-- #define F_GETLEASE (F_LINUX_SPECIFIC_BASE + 1)


F_CANCELLK 	( diff_type: Del type: macro file: include/linux/fcntl.h )
	-- #define F_CANCELLK (F_LINUX_SPECIFIC_BASE + 5)


F_DUPFD_CLOEXEC 	( diff_type: Del type: macro file: include/linux/fcntl.h )
	-- #define F_DUPFD_CLOEXEC (F_LINUX_SPECIFIC_BASE + 6)


F_NOTIFY 	( diff_type: Del type: macro file: include/linux/fcntl.h )
	-- #define F_NOTIFY (F_LINUX_SPECIFIC_BASE+2)


F_SETPIPE_SZ 	( diff_type: Del type: macro file: include/linux/fcntl.h )
	-- #define F_SETPIPE_SZ (F_LINUX_SPECIFIC_BASE + 7)


F_GETPIPE_SZ 	( diff_type: Del type: macro file: include/linux/fcntl.h )
	-- #define F_GETPIPE_SZ (F_LINUX_SPECIFIC_BASE + 8)


DN_ACCESS 	( diff_type: Del type: macro file: include/linux/fcntl.h )
	-- #define DN_ACCESS 0x00000001


DN_MODIFY 	( diff_type: Del type: macro file: include/linux/fcntl.h )
	-- #define DN_MODIFY 0x00000002


DN_CREATE 	( diff_type: Del type: macro file: include/linux/fcntl.h )
	-- #define DN_CREATE 0x00000004


DN_DELETE 	( diff_type: Del type: macro file: include/linux/fcntl.h )
	-- #define DN_DELETE 0x00000008


DN_RENAME 	( diff_type: Del type: macro file: include/linux/fcntl.h )
	-- #define DN_RENAME 0x00000010


DN_ATTRIB 	( diff_type: Del type: macro file: include/linux/fcntl.h )
	-- #define DN_ATTRIB 0x00000020


DN_MULTISHOT 	( diff_type: Del type: macro file: include/linux/fcntl.h )
	-- #define DN_MULTISHOT 0x80000000


AT_FDCWD 	( diff_type: Del type: macro file: include/linux/fcntl.h )
	-- #define AT_FDCWD -100


AT_SYMLINK_NOFOLLOW 	( diff_type: Del type: macro file: include/linux/fcntl.h )
	-- #define AT_SYMLINK_NOFOLLOW 0x100


AT_REMOVEDIR 	( diff_type: Del type: macro file: include/linux/fcntl.h )
	-- #define AT_REMOVEDIR 0x200


AT_SYMLINK_FOLLOW 	( diff_type: Del type: macro file: include/linux/fcntl.h )
	-- #define AT_SYMLINK_FOLLOW 0x400


AT_NO_AUTOMOUNT 	( diff_type: Del type: macro file: include/linux/fcntl.h )
	-- #define AT_NO_AUTOMOUNT 0x800


AT_EMPTY_PATH 	( diff_type: Del type: macro file: include/linux/fcntl.h )
	-- #define AT_EMPTY_PATH 0x1000


dma_attr 	( diff_type: Mod type: enum file: include/linux/dma-attrs.h )
	-- enum dma_attr { DMA_ATTR_WRITE_BARRIER, DMA_ATTR_WEAK_ORDERING, DMA_ATTR_WRITE_COMBINE, DMA_ATTR_NON_CONSISTENT, DMA_ATTR_MAX, };
	++ enum dma_attr { DMA_ATTR_WRITE_BARRIER, DMA_ATTR_WEAK_ORDERING, DMA_ATTR_WRITE_COMBINE, DMA_ATTR_NON_CONSISTENT, DMA_ATTR_NO_KERNEL_MAPPING, DMA_ATTR_SKIP_CPU_SYNC, DMA_ATTR_FORCE_CONTIGUOUS, DMA_ATTR_MAX, };


dma_alloc_attrs 	( diff_type: All type: function file: arch/x86/include/asm/dma-mapping.h-->include/asm-generic/dma-mapping-broken.h )
	-- dma_alloc_attrs(struct device *dev,size_t size,dma_addr_t *dma_handle,gfp_t gfp, struct dma_attrs *attrs)
	++ static inline void *dma_alloc_attrs(struct device *dev,size_t size,dma_addr_t *dma_handle, gfp_t flag,struct dma_attrs *attrs)


dma_free_attrs 	( diff_type: All type: function file: arch/x86/include/asm/dma-mapping.h-->include/asm-generic/dma-mapping-broken.h )
	-- static inline void dma_free_attrs(struct device *dev,size_t size,void *vaddr, dma_addr_t bus,struct dma_attrs *attrs)
	++ static inline void dma_free_attrs(struct device *dev,size_t size,void *cpu_addr, dma_addr_t dma_handle,struct dma_attrs *attrs)


alternatives_smp_switch 	( diff_type: Del type: function file: arch/x86/include/asm/alternative.h )
	-- static inline void alternatives_smp_switch(int smp) {}


ALTERNATIVE 	( diff_type: Mod type: macro file: arch/x86/include/asm/alternative.h )
	-- #define ALTERNATIVE(oldinstr,newinstr,feature) "661:\n\t" oldinstr "\n662:\n" ".section .altinstructions,\"a\"\n" " .long 661b - .\n" /* label */ " .long 663f - .\n" /* new instruction */ " .word " __stringify(feature) "\n" /* feature bit */ " .byte 662b-661b\n" /* sourcelen */ " .byte 664f-663f\n" /* replacementlen */ ".previous\n" ".section .discard,\"aw\",@progbits\n" " .byte 0xff + (664f-663f) - (662b-661b)\n" /* rlen <= slen */ ".previous\n" ".section .altinstr_replacement, \"ax\"\n" "663:\n\t" newinstr "\n664:\n" /* replacement */ ".previous"
	++ #define ALTERNATIVE(oldinstr,newinstr,feature) OLDINSTR(oldinstr) ".pushsection .altinstructions,\"a\"\n" ALTINSTR_ENTRY(feature, 1) ".popsection\n" ".pushsection .discard,\"aw\",@progbits\n" DISCARD_ENTRY(1) ".popsection\n" ".pushsection .altinstr_replacement, \"ax\"\n" ALTINSTR_REPLACEMENT(newinstr, feature, 1) ".popsection"


vm_struct 	( diff_type: Mod type: struct file: include/linux/vmalloc.h )
	-- struct vm_struct { struct vm_struct *next; void *addr; unsigned long size; unsigned long flags; struct page **pages; unsigned int nr_pages; phys_addr_t phys_addr; void *caller; };
	++ struct vm_struct { struct vm_struct *next; void *addr; unsigned long size; unsigned long flags; struct page **pages; unsigned int nr_pages; phys_addr_t phys_addr; const void *caller; };


__vmalloc_node_range 	( diff_type: Mod type: prototype file: include/linux/vmalloc.h )
	-- extern void *__vmalloc_node_range(unsigned long size,unsigned long align,unsigned long start, unsigned long end, gfp_t gfp_mask,pgprot_t prot, int node, void *caller);
	++ extern void *__vmalloc_node_range(unsigned long size,unsigned long align,unsigned long start, unsigned long end, gfp_t gfp_mask,pgprot_t prot, int node, const void *caller);


get_vm_area_caller 	( diff_type: Mod type: prototype file: include/linux/vmalloc.h )
	-- extern struct vm_struct *get_vm_area_caller(unsigned long size,unsigned long flags, void *caller);
	++ extern struct vm_struct *get_vm_area_caller(unsigned long size,unsigned long flags, const void *caller);


__get_vm_area_caller 	( diff_type: Mod type: prototype file: include/linux/vmalloc.h )
	-- extern struct vm_struct *__get_vm_area_caller(unsigned long size,unsigned long flags,unsigned long start, unsigned long end,void *caller);
	++ extern struct vm_struct *__get_vm_area_caller(unsigned long size,unsigned long flags,unsigned long start, unsigned long end,const void *caller);


clear_user 	( diff_type: All type: prototype file: arch/x86/include/asm/uaccess_64.h-->arch/x86/include/asm/uaccess.h )
	-- __must_check unsigned long clear_user(void __user *mem,unsigned long len);
	++ unsigned long __must_check clear_user(void __user *mem,unsigned long len);


__clear_user 	( diff_type: All type: prototype file: arch/x86/include/asm/uaccess_64.h-->arch/x86/include/asm/uaccess.h )
	-- __must_check unsigned long __clear_user(void __user *mem,unsigned long len);
	++ unsigned long __must_check __clear_user(void __user *mem,unsigned long len);


MODULE_SIG_STRING 	( diff_type: Add type: macro file: include/linux/module.h )
	-- 25
	++ #define MODULE_SIG_STRING "~Module signature appended~\n"


SYMBOL_PREFIX 	( diff_type: Add type: macro file: include/linux/kernel.h )
	-- 726
	++ #define SYMBOL_PREFIX ""


task_migration_notifier 	( diff_type: Add type: struct file: include/linux/sched.h )
	-- 111
	++ struct task_migration_notifier { struct task_struct *task; int from_cpu; int to_cpu; };


register_task_migration_notifier 	( diff_type: Add type: prototype file: include/linux/sched.h )
	-- 116
	++ extern void register_task_migration_notifier(struct notifier_block *n);


dump_cpu_task 	( diff_type: Add type: prototype file: include/linux/sched.h )
	-- 120
	++ extern void dump_cpu_task(int cpu);


TASK_PARKED 	( diff_type: Add type: macro file: include/linux/sched.h )
	-- 166
	++ #define TASK_PARKED 512


nohz_balance_enter_idle 	( diff_type: Add type: function file: include/linux/sched.h )
	-- 251
	++ static inline void nohz_balance_enter_idle(int cpu) { }


SUID_DUMPABLE_DISABLED 	( diff_type: Add type: macro file: include/linux/sched.h )
	-- 381
	++ #define SUID_DUMPABLE_DISABLED 0


SUID_DUMPABLE_ENABLED 	( diff_type: Add type: macro file: include/linux/sched.h )
	-- 382
	++ #define SUID_DUMPABLE_ENABLED 1


SUID_DUMPABLE_SAFE 	( diff_type: Add type: macro file: include/linux/sched.h )
	-- 383
	++ #define SUID_DUMPABLE_SAFE 2


MMF_HAS_UPROBES 	( diff_type: Add type: macro file: include/linux/sched.h )
	-- 420
	++ #define MMF_HAS_UPROBES 19


MMF_RECALC_UPROBES 	( diff_type: Add type: macro file: include/linux/sched.h )
	-- 421
	++ #define MMF_RECALC_UPROBES 20


cputime 	( diff_type: Add type: struct file: include/linux/sched.h )
	-- 454
	++ struct cputime { cputime_t utime; cputime_t stime; };


sched_avg 	( diff_type: Add type: struct file: include/linux/sched.h )
	-- 1126
	++ struct sched_avg { u32 runnable_avg_sum, runnable_avg_period; u64 last_runnable_update; s64 decay_count; unsigned long load_avg_contrib; };


task_numa_fault 	( diff_type: Add type: function file: include/linux/sched.h )
	-- 1618
	++ static inline void task_numa_fault(int node,int pages,bool migrated)


set_numabalancing_state 	( diff_type: Add type: function file: include/linux/sched.h )
	-- 1621
	++ static inline void set_numabalancing_state(bool enabled)


task_cputime_adjusted 	( diff_type: Add type: prototype file: include/linux/sched.h )
	-- 1796
	++ extern void task_cputime_adjusted(struct task_struct *p,cputime_t *ut,cputime_t *st);


thread_group_cputime_adjusted 	( diff_type: Add type: prototype file: include/linux/sched.h )
	-- 1797
	++ extern void thread_group_cputime_adjusted(struct task_struct *p,cputime_t *ut,cputime_t *st);


PF_USED_ASYNC 	( diff_type: Add type: macro file: include/linux/sched.h )
	-- 1814
	++ #define PF_USED_ASYNC 0x00004000


tsk_restore_flags 	( diff_type: Add type: function file: include/linux/sched.h )
	-- 1912
	++ static inline void tsk_restore_flags(struct task_struct *task,unsigned long orig_flags, unsigned long flags)


signal_wake_up_state 	( diff_type: Add type: prototype file: include/linux/sched.h )
	-- 2708
	++ extern void signal_wake_up_state(struct task_struct *t,unsigned int state);


ptrace_signal_wake_up 	( diff_type: Add type: function file: include/linux/sched.h )
	-- 2714
	++ static inline void ptrace_signal_wake_up(struct task_struct *t,bool resume)


memweight 	( diff_type: Add type: prototype file: include/linux/string.h )
	-- 144
	++ extern size_t memweight(const void *ptr,size_t bytes);


kbasename 	( diff_type: Add type: function file: include/linux/string.h )
	-- 151
	++ static inline const char *kbasename(const char *path)


IORESOURCE_REG 	( diff_type: Add type: macro file: include/linux/ioport.h )
	-- 34
	++ #define IORESOURCE_REG 0x00000300


kmem_cache_create_memcg 	( diff_type: Add type: prototype file: include/linux/slab.h )
	-- 132
	++ kmem_cache_create_memcg(struct mem_cgroup *,const char *,size_t,size_t,unsigned long, void (*)(void *), struct kmem_cache *);


memcg_cache_params 	( diff_type: Add type: struct file: include/linux/slab.h )
	-- 206
	++ struct memcg_cache_params { bool is_root_cache; union { struct kmem_cache *memcg_caches[0]; struct { struct mem_cgroup *memcg; struct list_head list; struct kmem_cache *root_cache; bool dead; atomic_t nr_pages; struct work_struct destroy; };


memcg_update_all_caches 	( diff_type: Add type: prototype file: include/linux/slab.h )
	-- 221
	++ int memcg_update_all_caches(int num_memcgs);


cache_show 	( diff_type: Add type: prototype file: include/linux/slab.h )
	-- 224
	++ int cache_show(struct kmem_cache *s,struct seq_file *m);


print_slabinfo_header 	( diff_type: Add type: prototype file: include/linux/slab.h )
	-- 225
	++ void print_slabinfo_header(struct seq_file *m);


SOFTIRQ_STOP_IDLE_MASK 	( diff_type: Add type: macro file: include/linux/interrupt.h )
	-- 428
	++ #define SOFTIRQ_STOP_IDLE_MASK (~(1 << RCU_SOFTIRQ))


PCI_PM_D3COLD_WAIT 	( diff_type: Add type: macro file: include/linux/pci.h )
	-- 115
	++ #define PCI_PM_D3COLD_WAIT 100


pcibios_err_to_errno 	( diff_type: Add type: function file: include/linux/pci.h )
	-- 470
	++ static inline int pcibios_err_to_errno(int err)


PCI_DEVICE_SUB 	( diff_type: Add type: macro file: include/linux/pci.h )
	-- 622
	++ #define PCI_DEVICE_SUB(vend,dev,subvend,subdev) .vendor = (vend), .device = (dev), .subvendor = (subvend), .subdevice = (subdev)


pci_bus_insert_busn_res 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 706
	++ int pci_bus_insert_busn_res(struct pci_bus *b,int bus,int busmax);


pci_bus_update_busn_res_end 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 707
	++ int pci_bus_update_busn_res_end(struct pci_bus *b,int busmax);


pci_bus_release_busn_res 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 708
	++ void pci_bus_release_busn_res(struct pci_bus *b);


pci_stop_root_bus 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 735
	++ void pci_stop_root_bus(struct pci_bus *bus);


pci_remove_root_bus 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 736
	++ void pci_remove_root_bus(struct pci_bus *bus);


pci_find_next_ext_capability 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 755
	++ int pci_find_next_ext_capability(struct pci_dev *dev,int pos,int cap);


pcie_capability_read_word 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 817
	++ int pcie_capability_read_word(struct pci_dev *dev,int pos,u16 *val);


pcie_capability_read_dword 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 818
	++ int pcie_capability_read_dword(struct pci_dev *dev,int pos,u32 *val);


pcie_capability_write_word 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 819
	++ int pcie_capability_write_word(struct pci_dev *dev,int pos,u16 val);


pcie_capability_write_dword 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 820
	++ int pcie_capability_write_dword(struct pci_dev *dev,int pos,u32 val);


pcie_capability_clear_and_set_word 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 821
	++ int pcie_capability_clear_and_set_word(struct pci_dev *dev,int pos,u16 clear, u16 set);


pcie_capability_clear_and_set_dword 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 823
	++ int pcie_capability_clear_and_set_dword(struct pci_dev *dev,int pos,u32 clear, u32 set);


pcie_capability_set_word 	( diff_type: Add type: function file: include/linux/pci.h )
	-- 826
	++ static inline int pcie_capability_set_word(struct pci_dev *dev,int pos,u16 set)


pcie_capability_set_dword 	( diff_type: Add type: function file: include/linux/pci.h )
	-- 832
	++ static inline int pcie_capability_set_dword(struct pci_dev *dev,int pos,u32 set)


pcie_capability_clear_word 	( diff_type: Add type: function file: include/linux/pci.h )
	-- 838
	++ static inline int pcie_capability_clear_word(struct pci_dev *dev,int pos,u16 clear)


pcie_capability_clear_dword 	( diff_type: Add type: function file: include/linux/pci.h )
	-- 844
	++ static inline int pcie_capability_clear_dword(struct pci_dev *dev,int pos,u32 clear)


pci_user_read_config_byte 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 851
	++ int pci_user_read_config_byte(struct pci_dev *dev,int where,u8 *val);


pci_user_read_config_word 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 852
	++ int pci_user_read_config_word(struct pci_dev *dev,int where,u16 *val);


pci_user_read_config_dword 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 853
	++ int pci_user_read_config_dword(struct pci_dev *dev,int where,u32 *val);


pci_user_write_config_byte 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 854
	++ int pci_user_write_config_byte(struct pci_dev *dev,int where,u8 val);


pci_user_write_config_word 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 855
	++ int pci_user_write_config_word(struct pci_dev *dev,int where,u16 val);


pci_user_write_config_dword 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 856
	++ int pci_user_write_config_dword(struct pci_dev *dev,int where,u32 val);


pci_assign_unassigned_bus_resources 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 981
	++ void pci_assign_unassigned_bus_resources(struct pci_bus *bus);


pcibios_window_alignment 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 1063
	++ resource_size_t pcibios_window_alignment(struct pci_bus *bus,unsigned long type);


pci_get_dma_source 	( diff_type: Add type: function file: include/linux/pci.h )
	-- 1574
	++ static inline struct pci_dev *pci_get_dma_source(struct pci_dev *dev)


pci_dev_specific_acs_enabled 	( diff_type: Add type: function file: include/linux/pci.h )
	-- 1578
	++ static inline int pci_dev_specific_acs_enabled(struct pci_dev *dev,u16 acs_flags)


pcibios_add_device 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 1616
	++ int pcibios_add_device(struct pci_dev *dev);


pci_sriov_set_totalvfs 	( diff_type: Add type: function file: include/linux/pci.h )
	-- 1653
	++ static inline int pci_sriov_set_totalvfs(struct pci_dev *dev,u16 numvfs)


pci_sriov_get_totalvfs 	( diff_type: Add type: function file: include/linux/pci.h )
	-- 1657
	++ static inline int pci_sriov_get_totalvfs(struct pci_dev *dev)


pci_pcie_type 	( diff_type: Add type: function file: include/linux/pci.h )
	-- 1699
	++ static inline int pci_pcie_type(const struct pci_dev *dev)


pci_acs_enabled 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 1705
	++ bool pci_acs_enabled(struct pci_dev *pdev,u16 acs_flags);


pci_acs_path_enabled 	( diff_type: Add type: prototype file: include/linux/pci.h )
	-- 1706
	++ bool pci_acs_path_enabled(struct pci_dev *start,struct pci_dev *end, u16 acs_flags);


__constsection 	( diff_type: Add type: macro file: include/linux/init.h )
	-- 58
	++ #define __constsection(x) __section(x)


netdev_set_default_ethtool_ops 	( diff_type: Add type: prototype file: include/linux/netdevice.h )
	-- 63
	++ extern void netdev_set_default_ethtool_ops(struct net_device *dev,const struct ethtool_ops *ops);


netdev_pick_tx 	( diff_type: Add type: prototype file: include/linux/netdevice.h )
	-- 1397
	++ extern struct netdev_queue *netdev_pick_tx(struct net_device *dev,struct sk_buff *skb);


offload_callbacks 	( diff_type: Add type: struct file: include/linux/netdevice.h )
	-- 1530
	++ struct offload_callbacks { struct sk_buff *(*gso_segment)(struct sk_buff *skb,netdev_features_t features); int (*gso_send_check)(struct sk_buff *skb); struct sk_buff **(*gro_receive)(struct sk_buff **head,struct sk_buff *skb); int (*gro_complete)(struct sk_buff *skb); };


packet_offload 	( diff_type: Add type: struct file: include/linux/netdevice.h )
	-- 1539
	++ struct packet_offload { __be16 type; struct offload_callbacks callbacks; struct list_head list; };


NETDEV_UNREGISTER_FINAL 	( diff_type: Add type: macro file: include/linux/netdevice.h )
	-- 1570
	++ #define NETDEV_UNREGISTER_FINAL 0x0011


dev_add_offload 	( diff_type: Add type: prototype file: include/linux/netdevice.h )
	-- 1641
	++ extern void dev_add_offload(struct packet_offload *po);


dev_remove_offload 	( diff_type: Add type: prototype file: include/linux/netdevice.h )
	-- 1642
	++ extern void dev_remove_offload(struct packet_offload *po);


__dev_remove_offload 	( diff_type: Add type: prototype file: include/linux/netdevice.h )
	-- 1643
	++ extern void __dev_remove_offload(struct packet_offload *po);


dev_loopback_xmit 	( diff_type: Add type: prototype file: include/linux/netdevice.h )
	-- 1654
	++ extern int dev_loopback_xmit(struct sk_buff *newskb);


DEFAULT_MAX_NUM_RSS_QUEUES 	( diff_type: Add type: macro file: include/linux/netdevice.h )
	-- 2150
	++ #define DEFAULT_MAX_NUM_RSS_QUEUES (8)


netif_get_num_default_rss_queues 	( diff_type: Add type: prototype file: include/linux/netdevice.h )
	-- 2151
	++ extern int netif_get_num_default_rss_queues(void);


linkwatch_init_dev 	( diff_type: Add type: prototype file: include/linux/netdevice.h )
	-- 2242
	++ extern void linkwatch_init_dev(struct net_device *dev);


netdev_notify_peers 	( diff_type: Add type: prototype file: include/linux/netdevice.h )
	-- 2613
	++ extern void netdev_notify_peers(struct net_device *dev);


is_link_local_ether_addr 	( diff_type: Add type: function file: include/linux/etherdevice.h )
	-- 65
	++ static inline bool is_link_local_ether_addr(const u8 *addr)


eth_random_addr 	( diff_type: Add type: function file: include/linux/etherdevice.h )
	-- 153
	++ static inline void eth_random_addr(u8 *addr)


eth_broadcast_addr 	( diff_type: Add type: function file: include/linux/etherdevice.h )
	-- 168
	++ static inline void eth_broadcast_addr(u8 *addr)


eth_zero_addr 	( diff_type: Add type: function file: include/linux/etherdevice.h )
	-- 179
	++ static inline void eth_zero_addr(u8 *addr)


SKB_ALLOC_FCLONE 	( diff_type: Add type: macro file: include/linux/skbuff.h )
	-- 518
	++ #define SKB_ALLOC_FCLONE 0x01


SKB_ALLOC_RX 	( diff_type: Add type: macro file: include/linux/skbuff.h )
	-- 519
	++ #define SKB_ALLOC_RX 0x02


skb_pfmemalloc 	( diff_type: Add type: function file: include/linux/skbuff.h )
	-- 522
	++ static inline bool skb_pfmemalloc(const struct sk_buff *skb)


skb_tx_error 	( diff_type: Add type: prototype file: include/linux/skbuff.h )
	-- 581
	++ extern void skb_tx_error(struct sk_buff *skb);


skb_reset_inner_headers 	( diff_type: Add type: function file: include/linux/skbuff.h )
	-- 1453
	++ static inline void skb_reset_inner_headers(struct sk_buff *skb)


skb_inner_transport_header 	( diff_type: Add type: function file: include/linux/skbuff.h )
	-- 1555
	++ static inline unsigned char *skb_inner_transport_header(const struct sk_buff


skb_reset_inner_transport_header 	( diff_type: Add type: function file: include/linux/skbuff.h )
	-- 1561
	++ static inline void skb_reset_inner_transport_header(struct sk_buff *skb)


skb_set_inner_transport_header 	( diff_type: Add type: function file: include/linux/skbuff.h )
	-- 1566
	++ static inline void skb_set_inner_transport_header(struct sk_buff *skb,const int offset)


skb_inner_network_header 	( diff_type: Add type: function file: include/linux/skbuff.h )
	-- 1572
	++ static inline unsigned char *skb_inner_network_header(const struct sk_buff *skb)


skb_reset_inner_network_header 	( diff_type: Add type: function file: include/linux/skbuff.h )
	-- 1577
	++ static inline void skb_reset_inner_network_header(struct sk_buff *skb)


skb_set_inner_network_header 	( diff_type: Add type: function file: include/linux/skbuff.h )
	-- 1582
	++ static inline void skb_set_inner_network_header(struct sk_buff *skb,const int offset)


skb_inner_network_header_len 	( diff_type: Add type: function file: include/linux/skbuff.h )
	-- 1665
	++ static inline u32 skb_inner_network_header_len(const struct sk_buff *skb)


skb_inner_network_offset 	( diff_type: Add type: function file: include/linux/skbuff.h )
	-- 1675
	++ static inline int skb_inner_network_offset(const struct sk_buff *skb)


skb_orphan_frags 	( diff_type: Add type: function file: include/linux/skbuff.h )
	-- 1800
	++ static inline int skb_orphan_frags(struct sk_buff *skb,gfp_t gfp_mask)


__skb_alloc_pages 	( diff_type: Add type: function file: include/linux/skbuff.h )
	-- 1888
	++ static inline struct page *__skb_alloc_pages(gfp_t gfp_mask,struct sk_buff *skb,unsigned int order)


__skb_alloc_page 	( diff_type: Add type: function file: include/linux/skbuff.h )
	-- 1915
	++ static inline struct page *__skb_alloc_page(gfp_t gfp_mask,struct sk_buff *skb)


skb_propagate_pfmemalloc 	( diff_type: Add type: function file: include/linux/skbuff.h )
	-- 1926
	++ static inline void skb_propagate_pfmemalloc(struct page *page,struct sk_buff *skb)


nf_reset_trace 	( diff_type: Add type: function file: include/linux/skbuff.h )
	-- 2600
	++ static inline void nf_reset_trace(struct sk_buff *skb)


arch_has_dev_port 	( diff_type: Add type: macro file: include/linux/io.h )
	-- 76
	++ #define arch_has_dev_port() (1)


__must_hold 	( diff_type: Add type: macro file: include/linux/compiler.h )
	-- 37
	++ # define __must_hold(x)


___PASTE 	( diff_type: Add type: macro file: include/linux/compiler.h )
	-- 48
	++ #define ___PASTE(a,b) a##b


__PASTE 	( diff_type: Add type: macro file: include/linux/compiler.h )
	-- 49
	++ #define __PASTE(a,b) ___PASTE(a,b)


__UNIQUE_ID 	( diff_type: Add type: macro file: include/linux/compiler.h )
	-- 175
	++ # define __UNIQUE_ID(prefix) __PASTE(__PASTE(__UNIQUE_ID_,prefix),__LINE__)


__visible 	( diff_type: Add type: macro file: include/linux/compiler.h )
	-- 293
	++ #define __visible


__DECLARE_TRACE_RCU 	( diff_type: Add type: macro file: include/linux/tracepoint.h )
	-- 152
	++ #define __DECLARE_TRACE_RCU(name,proto,args,cond,data_proto,data_args)


__EXPORTED_HEADERS__ 	( diff_type: Add type: macro file: include/linux/types.h )
	-- 4
	++ #define __EXPORTED_HEADERS__


callback_head 	( diff_type: Add type: struct file: include/linux/types.h )
	-- 209
	++ struct callback_head { struct callback_head *next; void (*func)(struct callback_head *head); };


printk_get_level 	( diff_type: Add type: function file: include/linux/printk.h )
	-- 10
	++ static inline int printk_get_level(const char *buffer)


printk_skip_level 	( diff_type: Add type: function file: include/linux/printk.h )
	-- 22
	++ static inline const char *printk_skip_level(const char *buffer)


_UAPI_LINUX_KERNEL_H 	( diff_type: Add type: macro file: include/uapi/linux/kernel.h )
	-- 2
	++ #define _UAPI_LINUX_KERNEL_H


_UAPI_LINUX_SCHED_H 	( diff_type: Add type: macro file: include/uapi/linux/sched.h )
	-- 2
	++ #define _UAPI_LINUX_SCHED_H


file_ns_capable 	( diff_type: Add type: prototype file: include/linux/capability.h )
	-- 215
	++ extern bool file_ns_capable(const struct file *file,struct user_namespace *ns,int cap);


register_refined_jiffies 	( diff_type: Add type: prototype file: include/linux/jiffies.h )
	-- 57
	++ extern int register_refined_jiffies(long clock_tick_rate);


jiffies_delta_to_clock_t 	( diff_type: Add type: function file: include/linux/jiffies.h )
	-- 304
	++ static inline clock_t jiffies_delta_to_clock_t(long delta)


THREADINFO_GFP_ACCOUNTED 	( diff_type: Add type: macro file: include/linux/thread_info.h )
	-- 64
	++ #define THREADINFO_GFP_ACCOUNTED (THREADINFO_GFP | __GFP_KMEMCG)


NUMA_PTE_SCAN_INIT 	( diff_type: Add type: macro file: include/linux/mm_types.h )
	-- 442
	++ #define NUMA_PTE_SCAN_INIT -1


NUMA_PTE_SCAN_ACTIVE 	( diff_type: Add type: macro file: include/linux/mm_types.h )
	-- 443
	++ #define NUMA_PTE_SCAN_ACTIVE -2


current_user_stack_pointer 	( diff_type: Add type: macro file: arch/x86/include/asm/ptrace.h )
	-- 137
	++ #define current_user_stack_pointer() this_cpu_read(old_rsp)


compat_user_stack_pointer 	( diff_type: Add type: macro file: include/linux/compat.h )
	-- 69
	++ #define compat_user_stack_pointer() current_user_stack_pointer()


restore_altstack 	( diff_type: Add type: prototype file: include/linux/signal.h )
	-- 388
	++ int restore_altstack(const stack_t __user *);


__save_altstack 	( diff_type: Add type: prototype file: include/linux/signal.h )
	-- 389
	++ int __save_altstack(stack_t __user *,unsigned long);


disable_pid_allocation 	( diff_type: Add type: prototype file: include/linux/pid.h )
	-- 124
	++ extern void disable_pid_allocation(struct pid_namespace *ns);


rcu_read_unlock_special 	( diff_type: Add type: prototype file: include/linux/rcupdate.h )
	-- 175
	++ extern void rcu_read_unlock_special(struct task_struct *t);


rcu_user_enter 	( diff_type: Add type: function file: include/linux/rcupdate.h )
	-- 226
	++ static inline void rcu_user_enter(void) { }


rcu_user_exit 	( diff_type: Add type: function file: include/linux/rcupdate.h )
	-- 227
	++ static inline void rcu_user_exit(void) { }


rcu_user_enter_after_irq 	( diff_type: Add type: function file: include/linux/rcupdate.h )
	-- 228
	++ static inline void rcu_user_enter_after_irq(void) { }


rcu_user_exit_after_irq 	( diff_type: Add type: function file: include/linux/rcupdate.h )
	-- 229
	++ static inline void rcu_user_exit_after_irq(void) { }


rcu_user_hooks_switch 	( diff_type: Add type: function file: include/linux/rcupdate.h )
	-- 230
	++ static inline void rcu_user_hooks_switch(struct task_struct *prev,struct task_struct *next) { }


RCU_POINTER_INITIALIZER 	( diff_type: Add type: macro file: include/linux/rcupdate.h )
	-- 948
	++ #define RCU_POINTER_INITIALIZER(p,v) .p = (typeof(*v) __force __rcu *)(v)


TIMER_DEFERRABLE 	( diff_type: Add type: macro file: include/linux/timer.h )
	-- 68
	++ #define TIMER_DEFERRABLE 0x1LU


TIMER_IRQSAFE 	( diff_type: Add type: macro file: include/linux/timer.h )
	-- 69
	++ #define TIMER_IRQSAFE 0x2LU


TIMER_FLAG_MASK 	( diff_type: Add type: macro file: include/linux/timer.h )
	-- 71
	++ #define TIMER_FLAG_MASK 0x3LU


__TIMER_INITIALIZER 	( diff_type: Add type: macro file: include/linux/timer.h )
	-- 73
	++ #define __TIMER_INITIALIZER(_function,_expires,_data,_flags) { .entry = { .prev = TIMER_ENTRY_STATIC }, .function = (_function), .expires = (_expires), .data = (_data), .base = (void *)((unsigned long)&boot_tvec_bases + (_flags)), .slack = -1, __TIMER_LOCKDEP_MAP_INITIALIZER( __FILE__ ":" __stringify(__LINE__)) }


__init_timer 	( diff_type: Add type: macro file: include/linux/timer.h )
	-- 125
	++ #define __init_timer(_timer,_flags) init_timer_key((_timer), (_flags), NULL, NULL)


__init_timer_on_stack 	( diff_type: Add type: macro file: include/linux/timer.h )
	-- 127
	++ #define __init_timer_on_stack(_timer,_flags) init_timer_on_stack_key((_timer), (_flags), NULL, NULL)


__setup_timer 	( diff_type: Add type: macro file: include/linux/timer.h )
	-- 138
	++ #define __setup_timer(_timer,_fn,_data,_flags) do { __init_timer((_timer), (_flags)); (_timer)->function = (_fn); (_timer)->data = (_data); } while (0)


__setup_timer_on_stack 	( diff_type: Add type: macro file: include/linux/timer.h )
	-- 145
	++ #define __setup_timer_on_stack(_timer,_fn,_data,_flags) do { __init_timer_on_stack((_timer), (_flags)); (_timer)->function = (_fn); (_timer)->data = (_data); } while (0)


tlb_infos 	( diff_type: Add type: enum file: arch/x86/include/asm/processor.h )
	-- 64
	++ enum tlb_infos { ENTRIES, NR_INFO };


init_amd_cacheinfo 	( diff_type: Add type: prototype file: arch/x86/include/asm/processor.h )
	-- 188
	++ extern void init_amd_cacheinfo(struct cpuinfo_x86 *c);


set_task_blockstep 	( diff_type: Add type: prototype file: arch/x86/include/asm/processor.h )
	-- 765
	++ extern void set_task_blockstep(struct task_struct *task,bool on);


_down_write_nest_lock 	( diff_type: Add type: prototype file: include/linux/rwsem.h )
	-- 128
	++ extern void _down_write_nest_lock(struct rw_semaphore *sem,struct lockdep_map *nest_lock);


down_write_nest_lock 	( diff_type: Add type: macro file: include/linux/rwsem.h )
	-- 138
	++ # define down_write_nest_lock(sem,nest_lock) down_write(sem)


_UAPI_LINUX_STRING_H_ 	( diff_type: Add type: macro file: include/uapi/linux/string.h )
	-- 2
	++ #define _UAPI_LINUX_STRING_H_


___GFP_MEMALLOC 	( diff_type: Add type: macro file: include/linux/gfp.h )
	-- 26
	++ #define ___GFP_MEMALLOC 0x2000u


___GFP_KMEMCG 	( diff_type: Add type: macro file: include/linux/gfp.h )
	-- 33
	++ #define ___GFP_KMEMCG 0x100000u


__GFP_MEMALLOC 	( diff_type: Add type: macro file: include/linux/gfp.h )
	-- 78
	++ #define __GFP_MEMALLOC ((__force gfp_t)___GFP_MEMALLOC)


__GFP_KMEMCG 	( diff_type: Add type: macro file: include/linux/gfp.h )
	-- 93
	++ #define __GFP_KMEMCG ((__force gfp_t)___GFP_KMEMCG)


__free_memcg_kmem_pages 	( diff_type: Add type: prototype file: include/linux/gfp.h )
	-- 370
	++ extern void __free_memcg_kmem_pages(struct page *page,unsigned int order);


free_memcg_kmem_pages 	( diff_type: Add type: prototype file: include/linux/gfp.h )
	-- 371
	++ extern void free_memcg_kmem_pages(unsigned long addr,unsigned int order);


gfp_pfmemalloc_allowed 	( diff_type: Add type: prototype file: include/linux/gfp.h )
	-- 391
	++ bool gfp_pfmemalloc_allowed(gfp_t gfp_mask);


delayed_work_timer_fn 	( diff_type: Add type: prototype file: include/linux/workqueue.h )
	-- 19
	++ void delayed_work_timer_fn(unsigned long __data);


DECLARE_DEFERRABLE_WORK 	( diff_type: Add type: macro file: include/linux/workqueue.h )
	-- 149
	++ #define DECLARE_DEFERRABLE_WORK(n,f) struct delayed_work n = __DELAYED_WORK_INITIALIZER(n, f, TIMER_DEFERRABLE)


__INIT_DELAYED_WORK 	( diff_type: Add type: macro file: include/linux/workqueue.h )
	-- 214
	++ #define __INIT_DELAYED_WORK(_work,_func,_tflags) do { INIT_WORK(&(_work)->work, (_func)); __setup_timer(&(_work)->timer, delayed_work_timer_fn, (unsigned long)(_work), (_tflags) | TIMER_IRQSAFE); } while (0)


__INIT_DELAYED_WORK_ONSTACK 	( diff_type: Add type: macro file: include/linux/workqueue.h )
	-- 222
	++ #define __INIT_DELAYED_WORK_ONSTACK(_work,_func,_tflags) do { INIT_WORK_ONSTACK(&(_work)->work, (_func)); __setup_timer_on_stack(&(_work)->timer, delayed_work_timer_fn, (unsigned long)(_work), (_tflags) | TIMER_IRQSAFE); } while (0)


INIT_DEFERRABLE_WORK 	( diff_type: Add type: macro file: include/linux/workqueue.h )
	-- 237
	++ #define INIT_DEFERRABLE_WORK(_work,_func) __INIT_DELAYED_WORK(_work, _func, TIMER_DEFERRABLE)


INIT_DEFERRABLE_WORK_ONSTACK 	( diff_type: Add type: macro file: include/linux/workqueue.h )
	-- 240
	++ #define INIT_DEFERRABLE_WORK_ONSTACK(_work,_func) __INIT_DELAYED_WORK_ONSTACK(_work, _func, TIMER_DEFERRABLE)


__system_nrt_wq 	( diff_type: Add type: function file: include/linux/workqueue.h )
	-- 313
	++ static inline struct workqueue_struct * __deprecated __system_nrt_wq(void)


__system_nrt_freezable_wq 	( diff_type: Add type: function file: include/linux/workqueue.h )
	-- 318
	++ static inline struct workqueue_struct * __deprecated __system_nrt_freezable_wq(void)


system_nrt_wq 	( diff_type: Add type: macro file: include/linux/workqueue.h )
	-- 324
	++ #define system_nrt_wq __system_nrt_wq()


system_nrt_freezable_wq 	( diff_type: Add type: macro file: include/linux/workqueue.h )
	-- 325
	++ #define system_nrt_freezable_wq __system_nrt_freezable_wq()


mod_delayed_work_on 	( diff_type: Add type: prototype file: include/linux/workqueue.h )
	-- 399
	++ extern bool mod_delayed_work_on(int cpu,struct workqueue_struct *wq,struct delayed_work *dwork, unsigned long delay);


mod_delayed_work 	( diff_type: Add type: prototype file: include/linux/workqueue.h )
	-- 401
	++ extern bool mod_delayed_work(struct workqueue_struct *wq,struct delayed_work *dwork, unsigned long delay);


kref_put_mutex 	( diff_type: Add type: function file: include/linux/kref.h )
	-- 98
	++ static inline int kref_put_mutex(struct kref *kref,void (*release)(struct kref *kref),struct mutex *lock)


kref_get_unless_zero 	( diff_type: Add type: function file: include/linux/kref.h )
	-- 131
	++ static inline int __must_check kref_get_unless_zero(struct kref *kref)


USB_DEVICE_ID_MATCH_INT_NUMBER 	( diff_type: Add type: macro file: include/linux/mod_devicetable.h )
	-- 140
	++ #define USB_DEVICE_ID_MATCH_INT_NUMBER 0x0400


IPACK_ANY_FORMAT 	( diff_type: Add type: macro file: include/linux/mod_devicetable.h )
	-- 603
	++ #define IPACK_ANY_FORMAT 0xff


IPACK_ANY_ID 	( diff_type: Add type: macro file: include/linux/mod_devicetable.h )
	-- 604
	++ #define IPACK_ANY_ID (~0)


ipack_device_id 	( diff_type: Add type: struct file: include/linux/mod_devicetable.h )
	-- 605
	++ struct ipack_device_id { __u8 format; __u32 vendor; __u32 device; };


device_show_bool 	( diff_type: Add type: prototype file: include/linux/device.h )
	-- 501
	++ ssize_t device_show_bool(struct device *dev,struct device_attribute *attr,char *buf);


device_store_bool 	( diff_type: Add type: prototype file: include/linux/device.h )
	-- 503
	++ ssize_t device_store_bool(struct device *dev,struct device_attribute *attr,const char *buf, size_t count);


DEVICE_BOOL_ATTR 	( diff_type: Add type: macro file: include/linux/device.h )
	-- 514
	++ #define DEVICE_BOOL_ATTR(_name,_mode,_var) struct dev_ext_attribute dev_attr_##_name = { __ATTR(_name, _mode, device_show_bool, device_store_bool), &(_var) }


devres_for_each_res 	( diff_type: Add type: prototype file: include/linux/device.h )
	-- 548
	++ extern void devres_for_each_res(struct device *dev,dr_release_t release,dr_match_t match, void *match_data,void (*fn)(struct device *, void *, void *),void *data);


acpi_dev_node 	( diff_type: Add type: struct file: include/linux/device.h )
	-- 588
	++ struct acpi_dev_node { void *handle; };


kobj_to_dev 	( diff_type: Add type: function file: include/linux/device.h )
	-- 715
	++ static inline struct device *kobj_to_dev(struct kobject *kobj)


ACPI_HANDLE 	( diff_type: Add type: macro file: include/linux/device.h )
	-- 724
	++ #define ACPI_HANDLE(dev) (NULL)


ACPI_HANDLE_SET 	( diff_type: Add type: macro file: include/linux/device.h )
	-- 725
	++ #define ACPI_HANDLE_SET(dev,_handle_) do { } while (0)


dev_pm_syscore_device 	( diff_type: Add type: function file: include/linux/device.h )
	-- 804
	++ static inline void dev_pm_syscore_device(struct device *dev,bool val)


dev_vprintk_emit 	( diff_type: Add type: function file: include/linux/device.h )
	-- 957
	++ int dev_vprintk_emit(int level,const struct device *dev,const char *fmt, va_list args)


dev_printk_emit 	( diff_type: Add type: function file: include/linux/device.h )
	-- 961
	++ int dev_printk_emit(int level,const struct device *dev,const char *fmt,...)


_UAPILINUX_PCI_H 	( diff_type: Add type: macro file: include/uapi/linux/pci.h )
	-- 18
	++ #define _UAPILINUX_PCI_H


PCI_DEVICE_ID_AMD_15H_M10H_F3 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 520
	++ #define PCI_DEVICE_ID_AMD_15H_M10H_F3 0x1403


PCI_DEVICE_ID_HP_CISSH 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 756
	++ #define PCI_DEVICE_ID_HP_CISSH 0x323c


PCI_DEVICE_ID_VIA_VX900 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 1430
	++ #define PCI_DEVICE_ID_VIA_VX900 0x8410


PCI_DEVICE_ID_RICOH_R5CE822 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 1571
	++ #define PCI_DEVICE_ID_RICOH_R5CE822 0xe822


PCI_DEVICE_ID_EXAR_XR17V352 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 1989
	++ #define PCI_DEVICE_ID_EXAR_XR17V352 0x0352


PCI_DEVICE_ID_EXAR_XR17V354 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 1990
	++ #define PCI_DEVICE_ID_EXAR_XR17V354 0x0354


PCI_DEVICE_ID_EXAR_XR17V358 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 1991
	++ #define PCI_DEVICE_ID_EXAR_XR17V358 0x0358


PCI_VENDOR_ID_COMMTECH 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 2330
	++ #define PCI_VENDOR_ID_COMMTECH 0x18f7


PCI_DEVICE_ID_INTEL_UNC_HA 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 2766
	++ #define PCI_DEVICE_ID_INTEL_UNC_HA 0x3c46


PCI_DEVICE_ID_INTEL_UNC_IMC0 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 2767
	++ #define PCI_DEVICE_ID_INTEL_UNC_IMC0 0x3cb0


PCI_DEVICE_ID_INTEL_UNC_IMC1 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 2768
	++ #define PCI_DEVICE_ID_INTEL_UNC_IMC1 0x3cb1


PCI_DEVICE_ID_INTEL_UNC_IMC2 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 2769
	++ #define PCI_DEVICE_ID_INTEL_UNC_IMC2 0x3cb4


PCI_DEVICE_ID_INTEL_UNC_IMC3 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 2770
	++ #define PCI_DEVICE_ID_INTEL_UNC_IMC3 0x3cb5


PCI_DEVICE_ID_INTEL_UNC_QPI0 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 2771
	++ #define PCI_DEVICE_ID_INTEL_UNC_QPI0 0x3c41


PCI_DEVICE_ID_INTEL_UNC_QPI1 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 2772
	++ #define PCI_DEVICE_ID_INTEL_UNC_QPI1 0x3c42


PCI_DEVICE_ID_INTEL_UNC_R2PCIE 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 2773
	++ #define PCI_DEVICE_ID_INTEL_UNC_R2PCIE 0x3c43


PCI_DEVICE_ID_INTEL_UNC_R3QPI0 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 2774
	++ #define PCI_DEVICE_ID_INTEL_UNC_R3QPI0 0x3c44


PCI_DEVICE_ID_INTEL_UNC_R3QPI1 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 2775
	++ #define PCI_DEVICE_ID_INTEL_UNC_R3QPI1 0x3c45


PCI_DEVICE_ID_INTEL_JAKETOWN_UBOX 	( diff_type: Add type: macro file: include/linux/pci_ids.h )
	-- 2776
	++ #define PCI_DEVICE_ID_INTEL_JAKETOWN_UBOX 0x3ce0


pci_setup_rom 	( diff_type: Add type: struct file: arch/x86/include/asm/pci.h )
	-- 174
	++ struct pci_setup_rom { struct setup_data data; uint16_t vendor; uint16_t devid; uint64_t pcilen; unsigned long segment; unsigned long bus; unsigned long device; unsigned long function; uint8_t romdata[0]; };


__SC_DELOUSE 	( diff_type: Add type: macro file: include/linux/compat.h )
	-- 27
	++ #define __SC_DELOUSE(t,v) ((t)(unsigned long)(v))


__SC_CCAST1 	( diff_type: Add type: macro file: include/linux/compat.h )
	-- 30
	++ #define __SC_CCAST1(t1,a1) __SC_DELOUSE(t1,a1)


__SC_CCAST2 	( diff_type: Add type: macro file: include/linux/compat.h )
	-- 31
	++ #define __SC_CCAST2(t2,a2,...) __SC_DELOUSE(t2,a2),__SC_CCAST1(__VA_ARGS__)


__SC_CCAST3 	( diff_type: Add type: macro file: include/linux/compat.h )
	-- 32
	++ #define __SC_CCAST3(t3,a3,...) __SC_DELOUSE(t3,a3),__SC_CCAST2(__VA_ARGS__)


__SC_CCAST4 	( diff_type: Add type: macro file: include/linux/compat.h )
	-- 33
	++ #define __SC_CCAST4(t4,a4,...) __SC_DELOUSE(t4,a4),__SC_CCAST3(__VA_ARGS__)


__SC_CCAST5 	( diff_type: Add type: macro file: include/linux/compat.h )
	-- 34
	++ #define __SC_CCAST5(t5,a5,...) __SC_DELOUSE(t5,a5),__SC_CCAST4(__VA_ARGS__)


__SC_CCAST6 	( diff_type: Add type: macro file: include/linux/compat.h )
	-- 35
	++ #define __SC_CCAST6(t6,a6,...) __SC_DELOUSE(t6,a6),__SC_CCAST5(__VA_ARGS__)


COMPAT_SYSCALL_DEFINE1 	( diff_type: Add type: macro file: include/linux/compat.h )
	-- 36
	++ #define COMPAT_SYSCALL_DEFINE1(name,...) COMPAT_SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)


COMPAT_SYSCALL_DEFINE2 	( diff_type: Add type: macro file: include/linux/compat.h )
	-- 38
	++ #define COMPAT_SYSCALL_DEFINE2(name,...) COMPAT_SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)


COMPAT_SYSCALL_DEFINE3 	( diff_type: Add type: macro file: include/linux/compat.h )
	-- 40
	++ #define COMPAT_SYSCALL_DEFINE3(name,...) COMPAT_SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)


COMPAT_SYSCALL_DEFINE4 	( diff_type: Add type: macro file: include/linux/compat.h )
	-- 42
	++ #define COMPAT_SYSCALL_DEFINE4(name,...) COMPAT_SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)


COMPAT_SYSCALL_DEFINE5 	( diff_type: Add type: macro file: include/linux/compat.h )
	-- 44
	++ #define COMPAT_SYSCALL_DEFINE5(name,...) COMPAT_SYSCALL_DEFINEx(5, _##name, __VA_ARGS__)


COMPAT_SYSCALL_DEFINE6 	( diff_type: Add type: macro file: include/linux/compat.h )
	-- 46
	++ #define COMPAT_SYSCALL_DEFINE6(name,...) COMPAT_SYSCALL_DEFINEx(6, _##name, __VA_ARGS__)


COMPAT_SYSCALL_DEFINEx 	( diff_type: Add type: macro file: include/linux/compat.h )
	-- 63
	++ #define COMPAT_SYSCALL_DEFINEx(x,name,...) asmlinkage long compat_sys##name(__SC_DECL##x(__VA_ARGS__))


compat_sigaltstack 	( diff_type: Add type: struct file: include/linux/compat.h )
	-- 73
	++ typedef struct compat_sigaltstack { compat_uptr_t ss_sp; int ss_flags; compat_size_t ss_size; } compat_stack_t;


compat_stack_t 	( diff_type: Add type: struct file: include/linux/compat.h )
	-- 73
	++ typedef struct compat_sigaltstack { compat_uptr_t ss_sp; int ss_flags; compat_size_t ss_size; } compat_stack_t;


compat_sys_execve 	( diff_type: Add type: prototype file: include/linux/compat.h )
	-- 342
	++ asmlinkage long compat_sys_execve(const char __user *filename,const compat_uptr_t __user *argv,const compat_uptr_t __user *envp);


compat_sys_sendfile 	( diff_type: Add type: prototype file: include/linux/compat.h )
	-- 643
	++ asmlinkage long compat_sys_sendfile(int out_fd,int in_fd,compat_off_t __user *offset, compat_size_t count);


compat_sys_sigaltstack 	( diff_type: Add type: prototype file: include/linux/compat.h )
	-- 646
	++ asmlinkage long compat_sys_sigaltstack(const compat_stack_t __user *uss_ptr,compat_stack_t __user *uoss_ptr);


compat_restore_altstack 	( diff_type: Add type: prototype file: include/linux/compat.h )
	-- 649
	++ int compat_restore_altstack(const compat_stack_t __user *uss);


__compat_save_altstack 	( diff_type: Add type: prototype file: include/linux/compat.h )
	-- 650
	++ int __compat_save_altstack(compat_stack_t __user *,unsigned long);


compat_sys_sched_rr_get_interval 	( diff_type: Add type: prototype file: include/linux/compat.h )
	-- 653
	++ asmlinkage long compat_sys_sched_rr_get_interval(compat_pid_t pid,struct compat_timespec __user *interval);


_UAPI_LINUX_ETHTOOL_H 	( diff_type: Add type: macro file: include/uapi/linux/ethtool.h )
	-- 14
	++ #define _UAPI_LINUX_ETHTOOL_H


ethtool_eee 	( diff_type: Add type: struct file: include/uapi/linux/ethtool.h )
	-- 155
	++ struct ethtool_eee { __u32 cmd; __u32 supported; __u32 advertised; __u32 lp_advertised; __u32 eee_active; __u32 eee_enabled; __u32 tx_lpi_enabled; __u32 tx_lpi_timer; __u32 reserved[2]; };


ETHTOOL_GEEE 	( diff_type: Add type: macro file: include/uapi/linux/ethtool.h )
	-- 901
	++ #define ETHTOOL_GEEE 0x00000044


ETHTOOL_SEEE 	( diff_type: Add type: macro file: include/uapi/linux/ethtool.h )
	-- 902
	++ #define ETHTOOL_SEEE 0x00000045


SUPPORTED_40000baseKR4_Full 	( diff_type: Add type: macro file: include/uapi/linux/ethtool.h )
	-- 932
	++ #define SUPPORTED_40000baseKR4_Full (1 << 23)


SUPPORTED_40000baseCR4_Full 	( diff_type: Add type: macro file: include/uapi/linux/ethtool.h )
	-- 933
	++ #define SUPPORTED_40000baseCR4_Full (1 << 24)


SUPPORTED_40000baseSR4_Full 	( diff_type: Add type: macro file: include/uapi/linux/ethtool.h )
	-- 934
	++ #define SUPPORTED_40000baseSR4_Full (1 << 25)


SUPPORTED_40000baseLR4_Full 	( diff_type: Add type: macro file: include/uapi/linux/ethtool.h )
	-- 935
	++ #define SUPPORTED_40000baseLR4_Full (1 << 26)


ADVERTISED_40000baseKR4_Full 	( diff_type: Add type: macro file: include/uapi/linux/ethtool.h )
	-- 961
	++ #define ADVERTISED_40000baseKR4_Full (1 << 23)


ADVERTISED_40000baseCR4_Full 	( diff_type: Add type: macro file: include/uapi/linux/ethtool.h )
	-- 962
	++ #define ADVERTISED_40000baseCR4_Full (1 << 24)


ADVERTISED_40000baseSR4_Full 	( diff_type: Add type: macro file: include/uapi/linux/ethtool.h )
	-- 963
	++ #define ADVERTISED_40000baseSR4_Full (1 << 25)


ADVERTISED_40000baseLR4_Full 	( diff_type: Add type: macro file: include/uapi/linux/ethtool.h )
	-- 964
	++ #define ADVERTISED_40000baseLR4_Full (1 << 26)


ETH_TP_MDI_AUTO 	( diff_type: Add type: macro file: include/uapi/linux/ethtool.h )
	-- 1014
	++ #define ETH_TP_MDI_AUTO 0x03


FLOW_MAC_EXT 	( diff_type: Add type: macro file: include/uapi/linux/ethtool.h )
	-- 1044
	++ #define FLOW_MAC_EXT 0x40000000


IFF_LIVE_ADDR_CHANGE 	( diff_type: Add type: macro file: include/uapi/linux/if.h )
	-- 84
	++ #define IFF_LIVE_ADDR_CHANGE 0x100000


_UAPI__LINUX_MII_H__ 	( diff_type: Add type: macro file: include/uapi/linux/mii.h )
	-- 9
	++ #define _UAPI__LINUX_MII_H__


MII_MMD_CTRL 	( diff_type: Add type: macro file: include/uapi/linux/mii.h )
	-- 24
	++ #define MII_MMD_CTRL 0x0d


MII_MMD_DATA 	( diff_type: Add type: macro file: include/uapi/linux/mii.h )
	-- 25
	++ #define MII_MMD_DATA 0x0e


MII_MMD_CTRL_DEVAD_MASK 	( diff_type: Add type: macro file: include/uapi/linux/mii.h )
	-- 147
	++ #define MII_MMD_CTRL_DEVAD_MASK 0x1f


MII_MMD_CTRL_ADDR 	( diff_type: Add type: macro file: include/uapi/linux/mii.h )
	-- 148
	++ #define MII_MMD_CTRL_ADDR 0x0000


MII_MMD_CTRL_NOINCR 	( diff_type: Add type: macro file: include/uapi/linux/mii.h )
	-- 149
	++ #define MII_MMD_CTRL_NOINCR 0x4000


MII_MMD_CTRL_INCR_RDWT 	( diff_type: Add type: macro file: include/uapi/linux/mii.h )
	-- 150
	++ #define MII_MMD_CTRL_INCR_RDWT 0x8000


MII_MMD_CTRL_INCR_ON_WT 	( diff_type: Add type: macro file: include/uapi/linux/mii.h )
	-- 151
	++ #define MII_MMD_CTRL_INCR_ON_WT 0xC000


pm_qos_flags_status 	( diff_type: Add type: enum file: include/linux/pm_qos.h )
	-- 23
	++ enum pm_qos_flags_status { PM_QOS_FLAGS_UNDEFINED = -1, PM_QOS_FLAGS_NONE, PM_QOS_FLAGS_SOME, PM_QOS_FLAGS_ALL, };


PM_QOS_FLAG_NO_POWER_OFF 	( diff_type: Add type: macro file: include/linux/pm_qos.h )
	-- 37
	++ #define PM_QOS_FLAG_NO_POWER_OFF (1 << 0)


PM_QOS_FLAG_REMOTE_WAKEUP 	( diff_type: Add type: macro file: include/linux/pm_qos.h )
	-- 38
	++ #define PM_QOS_FLAG_REMOTE_WAKEUP (1 << 1)


pm_qos_flags_request 	( diff_type: Add type: struct file: include/linux/pm_qos.h )
	-- 46
	++ struct pm_qos_flags_request { struct list_head node; s32 flags; };


dev_pm_qos_req_type 	( diff_type: Add type: enum file: include/linux/pm_qos.h )
	-- 51
	++ enum dev_pm_qos_req_type { DEV_PM_QOS_LATENCY = 1, DEV_PM_QOS_FLAGS, };


pm_qos_flags 	( diff_type: Add type: struct file: include/linux/pm_qos.h )
	-- 84
	++ struct pm_qos_flags { struct list_head list; s32 effective_flags; };


dev_pm_qos 	( diff_type: Add type: struct file: include/linux/pm_qos.h )
	-- 89
	++ struct dev_pm_qos { struct pm_qos_constraints latency; struct pm_qos_flags flags; struct dev_pm_qos_request *latency_req; struct dev_pm_qos_request *flags_req; };


pm_qos_update_flags 	( diff_type: Add type: prototype file: include/linux/pm_qos.h )
	-- 110
	++ bool pm_qos_update_flags(struct pm_qos_flags *pqf,struct pm_qos_flags_request *req,enum pm_qos_req_action action, s32 val);


__dev_pm_qos_flags 	( diff_type: Add type: function file: include/linux/pm_qos.h )
	-- 147
	++ static inline enum pm_qos_flags_status __dev_pm_qos_flags(struct device *dev,s32 mask)


dev_pm_qos_flags 	( diff_type: Add type: function file: include/linux/pm_qos.h )
	-- 150
	++ static inline enum pm_qos_flags_status dev_pm_qos_flags(struct device *dev,s32 mask)


dev_pm_qos_expose_flags 	( diff_type: Add type: function file: include/linux/pm_qos.h )
	-- 212
	++ static inline int dev_pm_qos_expose_flags(struct device *dev,s32 value)


dev_pm_qos_hide_flags 	( diff_type: Add type: function file: include/linux/pm_qos.h )
	-- 214
	++ static inline void dev_pm_qos_hide_flags(struct device *dev) {}


dev_pm_qos_update_flags 	( diff_type: Add type: function file: include/linux/pm_qos.h )
	-- 215
	++ static inline int dev_pm_qos_update_flags(struct device *dev,s32 m,bool set)


dev_pm_qos_requested_latency 	( diff_type: Add type: function file: include/linux/pm_qos.h )
	-- 218
	++ static inline s32 dev_pm_qos_requested_latency(struct device *dev) { return 0; }


dev_pm_qos_requested_flags 	( diff_type: Add type: function file: include/linux/pm_qos.h )
	-- 219
	++ static inline s32 dev_pm_qos_requested_flags(struct device *dev) { return 0; }


dmaengine_tx_status 	( diff_type: Add type: function file: include/linux/dmaengine.h )
	-- 678
	++ static inline enum dma_status dmaengine_tx_status(struct dma_chan *chan,dma_cookie_t cookie, struct dma_tx_state *state)


LOOPBACK_IFINDEX 	( diff_type: Add type: macro file: include/net/net_namespace.h )
	-- 127
	++ #define LOOPBACK_IFINDEX 1


__net_initconst 	( diff_type: Add type: macro file: include/net/net_namespace.h )
	-- 275
	++ #define __net_initconst __initconst


rt_genid 	( diff_type: Add type: function file: include/net/net_namespace.h )
	-- 331
	++ static inline int rt_genid(struct net *net)


rt_genid_bump 	( diff_type: Add type: function file: include/net/net_namespace.h )
	-- 336
	++ static inline void rt_genid_bump(struct net *net)


_UAPI_LINUX_NETDEVICE_H 	( diff_type: Add type: macro file: include/uapi/linux/netdevice.h )
	-- 26
	++ #define _UAPI_LINUX_NETDEVICE_H


prandom_u32 	( diff_type: Add type: prototype file: include/linux/random.h )
	-- 28
	++ u32 prandom_u32(void);


prandom_bytes 	( diff_type: Add type: prototype file: include/linux/random.h )
	-- 29
	++ void prandom_bytes(void *buf,int nbytes);


prandom_seed 	( diff_type: Add type: prototype file: include/linux/random.h )
	-- 30
	++ void prandom_seed(u32 seed);


prandom_u32_state 	( diff_type: Add type: prototype file: include/linux/random.h )
	-- 39
	++ u32 prandom_u32_state(struct rnd_state *);


prandom_bytes_state 	( diff_type: Add type: prototype file: include/linux/random.h )
	-- 40
	++ void prandom_bytes_state(struct rnd_state *state,void *buf,int nbytes);


prandom_seed_state 	( diff_type: Add type: function file: include/linux/random.h )
	-- 55
	++ static inline void prandom_seed_state(struct rnd_state *state,u64 seed)


_UAPI_LINUX_IF_ETHER_H 	( diff_type: Add type: macro file: include/uapi/linux/if_ether.h )
	-- 22
	++ #define _UAPI_LINUX_IF_ETHER_H


ETH_P_BATMAN 	( diff_type: Add type: macro file: include/uapi/linux/if_ether.h )
	-- 51
	++ #define ETH_P_BATMAN 0x4305


ETH_P_CANFD 	( diff_type: Add type: macro file: include/uapi/linux/if_ether.h )
	-- 110
	++ #define ETH_P_CANFD 0x000D


sock_alloc_file 	( diff_type: Add type: prototype file: include/linux/net.h )
	-- 214
	++ extern struct file *sock_alloc_file(struct socket *sock,int flags,const char *dname);


sock_from_file 	( diff_type: Add type: prototype file: include/linux/net.h )
	-- 216
	++ extern struct socket *sock_from_file(struct file *file,int *err);


inet_proto_csum_replace16 	( diff_type: Add type: prototype file: include/net/checksum.h )
	-- 112
	++ extern void inet_proto_csum_replace16(__sum16 *sum,struct sk_buff *skb,const __be32 *from, const __be32 *to,int pseudohdr);


_UAPI_LINUX_STAT_H 	( diff_type: Add type: macro file: include/uapi/linux/stat.h )
	-- 2
	++ #define _UAPI_LINUX_STAT_H


__HAVE_BUILTIN_BSWAP16__ 	( diff_type: Add type: macro file: include/linux/compiler-intel.h )
	-- 35
	++ #define __HAVE_BUILTIN_BSWAP16__


__builtin_bswap16 	( diff_type: Add type: macro file: include/linux/compiler-intel.h )
	-- 36
	++ #define __builtin_bswap16 _bswap16


align_vdso_addr 	( diff_type: Add type: prototype file: arch/x86/include/asm/elf.h )
	-- 369
	++ extern unsigned long align_vdso_addr(unsigned long);


_UAPI_LINUX_ELF_H 	( diff_type: Add type: macro file: include/uapi/linux/elf.h )
	-- 2
	++ #define _UAPI_LINUX_ELF_H


NT_SIGINFO 	( diff_type: Add type: macro file: include/uapi/linux/elf.h )
	-- 376
	++ #define NT_SIGINFO 0x53494749


NT_FILE 	( diff_type: Add type: macro file: include/uapi/linux/elf.h )
	-- 377
	++ #define NT_FILE 0x46494c45


NT_S390_TDB 	( diff_type: Add type: macro file: include/uapi/linux/elf.h )
	-- 393
	++ #define NT_S390_TDB 0x308


NT_ARM_TLS 	( diff_type: Add type: macro file: include/uapi/linux/elf.h )
	-- 395
	++ #define NT_ARM_TLS 0x401


NT_ARM_HW_BREAK 	( diff_type: Add type: macro file: include/uapi/linux/elf.h )
	-- 396
	++ #define NT_ARM_HW_BREAK 0x402


NT_ARM_HW_WATCH 	( diff_type: Add type: macro file: include/uapi/linux/elf.h )
	-- 397
	++ #define NT_ARM_HW_WATCH 0x403


__wait_event_lock_irq 	( diff_type: Add type: macro file: include/linux/wait.h )
	-- 554
	++ #define __wait_event_lock_irq(wq,condition,lock,cmd) do { DEFINE_WAIT(__wait); for (;;) { prepare_to_wait(&wq, &__wait, TASK_UNINTERRUPTIBLE); if (condition) break; spin_unlock_irq(&lock); cmd; schedule(); spin_lock_irq(&lock); } finish_wait(&wq, &__wait); } while (0)


wait_event_lock_irq_cmd 	( diff_type: Add type: macro file: include/linux/wait.h )
	-- 593
	++ #define wait_event_lock_irq_cmd(wq,condition,lock,cmd) do { if (condition) break; __wait_event_lock_irq(wq, condition, lock, cmd); } while (0)


wait_event_lock_irq 	( diff_type: Add type: macro file: include/linux/wait.h )
	-- 620
	++ #define wait_event_lock_irq(wq,condition,lock) do { if (condition) break; __wait_event_lock_irq(wq, condition, lock, ); } while (0)


__wait_event_interruptible_lock_irq 	( diff_type: Add type: macro file: include/linux/wait.h )
	-- 628
	++ #define __wait_event_interruptible_lock_irq(wq,condition, lock, ret, cmd) do { DEFINE_WAIT(__wait); for (;;) { prepare_to_wait(&wq, &__wait, TASK_INTERRUPTIBLE); if (condition) break; if (signal_pending(current)) { ret = -ERESTARTSYS; break; } spin_unlock_irq(&lock); cmd; schedule(); spin_lock_irq(&lock); } finish_wait(&wq, &__wait); } while (0)


wait_event_interruptible_lock_irq_cmd 	( diff_type: Add type: macro file: include/linux/wait.h )
	-- 674
	++ #define wait_event_interruptible_lock_irq_cmd(wq,condition,lock,cmd) ({ int __ret = 0; if (!(condition)) __wait_event_interruptible_lock_irq(wq, condition, lock, __ret, cmd); __ret; })


wait_event_interruptible_lock_irq 	( diff_type: Add type: macro file: include/linux/wait.h )
	-- 706
	++ #define wait_event_interruptible_lock_irq(wq,condition,lock) ({ int __ret = 0; if (!(condition)) __wait_event_interruptible_lock_irq(wq, condition, lock, __ret, ); __ret; })


DEFINE_EARLY_PER_CPU_READ_MOSTLY 	( diff_type: Add type: macro file: arch/x86/include/asm/percpu.h )
	-- 581
	++ #define DEFINE_EARLY_PER_CPU_READ_MOSTLY(_type,_name,_initvalue) DEFINE_PER_CPU_READ_MOSTLY(_type, _name) = _initvalue


DECLARE_EARLY_PER_CPU_READ_MOSTLY 	( diff_type: Add type: macro file: arch/x86/include/asm/percpu.h )
	-- 590
	++ #define DECLARE_EARLY_PER_CPU_READ_MOSTLY(_type,_name) DECLARE_PER_CPU_READ_MOSTLY(_type, _name)


Elf_Phdr 	( diff_type: Add type: macro file: include/asm-generic/module.h )
	-- 33
	++ #define Elf_Phdr Elf32_Phdr


Elf_Dyn 	( diff_type: Add type: macro file: include/asm-generic/module.h )
	-- 35
	++ #define Elf_Dyn Elf32_Dyn


Elf_Addr 	( diff_type: Add type: macro file: include/asm-generic/module.h )
	-- 37
	++ #define Elf_Addr Elf32_Addr


Elf_Rel 	( diff_type: Add type: macro file: include/asm-generic/module.h )
	-- 39
	++ #define Elf_Rel Elf32_Rel


Elf_Rela 	( diff_type: Add type: macro file: include/asm-generic/module.h )
	-- 42
	++ #define Elf_Rela Elf32_Rela


ELF_R_TYPE 	( diff_type: Add type: macro file: include/asm-generic/module.h )
	-- 44
	++ #define ELF_R_TYPE(X) ELF32_R_TYPE(X)


ELF_R_SYM 	( diff_type: Add type: macro file: include/asm-generic/module.h )
	-- 45
	++ #define ELF_R_SYM(X) ELF32_R_SYM(X)


_UAPI_LINUX_TYPES_H 	( diff_type: Add type: macro file: include/uapi/linux/types.h )
	-- 2
	++ #define _UAPI_LINUX_TYPES_H


__KERN_LEVELS_H__ 	( diff_type: Add type: macro file: include/linux/kern_levels.h )
	-- 2
	++ #define __KERN_LEVELS_H__


KERN_SOH 	( diff_type: Add type: macro file: include/linux/kern_levels.h )
	-- 4
	++ #define KERN_SOH "\001"


KERN_SOH_ASCII 	( diff_type: Add type: macro file: include/linux/kern_levels.h )
	-- 5
	++ #define KERN_SOH_ASCII '\001'


_UAPI_LINUX_CAPABILITY_H 	( diff_type: Add type: macro file: include/uapi/linux/capability.h )
	-- 14
	++ #define _UAPI_LINUX_CAPABILITY_H


_UAPI_LINUX_TIMEX_H 	( diff_type: Add type: macro file: include/uapi/linux/timex.h )
	-- 54
	++ #define _UAPI_LINUX_TIMEX_H


TIF_NOHZ 	( diff_type: Add type: macro file: arch/x86/include/asm/thread_info.h )
	-- 91
	++ #define TIF_NOHZ 19


_TIF_NOHZ 	( diff_type: Add type: macro file: arch/x86/include/asm/thread_info.h )
	-- 116
	++ #define _TIF_NOHZ (1 << TIF_NOHZ)


uprobe_start_dup_mmap 	( diff_type: Add type: function file: include/linux/uprobes.h )
	-- 132
	++ static inline void uprobe_start_dup_mmap(void)


uprobe_end_dup_mmap 	( diff_type: Add type: function file: include/linux/uprobes.h )
	-- 135
	++ static inline void uprobe_end_dup_mmap(void)


uprobe_dup_mmap 	( diff_type: Add type: function file: include/linux/uprobes.h )
	-- 139
	++ uprobe_dup_mmap(struct mm_struct *oldmm,struct mm_struct *newmm)


_UAPI_ASM_X86_PTRACE_H 	( diff_type: Add type: macro file: arch/x86/include/uapi/asm/ptrace.h )
	-- 2
	++ #define _UAPI_ASM_X86_PTRACE_H


paravirt_flush_lazy_mmu 	( diff_type: Add type: prototype file: arch/x86/include/asm/paravirt_types.h )
	-- 683
	++ void paravirt_flush_lazy_mmu(void);


smp_store_boot_cpu_info 	( diff_type: Add type: prototype file: arch/x86/include/asm/smp.h )
	-- 169
	++ void smp_store_boot_cpu_info(void);


_UAPI_LINUX_SEM_H 	( diff_type: Add type: macro file: include/uapi/linux/sem.h )
	-- 2
	++ #define _UAPI_LINUX_SEM_H


_UAPI_LINUX_SIGNAL_H 	( diff_type: Add type: macro file: include/uapi/linux/signal.h )
	-- 2
	++ #define _UAPI_LINUX_SIGNAL_H


ISOLATE_UNEVICTABLE 	( diff_type: Add type: macro file: include/linux/mmzone.h )
	-- 220
	++ #define ISOLATE_UNEVICTABLE ((__force isolate_mode_t)0x8)


_UAPI_LINUX_SECCOMP_H 	( diff_type: Add type: macro file: include/uapi/linux/seccomp.h )
	-- 2
	++ #define _UAPI_LINUX_SECCOMP_H


rwsem_acquire_nest 	( diff_type: Add type: macro file: include/linux/lockdep.h )
	-- 537
	++ # define rwsem_acquire_nest(l,s,t,n,i) do { } while (0)


_UAPI_LINUX_TIME_H 	( diff_type: Add type: macro file: include/uapi/linux/time.h )
	-- 2
	++ #define _UAPI_LINUX_TIME_H


_UAPI_LINUX_RESOURCE_H 	( diff_type: Add type: macro file: include/uapi/linux/resource.h )
	-- 2
	++ #define _UAPI_LINUX_RESOURCE_H


ktime_compare 	( diff_type: Add type: function file: include/linux/ktime.h )
	-- 295
	++ static inline int ktime_compare(const ktime_t cmp1,const ktime_t cmp2)


X86_FEATURE_EAGER_FPU 	( diff_type: Add type: macro file: arch/x86/include/asm/cpufeature.h )
	-- 102
	++ #define X86_FEATURE_EAGER_FPU (3*32+29)


X86_FEATURE_TSC_ADJUST 	( diff_type: Add type: macro file: arch/x86/include/asm/cpufeature.h )
	-- 205
	++ #define X86_FEATURE_TSC_ADJUST (9*32+ 1)


X86_FEATURE_RDSEED 	( diff_type: Add type: macro file: arch/x86/include/asm/cpufeature.h )
	-- 214
	++ #define X86_FEATURE_RDSEED (9*32+18)


X86_FEATURE_ADX 	( diff_type: Add type: macro file: arch/x86/include/asm/cpufeature.h )
	-- 215
	++ #define X86_FEATURE_ADX (9*32+19)


X86_FEATURE_SMAP 	( diff_type: Add type: macro file: arch/x86/include/asm/cpufeature.h )
	-- 216
	++ #define X86_FEATURE_SMAP (9*32+20)


cpu_has_xsaveopt 	( diff_type: Add type: macro file: arch/x86/include/asm/cpufeature.h )
	-- 307
	++ #define cpu_has_xsaveopt boot_cpu_has(X86_FEATURE_XSAVEOPT)


cpu_has_eager_fpu 	( diff_type: Add type: macro file: arch/x86/include/asm/cpufeature.h )
	-- 314
	++ #define cpu_has_eager_fpu boot_cpu_has(X86_FEATURE_EAGER_FPU)


cpu_has_topoext 	( diff_type: Add type: macro file: arch/x86/include/asm/cpufeature.h )
	-- 315
	++ #define cpu_has_topoext boot_cpu_has(X86_FEATURE_TOPOEXT)


_PAGE_NUMA 	( diff_type: Add type: macro file: arch/x86/include/asm/pgtable_types.h )
	-- 85
	++ #define _PAGE_NUMA _PAGE_PROTNONE


native_pagetable_init 	( diff_type: Add type: macro file: arch/x86/include/asm/pgtable_types.h )
	-- 328
	++ #define native_pagetable_init paging_init


rdpmcl 	( diff_type: Add type: macro file: arch/x86/include/asm/paravirt.h )
	-- 216
	++ #define rdpmcl(counter,val) ((val) = paravirt_read_pmc(counter))


wrmsrl_safe 	( diff_type: Add type: macro file: arch/x86/include/asm/msr.h )
	-- 208
	++ #define wrmsrl_safe(msr,val) wrmsr_safe((msr),(u32)(val), (u32)((val) >> 32))


_LINUX_KERNEL_VTIME_H 	( diff_type: Add type: macro file: include/linux/vtime.h )
	-- 2
	++ #define _LINUX_KERNEL_VTIME_H


vtime_task_switch 	( diff_type: Add type: function file: include/linux/vtime.h )
	-- 14
	++ static inline void vtime_task_switch(struct task_struct *prev) { }


vtime_account_system 	( diff_type: Add type: function file: include/linux/vtime.h )
	-- 15
	++ static inline void vtime_account_system(struct task_struct *tsk) { }


vtime_account_system_irqsafe 	( diff_type: Add type: function file: include/linux/vtime.h )
	-- 16
	++ static inline void vtime_account_system_irqsafe(struct task_struct *tsk) { }


vtime_account_idle 	( diff_type: Add type: prototype file: include/linux/vtime.h )
	-- 10
	++ extern void vtime_account_idle(struct task_struct *tsk);


vtime_account_user 	( diff_type: Add type: prototype file: include/linux/vtime.h )
	-- 11
	++ extern void vtime_account_user(struct task_struct *tsk);


vtime_account 	( diff_type: Add type: function file: include/linux/vtime.h )
	-- 17
	++ static inline void vtime_account(struct task_struct *tsk) { }


irqtime_account_irq 	( diff_type: Add type: function file: include/linux/vtime.h )
	-- 23
	++ static inline void irqtime_account_irq(struct task_struct *tsk) { }


vtime_account_irq_enter 	( diff_type: Add type: function file: include/linux/vtime.h )
	-- 26
	++ static inline void vtime_account_irq_enter(struct task_struct *tsk)


vtime_account_irq_exit 	( diff_type: Add type: function file: include/linux/vtime.h )
	-- 41
	++ static inline void vtime_account_irq_exit(struct task_struct *tsk)


dpm_for_each_dev 	( diff_type: Add type: function file: include/linux/pm.h )
	-- 682
	++ static inline void dpm_for_each_dev(void *data,void (*fn)(struct device *,void *))


PCI_STD_HEADER_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 29
	++ #define PCI_STD_HEADER_SIZEOF 64


PCI_IO_1K_RANGE_MASK 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 130
	++ #define PCI_IO_1K_RANGE_MASK (~0x03UL)


PCI_CAP_ID_SECDEV 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 214
	++ #define PCI_CAP_ID_SECDEV 0x0F


PCI_CAP_ID_SATA 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 217
	++ #define PCI_CAP_ID_SATA 0x12


PCI_CAP_ID_MAX 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 219
	++ #define PCI_CAP_ID_MAX PCI_CAP_ID_AF


PCI_CAP_VPD_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 284
	++ #define PCI_CAP_VPD_SIZEOF 8


PCI_MSI_PENDING_32 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 306
	++ #define PCI_MSI_PENDING_32 16


PCI_MSI_PENDING_64 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 309
	++ #define PCI_MSI_PENDING_64 20


PCI_CAP_MSIX_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 319
	++ #define PCI_CAP_MSIX_SIZEOF 12


PCI_CAP_AF_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 350
	++ #define PCI_CAP_AF_SIZEOF 6


PCI_X_ECC_CSR 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 387
	++ #define PCI_X_ECC_CSR 8


PCI_CAP_PCIX_SIZEOF_V0 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 388
	++ #define PCI_CAP_PCIX_SIZEOF_V0 8


PCI_CAP_PCIX_SIZEOF_V1 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 389
	++ #define PCI_CAP_PCIX_SIZEOF_V1 24


PCI_CAP_PCIX_SIZEOF_V2 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 390
	++ #define PCI_CAP_PCIX_SIZEOF_V2 PCI_CAP_PCIX_SIZEOF_V1


PCI_X_BRIDGE_SSTATUS 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 394
	++ #define PCI_X_BRIDGE_SSTATUS 2


PCI_X_SSTATUS_64BIT 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 395
	++ #define PCI_X_SSTATUS_64BIT 0x0001


PCI_X_SSTATUS_133MHZ 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 396
	++ #define PCI_X_SSTATUS_133MHZ 0x0002


PCI_X_SSTATUS_FREQ 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 397
	++ #define PCI_X_SSTATUS_FREQ 0x03c0


PCI_X_SSTATUS_VERS 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 398
	++ #define PCI_X_SSTATUS_VERS 0x3000


PCI_X_SSTATUS_V1 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 399
	++ #define PCI_X_SSTATUS_V1 0x1000


PCI_X_SSTATUS_V2 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 400
	++ #define PCI_X_SSTATUS_V2 0x2000


PCI_X_SSTATUS_266MHZ 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 401
	++ #define PCI_X_SSTATUS_266MHZ 0x4000


PCI_X_SSTATUS_533MHZ 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 402
	++ #define PCI_X_SSTATUS_533MHZ 0x8000


PCI_X_BRIDGE_STATUS 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 403
	++ #define PCI_X_BRIDGE_STATUS 4


PCI_EXP_LNKCAP_SLS_2_5GB 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 461
	++ #define PCI_EXP_LNKCAP_SLS_2_5GB 0x1


PCI_EXP_LNKCAP_SLS_5_0GB 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 462
	++ #define PCI_EXP_LNKCAP_SLS_5_0GB 0x2


PCI_EXP_LNKCTL_ASPM_L0S 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 474
	++ #define PCI_EXP_LNKCTL_ASPM_L0S 0x01


PCI_EXP_LNKCTL_ASPM_L1 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 475
	++ #define PCI_EXP_LNKCTL_ASPM_L1 0x02


PCI_CAP_EXP_ENDPOINT_SIZEOF_V1 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 496
	++ #define PCI_CAP_EXP_ENDPOINT_SIZEOF_V1 20


PCI_CAP_EXP_ENDPOINT_SIZEOF_V2 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 562
	++ #define PCI_CAP_EXP_ENDPOINT_SIZEOF_V2 44


PCI_EXP_LNKCAP2 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 563
	++ #define PCI_EXP_LNKCAP2 44


PCI_EXP_LNKCAP2_SLS_2_5GB 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 564
	++ #define PCI_EXP_LNKCAP2_SLS_2_5GB 0x02


PCI_EXP_LNKCAP2_SLS_5_0GB 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 565
	++ #define PCI_EXP_LNKCAP2_SLS_5_0GB 0x04


PCI_EXP_LNKCAP2_SLS_8_0GB 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 566
	++ #define PCI_EXP_LNKCAP2_SLS_8_0GB 0x08


PCI_EXP_LNKCAP2_CROSSLINK 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 567
	++ #define PCI_EXP_LNKCAP2_CROSSLINK 0x100


PCI_EXP_LNKSTA2 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 569
	++ #define PCI_EXP_LNKSTA2 50


PCI_EXT_CAP_ID_RCLD 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 581
	++ #define PCI_EXT_CAP_ID_RCLD 0x05


PCI_EXT_CAP_ID_RCILC 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 582
	++ #define PCI_EXT_CAP_ID_RCILC 0x06


PCI_EXT_CAP_ID_RCEC 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 583
	++ #define PCI_EXT_CAP_ID_RCEC 0x07


PCI_EXT_CAP_ID_MFVC 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 584
	++ #define PCI_EXT_CAP_ID_MFVC 0x08


PCI_EXT_CAP_ID_VC9 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 585
	++ #define PCI_EXT_CAP_ID_VC9 0x09


PCI_EXT_CAP_ID_RCRB 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 586
	++ #define PCI_EXT_CAP_ID_RCRB 0x0A


PCI_EXT_CAP_ID_CAC 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 588
	++ #define PCI_EXT_CAP_ID_CAC 0x0C


PCI_EXT_CAP_ID_MRIOV 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 593
	++ #define PCI_EXT_CAP_ID_MRIOV 0x11


PCI_EXT_CAP_ID_MCAST 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 594
	++ #define PCI_EXT_CAP_ID_MCAST 0x12


PCI_EXT_CAP_ID_AMD_XXX 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 596
	++ #define PCI_EXT_CAP_ID_AMD_XXX 0x14


PCI_EXT_CAP_ID_REBAR 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 597
	++ #define PCI_EXT_CAP_ID_REBAR 0x15


PCI_EXT_CAP_ID_DPA 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 598
	++ #define PCI_EXT_CAP_ID_DPA 0x16


PCI_EXT_CAP_ID_TPH 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 599
	++ #define PCI_EXT_CAP_ID_TPH 0x17


PCI_EXT_CAP_ID_SECPCI 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 601
	++ #define PCI_EXT_CAP_ID_SECPCI 0x19


PCI_EXT_CAP_ID_PMUX 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 602
	++ #define PCI_EXT_CAP_ID_PMUX 0x1A


PCI_EXT_CAP_ID_MAX 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 604
	++ #define PCI_EXT_CAP_ID_MAX PCI_EXT_CAP_ID_PASID


PCI_EXT_CAP_DSN_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 606
	++ #define PCI_EXT_CAP_DSN_SIZEOF 12


PCI_EXT_CAP_MCAST_ENDPOINT_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 607
	++ #define PCI_EXT_CAP_MCAST_ENDPOINT_SIZEOF 40


PCI_ERR_UNC_SURPDN 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 613
	++ #define PCI_ERR_UNC_SURPDN 0x00000020


PCI_ERR_UNC_ACSV 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 623
	++ #define PCI_ERR_UNC_ACSV 0x00200000


PCI_ERR_UNC_INTN 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 624
	++ #define PCI_ERR_UNC_INTN 0x00400000


PCI_ERR_UNC_MCBTLP 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 625
	++ #define PCI_ERR_UNC_MCBTLP 0x00800000


PCI_ERR_UNC_ATOMEG 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 626
	++ #define PCI_ERR_UNC_ATOMEG 0x01000000


PCI_ERR_UNC_TLPPRE 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 627
	++ #define PCI_ERR_UNC_TLPPRE 0x02000000


PCI_ERR_COR_ADV_NFAT 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 638
	++ #define PCI_ERR_COR_ADV_NFAT 0x00002000


PCI_ERR_COR_INTERNAL 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 639
	++ #define PCI_ERR_COR_INTERNAL 0x00004000


PCI_ERR_COR_LOG_OVER 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 640
	++ #define PCI_ERR_COR_LOG_OVER 0x00008000


PCI_VC_REG1_EVCC 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 672
	++ #define PCI_VC_REG1_EVCC 0x7


PCI_VC_REG2_32_PHASE 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 674
	++ #define PCI_VC_REG2_32_PHASE 0x2


PCI_VC_REG2_64_PHASE 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 675
	++ #define PCI_VC_REG2_64_PHASE 0x4


PCI_VC_REG2_128_PHASE 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 676
	++ #define PCI_VC_REG2_128_PHASE 0x8


PCI_CAP_VC_BASE_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 682
	++ #define PCI_CAP_VC_BASE_SIZEOF 0x10


PCI_CAP_VC_PER_VC_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 683
	++ #define PCI_CAP_VC_PER_VC_SIZEOF 0x0C


PCI_EXT_CAP_PWR_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 696
	++ #define PCI_EXT_CAP_PWR_SIZEOF 16


PCI_VNDR_HEADER 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 699
	++ #define PCI_VNDR_HEADER 4


PCI_VNDR_HEADER_ID 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 700
	++ #define PCI_VNDR_HEADER_ID(x) ((x) & 0xffff)


PCI_VNDR_HEADER_REV 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 701
	++ #define PCI_VNDR_HEADER_REV(x) (((x) >> 16) & 0xf)


PCI_VNDR_HEADER_LEN 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 702
	++ #define PCI_VNDR_HEADER_LEN(x) (((x) >> 20) & 0xfff)


HT_CAP_SIZEOF_LONG 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 735
	++ #define HT_CAP_SIZEOF_LONG 28


HT_CAP_SIZEOF_SHORT 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 736
	++ #define HT_CAP_SIZEOF_SHORT 24


PCI_EXT_CAP_ARI_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 747
	++ #define PCI_EXT_CAP_ARI_SIZEOF 8


PCI_EXT_CAP_ATS_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 757
	++ #define PCI_EXT_CAP_ATS_SIZEOF 8


PCI_EXT_CAP_PRI_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 769
	++ #define PCI_EXT_CAP_PRI_SIZEOF 16


PCI_EXT_CAP_PASID_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 779
	++ #define PCI_EXT_CAP_PASID_SIZEOF 8


PCI_EXT_CAP_SRIOV_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 811
	++ #define PCI_EXT_CAP_SRIOV_SIZEOF 64


PCI_EXT_CAP_LTR_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 818
	++ #define PCI_EXT_CAP_LTR_SIZEOF 8


PCI_ACS_EGRESS_BITS 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 829
	++ #define PCI_ACS_EGRESS_BITS 0x05


PCI_VSEC_HDR 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 833
	++ #define PCI_VSEC_HDR 4


PCI_VSEC_HDR_LEN_SHIFT 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 834
	++ #define PCI_VSEC_HDR_LEN_SHIFT 20


PCI_SATA_REGS 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 837
	++ #define PCI_SATA_REGS 4


PCI_SATA_REGS_MASK 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 838
	++ #define PCI_SATA_REGS_MASK 0xF


PCI_SATA_REGS_INLINE 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 839
	++ #define PCI_SATA_REGS_INLINE 0xF


PCI_SATA_SIZEOF_SHORT 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 840
	++ #define PCI_SATA_SIZEOF_SHORT 8


PCI_SATA_SIZEOF_LONG 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 841
	++ #define PCI_SATA_SIZEOF_LONG 16


PCI_REBAR_CTRL 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 844
	++ #define PCI_REBAR_CTRL 8


PCI_REBAR_CTRL_NBAR_MASK 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 845
	++ #define PCI_REBAR_CTRL_NBAR_MASK (7 << 5)


PCI_REBAR_CTRL_NBAR_SHIFT 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 846
	++ #define PCI_REBAR_CTRL_NBAR_SHIFT 5


PCI_DPA_CAP 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 849
	++ #define PCI_DPA_CAP 4


PCI_DPA_CAP_SUBSTATE_MASK 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 850
	++ #define PCI_DPA_CAP_SUBSTATE_MASK 0x1F


PCI_DPA_BASE_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 851
	++ #define PCI_DPA_BASE_SIZEOF 16


PCI_TPH_CAP 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 854
	++ #define PCI_TPH_CAP 4


PCI_TPH_CAP_LOC_MASK 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 855
	++ #define PCI_TPH_CAP_LOC_MASK 0x600


PCI_TPH_LOC_NONE 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 856
	++ #define PCI_TPH_LOC_NONE 0x000


PCI_TPH_LOC_CAP 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 857
	++ #define PCI_TPH_LOC_CAP 0x200


PCI_TPH_LOC_MSIX 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 858
	++ #define PCI_TPH_LOC_MSIX 0x400


PCI_TPH_CAP_ST_MASK 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 859
	++ #define PCI_TPH_CAP_ST_MASK 0x07FF0000


PCI_TPH_CAP_ST_SHIFT 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 860
	++ #define PCI_TPH_CAP_ST_SHIFT 16


PCI_TPH_BASE_SIZEOF 	( diff_type: Add type: macro file: include/uapi/linux/pci_regs.h )
	-- 861
	++ #define PCI_TPH_BASE_SIZEOF 12


VM_NONE 	( diff_type: Add type: macro file: include/linux/mm.h )
	-- 73
	++ #define VM_NONE 0x00000000


VM_ARCH_1 	( diff_type: Add type: macro file: include/linux/mm.h )
	-- 103
	++ #define VM_ARCH_1 0x01000000


VM_DONTDUMP 	( diff_type: Add type: macro file: include/linux/mm.h )
	-- 104
	++ #define VM_DONTDUMP 0x04000000


VM_PAT 	( diff_type: Add type: macro file: include/linux/mm.h )
	-- 112
	++ # define VM_PAT VM_ARCH_1


FAULT_FLAG_TRIED 	( diff_type: Add type: macro file: include/linux/mm.h )
	-- 164
	++ #define FAULT_FLAG_TRIED 0x40


set_freepage_migratetype 	( diff_type: Add type: function file: include/linux/mm.h )
	-- 242
	++ static inline void set_freepage_migratetype(struct page *page,int migratetype)


get_freepage_migratetype 	( diff_type: Add type: function file: include/linux/mm.h )
	-- 248
	++ static inline int get_freepage_migratetype(struct page *page)


page_xchg_last_nid 	( diff_type: Add type: function file: include/linux/mm.h )
	-- 710
	++ static inline int page_xchg_last_nid(struct page *page,int nid)


page_last_nid 	( diff_type: Add type: function file: include/linux/mm.h )
	-- 715
	++ static inline int page_last_nid(struct page *page)


reset_page_last_nid 	( diff_type: Add type: function file: include/linux/mm.h )
	-- 720
	++ static inline void reset_page_last_nid(struct page *page)


__page_file_mapping 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 839
	++ extern struct address_space *__page_file_mapping(struct page *);


page_file_mapping 	( diff_type: Add type: function file: include/linux/mm.h )
	-- 842
	++ struct address_space *page_file_mapping(struct page *page)


__page_file_index 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 866
	++ extern pgoff_t __page_file_index(struct page *page);


page_file_index 	( diff_type: Add type: function file: include/linux/mm.h )
	-- 872
	++ static inline pgoff_t page_file_index(struct page *page)


get_kernel_pages 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1053
	++ int get_kernel_pages(const struct kvec *iov,int nr_pages,int write,struct page **pages);


get_kernel_page 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1055
	++ int get_kernel_page(unsigned long start,int write,struct page **pages);


change_protection 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1109
	++ extern unsigned long change_protection(struct vm_area_struct *vma,unsigned long start,unsigned long end, pgprot_t newprot,int dirty_accountable, int prot_numa);


zone_pcp_reset 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1397
	++ extern void zone_pcp_reset(struct zone *zone);


vma_interval_tree_insert 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1404
	++ void vma_interval_tree_insert(struct vm_area_struct *node,struct rb_root *root);


vma_interval_tree_insert_after 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1406
	++ void vma_interval_tree_insert_after(struct vm_area_struct *node,struct vm_area_struct *prev,struct rb_root *root);


vma_interval_tree_remove 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1409
	++ void vma_interval_tree_remove(struct vm_area_struct *node,struct rb_root *root);


vma_interval_tree_iter_first 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1411
	++ struct vm_area_struct *vma_interval_tree_iter_first(struct rb_root *root,unsigned long start, unsigned long last);


vma_interval_tree_iter_next 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1413
	++ struct vm_area_struct *vma_interval_tree_iter_next(struct vm_area_struct *node,unsigned long start, unsigned long last);


vma_interval_tree_foreach 	( diff_type: Add type: macro file: include/linux/mm.h )
	-- 1416
	++ #define vma_interval_tree_foreach(vma,root,start,last) for (vma = vma_interval_tree_iter_first(root, start, last); vma; vma = vma_interval_tree_iter_next(vma, start, last))


anon_vma_interval_tree_insert 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1426
	++ void anon_vma_interval_tree_insert(struct anon_vma_chain *node,struct rb_root *root);


anon_vma_interval_tree_remove 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1428
	++ void anon_vma_interval_tree_remove(struct anon_vma_chain *node,struct rb_root *root);


anon_vma_interval_tree_iter_first 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1430
	++ struct anon_vma_chain *anon_vma_interval_tree_iter_first(


anon_vma_interval_tree_iter_next 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1432
	++ struct anon_vma_chain *anon_vma_interval_tree_iter_next(


anon_vma_interval_tree_verify 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1435
	++ void anon_vma_interval_tree_verify(struct anon_vma_chain *node);


anon_vma_interval_tree_foreach 	( diff_type: Add type: macro file: include/linux/mm.h )
	-- 1438
	++ #define anon_vma_interval_tree_foreach(avc,root,start,last) for (avc = anon_vma_interval_tree_iter_first(root, start, last); avc; avc = anon_vma_interval_tree_iter_next(avc, start, last))


vm_unmapped_area_info 	( diff_type: Add type: struct file: include/linux/mm.h )
	-- 1490
	++ struct vm_unmapped_area_info { #define VM_UNMAPPED_AREA_TOPDOWN 1 unsigned long flags; unsigned long length; unsigned long low_limit; unsigned long high_limit; unsigned long align_mask; unsigned long align_offset; };


unmapped_area 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1500
	++ extern unsigned long unmapped_area(struct vm_unmapped_area_info *info);


unmapped_area_topdown 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1501
	++ extern unsigned long unmapped_area_topdown(struct vm_unmapped_area_info *info);


vm_unmapped_area 	( diff_type: Add type: function file: include/linux/mm.h )
	-- 1513
	++ vm_unmapped_area(struct vm_unmapped_area_info *info)


filemap_page_mkwrite 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1528
	++ extern int filemap_page_mkwrite(struct vm_area_struct *vma,struct vm_fault *vmf);


change_prot_numa 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1614
	++ unsigned long change_prot_numa(struct vm_area_struct *vma,unsigned long start, unsigned long end);


vm_iomap_memory 	( diff_type: Add type: prototype file: include/linux/mm.h )
	-- 1626
	++ int vm_iomap_memory(struct vm_area_struct *vma,phys_addr_t start,unsigned long len);


FOLL_NUMA 	( diff_type: Add type: macro file: include/linux/mm.h )
	-- 1641
	++ #define FOLL_NUMA 0x200


MSG_FASTOPEN 	( diff_type: Add type: macro file: include/linux/socket.h )
	-- 254
	++ #define MSG_FASTOPEN 0x20000000


KERNEL_READ 	( diff_type: Add type: macro file: include/linux/fs.h )
	-- 183
	++ #define KERNEL_READ (READ|REQ_KERNEL)


KERNEL_WRITE 	( diff_type: Add type: macro file: include/linux/fs.h )
	-- 184
	++ #define KERNEL_WRITE (WRITE|REQ_KERNEL)


SB_FREEZE_LEVELS 	( diff_type: Add type: macro file: include/linux/fs.h )
	-- 1219
	++ #define SB_FREEZE_LEVELS (SB_FREEZE_COMPLETE - 1)


sb_writers 	( diff_type: Add type: struct file: include/linux/fs.h )
	-- 1221
	++ struct sb_writers { struct percpu_counter counter[SB_FREEZE_LEVELS]; wait_queue_head_t wait; int frozen; wait_queue_head_t wait_unfrozen; struct lockdep_map lock_map[SB_FREEZE_LEVELS]; };


__sb_end_write 	( diff_type: Add type: prototype file: include/linux/fs.h )
	-- 1335
	++ void __sb_end_write(struct super_block *sb,int level);


__sb_start_write 	( diff_type: Add type: prototype file: include/linux/fs.h )
	-- 1336
	++ int __sb_start_write(struct super_block *sb,int level,bool wait);


sb_end_write 	( diff_type: Add type: function file: include/linux/fs.h )
	-- 1345
	++ static inline void sb_end_write(struct super_block *sb)


sb_end_pagefault 	( diff_type: Add type: function file: include/linux/fs.h )
	-- 1357
	++ static inline void sb_end_pagefault(struct super_block *sb)


sb_end_intwrite 	( diff_type: Add type: function file: include/linux/fs.h )
	-- 1369
	++ static inline void sb_end_intwrite(struct super_block *sb)


sb_start_write 	( diff_type: Add type: function file: include/linux/fs.h )
	-- 1393
	++ static inline void sb_start_write(struct super_block *sb)


sb_start_write_trylock 	( diff_type: Add type: function file: include/linux/fs.h )
	-- 1398
	++ static inline int sb_start_write_trylock(struct super_block *sb)


sb_start_pagefault 	( diff_type: Add type: function file: include/linux/fs.h )
	-- 1422
	++ static inline void sb_start_pagefault(struct super_block *sb)


sb_start_intwrite 	( diff_type: Add type: function file: include/linux/fs.h )
	-- 1440
	++ static inline void sb_start_intwrite(struct super_block *sb)


filename 	( diff_type: Add type: struct file: include/linux/fs.h )
	-- 1990
	++ struct filename { const char *name; const __user char *uptr; struct audit_names *aname; bool separate; };


vfs_truncate 	( diff_type: Add type: prototype file: include/linux/fs.h )
	-- 1997
	++ extern long vfs_truncate(struct path *,loff_t);


file_open_name 	( diff_type: Add type: prototype file: include/linux/fs.h )
	-- 2004
	++ extern struct file *file_open_name(struct filename *,int,umode_t);


finish_open 	( diff_type: Add type: prototype file: include/linux/fs.h )
	-- 2017
	++ extern int finish_open(struct file *file,struct dentry *dentry,int (*open)(struct inode *, struct file *),int *opened);


finish_no_open 	( diff_type: Add type: prototype file: include/linux/fs.h )
	-- 2020
	++ extern int finish_no_open(struct file *file,struct dentry *dentry);


final_putname 	( diff_type: Add type: prototype file: include/linux/fs.h )
	-- 2032
	++ extern void final_putname(struct filename *name);


iterate_bdevs 	( diff_type: Add type: function file: include/linux/fs.h )
	-- 2074
	++ static inline void iterate_bdevs(void (*f)(struct block_device *,void *),void *arg)


generic_file_remap_pages 	( diff_type: Add type: prototype file: include/linux/fs.h )
	-- 2359
	++ extern int generic_file_remap_pages(struct vm_area_struct *,unsigned long addr,unsigned long size, pgoff_t pgoff);


compat_siginfo 	( diff_type: Add type: struct file: arch/x86/include/asm/compat.h )
	-- 133
	++ typedef struct compat_siginfo { int si_signo; int si_errno; int si_code; union { int _pad[128/sizeof(int) - 3]; unsigned int _pid; unsigned int _uid; } _kill; compat_timer_t _tid; int _overrun; compat_sigval_t _sigval; int _sys_private; int _overrun_incr; } _timer; unsigned int _pid; unsigned int _uid; compat_sigval_t _sigval; } _rt; unsigned int _pid; unsigned int _uid; int _status; compat_clock_t _utime; compat_clock_t _stime; } _sigchld; unsigned int _pid; unsigned int _uid; int _status; compat_s64 _utime; compat_s64 _stime; } _sigchld_x32; unsigned int _addr; } _sigfault; int _band; int _fd; } _sigpoll; struct { unsigned int _call_addr; int _syscall; unsigned int _arch; } _sigsys; } _sifields; } compat_siginfo_t;


compat_siginfo_t 	( diff_type: Add type: struct file: arch/x86/include/asm/compat.h )
	-- 133
	++ typedef struct compat_siginfo { int si_signo; int si_errno; int si_code; union { int _pad[128/sizeof(int) - 3]; unsigned int _pid; unsigned int _uid; } _kill; compat_timer_t _tid; int _overrun; compat_sigval_t _sigval; int _sys_private; int _overrun_incr; } _timer; unsigned int _pid; unsigned int _uid; compat_sigval_t _sigval; } _rt; unsigned int _pid; unsigned int _uid; int _status; compat_clock_t _utime; compat_clock_t _stime; } _sigchld; unsigned int _pid; unsigned int _uid; int _status; compat_s64 _utime; compat_s64 _stime; } _sigchld_x32; unsigned int _addr; } _sigfault; int _band; int _fd; } _sigpoll; struct { unsigned int _call_addr; int _syscall; unsigned int _arch; } _sigsys; } _sifields; } compat_siginfo_t;


__ARCH_HAS_SA_RESTORER 	( diff_type: Add type: macro file: arch/x86/include/asm/signal.h )
	-- 35
	++ #define __ARCH_HAS_SA_RESTORER


MPT3SAS_MINOR 	( diff_type: Add type: macro file: include/linux/miscdevice.h )
	-- 37
	++ #define MPT3SAS_MINOR 222


MISC_MCELOG_MINOR 	( diff_type: Add type: macro file: include/linux/miscdevice.h )
	-- 39
	++ #define MISC_MCELOG_MINOR 227


sg_nents 	( diff_type: Add type: prototype file: include/linux/scatterlist.h )
	-- 204
	++ int sg_nents(struct scatterlist *sg);


sg_alloc_table_from_pages 	( diff_type: Add type: prototype file: include/linux/scatterlist.h )
	-- 218
	++ int sg_alloc_table_from_pages(struct sg_table *sgt,struct page **pages, unsigned int n_pages,unsigned long offset, unsigned long size,gfp_t gfp_mask);


netns_nf_frag 	( diff_type: Add type: struct file: include/net/netns/ipv6.h )
	-- 76
	++ struct netns_nf_frag { struct netns_sysctl_ipv6 sysctl; struct netns_frags frags; };


__NETNS_SCTP_H__ 	( diff_type: Add type: macro file: include/net/netns/sctp.h )
	-- 2
	++ #define __NETNS_SCTP_H__


netns_sctp 	( diff_type: Add type: struct file: include/net/netns/sctp.h )
	-- 9
	++ struct netns_sctp { DEFINE_SNMP_STAT(struct sctp_mib, sctp_statistics); struct proc_dir_entry *proc_net_sctp; struct ctl_table_header *sysctl_header; struct sock *ctl_sock; struct list_head local_addr_list; struct list_head addr_waitq; struct timer_list addr_wq_timer; struct list_head auto_asconf_splist; spinlock_t addr_wq_lock; spinlock_t local_addr_lock; unsigned int rto_initial; unsigned int rto_min; unsigned int rto_max; int rto_alpha; int rto_beta; int max_burst; int cookie_preserve_enable; char *sctp_hmac_alg; unsigned int valid_cookie_life; unsigned int sack_timeout; unsigned int hb_interval; int max_retrans_association; int max_retrans_path; int max_retrans_init; int pf_retrans; int sndbuf_policy; int rcvbuf_policy; int default_auto_asconf; int addip_enable; int addip_noauth; int prsctp_enable; int auth_enable; int scope_policy; int rwnd_upd_shift; unsigned long max_autoclose; };


nf_proto_net 	( diff_type: Add type: struct file: include/net/netns/conntrack.h )
	-- 12
	++ struct nf_proto_net { struct ctl_table_header *ctl_table_header; struct ctl_table *ctl_table; struct ctl_table_header *ctl_compat_header; struct ctl_table *ctl_compat_table; unsigned int users; };


nf_generic_net 	( diff_type: Add type: struct file: include/net/netns/conntrack.h )
	-- 24
	++ struct nf_generic_net { struct nf_proto_net pn; unsigned int timeout; };


nf_tcp_net 	( diff_type: Add type: struct file: include/net/netns/conntrack.h )
	-- 29
	++ struct nf_tcp_net { struct nf_proto_net pn; unsigned int timeouts[TCP_CONNTRACK_TIMEOUT_MAX]; unsigned int tcp_loose; unsigned int tcp_be_liberal; unsigned int tcp_max_retrans; };


udp_conntrack 	( diff_type: Add type: enum file: include/net/netns/conntrack.h )
	-- 37
	++ enum udp_conntrack { UDP_CT_UNREPLIED, UDP_CT_REPLIED, UDP_CT_MAX };


nf_udp_net 	( diff_type: Add type: struct file: include/net/netns/conntrack.h )
	-- 43
	++ struct nf_udp_net { struct nf_proto_net pn; unsigned int timeouts[UDP_CT_MAX]; };


nf_icmp_net 	( diff_type: Add type: struct file: include/net/netns/conntrack.h )
	-- 48
	++ struct nf_icmp_net { struct nf_proto_net pn; unsigned int timeout; };


nf_ip_net 	( diff_type: Add type: struct file: include/net/netns/conntrack.h )
	-- 53
	++ struct nf_ip_net { struct nf_generic_net generic; struct nf_tcp_net tcp; struct nf_udp_net udp; struct nf_icmp_net icmp; struct nf_icmp_net icmpv6; struct ctl_table_header *ctl_table_header; struct ctl_table *ctl_table; };


_LINUX_NSPROXY_H 	( diff_type: Add type: macro file: include/linux/nsproxy.h )
	-- 2
	++ #define _LINUX_NSPROXY_H


nsproxy 	( diff_type: Add type: struct file: include/linux/nsproxy.h )
	-- 25
	++ struct nsproxy { atomic_t count; struct uts_namespace *uts_ns; struct ipc_namespace *ipc_ns; struct mnt_namespace *mnt_ns; struct pid_namespace *pid_ns; struct net *net_ns; };


task_nsproxy 	( diff_type: Add type: function file: include/linux/nsproxy.h )
	-- 60
	++ static inline struct nsproxy *task_nsproxy(struct task_struct *tsk)


copy_namespaces 	( diff_type: Add type: prototype file: include/linux/nsproxy.h )
	-- 65
	++ int copy_namespaces(unsigned long flags,struct task_struct *tsk);


exit_task_namespaces 	( diff_type: Add type: prototype file: include/linux/nsproxy.h )
	-- 66
	++ void exit_task_namespaces(struct task_struct *tsk);


switch_task_namespaces 	( diff_type: Add type: prototype file: include/linux/nsproxy.h )
	-- 67
	++ void switch_task_namespaces(struct task_struct *tsk,struct nsproxy *new);


free_nsproxy 	( diff_type: Add type: prototype file: include/linux/nsproxy.h )
	-- 68
	++ void free_nsproxy(struct nsproxy *ns);


unshare_nsproxy_namespaces 	( diff_type: Add type: prototype file: include/linux/nsproxy.h )
	-- 69
	++ int unshare_nsproxy_namespaces(unsigned long,struct nsproxy **,struct cred *, struct fs_struct *);


nsproxy_cache_init 	( diff_type: Add type: prototype file: include/linux/nsproxy.h )
	-- 71
	++ int __init nsproxy_cache_init(void);


put_nsproxy 	( diff_type: Add type: function file: include/linux/nsproxy.h )
	-- 73
	++ static inline void put_nsproxy(struct nsproxy *ns)


get_nsproxy 	( diff_type: Add type: function file: include/linux/nsproxy.h )
	-- 80
	++ static inline void get_nsproxy(struct nsproxy *ns)


IS_SUBSYS_ENABLED 	( diff_type: Add type: macro file: include/linux/cgroup.h )
	-- 508
	++ #undef IS_SUBSYS_ENABLED


cgroup_for_each_child 	( diff_type: Add type: macro file: include/linux/cgroup.h )
	-- 553
	++ #define cgroup_for_each_child(pos,cgroup) list_for_each_entry_rcu(pos, &(cgroup)->children, sibling)


cgroup_next_descendant_pre 	( diff_type: Add type: prototype file: include/linux/cgroup.h )
	-- 556
	++ struct cgroup *cgroup_next_descendant_pre(struct cgroup *pos,struct cgroup *cgroup);


cgroup_for_each_descendant_pre 	( diff_type: Add type: macro file: include/linux/cgroup.h )
	-- 613
	++ #define cgroup_for_each_descendant_pre(pos,cgroup) for (pos = cgroup_next_descendant_pre(NULL, (cgroup)); (pos); pos = cgroup_next_descendant_pre((pos), (cgroup)))


cgroup_next_descendant_post 	( diff_type: Add type: prototype file: include/linux/cgroup.h )
	-- 617
	++ struct cgroup *cgroup_next_descendant_post(struct cgroup *pos,struct cgroup *cgroup);


cgroup_for_each_descendant_post 	( diff_type: Add type: macro file: include/linux/cgroup.h )
	-- 629
	++ #define cgroup_for_each_descendant_post(pos,cgroup) for (pos = cgroup_next_descendant_post(NULL, (cgroup)); (pos); pos = cgroup_next_descendant_post((pos), (cgroup)))


PACKET_TX_HAS_OFF 	( diff_type: Add type: macro file: include/uapi/linux/if_packet.h )
	-- 53
	++ #define PACKET_TX_HAS_OFF 19


RCU_BATCH_INIT 	( diff_type: Add type: macro file: include/linux/srcu.h )
	-- 45
	++ #define RCU_BATCH_INIT(name) { NULL,&(name.head) }


__SRCU_DEP_MAP_INIT 	( diff_type: Add type: macro file: include/linux/srcu.h )
	-- 82
	++ #define __SRCU_DEP_MAP_INIT(srcu_name)


process_srcu 	( diff_type: Add type: prototype file: include/linux/srcu.h )
	-- 85
	++ void process_srcu(struct work_struct *work);


__SRCU_STRUCT_INIT 	( diff_type: Add type: macro file: include/linux/srcu.h )
	-- 87
	++ #define __SRCU_STRUCT_INIT(name) { .completed = -300, .per_cpu_ref = &name##_srcu_array, .queue_lock = __SPIN_LOCK_UNLOCKED(name.queue_lock), .running = false, .batch_queue = RCU_BATCH_INIT(name.batch_queue), .batch_check0 = RCU_BATCH_INIT(name.batch_check0), .batch_check1 = RCU_BATCH_INIT(name.batch_check1), .batch_done = RCU_BATCH_INIT(name.batch_done), .work = __DELAYED_WORK_INITIALIZER(name.work, process_srcu, 0), __SRCU_DEP_MAP_INIT(name) }


DEFINE_SRCU 	( diff_type: Add type: macro file: include/linux/srcu.h )
	-- 105
	++ #define DEFINE_SRCU(name) static DEFINE_PER_CPU(struct srcu_struct_array, name##_srcu_array); struct srcu_struct name = __SRCU_STRUCT_INIT(name);


DEFINE_STATIC_SRCU 	( diff_type: Add type: macro file: include/linux/srcu.h )
	-- 109
	++ #define DEFINE_STATIC_SRCU(name) static DEFINE_PER_CPU(struct srcu_struct_array, name##_srcu_array); static struct srcu_struct name = __SRCU_STRUCT_INIT(name);


_UAPI_LINUX_RANDOM_H 	( diff_type: Add type: macro file: include/uapi/linux/random.h )
	-- 8
	++ #define _UAPI_LINUX_RANDOM_H


_UAPI_LINUX_NET_H 	( diff_type: Add type: macro file: include/uapi/linux/net.h )
	-- 19
	++ #define _UAPI_LINUX_NET_H


alternatives_enable_smp 	( diff_type: Add type: function file: arch/x86/include/asm/alternative.h )
	-- 71
	++ static inline void alternatives_enable_smp(void) {}


OLDINSTR 	( diff_type: Add type: macro file: arch/x86/include/asm/alternative.h )
	-- 78
	++ #define OLDINSTR(oldinstr) "661:\n\t" oldinstr "\n662:\n"


b_replacement 	( diff_type: Add type: macro file: arch/x86/include/asm/alternative.h )
	-- 80
	++ #define b_replacement(number) "663"#number


e_replacement 	( diff_type: Add type: macro file: arch/x86/include/asm/alternative.h )
	-- 81
	++ #define e_replacement(number) "664"#number


alt_slen 	( diff_type: Add type: macro file: arch/x86/include/asm/alternative.h )
	-- 83
	++ #define alt_slen "662b-661b"


alt_rlen 	( diff_type: Add type: macro file: arch/x86/include/asm/alternative.h )
	-- 84
	++ #define alt_rlen(number) e_replacement(number)"f-"b_replacement(number)"f"


ALTINSTR_ENTRY 	( diff_type: Add type: macro file: arch/x86/include/asm/alternative.h )
	-- 86
	++ #define ALTINSTR_ENTRY(feature,number) " .long 661b - .\n" /* label */ " .long " b_replacement(number)"f - .\n" /* new instruction */ " .word " __stringify(feature) "\n" /* feature bit */ " .byte " alt_slen "\n" /* source len */ " .byte " alt_rlen(number) "\n" /* replacement len */


DISCARD_ENTRY 	( diff_type: Add type: macro file: arch/x86/include/asm/alternative.h )
	-- 93
	++ #define DISCARD_ENTRY(number)


ALTINSTR_REPLACEMENT 	( diff_type: Add type: macro file: arch/x86/include/asm/alternative.h )
	-- 96
	++ #define ALTINSTR_REPLACEMENT(newinstr,feature,number)


ALTERNATIVE_2 	( diff_type: Add type: macro file: arch/x86/include/asm/alternative.h )
	-- 112
	++ #define ALTERNATIVE_2(oldinstr,newinstr1,feature1,newinstr2,feature2) OLDINSTR(oldinstr) ".pushsection .altinstructions,\"a\"\n" ALTINSTR_ENTRY(feature1, 1) ALTINSTR_ENTRY(feature2, 2) ".popsection\n" ".pushsection .discard,\"aw\",@progbits\n" DISCARD_ENTRY(1) DISCARD_ENTRY(2) ".popsection\n" ".pushsection .altinstr_replacement, \"ax\"\n" ALTINSTR_REPLACEMENT(newinstr1, feature1, 1) ALTINSTR_REPLACEMENT(newinstr2, feature2, 2) ".popsection"


alternative_call_2 	( diff_type: Add type: macro file: arch/x86/include/asm/alternative.h )
	-- 179
	++ #define alternative_call_2(oldfunc,newfunc1,feature1,newfunc2,feature2, output, input...) asm volatile (ALTERNATIVE_2("call %P[old]", "call %P[new1]", feature1, "call %P[new2]", feature2) : output : [old] "i" (oldfunc), [new1] "i" (newfunc1), [new2] "i" (newfunc2), ## input)


set_bit_le 	( diff_type: Add type: function file: include/asm-generic/bitops/le.h )
	-- 57
	++ static inline void set_bit_le(int nr,void *addr)


clear_bit_le 	( diff_type: Add type: function file: include/asm-generic/bitops/le.h )
	-- 62
	++ static inline void clear_bit_le(int nr,void *addr)


find_vm_area 	( diff_type: Add type: prototype file: include/linux/vmalloc.h )
	-- 96
	++ extern struct vm_struct *find_vm_area(const void *addr);


_ASM_X86_SMAP_H 	( diff_type: Add type: macro file: arch/x86/include/asm/smap.h )
	-- 14
	++ #define _ASM_X86_SMAP_H


__ASM_CLAC 	( diff_type: Add type: macro file: arch/x86/include/asm/smap.h )
	-- 21
	++ #define __ASM_CLAC .byte 0x0f,0x01,0xca


__ASM_STAC 	( diff_type: Add type: macro file: arch/x86/include/asm/smap.h )
	-- 22
	++ #define __ASM_STAC .byte 0x0f,0x01,0xcb


ASM_CLAC 	( diff_type: Add type: macro file: arch/x86/include/asm/smap.h )
	-- 84
	++ #define ASM_CLAC


ASM_STAC 	( diff_type: Add type: macro file: arch/x86/include/asm/smap.h )
	-- 85
	++ #define ASM_STAC


clac 	( diff_type: Add type: function file: arch/x86/include/asm/smap.h )
	-- 81
	++ static inline void clac(void) { }


stac 	( diff_type: Add type: function file: arch/x86/include/asm/smap.h )
	-- 82
	++ static inline void stac(void) { }


copy_user_enhanced_fast_string 	( diff_type: Add type: prototype file: arch/x86/include/asm/uaccess_64.h )
	-- 20
	++ copy_user_enhanced_fast_string(void *to,const void *from,unsigned len);

